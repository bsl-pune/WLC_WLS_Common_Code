
C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_410464/Final_WLC_v3.00.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 d0 1f 	jmp	0x3fa0	; 0x3fa0 <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 a8 1f 	jmp	0x3f50	; 0x3f50 <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 7a 1f 	jmp	0x3ef4	; 0x3ef4 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 54 1f 	jmp	0x3ea8	; 0x3ea8 <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	61 20       	and	r6, r1

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	ea ee       	ldi	r30, 0xEA	; 234
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	f0 e7       	ldi	r31, 0x70	; 112
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a0 31       	cpi	r26, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a0 e1       	ldi	r26, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	a6 3b       	cpi	r26, 0xB6	; 182
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 78 37 	call	0x6ef0	; 0x6ef0 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 83 23 	call	0x4706	; 0x4706 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 b7 37 	jmp	0x6f6e	; 0x6f6e <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <VerDisp()>:
VerDisp():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:91
  } 
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     2f4:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:92
}
     2f8:	08 95       	ret

000002fa <Alternate_Display()>:
Alternate_Display():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:67
bool Alternate_Display_Flag=0;
bool select_product_type=0;

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     2fa:	80 91 74 28 	lds	r24, 0x2874	; 0x802874 <Alternate_Display_Flag>
     2fe:	88 23       	and	r24, r24
     300:	19 f0       	breq	.+6      	; 0x308 <Alternate_Display()+0xe>
     302:	10 92 74 28 	sts	0x2874, r1	; 0x802874 <Alternate_Display_Flag>
     306:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:68
  else                       Alternate_Display_Flag=1;
     308:	81 e0       	ldi	r24, 0x01	; 1
     30a:	80 93 74 28 	sts	0x2874, r24	; 0x802874 <Alternate_Display_Flag>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:69
}
     30e:	08 95       	ret

00000310 <Bclass::SET_CHANGE_UP() [clone .constprop.67]>:
SET_CHANGE_UP():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:73
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     310:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
     314:	88 23       	and	r24, r24
     316:	09 f4       	brne	.+2      	; 0x31a <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0xa>
     318:	5e c0       	rjmp	.+188    	; 0x3d6 <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0xc6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:75
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     31a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     31e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	91 05       	cpc	r25, r1
     326:	71 f4       	brne	.+28     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x34>
     328:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
     32c:	22 23       	and	r18, r18
     32e:	51 f0       	breq	.+20     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x34>
     330:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
     334:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
     338:	2f 5f       	subi	r18, 0xFF	; 255
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	20 93 31 29 	sts	0x2931, r18	; 0x802931 <SET_LONG_VALUE+0x26>
     340:	30 93 32 29 	sts	0x2932, r19	; 0x802932 <SET_LONG_VALUE+0x27>
     344:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
     348:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
     34c:	25 3d       	cpi	r18, 0xD5	; 213
     34e:	31 05       	cpc	r19, r1
     350:	a4 f0       	brlt	.+40     	; 0x37a <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x6a>
     352:	24 ed       	ldi	r18, 0xD4	; 212
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	20 93 31 29 	sts	0x2931, r18	; 0x802931 <SET_LONG_VALUE+0x26>
     35a:	30 93 32 29 	sts	0x2932, r19	; 0x802932 <SET_LONG_VALUE+0x27>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:76
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     35e:	20 91 33 29 	lds	r18, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
     362:	30 91 34 29 	lds	r19, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
     366:	25 3d       	cpi	r18, 0xD5	; 213
     368:	31 05       	cpc	r19, r1
     36a:	cc f0       	brlt	.+50     	; 0x39e <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x8e>
     36c:	84 ed       	ldi	r24, 0xD4	; 212
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 93 33 29 	sts	0x2933, r24	; 0x802933 <SET_LONG_VALUE+0x28>
     374:	90 93 34 29 	sts	0x2934, r25	; 0x802934 <SET_LONG_VALUE+0x29>
     378:	08 95       	ret
     37a:	88 30       	cpi	r24, 0x08	; 8
     37c:	91 05       	cpc	r25, r1
     37e:	79 f7       	brne	.-34     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x4e>
     380:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
     384:	22 23       	and	r18, r18
     386:	59 f3       	breq	.-42     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x4e>
     388:	20 91 33 29 	lds	r18, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
     38c:	30 91 34 29 	lds	r19, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	20 93 33 29 	sts	0x2933, r18	; 0x802933 <SET_LONG_VALUE+0x28>
     398:	30 93 34 29 	sts	0x2934, r19	; 0x802934 <SET_LONG_VALUE+0x29>
     39c:	e0 cf       	rjmp	.-64     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0x4e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:79
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	fc 01       	movw	r30, r24
     3a4:	e5 5f       	subi	r30, 0xF5	; 245
     3a6:	f6 4d       	sbci	r31, 0xD6	; 214
     3a8:	20 81       	ld	r18, Z
     3aa:	31 81       	ldd	r19, Z+1	; 0x01
     3ac:	2f 5f       	subi	r18, 0xFF	; 255
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	20 83       	st	Z, r18
     3b2:	31 83       	std	Z+1, r19	; 0x01
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:80
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3b4:	dc 01       	movw	r26, r24
     3b6:	ae 55       	subi	r26, 0x5E	; 94
     3b8:	bf 44       	sbci	r27, 0x4F	; 79
     3ba:	4d 91       	ld	r20, X+
     3bc:	5c 91       	ld	r21, X
     3be:	42 17       	cp	r20, r18
     3c0:	53 07       	cpc	r21, r19
     3c2:	0c f0       	brlt	.+2      	; 0x3c6 <Bclass::SET_CHANGE_UP() [clone .constprop.67]+0xb6>
     3c4:	8e c0       	rjmp	.+284    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     3c6:	84 58       	subi	r24, 0x84	; 132
     3c8:	9f 44       	sbci	r25, 0x4F	; 79
     3ca:	dc 01       	movw	r26, r24
     3cc:	8d 91       	ld	r24, X+
     3ce:	9c 91       	ld	r25, X
     3d0:	80 83       	st	Z, r24
     3d2:	91 83       	std	Z+1, r25	; 0x01
     3d4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:85
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3d6:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
     3da:	81 30       	cpi	r24, 0x01	; 1
     3dc:	b1 f4       	brne	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:87
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3de:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
     3e2:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0x2>
     3ec:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0x3>
     3f0:	20 91 fc 28 	lds	r18, 0x28FC	; 0x8028fc <SAFE_VALUE_SET_DEG>
     3f4:	30 91 fd 28 	lds	r19, 0x28FD	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
     3f8:	28 17       	cp	r18, r24
     3fa:	39 07       	cpc	r19, r25
     3fc:	0c f0       	brlt	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	71 c0       	rjmp	.+226    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     400:	10 92 00 29 	sts	0x2900, r1	; 0x802900 <SET_VALUE+0x2>
     404:	10 92 01 29 	sts	0x2901, r1	; 0x802901 <SET_VALUE+0x3>
     408:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:89
               }
                else if( ENTER_BUT == 2 )   
     40a:	82 30       	cpi	r24, 0x02	; 2
     40c:	39 f5       	brne	.+78     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:91
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     40e:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <SET_VALUE+0x4>
     412:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <SET_VALUE+0x5>
     416:	01 96       	adiw	r24, 0x01	; 1
     418:	8a 30       	cpi	r24, 0x0A	; 10
     41a:	91 05       	cpc	r25, r1
     41c:	e4 f4       	brge	.+56     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     41e:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <SET_VALUE+0x4>
     422:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <SET_VALUE+0x5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:92
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     426:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
     42a:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x1f>
     434:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x20>
     438:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SAFE_VALUE_SET_FAH>
     43c:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
     440:	28 17       	cp	r18, r24
     442:	39 07       	cpc	r19, r25
     444:	0c f0       	brlt	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	4d c0       	rjmp	.+154    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     448:	80 e2       	ldi	r24, 0x20	; 32
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x1f>
     450:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x20>
     454:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:91
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     456:	89 e0       	ldi	r24, 0x09	; 9
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	e1 cf       	rjmp	.-62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:94
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     45c:	83 30       	cpi	r24, 0x03	; 3
     45e:	91 f4       	brne	.+36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:96
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     460:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <SET_VALUE+0x6>
     464:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <SET_VALUE+0x7>
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	84 36       	cpi	r24, 0x64	; 100
     46c:	91 05       	cpc	r25, r1
     46e:	2c f4       	brge	.+10     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     470:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <SET_VALUE+0x6>
     474:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <SET_VALUE+0x7>
     478:	08 95       	ret
     47a:	10 92 04 29 	sts	0x2904, r1	; 0x802904 <SET_VALUE+0x6>
     47e:	10 92 05 29 	sts	0x2905, r1	; 0x802905 <SET_VALUE+0x7>
     482:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:98
               }
               else if( ENTER_BUT == 4 )   
     484:	84 30       	cpi	r24, 0x04	; 4
     486:	91 f4       	brne	.+36     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:100
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     488:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <SET_VALUE+0x8>
     48c:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <SET_VALUE+0x9>
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	8c 33       	cpi	r24, 0x3C	; 60
     494:	91 05       	cpc	r25, r1
     496:	2c f4       	brge	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     498:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <SET_VALUE+0x8>
     49c:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <SET_VALUE+0x9>
     4a0:	08 95       	ret
     4a2:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <SET_VALUE+0x8>
     4a6:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <SET_VALUE+0x9>
     4aa:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:102
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4ac:	85 30       	cpi	r24, 0x05	; 5
     4ae:	c9 f4       	brne	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b0:	80 91 f9 28 	lds	r24, 0x28F9	; 0x8028f9 <PUMP_FLAG>
     4b4:	88 23       	and	r24, r24
     4b6:	a9 f0       	breq	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b8:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
     4bc:	88 23       	and	r24, r24
     4be:	89 f0       	breq	.+34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:104
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4c0:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <SET_VALUE+0xa>
     4c4:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <SET_VALUE+0xb>
     4c8:	01 96       	adiw	r24, 0x01	; 1
     4ca:	82 30       	cpi	r24, 0x02	; 2
     4cc:	91 05       	cpc	r25, r1
     4ce:	2c f4       	brge	.+10     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <SET_VALUE+0xa>
     4d4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <SET_VALUE+0xb>
     4d8:	08 95       	ret
     4da:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <SET_VALUE+0xa>
     4de:	10 92 09 29 	sts	0x2909, r1	; 0x802909 <SET_VALUE+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:107
               }
  }
}
     4e2:	08 95       	ret

000004e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]>:
SET_CHANGE_DOWN():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:111

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4e4:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
     4e8:	88 23       	and	r24, r24
     4ea:	09 f4       	brne	.+2      	; 0x4ee <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0xa>
     4ec:	57 c0       	rjmp	.+174    	; 0x59c <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0xb8>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:113
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     4ee:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     4f2:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	91 05       	cpc	r25, r1
     4fa:	71 f4       	brne	.+28     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x34>
     4fc:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
     500:	22 23       	and	r18, r18
     502:	51 f0       	breq	.+20     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x34>
     504:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
     508:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
     50c:	21 50       	subi	r18, 0x01	; 1
     50e:	31 09       	sbc	r19, r1
     510:	20 93 31 29 	sts	0x2931, r18	; 0x802931 <SET_LONG_VALUE+0x26>
     514:	30 93 32 29 	sts	0x2932, r19	; 0x802932 <SET_LONG_VALUE+0x27>
     518:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
     51c:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
     520:	20 32       	cpi	r18, 0x20	; 32
     522:	31 05       	cpc	r19, r1
     524:	a4 f4       	brge	.+40     	; 0x54e <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x6a>
     526:	20 e2       	ldi	r18, 0x20	; 32
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	20 93 31 29 	sts	0x2931, r18	; 0x802931 <SET_LONG_VALUE+0x26>
     52e:	30 93 32 29 	sts	0x2932, r19	; 0x802932 <SET_LONG_VALUE+0x27>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:114
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     532:	20 91 33 29 	lds	r18, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
     536:	30 91 34 29 	lds	r19, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
     53a:	20 32       	cpi	r18, 0x20	; 32
     53c:	31 05       	cpc	r19, r1
     53e:	cc f4       	brge	.+50     	; 0x572 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x8e>
     540:	80 e2       	ldi	r24, 0x20	; 32
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	80 93 33 29 	sts	0x2933, r24	; 0x802933 <SET_LONG_VALUE+0x28>
     548:	90 93 34 29 	sts	0x2934, r25	; 0x802934 <SET_LONG_VALUE+0x29>
     54c:	08 95       	ret
     54e:	88 30       	cpi	r24, 0x08	; 8
     550:	91 05       	cpc	r25, r1
     552:	79 f7       	brne	.-34     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x4e>
     554:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
     558:	22 23       	and	r18, r18
     55a:	59 f3       	breq	.-42     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x4e>
     55c:	20 91 33 29 	lds	r18, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
     560:	30 91 34 29 	lds	r19, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
     564:	21 50       	subi	r18, 0x01	; 1
     566:	31 09       	sbc	r19, r1
     568:	20 93 33 29 	sts	0x2933, r18	; 0x802933 <SET_LONG_VALUE+0x28>
     56c:	30 93 34 29 	sts	0x2934, r19	; 0x802934 <SET_LONG_VALUE+0x29>
     570:	e0 cf       	rjmp	.-64     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x4e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:117
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     572:	88 0f       	add	r24, r24
     574:	99 1f       	adc	r25, r25
     576:	fc 01       	movw	r30, r24
     578:	e5 5f       	subi	r30, 0xF5	; 245
     57a:	f6 4d       	sbci	r31, 0xD6	; 214
     57c:	20 81       	ld	r18, Z
     57e:	31 81       	ldd	r19, Z+1	; 0x01
     580:	21 50       	subi	r18, 0x01	; 1
     582:	31 09       	sbc	r19, r1
     584:	20 83       	st	Z, r18
     586:	31 83       	std	Z+1, r19	; 0x01
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:118
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     588:	37 ff       	sbrs	r19, 7
     58a:	8c c0       	rjmp	.+280    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
     58c:	8e 5a       	subi	r24, 0xAE	; 174
     58e:	9f 44       	sbci	r25, 0x4F	; 79
     590:	dc 01       	movw	r26, r24
     592:	8d 91       	ld	r24, X+
     594:	9c 91       	ld	r25, X
     596:	80 83       	st	Z, r24
     598:	91 83       	std	Z+1, r25	; 0x01
     59a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:123
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     59c:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	a1 f4       	brne	.+40     	; 0x5cc <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0xe8>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:125
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5a4:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
     5a8:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0x2>
     5b2:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0x3>
     5b6:	97 ff       	sbrs	r25, 7
     5b8:	75 c0       	rjmp	.+234    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
     5ba:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SAFE_VALUE_SET_DEG>
     5be:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
     5c2:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0x2>
     5c6:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0x3>
     5ca:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:127
    }
    else if( ENTER_BUT == 2 )   
     5cc:	82 30       	cpi	r24, 0x02	; 2
     5ce:	99 f5       	brne	.+102    	; 0x636 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x152>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:129
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5d0:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
     5d4:	81 11       	cpse	r24, r1
     5d6:	09 c0       	rjmp	.+18     	; 0x5ea <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x106>
     5d8:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <SET_VALUE+0x4>
     5dc:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <SET_VALUE+0x5>
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <SET_VALUE+0x4>
     5e6:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <SET_VALUE+0x5>
     5ea:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <SET_VALUE+0x4>
     5ee:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <SET_VALUE+0x5>
     5f2:	97 ff       	sbrs	r25, 7
     5f4:	16 c0       	rjmp	.+44     	; 0x622 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x13e>
     5f6:	89 e0       	ldi	r24, 0x09	; 9
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <SET_VALUE+0x4>
     5fe:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <SET_VALUE+0x5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:130
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     602:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
     606:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
     60a:	80 97       	sbiw	r24, 0x20	; 32
     60c:	0c f0       	brlt	.+2      	; 0x610 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x12c>
     60e:	4a c0       	rjmp	.+148    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
     610:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SAFE_VALUE_SET_FAH>
     614:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
     618:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x1f>
     61c:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x20>
     620:	08 95       	ret
     622:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
     626:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x1f>
     630:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x20>
     634:	e6 cf       	rjmp	.-52     	; 0x602 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x11e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:132
    }
    else if( ENTER_BUT == 3 )   
     636:	83 30       	cpi	r24, 0x03	; 3
     638:	79 f4       	brne	.+30     	; 0x658 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x174>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:134
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     63a:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <SET_VALUE+0x6>
     63e:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <SET_VALUE+0x7>
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	97 fd       	sbrc	r25, 7
     646:	05 c0       	rjmp	.+10     	; 0x652 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x16e>
     648:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <SET_VALUE+0x6>
     64c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <SET_VALUE+0x7>
     650:	08 95       	ret
     652:	83 e6       	ldi	r24, 0x63	; 99
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	f8 cf       	rjmp	.-16     	; 0x648 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x164>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:136
    }
    else if( ENTER_BUT == 4 )   
     658:	84 30       	cpi	r24, 0x04	; 4
     65a:	79 f4       	brne	.+30     	; 0x67a <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x196>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:138
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     65c:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <SET_VALUE+0x8>
     660:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <SET_VALUE+0x9>
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	97 fd       	sbrc	r25, 7
     668:	05 c0       	rjmp	.+10     	; 0x674 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x190>
     66a:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <SET_VALUE+0x8>
     66e:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <SET_VALUE+0x9>
     672:	08 95       	ret
     674:	8b e3       	ldi	r24, 0x3B	; 59
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	f8 cf       	rjmp	.-16     	; 0x66a <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x186>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:140
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     67a:	85 30       	cpi	r24, 0x05	; 5
     67c:	99 f4       	brne	.+38     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
     67e:	80 91 f9 28 	lds	r24, 0x28F9	; 0x8028f9 <PUMP_FLAG>
     682:	88 23       	and	r24, r24
     684:	79 f0       	breq	.+30     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
     686:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
     68a:	88 23       	and	r24, r24
     68c:	59 f0       	breq	.+22     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c0>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:142
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     68e:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <SET_VALUE+0xa>
     692:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <SET_VALUE+0xb>
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	97 fd       	sbrc	r25, 7
     69a:	05 c0       	rjmp	.+10     	; 0x6a6 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1c2>
     69c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <SET_VALUE+0xa>
     6a0:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <SET_VALUE+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:145
    }
  }
}
     6a4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Butn.cpp:142
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	f8 cf       	rjmp	.-16     	; 0x69c <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]+0x1b8>

000006ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>:
BREAK_NUMBER1():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:216
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	6b 01       	movw	r12, r22
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:218
{ 
    first_digit = num / 1000;
     6b6:	28 ee       	ldi	r18, 0xE8	; 232
     6b8:	33 e0       	ldi	r19, 0x03	; 3
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	0e 94 5c 37 	call	0x6eb8	; 0x6eb8 <__divmodsi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:219
    digits1[0] = first_digit;
     6c2:	ec ee       	ldi	r30, 0xEC	; 236
     6c4:	f8 e2       	ldi	r31, 0x28	; 40
     6c6:	20 83       	st	Z, r18
     6c8:	31 83       	std	Z+1, r19	; 0x01
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:220
    int first_left = num - (first_digit * 1000);
     6ca:	68 ee       	ldi	r22, 0xE8	; 232
     6cc:	73 e0       	ldi	r23, 0x03	; 3
     6ce:	62 9f       	mul	r22, r18
     6d0:	c0 01       	movw	r24, r0
     6d2:	63 9f       	mul	r22, r19
     6d4:	90 0d       	add	r25, r0
     6d6:	72 9f       	mul	r23, r18
     6d8:	90 0d       	add	r25, r0
     6da:	11 24       	eor	r1, r1
     6dc:	c8 1a       	sub	r12, r24
     6de:	d9 0a       	sbc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:221
    second_digit = first_left / 100;
     6e0:	c6 01       	movw	r24, r12
     6e2:	64 e6       	ldi	r22, 0x64	; 100
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:222
    digits1[1] = second_digit;
     6ea:	62 83       	std	Z+2, r22	; 0x02
     6ec:	73 83       	std	Z+3, r23	; 0x03
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:223
    int second_left = first_left - (second_digit * 100);
     6ee:	2c e9       	ldi	r18, 0x9C	; 156
     6f0:	26 03       	mulsu	r18, r22
     6f2:	c0 01       	movw	r24, r0
     6f4:	27 9f       	mul	r18, r23
     6f6:	90 0d       	add	r25, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	c8 0e       	add	r12, r24
     6fc:	d9 1e       	adc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:224
    third_digit = second_left / 10;
     6fe:	c6 01       	movw	r24, r12
     700:	6a e0       	ldi	r22, 0x0A	; 10
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:225
    digits1[2] = third_digit;
     708:	64 83       	std	Z+4, r22	; 0x04
     70a:	75 83       	std	Z+5, r23	; 0x05
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:226
    fourth_digit = second_left - (third_digit * 10);
     70c:	26 ef       	ldi	r18, 0xF6	; 246
     70e:	26 03       	mulsu	r18, r22
     710:	c0 01       	movw	r24, r0
     712:	27 9f       	mul	r18, r23
     714:	90 0d       	add	r25, r0
     716:	11 24       	eor	r1, r1
     718:	c8 0e       	add	r12, r24
     71a:	d9 1e       	adc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:227
    digits1[3] = fourth_digit;
     71c:	c6 82       	std	Z+6, r12	; 0x06
     71e:	d7 82       	std	Z+7, r13	; 0x07
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:228
}
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>:
BREAK_NUMBER2():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:230

void Eclass:: BREAK_NUMBER2(long num2) 
     72a:	cf 92       	push	r12
     72c:	df 92       	push	r13
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	6b 01       	movw	r12, r22
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:232
{ 
    first_digit2 = num2 / 1000;
     734:	28 ee       	ldi	r18, 0xE8	; 232
     736:	33 e0       	ldi	r19, 0x03	; 3
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	0e 94 5c 37 	call	0x6eb8	; 0x6eb8 <__divmodsi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:233
    digits2[0] = first_digit2;
     740:	e4 ee       	ldi	r30, 0xE4	; 228
     742:	f8 e2       	ldi	r31, 0x28	; 40
     744:	20 83       	st	Z, r18
     746:	31 83       	std	Z+1, r19	; 0x01
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:234
    int first_left2 = num2 - (first_digit2 * 1000);
     748:	68 ee       	ldi	r22, 0xE8	; 232
     74a:	73 e0       	ldi	r23, 0x03	; 3
     74c:	62 9f       	mul	r22, r18
     74e:	c0 01       	movw	r24, r0
     750:	63 9f       	mul	r22, r19
     752:	90 0d       	add	r25, r0
     754:	72 9f       	mul	r23, r18
     756:	90 0d       	add	r25, r0
     758:	11 24       	eor	r1, r1
     75a:	c8 1a       	sub	r12, r24
     75c:	d9 0a       	sbc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:235
    second_digit2 = first_left2 / 100;
     75e:	c6 01       	movw	r24, r12
     760:	64 e6       	ldi	r22, 0x64	; 100
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:236
    digits2[1] = second_digit2;
     768:	62 83       	std	Z+2, r22	; 0x02
     76a:	73 83       	std	Z+3, r23	; 0x03
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:237
    int second_left2 = first_left2 - (second_digit2 * 100);
     76c:	2c e9       	ldi	r18, 0x9C	; 156
     76e:	26 03       	mulsu	r18, r22
     770:	c0 01       	movw	r24, r0
     772:	27 9f       	mul	r18, r23
     774:	90 0d       	add	r25, r0
     776:	11 24       	eor	r1, r1
     778:	c8 0e       	add	r12, r24
     77a:	d9 1e       	adc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:238
    third_digit2 = second_left2 / 10;
     77c:	c6 01       	movw	r24, r12
     77e:	6a e0       	ldi	r22, 0x0A	; 10
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:239
    digits2[2] = third_digit2;
     786:	64 83       	std	Z+4, r22	; 0x04
     788:	75 83       	std	Z+5, r23	; 0x05
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:240
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     78a:	26 ef       	ldi	r18, 0xF6	; 246
     78c:	26 03       	mulsu	r18, r22
     78e:	c0 01       	movw	r24, r0
     790:	27 9f       	mul	r18, r23
     792:	90 0d       	add	r25, r0
     794:	11 24       	eor	r1, r1
     796:	c8 0e       	add	r12, r24
     798:	d9 1e       	adc	r13, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:241
    digits2[3] = fourth_digit2;
     79a:	c6 82       	std	Z+6, r12	; 0x06
     79c:	d7 82       	std	Z+7, r13	; 0x07
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:242
}
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	08 95       	ret

000007a8 <PID::SetTunings(double, double, double) [clone .constprop.40]>:
SetTunings():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:127
}

/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
     7a8:	4f 92       	push	r4
     7aa:	5f 92       	push	r5
     7ac:	6f 92       	push	r6
     7ae:	7f 92       	push	r7
     7b0:	8f 92       	push	r8
     7b2:	9f 92       	push	r9
     7b4:	af 92       	push	r10
     7b6:	bf 92       	push	r11
     7b8:	cf 92       	push	r12
     7ba:	df 92       	push	r13
     7bc:	ef 92       	push	r14
     7be:	ff 92       	push	r15
     7c0:	0f 93       	push	r16
     7c2:	1f 93       	push	r17
     7c4:	cf 93       	push	r28
     7c6:	df 93       	push	r29
     7c8:	00 d0       	rcall	.+0      	; 0x7ca <PID::SetTunings(double, double, double) [clone .constprop.40]+0x22>
     7ca:	00 d0       	rcall	.+0      	; 0x7cc <PID::SetTunings(double, double, double) [clone .constprop.40]+0x24>
     7cc:	cd b7       	in	r28, 0x3d	; 61
     7ce:	de b7       	in	r29, 0x3e	; 62
     7d0:	4b 01       	movw	r8, r22
     7d2:	5c 01       	movw	r10, r24
     7d4:	29 01       	movw	r4, r18
     7d6:	3a 01       	movw	r6, r20
     7d8:	67 01       	movw	r12, r14
     7da:	78 01       	movw	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:104
 * it's called automatically from the constructor, but tunings can also
 * be adjusted on the fly during normal operation
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	a9 01       	movw	r20, r18
     7e2:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
     7e6:	87 fd       	sbrc	r24, 7
     7e8:	a6 c0       	rjmp	.+332    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.40]+0x18e>
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	a9 01       	movw	r20, r18
     7f0:	c3 01       	movw	r24, r6
     7f2:	b2 01       	movw	r22, r4
     7f4:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
     7f8:	87 fd       	sbrc	r24, 7
     7fa:	9d c0       	rjmp	.+314    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.40]+0x18e>
     7fc:	20 e0       	ldi	r18, 0x00	; 0
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	a9 01       	movw	r20, r18
     802:	c8 01       	movw	r24, r16
     804:	b6 01       	movw	r22, r12
     806:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
     80a:	87 fd       	sbrc	r24, 7
     80c:	94 c0       	rjmp	.+296    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.40]+0x18e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107

   pOn = POn;
   pOnE = POn == P_ON_E;
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	20 91 02 2a 	lds	r18, 0x2A02	; 0x802a02 <myPID+0x1a>
     814:	30 91 03 2a 	lds	r19, 0x2A03	; 0x802a03 <myPID+0x1b>
     818:	21 30       	cpi	r18, 0x01	; 1
     81a:	31 05       	cpc	r19, r1
     81c:	09 f0       	breq	.+2      	; 0x820 <PID::SetTunings(double, double, double) [clone .constprop.40]+0x78>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	80 93 23 2a 	sts	0x2A23, r24	; 0x802a23 <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
     824:	80 92 e8 29 	sts	0x29E8, r8	; 0x8029e8 <myPID>
     828:	90 92 e9 29 	sts	0x29E9, r9	; 0x8029e9 <myPID+0x1>
     82c:	a0 92 ea 29 	sts	0x29EA, r10	; 0x8029ea <myPID+0x2>
     830:	b0 92 eb 29 	sts	0x29EB, r11	; 0x8029eb <myPID+0x3>
     834:	40 92 ec 29 	sts	0x29EC, r4	; 0x8029ec <myPID+0x4>
     838:	50 92 ed 29 	sts	0x29ED, r5	; 0x8029ed <myPID+0x5>
     83c:	60 92 ee 29 	sts	0x29EE, r6	; 0x8029ee <myPID+0x6>
     840:	70 92 ef 29 	sts	0x29EF, r7	; 0x8029ef <myPID+0x7>
     844:	c0 92 f0 29 	sts	0x29F0, r12	; 0x8029f0 <myPID+0x8>
     848:	d0 92 f1 29 	sts	0x29F1, r13	; 0x8029f1 <myPID+0x9>
     84c:	e0 92 f2 29 	sts	0x29F2, r14	; 0x8029f2 <myPID+0xa>
     850:	f0 92 f3 29 	sts	0x29F3, r15	; 0x8029f3 <myPID+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:111

   double SampleTimeInSec = ((double)SampleTime)/1000;
     854:	60 91 16 2a 	lds	r22, 0x2A16	; 0x802a16 <myPID+0x2e>
     858:	70 91 17 2a 	lds	r23, 0x2A17	; 0x802a17 <myPID+0x2f>
     85c:	80 91 18 2a 	lds	r24, 0x2A18	; 0x802a18 <myPID+0x30>
     860:	90 91 19 2a 	lds	r25, 0x2A19	; 0x802a19 <myPID+0x31>
     864:	0e 94 0e 36 	call	0x6c1c	; 0x6c1c <__floatunsisf>
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	4a e7       	ldi	r20, 0x7A	; 122
     86e:	54 e4       	ldi	r21, 0x44	; 68
     870:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     874:	69 83       	std	Y+1, r22	; 0x01
     876:	7a 83       	std	Y+2, r23	; 0x02
     878:	8b 83       	std	Y+3, r24	; 0x03
     87a:	9c 83       	std	Y+4, r25	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112
   kp = Kp;
     87c:	80 92 f4 29 	sts	0x29F4, r8	; 0x8029f4 <myPID+0xc>
     880:	90 92 f5 29 	sts	0x29F5, r9	; 0x8029f5 <myPID+0xd>
     884:	a0 92 f6 29 	sts	0x29F6, r10	; 0x8029f6 <myPID+0xe>
     888:	b0 92 f7 29 	sts	0x29F7, r11	; 0x8029f7 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
     88c:	9b 01       	movw	r18, r22
     88e:	ac 01       	movw	r20, r24
     890:	c3 01       	movw	r24, r6
     892:	b2 01       	movw	r22, r4
     894:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
     898:	2b 01       	movw	r4, r22
     89a:	3c 01       	movw	r6, r24
     89c:	40 92 f8 29 	sts	0x29F8, r4	; 0x8029f8 <myPID+0x10>
     8a0:	50 92 f9 29 	sts	0x29F9, r5	; 0x8029f9 <myPID+0x11>
     8a4:	60 92 fa 29 	sts	0x29FA, r6	; 0x8029fa <myPID+0x12>
     8a8:	70 92 fb 29 	sts	0x29FB, r7	; 0x8029fb <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
     8ac:	29 81       	ldd	r18, Y+1	; 0x01
     8ae:	3a 81       	ldd	r19, Y+2	; 0x02
     8b0:	4b 81       	ldd	r20, Y+3	; 0x03
     8b2:	5c 81       	ldd	r21, Y+4	; 0x04
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     8bc:	6b 01       	movw	r12, r22
     8be:	7c 01       	movw	r14, r24
     8c0:	c0 92 fc 29 	sts	0x29FC, r12	; 0x8029fc <myPID+0x14>
     8c4:	d0 92 fd 29 	sts	0x29FD, r13	; 0x8029fd <myPID+0x15>
     8c8:	e0 92 fe 29 	sts	0x29FE, r14	; 0x8029fe <myPID+0x16>
     8cc:	f0 92 ff 29 	sts	0x29FF, r15	; 0x8029ff <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
     8d0:	80 91 00 2a 	lds	r24, 0x2A00	; 0x802a00 <myPID+0x18>
     8d4:	90 91 01 2a 	lds	r25, 0x2A01	; 0x802a01 <myPID+0x19>
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	69 f5       	brne	.+90     	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.40]+0x18e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
     8dc:	a5 01       	movw	r20, r10
     8de:	94 01       	movw	r18, r8
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	cb 01       	movw	r24, r22
     8e6:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     8ea:	60 93 f4 29 	sts	0x29F4, r22	; 0x8029f4 <myPID+0xc>
     8ee:	70 93 f5 29 	sts	0x29F5, r23	; 0x8029f5 <myPID+0xd>
     8f2:	80 93 f6 29 	sts	0x29F6, r24	; 0x8029f6 <myPID+0xe>
     8f6:	90 93 f7 29 	sts	0x29F7, r25	; 0x8029f7 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
     8fa:	a3 01       	movw	r20, r6
     8fc:	92 01       	movw	r18, r4
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	cb 01       	movw	r24, r22
     904:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     908:	60 93 f8 29 	sts	0x29F8, r22	; 0x8029f8 <myPID+0x10>
     90c:	70 93 f9 29 	sts	0x29F9, r23	; 0x8029f9 <myPID+0x11>
     910:	80 93 fa 29 	sts	0x29FA, r24	; 0x8029fa <myPID+0x12>
     914:	90 93 fb 29 	sts	0x29FB, r25	; 0x8029fb <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
     918:	a7 01       	movw	r20, r14
     91a:	96 01       	movw	r18, r12
     91c:	60 e0       	ldi	r22, 0x00	; 0
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	cb 01       	movw	r24, r22
     922:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     926:	60 93 fc 29 	sts	0x29FC, r22	; 0x8029fc <myPID+0x14>
     92a:	70 93 fd 29 	sts	0x29FD, r23	; 0x8029fd <myPID+0x15>
     92e:	80 93 fe 29 	sts	0x29FE, r24	; 0x8029fe <myPID+0x16>
     932:	90 93 ff 29 	sts	0x29FF, r25	; 0x8029ff <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:129
/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
    SetTunings(Kp, Ki, Kd, pOn); 
}
     936:	24 96       	adiw	r28, 0x04	; 4
     938:	cd bf       	out	0x3d, r28	; 61
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	ef 90       	pop	r14
     948:	df 90       	pop	r13
     94a:	cf 90       	pop	r12
     94c:	bf 90       	pop	r11
     94e:	af 90       	pop	r10
     950:	9f 90       	pop	r9
     952:	8f 90       	pop	r8
     954:	7f 90       	pop	r7
     956:	6f 90       	pop	r6
     958:	5f 90       	pop	r5
     95a:	4f 90       	pop	r4
     95c:	08 95       	ret

0000095e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>:
RTD_TEMP_CONV():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:57
      sample = 0;   AvgVout = 0;   
    }
   avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     95e:	4f 92       	push	r4
     960:	5f 92       	push	r5
     962:	6f 92       	push	r6
     964:	7f 92       	push	r7
     966:	8f 92       	push	r8
     968:	9f 92       	push	r9
     96a:	af 92       	push	r10
     96c:	bf 92       	push	r11
     96e:	cf 92       	push	r12
     970:	df 92       	push	r13
     972:	ef 92       	push	r14
     974:	ff 92       	push	r15
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e2       	ldi	r20, 0x20	; 32
     97c:	51 e4       	ldi	r21, 0x41	; 65
     97e:	60 91 f4 28 	lds	r22, 0x28F4	; 0x8028f4 <ERROR_CAL1>
     982:	70 91 f5 28 	lds	r23, 0x28F5	; 0x8028f5 <ERROR_CAL1+0x1>
     986:	80 91 f6 28 	lds	r24, 0x28F6	; 0x8028f6 <ERROR_CAL1+0x2>
     98a:	90 91 f7 28 	lds	r25, 0x28F7	; 0x8028f7 <ERROR_CAL1+0x3>
     98e:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:59
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     992:	20 91 d7 28 	lds	r18, 0x28D7	; 0x8028d7 <SIGN>
     996:	21 11       	cpse	r18, r1
     998:	90 58       	subi	r25, 0x80	; 128
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:60
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     99a:	60 93 d3 28 	sts	0x28D3, r22	; 0x8028d3 <ERROR_CAL>
     99e:	70 93 d4 28 	sts	0x28D4, r23	; 0x8028d4 <ERROR_CAL+0x1>
     9a2:	80 93 d5 28 	sts	0x28D5, r24	; 0x8028d5 <ERROR_CAL+0x2>
     9a6:	90 93 d6 28 	sts	0x28D6, r25	; 0x8028d6 <ERROR_CAL+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:62
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     9aa:	f0 90 d2 28 	lds	r15, 0x28D2	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
     9ae:	ff 20       	and	r15, r15
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x56>
     9b2:	55 c0       	rjmp	.+170    	; 0xa5e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x100>
     9b4:	20 91 d3 28 	lds	r18, 0x28D3	; 0x8028d3 <ERROR_CAL>
     9b8:	30 91 d4 28 	lds	r19, 0x28D4	; 0x8028d4 <ERROR_CAL+0x1>
     9bc:	40 91 d5 28 	lds	r20, 0x28D5	; 0x8028d5 <ERROR_CAL+0x2>
     9c0:	50 91 d6 28 	lds	r21, 0x28D6	; 0x8028d6 <ERROR_CAL+0x3>
     9c4:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
     9c8:	70 91 dd 28 	lds	r23, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
     9cc:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
     9d0:	90 91 df 28 	lds	r25, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
     9d4:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
     9d8:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <TEMP_DEG_RAW2>
     9dc:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <TEMP_DEG_RAW2+0x1>
     9e0:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <TEMP_DEG_RAW2+0x2>
     9e4:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <TEMP_DEG_RAW2+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:65
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
    
    if (!CAL_SELECT_VALUE)
     9e8:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <CAL_SELECT_VALUE>
     9ec:	90 91 c4 28 	lds	r25, 0x28C4	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
     9f0:	89 2b       	or	r24, r25
     9f2:	09 f0       	breq	.+2      	; 0x9f6 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x98>
     9f4:	7e c0       	rjmp	.+252    	; 0xaf2 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x194>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:67
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     9f6:	ff 20       	and	r15, r15
     9f8:	09 f4       	brne	.+2      	; 0x9fc <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x9e>
     9fa:	50 c0       	rjmp	.+160    	; 0xa9c <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x13e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:69
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     9fc:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_DEG_RAW2>
     a00:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_DEG_RAW2+0x1>
     a04:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_DEG_RAW2+0x2>
     a08:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_DEG_RAW2+0x3>
     a0c:	60 93 e0 28 	sts	0x28E0, r22	; 0x8028e0 <TEMP_DEG>
     a10:	70 93 e1 28 	sts	0x28E1, r23	; 0x8028e1 <TEMP_DEG+0x1>
     a14:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <TEMP_DEG+0x2>
     a18:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <TEMP_DEG+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:70
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     a1c:	26 e6       	ldi	r18, 0x66	; 102
     a1e:	36 e6       	ldi	r19, 0x66	; 102
     a20:	46 ee       	ldi	r20, 0xE6	; 230
     a22:	5f e3       	ldi	r21, 0x3F	; 63
     a24:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 e0       	ldi	r20, 0x00	; 0
     a2e:	52 e4       	ldi	r21, 0x42	; 66
     a30:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
     a34:	60 93 bf 28 	sts	0x28BF, r22	; 0x8028bf <TEMP_FAH>
     a38:	70 93 c0 28 	sts	0x28C0, r23	; 0x8028c0 <TEMP_FAH+0x1>
     a3c:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <TEMP_FAH+0x2>
     a40:	90 93 c2 28 	sts	0x28C2, r25	; 0x8028c2 <TEMP_FAH+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:88
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW,  MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9;
   }
}
     a44:	ff 90       	pop	r15
     a46:	ef 90       	pop	r14
     a48:	df 90       	pop	r13
     a4a:	cf 90       	pop	r12
     a4c:	bf 90       	pop	r11
     a4e:	af 90       	pop	r10
     a50:	9f 90       	pop	r9
     a52:	8f 90       	pop	r8
     a54:	7f 90       	pop	r7
     a56:	6f 90       	pop	r6
     a58:	5f 90       	pop	r5
     a5a:	4f 90       	pop	r4
     a5c:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:63
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
     a5e:	80 91 cd 28 	lds	r24, 0x28CD	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
     a62:	88 23       	and	r24, r24
     a64:	09 f2       	breq	.-126    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x8a>
     a66:	20 91 d3 28 	lds	r18, 0x28D3	; 0x8028d3 <ERROR_CAL>
     a6a:	30 91 d4 28 	lds	r19, 0x28D4	; 0x8028d4 <ERROR_CAL+0x1>
     a6e:	40 91 d5 28 	lds	r20, 0x28D5	; 0x8028d5 <ERROR_CAL+0x2>
     a72:	50 91 d6 28 	lds	r21, 0x28D6	; 0x8028d6 <ERROR_CAL+0x3>
     a76:	60 91 c9 28 	lds	r22, 0x28C9	; 0x8028c9 <TEMP_FAH_RAW>
     a7a:	70 91 ca 28 	lds	r23, 0x28CA	; 0x8028ca <TEMP_FAH_RAW+0x1>
     a7e:	80 91 cb 28 	lds	r24, 0x28CB	; 0x8028cb <TEMP_FAH_RAW+0x2>
     a82:	90 91 cc 28 	lds	r25, 0x28CC	; 0x8028cc <TEMP_FAH_RAW+0x3>
     a86:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
     a8a:	60 93 c5 28 	sts	0x28C5, r22	; 0x8028c5 <TEMP_FAH_RAW2>
     a8e:	70 93 c6 28 	sts	0x28C6, r23	; 0x8028c6 <TEMP_FAH_RAW2+0x1>
     a92:	80 93 c7 28 	sts	0x28C7, r24	; 0x8028c7 <TEMP_FAH_RAW2+0x2>
     a96:	90 93 c8 28 	sts	0x28C8, r25	; 0x8028c8 <TEMP_FAH_RAW2+0x3>
     a9a:	a6 cf       	rjmp	.-180    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0x8a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:72
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     a9c:	80 91 cd 28 	lds	r24, 0x28CD	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
     aa0:	88 23       	and	r24, r24
     aa2:	81 f2       	breq	.-96     	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0xe6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:74
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     aa4:	c0 90 c5 28 	lds	r12, 0x28C5	; 0x8028c5 <TEMP_FAH_RAW2>
     aa8:	d0 90 c6 28 	lds	r13, 0x28C6	; 0x8028c6 <TEMP_FAH_RAW2+0x1>
     aac:	e0 90 c7 28 	lds	r14, 0x28C7	; 0x8028c7 <TEMP_FAH_RAW2+0x2>
     ab0:	f0 90 c8 28 	lds	r15, 0x28C8	; 0x8028c8 <TEMP_FAH_RAW2+0x3>
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	40 e0       	ldi	r20, 0x00	; 0
     aba:	52 e4       	ldi	r21, 0x42	; 66
     abc:	c7 01       	movw	r24, r14
     abe:	b6 01       	movw	r22, r12
     ac0:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     ac4:	26 e6       	ldi	r18, 0x66	; 102
     ac6:	36 e6       	ldi	r19, 0x66	; 102
     ac8:	46 ee       	ldi	r20, 0xE6	; 230
     aca:	5f e3       	ldi	r21, 0x3F	; 63
     acc:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     ad0:	60 93 e0 28 	sts	0x28E0, r22	; 0x8028e0 <TEMP_DEG>
     ad4:	70 93 e1 28 	sts	0x28E1, r23	; 0x8028e1 <TEMP_DEG+0x1>
     ad8:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <TEMP_DEG+0x2>
     adc:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <TEMP_DEG+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:75
          TEMP_FAH  =  TEMP_FAH_RAW2;
     ae0:	c0 92 bf 28 	sts	0x28BF, r12	; 0x8028bf <TEMP_FAH>
     ae4:	d0 92 c0 28 	sts	0x28C0, r13	; 0x8028c0 <TEMP_FAH+0x1>
     ae8:	e0 92 c1 28 	sts	0x28C1, r14	; 0x8028c1 <TEMP_FAH+0x2>
     aec:	f0 92 c2 28 	sts	0x28C2, r15	; 0x8028c2 <TEMP_FAH+0x3>
     af0:	a9 cf       	rjmp	.-174    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0xe6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:80
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     af2:	60 91 bb 28 	lds	r22, 0x28BB	; 0x8028bb <CAL2_RAW_LOW_VALUE_CONV>
     af6:	70 91 bc 28 	lds	r23, 0x28BC	; 0x8028bc <CAL2_RAW_LOW_VALUE_CONV+0x1>
     afa:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <CAL2_RAW_LOW_VALUE_CONV+0x2>
     afe:	90 91 be 28 	lds	r25, 0x28BE	; 0x8028be <CAL2_RAW_LOW_VALUE_CONV+0x3>
     b02:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	40 e2       	ldi	r20, 0x20	; 32
     b0c:	51 e4       	ldi	r21, 0x41	; 65
     b0e:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     b12:	4b 01       	movw	r8, r22
     b14:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:82
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     b16:	60 91 b3 28 	lds	r22, 0x28B3	; 0x8028b3 <MASTER_LOW_CONV>
     b1a:	70 91 b4 28 	lds	r23, 0x28B4	; 0x8028b4 <MASTER_LOW_CONV+0x1>
     b1e:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <MASTER_LOW_CONV+0x2>
     b22:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <MASTER_LOW_CONV+0x3>
     b26:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	40 e2       	ldi	r20, 0x20	; 32
     b30:	51 e4       	ldi	r21, 0x41	; 65
     b32:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     b36:	6b 01       	movw	r12, r22
     b38:	7c 01       	movw	r14, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:83
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     b3a:	60 91 af 28 	lds	r22, 0x28AF	; 0x8028af <MASTER_HIGH_CONV>
     b3e:	70 91 b0 28 	lds	r23, 0x28B0	; 0x8028b0 <MASTER_HIGH_CONV+0x1>
     b42:	80 91 b1 28 	lds	r24, 0x28B1	; 0x8028b1 <MASTER_HIGH_CONV+0x2>
     b46:	90 91 b2 28 	lds	r25, 0x28B2	; 0x8028b2 <MASTER_HIGH_CONV+0x3>
     b4a:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e2       	ldi	r20, 0x20	; 32
     b54:	51 e4       	ldi	r21, 0x41	; 65
     b56:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     b5a:	a7 01       	movw	r20, r14
     b5c:	96 01       	movw	r18, r12
     b5e:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     b62:	2b 01       	movw	r4, r22
     b64:	3c 01       	movw	r6, r24
     b66:	a5 01       	movw	r20, r10
     b68:	94 01       	movw	r18, r8
     b6a:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
     b6e:	70 91 dd 28 	lds	r23, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
     b72:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
     b76:	90 91 df 28 	lds	r25, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
     b7a:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     b7e:	9b 01       	movw	r18, r22
     b80:	ac 01       	movw	r20, r24
     b82:	c3 01       	movw	r24, r6
     b84:	b2 01       	movw	r22, r4
     b86:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
     b8a:	2b 01       	movw	r4, r22
     b8c:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     b8e:	60 91 b7 28 	lds	r22, 0x28B7	; 0x8028b7 <CAL2_RAW_HIGH_VALUE_CONV>
     b92:	70 91 b8 28 	lds	r23, 0x28B8	; 0x8028b8 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     b96:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     b9a:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     b9e:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 e2       	ldi	r20, 0x20	; 32
     ba8:	51 e4       	ldi	r21, 0x41	; 65
     baa:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     bae:	a5 01       	movw	r20, r10
     bb0:	94 01       	movw	r18, r8
     bb2:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
     bb6:	9b 01       	movw	r18, r22
     bb8:	ac 01       	movw	r20, r24
     bba:	c3 01       	movw	r24, r6
     bbc:	b2 01       	movw	r22, r4
     bbe:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
     bc2:	a7 01       	movw	r20, r14
     bc4:	96 01       	movw	r18, r12
     bc6:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
     bca:	6b 01       	movw	r12, r22
     bcc:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:84
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW,  MASTER_HIGH);
     bce:	c0 92 e0 28 	sts	0x28E0, r12	; 0x8028e0 <TEMP_DEG>
     bd2:	d0 92 e1 28 	sts	0x28E1, r13	; 0x8028e1 <TEMP_DEG+0x1>
     bd6:	e0 92 e2 28 	sts	0x28E2, r14	; 0x8028e2 <TEMP_DEG+0x2>
     bda:	f0 92 e3 28 	sts	0x28E3, r15	; 0x8028e3 <TEMP_DEG+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:85
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     bde:	26 e6       	ldi	r18, 0x66	; 102
     be0:	36 e6       	ldi	r19, 0x66	; 102
     be2:	46 ee       	ldi	r20, 0xE6	; 230
     be4:	5f e3       	ldi	r21, 0x3F	; 63
     be6:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e0       	ldi	r20, 0x00	; 0
     bf0:	52 e4       	ldi	r21, 0x42	; 66
     bf2:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
     bf6:	60 93 bf 28 	sts	0x28BF, r22	; 0x8028bf <TEMP_FAH>
     bfa:	70 93 c0 28 	sts	0x28C0, r23	; 0x8028c0 <TEMP_FAH+0x1>
     bfe:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <TEMP_FAH+0x2>
     c02:	90 93 c2 28 	sts	0x28C2, r25	; 0x8028c2 <TEMP_FAH+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:86
        if(TEMP_DEG>=100) TEMP_DEG = 99.9;
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	48 ec       	ldi	r20, 0xC8	; 200
     c0c:	52 e4       	ldi	r21, 0x42	; 66
     c0e:	c7 01       	movw	r24, r14
     c10:	b6 01       	movw	r22, r12
     c12:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
     c16:	87 fd       	sbrc	r24, 7
     c18:	15 cf       	rjmp	.-470    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0xe6>
     c1a:	8d ec       	ldi	r24, 0xCD	; 205
     c1c:	9c ec       	ldi	r25, 0xCC	; 204
     c1e:	a7 ec       	ldi	r26, 0xC7	; 199
     c20:	b2 e4       	ldi	r27, 0x42	; 66
     c22:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <TEMP_DEG>
     c26:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <TEMP_DEG+0x1>
     c2a:	a0 93 e2 28 	sts	0x28E2, r26	; 0x8028e2 <TEMP_DEG+0x2>
     c2e:	b0 93 e3 28 	sts	0x28E3, r27	; 0x8028e3 <TEMP_DEG+0x3>
     c32:	08 cf       	rjmp	.-496    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.38]+0xe6>

00000c34 <INC_CLICK()>:
INC_CLICK():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:357
  button4.tick();  
}

void INC_CLICK()
{
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
     c34:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
     c38:	88 23       	and	r24, r24
     c3a:	09 f4       	brne	.+2      	; 0xc3e <INC_CLICK()+0xa>
     c3c:	3f c0       	rjmp	.+126    	; 0xcbc <INC_CLICK()+0x88>
     c3e:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
     c42:	81 11       	cpse	r24, r1
     c44:	3b c0       	rjmp	.+118    	; 0xcbc <INC_CLICK()+0x88>
     c46:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     c4a:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:359
  {    
    if(!Service_Menu)
     c4e:	20 91 3b 28 	lds	r18, 0x283B	; 0x80283b <Service_Menu>
     c52:	21 11       	cpse	r18, r1
     c54:	16 c0       	rjmp	.+44     	; 0xc82 <INC_CLICK()+0x4e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:361
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     c5c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:362
      if(select_product_type )
     c60:	20 91 f8 28 	lds	r18, 0x28F8	; 0x8028f8 <select_product_type>
     c64:	22 23       	and	r18, r18
     c66:	49 f0       	breq	.+18     	; 0xc7a <INC_CLICK()+0x46>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:364
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
     c68:	97 ff       	sbrs	r25, 7
     c6a:	0a c0       	rjmp	.+20     	; 0xc80 <INC_CLICK()+0x4c>
     c6c:	84 e0       	ldi	r24, 0x04	; 4
     c6e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:374
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
     c70:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     c74:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
     c78:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:368
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
     c7a:	18 16       	cp	r1, r24
     c7c:	19 06       	cpc	r1, r25
     c7e:	b4 f7       	brge	.-20     	; 0xc6c <INC_CLICK()+0x38>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:388
      else                      SELECTION_PARAMETER--;      
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
     c80:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:373
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
     c82:	88 30       	cpi	r24, 0x08	; 8
     c84:	91 05       	cpc	r25, r1
     c86:	19 f4       	brne	.+6      	; 0xc8e <INC_CLICK()+0x5a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:374
                              SELECTION_PARAMETER = Calibration_Selection;
     c88:	86 e0       	ldi	r24, 0x06	; 6
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	f1 cf       	rjmp	.-30     	; 0xc70 <INC_CLICK()+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:375
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
     c8e:	8b 30       	cpi	r24, 0x0B	; 11
     c90:	91 05       	cpc	r25, r1
     c92:	19 f4       	brne	.+6      	; 0xc9a <INC_CLICK()+0x66>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:376
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
     c94:	89 e0       	ldi	r24, 0x09	; 9
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	eb cf       	rjmp	.-42     	; 0xc70 <INC_CLICK()+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:377
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
     c9a:	81 31       	cpi	r24, 0x11	; 17
     c9c:	91 05       	cpc	r25, r1
     c9e:	19 f4       	brne	.+6      	; 0xca6 <INC_CLICK()+0x72>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:378
                                SELECTION_PARAMETER = Log;
     ca0:	80 e1       	ldi	r24, 0x10	; 16
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	e5 cf       	rjmp	.-54     	; 0xc70 <INC_CLICK()+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:379
      else if(SELECTION_PARAMETER == Log)   
     ca6:	80 31       	cpi	r24, 0x10	; 16
     ca8:	91 05       	cpc	r25, r1
     caa:	a1 f3       	breq	.-24     	; 0xc94 <INC_CLICK()+0x60>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:381
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;                                
      else if (SELECTION_PARAMETER < Calibration_Selection)
     cac:	86 30       	cpi	r24, 0x06	; 6
     cae:	91 05       	cpc	r25, r1
     cb0:	1c f4       	brge	.+6      	; 0xcb8 <INC_CLICK()+0x84>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:382
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
     cb2:	81 e1       	ldi	r24, 0x11	; 17
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	dc cf       	rjmp	.-72     	; 0xc70 <INC_CLICK()+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:383
      else                      SELECTION_PARAMETER--;      
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	da cf       	rjmp	.-76     	; 0xc70 <INC_CLICK()+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:387
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
     cbc:	29 cb       	rjmp	.-2478   	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.67]>

00000cbe <DEC_CLICK()>:
DEC_CLICK():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:413
//  Serial2.println(BLINK_STATS);
}

void DEC_CLICK()
{
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
     cbe:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
     cc2:	88 23       	and	r24, r24
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <DEC_CLICK()+0xa>
     cc6:	4d c0       	rjmp	.+154    	; 0xd62 <DEC_CLICK()+0xa4>
     cc8:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
     ccc:	81 11       	cpse	r24, r1
     cce:	49 c0       	rjmp	.+146    	; 0xd62 <DEC_CLICK()+0xa4>
     cd0:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     cd4:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:415
  {
    if(!Service_Menu){
     cd8:	20 91 3b 28 	lds	r18, 0x283B	; 0x80283b <Service_Menu>
     cdc:	21 11       	cpse	r18, r1
     cde:	19 c0       	rjmp	.+50     	; 0xd12 <DEC_CLICK()+0x54>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:416
        SELECTION_PARAMETER++;
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     ce6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:419
//        if (SELECTION_PARAMETER > Auto_Resume_Enable)  
//            SELECTION_PARAMETER = Unit_C_F;
      if(select_product_type )
     cea:	20 91 f8 28 	lds	r18, 0x28F8	; 0x8028f8 <select_product_type>
     cee:	22 23       	and	r18, r18
     cf0:	39 f0       	breq	.+14     	; 0xd00 <DEC_CLICK()+0x42>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:421
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
     cf2:	05 97       	sbiw	r24, 0x05	; 5
     cf4:	bc f1       	brlt	.+110    	; 0xd64 <DEC_CLICK()+0xa6>
     cf6:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
     cfa:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
     cfe:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:425
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
     d00:	05 97       	sbiw	r24, 0x05	; 5
     d02:	84 f1       	brlt	.+96     	; 0xd64 <DEC_CLICK()+0xa6>
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:431
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
     d08:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     d0c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
     d10:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:430
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
     d12:	86 30       	cpi	r24, 0x06	; 6
     d14:	91 05       	cpc	r25, r1
     d16:	19 f4       	brne	.+6      	; 0xd1e <DEC_CLICK()+0x60>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:431
                   SELECTION_PARAMETER = Cal1_Point;
     d18:	88 e0       	ldi	r24, 0x08	; 8
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	f5 cf       	rjmp	.-22     	; 0xd08 <DEC_CLICK()+0x4a>
     d1e:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <CAL2_START>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:432
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
     d22:	89 30       	cpi	r24, 0x09	; 9
     d24:	91 05       	cpc	r25, r1
     d26:	39 f4       	brne	.+14     	; 0xd36 <DEC_CLICK()+0x78>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:433
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
     d28:	8b e0       	ldi	r24, 0x0B	; 11
     d2a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:432
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
     d2c:	21 11       	cpse	r18, r1
     d2e:	ec cf       	rjmp	.-40     	; 0xd08 <DEC_CLICK()+0x4a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:435
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Log; 
     d30:	80 e1       	ldi	r24, 0x10	; 16
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	e9 cf       	rjmp	.-46     	; 0xd08 <DEC_CLICK()+0x4a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:434
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
     d36:	21 11       	cpse	r18, r1
     d38:	06 c0       	rjmp	.+12     	; 0xd46 <DEC_CLICK()+0x88>
     d3a:	89 30       	cpi	r24, 0x09	; 9
     d3c:	91 05       	cpc	r25, r1
     d3e:	4c f0       	brlt	.+18     	; 0xd52 <DEC_CLICK()+0x94>
     d40:	80 31       	cpi	r24, 0x10	; 16
     d42:	91 05       	cpc	r25, r1
     d44:	ac f3       	brlt	.-22     	; 0xd30 <DEC_CLICK()+0x72>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:436
                       SELECTION_PARAMETER = Log; 
      else if(SELECTION_PARAMETER ==  Log)            
     d46:	80 31       	cpi	r24, 0x10	; 16
     d48:	91 05       	cpc	r25, r1
     d4a:	19 f4       	brne	.+6      	; 0xd52 <DEC_CLICK()+0x94>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:437
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
     d4c:	81 e1       	ldi	r24, 0x11	; 17
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	db cf       	rjmp	.-74     	; 0xd08 <DEC_CLICK()+0x4a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:438
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
     d52:	81 31       	cpi	r24, 0x11	; 17
     d54:	91 05       	cpc	r25, r1
     d56:	1c f0       	brlt	.+6      	; 0xd5e <DEC_CLICK()+0xa0>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:439
              SELECTION_PARAMETER = Product_Selection_Parameter; //0; 
     d58:	85 e0       	ldi	r24, 0x05	; 5
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	d5 cf       	rjmp	.-86     	; 0xd08 <DEC_CLICK()+0x4a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:441
      else                                                 
             SELECTION_PARAMETER++;
     d5e:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:447
             
//      if (SELECTION_PARAMETER > FactoryAndSure_Reset)  
//            SELECTION_PARAMETER = Product_Selection_Parameter;
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
     d60:	d3 cf       	rjmp	.-90     	; 0xd08 <DEC_CLICK()+0x4a>
     d62:	c0 cb       	rjmp	.-2176   	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:448
}
     d64:	08 95       	ret

00000d66 <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:466
  }
}

void DEC_LONGPRESS_STOP()
{
  i = 0;
     d66:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
     d6a:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:467
  BLINK_STATS=0;
     d6e:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:469
//  Serial2.println(BLINK_STATS);
}
     d72:	08 95       	ret

00000d74 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     d74:	f8 cf       	rjmp	.-16     	; 0xd66 <DEC_LONGPRESS_STOP()>

00000d76 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     d76:	af 92       	push	r10
     d78:	bf 92       	push	r11
     d7a:	cf 92       	push	r12
     d7c:	df 92       	push	r13
     d7e:	ef 92       	push	r14
     d80:	ff 92       	push	r15
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	cf 93       	push	r28
     d88:	df 93       	push	r29
     d8a:	6c 01       	movw	r12, r24
     d8c:	7b 01       	movw	r14, r22
     d8e:	8b 01       	movw	r16, r22
     d90:	04 0f       	add	r16, r20
     d92:	15 1f       	adc	r17, r21
     d94:	eb 01       	movw	r28, r22
     d96:	5e 01       	movw	r10, r28
     d98:	ae 18       	sub	r10, r14
     d9a:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     d9c:	c0 17       	cp	r28, r16
     d9e:	d1 07       	cpc	r29, r17
     da0:	59 f0       	breq	.+22     	; 0xdb8 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     da2:	69 91       	ld	r22, Y+
     da4:	d6 01       	movw	r26, r12
     da6:	ed 91       	ld	r30, X+
     da8:	fc 91       	ld	r31, X
     daa:	01 90       	ld	r0, Z+
     dac:	f0 81       	ld	r31, Z
     dae:	e0 2d       	mov	r30, r0
     db0:	c6 01       	movw	r24, r12
     db2:	09 95       	icall
     db4:	89 2b       	or	r24, r25
     db6:	79 f7       	brne	.-34     	; 0xd96 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     db8:	c5 01       	movw	r24, r10
     dba:	df 91       	pop	r29
     dbc:	cf 91       	pop	r28
     dbe:	1f 91       	pop	r17
     dc0:	0f 91       	pop	r16
     dc2:	ff 90       	pop	r15
     dc4:	ef 90       	pop	r14
     dc6:	df 90       	pop	r13
     dc8:	cf 90       	pop	r12
     dca:	bf 90       	pop	r11
     dcc:	af 90       	pop	r10
     dce:	08 95       	ret

00000dd0 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     dd0:	fc 01       	movw	r30, r24
     dd2:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     dd4:	41 8d       	ldd	r20, Z+25	; 0x19
     dd6:	25 2f       	mov	r18, r21
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	84 2f       	mov	r24, r20
     ddc:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     dde:	82 1b       	sub	r24, r18
     de0:	93 0b       	sbc	r25, r19
     de2:	54 17       	cp	r21, r20
     de4:	10 f0       	brcs	.+4      	; 0xdea <UartClass::availableForWrite()+0x1a>
     de6:	cf 96       	adiw	r24, 0x3f	; 63
     de8:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     dea:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     dec:	08 95       	ret

00000dee <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     dee:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     df0:	96 89       	ldd	r25, Z+22	; 0x16
     df2:	87 89       	ldd	r24, Z+23	; 0x17
     df4:	98 17       	cp	r25, r24
     df6:	61 f0       	breq	.+24     	; 0xe10 <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     df8:	a7 89       	ldd	r26, Z+23	; 0x17
     dfa:	ae 0f       	add	r26, r30
     dfc:	bf 2f       	mov	r27, r31
     dfe:	b1 1d       	adc	r27, r1
     e00:	5d 96       	adiw	r26, 0x1d	; 29
     e02:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     e04:	97 89       	ldd	r25, Z+23	; 0x17
     e06:	9f 5f       	subi	r25, 0xFF	; 255
     e08:	9f 73       	andi	r25, 0x3F	; 63
     e0a:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     e10:	8f ef       	ldi	r24, 0xFF	; 255
     e12:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     e14:	08 95       	ret

00000e16 <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     e16:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     e18:	96 89       	ldd	r25, Z+22	; 0x16
     e1a:	87 89       	ldd	r24, Z+23	; 0x17
     e1c:	98 17       	cp	r25, r24
     e1e:	31 f0       	breq	.+12     	; 0xe2c <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     e20:	87 89       	ldd	r24, Z+23	; 0x17
     e22:	e8 0f       	add	r30, r24
     e24:	f1 1d       	adc	r31, r1
     e26:	85 8d       	ldd	r24, Z+29	; 0x1d
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     e2c:	8f ef       	ldi	r24, 0xFF	; 255
     e2e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     e30:	08 95       	ret

00000e32 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     e32:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     e34:	96 89       	ldd	r25, Z+22	; 0x16
     e36:	27 89       	ldd	r18, Z+23	; 0x17
     e38:	89 2f       	mov	r24, r25
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	80 5c       	subi	r24, 0xC0	; 192
     e3e:	9f 4f       	sbci	r25, 0xFF	; 255
     e40:	82 1b       	sub	r24, r18
     e42:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     e44:	8f 73       	andi	r24, 0x3F	; 63
     e46:	99 27       	eor	r25, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     e48:	08 95       	ret

00000e4a <Serial2_available()>:
Serial2_available():
     e4a:	8f e3       	ldi	r24, 0x3F	; 63
     e4c:	99 e2       	ldi	r25, 0x29	; 41
     e4e:	f1 df       	rcall	.-30     	; 0xe32 <UartClass::available()>
     e50:	21 e0       	ldi	r18, 0x01	; 1
     e52:	89 2b       	or	r24, r25
     e54:	09 f4       	brne	.+2      	; 0xe58 <Serial2_available()+0xe>
     e56:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     e58:	82 2f       	mov	r24, r18
     e5a:	08 95       	ret

00000e5c <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     e5c:	cf 93       	push	r28
     e5e:	df 93       	push	r29
     e60:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     e62:	e8 81       	ld	r30, Y
     e64:	f9 81       	ldd	r31, Y+1	; 0x01
     e66:	06 80       	ldd	r0, Z+6	; 0x06
     e68:	f7 81       	ldd	r31, Z+7	; 0x07
     e6a:	e0 2d       	mov	r30, r0
     e6c:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     e6e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e70:	fd 85       	ldd	r31, Y+13	; 0x0d
     e72:	86 81       	ldd	r24, Z+6	; 0x06
     e74:	8f 73       	andi	r24, 0x3F	; 63
     e76:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     e78:	ec 85       	ldd	r30, Y+12	; 0x0c
     e7a:	fd 85       	ldd	r31, Y+13	; 0x0d
     e7c:	85 81       	ldd	r24, Z+5	; 0x05
     e7e:	8f 75       	andi	r24, 0x5F	; 95
     e80:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     e82:	8f 89       	ldd	r24, Y+23	; 0x17
     e84:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     e86:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     e8e:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     e90:	61 30       	cpi	r22, 0x01	; 1
     e92:	19 f4       	brne	.+6      	; 0xe9a <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     e94:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     e9a:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     e9c:	66 23       	and	r22, r22
     e9e:	d9 f3       	breq	.-10     	; 0xe96 <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     ea0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     ea2:	08 95       	ret

00000ea4 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     ea4:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     ea6:	54 96       	adiw	r26, 0x14	; 20
     ea8:	1c 92       	st	X, r1
     eaa:	54 97       	sbiw	r26, 0x14	; 20
     eac:	54 96       	adiw	r26, 0x14	; 20
     eae:	8c 91       	ld	r24, X
     eb0:	54 97       	sbiw	r26, 0x14	; 20
     eb2:	82 30       	cpi	r24, 0x02	; 2
     eb4:	a0 f4       	brcc	.+40     	; 0xede <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     eb6:	28 2f       	mov	r18, r24
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	f9 01       	movw	r30, r18
     ebc:	ee 0f       	add	r30, r30
     ebe:	ff 1f       	adc	r31, r31
     ec0:	e2 0f       	add	r30, r18
     ec2:	f3 1f       	adc	r31, r19
     ec4:	ea 0f       	add	r30, r26
     ec6:	fb 1f       	adc	r31, r27
     ec8:	97 85       	ldd	r25, Z+15	; 0x0f
     eca:	96 13       	cpse	r25, r22
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <UartClass::pins(unsigned char, unsigned char)+0x30>
     ece:	96 85       	ldd	r25, Z+14	; 0x0e
     ed0:	94 17       	cp	r25, r20
     ed2:	49 f0       	breq	.+18     	; 0xee6 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     ed4:	8f 5f       	subi	r24, 0xFF	; 255
     ed6:	54 96       	adiw	r26, 0x14	; 20
     ed8:	8c 93       	st	X, r24
     eda:	54 97       	sbiw	r26, 0x14	; 20
     edc:	e7 cf       	rjmp	.-50     	; 0xeac <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     ede:	54 96       	adiw	r26, 0x14	; 20
     ee0:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     ee2:	80 e0       	ldi	r24, 0x00	; 0
     ee4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     ee6:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     ee8:	08 95       	ret

00000eea <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     ef0:	90 8d       	ldd	r25, Z+24	; 0x18
     ef2:	81 8d       	ldd	r24, Z+25	; 0x19
     ef4:	c4 85       	ldd	r28, Z+12	; 0x0c
     ef6:	d5 85       	ldd	r29, Z+13	; 0x0d
     ef8:	98 13       	cpse	r25, r24
     efa:	06 c0       	rjmp	.+12     	; 0xf08 <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     efc:	8d 81       	ldd	r24, Y+5	; 0x05
     efe:	8f 7d       	andi	r24, 0xDF	; 223
     f00:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     f02:	df 91       	pop	r29
     f04:	cf 91       	pop	r28
     f06:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     f08:	a1 8d       	ldd	r26, Z+25	; 0x19
     f0a:	ae 0f       	add	r26, r30
     f0c:	bf 2f       	mov	r27, r31
     f0e:	b1 1d       	adc	r27, r1
     f10:	a3 5a       	subi	r26, 0xA3	; 163
     f12:	bf 4f       	sbci	r27, 0xFF	; 255
     f14:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     f16:	81 8d       	ldd	r24, Z+25	; 0x19
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	01 96       	adiw	r24, 0x01	; 1
     f1c:	8f 73       	andi	r24, 0x3F	; 63
     f1e:	99 27       	eor	r25, r25
     f20:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     f22:	80 e4       	ldi	r24, 0x40	; 64
     f24:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     f26:	a4 85       	ldd	r26, Z+12	; 0x0c
     f28:	b5 85       	ldd	r27, Z+13	; 0x0d
     f2a:	12 96       	adiw	r26, 0x02	; 2
     f2c:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     f2e:	90 8d       	ldd	r25, Z+24	; 0x18
     f30:	81 8d       	ldd	r24, Z+25	; 0x19
     f32:	98 13       	cpse	r25, r24
     f34:	e6 cf       	rjmp	.-52     	; 0xf02 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     f36:	a4 85       	ldd	r26, Z+12	; 0x0c
     f38:	b5 85       	ldd	r27, Z+13	; 0x0d
     f3a:	15 96       	adiw	r26, 0x05	; 5
     f3c:	8c 91       	ld	r24, X
     f3e:	15 97       	sbiw	r26, 0x05	; 5
     f40:	8f 7d       	andi	r24, 0xDF	; 223
     f42:	15 96       	adiw	r26, 0x05	; 5
     f44:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     f46:	83 8d       	ldd	r24, Z+27	; 0x1b
     f48:	88 23       	and	r24, r24
     f4a:	d9 f2       	breq	.-74     	; 0xf02 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     f4c:	84 8d       	ldd	r24, Z+28	; 0x1c
     f4e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     f52:	13 8e       	std	Z+27, r1	; 0x1b
     f54:	d6 cf       	rjmp	.-84     	; 0xf02 <UartClass::_tx_data_empty_irq()+0x18>

00000f56 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     f56:	dc 01       	movw	r26, r24
     f58:	1c 96       	adiw	r26, 0x0c	; 12
     f5a:	ed 91       	ld	r30, X+
     f5c:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     f5e:	0f b6       	in	r0, 0x3f	; 63
     f60:	07 fe       	sbrs	r0, 7
     f62:	03 c0       	rjmp	.+6      	; 0xf6a <UartClass::_poll_tx_data_empty()+0x14>
     f64:	25 81       	ldd	r18, Z+5	; 0x05
     f66:	25 fd       	sbrc	r18, 5
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     f68:	03 c0       	rjmp	.+6      	; 0xf70 <UartClass::_poll_tx_data_empty()+0x1a>
     f6a:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     f6c:	25 fd       	sbrc	r18, 5
     f6e:	bd cf       	rjmp	.-134    	; 0xeea <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     f70:	08 95       	ret

00000f72 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     f72:	ef 92       	push	r14
     f74:	ff 92       	push	r15
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     f84:	98 8d       	ldd	r25, Y+24	; 0x18
     f86:	89 8d       	ldd	r24, Y+25	; 0x19
     f88:	98 13       	cpse	r25, r24
     f8a:	1c c0       	rjmp	.+56     	; 0xfc4 <UartClass::write(unsigned char)+0x52>
     f8c:	ac 85       	ldd	r26, Y+12	; 0x0c
     f8e:	bd 85       	ldd	r27, Y+13	; 0x0d
     f90:	14 96       	adiw	r26, 0x04	; 4
     f92:	8c 91       	ld	r24, X
     f94:	14 97       	sbiw	r26, 0x04	; 4
     f96:	85 ff       	sbrs	r24, 5
     f98:	15 c0       	rjmp	.+42     	; 0xfc4 <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     f9a:	12 96       	adiw	r26, 0x02	; 2
     f9c:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     f9e:	ac 85       	ldd	r26, Y+12	; 0x0c
     fa0:	bd 85       	ldd	r27, Y+13	; 0x0d
     fa2:	80 e4       	ldi	r24, 0x40	; 64
     fa4:	14 96       	adiw	r26, 0x04	; 4
     fa6:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     fa8:	ec 85       	ldd	r30, Y+12	; 0x0c
     faa:	fd 85       	ldd	r31, Y+13	; 0x0d
     fac:	85 81       	ldd	r24, Z+5	; 0x05
     fae:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     fb0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	df 91       	pop	r29
     fb8:	cf 91       	pop	r28
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	ff 90       	pop	r15
     fc0:	ef 90       	pop	r14
     fc2:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     fc4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     fc8:	80 ff       	sbrs	r24, 0
     fca:	08 c0       	rjmp	.+16     	; 0xfdc <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     fcc:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     fd0:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     fd2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     fd4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	8b 8f       	std	Y+27, r24	; 0x1b
     fdc:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     fde:	08 8d       	ldd	r16, Y+24	; 0x18
     fe0:	10 e0       	ldi	r17, 0x00	; 0
     fe2:	0f 5f       	subi	r16, 0xFF	; 255
     fe4:	1f 4f       	sbci	r17, 0xFF	; 255
     fe6:	0f 73       	andi	r16, 0x3F	; 63
     fe8:	11 27       	eor	r17, r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     fea:	e0 2e       	mov	r14, r16
     fec:	89 8d       	ldd	r24, Y+25	; 0x19
     fee:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <UartClass::write(unsigned char)+0x86>
     ff2:	ce 01       	movw	r24, r28
     ff4:	b0 df       	rcall	.-160    	; 0xf56 <UartClass::_poll_tx_data_empty()>
     ff6:	fa cf       	rjmp	.-12     	; 0xfec <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     ff8:	e8 8d       	ldd	r30, Y+24	; 0x18
     ffa:	ec 0f       	add	r30, r28
     ffc:	fd 2f       	mov	r31, r29
     ffe:	f1 1d       	adc	r31, r1
    1000:	e3 5a       	subi	r30, 0xA3	; 163
    1002:	ff 4f       	sbci	r31, 0xFF	; 255
    1004:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
    1006:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
    1008:	ec 85       	ldd	r30, Y+12	; 0x0c
    100a:	fd 85       	ldd	r31, Y+13	; 0x0d
    100c:	85 81       	ldd	r24, Z+5	; 0x05
    100e:	80 62       	ori	r24, 0x20	; 32
    1010:	cf cf       	rjmp	.-98     	; 0xfb0 <UartClass::write(unsigned char)+0x3e>

00001012 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    1016:	fc 01       	movw	r30, r24
    1018:	25 89       	ldd	r18, Z+21	; 0x15
    101a:	22 23       	and	r18, r18
    101c:	c1 f0       	breq	.+48     	; 0x104e <UartClass::flush()+0x3c>
    101e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
    1020:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
    1024:	80 ff       	sbrs	r24, 0
    1026:	08 c0       	rjmp	.+16     	; 0x1038 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
    1028:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
    102c:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
    102e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1030:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
    1034:	81 e0       	ldi	r24, 0x01	; 1
    1036:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
    1038:	ec 85       	ldd	r30, Y+12	; 0x0c
    103a:	fd 85       	ldd	r31, Y+13	; 0x0d
    103c:	85 81       	ldd	r24, Z+5	; 0x05
    103e:	85 fd       	sbrc	r24, 5
    1040:	03 c0       	rjmp	.+6      	; 0x1048 <UartClass::flush()+0x36>
    1042:	84 81       	ldd	r24, Z+4	; 0x04
    1044:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
    1046:	03 c0       	rjmp	.+6      	; 0x104e <UartClass::flush()+0x3c>
    1048:	ce 01       	movw	r24, r28
    104a:	85 df       	rcall	.-246    	; 0xf56 <UartClass::_poll_tx_data_empty()>
    104c:	f5 cf       	rjmp	.-22     	; 0x1038 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
    104e:	df 91       	pop	r29
    1050:	cf 91       	pop	r28
    1052:	08 95       	ret

00001054 <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    1054:	80 e0       	ldi	r24, 0x00	; 0
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	89 2b       	or	r24, r25
    105a:	49 f0       	breq	.+18     	; 0x106e <serialEventRun()+0x1a>
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	89 2b       	or	r24, r25
    1062:	29 f0       	breq	.+10     	; 0x106e <serialEventRun()+0x1a>
    1064:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    1068:	81 11       	cpse	r24, r1
    106a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    106e:	80 e0       	ldi	r24, 0x00	; 0
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	89 2b       	or	r24, r25
    1074:	49 f0       	breq	.+18     	; 0x1088 <serialEventRun()+0x34>
    1076:	80 e0       	ldi	r24, 0x00	; 0
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	89 2b       	or	r24, r25
    107c:	29 f0       	breq	.+10     	; 0x1088 <serialEventRun()+0x34>
    107e:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    1082:	81 11       	cpse	r24, r1
    1084:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	89 2b       	or	r24, r25
    108e:	21 f0       	breq	.+8      	; 0x1098 <serialEventRun()+0x44>
    1090:	dc de       	rcall	.-584    	; 0xe4a <Serial2_available()>
    1092:	81 11       	cpse	r24, r1
    1094:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    1098:	80 e0       	ldi	r24, 0x00	; 0
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	89 2b       	or	r24, r25
    109e:	49 f0       	breq	.+18     	; 0x10b2 <serialEventRun()+0x5e>
    10a0:	80 e0       	ldi	r24, 0x00	; 0
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	89 2b       	or	r24, r25
    10a6:	29 f0       	breq	.+10     	; 0x10b2 <serialEventRun()+0x5e>
    10a8:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    10ac:	81 11       	cpse	r24, r1
    10ae:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
    10b2:	08 95       	ret

000010b4 <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	08 95       	ret

000010b8 <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
    10b8:	cf 93       	push	r28
    10ba:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	fc 01       	movw	r30, r24
    10c0:	e7 5d       	subi	r30, 0xD7	; 215
    10c2:	ff 44       	sbci	r31, 0x4F	; 79
    10c4:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
    10c6:	2f 3f       	cpi	r18, 0xFF	; 255
    10c8:	69 f0       	breq	.+26     	; 0x10e4 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
    10ca:	fc 01       	movw	r30, r24
    10cc:	e0 50       	subi	r30, 0x00	; 0
    10ce:	f0 45       	sbci	r31, 0x50	; 80
    10d0:	a0 81       	ld	r26, Z
    10d2:	30 e2       	ldi	r19, 0x20	; 32
    10d4:	a3 9f       	mul	r26, r19
    10d6:	d0 01       	movw	r26, r0
    10d8:	11 24       	eor	r1, r1
    10da:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
    10dc:	61 30       	cpi	r22, 0x01	; 1
    10de:	29 f4       	brne	.+10     	; 0x10ea <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
    10e4:	df 91       	pop	r29
    10e6:	cf 91       	pop	r28
    10e8:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    10ea:	89 52       	subi	r24, 0x29	; 41
    10ec:	90 45       	sbci	r25, 0x50	; 80
    10ee:	ec 01       	movw	r28, r24
    10f0:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    10f2:	ef 3f       	cpi	r30, 0xFF	; 255
    10f4:	81 f0       	breq	.+32     	; 0x1116 <pinMode.part.1+0x5e>
    10f6:	cd 01       	movw	r24, r26
    10f8:	40 96       	adiw	r24, 0x10	; 16
    10fa:	e8 0f       	add	r30, r24
    10fc:	f9 2f       	mov	r31, r25
    10fe:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
    1100:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
    1102:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
    1104:	12 96       	adiw	r26, 0x02	; 2
    1106:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1108:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    110a:	62 30       	cpi	r22, 0x02	; 2
    110c:	39 f4       	brne	.+14     	; 0x111c <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    110e:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
    1110:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
    1112:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1114:	e7 cf       	rjmp	.-50     	; 0x10e4 <pinMode.part.1+0x2c>
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
    111a:	f2 cf       	rjmp	.-28     	; 0x1100 <pinMode.part.1+0x48>
    111c:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
    111e:	f8 cf       	rjmp	.-16     	; 0x1110 <pinMode.part.1+0x58>

00001120 <pinMode>:
pinMode():
    1120:	89 32       	cpi	r24, 0x29	; 41
    1122:	08 f4       	brcc	.+2      	; 0x1126 <pinMode+0x6>
    1124:	c9 cf       	rjmp	.-110    	; 0x10b8 <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
    1126:	08 95       	ret

00001128 <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	fc 01       	movw	r30, r24
    112c:	e2 55       	subi	r30, 0x52	; 82
    112e:	f0 45       	sbci	r31, 0x50	; 80
    1130:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
    1132:	ee 23       	and	r30, r30
    1134:	19 f1       	breq	.+70     	; 0x117c <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
    1136:	e1 30       	cpi	r30, 0x01	; 1
    1138:	21 f0       	breq	.+8      	; 0x1142 <turnOffPWM.part.0+0x1a>
    113a:	00 f1       	brcs	.+64     	; 0x117c <turnOffPWM.part.0+0x54>
    113c:	e6 30       	cpi	r30, 0x06	; 6
    113e:	a8 f0       	brcs	.+42     	; 0x116a <turnOffPWM.part.0+0x42>
    1140:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
    1142:	89 52       	subi	r24, 0x29	; 41
    1144:	90 45       	sbci	r25, 0x50	; 80
    1146:	fc 01       	movw	r30, r24
    1148:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
    114a:	23 30       	cpi	r18, 0x03	; 3
    114c:	08 f0       	brcs	.+2      	; 0x1150 <turnOffPWM.part.0+0x28>
    114e:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
    1150:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	01 c0       	rjmp	.+2      	; 0x115c <turnOffPWM.part.0+0x34>
    115a:	88 0f       	add	r24, r24
    115c:	2a 95       	dec	r18
    115e:	ea f7       	brpl	.-6      	; 0x115a <turnOffPWM.part.0+0x32>
    1160:	80 95       	com	r24
    1162:	83 23       	and	r24, r19
    1164:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1168:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
    116a:	80 e1       	ldi	r24, 0x10	; 16
    116c:	e8 9f       	mul	r30, r24
    116e:	f0 01       	movw	r30, r0
    1170:	11 24       	eor	r1, r1
    1172:	e0 5a       	subi	r30, 0xA0	; 160
    1174:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    1176:	81 81       	ldd	r24, Z+1	; 0x01
    1178:	8f 7e       	andi	r24, 0xEF	; 239
    117a:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
    117c:	08 95       	ret

0000117e <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
    117e:	0f 93       	push	r16
    1180:	1f 93       	push	r17
    1182:	cf 93       	push	r28
    1184:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1186:	c8 2f       	mov	r28, r24
    1188:	d0 e0       	ldi	r29, 0x00	; 0
    118a:	fe 01       	movw	r30, r28
    118c:	e7 5d       	subi	r30, 0xD7	; 215
    118e:	ff 44       	sbci	r31, 0x4F	; 79
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
    1190:	00 81       	ld	r16, Z
    1192:	0f 3f       	cpi	r16, 0xFF	; 255
    1194:	99 f0       	breq	.+38     	; 0x11bc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1196:	16 2f       	mov	r17, r22
turnOffPWM():
    1198:	89 32       	cpi	r24, 0x29	; 41
    119a:	08 f4       	brcc	.+2      	; 0x119e <digitalWrite.part.2+0x20>
    119c:	c5 df       	rcall	.-118    	; 0x1128 <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    119e:	fe 01       	movw	r30, r28
    11a0:	e0 50       	subi	r30, 0x00	; 0
    11a2:	f0 45       	sbci	r31, 0x50	; 80
    11a4:	e0 81       	ld	r30, Z
    11a6:	80 e2       	ldi	r24, 0x20	; 32
    11a8:	e8 9f       	mul	r30, r24
    11aa:	f0 01       	movw	r30, r0
    11ac:	11 24       	eor	r1, r1
    11ae:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
    11b0:	80 81       	ld	r24, Z
    11b2:	80 23       	and	r24, r16
    11b4:	51 f0       	breq	.+20     	; 0x11ca <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
    11b6:	11 11       	cpse	r17, r1
    11b8:	06 c0       	rjmp	.+12     	; 0x11c6 <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
    11ba:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
    11c6:	05 83       	std	Z+5, r16	; 0x05
    11c8:	f9 cf       	rjmp	.-14     	; 0x11bc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    11ca:	c9 52       	subi	r28, 0x29	; 41
    11cc:	d0 45       	sbci	r29, 0x50	; 80
    11ce:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    11d0:	30 97       	sbiw	r30, 0x00	; 0
    11d2:	71 f0       	breq	.+28     	; 0x11f0 <digitalWrite.part.2+0x72>
    11d4:	8f 3f       	cpi	r24, 0xFF	; 255
    11d6:	61 f0       	breq	.+24     	; 0x11f0 <digitalWrite.part.2+0x72>
    11d8:	70 96       	adiw	r30, 0x10	; 16
    11da:	e8 0f       	add	r30, r24
    11dc:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    11de:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
    11e0:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    11e2:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
    11e4:	11 11       	cpse	r17, r1
    11e6:	07 c0       	rjmp	.+14     	; 0x11f6 <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    11e8:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    }

    /* Restore system status */
    SREG = status;
    11ea:	80 83       	st	Z, r24
    11ec:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    11ee:	e6 cf       	rjmp	.-52     	; 0x11bc <digitalWrite.part.2+0x3e>
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    11f4:	f4 cf       	rjmp	.-24     	; 0x11de <digitalWrite.part.2+0x60>
    11f6:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    11f8:	f8 cf       	rjmp	.-16     	; 0x11ea <digitalWrite.part.2+0x6c>

000011fa <digitalWrite>:
digitalWrite():
    11fa:	89 32       	cpi	r24, 0x29	; 41
    11fc:	08 f4       	brcc	.+2      	; 0x1200 <digitalWrite+0x6>
    11fe:	bf cf       	rjmp	.-130    	; 0x117e <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    1200:	08 95       	ret

00001202 <OneButton::OneButton(int, int) [clone .constprop.54]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	ec 01       	movw	r28, r24
    120c:	16 2f       	mov	r17, r22
    120e:	07 2f       	mov	r16, r23
    1210:	82 e3       	ldi	r24, 0x32	; 50
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
    1216:	9f 83       	std	Y+7, r25	; 0x07
    1218:	60 e0       	ldi	r22, 0x00	; 0
    121a:	81 2f       	mov	r24, r17
    121c:	81 df       	rcall	.-254    	; 0x1120 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
    121e:	18 83       	st	Y, r17
    1220:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
    1222:	88 e5       	ldi	r24, 0x58	; 88
    1224:	92 e0       	ldi	r25, 0x02	; 2
    1226:	8a 83       	std	Y+2, r24	; 0x02
    1228:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
    122a:	88 ee       	ldi	r24, 0xE8	; 232
    122c:	93 e0       	ldi	r25, 0x03	; 3
    122e:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
    1230:	9d 83       	std	Y+5, r25	; 0x05
    1232:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
    1234:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
    1236:	1c 86       	std	Y+12, r1	; 0x0c
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
    123e:	99 87       	std	Y+9, r25	; 0x09
    1240:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
    1242:	1b 86       	std	Y+11, r1	; 0x0b
    1244:	61 e0       	ldi	r22, 0x01	; 1
    1246:	81 2f       	mov	r24, r17
    1248:	d8 df       	rcall	.-80     	; 0x11fa <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
    124a:	1f 86       	std	Y+15, r1	; 0x0f
    124c:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
    124e:	19 8a       	std	Y+17, r1	; 0x11
    1250:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
    1252:	1b 8a       	std	Y+19, r1	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
    1254:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
    1256:	1d 8a       	std	Y+21, r1	; 0x15
    1258:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
    125a:	1f 8a       	std	Y+23, r1	; 0x17
    125c:	18 8e       	std	Y+24, r1	; 0x18
    125e:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:202
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
    1260:	cf 91       	pop	r28
    1262:	1f 91       	pop	r17
    1264:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:203
    digitalWrite(CA_6, HIGH);
    1266:	08 95       	ret

00001268 <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
    1268:	61 e0       	ldi	r22, 0x01	; 1
    126a:	8b e0       	ldi	r24, 0x0B	; 11
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:204
    digitalWrite(CA_7, HIGH);
    126c:	c6 df       	rcall	.-116    	; 0x11fa <digitalWrite>
    126e:	61 e0       	ldi	r22, 0x01	; 1
    1270:	8a e0       	ldi	r24, 0x0A	; 10
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:205
    digitalWrite(CA_8, HIGH);
    1272:	c3 df       	rcall	.-122    	; 0x11fa <digitalWrite>
    1274:	61 e0       	ldi	r22, 0x01	; 1
    1276:	89 e0       	ldi	r24, 0x09	; 9
    1278:	c0 df       	rcall	.-128    	; 0x11fa <digitalWrite>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:210
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
    127a:	61 e0       	ldi	r22, 0x01	; 1
    127c:	88 e0       	ldi	r24, 0x08	; 8
    127e:	bd cf       	rjmp	.-134    	; 0x11fa <digitalWrite>

00001280 <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
    1280:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:211
    digitalWrite(CA_3, HIGH);
    1282:	87 e0       	ldi	r24, 0x07	; 7
    1284:	ba df       	rcall	.-140    	; 0x11fa <digitalWrite>
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:212
    digitalWrite(CA_2, HIGH);
    128a:	b7 df       	rcall	.-146    	; 0x11fa <digitalWrite>
    128c:	61 e0       	ldi	r22, 0x01	; 1
    128e:	85 e0       	ldi	r24, 0x05	; 5
    1290:	b4 df       	rcall	.-152    	; 0x11fa <digitalWrite>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:213
    digitalWrite(CA_1, HIGH);
    1292:	61 e0       	ldi	r22, 0x01	; 1
    1294:	84 e0       	ldi	r24, 0x04	; 4
    1296:	b1 cf       	rjmp	.-158    	; 0x11fa <digitalWrite>

00001298 <UartClass::begin(unsigned long, unsigned int)>:
begin():
    1298:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
    129a:	bf 92       	push	r11
    129c:	cf 92       	push	r12
    129e:	df 92       	push	r13
    12a0:	ef 92       	push	r14
    12a2:	ff 92       	push	r15
    12a4:	0f 93       	push	r16
    12a6:	1f 93       	push	r17
    12a8:	cf 93       	push	r28
    12aa:	df 93       	push	r29
    12ac:	ec 01       	movw	r28, r24
    12ae:	6a 01       	movw	r12, r20
    12b0:	7b 01       	movw	r14, r22
    12b2:	a2 2e       	mov	r10, r18
    12b4:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
    12b6:	88 23       	and	r24, r24
    12b8:	39 f0       	breq	.+14     	; 0x12c8 <UartClass::begin(unsigned long, unsigned int)+0x30>
    12ba:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
    12bc:	f9 81       	ldd	r31, Y+1	; 0x01
    12be:	06 88       	ldd	r0, Z+22	; 0x16
    12c0:	f7 89       	ldd	r31, Z+23	; 0x17
    12c2:	e0 2d       	mov	r30, r0
    12c4:	ce 01       	movw	r24, r28
    12c6:	09 95       	icall
    12c8:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
    12ca:	10 e0       	ldi	r17, 0x00	; 0
    12cc:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
    12ce:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
    12d0:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
    12d2:	70 e2       	ldi	r23, 0x20	; 32
    12d4:	81 ea       	ldi	r24, 0xA1	; 161
    12d6:	97 e0       	ldi	r25, 0x07	; 7
    12d8:	a7 01       	movw	r20, r14
    12da:	96 01       	movw	r18, r12
    12dc:	0e 94 3a 37 	call	0x6e74	; 0x6e74 <__udivmodsi4>
    12e0:	69 01       	movw	r12, r18
    12e2:	7a 01       	movw	r14, r20
    12e4:	8f ef       	ldi	r24, 0xFF	; 255
    12e6:	c8 1a       	sub	r12, r24
    12e8:	d8 0a       	sbc	r13, r24
    12ea:	e8 0a       	sbc	r14, r24
    12ec:	f8 0a       	sbc	r15, r24
    12ee:	f6 94       	lsr	r15
    12f0:	e7 94       	ror	r14
    12f2:	d7 94       	ror	r13
    12f4:	c7 94       	ror	r12
    12f6:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    12f8:	fd 85       	ldd	r31, Y+13	; 0x0d
    12fa:	86 81       	ldd	r24, Z+6	; 0x06
    12fc:	8d 7f       	andi	r24, 0xFD	; 253
    12fe:	86 83       	std	Z+6, r24	; 0x06
    1300:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    1302:	fd 85       	ldd	r31, Y+13	; 0x0d
    1304:	86 81       	ldd	r24, Z+6	; 0x06
    1306:	86 83       	std	Z+6, r24	; 0x06
    1308:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    130a:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    130e:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    1310:	00 0c       	add	r0, r0
    1312:	bb 0b       	sbc	r27, r27
    1314:	a7 01       	movw	r20, r14
    1316:	96 01       	movw	r18, r12
    1318:	0e 94 8e 37 	call	0x6f1c	; 0x6f1c <__mulshisi3>
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	34 e0       	ldi	r19, 0x04	; 4
    1320:	40 e0       	ldi	r20, 0x00	; 0
    1322:	50 e0       	ldi	r21, 0x00	; 0
    1324:	0e 94 5c 37 	call	0x6eb8	; 0x6eb8 <__divmodsi4>
    1328:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    132a:	fd 85       	ldd	r31, Y+13	; 0x0d
    132c:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    132e:	d3 1e       	adc	r13, r19
    1330:	e4 1e       	adc	r14, r20
    1332:	f5 1e       	adc	r15, r21
    1334:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    1336:	d1 86       	std	Z+9, r13	; 0x09
    1338:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    133a:	fd 85       	ldd	r31, Y+13	; 0x0d
    133c:	a7 82       	std	Z+7, r10	; 0x07
    133e:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    1340:	fd 85       	ldd	r31, Y+13	; 0x0d
    1342:	86 81       	ldd	r24, Z+6	; 0x06
    1344:	80 6c       	ori	r24, 0xC0	; 192
    1346:	86 83       	std	Z+6, r24	; 0x06
    1348:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    134a:	fd 85       	ldd	r31, Y+13	; 0x0d
    134c:	85 81       	ldd	r24, Z+5	; 0x05
    134e:	80 68       	ori	r24, 0x80	; 128
    1350:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    1352:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1356:	8b 89       	ldd	r24, Y+19	; 0x13
    1358:	80 95       	com	r24
    135a:	89 23       	and	r24, r25
    135c:	98 01       	movw	r18, r16
    135e:	22 0f       	add	r18, r18
    1360:	33 1f       	adc	r19, r19
    1362:	02 0f       	add	r16, r18
    1364:	13 1f       	adc	r17, r19
    1366:	c0 0f       	add	r28, r16
    1368:	d1 1f       	adc	r29, r17
    136a:	98 89       	ldd	r25, Y+16	; 0x10
    136c:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    136e:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1372:	62 e0       	ldi	r22, 0x02	; 2
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    1374:	8e 85       	ldd	r24, Y+14	; 0x0e
    1376:	d4 de       	rcall	.-600    	; 0x1120 <pinMode>
    1378:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    137a:	8f 85       	ldd	r24, Y+15	; 0x0f
    137c:	3e df       	rcall	.-388    	; 0x11fa <digitalWrite>
    137e:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    1380:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    1382:	ce de       	rcall	.-612    	; 0x1120 <pinMode>
    1384:	bf be       	out	0x3f, r11	; 63
    1386:	df 91       	pop	r29
    1388:	cf 91       	pop	r28
    138a:	1f 91       	pop	r17
    138c:	0f 91       	pop	r16
    138e:	ff 90       	pop	r15
    1390:	ef 90       	pop	r14
    1392:	df 90       	pop	r13
    1394:	cf 90       	pop	r12
    1396:	bf 90       	pop	r11
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:1169
  }
  
  
}

void Pclass :: ALL_LED_OFF()
    1398:	af 90       	pop	r10
    139a:	08 95       	ret

0000139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>:
digitalWrite():
    139c:	61 e0       	ldi	r22, 0x01	; 1
    139e:	8a e1       	ldi	r24, 0x1A	; 26
    13a0:	ee de       	rcall	.-548    	; 0x117e <digitalWrite.part.2>
    13a2:	61 e0       	ldi	r22, 0x01	; 1
    13a4:	8d e1       	ldi	r24, 0x1D	; 29
    13a6:	eb de       	rcall	.-554    	; 0x117e <digitalWrite.part.2>
    13a8:	61 e0       	ldi	r22, 0x01	; 1
    13aa:	8c e1       	ldi	r24, 0x1C	; 28
    13ac:	e8 de       	rcall	.-560    	; 0x117e <digitalWrite.part.2>
    13ae:	61 e0       	ldi	r22, 0x01	; 1
    13b0:	8b e1       	ldi	r24, 0x1B	; 27
    13b2:	e5 ce       	rjmp	.-566    	; 0x117e <digitalWrite.part.2>

000013b4 <digitalRead.part.3>:
digitalRead.part.3():
    13b4:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    13b6:	1f 93       	push	r17
    13b8:	cf 93       	push	r28
    13ba:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	f8 01       	movw	r30, r16
    13c0:	e7 5d       	subi	r30, 0xD7	; 215
    13c2:	ff 44       	sbci	r31, 0x4F	; 79
    13c4:	c0 81       	ld	r28, Z
    13c6:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    13c8:	81 f0       	breq	.+32     	; 0x13ea <digitalRead.part.3+0x36>
turnOffPWM():
    13ca:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    13cc:	08 f4       	brcc	.+2      	; 0x13d0 <digitalRead.part.3+0x1c>
    13ce:	ac de       	rcall	.-680    	; 0x1128 <turnOffPWM.part.0>
digitalRead.part.3():
    13d0:	f8 01       	movw	r30, r16
    13d2:	e0 50       	subi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    13d4:	f0 45       	sbci	r31, 0x50	; 80
    13d6:	e0 81       	ld	r30, Z
    13d8:	80 e2       	ldi	r24, 0x20	; 32
    13da:	e8 9f       	mul	r30, r24
    13dc:	f0 01       	movw	r30, r0
    13de:	11 24       	eor	r1, r1
    13e0:	fc 5f       	subi	r31, 0xFC	; 252
    13e2:	80 85       	ldd	r24, Z+8	; 0x08
    13e4:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	09 f4       	brne	.+2      	; 0x13ec <digitalRead.part.3+0x38>
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    13ee:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    13f0:	0f 91       	pop	r16
    13f2:	08 95       	ret

000013f4 <micros>:
micros():
    13f4:	8f b7       	in	r24, 0x3f	; 63
    13f6:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    13f8:	20 91 2b 28 	lds	r18, 0x282B	; 0x80282b <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    13fc:	30 91 2c 28 	lds	r19, 0x282C	; 0x80282c <timer_millis+0x1>
    1400:	40 91 2d 28 	lds	r20, 0x282D	; 0x80282d <timer_millis+0x2>
    1404:	50 91 2e 28 	lds	r21, 0x282E	; 0x80282e <timer_millis+0x3>
    1408:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    140c:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1410:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    1414:	90 ff       	sbrs	r25, 0
    1416:	08 c0       	rjmp	.+16     	; 0x1428 <micros+0x34>
    1418:	2f 5f       	subi	r18, 0xFF	; 255
    141a:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    141c:	4f 4f       	sbci	r20, 0xFF	; 255
    141e:	5f 4f       	sbci	r21, 0xFF	; 255
    1420:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    1424:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1428:	8f bf       	out	0x3f, r24	; 63
    142a:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    142c:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    142e:	0e 94 84 37 	call	0x6f08	; 0x6f08 <__muluhisi3>
    1432:	24 e0       	ldi	r18, 0x04	; 4
    1434:	f6 95       	lsr	r31
    1436:	e7 95       	ror	r30
    1438:	2a 95       	dec	r18
    143a:	e1 f7       	brne	.-8      	; 0x1434 <micros+0x40>
    143c:	6e 0f       	add	r22, r30
    143e:	7f 1f       	adc	r23, r31
    1440:	81 1d       	adc	r24, r1
    1442:	91 1d       	adc	r25, r1
    1444:	08 95       	ret

00001446 <millis>:
millis():
    1446:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    1448:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    144a:	60 91 2b 28 	lds	r22, 0x282B	; 0x80282b <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    144e:	70 91 2c 28 	lds	r23, 0x282C	; 0x80282c <timer_millis+0x1>
    1452:	80 91 2d 28 	lds	r24, 0x282D	; 0x80282d <timer_millis+0x2>
    1456:	90 91 2e 28 	lds	r25, 0x282E	; 0x80282e <timer_millis+0x3>
    145a:	2f bf       	out	0x3f, r18	; 63
    145c:	08 95       	ret

0000145e <Lclass::PID_callingg() [clone .constprop.39]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    145e:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    1460:	df 92       	push	r13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:33
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    1462:	ef 92       	push	r14
    1464:	ff 92       	push	r15
    1466:	0f 93       	push	r16
    1468:	1f 93       	push	r17
    146a:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:35
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    146e:	81 11       	cpse	r24, r1
    1470:	98 c0       	rjmp	.+304    	; 0x15a2 <Lclass::PID_callingg() [clone .constprop.39]+0x144>
    1472:	80 91 e0 28 	lds	r24, 0x28E0	; 0x8028e0 <TEMP_DEG>
    1476:	90 91 e1 28 	lds	r25, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    147a:	a0 91 e2 28 	lds	r26, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    147e:	b0 91 e3 28 	lds	r27, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    1482:	80 93 e4 29 	sts	0x29E4, r24	; 0x8029e4 <PID_INPUT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:36
  else               PID_INPUT = TEMP_DEG_RAW;
    1486:	90 93 e5 29 	sts	0x29E5, r25	; 0x8029e5 <PID_INPUT+0x1>
    148a:	a0 93 e6 29 	sts	0x29E6, r26	; 0x8029e6 <PID_INPUT+0x2>
    148e:	b0 93 e7 29 	sts	0x29E7, r27	; 0x8029e7 <PID_INPUT+0x3>
    1492:	c0 90 dc 29 	lds	r12, 0x29DC	; 0x8029dc <PID_SETPOINT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:65
//    else                                                    digitalWrite(HEATER, HIGH);
//  }



if(PID_SETPOINT < 45)
    1496:	d0 90 dd 29 	lds	r13, 0x29DD	; 0x8029dd <PID_SETPOINT+0x1>
    149a:	e0 90 de 29 	lds	r14, 0x29DE	; 0x8029de <PID_SETPOINT+0x2>
    149e:	f0 90 df 29 	lds	r15, 0x29DF	; 0x8029df <PID_SETPOINT+0x3>
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	44 e3       	ldi	r20, 0x34	; 52
    14a8:	52 e4       	ldi	r21, 0x42	; 66
    14aa:	c7 01       	movw	r24, r14
    14ac:	b6 01       	movw	r22, r12
    14ae:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    14b2:	87 ff       	sbrs	r24, 7
    14b4:	7f c0       	rjmp	.+254    	; 0x15b4 <Lclass::PID_callingg() [clone .constprop.39]+0x156>
    14b6:	80 e0       	ldi	r24, 0x00	; 0
    14b8:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:67
  {
    Kp= 30; Ki=0.020; Kd=550;  //14-02-2023    
    14ba:	a0 ef       	ldi	r26, 0xF0	; 240
    14bc:	b1 e4       	ldi	r27, 0x41	; 65
    14be:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    14c2:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    14c6:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    14ca:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    14ce:	8a e0       	ldi	r24, 0x0A	; 10
    14d0:	97 ed       	ldi	r25, 0xD7	; 215
    14d2:	a3 ea       	ldi	r26, 0xA3	; 163
    14d4:	bc e3       	ldi	r27, 0x3C	; 60
    14d6:	80 93 24 2a 	sts	0x2A24, r24	; 0x802a24 <Ki>
    14da:	90 93 25 2a 	sts	0x2A25, r25	; 0x802a25 <Ki+0x1>
    14de:	a0 93 26 2a 	sts	0x2A26, r26	; 0x802a26 <Ki+0x2>
    14e2:	b0 93 27 2a 	sts	0x2A27, r27	; 0x802a27 <Ki+0x3>
    14e6:	80 e0       	ldi	r24, 0x00	; 0
    14e8:	90 e8       	ldi	r25, 0x80	; 128
    14ea:	a9 e0       	ldi	r26, 0x09	; 9
    14ec:	b4 e4       	ldi	r27, 0x44	; 68
    14ee:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <Kd>
    14f2:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <Kd+0x1>
    14f6:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <Kd+0x2>
    14fa:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <Kd+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:68
    myPID.SetTunings(Kp, Ki, Kd);    
    14fe:	7c 01       	movw	r14, r24
    1500:	8d 01       	movw	r16, r26
    1502:	2a e0       	ldi	r18, 0x0A	; 10
    1504:	37 ed       	ldi	r19, 0xD7	; 215
    1506:	43 ea       	ldi	r20, 0xA3	; 163
    1508:	5c e3       	ldi	r21, 0x3C	; 60
    150a:	60 e0       	ldi	r22, 0x00	; 0
    150c:	70 e0       	ldi	r23, 0x00	; 0
    150e:	80 ef       	ldi	r24, 0xF0	; 240
    1510:	91 e4       	ldi	r25, 0x41	; 65
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:78
    {
       Kp=150, Ki=0, Kd=0,
       myPID.SetTunings(Kp, Ki, Kd);
    }                    
    else
     myPID.SetTunings(consKp, consKi, consKd); 
    1512:	4a d9       	rcall	.-3436   	; 0x7a8 <PID::SetTunings(double, double, double) [clone .constprop.40]>
    1514:	98 df       	rcall	.-208    	; 0x1446 <millis>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:80
  }   
  if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1516:	c0 90 d8 28 	lds	r12, 0x28D8	; 0x8028d8 <WINDOW_START_TIME>
    151a:	d0 90 d9 28 	lds	r13, 0x28D9	; 0x8028d9 <WINDOW_START_TIME+0x1>
    151e:	e0 90 da 28 	lds	r14, 0x28DA	; 0x8028da <WINDOW_START_TIME+0x2>
    1522:	f0 90 db 28 	lds	r15, 0x28DB	; 0x8028db <WINDOW_START_TIME+0x3>
    1526:	ab 01       	movw	r20, r22
    1528:	bc 01       	movw	r22, r24
    152a:	4c 19       	sub	r20, r12
    152c:	5d 09       	sbc	r21, r13
    152e:	6e 09       	sbc	r22, r14
    1530:	7f 09       	sbc	r23, r15
    1532:	49 3e       	cpi	r20, 0xE9	; 233
    1534:	53 40       	sbci	r21, 0x03	; 3
    1536:	61 05       	cpc	r22, r1
    1538:	71 05       	cpc	r23, r1
    153a:	70 f0       	brcs	.+28     	; 0x1558 <Lclass::PID_callingg() [clone .constprop.39]+0xfa>
    153c:	d7 01       	movw	r26, r14
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:81
          WINDOW_START_TIME += WINDOW_SIZE;
    153e:	c6 01       	movw	r24, r12
    1540:	88 51       	subi	r24, 0x18	; 24
    1542:	9c 4f       	sbci	r25, 0xFC	; 252
    1544:	af 4f       	sbci	r26, 0xFF	; 255
    1546:	bf 4f       	sbci	r27, 0xFF	; 255
    1548:	80 93 d8 28 	sts	0x28D8, r24	; 0x8028d8 <WINDOW_START_TIME>
    154c:	90 93 d9 28 	sts	0x28D9, r25	; 0x8028d9 <WINDOW_START_TIME+0x1>
    1550:	a0 93 da 28 	sts	0x28DA, r26	; 0x8028da <WINDOW_START_TIME+0x2>
    1554:	b0 93 db 28 	sts	0x28DB, r27	; 0x8028db <WINDOW_START_TIME+0x3>
    1558:	76 df       	rcall	.-276    	; 0x1446 <millis>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:83
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)      digitalWrite(HEATER, LOW);
    155a:	c0 90 d8 28 	lds	r12, 0x28D8	; 0x8028d8 <WINDOW_START_TIME>
    155e:	d0 90 d9 28 	lds	r13, 0x28D9	; 0x8028d9 <WINDOW_START_TIME+0x1>
    1562:	e0 90 da 28 	lds	r14, 0x28DA	; 0x8028da <WINDOW_START_TIME+0x2>
    1566:	f0 90 db 28 	lds	r15, 0x28DB	; 0x8028db <WINDOW_START_TIME+0x3>
    156a:	6c 19       	sub	r22, r12
    156c:	7d 09       	sbc	r23, r13
    156e:	8e 09       	sbc	r24, r14
    1570:	9f 09       	sbc	r25, r15
    1572:	0e 94 0e 36 	call	0x6c1c	; 0x6c1c <__floatunsisf>
    1576:	20 91 e0 29 	lds	r18, 0x29E0	; 0x8029e0 <PID_OUTPUT>
    157a:	30 91 e1 29 	lds	r19, 0x29E1	; 0x8029e1 <PID_OUTPUT+0x1>
    157e:	40 91 e2 29 	lds	r20, 0x29E2	; 0x8029e2 <PID_OUTPUT+0x2>
    1582:	50 91 e3 29 	lds	r21, 0x29E3	; 0x8029e3 <PID_OUTPUT+0x3>
    1586:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    158a:	18 16       	cp	r1, r24
    158c:	0c f0       	brlt	.+2      	; 0x1590 <Lclass::PID_callingg() [clone .constprop.39]+0x132>
    158e:	57 c0       	rjmp	.+174    	; 0x163e <Lclass::PID_callingg() [clone .constprop.39]+0x1e0>
digitalWrite():
    1590:	60 e0       	ldi	r22, 0x00	; 0
    1592:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
    1594:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:89
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT))) /* + 0.1)) */    digitalWrite(HEATER, LOW);
    else                                                    digitalWrite(HEATER, HIGH);
  }
}
    1596:	0f 91       	pop	r16
    1598:	ff 90       	pop	r15
    159a:	ef 90       	pop	r14
    159c:	df 90       	pop	r13
    159e:	cf 90       	pop	r12
digitalWrite():
    15a0:	ee cd       	rjmp	.-1060   	; 0x117e <digitalWrite.part.2>
PID_callingg():
    15a2:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:36
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    15a6:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    15aa:	a0 91 de 28 	lds	r26, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    15ae:	b0 91 df 28 	lds	r27, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    15b2:	67 cf       	rjmp	.-306    	; 0x1482 <Lclass::PID_callingg() [clone .constprop.39]+0x24>
    15b4:	20 91 e4 29 	lds	r18, 0x29E4	; 0x8029e4 <PID_INPUT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:72
    Kp= 30; Ki=0.020; Kd=550;  //14-02-2023    
    myPID.SetTunings(Kp, Ki, Kd);    
  }
  else
  {
    if((PID_SETPOINT - PID_INPUT) > 5)   
    15b8:	30 91 e5 29 	lds	r19, 0x29E5	; 0x8029e5 <PID_INPUT+0x1>
    15bc:	40 91 e6 29 	lds	r20, 0x29E6	; 0x8029e6 <PID_INPUT+0x2>
    15c0:	50 91 e7 29 	lds	r21, 0x29E7	; 0x8029e7 <PID_INPUT+0x3>
    15c4:	c7 01       	movw	r24, r14
    15c6:	b6 01       	movw	r22, r12
    15c8:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    15cc:	20 e0       	ldi	r18, 0x00	; 0
    15ce:	30 e0       	ldi	r19, 0x00	; 0
    15d0:	40 ea       	ldi	r20, 0xA0	; 160
    15d2:	50 e4       	ldi	r21, 0x40	; 64
    15d4:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    15d8:	18 16       	cp	r1, r24
    15da:	24 f5       	brge	.+72     	; 0x1624 <Lclass::PID_callingg() [clone .constprop.39]+0x1c6>
    15dc:	80 e0       	ldi	r24, 0x00	; 0
    15de:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:74
    {
       Kp=150, Ki=0, Kd=0,
    15e0:	a6 e1       	ldi	r26, 0x16	; 22
    15e2:	b3 e4       	ldi	r27, 0x43	; 67
    15e4:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    15e8:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    15ec:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    15f0:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    15f4:	10 92 24 2a 	sts	0x2A24, r1	; 0x802a24 <Ki>
    15f8:	10 92 25 2a 	sts	0x2A25, r1	; 0x802a25 <Ki+0x1>
    15fc:	10 92 26 2a 	sts	0x2A26, r1	; 0x802a26 <Ki+0x2>
    1600:	10 92 27 2a 	sts	0x2A27, r1	; 0x802a27 <Ki+0x3>
    1604:	10 92 28 2a 	sts	0x2A28, r1	; 0x802a28 <Kd>
    1608:	10 92 29 2a 	sts	0x2A29, r1	; 0x802a29 <Kd+0x1>
    160c:	10 92 2a 2a 	sts	0x2A2A, r1	; 0x802a2a <Kd+0x2>
    1610:	10 92 2b 2a 	sts	0x2A2B, r1	; 0x802a2b <Kd+0x3>
    1614:	e1 2c       	mov	r14, r1
    1616:	f1 2c       	mov	r15, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:75
       myPID.SetTunings(Kp, Ki, Kd);
    1618:	87 01       	movw	r16, r14
    161a:	a8 01       	movw	r20, r16
    161c:	97 01       	movw	r18, r14
    161e:	bc 01       	movw	r22, r24
    1620:	cd 01       	movw	r24, r26
    1622:	77 cf       	rjmp	.-274    	; 0x1512 <Lclass::PID_callingg() [clone .constprop.39]+0xb4>
    1624:	e1 2c       	mov	r14, r1
    1626:	f1 2c       	mov	r15, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:78
    }                    
    else
     myPID.SetTunings(consKp, consKi, consKd); 
    1628:	08 ec       	ldi	r16, 0xC8	; 200
    162a:	13 e4       	ldi	r17, 0x43	; 67
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	40 e0       	ldi	r20, 0x00	; 0
    1632:	5f e3       	ldi	r21, 0x3F	; 63
    1634:	60 e0       	ldi	r22, 0x00	; 0
    1636:	70 e0       	ldi	r23, 0x00	; 0
    1638:	86 e1       	ldi	r24, 0x16	; 22
    163a:	93 e4       	ldi	r25, 0x43	; 67
    163c:	6a cf       	rjmp	.-300    	; 0x1512 <Lclass::PID_callingg() [clone .constprop.39]+0xb4>
    163e:	20 91 dc 29 	lds	r18, 0x29DC	; 0x8029dc <PID_SETPOINT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:86
          WINDOW_START_TIME += WINDOW_SIZE;
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)      digitalWrite(HEATER, LOW);
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT))) /* + 0.1)) */    digitalWrite(HEATER, LOW);
    1642:	30 91 dd 29 	lds	r19, 0x29DD	; 0x8029dd <PID_SETPOINT+0x1>
    1646:	40 91 de 29 	lds	r20, 0x29DE	; 0x8029de <PID_SETPOINT+0x2>
    164a:	50 91 df 29 	lds	r21, 0x29DF	; 0x8029df <PID_SETPOINT+0x3>
    164e:	60 91 e4 29 	lds	r22, 0x29E4	; 0x8029e4 <PID_INPUT>
    1652:	70 91 e5 29 	lds	r23, 0x29E5	; 0x8029e5 <PID_INPUT+0x1>
    1656:	80 91 e6 29 	lds	r24, 0x29E6	; 0x8029e6 <PID_INPUT+0x2>
    165a:	90 91 e7 29 	lds	r25, 0x29E7	; 0x8029e7 <PID_INPUT+0x3>
    165e:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    1662:	87 ff       	sbrs	r24, 7
    1664:	95 cf       	rjmp	.-214    	; 0x1590 <Lclass::PID_callingg() [clone .constprop.39]+0x132>
digitalWrite():
    1666:	61 e0       	ldi	r22, 0x01	; 1
    1668:	94 cf       	rjmp	.-216    	; 0x1592 <Lclass::PID_callingg() [clone .constprop.39]+0x134>

0000166a <Ticker::update()>:
update():
    166a:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    166c:	1f 93       	push	r17
    166e:	cf 93       	push	r28
    1670:	df 93       	push	r29
tick():
    1672:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    1674:	20 81       	ld	r18, Z
    1676:	22 23       	and	r18, r18
    1678:	09 f4       	brne	.+2      	; 0x167c <Ticker::update()+0x12>
    167a:	50 c0       	rjmp	.+160    	; 0x171c <Ticker::update()+0xb2>
    167c:	ec 01       	movw	r28, r24
    167e:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    1680:	92 85       	ldd	r25, Z+10	; 0x0a
    1682:	01 97       	sbiw	r24, 0x01	; 1
    1684:	b9 f5       	brne	.+110    	; 0x16f4 <Ticker::update()+0x8a>
    1686:	df de       	rcall	.-578    	; 0x1446 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    1688:	0b 89       	ldd	r16, Y+19	; 0x13
    168a:	1c 89       	ldd	r17, Y+20	; 0x14
    168c:	2d 89       	ldd	r18, Y+21	; 0x15
    168e:	3e 89       	ldd	r19, Y+22	; 0x16
    1690:	60 1b       	sub	r22, r16
    1692:	71 0b       	sbc	r23, r17
    1694:	82 0b       	sbc	r24, r18
    1696:	93 0b       	sbc	r25, r19
    1698:	09 81       	ldd	r16, Y+1	; 0x01
    169a:	1a 81       	ldd	r17, Y+2	; 0x02
    169c:	2b 81       	ldd	r18, Y+3	; 0x03
    169e:	3c 81       	ldd	r19, Y+4	; 0x04
    16a0:	60 17       	cp	r22, r16
    16a2:	71 07       	cpc	r23, r17
    16a4:	82 07       	cpc	r24, r18
    16a6:	93 07       	cpc	r25, r19
    16a8:	c8 f1       	brcs	.+114    	; 0x171c <Ticker::update()+0xb2>
    16aa:	cd de       	rcall	.-614    	; 0x1446 <millis>
    16ac:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    16ae:	7c 8b       	std	Y+20, r23	; 0x14
    16b0:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    16b2:	9e 8b       	std	Y+22, r25	; 0x16
    16b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    16b6:	9c 85       	ldd	r25, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    16b8:	ad 85       	ldd	r26, Y+13	; 0x0d
    16ba:	be 85       	ldd	r27, Y+14	; 0x0e
    16bc:	4d 81       	ldd	r20, Y+5	; 0x05
    16be:	5e 81       	ldd	r21, Y+6	; 0x06
    16c0:	6f 81       	ldd	r22, Y+7	; 0x07
    16c2:	78 85       	ldd	r23, Y+8	; 0x08
    16c4:	48 1b       	sub	r20, r24
    16c6:	59 0b       	sbc	r21, r25
    16c8:	6a 0b       	sbc	r22, r26
    16ca:	7b 0b       	sbc	r23, r27
    16cc:	41 30       	cpi	r20, 0x01	; 1
    16ce:	51 05       	cpc	r21, r1
    16d0:	61 05       	cpc	r22, r1
    16d2:	71 05       	cpc	r23, r1
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <Ticker::update()+0x6e>
    16d6:	18 82       	st	Y, r1
    16d8:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    16da:	a1 1d       	adc	r26, r1
    16dc:	b1 1d       	adc	r27, r1
    16de:	8b 87       	std	Y+11, r24	; 0x0b
    16e0:	9c 87       	std	Y+12, r25	; 0x0c
    16e2:	ad 87       	std	Y+13, r26	; 0x0d
    16e4:	be 87       	std	Y+14, r27	; 0x0e
update():
    16e6:	e9 89       	ldd	r30, Y+17	; 0x11
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    16e8:	fa 89       	ldd	r31, Y+18	; 0x12
    16ea:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    16ec:	cf 91       	pop	r28
    16ee:	1f 91       	pop	r17
    16f0:	0f 91       	pop	r16
    16f2:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    16f4:	7f de       	rcall	.-770    	; 0x13f4 <micros>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    16f6:	0b 89       	ldd	r16, Y+19	; 0x13
    16f8:	1c 89       	ldd	r17, Y+20	; 0x14
    16fa:	2d 89       	ldd	r18, Y+21	; 0x15
    16fc:	3e 89       	ldd	r19, Y+22	; 0x16
    16fe:	60 1b       	sub	r22, r16
    1700:	71 0b       	sbc	r23, r17
    1702:	82 0b       	sbc	r24, r18
    1704:	93 0b       	sbc	r25, r19
    1706:	09 81       	ldd	r16, Y+1	; 0x01
    1708:	1a 81       	ldd	r17, Y+2	; 0x02
    170a:	2b 81       	ldd	r18, Y+3	; 0x03
    170c:	3c 81       	ldd	r19, Y+4	; 0x04
    170e:	60 17       	cp	r22, r16
    1710:	71 07       	cpc	r23, r17
    1712:	82 07       	cpc	r24, r18
    1714:	93 07       	cpc	r25, r19
    1716:	10 f0       	brcs	.+4      	; 0x171c <Ticker::update()+0xb2>
    1718:	6d de       	rcall	.-806    	; 0x13f4 <micros>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    171a:	c8 cf       	rjmp	.-112    	; 0x16ac <Ticker::update()+0x42>
update():
    171c:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    171e:	cf 91       	pop	r28
    1720:	1f 91       	pop	r17
    1722:	0f 91       	pop	r16
    1724:	08 95       	ret

00001726 <Ticker::start()>:
start():
    1726:	cf 93       	push	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    1728:	df 93       	push	r29
    172a:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    172c:	21 89       	ldd	r18, Z+17	; 0x11
    172e:	32 89       	ldd	r19, Z+18	; 0x12
    1730:	23 2b       	or	r18, r19
    1732:	a1 f0       	breq	.+40     	; 0x175c <Ticker::start()+0x36>
    1734:	ec 01       	movw	r28, r24
    1736:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    1738:	92 85       	ldd	r25, Z+10	; 0x0a
    173a:	01 97       	sbiw	r24, 0x01	; 1
    173c:	91 f4       	brne	.+36     	; 0x1762 <Ticker::start()+0x3c>
    173e:	83 de       	rcall	.-762    	; 0x1446 <millis>
    1740:	6b 8b       	std	Y+19, r22	; 0x13
    1742:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    1744:	8d 8b       	std	Y+21, r24	; 0x15
    1746:	9e 8b       	std	Y+22, r25	; 0x16
    1748:	81 e0       	ldi	r24, 0x01	; 1
    174a:	88 83       	st	Y, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    174c:	1b 86       	std	Y+11, r1	; 0x0b
    174e:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    1750:	1d 86       	std	Y+13, r1	; 0x0d
    1752:	1e 86       	std	Y+14, r1	; 0x0e
    1754:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	8f 87       	std	Y+15, r24	; 0x0f
    175a:	98 8b       	std	Y+16, r25	; 0x10
    175c:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    175e:	cf 91       	pop	r28
    1760:	08 95       	ret
    1762:	48 de       	rcall	.-880    	; 0x13f4 <micros>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    1764:	ed cf       	rjmp	.-38     	; 0x1740 <Ticker::start()+0x1a>

00001766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>:
BUZZ_INTERVAL():
    1766:	dc 01       	movw	r26, r24
    1768:	bc 01       	movw	r22, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:69
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start(); 
//  Blinking_Freq++;  
}

void Tclass :: BUZZ_INTERVAL(int i)
    176a:	99 0f       	add	r25, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:71
{
  BUZZ.interval(i);
    176c:	88 0b       	sbc	r24, r24
    176e:	99 0b       	sbc	r25, r25
interval():
    1770:	20 91 89 2b 	lds	r18, 0x2B89	; 0x802b89 <BUZZ+0x9>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    1774:	30 91 8a 2b 	lds	r19, 0x2B8A	; 0x802b8a <BUZZ+0xa>
    1778:	23 2b       	or	r18, r19
    177a:	21 f4       	brne	.+8      	; 0x1784 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]+0x1e>
    177c:	28 ee       	ldi	r18, 0xE8	; 232
    177e:	33 e0       	ldi	r19, 0x03	; 3
    1780:	0e 94 7e 37 	call	0x6efc	; 0x6efc <__usmulhisi3>
    1784:	60 93 81 2b 	sts	0x2B81, r22	; 0x802b81 <BUZZ+0x1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    1788:	70 93 82 2b 	sts	0x2B82, r23	; 0x802b82 <BUZZ+0x2>
    178c:	80 93 83 2b 	sts	0x2B83, r24	; 0x802b83 <BUZZ+0x3>
    1790:	90 93 84 2b 	sts	0x2B84, r25	; 0x802b84 <BUZZ+0x4>
digitalWrite():
    1794:	61 e0       	ldi	r22, 0x01	; 1
    1796:	85 e1       	ldi	r24, 0x15	; 21
    1798:	f2 dc       	rcall	.-1564   	; 0x117e <digitalWrite.part.2>
BUZZ_INTERVAL():
    179a:	80 e8       	ldi	r24, 0x80	; 128
    179c:	9b e2       	ldi	r25, 0x2B	; 43
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:73
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    179e:	c3 cf       	rjmp	.-122    	; 0x1726 <Ticker::start()>

000017a0 <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
    17a0:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    17a4:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:325
   
}

void MODE_LONG_PRESS_START()
{
  if (!ENTER_BUT)
    17a6:	17 c0       	rjmp	.+46     	; 0x17d6 <MODE_LONG_PRESS_START()+0x36>
    17a8:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
    17ac:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:327
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    17ae:	13 c0       	rjmp	.+38     	; 0x17d6 <MODE_LONG_PRESS_START()+0x36>
    17b0:	8e e5       	ldi	r24, 0x5E	; 94
    17b2:	91 e0       	ldi	r25, 0x01	; 1
    17b4:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:329
    {
      i = 350;
    17b8:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
    17bc:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
    17c0:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:330
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    17c2:	61 f0       	breq	.+24     	; 0x17dc <MODE_LONG_PRESS_START()+0x3c>
    17c4:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    17c8:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <LONG_PRESS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:332
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    17d2:	80 93 3c 28 	sts	0x283C, r24	; 0x80283c <RST_BUTT>
    17d6:	88 ec       	ldi	r24, 0xC8	; 200
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:333
      RST_BUTT = 1;
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	c5 cf       	rjmp	.-118    	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:344
//      SELECTION_PARAMETER = Product_Selection_Parameter; //Unit_C_F;
//      LONG_PRESS = 1;      //------------------go to menu
//      RST_BUTT = 1;
//    }
  }
 Tick.BUZZ_INTERVAL(200); 
    17dc:	81 e0       	ldi	r24, 0x01	; 1
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:331
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    17e4:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    17e8:	f1 cf       	rjmp	.-30     	; 0x17cc <MODE_LONG_PRESS_START()+0x2c>

000017ea <RESET_CLICK()>:
RESET_CLICK():
    17ea:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    17ee:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:505
  }
}

void RESET_CLICK()
{
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    17f2:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    17f6:	21 11       	cpse	r18, r1
    17f8:	03 c0       	rjmp	.+6      	; 0x1800 <__DATA_REGION_LENGTH__>
    17fa:	88 30       	cpi	r24, 0x08	; 8
    17fc:	91 05       	cpc	r25, r1
    17fe:	29 f0       	breq	.+10     	; 0x180a <__DATA_REGION_LENGTH__+0xa>
    1800:	ac 01       	movw	r20, r24
    1802:	4d 7f       	andi	r20, 0xFD	; 253
    1804:	4c 30       	cpi	r20, 0x0C	; 12
    1806:	51 05       	cpc	r21, r1
    1808:	b9 f5       	brne	.+110    	; 0x1878 <__DATA_REGION_LENGTH__+0x78>
    180a:	01 97       	sbiw	r24, 0x01	; 1
    180c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1810:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:508
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    1814:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
    1818:	81 11       	cpse	r24, r1
    181a:	2b c0       	rjmp	.+86     	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:519
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    181c:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    1820:	22 23       	and	r18, r18
    1822:	d9 f1       	breq	.+118    	; 0x189a <__DATA_REGION_LENGTH__+0x9a>
    1824:	82 30       	cpi	r24, 0x02	; 2
    1826:	c9 f5       	brne	.+114    	; 0x189a <__DATA_REGION_LENGTH__+0x9a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:521
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    1828:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ENTER_BUT>
    182c:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    1830:	85 30       	cpi	r24, 0x05	; 5
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:523
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    1832:	f9 f4       	brne	.+62     	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
    1834:	20 e0       	ldi	r18, 0x00	; 0
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	40 e8       	ldi	r20, 0x80	; 128
    183a:	5f e3       	ldi	r21, 0x3F	; 63
    183c:	60 91 9b 28 	lds	r22, 0x289B	; 0x80289b <RATE_OF_HEATING>
    1840:	70 91 9c 28 	lds	r23, 0x289C	; 0x80289c <RATE_OF_HEATING+0x1>
    1844:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <RATE_OF_HEATING+0x2>
    1848:	90 91 9e 28 	lds	r25, 0x289E	; 0x80289e <RATE_OF_HEATING+0x3>
    184c:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    1850:	87 fd       	sbrc	r24, 7
    1852:	0f c0       	rjmp	.+30     	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
    1854:	80 91 97 28 	lds	r24, 0x2897	; 0x802897 <CHECK_RATE_OF_HEATING>
    1858:	88 23       	and	r24, r24
    185a:	59 f0       	breq	.+22     	; 0x1872 <__DATA_REGION_LENGTH__+0x72>
    185c:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <RATE_OF_HEATING>
    1860:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <RATE_OF_HEATING+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:525
   {
     RATE_OF_HEATING =0;
    1864:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <RATE_OF_HEATING+0x2>
    1868:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <RATE_OF_HEATING+0x3>
    186c:	81 e0       	ldi	r24, 0x01	; 1
    186e:	80 93 97 28 	sts	0x2897, r24	; 0x802897 <CHECK_RATE_OF_HEATING>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:526
     CHECK_RATE_OF_HEATING =1;
    1872:	82 e3       	ldi	r24, 0x32	; 50
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	77 cf       	rjmp	.-274    	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:529
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    1878:	8b 30       	cpi	r24, 0x0B	; 11
    187a:	91 05       	cpc	r25, r1
    187c:	11 f0       	breq	.+4      	; 0x1882 <__DATA_REGION_LENGTH__+0x82>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:511
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    187e:	0d 97       	sbiw	r24, 0x0d	; 13
    1880:	21 f4       	brne	.+8      	; 0x188a <__DATA_REGION_LENGTH__+0x8a>
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	80 93 98 28 	sts	0x2898, r24	; 0x802898 <Mode_Button_Single_Press_In_Settings>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:513
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat ) //|| SELECTION_PARAMETER == Product_Selection_Parameter )   
          Mode_Button_Single_Press_In_Settings =1;
    1888:	c5 cf       	rjmp	.-118    	; 0x1814 <__DATA_REGION_LENGTH__+0x14>
    188a:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    188e:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:516
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    1890:	09 f4       	brne	.+2      	; 0x1894 <__DATA_REGION_LENGTH__+0x94>
    1892:	c0 cf       	rjmp	.-128    	; 0x1814 <__DATA_REGION_LENGTH__+0x14>
    1894:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    1898:	bd cf       	rjmp	.-134    	; 0x1814 <__DATA_REGION_LENGTH__+0x14>
    189a:	81 50       	subi	r24, 0x01	; 1
    189c:	84 30       	cpi	r24, 0x04	; 4
    189e:	30 f6       	brcc	.-116    	; 0x182c <__DATA_REGION_LENGTH__+0x2c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:522
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    18a0:	80 93 0a 29 	sts	0x290A, r24	; 0x80290a <ENTER_BUT>
    18a4:	c3 cf       	rjmp	.-122    	; 0x182c <__DATA_REGION_LENGTH__+0x2c>

000018a6 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
    18a6:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
    18aa:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:534
   Tick.BUZZ_INTERVAL(50); 
}

void RESET_LONG_PRESS_START()
{
  if (!LONG_PRESS )   {
    18ac:	16 c0       	rjmp	.+44     	; 0x18da <RESET_LONG_PRESS_START()+0x34>
    18ae:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:535
  if(!ENTER_BUT)
    18b2:	81 11       	cpse	r24, r1
    18b4:	0b c0       	rjmp	.+22     	; 0x18cc <RESET_LONG_PRESS_START()+0x26>
    18b6:	10 92 3c 28 	sts	0x283C, r1	; 0x80283c <RST_BUTT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:537
  {
    RST_BUTT = 0;    
    18ba:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:539
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    18c2:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    18c6:	88 ec       	ldi	r24, 0xC8	; 200
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:604
//      default :
//        break;
//    }
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	4d cf       	rjmp	.-358    	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
    18cc:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ENTER_BUT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:543
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
    18d0:	10 92 8c 28 	sts	0x288C, r1	; 0x80288c <SET_MIN>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:544
      SET_MIN = 0;
    18d4:	10 92 8d 28 	sts	0x288D, r1	; 0x80288d <SET_MIN+0x1>
    18d8:	f6 cf       	rjmp	.-20     	; 0x18c6 <RESET_LONG_PRESS_START()+0x20>
    18da:	80 91 3b 28 	lds	r24, 0x283B	; 0x80283b <Service_Menu>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:550
//      Process_Interrupt_flag=0;
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    18de:	81 11       	cpse	r24, r1
    18e0:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    18e4:	10 92 3e 29 	sts	0x293E, r1	; 0x80293e <LONG_PRESS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:602
//        TIME_SOCK_OR_TOTAL =SET_LONG_VALUE[Time_Mode];
//        break;
//      default :
//        break;
//    }
    LONG_PRESS = 0;
    18e8:	ee cf       	rjmp	.-36     	; 0x18c6 <RESET_LONG_PRESS_START()+0x20>

000018ea <OneButton::tick()>:
tick():
    18ea:	cf 92       	push	r12
    18ec:	df 92       	push	r13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    18ee:	ef 92       	push	r14
    18f0:	ff 92       	push	r15
    18f2:	0f 93       	push	r16
    18f4:	1f 93       	push	r17
    18f6:	cf 93       	push	r28
    18f8:	df 93       	push	r29
    18fa:	ec 01       	movw	r28, r24
    18fc:	88 81       	ld	r24, Y
digitalRead():
    18fe:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    1900:	f8 f4       	brcc	.+62     	; 0x1940 <OneButton::tick()+0x56>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1902:	58 dd       	rcall	.-1360   	; 0x13b4 <digitalRead.part.3>
tick():
    1904:	08 2f       	mov	r16, r24
    1906:	10 e0       	ldi	r17, 0x00	; 0
    1908:	9e dd       	rcall	.-1220   	; 0x1446 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    190a:	29 8d       	ldd	r18, Y+25	; 0x19
    190c:	3a 8d       	ldd	r19, Y+26	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    190e:	21 15       	cp	r18, r1
    1910:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    1912:	c1 f4       	brne	.+48     	; 0x1944 <OneButton::tick()+0x5a>
    1914:	2a 85       	ldd	r18, Y+10	; 0x0a
    1916:	3b 85       	ldd	r19, Y+11	; 0x0b
    1918:	20 17       	cp	r18, r16
    191a:	31 07       	cpc	r19, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    191c:	41 f4       	brne	.+16     	; 0x192e <OneButton::tick()+0x44>
    191e:	21 e0       	ldi	r18, 0x01	; 1
    1920:	30 e0       	ldi	r19, 0x00	; 0
    1922:	29 8f       	std	Y+25, r18	; 0x19
    1924:	3a 8f       	std	Y+26, r19	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    1926:	6b 8f       	std	Y+27, r22	; 0x1b
    1928:	7c 8f       	std	Y+28, r23	; 0x1c
    192a:	8d 8f       	std	Y+29, r24	; 0x1d
    192c:	9e 8f       	std	Y+30, r25	; 0x1e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	1f 91       	pop	r17
    1934:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    1936:	ff 90       	pop	r15
    1938:	ef 90       	pop	r14
    193a:	df 90       	pop	r13
    193c:	cf 90       	pop	r12
    193e:	08 95       	ret
    1940:	80 e0       	ldi	r24, 0x00	; 0
    1942:	e0 cf       	rjmp	.-64     	; 0x1904 <OneButton::tick()+0x1a>
    1944:	21 30       	cpi	r18, 0x01	; 1
    1946:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    1948:	09 f0       	breq	.+2      	; 0x194c <OneButton::tick()+0x62>
    194a:	51 c0       	rjmp	.+162    	; 0x19ee <OneButton::tick()+0x104>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    194c:	28 85       	ldd	r18, Y+8	; 0x08
    194e:	39 85       	ldd	r19, Y+9	; 0x09
    1950:	20 17       	cp	r18, r16
    1952:	31 07       	cpc	r19, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    1954:	e9 f4       	brne	.+58     	; 0x1990 <OneButton::tick()+0xa6>
    1956:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1958:	1c 8d       	ldd	r17, Y+28	; 0x1c
    195a:	2d 8d       	ldd	r18, Y+29	; 0x1d
    195c:	3e 8d       	ldd	r19, Y+30	; 0x1e
    195e:	ab 01       	movw	r20, r22
    1960:	bc 01       	movw	r22, r24
    1962:	40 1b       	sub	r20, r16
    1964:	51 0b       	sbc	r21, r17
    1966:	62 0b       	sbc	r22, r18
    1968:	73 0b       	sbc	r23, r19
    196a:	8e 81       	ldd	r24, Y+6	; 0x06
    196c:	9f 81       	ldd	r25, Y+7	; 0x07
    196e:	09 2e       	mov	r0, r25
    1970:	00 0c       	add	r0, r0
    1972:	aa 0b       	sbc	r26, r26
    1974:	bb 0b       	sbc	r27, r27
    1976:	48 17       	cp	r20, r24
    1978:	59 07       	cpc	r21, r25
    197a:	6a 07       	cpc	r22, r26
    197c:	7b 07       	cpc	r23, r27
    197e:	18 f4       	brcc	.+6      	; 0x1986 <OneButton::tick()+0x9c>
    1980:	19 8e       	std	Y+25, r1	; 0x19
    1982:	1a 8e       	std	Y+26, r1	; 0x1a
    1984:	d4 cf       	rjmp	.-88     	; 0x192e <OneButton::tick()+0x44>
    1986:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	89 8f       	std	Y+25, r24	; 0x19
    198c:	9a 8f       	std	Y+26, r25	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    198e:	cf cf       	rjmp	.-98     	; 0x192e <OneButton::tick()+0x44>
    1990:	2a 85       	ldd	r18, Y+10	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    1992:	3b 85       	ldd	r19, Y+11	; 0x0b
    1994:	20 17       	cp	r18, r16
    1996:	31 07       	cpc	r19, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    1998:	51 f6       	brne	.-108    	; 0x192e <OneButton::tick()+0x44>
    199a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    199c:	1c 8d       	ldd	r17, Y+28	; 0x1c
    199e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    19a0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    19a2:	ab 01       	movw	r20, r22
    19a4:	bc 01       	movw	r22, r24
    19a6:	40 1b       	sub	r20, r16
    19a8:	51 0b       	sbc	r21, r17
    19aa:	62 0b       	sbc	r22, r18
    19ac:	73 0b       	sbc	r23, r19
    19ae:	8c 81       	ldd	r24, Y+4	; 0x04
    19b0:	9d 81       	ldd	r25, Y+5	; 0x05
    19b2:	09 2e       	mov	r0, r25
    19b4:	00 0c       	add	r0, r0
    19b6:	aa 0b       	sbc	r26, r26
    19b8:	bb 0b       	sbc	r27, r27
    19ba:	84 17       	cp	r24, r20
    19bc:	95 07       	cpc	r25, r21
    19be:	a6 07       	cpc	r26, r22
    19c0:	b7 07       	cpc	r27, r23
    19c2:	08 f0       	brcs	.+2      	; 0x19c6 <OneButton::tick()+0xdc>
    19c4:	b4 cf       	rjmp	.-152    	; 0x192e <OneButton::tick()+0x44>
    19c6:	81 e0       	ldi	r24, 0x01	; 1
    19c8:	8c 87       	std	Y+12, r24	; 0x0c
    19ca:	e9 89       	ldd	r30, Y+17	; 0x11
    19cc:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    19ce:	30 97       	sbiw	r30, 0x00	; 0
    19d0:	09 f0       	breq	.+2      	; 0x19d4 <OneButton::tick()+0xea>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    19d2:	09 95       	icall
    19d4:	eb 89       	ldd	r30, Y+19	; 0x13
    19d6:	fc 89       	ldd	r31, Y+20	; 0x14
    19d8:	30 97       	sbiw	r30, 0x00	; 0
    19da:	09 f0       	breq	.+2      	; 0x19de <OneButton::tick()+0xf4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    19dc:	09 95       	icall
    19de:	ef 89       	ldd	r30, Y+23	; 0x17
    19e0:	f8 8d       	ldd	r31, Y+24	; 0x18
    19e2:	30 97       	sbiw	r30, 0x00	; 0
    19e4:	09 f0       	breq	.+2      	; 0x19e8 <OneButton::tick()+0xfe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    19e6:	09 95       	icall
    19e8:	86 e0       	ldi	r24, 0x06	; 6
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	ce cf       	rjmp	.-100    	; 0x198a <OneButton::tick()+0xa0>
    19ee:	22 30       	cpi	r18, 0x02	; 2
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    19f0:	31 05       	cpc	r19, r1
    19f2:	19 f5       	brne	.+70     	; 0x1a3a <OneButton::tick()+0x150>
    19f4:	cb 8c       	ldd	r12, Y+27	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    19f6:	dc 8c       	ldd	r13, Y+28	; 0x1c
    19f8:	ed 8c       	ldd	r14, Y+29	; 0x1d
    19fa:	fe 8c       	ldd	r15, Y+30	; 0x1e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    19fc:	6c 19       	sub	r22, r12
    19fe:	7d 09       	sbc	r23, r13
    1a00:	8e 09       	sbc	r24, r14
    1a02:	9f 09       	sbc	r25, r15
    1a04:	ca 80       	ldd	r12, Y+2	; 0x02
    1a06:	db 80       	ldd	r13, Y+3	; 0x03
    1a08:	0d 2c       	mov	r0, r13
    1a0a:	00 0c       	add	r0, r0
    1a0c:	ee 08       	sbc	r14, r14
    1a0e:	ff 08       	sbc	r15, r15
    1a10:	c6 16       	cp	r12, r22
    1a12:	d7 06       	cpc	r13, r23
    1a14:	e8 06       	cpc	r14, r24
    1a16:	f9 06       	cpc	r15, r25
    1a18:	38 f4       	brcc	.+14     	; 0x1a28 <OneButton::tick()+0x13e>
    1a1a:	ed 85       	ldd	r30, Y+13	; 0x0d
    1a1c:	fe 85       	ldd	r31, Y+14	; 0x0e
    1a1e:	30 97       	sbiw	r30, 0x00	; 0
    1a20:	09 f4       	brne	.+2      	; 0x1a24 <OneButton::tick()+0x13a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    1a22:	ae cf       	rjmp	.-164    	; 0x1980 <OneButton::tick()+0x96>
    1a24:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    1a26:	ac cf       	rjmp	.-168    	; 0x1980 <OneButton::tick()+0x96>
    1a28:	8a 85       	ldd	r24, Y+10	; 0x0a
    1a2a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1a2c:	80 17       	cp	r24, r16
    1a2e:	91 07       	cpc	r25, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    1a30:	09 f0       	breq	.+2      	; 0x1a34 <OneButton::tick()+0x14a>
    1a32:	7d cf       	rjmp	.-262    	; 0x192e <OneButton::tick()+0x44>
    1a34:	83 e0       	ldi	r24, 0x03	; 3
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	a8 cf       	rjmp	.-176    	; 0x198a <OneButton::tick()+0xa0>
    1a3a:	23 30       	cpi	r18, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    1a3c:	31 05       	cpc	r19, r1
    1a3e:	49 f4       	brne	.+18     	; 0x1a52 <OneButton::tick()+0x168>
    1a40:	88 85       	ldd	r24, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    1a42:	99 85       	ldd	r25, Y+9	; 0x09
    1a44:	80 17       	cp	r24, r16
    1a46:	91 07       	cpc	r25, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    1a48:	09 f0       	breq	.+2      	; 0x1a4c <OneButton::tick()+0x162>
    1a4a:	71 cf       	rjmp	.-286    	; 0x192e <OneButton::tick()+0x44>
    1a4c:	ef 85       	ldd	r30, Y+15	; 0x0f
    1a4e:	f8 89       	ldd	r31, Y+16	; 0x10
    1a50:	e6 cf       	rjmp	.-52     	; 0x1a1e <OneButton::tick()+0x134>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    1a52:	26 30       	cpi	r18, 0x06	; 6
    1a54:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    1a56:	09 f0       	breq	.+2      	; 0x1a5a <OneButton::tick()+0x170>
    1a58:	6a cf       	rjmp	.-300    	; 0x192e <OneButton::tick()+0x44>
    1a5a:	88 85       	ldd	r24, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    1a5c:	99 85       	ldd	r25, Y+9	; 0x09
    1a5e:	80 17       	cp	r24, r16
    1a60:	91 07       	cpc	r25, r17
    1a62:	21 f4       	brne	.+8      	; 0x1a6c <OneButton::tick()+0x182>
    1a64:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    1a66:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    1a68:	fe 89       	ldd	r31, Y+22	; 0x16
    1a6a:	d9 cf       	rjmp	.-78     	; 0x1a1e <OneButton::tick()+0x134>
    1a6c:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    1a6e:	8c 87       	std	Y+12, r24	; 0x0c
    1a70:	ef 89       	ldd	r30, Y+23	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1a72:	f8 8d       	ldd	r31, Y+24	; 0x18
    1a74:	30 97       	sbiw	r30, 0x00	; 0
    1a76:	09 f4       	brne	.+2      	; 0x1a7a <OneButton::tick()+0x190>
    1a78:	5a cf       	rjmp	.-332    	; 0x192e <OneButton::tick()+0x44>
    1a7a:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    1a7c:	cf 91       	pop	r28
    1a7e:	1f 91       	pop	r17
    1a80:	0f 91       	pop	r16
    1a82:	ff 90       	pop	r15
    1a84:	ef 90       	pop	r14
    1a86:	df 90       	pop	r13
    1a88:	cf 90       	pop	r12
    1a8a:	09 94       	ijmp

00001a8c <STOP_BUZZER()>:
stop():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if(_longPressStopFunc) _longPressStopFunc();
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1a8c:	e0 e8       	ldi	r30, 0x80	; 128
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1a8e:	fb e2       	ldi	r31, 0x2B	; 43
    1a90:	10 82       	st	Z, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1a92:	13 86       	std	Z+11, r1	; 0x0b
    1a94:	14 86       	std	Z+12, r1	; 0x0c
    1a96:	15 86       	std	Z+13, r1	; 0x0d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1a98:	16 86       	std	Z+14, r1	; 0x0e
    1a9a:	17 86       	std	Z+15, r1	; 0x0f
    1a9c:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
    1a9e:	60 e0       	ldi	r22, 0x00	; 0
    1aa0:	85 e1       	ldi	r24, 0x15	; 21
    1aa2:	6d cb       	rjmp	.-2342   	; 0x117e <digitalWrite.part.2>

00001aa4 <STOP_BUZZER1()>:
STOP_BUZZER1():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:95
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1aa4:	8a e4       	ldi	r24, 0x4A	; 74
    1aa6:	9b e2       	ldi	r25, 0x2B	; 43
    1aa8:	3e de       	rcall	.-900    	; 0x1726 <Ticker::start()>
digitalWrite():
    1aaa:	61 e0       	ldi	r22, 0x01	; 1
    1aac:	85 e1       	ldi	r24, 0x15	; 21
    1aae:	67 cb       	rjmp	.-2354   	; 0x117e <digitalWrite.part.2>

00001ab0 <STOP_BUZZER2()>:
    1ab0:	60 e0       	ldi	r22, 0x00	; 0
    1ab2:	85 e1       	ldi	r24, 0x15	; 21
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:77
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1ab4:	64 db       	rcall	.-2360   	; 0x117e <digitalWrite.part.2>
STOP_BUZZER2():
    1ab6:	80 91 99 28 	lds	r24, 0x2899	; 0x802899 <REPETATION_FLAG>
    1aba:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:79
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1abc:	49 f0       	breq	.+18     	; 0x1ad0 <STOP_BUZZER2()+0x20>
    1abe:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <FOR_REP>
    1ac2:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <FOR_REP+0x1>
    1ac6:	01 96       	adiw	r24, 0x01	; 1
    1ac8:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <FOR_REP>
    1acc:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <FOR_REP+0x1>
    1ad0:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <FOR_REP2>
    1ad4:	90 91 a9 28 	lds	r25, 0x28A9	; 0x8028a9 <FOR_REP2+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:80
   FOR_REP2++;
    1ad8:	01 96       	adiw	r24, 0x01	; 1
    1ada:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <FOR_REP2>
    1ade:	90 93 a9 28 	sts	0x28A9, r25	; 0x8028a9 <FOR_REP2+0x1>
    1ae2:	08 95       	ret

00001ae4 <LED_off()>:
digitalWrite():
    1ae4:	60 e0       	ldi	r22, 0x00	; 0
    1ae6:	8a e1       	ldi	r24, 0x1A	; 26
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:81
}
    1ae8:	4a db       	rcall	.-2412   	; 0x117e <digitalWrite.part.2>
LED_off():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:63
//  Blink_LED_OFF.start();
 Blinking_Freq++;  
}

void LED_off()
{
    1aea:	8f e2       	ldi	r24, 0x2F	; 47
    1aec:	9b e2       	ldi	r25, 0x2B	; 43
    1aee:	1b ce       	rjmp	.-970    	; 0x1726 <Ticker::start()>

00001af0 <LED_on()>:
digitalWrite():
    1af0:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:65
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start(); 
    1af2:	8a e1       	ldi	r24, 0x1A	; 26
    1af4:	44 db       	rcall	.-2424   	; 0x117e <digitalWrite.part.2>
LED_on():
    1af6:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <Blinking_Freq>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:56
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1afa:	8f 5f       	subi	r24, 0xFF	; 255
    1afc:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <Blinking_Freq>
    1b00:	08 95       	ret

00001b02 <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:59
  digitalWrite(ALARM_LED, HIGH); 
//  Blink_LED_OFF.start();
 Blinking_Freq++;  
    1b02:	8f 92       	push	r8
    1b04:	9f 92       	push	r9
    1b06:	af 92       	push	r10
    1b08:	bf 92       	push	r11
    1b0a:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:60
}
    1b0c:	df 92       	push	r13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:40
{  
  TEMP_UPDATE.start();
}

void RTD_TEMP_CAL()
{
    1b0e:	ef 92       	push	r14
    1b10:	ff 92       	push	r15
    1b12:	cf 93       	push	r28
    1b14:	df 93       	push	r29
    1b16:	c0 91 25 28 	lds	r28, 0x2825	; 0x802825 <sample>
    1b1a:	d0 91 26 28 	lds	r29, 0x2826	; 0x802826 <sample+0x1>
    1b1e:	21 96       	adiw	r28, 0x01	; 1
    1b20:	c0 93 25 28 	sts	0x2825, r28	; 0x802825 <sample>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:41
    sample++;
    1b24:	d0 93 26 28 	sts	0x2826, r29	; 0x802826 <sample+0x1>
analogRead():
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1b2e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
    1b32:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1b36:	80 ff       	sbrs	r24, 0
    1b38:	fc cf       	rjmp	.-8      	; 0x1b32 <RTD_TEMP_CAL()+0x30>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1b3a:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1b3e:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
    1b42:	07 2e       	mov	r0, r23
    1b44:	00 0c       	add	r0, r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1b46:	88 0b       	sbc	r24, r24
    1b48:	99 0b       	sbc	r25, r25
    1b4a:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:42
    AvgVout = analogRead(A1);
    1b4e:	20 91 21 28 	lds	r18, 0x2821	; 0x802821 <TotalVout>
    1b52:	30 91 22 28 	lds	r19, 0x2822	; 0x802822 <TotalVout+0x1>
    1b56:	40 91 23 28 	lds	r20, 0x2823	; 0x802823 <TotalVout+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:43
    TotalVout  += AvgVout ;  // Vout;
    1b5a:	50 91 24 28 	lds	r21, 0x2824	; 0x802824 <TotalVout+0x3>
    1b5e:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    1b62:	6b 01       	movw	r12, r22
    1b64:	7c 01       	movw	r14, r24
    1b66:	c0 92 21 28 	sts	0x2821, r12	; 0x802821 <TotalVout>
    1b6a:	d0 92 22 28 	sts	0x2822, r13	; 0x802822 <TotalVout+0x1>
    1b6e:	e0 92 23 28 	sts	0x2823, r14	; 0x802823 <TotalVout+0x2>
    1b72:	f0 92 24 28 	sts	0x2824, r15	; 0x802824 <TotalVout+0x3>
    1b76:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    1b7a:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    1b7e:	c6 17       	cp	r28, r22
    1b80:	d7 07       	cpc	r29, r23
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:44
    if(sample >= avrage_val)
    1b82:	0c f4       	brge	.+2      	; 0x1b86 <RTD_TEMP_CAL()+0x84>
    1b84:	76 c0       	rjmp	.+236    	; 0x1c72 <RTD_TEMP_CAL()+0x170>
    1b86:	07 2e       	mov	r0, r23
    1b88:	00 0c       	add	r0, r0
    1b8a:	88 0b       	sbc	r24, r24
    1b8c:	99 0b       	sbc	r25, r25
    1b8e:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:46
    {
      TotalVout /= avrage_val;
    1b92:	9b 01       	movw	r18, r22
    1b94:	ac 01       	movw	r20, r24
    1b96:	c7 01       	movw	r24, r14
    1b98:	b6 01       	movw	r22, r12
    1b9a:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    1b9e:	60 93 21 28 	sts	0x2821, r22	; 0x802821 <TotalVout>
    1ba2:	70 93 22 28 	sts	0x2822, r23	; 0x802822 <TotalVout+0x1>
    1ba6:	80 93 23 28 	sts	0x2823, r24	; 0x802823 <TotalVout+0x2>
    1baa:	90 93 24 28 	sts	0x2824, r25	; 0x802824 <TotalVout+0x3>
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	40 ea       	ldi	r20, 0xA0	; 160
    1bb4:	50 e4       	ldi	r21, 0x40	; 64
    1bb6:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:47
      float Vout = ((TotalVout * Vs) / 1023.0);                                      // Voltage conversion
    1bba:	20 e0       	ldi	r18, 0x00	; 0
    1bbc:	30 ec       	ldi	r19, 0xC0	; 192
    1bbe:	4f e7       	ldi	r20, 0x7F	; 127
    1bc0:	54 e4       	ldi	r21, 0x44	; 68
    1bc2:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	40 e2       	ldi	r20, 0x20	; 32
    1bcc:	51 e4       	ldi	r21, 0x41	; 65
    1bce:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:48
      Vin = Vout / 10;                                                               // Gain
    1bd2:	28 eb       	ldi	r18, 0xB8	; 184
    1bd4:	3f e8       	ldi	r19, 0x8F	; 143
    1bd6:	40 e6       	ldi	r20, 0x60	; 96
    1bd8:	5f e3       	ldi	r21, 0x3F	; 63
    1bda:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:49
      Rt = ((Vb + Vin) * Rc) / (Vs - (Vb + Vin));   //   Va = Vb + Vin 
    1bde:	6b 01       	movw	r12, r22
    1be0:	7c 01       	movw	r14, r24
    1be2:	20 e0       	ldi	r18, 0x00	; 0
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	4b ee       	ldi	r20, 0xEB	; 235
    1be8:	53 e4       	ldi	r21, 0x43	; 67
    1bea:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    1bee:	4b 01       	movw	r8, r22
    1bf0:	5c 01       	movw	r10, r24
    1bf2:	a7 01       	movw	r20, r14
    1bf4:	96 01       	movw	r18, r12
    1bf6:	60 e0       	ldi	r22, 0x00	; 0
    1bf8:	70 e0       	ldi	r23, 0x00	; 0
    1bfa:	80 ea       	ldi	r24, 0xA0	; 160
    1bfc:	90 e4       	ldi	r25, 0x40	; 64
    1bfe:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1c02:	9b 01       	movw	r18, r22
    1c04:	ac 01       	movw	r20, r24
    1c06:	c5 01       	movw	r24, r10
    1c08:	b4 01       	movw	r22, r8
    1c0a:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	48 ec       	ldi	r20, 0xC8	; 200
    1c14:	52 e4       	ldi	r21, 0x42	; 66
    1c16:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:50
      TEMP_DEG_RAW = ((Rt / Rb) - 1) / (Alpha);         // alpha is temp coefficient for paltinum
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	40 e8       	ldi	r20, 0x80	; 128
    1c20:	5f e3       	ldi	r21, 0x3F	; 63
    1c22:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1c26:	28 e4       	ldi	r18, 0x48	; 72
    1c28:	30 e5       	ldi	r19, 0x50	; 80
    1c2a:	4c e7       	ldi	r20, 0x7C	; 124
    1c2c:	5b e3       	ldi	r21, 0x3B	; 59
    1c2e:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    1c32:	60 93 dc 28 	sts	0x28DC, r22	; 0x8028dc <TEMP_DEG_RAW>
    1c36:	70 93 dd 28 	sts	0x28DD, r23	; 0x8028dd <TEMP_DEG_RAW+0x1>
    1c3a:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <TEMP_DEG_RAW+0x2>
    1c3e:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <TEMP_DEG_RAW+0x3>
    1c42:	26 e6       	ldi	r18, 0x66	; 102
    1c44:	36 e6       	ldi	r19, 0x66	; 102
    1c46:	46 ee       	ldi	r20, 0xE6	; 230
    1c48:	5f e3       	ldi	r21, 0x3F	; 63
    1c4a:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:51
      TEMP_FAH_RAW = (( TEMP_DEG_RAW * 1.8 ) + 32);
    1c4e:	20 e0       	ldi	r18, 0x00	; 0
    1c50:	30 e0       	ldi	r19, 0x00	; 0
    1c52:	40 e0       	ldi	r20, 0x00	; 0
    1c54:	52 e4       	ldi	r21, 0x42	; 66
    1c56:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    1c5a:	60 93 c9 28 	sts	0x28C9, r22	; 0x8028c9 <TEMP_FAH_RAW>
    1c5e:	70 93 ca 28 	sts	0x28CA, r23	; 0x8028ca <TEMP_FAH_RAW+0x1>
    1c62:	80 93 cb 28 	sts	0x28CB, r24	; 0x8028cb <TEMP_FAH_RAW+0x2>
    1c66:	90 93 cc 28 	sts	0x28CC, r25	; 0x8028cc <TEMP_FAH_RAW+0x3>
    1c6a:	10 92 25 28 	sts	0x2825, r1	; 0x802825 <sample>
    1c6e:	10 92 26 28 	sts	0x2826, r1	; 0x802826 <sample+0x1>
    1c72:	82 e3       	ldi	r24, 0x32	; 50
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:52
      sample = 0;   AvgVout = 0;   
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
    1c7a:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:54
    }
   avrage_val = 50;
    1c7e:	df 91       	pop	r29
    1c80:	cf 91       	pop	r28
    1c82:	ff 90       	pop	r15
    1c84:	ef 90       	pop	r14
    1c86:	df 90       	pop	r13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Temp.cpp:55
}
    1c88:	cf 90       	pop	r12
    1c8a:	bf 90       	pop	r11
    1c8c:	af 90       	pop	r10
    1c8e:	9f 90       	pop	r9
    1c90:	8f 90       	pop	r8
    1c92:	08 95       	ret

00001c94 <PID_RUN()>:
PID_RUN():
    1c94:	3f 92       	push	r3
    1c96:	4f 92       	push	r4
    1c98:	5f 92       	push	r5
    1c9a:	6f 92       	push	r6
    1c9c:	7f 92       	push	r7
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:29
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1c9e:	8f 92       	push	r8
    1ca0:	9f 92       	push	r9
    1ca2:	af 92       	push	r10
    1ca4:	bf 92       	push	r11
    1ca6:	cf 92       	push	r12
    1ca8:	df 92       	push	r13
    1caa:	ef 92       	push	r14
    1cac:	ff 92       	push	r15
    1cae:	0f 93       	push	r16
    1cb0:	1f 93       	push	r17
    1cb2:	cf 93       	push	r28
    1cb4:	df 93       	push	r29
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	2e 97       	sbiw	r28, 0x0e	; 14
    1cbc:	cd bf       	out	0x3d, r28	; 61
    1cbe:	de bf       	out	0x3e, r29	; 62
Compute():
    1cc0:	80 91 22 2a 	lds	r24, 0x2A22	; 0x802a22 <myPID+0x3a>
    1cc4:	88 23       	and	r24, r24
    1cc6:	09 f4       	brne	.+2      	; 0x1cca <PID_RUN()+0x36>
    1cc8:	29 c1       	rjmp	.+594    	; 0x1f1c <PID_RUN()+0x288>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1cca:	bd db       	rcall	.-2182   	; 0x1446 <millis>
    1ccc:	6d 83       	std	Y+5, r22	; 0x05
    1cce:	7e 83       	std	Y+6, r23	; 0x06
    1cd0:	8f 83       	std	Y+7, r24	; 0x07
    1cd2:	98 87       	std	Y+8, r25	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1cd4:	80 91 0a 2a 	lds	r24, 0x2A0A	; 0x802a0a <myPID+0x22>
    1cd8:	90 91 0b 2a 	lds	r25, 0x2A0B	; 0x802a0b <myPID+0x23>
    1cdc:	a0 91 0c 2a 	lds	r26, 0x2A0C	; 0x802a0c <myPID+0x24>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1ce0:	b0 91 0d 2a 	lds	r27, 0x2A0D	; 0x802a0d <myPID+0x25>
    1ce4:	4d 81       	ldd	r20, Y+5	; 0x05
    1ce6:	5e 81       	ldd	r21, Y+6	; 0x06
    1ce8:	6f 81       	ldd	r22, Y+7	; 0x07
    1cea:	78 85       	ldd	r23, Y+8	; 0x08
    1cec:	48 1b       	sub	r20, r24
    1cee:	59 0b       	sbc	r21, r25
    1cf0:	6a 0b       	sbc	r22, r26
    1cf2:	7b 0b       	sbc	r23, r27
    1cf4:	80 91 16 2a 	lds	r24, 0x2A16	; 0x802a16 <myPID+0x2e>
    1cf8:	90 91 17 2a 	lds	r25, 0x2A17	; 0x802a17 <myPID+0x2f>
    1cfc:	a0 91 18 2a 	lds	r26, 0x2A18	; 0x802a18 <myPID+0x30>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1d00:	b0 91 19 2a 	lds	r27, 0x2A19	; 0x802a19 <myPID+0x31>
    1d04:	48 17       	cp	r20, r24
    1d06:	59 07       	cpc	r21, r25
    1d08:	6a 07       	cpc	r22, r26
    1d0a:	7b 07       	cpc	r23, r27
    1d0c:	08 f4       	brcc	.+2      	; 0x1d10 <PID_RUN()+0x7c>
    1d0e:	06 c1       	rjmp	.+524    	; 0x1f1c <PID_RUN()+0x288>
    1d10:	e0 91 04 2a 	lds	r30, 0x2A04	; 0x802a04 <myPID+0x1c>
    1d14:	f0 91 05 2a 	lds	r31, 0x2A05	; 0x802a05 <myPID+0x1d>
    1d18:	80 81       	ld	r24, Z
    1d1a:	91 81       	ldd	r25, Z+1	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1d1c:	a2 81       	ldd	r26, Z+2	; 0x02
    1d1e:	b3 81       	ldd	r27, Z+3	; 0x03
    1d20:	89 83       	std	Y+1, r24	; 0x01
    1d22:	9a 83       	std	Y+2, r25	; 0x02
    1d24:	ab 83       	std	Y+3, r26	; 0x03
    1d26:	bc 83       	std	Y+4, r27	; 0x04
    1d28:	e0 91 08 2a 	lds	r30, 0x2A08	; 0x802a08 <myPID+0x20>
    1d2c:	f0 91 09 2a 	lds	r31, 0x2A09	; 0x802a09 <myPID+0x21>
    1d30:	9c 01       	movw	r18, r24
    1d32:	ad 01       	movw	r20, r26
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1d34:	60 81       	ld	r22, Z
    1d36:	71 81       	ldd	r23, Z+1	; 0x01
    1d38:	82 81       	ldd	r24, Z+2	; 0x02
    1d3a:	93 81       	ldd	r25, Z+3	; 0x03
    1d3c:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1d40:	4b 01       	movw	r8, r22
    1d42:	5c 01       	movw	r10, r24
    1d44:	20 91 12 2a 	lds	r18, 0x2A12	; 0x802a12 <myPID+0x2a>
    1d48:	30 91 13 2a 	lds	r19, 0x2A13	; 0x802a13 <myPID+0x2b>
    1d4c:	40 91 14 2a 	lds	r20, 0x2A14	; 0x802a14 <myPID+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1d50:	50 91 15 2a 	lds	r21, 0x2A15	; 0x802a15 <myPID+0x2d>
    1d54:	69 81       	ldd	r22, Y+1	; 0x01
    1d56:	7a 81       	ldd	r23, Y+2	; 0x02
    1d58:	8b 81       	ldd	r24, Y+3	; 0x03
    1d5a:	9c 81       	ldd	r25, Y+4	; 0x04
    1d5c:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1d60:	6b 01       	movw	r12, r22
    1d62:	7c 01       	movw	r14, r24
    1d64:	20 91 f8 29 	lds	r18, 0x29F8	; 0x8029f8 <myPID+0x10>
    1d68:	30 91 f9 29 	lds	r19, 0x29F9	; 0x8029f9 <myPID+0x11>
    1d6c:	40 91 fa 29 	lds	r20, 0x29FA	; 0x8029fa <myPID+0x12>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1d70:	50 91 fb 29 	lds	r21, 0x29FB	; 0x8029fb <myPID+0x13>
    1d74:	c5 01       	movw	r24, r10
    1d76:	b4 01       	movw	r22, r8
    1d78:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    1d7c:	20 91 0e 2a 	lds	r18, 0x2A0E	; 0x802a0e <myPID+0x26>
    1d80:	30 91 0f 2a 	lds	r19, 0x2A0F	; 0x802a0f <myPID+0x27>
    1d84:	40 91 10 2a 	lds	r20, 0x2A10	; 0x802a10 <myPID+0x28>
    1d88:	50 91 11 2a 	lds	r21, 0x2A11	; 0x802a11 <myPID+0x29>
    1d8c:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    1d90:	2b 01       	movw	r4, r22
    1d92:	3c 01       	movw	r6, r24
    1d94:	40 92 0e 2a 	sts	0x2A0E, r4	; 0x802a0e <myPID+0x26>
    1d98:	50 92 0f 2a 	sts	0x2A0F, r5	; 0x802a0f <myPID+0x27>
    1d9c:	60 92 10 2a 	sts	0x2A10, r6	; 0x802a10 <myPID+0x28>
    1da0:	70 92 11 2a 	sts	0x2A11, r7	; 0x802a11 <myPID+0x29>
    1da4:	30 90 23 2a 	lds	r3, 0x2A23	; 0x802a23 <myPID+0x3b>
    1da8:	31 10       	cpse	r3, r1
    1daa:	1a c0       	rjmp	.+52     	; 0x1de0 <PID_RUN()+0x14c>
    1dac:	20 91 f4 29 	lds	r18, 0x29F4	; 0x8029f4 <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1db0:	30 91 f5 29 	lds	r19, 0x29F5	; 0x8029f5 <myPID+0xd>
    1db4:	40 91 f6 29 	lds	r20, 0x29F6	; 0x8029f6 <myPID+0xe>
    1db8:	50 91 f7 29 	lds	r21, 0x29F7	; 0x8029f7 <myPID+0xf>
    1dbc:	c7 01       	movw	r24, r14
    1dbe:	b6 01       	movw	r22, r12
    1dc0:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    1dc4:	9b 01       	movw	r18, r22
    1dc6:	ac 01       	movw	r20, r24
    1dc8:	c3 01       	movw	r24, r6
    1dca:	b2 01       	movw	r22, r4
    1dcc:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1dd0:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x26>
    1dd4:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x27>
    1dd8:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x28>
    1ddc:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x29>
    1de0:	40 90 0e 2a 	lds	r4, 0x2A0E	; 0x802a0e <myPID+0x26>
    1de4:	50 90 0f 2a 	lds	r5, 0x2A0F	; 0x802a0f <myPID+0x27>
    1de8:	60 90 10 2a 	lds	r6, 0x2A10	; 0x802a10 <myPID+0x28>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1dec:	70 90 11 2a 	lds	r7, 0x2A11	; 0x802a11 <myPID+0x29>
    1df0:	10 91 1e 2a 	lds	r17, 0x2A1E	; 0x802a1e <myPID+0x36>
    1df4:	90 91 1f 2a 	lds	r25, 0x2A1F	; 0x802a1f <myPID+0x37>
    1df8:	9e 87       	std	Y+14, r25	; 0x0e
    1dfa:	a0 91 20 2a 	lds	r26, 0x2A20	; 0x802a20 <myPID+0x38>
    1dfe:	ad 87       	std	Y+13, r26	; 0x0d
    1e00:	00 91 21 2a 	lds	r16, 0x2A21	; 0x802a21 <myPID+0x39>
    1e04:	21 2f       	mov	r18, r17
    1e06:	39 2f       	mov	r19, r25
    1e08:	4a 2f       	mov	r20, r26
    1e0a:	50 2f       	mov	r21, r16
    1e0c:	c3 01       	movw	r24, r6
    1e0e:	b2 01       	movw	r22, r4
    1e10:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    1e14:	18 16       	cp	r1, r24
    1e16:	0c f0       	brlt	.+2      	; 0x1e1a <PID_RUN()+0x186>
    1e18:	96 c0       	rjmp	.+300    	; 0x1f46 <PID_RUN()+0x2b2>
    1e1a:	81 2f       	mov	r24, r17
    1e1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e1e:	ad 85       	ldd	r26, Y+13	; 0x0d
    1e20:	b0 2f       	mov	r27, r16
    1e22:	80 93 0e 2a 	sts	0x2A0E, r24	; 0x802a0e <myPID+0x26>
    1e26:	90 93 0f 2a 	sts	0x2A0F, r25	; 0x802a0f <myPID+0x27>
    1e2a:	a0 93 10 2a 	sts	0x2A10, r26	; 0x802a10 <myPID+0x28>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1e2e:	b0 93 11 2a 	sts	0x2A11, r27	; 0x802a11 <myPID+0x29>
    1e32:	33 20       	and	r3, r3
    1e34:	09 f4       	brne	.+2      	; 0x1e38 <PID_RUN()+0x1a4>
    1e36:	a0 c0       	rjmp	.+320    	; 0x1f78 <PID_RUN()+0x2e4>
    1e38:	20 91 f4 29 	lds	r18, 0x29F4	; 0x8029f4 <myPID+0xc>
    1e3c:	30 91 f5 29 	lds	r19, 0x29F5	; 0x8029f5 <myPID+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1e40:	40 91 f6 29 	lds	r20, 0x29F6	; 0x8029f6 <myPID+0xe>
    1e44:	50 91 f7 29 	lds	r21, 0x29F7	; 0x8029f7 <myPID+0xf>
    1e48:	c5 01       	movw	r24, r10
    1e4a:	b4 01       	movw	r22, r8
    1e4c:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    1e50:	4b 01       	movw	r8, r22
    1e52:	5c 01       	movw	r10, r24
    1e54:	20 91 fc 29 	lds	r18, 0x29FC	; 0x8029fc <myPID+0x14>
    1e58:	30 91 fd 29 	lds	r19, 0x29FD	; 0x8029fd <myPID+0x15>
    1e5c:	40 91 fe 29 	lds	r20, 0x29FE	; 0x8029fe <myPID+0x16>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1e60:	50 91 ff 29 	lds	r21, 0x29FF	; 0x8029ff <myPID+0x17>
    1e64:	c7 01       	movw	r24, r14
    1e66:	b6 01       	movw	r22, r12
    1e68:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    1e6c:	9b 01       	movw	r18, r22
    1e6e:	ac 01       	movw	r20, r24
    1e70:	60 91 0e 2a 	lds	r22, 0x2A0E	; 0x802a0e <myPID+0x26>
    1e74:	70 91 0f 2a 	lds	r23, 0x2A0F	; 0x802a0f <myPID+0x27>
    1e78:	80 91 10 2a 	lds	r24, 0x2A10	; 0x802a10 <myPID+0x28>
    1e7c:	90 91 11 2a 	lds	r25, 0x2A11	; 0x802a11 <myPID+0x29>
    1e80:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    1e84:	a5 01       	movw	r20, r10
    1e86:	94 01       	movw	r18, r8
    1e88:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    1e8c:	6b 01       	movw	r12, r22
    1e8e:	7c 01       	movw	r14, r24
    1e90:	9b 01       	movw	r18, r22
    1e92:	ac 01       	movw	r20, r24
    1e94:	61 2f       	mov	r22, r17
    1e96:	7e 85       	ldd	r23, Y+14	; 0x0e
    1e98:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e9a:	90 2f       	mov	r25, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1e9c:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    1ea0:	87 fd       	sbrc	r24, 7
    1ea2:	18 c0       	rjmp	.+48     	; 0x1ed4 <PID_RUN()+0x240>
    1ea4:	10 91 1a 2a 	lds	r17, 0x2A1A	; 0x802a1a <myPID+0x32>
    1ea8:	90 91 1b 2a 	lds	r25, 0x2A1B	; 0x802a1b <myPID+0x33>
    1eac:	9e 87       	std	Y+14, r25	; 0x0e
    1eae:	a0 91 1c 2a 	lds	r26, 0x2A1C	; 0x802a1c <myPID+0x34>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1eb2:	ad 87       	std	Y+13, r26	; 0x0d
    1eb4:	00 91 1d 2a 	lds	r16, 0x2A1D	; 0x802a1d <myPID+0x35>
    1eb8:	21 2f       	mov	r18, r17
    1eba:	39 2f       	mov	r19, r25
    1ebc:	4a 2f       	mov	r20, r26
    1ebe:	50 2f       	mov	r21, r16
    1ec0:	b6 01       	movw	r22, r12
    1ec2:	c7 01       	movw	r24, r14
    1ec4:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    1ec8:	87 fd       	sbrc	r24, 7
    1eca:	04 c0       	rjmp	.+8      	; 0x1ed4 <PID_RUN()+0x240>
PID_RUN():
    1ecc:	1c 2d       	mov	r17, r12
    1ece:	de 86       	std	Y+14, r13	; 0x0e
    1ed0:	ed 86       	std	Y+13, r14	; 0x0d
    1ed2:	0f 2d       	mov	r16, r15
Compute():
    1ed4:	e0 91 06 2a 	lds	r30, 0x2A06	; 0x802a06 <myPID+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1ed8:	f0 91 07 2a 	lds	r31, 0x2A07	; 0x802a07 <myPID+0x1f>
    1edc:	81 2f       	mov	r24, r17
    1ede:	9e 85       	ldd	r25, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1ee0:	ad 85       	ldd	r26, Y+13	; 0x0d
    1ee2:	b0 2f       	mov	r27, r16
    1ee4:	80 83       	st	Z, r24
    1ee6:	91 83       	std	Z+1, r25	; 0x01
    1ee8:	a2 83       	std	Z+2, r26	; 0x02
    1eea:	b3 83       	std	Z+3, r27	; 0x03
    1eec:	89 81       	ldd	r24, Y+1	; 0x01
    1eee:	9a 81       	ldd	r25, Y+2	; 0x02
    1ef0:	ab 81       	ldd	r26, Y+3	; 0x03
    1ef2:	bc 81       	ldd	r27, Y+4	; 0x04
    1ef4:	80 93 12 2a 	sts	0x2A12, r24	; 0x802a12 <myPID+0x2a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1ef8:	90 93 13 2a 	sts	0x2A13, r25	; 0x802a13 <myPID+0x2b>
    1efc:	a0 93 14 2a 	sts	0x2A14, r26	; 0x802a14 <myPID+0x2c>
    1f00:	b0 93 15 2a 	sts	0x2A15, r27	; 0x802a15 <myPID+0x2d>
    1f04:	8d 81       	ldd	r24, Y+5	; 0x05
    1f06:	9e 81       	ldd	r25, Y+6	; 0x06
    1f08:	af 81       	ldd	r26, Y+7	; 0x07
    1f0a:	b8 85       	ldd	r27, Y+8	; 0x08
    1f0c:	80 93 0a 2a 	sts	0x2A0A, r24	; 0x802a0a <myPID+0x22>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    1f10:	90 93 0b 2a 	sts	0x2A0B, r25	; 0x802a0b <myPID+0x23>
    1f14:	a0 93 0c 2a 	sts	0x2A0C, r26	; 0x802a0c <myPID+0x24>
    1f18:	b0 93 0d 2a 	sts	0x2A0D, r27	; 0x802a0d <myPID+0x25>
PID_RUN():
    1f1c:	2e 96       	adiw	r28, 0x0e	; 14
    1f1e:	cd bf       	out	0x3d, r28	; 61
    1f20:	de bf       	out	0x3e, r29	; 62
    1f22:	df 91       	pop	r29
    1f24:	cf 91       	pop	r28
    1f26:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:31
   myPID.Compute();  
}
    1f28:	0f 91       	pop	r16
    1f2a:	ff 90       	pop	r15
    1f2c:	ef 90       	pop	r14
    1f2e:	df 90       	pop	r13
    1f30:	cf 90       	pop	r12
    1f32:	bf 90       	pop	r11
    1f34:	af 90       	pop	r10
    1f36:	9f 90       	pop	r9
    1f38:	8f 90       	pop	r8
    1f3a:	7f 90       	pop	r7
    1f3c:	6f 90       	pop	r6
    1f3e:	5f 90       	pop	r5
    1f40:	4f 90       	pop	r4
    1f42:	3f 90       	pop	r3
    1f44:	08 95       	ret
Compute():
    1f46:	80 91 1a 2a 	lds	r24, 0x2A1A	; 0x802a1a <myPID+0x32>
    1f4a:	90 91 1b 2a 	lds	r25, 0x2A1B	; 0x802a1b <myPID+0x33>
    1f4e:	a0 91 1c 2a 	lds	r26, 0x2A1C	; 0x802a1c <myPID+0x34>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    1f52:	b0 91 1d 2a 	lds	r27, 0x2A1D	; 0x802a1d <myPID+0x35>
    1f56:	89 87       	std	Y+9, r24	; 0x09
    1f58:	9a 87       	std	Y+10, r25	; 0x0a
    1f5a:	ab 87       	std	Y+11, r26	; 0x0b
    1f5c:	bc 87       	std	Y+12, r27	; 0x0c
    1f5e:	9c 01       	movw	r18, r24
    1f60:	ad 01       	movw	r20, r26
    1f62:	c3 01       	movw	r24, r6
    1f64:	b2 01       	movw	r22, r4
    1f66:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    1f6a:	87 ff       	sbrs	r24, 7
    1f6c:	62 cf       	rjmp	.-316    	; 0x1e32 <PID_RUN()+0x19e>
    1f6e:	89 85       	ldd	r24, Y+9	; 0x09
    1f70:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f72:	ab 85       	ldd	r26, Y+11	; 0x0b
    1f74:	bc 85       	ldd	r27, Y+12	; 0x0c
    1f76:	55 cf       	rjmp	.-342    	; 0x1e22 <PID_RUN()+0x18e>
PID_RUN():
    1f78:	81 2c       	mov	r8, r1
    1f7a:	91 2c       	mov	r9, r1
    1f7c:	54 01       	movw	r10, r8
    1f7e:	6a cf       	rjmp	.-300    	; 0x1e54 <PID_RUN()+0x1c0>

00001f80 <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    1f80:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <but1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    1f84:	81 11       	cpse	r24, r1
    1f86:	0e c0       	rjmp	.+28     	; 0x1fa4 <DEC_LONGPRESS()+0x24>
    1f88:	81 e0       	ldi	r24, 0x01	; 1
    1f8a:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:452
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
}

void DEC_LONGPRESS()
{ 
  if(!but1)
    1f8e:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <INC5>
    1f92:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:454
  {
    BLINK_STATS=1;
    1f94:	80 93 20 28 	sts	0x2820, r24	; 0x802820 <INC5>
    1f98:	89 31       	cpi	r24, 0x19	; 25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:455
    INC5++;
    1f9a:	24 f0       	brlt	.+8      	; 0x1fa4 <DEC_LONGPRESS()+0x24>
    1f9c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.66]>
    1fa0:	10 92 20 28 	sts	0x2820, r1	; 0x802820 <INC5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:456
    if (INC5 >= 25)
    1fa4:	08 95       	ret

00001fa6 <INC_LONGPRESS()>:
INC_LONGPRESS():
    1fa6:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <but1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:458
    {
      Butn.SET_CHANGE_DOWN();
    1faa:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:459
      INC5 = 0;
    1fac:	0e c0       	rjmp	.+28     	; 0x1fca <INC_LONGPRESS()+0x24>
    1fae:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:462
    }
  }
}
    1fb0:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:392
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}

void INC_LONGPRESS()
{
  if(!but1)
    1fb4:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <INC5>
    1fb8:	8f 5f       	subi	r24, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:394
  {
    BLINK_STATS=1;
    1fba:	80 93 20 28 	sts	0x2820, r24	; 0x802820 <INC5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:395
    INC5++;
    1fbe:	89 31       	cpi	r24, 0x19	; 25
    1fc0:	24 f0       	brlt	.+8      	; 0x1fca <INC_LONGPRESS()+0x24>
    1fc2:	0e 94 88 01 	call	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.67]>
    1fc6:	10 92 20 28 	sts	0x2820, r1	; 0x802820 <INC5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:396
    if (INC5 >= 25)
    1fca:	08 95       	ret

00001fcc <UartClass::begin(unsigned long)>:
begin():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:398
    {
      Butn.SET_CHANGE_UP();
    1fcc:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:399
      INC5 = 0;
    1fce:	ed 91       	ld	r30, X+
    1fd0:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:402
    }
  }
}
    1fd2:	04 88       	ldd	r0, Z+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1fd4:	f5 89       	ldd	r31, Z+21	; 0x15
    1fd6:	e0 2d       	mov	r30, r0
    1fd8:	23 e0       	ldi	r18, 0x03	; 3
    1fda:	30 e0       	ldi	r19, 0x00	; 0
    1fdc:	09 94       	ijmp

00001fde <EERef::operator*() const>:
operator*():
    1fde:	fc 01       	movw	r30, r24
    1fe0:	80 81       	ld	r24, Z
    1fe2:	91 81       	ldd	r25, Z+1	; 0x01
    1fe4:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    1fe6:	ff 27       	eor	r31, r31
    1fe8:	90 fd       	sbrc	r25, 0
    1fea:	06 c0       	rjmp	.+12     	; 0x1ff8 <EERef::operator*() const+0x1a>
    1fec:	80 e0       	ldi	r24, 0x00	; 0
    1fee:	94 e1       	ldi	r25, 0x14	; 20
    1ff0:	e8 2b       	or	r30, r24
    1ff2:	f9 2b       	or	r31, r25
    1ff4:	80 81       	ld	r24, Z
    1ff6:	08 95       	ret
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	93 e1       	ldi	r25, 0x13	; 19
    1ffc:	f9 cf       	rjmp	.-14     	; 0x1ff0 <EERef::operator*() const+0x12>

00001ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    1ffe:	ef 92       	push	r14
    2000:	ff 92       	push	r15
    2002:	0f 93       	push	r16
    2004:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    2006:	cf 93       	push	r28
    2008:	df 93       	push	r29
    200a:	00 d0       	rcall	.+0      	; 0x200c <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    200c:	cd b7       	in	r28, 0x3d	; 61
    200e:	de b7       	in	r29, 0x3e	; 62
    2010:	8c 01       	movw	r16, r24
    2012:	7b 01       	movw	r14, r22
    2014:	89 83       	std	Y+1, r24	; 0x01
    2016:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    2018:	ce 01       	movw	r24, r28
    201a:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    201c:	e0 df       	rcall	.-64     	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    201e:	f7 01       	movw	r30, r14
    2020:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
    2022:	0f 5f       	subi	r16, 0xFF	; 255
    2024:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2026:	09 83       	std	Y+1, r16	; 0x01
    2028:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    202a:	ce 01       	movw	r24, r28
    202c:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    202e:	d7 df       	rcall	.-82     	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    2030:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2032:	81 83       	std	Z+1, r24	; 0x01
    2034:	c7 01       	movw	r24, r14
    2036:	0f 90       	pop	r0
    2038:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    203a:	df 91       	pop	r29
    203c:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    203e:	1f 91       	pop	r17
    2040:	0f 91       	pop	r16
    2042:	ff 90       	pop	r15
    2044:	ef 90       	pop	r14
    2046:	08 95       	ret

00002048 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2048:	af 92       	push	r10
    204a:	bf 92       	push	r11
    204c:	cf 92       	push	r12
    204e:	df 92       	push	r13
    2050:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    2052:	ff 92       	push	r15
    2054:	0f 93       	push	r16
    2056:	1f 93       	push	r17
    2058:	cf 93       	push	r28
    205a:	df 93       	push	r29
    205c:	00 d0       	rcall	.+0      	; 0x205e <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    205e:	cd b7       	in	r28, 0x3d	; 61
    2060:	de b7       	in	r29, 0x3e	; 62
    2062:	8b 01       	movw	r16, r22
    2064:	6b 01       	movw	r12, r22
    2066:	24 e0       	ldi	r18, 0x04	; 4
    2068:	c2 0e       	add	r12, r18
    206a:	d1 1c       	adc	r13, r1
    206c:	7b 01       	movw	r14, r22
    206e:	5c 01       	movw	r10, r24
    2070:	a6 1a       	sub	r10, r22
    2072:	b7 0a       	sbc	r11, r23
    2074:	c5 01       	movw	r24, r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2076:	8e 0d       	add	r24, r14
    2078:	9f 1d       	adc	r25, r15
    207a:	89 83       	std	Y+1, r24	; 0x01
    207c:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    207e:	ce 01       	movw	r24, r28
    2080:	01 96       	adiw	r24, 0x01	; 1
    2082:	ad df       	rcall	.-166    	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2084:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2086:	81 93       	st	Z+, r24
    2088:	7f 01       	movw	r14, r30
    208a:	ec 15       	cp	r30, r12
    208c:	fd 05       	cpc	r31, r13
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    208e:	91 f7       	brne	.-28     	; 0x2074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    2090:	c8 01       	movw	r24, r16
    2092:	0f 90       	pop	r0
    2094:	0f 90       	pop	r0
    2096:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2098:	cf 91       	pop	r28
    209a:	1f 91       	pop	r17
    209c:	0f 91       	pop	r16
    209e:	ff 90       	pop	r15
    20a0:	ef 90       	pop	r14
    20a2:	df 90       	pop	r13
    20a4:	cf 90       	pop	r12
    20a6:	bf 90       	pop	r11
    20a8:	af 90       	pop	r10
    20aa:	08 95       	ret

000020ac <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
    20ac:	cf 93       	push	r28
    20ae:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    20b0:	00 d0       	rcall	.+0      	; 0x20b2 <EEPROMClass::read(int) [clone .isra.0]+0x6>
    20b2:	cd b7       	in	r28, 0x3d	; 61
    20b4:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
    20b6:	89 83       	std	Y+1, r24	; 0x01
    20b8:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    20ba:	ce 01       	movw	r24, r28
    20bc:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20be:	8f df       	rcall	.-226    	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
    20c0:	0f 90       	pop	r0
    20c2:	0f 90       	pop	r0
    20c4:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    20c6:	cf 91       	pop	r28
    20c8:	08 95       	ret

000020ca <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    20ca:	fc 01       	movw	r30, r24
    20cc:	ff 27       	eor	r31, r31
    20ce:	90 fd       	sbrc	r25, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    20d0:	12 c0       	rjmp	.+36     	; 0x20f6 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	94 e1       	ldi	r25, 0x14	; 20
    20d6:	e8 2b       	or	r30, r24
    20d8:	f9 2b       	or	r31, r25
    20da:	60 83       	st	Z, r22
    20dc:	8f b7       	in	r24, 0x3f	; 63
    20de:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    20e0:	9d e9       	ldi	r25, 0x9D	; 157
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:39
  cli();
    20e2:	23 e0       	ldi	r18, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    20e4:	94 bf       	out	0x34, r25	; 52
    20e6:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
    20ea:	8f bf       	out	0x3f, r24	; 63
    20ec:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  SREG = oldSREG;
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    20f0:	81 fd       	sbrc	r24, 1
    20f2:	fc cf       	rjmp	.-8      	; 0x20ec <nvm_write_byte(unsigned int, unsigned char)+0x22>
    20f4:	08 95       	ret
    20f6:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    20f8:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    20fa:	ed cf       	rjmp	.-38     	; 0x20d6 <nvm_write_byte(unsigned int, unsigned char)+0xc>

000020fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>:
operator=():
    20fc:	e6 cf       	rjmp	.-52     	; 0x20ca <nvm_write_byte(unsigned int, unsigned char)>

000020fe <EERef::update(unsigned char)>:
update():
    20fe:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    2100:	cf 93       	push	r28
    2102:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2104:	ec 01       	movw	r28, r24
    2106:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    2108:	6a df       	rcall	.-300    	; 0x1fde <EERef::operator*() const>
update():
    210a:	81 17       	cp	r24, r17
    210c:	21 f0       	breq	.+8      	; 0x2116 <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    210e:	61 2f       	mov	r22, r17
    2110:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2112:	99 81       	ldd	r25, Y+1	; 0x01
    2114:	da df       	rcall	.-76     	; 0x20ca <nvm_write_byte(unsigned int, unsigned char)>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    2116:	ce 01       	movw	r24, r28
    2118:	df 91       	pop	r29
    211a:	cf 91       	pop	r28
    211c:	1f 91       	pop	r17
    211e:	08 95       	ret

00002120 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.63]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2120:	ef 92       	push	r14
    2122:	ff 92       	push	r15
    2124:	0f 93       	push	r16
    2126:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2128:	cf 93       	push	r28
    212a:	df 93       	push	r29
    212c:	00 d0       	rcall	.+0      	; 0x212e <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.63]+0xe>
    212e:	cd b7       	in	r28, 0x3d	; 61
    2130:	de b7       	in	r29, 0x3e	; 62
    2132:	84 ef       	ldi	r24, 0xF4	; 244
    2134:	e8 2e       	mov	r14, r24
    2136:	88 e2       	ldi	r24, 0x28	; 40
    2138:	f8 2e       	mov	r15, r24
    213a:	06 e4       	ldi	r16, 0x46	; 70
    213c:	10 e0       	ldi	r17, 0x00	; 0
    213e:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    2140:	1a 83       	std	Y+2, r17	; 0x02
    2142:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2144:	61 91       	ld	r22, Z+
    2146:	7f 01       	movw	r14, r30
    2148:	ce 01       	movw	r24, r28
    214a:	01 96       	adiw	r24, 0x01	; 1
    214c:	d8 df       	rcall	.-80     	; 0x20fe <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    214e:	0f 5f       	subi	r16, 0xFF	; 255
    2150:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    2152:	0a 34       	cpi	r16, 0x4A	; 74
    2154:	11 05       	cpc	r17, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2156:	99 f7       	brne	.-26     	; 0x213e <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.63]+0x1e>
    2158:	84 ef       	ldi	r24, 0xF4	; 244
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    215a:	98 e2       	ldi	r25, 0x28	; 40
    215c:	0f 90       	pop	r0
    215e:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2160:	df 91       	pop	r29
    2162:	cf 91       	pop	r28
    2164:	1f 91       	pop	r17
    2166:	0f 91       	pop	r16
    2168:	ff 90       	pop	r15
    216a:	ef 90       	pop	r14
    216c:	08 95       	ret

0000216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    216e:	ef 92       	push	r14
    2170:	ff 92       	push	r15
    2172:	0f 93       	push	r16
    2174:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2176:	cf 93       	push	r28
    2178:	df 93       	push	r29
    217a:	00 d0       	rcall	.+0      	; 0x217c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]+0xe>
    217c:	cd b7       	in	r28, 0x3d	; 61
    217e:	de b7       	in	r29, 0x3e	; 62
    2180:	8c 01       	movw	r16, r24
    2182:	7b 01       	movw	r14, r22
    2184:	89 83       	std	Y+1, r24	; 0x01
    2186:	9a 83       	std	Y+2, r25	; 0x02
    2188:	fb 01       	movw	r30, r22
    218a:	60 81       	ld	r22, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    218c:	ce 01       	movw	r24, r28
    218e:	01 96       	adiw	r24, 0x01	; 1
    2190:	b6 df       	rcall	.-148    	; 0x20fe <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    2192:	0f 5f       	subi	r16, 0xFF	; 255
    2194:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    2196:	09 83       	std	Y+1, r16	; 0x01
    2198:	1a 83       	std	Y+2, r17	; 0x02
    219a:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    219c:	61 81       	ldd	r22, Z+1	; 0x01
    219e:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21a0:	01 96       	adiw	r24, 0x01	; 1
    21a2:	ad df       	rcall	.-166    	; 0x20fe <EERef::update(unsigned char)>
    21a4:	c7 01       	movw	r24, r14
    21a6:	0f 90       	pop	r0
    21a8:	0f 90       	pop	r0
    21aa:	df 91       	pop	r29
    21ac:	cf 91       	pop	r28
    21ae:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    21b0:	0f 91       	pop	r16
    21b2:	ff 90       	pop	r15
    21b4:	ef 90       	pop	r14
    21b6:	08 95       	ret

000021b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]>:
SET_SHORT_PRESS_FUNCTION():
    21b8:	2f 92       	push	r2
    21ba:	3f 92       	push	r3
    21bc:	4f 92       	push	r4
    21be:	5f 92       	push	r5
    21c0:	6f 92       	push	r6
    21c2:	7f 92       	push	r7
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:90
  pinMode(ALARM_LED, OUTPUT);
  
   ALL_LED_OFF();  
}

void Pclass :: SET_SHORT_PRESS_FUNCTION()   //------------------function for main process execution
    21c4:	8f 92       	push	r8
    21c6:	9f 92       	push	r9
    21c8:	af 92       	push	r10
    21ca:	bf 92       	push	r11
    21cc:	cf 92       	push	r12
    21ce:	df 92       	push	r13
    21d0:	ef 92       	push	r14
    21d2:	ff 92       	push	r15
    21d4:	0f 93       	push	r16
    21d6:	1f 93       	push	r17
    21d8:	cf 93       	push	r28
    21da:	df 93       	push	r29
    21dc:	c0 91 0a 29 	lds	r28, 0x290A	; 0x80290a <ENTER_BUT>
    21e0:	c2 30       	cpi	r28, 0x02	; 2
    21e2:	09 f4       	brne	.+2      	; 0x21e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x2e>
    21e4:	42 c5       	rjmp	.+2692   	; 0x2c6a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xab2>
    21e6:	cc f4       	brge	.+50     	; 0x221a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x62>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:92
{
  switch (ENTER_BUT)
    21e8:	cc 23       	and	r28, r28
    21ea:	09 f4       	brne	.+2      	; 0x21ee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x36>
    21ec:	4e c3       	rjmp	.+1692   	; 0x288a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x6d2>
    21ee:	c1 30       	cpi	r28, 0x01	; 1
    21f0:	09 f4       	brne	.+2      	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>
    21f2:	bc c4       	rjmp	.+2424   	; 0x2b6c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x9b4>
    21f4:	df 91       	pop	r29
    21f6:	cf 91       	pop	r28
    21f8:	1f 91       	pop	r17
    21fa:	0f 91       	pop	r16
    21fc:	ff 90       	pop	r15
    21fe:	ef 90       	pop	r14
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:528
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    2200:	df 90       	pop	r13
    2202:	cf 90       	pop	r12
    2204:	bf 90       	pop	r11
    2206:	af 90       	pop	r10
    2208:	9f 90       	pop	r9
    220a:	8f 90       	pop	r8
    220c:	7f 90       	pop	r7
    220e:	6f 90       	pop	r6
    2210:	5f 90       	pop	r5
    2212:	4f 90       	pop	r4
    2214:	3f 90       	pop	r3
    2216:	2f 90       	pop	r2
    2218:	08 95       	ret
    221a:	c4 30       	cpi	r28, 0x04	; 4
    221c:	09 f4       	brne	.+2      	; 0x2220 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x68>
    221e:	2c c6       	rjmp	.+3160   	; 0x2e78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xcc0>
    2220:	0c f4       	brge	.+2      	; 0x2224 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x6c>
    2222:	a6 c5       	rjmp	.+2892   	; 0x2d70 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xbb8>
    2224:	c5 30       	cpi	r28, 0x05	; 5
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:92
   ALL_LED_OFF();  
}

void Pclass :: SET_SHORT_PRESS_FUNCTION()   //------------------function for main process execution
{
  switch (ENTER_BUT)
    2226:	31 f7       	brne	.-52     	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>
    2228:	c0 90 00 29 	lds	r12, 0x2900	; 0x802900 <SET_VALUE+0x2>
    222c:	d0 90 01 29 	lds	r13, 0x2901	; 0x802901 <SET_VALUE+0x3>
    2230:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <SET_VALUE+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:249
          SET_VALUE[5] = STIR_VALUE_SET;
          PUMP_FLAG =1;                       
          SET_MIN = (SET_VALUE[3]*60) + SET_VALUE[4];              
          break;
    case 5: 
          SET_TEMP_DEG =(SET_VALUE[1] + (SET_VALUE[2] / 10.0)); 
    2234:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <SET_VALUE+0x5>
    2238:	07 2e       	mov	r0, r23
    223a:	00 0c       	add	r0, r0
    223c:	88 0b       	sbc	r24, r24
    223e:	99 0b       	sbc	r25, r25
    2240:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    2244:	20 e0       	ldi	r18, 0x00	; 0
    2246:	30 e0       	ldi	r19, 0x00	; 0
    2248:	40 e2       	ldi	r20, 0x20	; 32
    224a:	51 e4       	ldi	r21, 0x41	; 65
    224c:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    2250:	4b 01       	movw	r8, r22
    2252:	5c 01       	movw	r10, r24
    2254:	b6 01       	movw	r22, r12
    2256:	dd 0c       	add	r13, r13
    2258:	88 0b       	sbc	r24, r24
    225a:	99 0b       	sbc	r25, r25
    225c:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    2260:	9b 01       	movw	r18, r22
    2262:	ac 01       	movw	r20, r24
    2264:	c5 01       	movw	r24, r10
    2266:	b4 01       	movw	r22, r8
    2268:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    226c:	4b 01       	movw	r8, r22
    226e:	5c 01       	movw	r10, r24
    2270:	80 92 88 28 	sts	0x2888, r8	; 0x802888 <SET_TEMP_DEG>
    2274:	90 92 89 28 	sts	0x2889, r9	; 0x802889 <SET_TEMP_DEG+0x1>
    2278:	a0 92 8a 28 	sts	0x288A, r10	; 0x80288a <SET_TEMP_DEG+0x2>
    227c:	b0 92 8b 28 	sts	0x288B, r11	; 0x80288b <SET_TEMP_DEG+0x3>
    2280:	c0 91 2a 29 	lds	r28, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:250
          SET_TEMP_FAH =  SET_VALUE[22];   
    2284:	d0 91 2b 29 	lds	r29, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
    2288:	c0 93 86 28 	sts	0x2886, r28	; 0x802886 <SET_TEMP_FAH>
    228c:	d0 93 87 28 	sts	0x2887, r29	; 0x802887 <SET_TEMP_FAH+0x1>
    2290:	e0 90 04 29 	lds	r14, 0x2904	; 0x802904 <SET_VALUE+0x6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:251
          SET_HOUR=SET_VALUE[3];   
    2294:	f0 90 05 29 	lds	r15, 0x2905	; 0x802905 <SET_VALUE+0x7>
    2298:	e0 92 84 28 	sts	0x2884, r14	; 0x802884 <SET_HOUR>
    229c:	f0 92 85 28 	sts	0x2885, r15	; 0x802885 <SET_HOUR+0x1>
    22a0:	00 91 06 29 	lds	r16, 0x2906	; 0x802906 <SET_VALUE+0x8>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:252
          SET_MINUTE= SET_VALUE[4];                       
    22a4:	10 91 07 29 	lds	r17, 0x2907	; 0x802907 <SET_VALUE+0x9>
    22a8:	00 93 82 28 	sts	0x2882, r16	; 0x802882 <SET_MINUTE>
    22ac:	10 93 83 28 	sts	0x2883, r17	; 0x802883 <SET_MINUTE+0x1>
    22b0:	2c e3       	ldi	r18, 0x3C	; 60
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:253
          SET_MIN = (SET_HOUR*60) + SET_MINUTE;  
    22b2:	2e 9d       	mul	r18, r14
    22b4:	c0 01       	movw	r24, r0
    22b6:	2f 9d       	mul	r18, r15
    22b8:	90 0d       	add	r25, r0
    22ba:	11 24       	eor	r1, r1
    22bc:	80 0f       	add	r24, r16
    22be:	91 1f       	adc	r25, r17
    22c0:	80 93 8c 28 	sts	0x288C, r24	; 0x80288c <SET_MIN>
    22c4:	90 93 8d 28 	sts	0x288D, r25	; 0x80288d <SET_MIN+0x1>
    22c8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:255
          
          Process_Interrupt_flag=1;
    22ca:	80 93 96 28 	sts	0x2896, r24	; 0x802896 <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    22ce:	6c 2d       	mov	r22, r12
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:58
  EEPROM.write(135, Process_Interrupt_flag );
}

void Rclass :: Process_Set_Values_Store_On_Eeprom()
{
  EEPROM.write(115, SET_VALUE[1]);
    22d0:	83 e7       	ldi	r24, 0x73	; 115
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	13 df       	rcall	.-474    	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    22d6:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <SET_VALUE+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:59
  EEPROM.write(117, SET_VALUE[2]);
    22da:	85 e7       	ldi	r24, 0x75	; 117
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	0e df       	rcall	.-484    	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    22e0:	6a e2       	ldi	r22, 0x2A	; 42
    22e2:	79 e2       	ldi	r23, 0x29	; 41
    22e4:	88 e7       	ldi	r24, 0x78	; 120
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:60
  EEPROM.put(120, SET_VALUE[22]); 
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	42 df       	rcall	.-380    	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    22ea:	6e 2d       	mov	r22, r14
    22ec:	8d e7       	ldi	r24, 0x7D	; 125
    22ee:	90 e0       	ldi	r25, 0x00	; 0
    22f0:	05 df       	rcall	.-502    	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:61
  EEPROM.write(125, SET_HOUR );  
    22f2:	60 2f       	mov	r22, r16
    22f4:	82 e8       	ldi	r24, 0x82	; 130
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	01 df       	rcall	.-510    	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
Process_Time_Set_On_Eeprom():
    22fa:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:62
  EEPROM.write(130, SET_MINUTE ); 
    22fc:	87 e8       	ldi	r24, 0x87	; 135
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	fd de       	rcall	.-518    	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2302:	10 91 3d 29 	lds	r17, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:53
  
}

void Rclass ::  Process_Time_Set_On_Eeprom()
{  
  EEPROM.write(135, Process_Interrupt_flag );
    2306:	80 91 81 28 	lds	r24, 0x2881	; 0x802881 <FILL_BATH_ERROR_NOT_CLEAR>
    230a:	81 11       	cpse	r24, r1
    230c:	1b c0       	rjmp	.+54     	; 0x2344 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x18c>
    230e:	11 11       	cpse	r17, r1
    2310:	55 c6       	rjmp	.+3242   	; 0x2fbc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xe04>
    2312:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:261
          Eeprom.Process_Set_Values_Store_On_Eeprom();          
          Eeprom.Process_Time_Set_On_Eeprom();
          
          //if(pump_flag && select_probe_type);
          
          if(!FILL_BATH_ERROR_NOT_CLEAR)
    2314:	30 e0       	ldi	r19, 0x00	; 0
    2316:	40 e2       	ldi	r20, 0x20	; 32
    2318:	51 e4       	ldi	r21, 0x41	; 65
    231a:	60 91 e0 28 	lds	r22, 0x28E0	; 0x8028e0 <TEMP_DEG>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:264
          {
            
            if( (!DEGREE_VALUE_SET &&  SET_TEMP_DEG >= (TEMP_DEG + 10)) || (DEGREE_VALUE_SET && SET_TEMP_FAH>= (TEMP_FAH +15)) ) { FILL_BATH_ERROR_NOT_CLEAR=0; }
    231e:	70 91 e1 28 	lds	r23, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    2322:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    2326:	90 91 e3 28 	lds	r25, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    232a:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    232e:	9b 01       	movw	r18, r22
    2330:	ac 01       	movw	r20, r24
    2332:	c5 01       	movw	r24, r10
    2334:	b4 01       	movw	r22, r8
    2336:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    233a:	87 ff       	sbrs	r24, 7
    233c:	03 c0       	rjmp	.+6      	; 0x2344 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x18c>
    233e:	81 e0       	ldi	r24, 0x01	; 1
    2340:	80 93 81 28 	sts	0x2881, r24	; 0x802881 <FILL_BATH_ERROR_NOT_CLEAR>
    2344:	80 91 81 28 	lds	r24, 0x2881	; 0x802881 <FILL_BATH_ERROR_NOT_CLEAR>
    2348:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:265
            else                                                                                                                 { FILL_BATH_ERROR_NOT_CLEAR=1; }
    234a:	09 f4       	brne	.+2      	; 0x234e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x196>
    234c:	52 c6       	rjmp	.+3236   	; 0x2ff2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xe3a>
    234e:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <RATE_OF_HEATING>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:270

//            Serial2.print("FILL_BATH_ERROR_NOT_CLEAR :");  Serial2.print("\t");Serial2.println(FILL_BATH_ERROR_NOT_CLEAR);
          }  
//          else     
          if(FILL_BATH_ERROR_NOT_CLEAR)
    2352:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <RATE_OF_HEATING+0x1>
    2356:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <RATE_OF_HEATING+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:272
          {
            RATE_OF_HEATING =0;
    235a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <RATE_OF_HEATING+0x3>
    235e:	81 e0       	ldi	r24, 0x01	; 1
    2360:	80 93 97 28 	sts	0x2897, r24	; 0x802897 <CHECK_RATE_OF_HEATING>
    2364:	10 92 81 28 	sts	0x2881, r1	; 0x802881 <FILL_BATH_ERROR_NOT_CLEAR>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:273
            CHECK_RATE_OF_HEATING=1; //1
    2368:	11 11       	cpse	r17, r1
    236a:	64 c6       	rjmp	.+3272   	; 0x3034 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xe7c>
    236c:	80 91 88 28 	lds	r24, 0x2888	; 0x802888 <SET_TEMP_DEG>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:274
            FILL_BATH_ERROR_NOT_CLEAR=0;
    2370:	90 91 89 28 	lds	r25, 0x2889	; 0x802889 <SET_TEMP_DEG+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:286
            TEMP_VALUE_INITIAL = TEMP_DEG_RAW;
            START_COUNT_VALUE = millis();
//            Serial2.print("TEMP_VALUE_INITIAL");  Serial2.print("\t");Serial2.println(TEMP_VALUE_INITIAL);
//            Serial2.print("START_COUNT_VALUE");  Serial2.print("\t");Serial2.println(START_COUNT_VALUE);
          } 
          if(!DEGREE_VALUE_SET)    
    2374:	a0 91 8a 28 	lds	r26, 0x288A	; 0x80288a <SET_TEMP_DEG+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:288
          {
               PID_SETPOINT_To_Show = SET_TEMP_DEG;  
    2378:	b0 91 8b 28 	lds	r27, 0x288B	; 0x80288b <SET_TEMP_DEG+0x3>
    237c:	80 93 75 28 	sts	0x2875, r24	; 0x802875 <PID_SETPOINT_To_Show>
    2380:	90 93 76 28 	sts	0x2876, r25	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    2384:	a0 93 77 28 	sts	0x2877, r26	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    2388:	b0 93 78 28 	sts	0x2878, r27	; 0x802878 <PID_SETPOINT_To_Show+0x3>
    238c:	80 93 dc 29 	sts	0x29DC, r24	; 0x8029dc <PID_SETPOINT>
    2390:	90 93 dd 29 	sts	0x29DD, r25	; 0x8029dd <PID_SETPOINT+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:289
               PID_SETPOINT = SET_TEMP_DEG;              
    2394:	a0 93 de 29 	sts	0x29DE, r26	; 0x8029de <PID_SETPOINT+0x2>
    2398:	b0 93 df 29 	sts	0x29DF, r27	; 0x8029df <PID_SETPOINT+0x3>
    239c:	8e ed       	ldi	r24, 0xDE	; 222
    239e:	9a e2       	ldi	r25, 0x2A	; 42
    23a0:	c2 d9       	rcall	.-3196   	; 0x1726 <Ticker::start()>
    23a2:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:296
          else                 
          {
              PID_SETPOINT_To_Show = SET_TEMP_FAH;  
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
          }
          Alter_Disp.start();
    23a4:	80 93 74 28 	sts	0x2874, r24	; 0x802874 <Alternate_Display_Flag>
    23a8:	01 e0       	ldi	r16, 0x01	; 1
    23aa:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:297
          Alternate_Display_Flag =1; 
    23ac:	8c e3       	ldi	r24, 0x3C	; 60
    23ae:	28 2e       	mov	r2, r24
    23b0:	31 2c       	mov	r3, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:403
                   Tick.BUZZ_INTERVAL1(800);                     
                    if(REP == 0)  
                    {
                      REPETATION_FLAG=1;
                      Tick.BUZZ_TICK_START();
                      REP++;
    23b2:	c5 e1       	ldi	r28, 0x15	; 21
    23b4:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:411
                    {
                      Tick.BUZZ_TICK_STOP();
                      REPETATION_FLAG=0;  
                    }
               }                  
               SET_HOUR = SET_MIN/60;
    23b6:	80 91 8c 28 	lds	r24, 0x288C	; 0x80288c <SET_MIN>
    23ba:	90 91 8d 28 	lds	r25, 0x288D	; 0x80288d <SET_MIN+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:491
    //                      DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(TEMP_FAH*10);
                          digits2[3] = 21;            
    23be:	18 16       	cp	r1, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:299
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
          }
          Alter_Disp.start();
          Alternate_Display_Flag =1; 
                 
          while(SET_MIN >0  ) 
    23c0:	19 06       	cpc	r1, r25
    23c2:	14 f0       	brlt	.+4      	; 0x23c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x210>
    23c4:	0c 94 f4 19 	jmp	0x33e8	; 0x33e8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1230>
digitalWrite():
    23c8:	61 e0       	ldi	r22, 0x01	; 1
    23ca:	8d e1       	ldi	r24, 0x1D	; 29
    23cc:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    23d0:	60 e0       	ldi	r22, 0x00	; 0
    23d2:	8b e1       	ldi	r24, 0x1B	; 27
    23d4:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    23d8:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
DISP_UPDATE():
    23dc:	8b e9       	ldi	r24, 0x9B	; 155
    23de:	9b e2       	ldi	r25, 0x2B	; 43
    23e0:	44 d9       	rcall	.-3448   	; 0x166a <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:303
          {
               digitalWrite(SET_PARA_LED, HIGH);
               digitalWrite(HEATER_STATUS_LED, LOW);               
               Temp.RTD_TEMP_CONV();
    23e2:	80 91 8e 28 	lds	r24, 0x288E	; 0x80288e <STIR_VALUE_SET>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:105
  
}

void Eclass :: DISP_UPDATE()
{
  DISP.update();
    23e6:	88 23       	and	r24, r24
    23e8:	29 f0       	breq	.+10     	; 0x23f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x23c>
    23ea:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
digitalWrite():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:308
               led.DISP_UPDATE();
               
              // Eeprom.Save_Pump_Data();  //Siddhesh
              
               if(STIR_VALUE_SET && select_product_type)   digitalWrite(PUMP, HIGH); //Siddhesh
    23ee:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    23f0:	81 11       	cpse	r24, r1
    23f2:	01 c0       	rjmp	.+2      	; 0x23f6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x23e>
digitalWrite():
    23f4:	60 e0       	ldi	r22, 0x00	; 0
    23f6:	89 e1       	ldi	r24, 0x19	; 25
    23f8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    23fc:	b0 90 97 28 	lds	r11, 0x2897	; 0x802897 <CHECK_RATE_OF_HEATING>
    2400:	b1 10       	cpse	r11, r1
    2402:	09 c0       	rjmp	.+18     	; 0x2416 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x25e>
    2404:	20 d8       	rcall	.-4032   	; 0x1446 <millis>
    2406:	60 93 70 28 	sts	0x2870, r22	; 0x802870 <STOP_COUNT_VALUE>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:310
               else                                        digitalWrite(PUMP, LOW);
               if( !CHECK_RATE_OF_HEATING )  STOP_COUNT_VALUE = millis();
    240a:	70 93 71 28 	sts	0x2871, r23	; 0x802871 <STOP_COUNT_VALUE+0x1>
    240e:	80 93 72 28 	sts	0x2872, r24	; 0x802872 <STOP_COUNT_VALUE+0x2>
    2412:	90 93 73 28 	sts	0x2873, r25	; 0x802873 <STOP_COUNT_VALUE+0x3>
    2416:	c0 90 70 28 	lds	r12, 0x2870	; 0x802870 <STOP_COUNT_VALUE>
    241a:	d0 90 71 28 	lds	r13, 0x2871	; 0x802871 <STOP_COUNT_VALUE+0x1>
    241e:	e0 90 72 28 	lds	r14, 0x2872	; 0x802872 <STOP_COUNT_VALUE+0x2>
    2422:	f0 90 73 28 	lds	r15, 0x2873	; 0x802873 <STOP_COUNT_VALUE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:312
               
               if(((STOP_COUNT_VALUE - START_COUNT_VALUE) >= 210000) && !CHECK_RATE_OF_HEATING )       //---------------------------Rate of heating  
    2426:	80 91 79 28 	lds	r24, 0x2879	; 0x802879 <START_COUNT_VALUE>
    242a:	90 91 7a 28 	lds	r25, 0x287A	; 0x80287a <START_COUNT_VALUE+0x1>
    242e:	a0 91 7b 28 	lds	r26, 0x287B	; 0x80287b <START_COUNT_VALUE+0x2>
    2432:	b0 91 7c 28 	lds	r27, 0x287C	; 0x80287c <START_COUNT_VALUE+0x3>
    2436:	c8 1a       	sub	r12, r24
    2438:	d9 0a       	sbc	r13, r25
    243a:	ea 0a       	sbc	r14, r26
    243c:	fb 0a       	sbc	r15, r27
    243e:	20 e5       	ldi	r18, 0x50	; 80
    2440:	c2 16       	cp	r12, r18
    2442:	24 e3       	ldi	r18, 0x34	; 52
    2444:	d2 06       	cpc	r13, r18
    2446:	23 e0       	ldi	r18, 0x03	; 3
    2448:	e2 06       	cpc	r14, r18
    244a:	f1 04       	cpc	r15, r1
    244c:	08 f4       	brcc	.+2      	; 0x2450 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x298>
    244e:	51 c0       	rjmp	.+162    	; 0x24f2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x33a>
    2450:	b1 10       	cpse	r11, r1
    2452:	4f c0       	rjmp	.+158    	; 0x24f2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x33a>
    2454:	80 90 dc 28 	lds	r8, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    2458:	90 90 dd 28 	lds	r9, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    245c:	a0 90 de 28 	lds	r10, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    2460:	b0 90 df 28 	lds	r11, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:314
               {
                 TEMP_VALUE_FINAL = TEMP_DEG_RAW;
    2464:	20 91 7d 28 	lds	r18, 0x287D	; 0x80287d <TEMP_VALUE_INITIAL>
    2468:	30 91 7e 28 	lds	r19, 0x287E	; 0x80287e <TEMP_VALUE_INITIAL+0x1>
    246c:	40 91 7f 28 	lds	r20, 0x287F	; 0x80287f <TEMP_VALUE_INITIAL+0x2>
    2470:	50 91 80 28 	lds	r21, 0x2880	; 0x802880 <TEMP_VALUE_INITIAL+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:315
                 RATE_OF_HEATING  = (TEMP_VALUE_FINAL - TEMP_VALUE_INITIAL)/((STOP_COUNT_VALUE - START_COUNT_VALUE) / 60000);    
    2474:	c5 01       	movw	r24, r10
    2476:	b4 01       	movw	r22, r8
    2478:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    247c:	2b 01       	movw	r4, r22
    247e:	3c 01       	movw	r6, r24
    2480:	c7 01       	movw	r24, r14
    2482:	b6 01       	movw	r22, r12
    2484:	20 e6       	ldi	r18, 0x60	; 96
    2486:	3a ee       	ldi	r19, 0xEA	; 234
    2488:	40 e0       	ldi	r20, 0x00	; 0
    248a:	50 e0       	ldi	r21, 0x00	; 0
    248c:	0e 94 3a 37 	call	0x6e74	; 0x6e74 <__udivmodsi4>
    2490:	ca 01       	movw	r24, r20
    2492:	b9 01       	movw	r22, r18
    2494:	0e 94 0e 36 	call	0x6c1c	; 0x6c1c <__floatunsisf>
    2498:	9b 01       	movw	r18, r22
    249a:	ac 01       	movw	r20, r24
    249c:	c3 01       	movw	r24, r6
    249e:	b2 01       	movw	r22, r4
    24a0:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    24a4:	60 93 9b 28 	sts	0x289B, r22	; 0x80289b <RATE_OF_HEATING>
    24a8:	70 93 9c 28 	sts	0x289C, r23	; 0x80289c <RATE_OF_HEATING+0x1>
    24ac:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <RATE_OF_HEATING+0x2>
    24b0:	90 93 9e 28 	sts	0x289E, r25	; 0x80289e <RATE_OF_HEATING+0x3>
    24b4:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    24b8:	60 93 6c 28 	sts	0x286C, r22	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
    24bc:	70 93 6d 28 	sts	0x286D, r23	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    24c0:	80 93 6e 28 	sts	0x286E, r24	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:317
                 
                 PREVIOUS_COOLING_RATE_TIME = millis();                                              //-----------------------------To check cooling Rate 
    24c4:	90 93 6f 28 	sts	0x286F, r25	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
    24c8:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    24cc:	60 93 68 28 	sts	0x2868, r22	; 0x802868 <CAL_OF_10_MIN>
    24d0:	70 93 69 28 	sts	0x2869, r23	; 0x802869 <CAL_OF_10_MIN+0x1>
    24d4:	80 93 6a 28 	sts	0x286A, r24	; 0x80286a <CAL_OF_10_MIN+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:318
                 CAL_OF_10_MIN=millis();                                                            
    24d8:	90 93 6b 28 	sts	0x286B, r25	; 0x80286b <CAL_OF_10_MIN+0x3>
    24dc:	80 92 64 28 	sts	0x2864, r8	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
    24e0:	90 92 65 28 	sts	0x2865, r9	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    24e4:	a0 92 66 28 	sts	0x2866, r10	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    24e8:	b0 92 67 28 	sts	0x2867, r11	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:319
                 PREVIOUS_TEMP_COOLING_RATE = TEMP_DEG_RAW;
    24ec:	81 e0       	ldi	r24, 0x01	; 1
    24ee:	80 93 97 28 	sts	0x2897, r24	; 0x802897 <CHECK_RATE_OF_HEATING>
    24f2:	c0 90 9b 28 	lds	r12, 0x289B	; 0x80289b <RATE_OF_HEATING>
    24f6:	d0 90 9c 28 	lds	r13, 0x289C	; 0x80289c <RATE_OF_HEATING+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:320
                 CHECK_RATE_OF_HEATING =1;                                                          //------------------------------Heating rate is checked                             
    24fa:	e0 90 9d 28 	lds	r14, 0x289D	; 0x80289d <RATE_OF_HEATING+0x2>
    24fe:	f0 90 9e 28 	lds	r15, 0x289E	; 0x80289e <RATE_OF_HEATING+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:331
//                 Serial2.print("START_COUNT_VALUE"); Serial2.print("\t");Serial2.println(START_COUNT_VALUE);
//                 Serial2.print("RATE_OF_HEATING");   Serial2.print("\t");Serial2.println(RATE_OF_HEATING);
//                 Serial2.print("CHECK_RATE_OF_HEATING");   Serial2.print("\t");Serial2.println(CHECK_RATE_OF_HEATING);
               } 
               
               if(RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING )                                 //------------------------------- If water leve is less
    2502:	20 e0       	ldi	r18, 0x00	; 0
    2504:	30 e0       	ldi	r19, 0x00	; 0
    2506:	40 e8       	ldi	r20, 0x80	; 128
    2508:	5f e3       	ldi	r21, 0x3F	; 63
    250a:	c7 01       	movw	r24, r14
    250c:	b6 01       	movw	r22, r12
    250e:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    2512:	87 fd       	sbrc	r24, 7
    2514:	fa c5       	rjmp	.+3060   	; 0x310a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf52>
    2516:	80 91 97 28 	lds	r24, 0x2897	; 0x802897 <CHECK_RATE_OF_HEATING>
    251a:	88 23       	and	r24, r24
    251c:	09 f4       	brne	.+2      	; 0x2520 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x368>
    251e:	a1 c0       	rjmp	.+322    	; 0x2662 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4aa>
digitalWrite():
    2520:	60 e0       	ldi	r22, 0x00	; 0
    2522:	88 e1       	ldi	r24, 0x18	; 24
    2524:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
stop():
    2528:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE>
    252c:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <PID_EXE+0xb>
    2530:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <PID_EXE+0xc>
    2534:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <PID_EXE+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2538:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <PID_EXE+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    253c:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <PID_EXE+0xf>
    2540:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2544:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    2548:	6b 01       	movw	r12, r22
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    254a:	7c 01       	movw	r14, r24
    254c:	c0 92 60 28 	sts	0x2860, r12	; 0x802860 <CURRENT_COOLING_RATE_TIME>
    2550:	d0 92 61 28 	sts	0x2861, r13	; 0x802861 <CURRENT_COOLING_RATE_TIME+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:335
               {                    
                  digitalWrite(HEATER, LOW);
                  Pid.PID_Stop();                                                                  //-------------------------------stop pid 
                  CURRENT_COOLING_RATE_TIME = millis();
    2554:	e0 92 62 28 	sts	0x2862, r14	; 0x802862 <CURRENT_COOLING_RATE_TIME+0x2>
    2558:	f0 92 63 28 	sts	0x2863, r15	; 0x802863 <CURRENT_COOLING_RATE_TIME+0x3>
    255c:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <EXECUTE_PID_LOOP>
    2560:	80 90 dc 28 	lds	r8, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    2564:	90 90 dd 28 	lds	r9, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    2568:	a0 90 de 28 	lds	r10, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:336
                  EXECUTE_PID_LOOP =0;             
    256c:	b0 90 df 28 	lds	r11, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:337
                  CURRENT_TEMP_COOLING_RATE= TEMP_DEG_RAW;      
    2570:	80 92 5c 28 	sts	0x285C, r8	; 0x80285c <CURRENT_TEMP_COOLING_RATE>
    2574:	90 92 5d 28 	sts	0x285D, r9	; 0x80285d <CURRENT_TEMP_COOLING_RATE+0x1>
    2578:	a0 92 5e 28 	sts	0x285E, r10	; 0x80285e <CURRENT_TEMP_COOLING_RATE+0x2>
    257c:	b0 92 5f 28 	sts	0x285F, r11	; 0x80285f <CURRENT_TEMP_COOLING_RATE+0x3>
    2580:	80 91 6c 28 	lds	r24, 0x286C	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
    2584:	90 91 6d 28 	lds	r25, 0x286D	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    2588:	a0 91 6e 28 	lds	r26, 0x286E	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
    258c:	b0 91 6f 28 	lds	r27, 0x286F	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:339
                
                if((CURRENT_COOLING_RATE_TIME - PREVIOUS_COOLING_RATE_TIME) == 60000)              //--------------------------------check wAater is pour or not after every 1min
    2590:	26 01       	movw	r4, r12
    2592:	37 01       	movw	r6, r14
    2594:	48 1a       	sub	r4, r24
    2596:	59 0a       	sbc	r5, r25
    2598:	6a 0a       	sbc	r6, r26
    259a:	7b 0a       	sbc	r7, r27
    259c:	d3 01       	movw	r26, r6
    259e:	c2 01       	movw	r24, r4
    25a0:	80 36       	cpi	r24, 0x60	; 96
    25a2:	9a 4e       	sbci	r25, 0xEA	; 234
    25a4:	a1 05       	cpc	r26, r1
    25a6:	b1 05       	cpc	r27, r1
    25a8:	09 f0       	breq	.+2      	; 0x25ac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3f4>
    25aa:	5b c0       	rjmp	.+182    	; 0x2662 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4aa>
    25ac:	20 91 64 28 	lds	r18, 0x2864	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
    25b0:	30 91 65 28 	lds	r19, 0x2865	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    25b4:	40 91 66 28 	lds	r20, 0x2866	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    25b8:	50 91 67 28 	lds	r21, 0x2867	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:341
                {
                     COOLING_RATE =((CURRENT_TEMP_COOLING_RATE - PREVIOUS_TEMP_COOLING_RATE) /(( CURRENT_COOLING_RATE_TIME - PREVIOUS_COOLING_RATE_TIME)/60000));
    25bc:	c5 01       	movw	r24, r10
    25be:	b4 01       	movw	r22, r8
    25c0:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    25c4:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
    25c8:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    25cc:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    25d0:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:342
                     if(COOLING_RATE <= - COOLOING_RATE_COMP_VAL) 
    25d4:	50 58       	subi	r21, 0x80	; 128
    25d6:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    25da:	18 16       	cp	r1, r24
    25dc:	0c f4       	brge	.+2      	; 0x25e0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x428>
    25de:	71 c5       	rjmp	.+2786   	; 0x30c2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf0a>
    25e0:	80 91 5a 28 	lds	r24, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT>
    25e4:	90 91 5b 28 	lds	r25, 0x285B	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    25e8:	18 16       	cp	r1, r24
    25ea:	19 06       	cpc	r1, r25
    25ec:	0c f4       	brge	.+2      	; 0x25f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x438>
    25ee:	49 c5       	rjmp	.+2706   	; 0x3082 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xeca>
    25f0:	01 96       	adiw	r24, 0x01	; 1
    25f2:	80 93 5a 28 	sts	0x285A, r24	; 0x80285a <COOLING_CYCLE_COUNT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:344
                    {
                      if(COOLING_CYCLE_COUNT < 1) 
    25f6:	90 93 5b 28 	sts	0x285B, r25	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    25fa:	8a e0       	ldi	r24, 0x0A	; 10
    25fc:	97 ed       	ldi	r25, 0xD7	; 215
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:346
                      {
                        COOLING_CYCLE_COUNT++;
    25fe:	a3 e2       	ldi	r26, 0x23	; 35
    2600:	bc e3       	ldi	r27, 0x3C	; 60
    2602:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2606:	90 93 06 28 	sts	0x2806, r25	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:347
                        COOLOING_RATE_COMP_VAL = 0.01;
    260a:	a0 93 07 28 	sts	0x2807, r26	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    260e:	b0 93 08 28 	sts	0x2808, r27	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2612:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    2616:	60 93 56 28 	sts	0x2856, r22	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME>
    261a:	70 93 57 28 	sts	0x2857, r23	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    261e:	80 93 58 28 	sts	0x2858, r24	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:348
                        TO_CHECK_REPETATION_WITHIN_TIME = millis(); 
    2622:	90 93 59 28 	sts	0x2859, r25	; 0x802859 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2626:	80 91 5a 28 	lds	r24, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT>
    262a:	90 91 5b 28 	lds	r25, 0x285B	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    262e:	02 97       	sbiw	r24, 0x02	; 2
    2630:	41 f4       	brne	.+16     	; 0x2642 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x48a>
    2632:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <RATE_OF_HEATING>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:367
                      STOP_PROCESS=1;
                      digitalWrite(BUZZER,LOW);
                      ENTER_BUT=0;
                      SET_MIN =0;
                    }
                    if(COOLING_CYCLE_COUNT==2) RATE_OF_HEATING=0;  
    2636:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <RATE_OF_HEATING+0x1>
    263a:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <RATE_OF_HEATING+0x2>
    263e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <RATE_OF_HEATING+0x3>
    2642:	c0 92 6c 28 	sts	0x286C, r12	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
    2646:	d0 92 6d 28 	sts	0x286D, r13	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    264a:	e0 92 6e 28 	sts	0x286E, r14	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
    264e:	f0 92 6f 28 	sts	0x286F, r15	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:368
                    PREVIOUS_COOLING_RATE_TIME = CURRENT_COOLING_RATE_TIME;                 
    2652:	80 92 64 28 	sts	0x2864, r8	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
    2656:	90 92 65 28 	sts	0x2865, r9	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    265a:	a0 92 66 28 	sts	0x2866, r10	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    265e:	b0 92 67 28 	sts	0x2867, r11	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:369
                    PREVIOUS_TEMP_COOLING_RATE = CURRENT_TEMP_COOLING_RATE;
    2662:	80 90 e0 28 	lds	r8, 0x28E0	; 0x8028e0 <TEMP_DEG>
    2666:	90 90 e1 28 	lds	r9, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    266a:	a0 90 e2 28 	lds	r10, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    266e:	b0 90 e3 28 	lds	r11, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    2672:	c0 90 75 28 	lds	r12, 0x2875	; 0x802875 <PID_SETPOINT_To_Show>
    2676:	d0 90 76 28 	lds	r13, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    267a:	e0 90 77 28 	lds	r14, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    267e:	f0 90 78 28 	lds	r15, 0x2878	; 0x802878 <PID_SETPOINT_To_Show+0x3>
    2682:	80 91 55 28 	lds	r24, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    2686:	81 11       	cpse	r24, r1
    2688:	5d c5       	rjmp	.+2746   	; 0x3144 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf8c>
    268a:	81 e0       	ldi	r24, 0x01	; 1
    268c:	80 93 54 28 	sts	0x2854, r24	; 0x802854 <COUNTDOWN_START>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:381
                  Pid.PID_callingg(); 
                  
//                 Serial2.print("EXECUTE_PID_LOOP");   Serial2.print("\t");Serial2.println(EXECUTE_PID_LOOP);
               } 
                            
               if(!TIME_SOCK_OR_TOTAL)                     COUNTDOWN_START=1; 
    2690:	a5 01       	movw	r20, r10
    2692:	94 01       	movw	r18, r8
    2694:	c7 01       	movw	r24, r14
    2696:	b6 01       	movw	r22, r12
    2698:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:395
                 {
                     if( TEMP_FAH >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
                     else                                          COUNTDOWN_START=0; 
                 }
               }                 
               if(TEMP_DEG >= PID_SETPOINT_To_Show )
    269c:	18 16       	cp	r1, r24
    269e:	0c f4       	brge	.+2      	; 0x26a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4ea>
    26a0:	4c c0       	rjmp	.+152    	; 0x273a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x582>
interval():
    26a2:	80 91 53 2b 	lds	r24, 0x2B53	; 0x802b53 <BUZZ_TICK2+0x9>
    26a6:	90 91 54 2b 	lds	r25, 0x2B54	; 0x802b54 <BUZZ_TICK2+0xa>
    26aa:	89 2b       	or	r24, r25
    26ac:	09 f4       	brne	.+2      	; 0x26b0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4f8>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    26ae:	69 c5       	rjmp	.+2770   	; 0x3182 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfca>
    26b0:	80 e9       	ldi	r24, 0x90	; 144
    26b2:	91 e0       	ldi	r25, 0x01	; 1
    26b4:	a0 e0       	ldi	r26, 0x00	; 0
    26b6:	b0 e0       	ldi	r27, 0x00	; 0
    26b8:	80 93 4b 2b 	sts	0x2B4B, r24	; 0x802b4b <BUZZ_TICK2+0x1>
    26bc:	90 93 4c 2b 	sts	0x2B4C, r25	; 0x802b4c <BUZZ_TICK2+0x2>
    26c0:	a0 93 4d 2b 	sts	0x2B4D, r26	; 0x802b4d <BUZZ_TICK2+0x3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    26c4:	b0 93 4e 2b 	sts	0x2B4E, r27	; 0x802b4e <BUZZ_TICK2+0x4>
    26c8:	80 91 6e 2b 	lds	r24, 0x2B6E	; 0x802b6e <BUZZ_TICK1+0x9>
    26cc:	90 91 6f 2b 	lds	r25, 0x2B6F	; 0x802b6f <BUZZ_TICK1+0xa>
    26d0:	89 2b       	or	r24, r25
    26d2:	09 f4       	brne	.+2      	; 0x26d6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x51e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    26d4:	5b c5       	rjmp	.+2742   	; 0x318c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfd4>
    26d6:	80 e2       	ldi	r24, 0x20	; 32
    26d8:	93 e0       	ldi	r25, 0x03	; 3
    26da:	a0 e0       	ldi	r26, 0x00	; 0
    26dc:	b0 e0       	ldi	r27, 0x00	; 0
    26de:	80 93 66 2b 	sts	0x2B66, r24	; 0x802b66 <BUZZ_TICK1+0x1>
    26e2:	90 93 67 2b 	sts	0x2B67, r25	; 0x802b67 <BUZZ_TICK1+0x2>
    26e6:	a0 93 68 2b 	sts	0x2B68, r26	; 0x802b68 <BUZZ_TICK1+0x3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    26ea:	b0 93 69 2b 	sts	0x2B69, r27	; 0x802b69 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    26ee:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <REP>
    26f2:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <REP+0x1>
    26f6:	89 2b       	or	r24, r25
    26f8:	51 f4       	brne	.+20     	; 0x270e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x556>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:399
               {                                       
                   Tick.BUZZ_INTERVAL2(400); 
                   Tick.BUZZ_INTERVAL1(800);                     
                    if(REP == 0)  
    26fa:	81 e0       	ldi	r24, 0x01	; 1
    26fc:	80 93 99 28 	sts	0x2899, r24	; 0x802899 <REPETATION_FLAG>
BUZZ_TICK_START():
    2700:	85 e6       	ldi	r24, 0x65	; 101
    2702:	9b e2       	ldi	r25, 0x2B	; 43
    2704:	10 d8       	rcall	.-4064   	; 0x1726 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:401
                    {
                      REPETATION_FLAG=1;
    2706:	00 93 a1 28 	sts	0x28A1, r16	; 0x8028a1 <REP>
    270a:	10 93 a2 28 	sts	0x28A2, r17	; 0x8028a2 <REP+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:90
  BUZZ_TICK1.stop();
}

void Tclass :: BUZZ_TICK_START()
{
  BUZZ_TICK1.start();
    270e:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <FOR_REP>
    2712:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <FOR_REP+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:403
                      Tick.BUZZ_TICK_START();
                      REP++;
    2716:	02 97       	sbiw	r24, 0x02	; 2
    2718:	81 f4       	brne	.+32     	; 0x273a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x582>
stop():
    271a:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:405
                    }                    
                    if(FOR_REP==2) 
    271e:	10 92 70 2b 	sts	0x2B70, r1	; 0x802b70 <BUZZ_TICK1+0xb>
    2722:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0xc>
    2726:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    272a:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    272e:	10 92 74 2b 	sts	0x2B74, r1	; 0x802b74 <BUZZ_TICK1+0xf>
    2732:	10 92 75 2b 	sts	0x2B75, r1	; 0x802b75 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    2736:	10 92 99 28 	sts	0x2899, r1	; 0x802899 <REPETATION_FLAG>
    273a:	80 91 8c 28 	lds	r24, 0x288C	; 0x80288c <SET_MIN>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    273e:	90 91 8d 28 	lds	r25, 0x288D	; 0x80288d <SET_MIN+0x1>
    2742:	b1 01       	movw	r22, r2
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:408
                    {
                      Tick.BUZZ_TICK_STOP();
                      REPETATION_FLAG=0;  
    2744:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:411
                    }
               }                  
               SET_HOUR = SET_MIN/60;
    2748:	6b 01       	movw	r12, r22
    274a:	7c 01       	movw	r14, r24
    274c:	60 93 84 28 	sts	0x2884, r22	; 0x802884 <SET_HOUR>
    2750:	70 93 85 28 	sts	0x2885, r23	; 0x802885 <SET_HOUR+0x1>
    2754:	80 93 52 28 	sts	0x2852, r24	; 0x802852 <REMAIN_MIN>
    2758:	90 93 53 28 	sts	0x2853, r25	; 0x802853 <REMAIN_MIN+0x1>
    275c:	20 e0       	ldi	r18, 0x00	; 0
    275e:	30 e0       	ldi	r19, 0x00	; 0
    2760:	40 e8       	ldi	r20, 0x80	; 128
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:412
               REMAIN_MIN = SET_MIN % 60 ;
    2762:	5f e3       	ldi	r21, 0x3F	; 63
    2764:	60 91 4e 28 	lds	r22, 0x284E	; 0x80284e <DISP_INC>
    2768:	70 91 4f 28 	lds	r23, 0x284F	; 0x80284f <DISP_INC+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:413
               DISP_INC++;
    276c:	80 91 50 28 	lds	r24, 0x2850	; 0x802850 <DISP_INC+0x2>
    2770:	90 91 51 28 	lds	r25, 0x2851	; 0x802851 <DISP_INC+0x3>
    2774:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    2778:	60 93 4e 28 	sts	0x284E, r22	; 0x80284e <DISP_INC>
    277c:	70 93 4f 28 	sts	0x284F, r23	; 0x80284f <DISP_INC+0x1>
    2780:	80 93 50 28 	sts	0x2850, r24	; 0x802850 <DISP_INC+0x2>
    2784:	90 93 51 28 	sts	0x2851, r25	; 0x802851 <DISP_INC+0x3>
    2788:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    278c:	20 e0       	ldi	r18, 0x00	; 0
    278e:	30 e0       	ldi	r19, 0x00	; 0
    2790:	40 e8       	ldi	r20, 0x80	; 128
    2792:	5f e3       	ldi	r21, 0x3F	; 63
    2794:	60 91 9b 28 	lds	r22, 0x289B	; 0x80289b <RATE_OF_HEATING>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:415
//               TIMER_LED_BLINK++;
               DOT1_1=0; 
    2798:	70 91 9c 28 	lds	r23, 0x289C	; 0x80289c <RATE_OF_HEATING+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:417
                        
               if(RATE_OF_HEATING >= 1 ) 
    279c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <RATE_OF_HEATING+0x2>
    27a0:	90 91 9e 28 	lds	r25, 0x289E	; 0x80289e <RATE_OF_HEATING+0x3>
    27a4:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    27a8:	87 fd       	sbrc	r24, 7
    27aa:	ff c4       	rjmp	.+2558   	; 0x31aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xff2>
    27ac:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <IN_ERROR>
    27b6:	10 92 99 28 	sts	0x2899, r1	; 0x802899 <REPETATION_FLAG>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:420
               {
                 DOT1_1=0;
                 DOT2_1=0;
    27ba:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
digitalWrite():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:421
                 IN_ERROR=1;
    27be:	60 e0       	ldi	r22, 0x00	; 0
    27c0:	8d e0       	ldi	r24, 0x0D	; 13
    27c2:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:422
                 REPETATION_FLAG=0;  
    27c6:	c0 93 e4 28 	sts	0x28E4, r28	; 0x8028e4 <digits2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:423
                 ALL_LED_OFF();
    27ca:	d0 93 e5 28 	sts	0x28E5, r29	; 0x8028e5 <digits2+0x1>
    27ce:	89 e1       	ldi	r24, 0x19	; 25
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:194
    digits1[3] = DIG1_4;
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    27d6:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    27da:	8a e1       	ldi	r24, 0x1A	; 26
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:195
    digits2[1] = DIG2_2;
    27dc:	90 e0       	ldi	r25, 0x00	; 0
    27de:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    27e2:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    27e6:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:196
    digits2[2] = DIG2_3;
    27ea:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    27ee:	8e e0       	ldi	r24, 0x0E	; 14
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:197
    digits2[3] = DIG2_4;
    27f6:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    27fa:	8d e0       	ldi	r24, 0x0D	; 13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:186

}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    2802:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    2806:	80 e1       	ldi	r24, 0x10	; 16
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:187
    digits1[1] = DIG1_2;
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    280e:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    2812:	8e e1       	ldi	r24, 0x1E	; 30
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:188
    digits1[2] = DIG1_3;
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    281a:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
interval():
    281e:	80 91 53 2b 	lds	r24, 0x2B53	; 0x802b53 <BUZZ_TICK2+0x9>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:189
    digits1[3] = DIG1_4;
    2822:	90 91 54 2b 	lds	r25, 0x2B54	; 0x802b54 <BUZZ_TICK2+0xa>
    2826:	89 2b       	or	r24, r25
    2828:	09 f4       	brne	.+2      	; 0x282c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x674>
    282a:	b5 c4       	rjmp	.+2410   	; 0x3196 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfde>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    282c:	88 ee       	ldi	r24, 0xE8	; 232
    282e:	93 e0       	ldi	r25, 0x03	; 3
    2830:	a0 e0       	ldi	r26, 0x00	; 0
    2832:	b0 e0       	ldi	r27, 0x00	; 0
    2834:	80 93 4b 2b 	sts	0x2B4B, r24	; 0x802b4b <BUZZ_TICK2+0x1>
    2838:	90 93 4c 2b 	sts	0x2B4C, r25	; 0x802b4c <BUZZ_TICK2+0x2>
    283c:	a0 93 4d 2b 	sts	0x2B4D, r26	; 0x802b4d <BUZZ_TICK2+0x3>
    2840:	b0 93 4e 2b 	sts	0x2B4E, r27	; 0x802b4e <BUZZ_TICK2+0x4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    2844:	80 91 6e 2b 	lds	r24, 0x2B6E	; 0x802b6e <BUZZ_TICK1+0x9>
    2848:	90 91 6f 2b 	lds	r25, 0x2B6F	; 0x802b6f <BUZZ_TICK1+0xa>
    284c:	89 2b       	or	r24, r25
    284e:	09 f4       	brne	.+2      	; 0x2852 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x69a>
    2850:	a7 c4       	rjmp	.+2382   	; 0x31a0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfe8>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    2852:	80 ed       	ldi	r24, 0xD0	; 208
    2854:	97 e0       	ldi	r25, 0x07	; 7
    2856:	a0 e0       	ldi	r26, 0x00	; 0
    2858:	b0 e0       	ldi	r27, 0x00	; 0
    285a:	80 93 66 2b 	sts	0x2B66, r24	; 0x802b66 <BUZZ_TICK1+0x1>
    285e:	90 93 67 2b 	sts	0x2B67, r25	; 0x802b67 <BUZZ_TICK1+0x2>
    2862:	a0 93 68 2b 	sts	0x2B68, r26	; 0x802b68 <BUZZ_TICK1+0x3>
    2866:	b0 93 69 2b 	sts	0x2B69, r27	; 0x802b69 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    286a:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <REP>
    286e:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <REP+0x1>
    2872:	89 2b       	or	r24, r25
    2874:	09 f0       	breq	.+2      	; 0x2878 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x6c0>
    2876:	9f cd       	rjmp	.-1218   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
BUZZ_TICK_START():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:429
                 digitalWrite(TIMER_LED2, LOW); 
                 led.DISPLAY_DIGIT2(21, 25, 26, 26) ;
                 led.DISPLAY_DIGIT1(14, 13, 16, 30) ;               
                 Tick.BUZZ_INTERVAL2(1000); 
                 Tick.BUZZ_INTERVAL1(2000); 
                 if(REP == 0)  
    2878:	85 e6       	ldi	r24, 0x65	; 101
    287a:	9b e2       	ldi	r25, 0x2B	; 43
    287c:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    2880:	00 93 a1 28 	sts	0x28A1, r16	; 0x8028a1 <REP>
    2884:	10 93 a2 28 	sts	0x28A2, r17	; 0x8028a2 <REP+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:90
    2888:	96 cd       	rjmp	.-1236   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
    288a:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <DOT2_0>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:432
                 {
                      Tick.BUZZ_TICK_START();
                      REP++;
    288e:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <DOT2_2>
    2892:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <DOT1_2>
    2896:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:95
void Pclass :: SET_SHORT_PRESS_FUNCTION()   //------------------function for main process execution
{
  switch (ENTER_BUT)
  {
    case 0 :
          DOT1_1 =  DOT1_0 = DOT1_2 = DOT2_2 = DOT2_0 =0;                      //------------------All dots of display should off
    289a:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    289e:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <FOR_REP2>
    28a2:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <FOR_REP2+0x1>
    28a6:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <FOR_REP>
    28aa:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <FOR_REP+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:96
          REP= REP1= IN_ERROR= FOR_REP= FOR_REP2=0;                            //------------------All flags should be reset in Home page
    28ae:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <IN_ERROR>
    28b2:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <REP1>
    28b6:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <REP1+0x1>
    28ba:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <REP>
    28be:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <REP+0x1>
    28c2:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <Blinking_Freq>
    28c6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <CAL2_START>
    28ca:	10 92 f9 28 	sts	0x28F9, r1	; 0x8028f9 <PUMP_FLAG>
    28ce:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <RATE_OF_HEATING>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:97
          PUMP_FLAG = CAL2_START= Blinking_Freq=0;
    28d2:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <RATE_OF_HEATING+0x1>
    28d6:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <RATE_OF_HEATING+0x2>
    28da:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <RATE_OF_HEATING+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:98
          PID_SETPOINT= STOP_PROCESS= EXECUTE_PID_LOOP = RATE_OF_HEATING=0;
    28de:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <EXECUTE_PID_LOOP>
    28e2:	10 92 dc 29 	sts	0x29DC, r1	; 0x8029dc <PID_SETPOINT>
    28e6:	10 92 dd 29 	sts	0x29DD, r1	; 0x8029dd <PID_SETPOINT+0x1>
    28ea:	10 92 de 29 	sts	0x29DE, r1	; 0x8029de <PID_SETPOINT+0x2>
    28ee:	10 92 df 29 	sts	0x29DF, r1	; 0x8029df <PID_SETPOINT+0x3>
    28f2:	10 92 99 28 	sts	0x2899, r1	; 0x802899 <REPETATION_FLAG>
    28f6:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    28fa:	81 e0       	ldi	r24, 0x01	; 1
    28fc:	80 93 97 28 	sts	0x2897, r24	; 0x802897 <CHECK_RATE_OF_HEATING>
stop():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:99
          Mode_Button_Single_Press_In_Settings =REPETATION_FLAG =0; 
    2900:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK1>
    2904:	10 92 70 2b 	sts	0x2B70, r1	; 0x802b70 <BUZZ_TICK1+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:100
          CHECK_RATE_OF_HEATING=1;                                            //------------------Fill bath error checking 
    2908:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0xc>
    290c:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2910:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2914:	10 92 74 2b 	sts	0x2B74, r1	; 0x802b74 <BUZZ_TICK1+0xf>
    2918:	10 92 75 2b 	sts	0x2B75, r1	; 0x802b75 <BUZZ_TICK1+0x10>
digitalWrite():
    291c:	60 e0       	ldi	r22, 0x00	; 0
    291e:	89 e1       	ldi	r24, 0x19	; 25
    2920:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
stop():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2924:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <Blink_LED_ON>
    2928:	10 92 3a 2b 	sts	0x2B3A, r1	; 0x802b3a <Blink_LED_ON+0xb>
    292c:	10 92 3b 2b 	sts	0x2B3B, r1	; 0x802b3b <Blink_LED_ON+0xc>
    2930:	10 92 3c 2b 	sts	0x2B3C, r1	; 0x802b3c <Blink_LED_ON+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2934:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <Blink_LED_ON+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2938:	10 92 3e 2b 	sts	0x2B3E, r1	; 0x802b3e <Blink_LED_ON+0xf>
    293c:	10 92 3f 2b 	sts	0x2B3F, r1	; 0x802b3f <Blink_LED_ON+0x10>
    2940:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <Blink_LED_OFF>
    2944:	10 92 1f 2b 	sts	0x2B1F, r1	; 0x802b1f <Blink_LED_OFF+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2948:	10 92 20 2b 	sts	0x2B20, r1	; 0x802b20 <Blink_LED_OFF+0xc>
    294c:	10 92 21 2b 	sts	0x2B21, r1	; 0x802b21 <Blink_LED_OFF+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2950:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <Blink_LED_OFF+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2954:	10 92 23 2b 	sts	0x2B23, r1	; 0x802b23 <Blink_LED_OFF+0xf>
    2958:	10 92 24 2b 	sts	0x2B24, r1	; 0x802b24 <Blink_LED_OFF+0x10>
digitalWrite():
    295c:	60 e0       	ldi	r22, 0x00	; 0
    295e:	88 e1       	ldi	r24, 0x18	; 24
    2960:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
stop():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2964:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE>
    2968:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <PID_EXE+0xb>
    296c:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <PID_EXE+0xc>
    2970:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <PID_EXE+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2974:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <PID_EXE+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2978:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <PID_EXE+0xf>
    297c:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2980:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    2984:	80 91 96 28 	lds	r24, 0x2896	; 0x802896 <Process_Interrupt_flag>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2988:	88 23       	and	r24, r24
    298a:	09 f4       	brne	.+2      	; 0x298e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x7d6>
    298c:	93 c0       	rjmp	.+294    	; 0x2ab4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x8fc>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:106
          Tick.BUZZ_TICK_STOP();
          digitalWrite(PUMP, LOW); 
          Tick.LED_Off_Call();     
          digitalWrite(HEATER, LOW);             
          Pid.PID_Stop();
          ALL_LED_OFF();        
    298e:	80 91 95 28 	lds	r24, 0x2895	; 0x802895 <Proceess_Resume_Enable_Flag>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:107
          if(Process_Interrupt_flag && Proceess_Resume_Enable_Flag)           //------------------to display  "ProS strt" 3 times, beep
    2992:	88 23       	and	r24, r24
    2994:	09 f4       	brne	.+2      	; 0x2998 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x7e0>
    2996:	8e c0       	rjmp	.+284    	; 0x2ab4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x8fc>
    2998:	80 91 93 28 	lds	r24, 0x2893	; 0x802893 <z>
    299c:	90 91 94 28 	lds	r25, 0x2894	; 0x802894 <z+0x1>
    29a0:	03 97       	sbiw	r24, 0x03	; 3
    29a2:	0c f0       	brlt	.+2      	; 0x29a6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x7ee>
    29a4:	83 c0       	rjmp	.+262    	; 0x2aac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x8f4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:109
          { 
             if(z<3)
    29a6:	c0 91 91 28 	lds	r28, 0x2891	; 0x802891 <i>
    29aa:	d0 91 92 28 	lds	r29, 0x2892	; 0x802892 <i+0x1>
    29ae:	cb 34       	cpi	r28, 0x4B	; 75
    29b0:	d1 05       	cpc	r29, r1
    29b2:	e4 f5       	brge	.+120    	; 0x2a2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x874>
digitalWrite():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:111
             {
               if(i<VALUE_FOR_BLINK+50) 
    29b4:	61 e0       	ldi	r22, 0x01	; 1
    29b6:	85 e1       	ldi	r24, 0x15	; 21
    29b8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    29bc:	88 e1       	ldi	r24, 0x18	; 24
    29be:	90 e0       	ldi	r25, 0x00	; 0
    29c0:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    29c4:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    29c8:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:186

}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    29cc:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    29d0:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    29d4:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:187
    digits1[1] = DIG1_2;
    29d8:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    29dc:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
DISPLAY_DIGIT2():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:188
    digits1[2] = DIG1_3;
    29e0:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    29e4:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:189
    digits1[3] = DIG1_4;
    29e8:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    29ec:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:194
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    29f0:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    29f4:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:195
    digits2[1] = DIG2_2;
    29f8:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    29fc:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
digitalWrite():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:196
    digits2[2] = DIG2_3;
    2a00:	60 e0       	ldi	r22, 0x00	; 0
    2a02:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    2a04:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:197
    digits2[3] = DIG2_4;
    2a06:	cf 91       	pop	r28
    2a08:	1f 91       	pop	r17
    2a0a:	0f 91       	pop	r16
    2a0c:	ff 90       	pop	r15
    2a0e:	ef 90       	pop	r14
    2a10:	df 90       	pop	r13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:528
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    2a12:	cf 90       	pop	r12
    2a14:	bf 90       	pop	r11
    2a16:	af 90       	pop	r10
    2a18:	9f 90       	pop	r9
    2a1a:	8f 90       	pop	r8
    2a1c:	7f 90       	pop	r7
    2a1e:	6f 90       	pop	r6
    2a20:	5f 90       	pop	r5
    2a22:	4f 90       	pop	r4
    2a24:	3f 90       	pop	r3
    2a26:	2f 90       	pop	r2
digitalWrite():
    2a28:	0c 94 bf 08 	jmp	0x117e	; 0x117e <digitalWrite.part.2>
    2a2c:	60 e0       	ldi	r22, 0x00	; 0
    2a2e:	85 e1       	ldi	r24, 0x15	; 21
    2a30:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    2a34:	8b e0       	ldi	r24, 0x0B	; 11
    2a36:	90 e0       	ldi	r25, 0x00	; 0
    2a38:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    2a3c:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    2a40:	21 e1       	ldi	r18, 0x11	; 17
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:194
    digits1[3] = DIG1_4;
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    2a42:	30 e0       	ldi	r19, 0x00	; 0
    2a44:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits2+0x2>
    2a48:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits2+0x3>
    2a4c:	87 e1       	ldi	r24, 0x17	; 23
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:195
    digits2[1] = DIG2_2;
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    2a54:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    2a58:	8c e0       	ldi	r24, 0x0C	; 12
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:196
    digits2[2] = DIG2_3;
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2a60:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    2a64:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:197
    digits2[3] = DIG2_4;
    2a68:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    2a6c:	80 e1       	ldi	r24, 0x10	; 16
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:186

}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    2a74:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    2a78:	20 93 f0 28 	sts	0x28F0, r18	; 0x8028f0 <digits1+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:187
    digits1[1] = DIG1_2;
    2a7c:	30 93 f1 28 	sts	0x28F1, r19	; 0x8028f1 <digits1+0x5>
    2a80:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    2a84:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:188
    digits1[2] = DIG1_3;
    2a88:	c7 39       	cpi	r28, 0x97	; 151
    2a8a:	d1 05       	cpc	r29, r1
    2a8c:	0c f4       	brge	.+2      	; 0x2a90 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x8d8>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:189
    digits1[3] = DIG1_4;
    2a8e:	b8 cf       	rjmp	.-144    	; 0x2a00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x848>
    2a90:	80 91 93 28 	lds	r24, 0x2893	; 0x802893 <z>
    2a94:	90 91 94 28 	lds	r25, 0x2894	; 0x802894 <z+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:123
               {       
                 digitalWrite(BUZZER, LOW);
                 led.DISPLAY_DIGIT2(11, 17, 23, 12);
                 led.DISPLAY_DIGIT1(12, 16, 17, 16);
               }
               if(i>TOTAL_VALUE_FOR_BLINK+100) {z ++; i=0; }
    2a98:	01 96       	adiw	r24, 0x01	; 1
    2a9a:	80 93 93 28 	sts	0x2893, r24	; 0x802893 <z>
    2a9e:	90 93 94 28 	sts	0x2894, r25	; 0x802894 <z+0x1>
    2aa2:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    2aa6:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    2aaa:	aa cf       	rjmp	.-172    	; 0x2a00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x848>
    2aac:	85 e0       	ldi	r24, 0x05	; 5
    2aae:	80 93 0a 29 	sts	0x290A, r24	; 0x80290a <ENTER_BUT>
    2ab2:	a6 cf       	rjmp	.-180    	; 0x2a00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x848>
    2ab4:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    2ab8:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:125
             }
             else  ENTER_BUT=5;                                          //------------------start process directly                                   
    2aba:	3d c0       	rjmp	.+122    	; 0x2b36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x97e>
    2abc:	c0 90 e0 28 	lds	r12, 0x28E0	; 0x8028e0 <TEMP_DEG>
    2ac0:	d0 90 e1 28 	lds	r13, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:130
             digitalWrite(TIMER_LED1, LOW); 
          }
          else
          { 
            if(!DEGREE_VALUE_SET)  
    2ac4:	e0 90 e2 28 	lds	r14, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    2ac8:	f0 90 e3 28 	lds	r15, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:132
            {
                if(TEMP_DEG>99.9)  { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0; }
    2acc:	2d ec       	ldi	r18, 0xCD	; 205
    2ace:	3c ec       	ldi	r19, 0xCC	; 204
    2ad0:	47 ec       	ldi	r20, 0xC7	; 199
    2ad2:	52 e4       	ldi	r21, 0x42	; 66
    2ad4:	c7 01       	movw	r24, r14
    2ad6:	b6 01       	movw	r22, r12
    2ad8:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    2adc:	18 16       	cp	r1, r24
    2ade:	dc f4       	brge	.+54     	; 0x2b16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x95e>
    2ae0:	20 e0       	ldi	r18, 0x00	; 0
    2ae2:	30 e0       	ldi	r19, 0x00	; 0
    2ae4:	40 e2       	ldi	r20, 0x20	; 32
    2ae6:	51 e4       	ldi	r21, 0x41	; 65
    2ae8:	c7 01       	movw	r24, r14
    2aea:	b6 01       	movw	r22, r12
    2aec:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    2af0:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    2af4:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2af8:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    2afc:	8a e0       	ldi	r24, 0x0A	; 10
    2afe:	90 e0       	ldi	r25, 0x00	; 0
    2b00:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2b04:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2b08:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:134
                else               { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1; }
                digits2[3] = 10;
    2b0a:	70 e0       	ldi	r23, 0x00	; 0
    2b0c:	cb 01       	movw	r24, r22
    2b0e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
digitalWrite():
    2b12:	61 e0       	ldi	r22, 0x01	; 1
    2b14:	76 cf       	rjmp	.-276    	; 0x2a02 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x84a>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:142
            {
               led.BREAK_NUMBER2(TEMP_FAH*10);
               digits2[3] = 21;   
               DOT2_1=0;          
            }
            led.BREAK_NUMBER1(0000);    
    2b16:	20 e0       	ldi	r18, 0x00	; 0
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	48 ec       	ldi	r20, 0xC8	; 200
    2b1c:	52 e4       	ldi	r21, 0x42	; 66
    2b1e:	c7 01       	movw	r24, r14
    2b20:	b6 01       	movw	r22, r12
    2b22:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:133
          else
          { 
            if(!DEGREE_VALUE_SET)  
            {
                if(TEMP_DEG>99.9)  { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0; }
                else               { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1; }
    2b26:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    2b2a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2b2e:	81 e0       	ldi	r24, 0x01	; 1
    2b30:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    2b34:	e3 cf       	rjmp	.-58     	; 0x2afc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x944>
    2b36:	20 e0       	ldi	r18, 0x00	; 0
    2b38:	30 e0       	ldi	r19, 0x00	; 0
    2b3a:	40 e2       	ldi	r20, 0x20	; 32
    2b3c:	51 e4       	ldi	r21, 0x41	; 65
    2b3e:	60 91 bf 28 	lds	r22, 0x28BF	; 0x8028bf <TEMP_FAH>
    2b42:	70 91 c0 28 	lds	r23, 0x28C0	; 0x8028c0 <TEMP_FAH+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:138
                digits2[3] = 10;
            }
            else
            {
               led.BREAK_NUMBER2(TEMP_FAH*10);
    2b46:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <TEMP_FAH+0x2>
    2b4a:	90 91 c2 28 	lds	r25, 0x28C2	; 0x8028c2 <TEMP_FAH+0x3>
    2b4e:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    2b52:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    2b56:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2b5a:	85 e1       	ldi	r24, 0x15	; 21
    2b5c:	90 e0       	ldi	r25, 0x00	; 0
    2b5e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2b62:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2b66:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:139
               digits2[3] = 21;   
    2b6a:	ce cf       	rjmp	.-100    	; 0x2b08 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x950>
    2b6c:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    2b70:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
digitalWrite():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:140
               DOT2_1=0;          
    2b74:	60 e0       	ldi	r22, 0x00	; 0
    2b76:	8d e1       	ldi	r24, 0x1D	; 29
    2b78:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:148
            digitalWrite(TIMER_LED1, HIGH);          
          } 
          
          break;
    case 1 :
          DOT1_1=0;
    2b7c:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:149
          DOT2_1=0;             
    2b7e:	8c e0       	ldi	r24, 0x0C	; 12
    2b80:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2b84:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2b88:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    2b8c:	49 97       	sbiw	r24, 0x19	; 25
    2b8e:	0c f0       	brlt	.+2      	; 0x2b92 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x9da>
    2b90:	4d c0       	rjmp	.+154    	; 0x2c2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xa74>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:152
          digitalWrite(SET_PARA_LED, LOW);          
          digitalWrite(TIMER_LED1, HIGH);  
          if(i<VALUE_FOR_BLINK) 
    2b92:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    2b96:	81 11       	cpse	r24, r1
    2b98:	42 c0       	rjmp	.+132    	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xa66>
    2b9a:	88 e1       	ldi	r24, 0x18	; 24
    2b9c:	90 e0       	ldi	r25, 0x00	; 0
    2b9e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:154
          {
              if(!BLINK_STATS) { digits2[0] = 24; digits2[1] = 24;  DOT2_1=0; }
    2ba2:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    2ba6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    2baa:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    2bae:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2bb2:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    2bb6:	c3 97       	sbiw	r24, 0x33	; 51
    2bb8:	24 f0       	brlt	.+8      	; 0x2bc2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xa0a>
    2bba:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:162
          else     
          {
            DOT2_1=1; 
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    2bbe:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    2bc2:	8a e0       	ldi	r24, 0x0A	; 10
    2bc4:	90 e0       	ldi	r25, 0x00	; 0
    2bc6:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2bca:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2bce:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <SET_VALUE+0x6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:163
          digits2[3] = 10;
    2bd2:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <SET_VALUE+0x7>
    2bd6:	24 e6       	ldi	r18, 0x64	; 100
    2bd8:	28 9f       	mul	r18, r24
    2bda:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:164
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
    2bdc:	29 9f       	mul	r18, r25
    2bde:	70 0d       	add	r23, r0
    2be0:	11 24       	eor	r1, r1
    2be2:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <SET_VALUE+0x8>
    2be6:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <SET_VALUE+0x9>
    2bea:	68 0f       	add	r22, r24
    2bec:	79 1f       	adc	r23, r25
    2bee:	07 2e       	mov	r0, r23
    2bf0:	00 0c       	add	r0, r0
    2bf2:	88 0b       	sbc	r24, r24
    2bf4:	99 0b       	sbc	r25, r25
    2bf6:	df 91       	pop	r29
    2bf8:	cf 91       	pop	r28
    2bfa:	1f 91       	pop	r17
    2bfc:	0f 91       	pop	r16
    2bfe:	ff 90       	pop	r15
    2c00:	ef 90       	pop	r14
    2c02:	df 90       	pop	r13
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:528
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    2c04:	cf 90       	pop	r12
    2c06:	bf 90       	pop	r11
    2c08:	af 90       	pop	r10
    2c0a:	9f 90       	pop	r9
    2c0c:	8f 90       	pop	r8
    2c0e:	7f 90       	pop	r7
    2c10:	6f 90       	pop	r6
    2c12:	5f 90       	pop	r5
    2c14:	4f 90       	pop	r4
    2c16:	3f 90       	pop	r3
    2c18:	2f 90       	pop	r2
    2c1a:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    2c1e:	89 e1       	ldi	r24, 0x19	; 25
    2c20:	90 e0       	ldi	r25, 0x00	; 0
    2c22:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
    2c26:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:164
            DOT2_1=1; 
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          digits2[3] = 10;
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
    2c2a:	c1 cf       	rjmp	.-126    	; 0x2bae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x9f6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:155
          digitalWrite(SET_PARA_LED, LOW);          
          digitalWrite(TIMER_LED1, HIGH);  
          if(i<VALUE_FOR_BLINK) 
          {
              if(!BLINK_STATS) { digits2[0] = 24; digits2[1] = 24;  DOT2_1=0; }
              else i=VALUE_FOR_BLINK;
    2c2c:	c0 93 90 28 	sts	0x2890, r28	; 0x802890 <DOT2_1>
    2c30:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
    2c34:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
    2c38:	24 e6       	ldi	r18, 0x64	; 100
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:159
          }  
          else     
          {
            DOT2_1=1; 
    2c3a:	28 9f       	mul	r18, r24
    2c3c:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:160
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
    2c3e:	29 9f       	mul	r18, r25
    2c40:	70 0d       	add	r23, r0
    2c42:	11 24       	eor	r1, r1
    2c44:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <SET_VALUE+0x4>
    2c48:	30 91 03 29 	lds	r19, 0x2903	; 0x802903 <SET_VALUE+0x5>
    2c4c:	4a e0       	ldi	r20, 0x0A	; 10
    2c4e:	42 9f       	mul	r20, r18
    2c50:	c0 01       	movw	r24, r0
    2c52:	43 9f       	mul	r20, r19
    2c54:	90 0d       	add	r25, r0
    2c56:	11 24       	eor	r1, r1
    2c58:	68 0f       	add	r22, r24
    2c5a:	79 1f       	adc	r23, r25
    2c5c:	07 2e       	mov	r0, r23
    2c5e:	00 0c       	add	r0, r0
    2c60:	88 0b       	sbc	r24, r24
    2c62:	99 0b       	sbc	r25, r25
    2c64:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2c68:	a2 cf       	rjmp	.-188    	; 0x2bae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x9f6>
    2c6a:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <SET_VALUE+0x6>
    2c6e:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <SET_VALUE+0x7>
    2c72:	14 e6       	ldi	r17, 0x64	; 100
    2c74:	18 9f       	mul	r17, r24
    2c76:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:167
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          digits2[3] = 10;
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
          break;
    case 2 :
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+1] *100) + SET_VALUE[ENTER_BUT+2]);
    2c78:	19 9f       	mul	r17, r25
    2c7a:	70 0d       	add	r23, r0
    2c7c:	11 24       	eor	r1, r1
    2c7e:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <SET_VALUE+0x8>
    2c82:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <SET_VALUE+0x9>
    2c86:	68 0f       	add	r22, r24
    2c88:	79 1f       	adc	r23, r25
    2c8a:	07 2e       	mov	r0, r23
    2c8c:	00 0c       	add	r0, r0
    2c8e:	88 0b       	sbc	r24, r24
    2c90:	99 0b       	sbc	r25, r25
    2c92:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    2c96:	c0 91 91 28 	lds	r28, 0x2891	; 0x802891 <i>
    2c9a:	d0 91 92 28 	lds	r29, 0x2892	; 0x802892 <i+0x1>
    2c9e:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    2ca2:	81 11       	cpse	r24, r1
    2ca4:	3c c0       	rjmp	.+120    	; 0x2d1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb66>
    2ca6:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
    2caa:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:168
          if(!DEGREE_VALUE_SET)  
    2cae:	18 9f       	mul	r17, r24
    2cb0:	b0 01       	movw	r22, r0
    2cb2:	19 9f       	mul	r17, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:170
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[ENTER_BUT]*10));
    2cb4:	70 0d       	add	r23, r0
    2cb6:	11 24       	eor	r1, r1
    2cb8:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <SET_VALUE+0x4>
    2cbc:	30 91 03 29 	lds	r19, 0x2903	; 0x802903 <SET_VALUE+0x5>
    2cc0:	4a e0       	ldi	r20, 0x0A	; 10
    2cc2:	42 9f       	mul	r20, r18
    2cc4:	c0 01       	movw	r24, r0
    2cc6:	43 9f       	mul	r20, r19
    2cc8:	90 0d       	add	r25, r0
    2cca:	11 24       	eor	r1, r1
    2ccc:	68 0f       	add	r22, r24
    2cce:	79 1f       	adc	r23, r25
    2cd0:	07 2e       	mov	r0, r23
    2cd2:	00 0c       	add	r0, r0
    2cd4:	88 0b       	sbc	r24, r24
    2cd6:	99 0b       	sbc	r25, r25
    2cd8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2cdc:	8a e0       	ldi	r24, 0x0A	; 10
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2ce4:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2ce8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:171
            digits2[3] = 10;
    2cea:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    2cee:	69 97       	sbiw	r28, 0x19	; 25
    2cf0:	54 f4       	brge	.+20     	; 0x2d06 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb4e>
    2cf2:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:172
            DOT2_1=1; 
    2cf6:	81 11       	cpse	r24, r1
    2cf8:	94 c0       	rjmp	.+296    	; 0x2e22 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc6a>
    2cfa:	88 e1       	ldi	r24, 0x18	; 24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:173
            if(i<VALUE_FOR_BLINK) 
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:175
            {
             if(!BLINK_STATS) digits2[2] = 24;
    2d02:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    2d06:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2d0a:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:186
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
            digits2[3] = 21;   
            DOT2_1=0; 
            if(i<VALUE_FOR_BLINK) 
            {
              if(!BLINK_STATS  ){digits2[0] = 24; digits2[1] = 24;  digits2[2] = 24;}  
    2d0e:	c3 97       	sbiw	r24, 0x33	; 51
    2d10:	0c f4       	brge	.+2      	; 0x2d14 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb5c>
    2d12:	70 ca       	rjmp	.-2848   	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:190
              else i=VALUE_FOR_BLINK;  
            }     
          }                               
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    2d14:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    2d18:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    2d1c:	6b ca       	rjmp	.-2858   	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>
    2d1e:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
    2d22:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
    2d26:	2a e0       	ldi	r18, 0x0A	; 10
    2d28:	28 9f       	mul	r18, r24
    2d2a:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:181
              else i=VALUE_FOR_BLINK;  
            }
          }
          else
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    2d2c:	29 9f       	mul	r18, r25
    2d2e:	70 0d       	add	r23, r0
    2d30:	11 24       	eor	r1, r1
    2d32:	07 2e       	mov	r0, r23
    2d34:	00 0c       	add	r0, r0
    2d36:	88 0b       	sbc	r24, r24
    2d38:	99 0b       	sbc	r25, r25
    2d3a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2d3e:	85 e1       	ldi	r24, 0x15	; 21
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2d46:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2d4a:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:182
            digits2[3] = 21;   
    2d4e:	69 97       	sbiw	r28, 0x19	; 25
    2d50:	d4 f6       	brge	.-76     	; 0x2d06 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb4e>
    2d52:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    2d56:	81 11       	cpse	r24, r1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:183
            DOT2_1=0; 
    2d58:	64 c0       	rjmp	.+200    	; 0x2e22 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc6a>
    2d5a:	88 e1       	ldi	r24, 0x18	; 24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:184
            if(i<VALUE_FOR_BLINK) 
    2d5c:	90 e0       	ldi	r25, 0x00	; 0
    2d5e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:186
            {
              if(!BLINK_STATS  ){digits2[0] = 24; digits2[1] = 24;  digits2[2] = 24;}  
    2d62:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    2d66:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    2d6a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    2d6e:	c7 cf       	rjmp	.-114    	; 0x2cfe <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb46>
    2d70:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    2d74:	81 11       	cpse	r24, r1
    2d76:	3c c0       	rjmp	.+120    	; 0x2df0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc38>
    2d78:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
    2d7c:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:193
            }     
          }                               
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          break;     
    case 3 :
          if(!DEGREE_VALUE_SET)  
    2d80:	24 e6       	ldi	r18, 0x64	; 100
    2d82:	28 9f       	mul	r18, r24
    2d84:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:195
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[2]*10));
    2d86:	29 9f       	mul	r18, r25
    2d88:	70 0d       	add	r23, r0
    2d8a:	11 24       	eor	r1, r1
    2d8c:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <SET_VALUE+0x4>
    2d90:	30 91 03 29 	lds	r19, 0x2903	; 0x802903 <SET_VALUE+0x5>
    2d94:	4a e0       	ldi	r20, 0x0A	; 10
    2d96:	42 9f       	mul	r20, r18
    2d98:	c0 01       	movw	r24, r0
    2d9a:	43 9f       	mul	r20, r19
    2d9c:	90 0d       	add	r25, r0
    2d9e:	11 24       	eor	r1, r1
    2da0:	68 0f       	add	r22, r24
    2da2:	79 1f       	adc	r23, r25
    2da4:	07 2e       	mov	r0, r23
    2da6:	00 0c       	add	r0, r0
    2da8:	88 0b       	sbc	r24, r24
    2daa:	99 0b       	sbc	r25, r25
    2dac:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2db0:	8a e0       	ldi	r24, 0x0A	; 10
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2db8:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2dbc:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:196
            digits2[3] = 10;
    2dbe:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    2dc2:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2dc6:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:197
            DOT2_1=1; 
    2dca:	49 97       	sbiw	r24, 0x19	; 25
    2dcc:	8c f5       	brge	.+98     	; 0x2e30 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc78>
    2dce:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:209
            digits2[3] = 21;   
            DOT2_1=0;                
          }   
          
          //i++;
          if(i<VALUE_FOR_BLINK)
    2dd2:	81 11       	cpse	r24, r1
    2dd4:	26 c0       	rjmp	.+76     	; 0x2e22 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc6a>
    2dd6:	88 e1       	ldi	r24, 0x18	; 24
    2dd8:	90 e0       	ldi	r25, 0x00	; 0
    2dda:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:211
          {
             if(!BLINK_STATS)    { digits1[0] = 24; digits1[1] = 24; DOT1_1=0;}
    2dde:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    2de2:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    2de6:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    2dea:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    2dee:	8b cf       	rjmp	.-234    	; 0x2d06 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb4e>
    2df0:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
    2df4:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
    2df8:	2a e0       	ldi	r18, 0x0A	; 10
    2dfa:	28 9f       	mul	r18, r24
    2dfc:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:203
//            SET_TEMP_DEG =(SET_VALUE[1] + (SET_VALUE[2] / 10.0)); 
          }
          else
          {
//            SET_TEMP_FAH =  SET_VALUE[22];   
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    2dfe:	29 9f       	mul	r18, r25
    2e00:	70 0d       	add	r23, r0
    2e02:	11 24       	eor	r1, r1
    2e04:	07 2e       	mov	r0, r23
    2e06:	00 0c       	add	r0, r0
    2e08:	88 0b       	sbc	r24, r24
    2e0a:	99 0b       	sbc	r25, r25
    2e0c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2e10:	85 e1       	ldi	r24, 0x15	; 21
    2e12:	90 e0       	ldi	r25, 0x00	; 0
    2e14:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2e18:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2e1c:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:204
            digits2[3] = 21;   
    2e20:	d0 cf       	rjmp	.-96     	; 0x2dc2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xc0a>
    2e22:	89 e1       	ldi	r24, 0x19	; 25
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:205
            DOT2_1=0;                
    2e2a:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
    2e2e:	6b cf       	rjmp	.-298    	; 0x2d06 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb4e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:212
          
          //i++;
          if(i<VALUE_FOR_BLINK)
          {
             if(!BLINK_STATS)    { digits1[0] = 24; digits1[1] = 24; DOT1_1=0;}
             else i=VALUE_FOR_BLINK;  
    2e30:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    2e34:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    2e38:	08 2e       	mov	r0, r24
    2e3a:	00 0c       	add	r0, r0
    2e3c:	99 0b       	sbc	r25, r25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:216
          }
          else 
          {
            DOT1_1=0;
    2e3e:	fc 01       	movw	r30, r24
    2e40:	ee 0f       	add	r30, r30
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:217
            led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT] *100) + SET_VALUE[ENTER_BUT+1]);
    2e42:	ff 1f       	adc	r31, r31
    2e44:	e2 50       	subi	r30, 0x02	; 2
    2e46:	f7 4d       	sbci	r31, 0xD7	; 215
    2e48:	20 81       	ld	r18, Z
    2e4a:	31 81       	ldd	r19, Z+1	; 0x01
    2e4c:	44 e6       	ldi	r20, 0x64	; 100
    2e4e:	42 9f       	mul	r20, r18
    2e50:	b0 01       	movw	r22, r0
    2e52:	43 9f       	mul	r20, r19
    2e54:	70 0d       	add	r23, r0
    2e56:	11 24       	eor	r1, r1
    2e58:	88 0f       	add	r24, r24
    2e5a:	99 1f       	adc	r25, r25
    2e5c:	fc 01       	movw	r30, r24
    2e5e:	e0 50       	subi	r30, 0x00	; 0
    2e60:	f7 4d       	sbci	r31, 0xD7	; 215
    2e62:	80 81       	ld	r24, Z
    2e64:	91 81       	ldd	r25, Z+1	; 0x01
    2e66:	68 0f       	add	r22, r24
    2e68:	79 1f       	adc	r23, r25
    2e6a:	07 2e       	mov	r0, r23
    2e6c:	00 0c       	add	r0, r0
    2e6e:	88 0b       	sbc	r24, r24
    2e70:	99 0b       	sbc	r25, r25
    2e72:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    2e76:	47 cf       	rjmp	.-370    	; 0x2d06 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xb4e>
    2e78:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    2e7c:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    2e80:	81 11       	cpse	r24, r1
    2e82:	7c c0       	rjmp	.+248    	; 0x2f7c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xdc4>
    2e84:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:222
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          break;
    case 4 :
          DOT1_1=0;
    2e88:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:224
//          SET_HOUR=SET_VALUE[3];
          if(!DEGREE_VALUE_SET)  
    2e8c:	24 e6       	ldi	r18, 0x64	; 100
    2e8e:	28 9f       	mul	r18, r24
    2e90:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:226
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[2]*10));
    2e92:	29 9f       	mul	r18, r25
    2e94:	70 0d       	add	r23, r0
    2e96:	11 24       	eor	r1, r1
    2e98:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <SET_VALUE+0x4>
    2e9c:	30 91 03 29 	lds	r19, 0x2903	; 0x802903 <SET_VALUE+0x5>
    2ea0:	4a e0       	ldi	r20, 0x0A	; 10
    2ea2:	42 9f       	mul	r20, r18
    2ea4:	c0 01       	movw	r24, r0
    2ea6:	43 9f       	mul	r20, r19
    2ea8:	90 0d       	add	r25, r0
    2eaa:	11 24       	eor	r1, r1
    2eac:	68 0f       	add	r22, r24
    2eae:	79 1f       	adc	r23, r25
    2eb0:	07 2e       	mov	r0, r23
    2eb2:	00 0c       	add	r0, r0
    2eb4:	88 0b       	sbc	r24, r24
    2eb6:	99 0b       	sbc	r25, r25
    2eb8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2ebc:	8a e0       	ldi	r24, 0x0A	; 10
    2ebe:	90 e0       	ldi	r25, 0x00	; 0
    2ec0:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2ec4:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2ec8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:227
            digits2[3] = 10;
    2eca:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    2ece:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <SET_VALUE+0x6>
    2ed2:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <SET_VALUE+0x7>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:228
            DOT2_1=1; 
    2ed6:	24 e6       	ldi	r18, 0x64	; 100
    2ed8:	28 9f       	mul	r18, r24
    2eda:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:236
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
            digits2[3] = 21;   
            DOT2_1=0;                
          }   
          led.BREAK_NUMBER1( (SET_VALUE[ENTER_BUT-1] *100) + SET_VALUE[ENTER_BUT] );
    2edc:	29 9f       	mul	r18, r25
    2ede:	70 0d       	add	r23, r0
    2ee0:	11 24       	eor	r1, r1
    2ee2:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <SET_VALUE+0x8>
    2ee6:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <SET_VALUE+0x9>
    2eea:	68 0f       	add	r22, r24
    2eec:	79 1f       	adc	r23, r25
    2eee:	07 2e       	mov	r0, r23
    2ef0:	00 0c       	add	r0, r0
    2ef2:	88 0b       	sbc	r24, r24
    2ef4:	99 0b       	sbc	r25, r25
    2ef6:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    2efa:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2efe:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    2f02:	49 97       	sbiw	r24, 0x19	; 25
    2f04:	74 f4       	brge	.+28     	; 0x2f22 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xd6a>
    2f06:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:237
          if(i<VALUE_FOR_BLINK)
    2f0a:	81 11       	cpse	r24, r1
    2f0c:	50 c0       	rjmp	.+160    	; 0x2fae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xdf6>
    2f0e:	88 e1       	ldi	r24, 0x18	; 24
    2f10:	90 e0       	ldi	r25, 0x00	; 0
    2f12:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:239
          {
             if(!BLINK_STATS)    { digits1[2] = 24; digits1[3] = 24;}
    2f16:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    2f1a:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    2f1e:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
    2f22:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    2f26:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    2f2a:	c3 97       	sbiw	r24, 0x33	; 51
    2f2c:	24 f0       	brlt	.+8      	; 0x2f36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xd7e>
    2f2e:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:242
             else i=VALUE_FOR_BLINK;         
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    2f32:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    2f36:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <REP1>
    2f3a:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <REP1+0x1>
    2f3e:	80 91 8e 28 	lds	r24, 0x288E	; 0x80288e <STIR_VALUE_SET>
    2f42:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:243
          REP1=0;               
    2f44:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <SET_VALUE+0xa>
    2f48:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <SET_VALUE+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:244
          SET_VALUE[5] = STIR_VALUE_SET;
    2f4c:	81 e0       	ldi	r24, 0x01	; 1
    2f4e:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <PUMP_FLAG>
    2f52:	20 91 04 29 	lds	r18, 0x2904	; 0x802904 <SET_VALUE+0x6>
    2f56:	30 91 05 29 	lds	r19, 0x2905	; 0x802905 <SET_VALUE+0x7>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:245
          PUMP_FLAG =1;                       
    2f5a:	4c e3       	ldi	r20, 0x3C	; 60
    2f5c:	42 9f       	mul	r20, r18
    2f5e:	c0 01       	movw	r24, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:246
          SET_MIN = (SET_VALUE[3]*60) + SET_VALUE[4];              
    2f60:	43 9f       	mul	r20, r19
    2f62:	90 0d       	add	r25, r0
    2f64:	11 24       	eor	r1, r1
    2f66:	20 91 06 29 	lds	r18, 0x2906	; 0x802906 <SET_VALUE+0x8>
    2f6a:	30 91 07 29 	lds	r19, 0x2907	; 0x802907 <SET_VALUE+0x9>
    2f6e:	82 0f       	add	r24, r18
    2f70:	93 1f       	adc	r25, r19
    2f72:	80 93 8c 28 	sts	0x288C, r24	; 0x80288c <SET_MIN>
    2f76:	90 93 8d 28 	sts	0x288D, r25	; 0x80288d <SET_MIN+0x1>
    2f7a:	3c c9       	rjmp	.-3464   	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>
    2f7c:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0x1f>
    2f80:	90 91 2b 29 	lds	r25, 0x292B	; 0x80292b <SET_LONG_VALUE+0x20>
    2f84:	2a e0       	ldi	r18, 0x0A	; 10
    2f86:	28 9f       	mul	r18, r24
    2f88:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:232
            digits2[3] = 10;
            DOT2_1=1; 
          }
          else
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    2f8a:	29 9f       	mul	r18, r25
    2f8c:	70 0d       	add	r23, r0
    2f8e:	11 24       	eor	r1, r1
    2f90:	07 2e       	mov	r0, r23
    2f92:	00 0c       	add	r0, r0
    2f94:	88 0b       	sbc	r24, r24
    2f96:	99 0b       	sbc	r25, r25
    2f98:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    2f9c:	85 e1       	ldi	r24, 0x15	; 21
    2f9e:	90 e0       	ldi	r25, 0x00	; 0
    2fa0:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    2fa4:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    2fa8:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:233
            digits2[3] = 21;   
    2fac:	90 cf       	rjmp	.-224    	; 0x2ece <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xd16>
    2fae:	89 e1       	ldi	r24, 0x19	; 25
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:234
            DOT2_1=0;                
    2fb6:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
    2fba:	b3 cf       	rjmp	.-154    	; 0x2f22 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xd6a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:240
          }   
          led.BREAK_NUMBER1( (SET_VALUE[ENTER_BUT-1] *100) + SET_VALUE[ENTER_BUT] );
          if(i<VALUE_FOR_BLINK)
          {
             if(!BLINK_STATS)    { digits1[2] = 24; digits1[3] = 24;}
             else i=VALUE_FOR_BLINK;         
    2fbc:	be 01       	movw	r22, r28
    2fbe:	dd 0f       	add	r29, r29
    2fc0:	88 0b       	sbc	r24, r24
    2fc2:	99 0b       	sbc	r25, r25
    2fc4:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    2fc8:	6b 01       	movw	r12, r22
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:264
          //if(pump_flag && select_probe_type);
          
          if(!FILL_BATH_ERROR_NOT_CLEAR)
          {
            
            if( (!DEGREE_VALUE_SET &&  SET_TEMP_DEG >= (TEMP_DEG + 10)) || (DEGREE_VALUE_SET && SET_TEMP_FAH>= (TEMP_FAH +15)) ) { FILL_BATH_ERROR_NOT_CLEAR=0; }
    2fca:	7c 01       	movw	r14, r24
    2fcc:	20 e0       	ldi	r18, 0x00	; 0
    2fce:	30 e0       	ldi	r19, 0x00	; 0
    2fd0:	40 e7       	ldi	r20, 0x70	; 112
    2fd2:	51 e4       	ldi	r21, 0x41	; 65
    2fd4:	60 91 bf 28 	lds	r22, 0x28BF	; 0x8028bf <TEMP_FAH>
    2fd8:	70 91 c0 28 	lds	r23, 0x28C0	; 0x8028c0 <TEMP_FAH+0x1>
    2fdc:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <TEMP_FAH+0x2>
    2fe0:	90 91 c2 28 	lds	r25, 0x28C2	; 0x8028c2 <TEMP_FAH+0x3>
    2fe4:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    2fe8:	9b 01       	movw	r18, r22
    2fea:	ac 01       	movw	r20, r24
    2fec:	c7 01       	movw	r24, r14
    2fee:	b6 01       	movw	r22, r12
    2ff0:	a2 c9       	rjmp	.-3260   	; 0x2336 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x17e>
    2ff2:	10 92 97 28 	sts	0x2897, r1	; 0x802897 <CHECK_RATE_OF_HEATING>
digitalWrite():
    2ff6:	61 e0       	ldi	r22, 0x01	; 1
    2ff8:	88 e1       	ldi	r24, 0x18	; 24
    2ffa:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2ffe:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:279
            FILL_BATH_ERROR_NOT_CLEAR=0;
//            Serial2.print("2");  Serial2.print("\t");Serial2.println(2);
          }
          else
          {
            CHECK_RATE_OF_HEATING=0;
    3002:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    3006:	a0 91 de 28 	lds	r26, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    300a:	b0 91 df 28 	lds	r27, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:281
            digitalWrite(HEATER, HIGH);
            TEMP_VALUE_INITIAL = TEMP_DEG_RAW;
    300e:	80 93 7d 28 	sts	0x287D, r24	; 0x80287d <TEMP_VALUE_INITIAL>
    3012:	90 93 7e 28 	sts	0x287E, r25	; 0x80287e <TEMP_VALUE_INITIAL+0x1>
    3016:	a0 93 7f 28 	sts	0x287F, r26	; 0x80287f <TEMP_VALUE_INITIAL+0x2>
    301a:	b0 93 80 28 	sts	0x2880, r27	; 0x802880 <TEMP_VALUE_INITIAL+0x3>
    301e:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    3022:	60 93 79 28 	sts	0x2879, r22	; 0x802879 <START_COUNT_VALUE>
    3026:	70 93 7a 28 	sts	0x287A, r23	; 0x80287a <START_COUNT_VALUE+0x1>
    302a:	80 93 7b 28 	sts	0x287B, r24	; 0x80287b <START_COUNT_VALUE+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:282
            START_COUNT_VALUE = millis();
    302e:	90 93 7c 28 	sts	0x287C, r25	; 0x80287c <START_COUNT_VALUE+0x3>
    3032:	9a c9       	rjmp	.-3276   	; 0x2368 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1b0>
    3034:	60 91 86 28 	lds	r22, 0x2886	; 0x802886 <SET_TEMP_FAH>
    3038:	70 91 87 28 	lds	r23, 0x2887	; 0x802887 <SET_TEMP_FAH+0x1>
    303c:	07 2e       	mov	r0, r23
    303e:	00 0c       	add	r0, r0
    3040:	88 0b       	sbc	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:293
               PID_SETPOINT_To_Show = SET_TEMP_DEG;  
               PID_SETPOINT = SET_TEMP_DEG;              
          }
          else                 
          {
              PID_SETPOINT_To_Show = SET_TEMP_FAH;  
    3042:	99 0b       	sbc	r25, r25
    3044:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    3048:	60 93 75 28 	sts	0x2875, r22	; 0x802875 <PID_SETPOINT_To_Show>
    304c:	70 93 76 28 	sts	0x2876, r23	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    3050:	80 93 77 28 	sts	0x2877, r24	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    3054:	90 93 78 28 	sts	0x2878, r25	; 0x802878 <PID_SETPOINT_To_Show+0x3>
    3058:	20 e0       	ldi	r18, 0x00	; 0
    305a:	30 e0       	ldi	r19, 0x00	; 0
    305c:	40 e0       	ldi	r20, 0x00	; 0
    305e:	52 e4       	ldi	r21, 0x42	; 66
    3060:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    3064:	26 e6       	ldi	r18, 0x66	; 102
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:294
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
    3066:	36 e6       	ldi	r19, 0x66	; 102
    3068:	46 ee       	ldi	r20, 0xE6	; 230
    306a:	5f e3       	ldi	r21, 0x3F	; 63
    306c:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    3070:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    3074:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    3078:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    307c:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
    3080:	8d c9       	rjmp	.-3302   	; 0x239c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1e4>
    3082:	40 91 56 28 	lds	r20, 0x2856	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME>
    3086:	50 91 57 28 	lds	r21, 0x2857	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    308a:	60 91 58 28 	lds	r22, 0x2858	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    308e:	70 91 59 28 	lds	r23, 0x2859	; 0x802859 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:352
                        COOLOING_RATE_COMP_VAL = 0.01;
                        TO_CHECK_REPETATION_WITHIN_TIME = millis(); 
                      }
                      else
                      {
                        if((CURRENT_COOLING_RATE_TIME - TO_CHECK_REPETATION_WITHIN_TIME ) < 90000)
    3092:	26 01       	movw	r4, r12
    3094:	37 01       	movw	r6, r14
    3096:	44 1a       	sub	r4, r20
    3098:	55 0a       	sbc	r5, r21
    309a:	66 0a       	sbc	r6, r22
    309c:	77 0a       	sbc	r7, r23
    309e:	b3 01       	movw	r22, r6
    30a0:	a2 01       	movw	r20, r4
    30a2:	40 39       	cpi	r20, 0x90	; 144
    30a4:	5f 45       	sbci	r21, 0x5F	; 95
    30a6:	61 40       	sbci	r22, 0x01	; 1
    30a8:	71 05       	cpc	r23, r1
    30aa:	30 f4       	brcc	.+12     	; 0x30b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf00>
    30ac:	01 96       	adiw	r24, 0x01	; 1
    30ae:	80 93 5a 28 	sts	0x285A, r24	; 0x80285a <COOLING_CYCLE_COUNT>
    30b2:	90 93 5b 28 	sts	0x285B, r25	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    30b6:	b7 ca       	rjmp	.-2706   	; 0x2626 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x46e>
    30b8:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <COOLING_CYCLE_COUNT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:353
                           COOLING_CYCLE_COUNT++;  
    30bc:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    30c0:	b2 ca       	rjmp	.-2716   	; 0x2626 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x46e>
    30c2:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <CAL_OF_10_MIN>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:355
                        else   
                          COOLING_CYCLE_COUNT = 0;                           
    30c6:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <CAL_OF_10_MIN+0x1>
    30ca:	a0 91 6a 28 	lds	r26, 0x286A	; 0x80286a <CAL_OF_10_MIN+0x2>
    30ce:	b0 91 6b 28 	lds	r27, 0x286B	; 0x80286b <CAL_OF_10_MIN+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:359
                      }
                      
                    }
                    else if(( CURRENT_COOLING_RATE_TIME - CAL_OF_10_MIN )> 420000)
    30d2:	26 01       	movw	r4, r12
    30d4:	37 01       	movw	r6, r14
    30d6:	48 1a       	sub	r4, r24
    30d8:	59 0a       	sbc	r5, r25
    30da:	6a 0a       	sbc	r6, r26
    30dc:	7b 0a       	sbc	r7, r27
    30de:	d3 01       	movw	r26, r6
    30e0:	c2 01       	movw	r24, r4
    30e2:	81 3a       	cpi	r24, 0xA1	; 161
    30e4:	98 46       	sbci	r25, 0x68	; 104
    30e6:	a6 40       	sbci	r26, 0x06	; 6
    30e8:	b1 05       	cpc	r27, r1
    30ea:	08 f4       	brcc	.+2      	; 0x30ee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf36>
    30ec:	9c ca       	rjmp	.-2760   	; 0x2626 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x46e>
    30ee:	81 e0       	ldi	r24, 0x01	; 1
    30f0:	80 93 81 28 	sts	0x2881, r24	; 0x802881 <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    30f4:	60 e0       	ldi	r22, 0x00	; 0
    30f6:	85 e1       	ldi	r24, 0x15	; 21
    30f8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:361
                    {
                      FILL_BATH_ERROR_NOT_CLEAR=1;
    30fc:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ENTER_BUT>
    3100:	10 92 8c 28 	sts	0x288C, r1	; 0x80288c <SET_MIN>
    3104:	10 92 8d 28 	sts	0x288D, r1	; 0x80288d <SET_MIN+0x1>
    3108:	8e ca       	rjmp	.-2788   	; 0x2626 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x46e>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:364
                      STOP_PROCESS=1;
                      digitalWrite(BUZZER,LOW);
                      ENTER_BUT=0;
    310a:	20 e0       	ldi	r18, 0x00	; 0
    310c:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:365
                      SET_MIN =0;
    310e:	40 e8       	ldi	r20, 0x80	; 128
    3110:	5f e3       	ldi	r21, 0x3F	; 63
    3112:	c7 01       	movw	r24, r14
    3114:	b6 01       	movw	r22, r12
    3116:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:372
                    if(COOLING_CYCLE_COUNT==2) RATE_OF_HEATING=0;  
                    PREVIOUS_COOLING_RATE_TIME = CURRENT_COOLING_RATE_TIME;                 
                    PREVIOUS_TEMP_COOLING_RATE = CURRENT_TEMP_COOLING_RATE;
                  }    
               }
               else if(RATE_OF_HEATING < 1 && CHECK_RATE_OF_HEATING)    
    311a:	87 ff       	sbrs	r24, 7
    311c:	a2 ca       	rjmp	.-2748   	; 0x2662 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4aa>
    311e:	80 91 97 28 	lds	r24, 0x2897	; 0x802897 <CHECK_RATE_OF_HEATING>
    3122:	88 23       	and	r24, r24
    3124:	09 f4       	brne	.+2      	; 0x3128 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf70>
    3126:	9d ca       	rjmp	.-2758   	; 0x2662 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4aa>
    3128:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <EXECUTE_PID_LOOP>
    312c:	81 11       	cpse	r24, r1
    312e:	07 c0       	rjmp	.+14     	; 0x313e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xf86>
PID_Start():
    3130:	83 ec       	ldi	r24, 0xC3	; 195
    3132:	9a e2       	ldi	r25, 0x2A	; 42
    3134:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:375
               {
                
                  if(!EXECUTE_PID_LOOP) { Pid.PID_Start(); EXECUTE_PID_LOOP=1;}
    3138:	81 e0       	ldi	r24, 0x01	; 1
    313a:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <EXECUTE_PID_LOOP>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Pid.cpp:93
  }
}

void Lclass :: PID_Start()
{
   PID_EXE.start(); 
    313e:	0e 94 2f 0a 	call	0x145e	; 0x145e <Lclass::PID_callingg() [clone .constprop.39]>
    3142:	8f ca       	rjmp	.-2786   	; 0x2662 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4aa>
    3144:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:375
    3148:	81 11       	cpse	r24, r1
    314a:	0c c0       	rjmp	.+24     	; 0x3164 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfac>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:376
                  Pid.PID_callingg(); 
    314c:	a5 01       	movw	r20, r10
    314e:	94 01       	movw	r18, r8
    3150:	c7 01       	movw	r24, r14
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:384
               } 
                            
               if(!TIME_SOCK_OR_TOTAL)                     COUNTDOWN_START=1; 
               else
               {
                 if(!DEGREE_VALUE_SET)  
    3152:	b6 01       	movw	r22, r12
    3154:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    3158:	18 16       	cp	r1, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:386
                 {
                     if( TEMP_DEG >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
    315a:	0c f0       	brlt	.+2      	; 0x315e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfa6>
    315c:	96 ca       	rjmp	.-2772   	; 0x268a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4d2>
    315e:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <COUNTDOWN_START>
    3162:	96 ca       	rjmp	.-2772   	; 0x2690 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4d8>
    3164:	a7 01       	movw	r20, r14
    3166:	96 01       	movw	r18, r12
    3168:	60 91 bf 28 	lds	r22, 0x28BF	; 0x8028bf <TEMP_FAH>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:387
                     else                                          COUNTDOWN_START=0; 
    316c:	70 91 c0 28 	lds	r23, 0x28C0	; 0x8028c0 <TEMP_FAH+0x1>
    3170:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <TEMP_FAH+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:391
                 }
                 else  
                 {
                     if( TEMP_FAH >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
    3174:	90 91 c2 28 	lds	r25, 0x28C2	; 0x8028c2 <TEMP_FAH+0x3>
    3178:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    317c:	87 ff       	sbrs	r24, 7
    317e:	85 ca       	rjmp	.-2806   	; 0x268a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x4d2>
    3180:	ee cf       	rjmp	.-36     	; 0x315e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xfa6>
    3182:	80 e8       	ldi	r24, 0x80	; 128
    3184:	9a e1       	ldi	r25, 0x1A	; 26
    3186:	a6 e0       	ldi	r26, 0x06	; 6
    3188:	b0 e0       	ldi	r27, 0x00	; 0
    318a:	96 ca       	rjmp	.-2772   	; 0x26b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x500>
    318c:	80 e0       	ldi	r24, 0x00	; 0
    318e:	95 e3       	ldi	r25, 0x35	; 53
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    3190:	ac e0       	ldi	r26, 0x0C	; 12
    3192:	b0 e0       	ldi	r27, 0x00	; 0
    3194:	a4 ca       	rjmp	.-2744   	; 0x26de <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x526>
    3196:	80 e4       	ldi	r24, 0x40	; 64
    3198:	92 e4       	ldi	r25, 0x42	; 66
    319a:	af e0       	ldi	r26, 0x0F	; 15
    319c:	b0 e0       	ldi	r27, 0x00	; 0
    319e:	4a cb       	rjmp	.-2412   	; 0x2834 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x67c>
    31a0:	80 e8       	ldi	r24, 0x80	; 128
    31a2:	94 e8       	ldi	r25, 0x84	; 132
    31a4:	ae e1       	ldi	r26, 0x1E	; 30
    31a6:	b0 e0       	ldi	r27, 0x00	; 0
    31a8:	58 cb       	rjmp	.-2384   	; 0x285a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x6a2>
    31aa:	80 91 f9 28 	lds	r24, 0x28F9	; 0x8028f9 <PUMP_FLAG>
    31ae:	88 23       	and	r24, r24
    31b0:	09 f4       	brne	.+2      	; 0x31b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0xffc>
    31b2:	4d c0       	rjmp	.+154    	; 0x324e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1096>
    31b4:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:437
                      REP++;
                 }
               } 
               else
               {
                 if(PUMP_FLAG && select_product_type)
    31b8:	88 23       	and	r24, r24
    31ba:	09 f4       	brne	.+2      	; 0x31be <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1006>
    31bc:	48 c0       	rjmp	.+144    	; 0x324e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1096>
    31be:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    31c2:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    31c6:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
digitalWrite():
    31ca:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:440
                  {
                    DOT1_1=0;
                    DOT2_1=0; 
    31cc:	8c e0       	ldi	r24, 0x0C	; 12
    31ce:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:441
                    DOT1_0=0;
    31d2:	8c e0       	ldi	r24, 0x0C	; 12
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:442
                    ALL_LED_OFF();    
    31d4:	90 e0       	ldi	r25, 0x00	; 0
    31d6:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    31da:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    31de:	80 e1       	ldi	r24, 0x10	; 16
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:194
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    31e6:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    31ea:	89 e1       	ldi	r24, 0x19	; 25
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:195
    digits2[1] = DIG2_2;
    31ec:	90 e0       	ldi	r25, 0x00	; 0
    31ee:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    31f2:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    31f6:	81 e1       	ldi	r24, 0x11	; 17
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:196
    digits2[2] = DIG2_3;
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    31fe:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    3202:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <SET_VALUE+0xa>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:197
    digits2[3] = DIG2_4;
    3206:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    320a:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <digits1>
    320e:	10 92 ed 28 	sts	0x28ED, r1	; 0x8028ed <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:445
                    digitalWrite(TIMER_LED1, LOW);      
                    led.DISPLAY_DIGIT2(12, 16, 25, 17) ;  
                    if(!SET_VALUE[5])     led.DISPLAY_DIGIT1(0, 21, 21, 24);
    3212:	89 2b       	or	r24, r25
    3214:	79 f4       	brne	.+30     	; 0x3234 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x107c>
DISPLAY_DIGIT1():
    3216:	c0 93 ee 28 	sts	0x28EE, r28	; 0x8028ee <digits1+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:186

}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    321a:	d0 93 ef 28 	sts	0x28EF, r29	; 0x8028ef <digits1+0x3>
    321e:	c0 93 f0 28 	sts	0x28F0, r28	; 0x8028f0 <digits1+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:445
    3222:	d0 93 f1 28 	sts	0x28F1, r29	; 0x8028f1 <digits1+0x5>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:187
    digits1[1] = DIG1_2;
    3226:	88 e1       	ldi	r24, 0x18	; 24
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:188
    digits1[2] = DIG1_3;
    322e:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
    3232:	c1 c8       	rjmp	.-3710   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:189
    digits1[3] = DIG1_4;
    3234:	84 e1       	ldi	r24, 0x14	; 20
    3236:	90 e0       	ldi	r25, 0x00	; 0
    3238:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    323c:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    3240:	88 e1       	ldi	r24, 0x18	; 24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:187
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    digits1[1] = DIG1_2;
    3242:	90 e0       	ldi	r25, 0x00	; 0
    3244:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    3248:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    324c:	ee cf       	rjmp	.-36     	; 0x322a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1072>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:188
    digits1[2] = DIG1_3;
    324e:	80 91 4c 28 	lds	r24, 0x284C	; 0x80284c <TIMER_LED_BLINK>
    3252:	90 91 4d 28 	lds	r25, 0x284D	; 0x80284d <TIMER_LED_BLINK+0x1>
    3256:	9c 01       	movw	r18, r24
    3258:	2f 5f       	subi	r18, 0xFF	; 255
    325a:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:450
                    else                  led.DISPLAY_DIGIT1(0, 20, 24, 24);
                  }
                 else
                 {
                   TIMER_LED_BLINK++;
    325c:	20 93 4c 28 	sts	0x284C, r18	; 0x80284c <TIMER_LED_BLINK>
    3260:	30 93 4d 28 	sts	0x284D, r19	; 0x80284d <TIMER_LED_BLINK+0x1>
digitalWrite():
    3264:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    3266:	28 39       	cpi	r18, 0x98	; 152
    3268:	38 40       	sbci	r19, 0x08	; 8
    326a:	38 f0       	brcs	.+14     	; 0x327a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x10c2>
    326c:	87 59       	subi	r24, 0x97	; 151
    326e:	98 40       	sbci	r25, 0x08	; 8
    3270:	88 39       	cpi	r24, 0x98	; 152
    3272:	98 40       	sbci	r25, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:451
                   if(TIMER_LED_BLINK >=0 && TIMER_LED_BLINK<2200)                    digitalWrite(TIMER_LED1, HIGH); 
    3274:	08 f0       	brcs	.+2      	; 0x3278 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x10c0>
    3276:	54 c0       	rjmp	.+168    	; 0x3320 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1168>
digitalWrite():
    3278:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:452
                   else  if(TIMER_LED_BLINK>=2200 && TIMER_LED_BLINK<4400)            digitalWrite(TIMER_LED1, LOW); 
    327a:	8c e0       	ldi	r24, 0x0C	; 12
    327c:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3280:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <IN_ERROR>
    3284:	88 23       	and	r24, r24
    3286:	71 f0       	breq	.+28     	; 0x32a4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x10ec>
stop():
    3288:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK1>
    328c:	10 92 70 2b 	sts	0x2B70, r1	; 0x802b70 <BUZZ_TICK1+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:455
                   else                                                                TIMER_LED_BLINK=0;
                      
                   if(IN_ERROR)  Tick.BUZZ_TICK_STOP();
    3290:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0xc>
    3294:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    3298:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    329c:	10 92 74 2b 	sts	0x2B74, r1	; 0x802b74 <BUZZ_TICK1+0xf>
    32a0:	10 92 75 2b 	sts	0x2B75, r1	; 0x802b75 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    32a4:	84 e6       	ldi	r24, 0x64	; 100
    32a6:	8c 9d       	mul	r24, r12
    32a8:	b0 01       	movw	r22, r0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    32aa:	8d 9d       	mul	r24, r13
    32ac:	70 0d       	add	r23, r0
    32ae:	11 24       	eor	r1, r1
    32b0:	6e 0d       	add	r22, r14
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:457
                                     
                   led.BREAK_NUMBER1( (SET_HOUR *100) + REMAIN_MIN );             
    32b2:	7f 1d       	adc	r23, r15
    32b4:	07 2e       	mov	r0, r23
    32b6:	00 0c       	add	r0, r0
    32b8:	88 0b       	sbc	r24, r24
    32ba:	99 0b       	sbc	r25, r25
    32bc:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    32c0:	8e ed       	ldi	r24, 0xDE	; 222
    32c2:	9a e2       	ldi	r25, 0x2A	; 42
    32c4:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
    32c8:	80 91 74 28 	lds	r24, 0x2874	; 0x802874 <Alternate_Display_Flag>
    32cc:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:459
                   //digitalWrite(TIMER_LED1, HIGH); //Siddhesh 08082023
                   Alter_Disp.update();
    32ce:	e1 f1       	breq	.+120    	; 0x3348 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1190>
digitalWrite():
    32d0:	61 e0       	ldi	r22, 0x01	; 1
    32d2:	8c e1       	ldi	r24, 0x1C	; 28
    32d4:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:461
  
                   if( Alternate_Display_Flag) //                      DISP_INC>0 && DISP_INC<=12000)
    32d8:	60 e0       	ldi	r22, 0x00	; 0
    32da:	8d e1       	ldi	r24, 0x1D	; 29
    32dc:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    32e0:	60 91 75 28 	lds	r22, 0x2875	; 0x802875 <PID_SETPOINT_To_Show>
    32e4:	70 91 76 28 	lds	r23, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    32e8:	80 91 77 28 	lds	r24, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    32ec:	90 91 78 28 	lds	r25, 0x2878	; 0x802878 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    32f0:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    32f4:	21 11       	cpse	r18, r1
    32f6:	19 c0       	rjmp	.+50     	; 0x332a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1172>
    32f8:	20 e0       	ldi	r18, 0x00	; 0
    32fa:	30 e0       	ldi	r19, 0x00	; 0
    32fc:	48 ec       	ldi	r20, 0xC8	; 200
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:465
                     {
                        digitalWrite(CURRENT_PARA_LED, HIGH); 
                        digitalWrite(SET_PARA_LED, LOW);
                        if(!DEGREE_VALUE_SET)  
    32fe:	52 e4       	ldi	r21, 0x42	; 66
    3300:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3304:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:467
                        {
                          led.BREAK_NUMBER2(PID_SETPOINT_To_Show*100);  //(SET_TEMP_DEG*100);
    3308:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    330c:	8a e0       	ldi	r24, 0x0A	; 10
    330e:	90 e0       	ldi	r25, 0x00	; 0
    3310:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    3314:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    3318:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:468
                          digits2[3] = 10;
    331a:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    331e:	4b c8       	rjmp	.-3946   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
    3320:	10 92 4c 28 	sts	0x284C, r1	; 0x80284c <TIMER_LED_BLINK>
    3324:	10 92 4d 28 	sts	0x284D, r1	; 0x80284d <TIMER_LED_BLINK+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:469
                          DOT2_1=1;
    3328:	ab cf       	rjmp	.-170    	; 0x3280 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x10c8>
    332a:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:453
                 else
                 {
                   TIMER_LED_BLINK++;
                   if(TIMER_LED_BLINK >=0 && TIMER_LED_BLINK<2200)                    digitalWrite(TIMER_LED1, HIGH); 
                   else  if(TIMER_LED_BLINK>=2200 && TIMER_LED_BLINK<4400)            digitalWrite(TIMER_LED1, LOW); 
                   else                                                                TIMER_LED_BLINK=0;
    332c:	30 e0       	ldi	r19, 0x00	; 0
    332e:	40 e2       	ldi	r20, 0x20	; 32
    3330:	51 e4       	ldi	r21, 0x41	; 65
    3332:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:473
                          digits2[3] = 10;
                          DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(PID_SETPOINT_To_Show*10);
    3336:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    333a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:490
                          digits2[3] = 10;
    //                      DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(TEMP_FAH*10);
    333e:	c0 93 ea 28 	sts	0x28EA, r28	; 0x8028ea <digits2+0x6>
    3342:	d0 93 eb 28 	sts	0x28EB, r29	; 0x8028eb <digits2+0x7>
    3346:	37 c8       	rjmp	.-3986   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
digitalWrite():
    3348:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:491
                          digits2[3] = 21;            
    334a:	8c e1       	ldi	r24, 0x1C	; 28
    334c:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    3350:	61 e0       	ldi	r22, 0x01	; 1
    3352:	8d e1       	ldi	r24, 0x1D	; 29
    3354:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3358:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    335c:	81 11       	cpse	r24, r1
    335e:	37 c0       	rjmp	.+110    	; 0x33ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1216>
    3360:	c0 90 e0 28 	lds	r12, 0x28E0	; 0x8028e0 <TEMP_DEG>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:481
                     }
                     else   //if(DISP_INC>12000 && DISP_INC<=24000)
                     {
                        digitalWrite(CURRENT_PARA_LED, LOW);
                        digitalWrite(SET_PARA_LED, HIGH);
                        if(!DEGREE_VALUE_SET)  
    3364:	d0 90 e1 28 	lds	r13, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    3368:	e0 90 e2 28 	lds	r14, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:483
                        {
                          if(TEMP_DEG>99.9) { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0;}    //TEMP_DEG_RAW
    336c:	f0 90 e3 28 	lds	r15, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    3370:	2d ec       	ldi	r18, 0xCD	; 205
    3372:	3c ec       	ldi	r19, 0xCC	; 204
    3374:	47 ec       	ldi	r20, 0xC7	; 199
    3376:	52 e4       	ldi	r21, 0x42	; 66
    3378:	c7 01       	movw	r24, r14
    337a:	b6 01       	movw	r22, r12
    337c:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    3380:	18 16       	cp	r1, r24
    3382:	ac f4       	brge	.+42     	; 0x33ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x11f6>
    3384:	20 e0       	ldi	r18, 0x00	; 0
    3386:	30 e0       	ldi	r19, 0x00	; 0
    3388:	40 e2       	ldi	r20, 0x20	; 32
    338a:	51 e4       	ldi	r21, 0x41	; 65
    338c:	c7 01       	movw	r24, r14
    338e:	b6 01       	movw	r22, r12
    3390:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3394:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3398:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    339c:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    33a0:	8a e0       	ldi	r24, 0x0A	; 10
    33a2:	90 e0       	ldi	r25, 0x00	; 0
    33a4:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    33a8:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:485
                          else              { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1;}
                          digits2[3] = 10;
    33ac:	04 c8       	rjmp	.-4088   	; 0x23b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1fe>
    33ae:	20 e0       	ldi	r18, 0x00	; 0
    33b0:	30 e0       	ldi	r19, 0x00	; 0
    33b2:	48 ec       	ldi	r20, 0xC8	; 200
    33b4:	52 e4       	ldi	r21, 0x42	; 66
    33b6:	c7 01       	movw	r24, r14
    33b8:	b6 01       	movw	r22, r12
    33ba:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:484
                        digitalWrite(CURRENT_PARA_LED, LOW);
                        digitalWrite(SET_PARA_LED, HIGH);
                        if(!DEGREE_VALUE_SET)  
                        {
                          if(TEMP_DEG>99.9) { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0;}    //TEMP_DEG_RAW
                          else              { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1;}
    33be:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    33c2:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    33c6:	81 e0       	ldi	r24, 0x01	; 1
    33c8:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    33cc:	e9 cf       	rjmp	.-46     	; 0x33a0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x11e8>
    33ce:	20 e0       	ldi	r18, 0x00	; 0
    33d0:	30 e0       	ldi	r19, 0x00	; 0
    33d2:	40 e2       	ldi	r20, 0x20	; 32
    33d4:	51 e4       	ldi	r21, 0x41	; 65
    33d6:	60 91 bf 28 	lds	r22, 0x28BF	; 0x8028bf <TEMP_FAH>
    33da:	70 91 c0 28 	lds	r23, 0x28C0	; 0x8028c0 <TEMP_FAH+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:490
                          digits2[3] = 10;
    //                      DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(TEMP_FAH*10);
    33de:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <TEMP_FAH+0x2>
    33e2:	90 91 c2 28 	lds	r25, 0x28C2	; 0x8028c2 <TEMP_FAH+0x3>
    33e6:	a5 cf       	rjmp	.-182    	; 0x3332 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x117a>
    33e8:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
LED_On_Call():
    33ec:	84 e1       	ldi	r24, 0x14	; 20
    33ee:	9b e2       	ldi	r25, 0x2B	; 43
    33f0:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    33f4:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:497
                        }
                     }
                    } 
                  }
             }  
             ALL_LED_OFF();    
    33f8:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Tick.cpp:46
}

void Tclass :: LED_On_Call()
{
//  Blink_LED_ON.start(); 
  Blink_LED_OFF.start(); 
    33fa:	87 e8       	ldi	r24, 0x87	; 135
    33fc:	90 e0       	ldi	r25, 0x00	; 0
    33fe:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
SET_SHORT_PRESS_FUNCTION():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:499
             Tick.LED_On_Call();   
             Process_Interrupt_flag=0;            
    3402:	60 91 48 28 	lds	r22, 0x2848	; 0x802848 <actualRunMin>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:53
    3406:	70 91 49 28 	lds	r23, 0x2849	; 0x802849 <actualRunMin+0x1>
    340a:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <actualRunMin+0x2>
    340e:	90 91 4b 28 	lds	r25, 0x284B	; 0x80284b <actualRunMin+0x3>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:502
             Eeprom.Process_Time_Set_On_Eeprom();
              
             actualRunHours = (actualRunMin/60);
    3412:	2c e3       	ldi	r18, 0x3C	; 60
    3414:	30 e0       	ldi	r19, 0x00	; 0
    3416:	40 e0       	ldi	r20, 0x00	; 0
    3418:	50 e0       	ldi	r21, 0x00	; 0
    341a:	0e 94 3a 37 	call	0x6e74	; 0x6e74 <__udivmodsi4>
    341e:	69 01       	movw	r12, r18
    3420:	20 93 46 28 	sts	0x2846, r18	; 0x802846 <actualRunHours>
    3424:	30 93 47 28 	sts	0x2847, r19	; 0x802847 <actualRunHours+0x1>
    3428:	64 e4       	ldi	r22, 0x44	; 68
    342a:	78 e2       	ldi	r23, 0x28	; 40
    342c:	88 e9       	ldi	r24, 0x98	; 152
    342e:	90 e0       	ldi	r25, 0x00	; 0
    3430:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    3434:	20 91 44 28 	lds	r18, 0x2844	; 0x802844 <processLog>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:503
             EEPROM.get(152,processLog );
    3438:	30 91 45 28 	lds	r19, 0x2845	; 0x802845 <processLog+0x1>
    343c:	2c 0d       	add	r18, r12
    343e:	3d 1d       	adc	r19, r13
    3440:	20 93 44 28 	sts	0x2844, r18	; 0x802844 <processLog>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:504
             processLog = processLog + actualRunHours ; //Hours;
    3444:	30 93 45 28 	sts	0x2845, r19	; 0x802845 <processLog+0x1>
    3448:	2f 30       	cpi	r18, 0x0F	; 15
    344a:	37 42       	sbci	r19, 0x27	; 39
    344c:	68 f0       	brcs	.+26     	; 0x3468 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x12b0>
    344e:	80 91 42 28 	lds	r24, 0x2842	; 0x802842 <processLogNumberOfTimes>
    3452:	90 91 43 28 	lds	r25, 0x2843	; 0x802843 <processLogNumberOfTimes+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:505
             if(processLog >= 9999) 
    3456:	01 96       	adiw	r24, 0x01	; 1
    3458:	80 93 42 28 	sts	0x2842, r24	; 0x802842 <processLogNumberOfTimes>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:507
             {
              processLogNumberOfTimes = processLogNumberOfTimes+1;
    345c:	90 93 43 28 	sts	0x2843, r25	; 0x802843 <processLogNumberOfTimes+0x1>
    3460:	10 92 44 28 	sts	0x2844, r1	; 0x802844 <processLog>
    3464:	10 92 45 28 	sts	0x2845, r1	; 0x802845 <processLog+0x1>
    3468:	64 e4       	ldi	r22, 0x44	; 68
    346a:	78 e2       	ldi	r23, 0x28	; 40
    346c:	88 e9       	ldi	r24, 0x98	; 152
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:508
              processLog =0;        
    346e:	90 e0       	ldi	r25, 0x00	; 0
    3470:	0e 94 b7 10 	call	0x216e	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    3474:	62 e4       	ldi	r22, 0x42	; 66
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:510
             }      
              EEPROM.put(152,processLog );
    3476:	78 e2       	ldi	r23, 0x28	; 40
    3478:	8a e9       	ldi	r24, 0x9A	; 154
    347a:	90 e0       	ldi	r25, 0x00	; 0
    347c:	0e 94 b7 10 	call	0x216e	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    3480:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <actualRunHours>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:511
              EEPROM.put(154, processLogNumberOfTimes);
    3484:	10 92 47 28 	sts	0x2847, r1	; 0x802847 <actualRunHours+0x1>
    3488:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <actualRunMin>
    348c:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <actualRunMin+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:513
              
             actualRunHours = 0;
    3490:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <actualRunMin+0x2>
    3494:	10 92 4b 28 	sts	0x284B, r1	; 0x80284b <actualRunMin+0x3>
stop():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:514
             actualRunMin    =0;
    3498:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <Alter_Disp>
    349c:	10 92 e9 2a 	sts	0x2AE9, r1	; 0x802ae9 <Alter_Disp+0xb>
    34a0:	10 92 ea 2a 	sts	0x2AEA, r1	; 0x802aea <Alter_Disp+0xc>
    34a4:	10 92 eb 2a 	sts	0x2AEB, r1	; 0x802aeb <Alter_Disp+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    34a8:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <Alter_Disp+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    34ac:	10 92 ed 2a 	sts	0x2AED, r1	; 0x802aed <Alter_Disp+0xf>
    34b0:	10 92 ee 2a 	sts	0x2AEE, r1	; 0x802aee <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    34b4:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <Blinking_Freq>
    34b8:	83 30       	cpi	r24, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    34ba:	b8 f4       	brcc	.+46     	; 0x34ea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x1332>
    34bc:	84 ef       	ldi	r24, 0xF4	; 244
    34be:	91 e0       	ldi	r25, 0x01	; 1
    34c0:	0e 94 b3 0b 	call	0x1766	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
stop():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:517
             
              Alter_Disp.stop();
              while(Blinking_Freq<3)
    34c4:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE>
    34c8:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <PID_EXE+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:519
              {  
                 Tick.BUZZ_INTERVAL(500);  
    34cc:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <PID_EXE+0xc>
    34d0:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <PID_EXE+0xd>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    34d4:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <PID_EXE+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    34d8:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <PID_EXE+0xf>
    34dc:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <PID_EXE+0x10>
DISP_UPDATE():
    34e0:	8b e9       	ldi	r24, 0x9B	; 155
    34e2:	9b e2       	ldi	r25, 0x2B	; 43
    34e4:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    34e8:	e5 cf       	rjmp	.-54     	; 0x34b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x12fc>
SET_SHORT_PRESS_FUNCTION():
    34ea:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ENTER_BUT>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/led.cpp:105
  
}

void Eclass :: DISP_UPDATE()
{
  DISP.update();
    34ee:	0c 94 fa 10 	jmp	0x21f4	; 0x21f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]+0x3c>

000034f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    34f2:	af 92       	push	r10
    34f4:	bf 92       	push	r11
    34f6:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Procss.cpp:523
                 Pid.PID_Stop();
                 led.DISP_UPDATE();      
              }             
              ENTER_BUT=0;                    
    34f8:	df 92       	push	r13
    34fa:	ef 92       	push	r14
    34fc:	ff 92       	push	r15
    34fe:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    3500:	1f 93       	push	r17
    3502:	cf 93       	push	r28
    3504:	df 93       	push	r29
    3506:	00 d0       	rcall	.+0      	; 0x3508 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x16>
    3508:	cd b7       	in	r28, 0x3d	; 61
    350a:	de b7       	in	r29, 0x3e	; 62
    350c:	8b 01       	movw	r16, r22
    350e:	6b 01       	movw	r12, r22
    3510:	24 e0       	ldi	r18, 0x04	; 4
    3512:	c2 0e       	add	r12, r18
    3514:	d1 1c       	adc	r13, r1
    3516:	7b 01       	movw	r14, r22
    3518:	5c 01       	movw	r10, r24
    351a:	a6 1a       	sub	r10, r22
    351c:	b7 0a       	sbc	r11, r23
    351e:	c5 01       	movw	r24, r10
    3520:	8e 0d       	add	r24, r14
    3522:	9f 1d       	adc	r25, r15
    3524:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    3526:	9a 83       	std	Y+2, r25	; 0x02
    3528:	f7 01       	movw	r30, r14
    352a:	61 91       	ld	r22, Z+
    352c:	7f 01       	movw	r14, r30
    352e:	ce 01       	movw	r24, r28
    3530:	01 96       	adiw	r24, 0x01	; 1
    3532:	0e 94 7f 10 	call	0x20fe	; 0x20fe <EERef::update(unsigned char)>
    3536:	ec 14       	cp	r14, r12
    3538:	fd 04       	cpc	r15, r13
    353a:	89 f7       	brne	.-30     	; 0x351e <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x2c>
    353c:	c8 01       	movw	r24, r16
    353e:	0f 90       	pop	r0
    3540:	0f 90       	pop	r0
    3542:	df 91       	pop	r29
    3544:	cf 91       	pop	r28
    3546:	1f 91       	pop	r17
    3548:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    354a:	ff 90       	pop	r15
    354c:	ef 90       	pop	r14
    354e:	df 90       	pop	r13
    3550:	cf 90       	pop	r12
    3552:	bf 90       	pop	r11
    3554:	af 90       	pop	r10
    3556:	08 95       	ret

00003558 <MODE_CLICK()>:
MODE_CLICK():
    3558:	2f 92       	push	r2
    355a:	3f 92       	push	r3
    355c:	4f 92       	push	r4
    355e:	5f 92       	push	r5
    3560:	6f 92       	push	r6
    3562:	7f 92       	push	r7
    3564:	8f 92       	push	r8
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:112
     REP++;
    }
}

void MODE_CLICK()
{
    3566:	9f 92       	push	r9
    3568:	af 92       	push	r10
    356a:	bf 92       	push	r11
    356c:	cf 92       	push	r12
    356e:	df 92       	push	r13
    3570:	ef 92       	push	r14
    3572:	ff 92       	push	r15
    3574:	0f 93       	push	r16
    3576:	1f 93       	push	r17
    3578:	cf 93       	push	r28
    357a:	df 93       	push	r29
    357c:	00 d0       	rcall	.+0      	; 0x357e <MODE_CLICK()+0x26>
    357e:	1f 92       	push	r1
    3580:	cd b7       	in	r28, 0x3d	; 61
    3582:	de b7       	in	r29, 0x3e	; 62
    3584:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <BLINK_STATS>
    3588:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
    358c:	81 11       	cpse	r24, r1
    358e:	6c c0       	rjmp	.+216    	; 0x3668 <MODE_CLICK()+0x110>
    3590:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:113
 BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    3594:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:114
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    3598:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    359c:	84 30       	cpi	r24, 0x04	; 4
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:116
  {
    i = 0;
    359e:	31 f4       	brne	.+12     	; 0x35ac <MODE_CLICK()+0x54>
    35a0:	20 91 8c 28 	lds	r18, 0x288C	; 0x80288c <SET_MIN>
    35a4:	30 91 8d 28 	lds	r19, 0x288D	; 0x80288d <SET_MIN+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:122
//    if(!ENTER_BUT && !DEGREE_VALUE_SET)                               //-----------------------at home page and selection of parameter in degree
//    {    
//       int CONV3 = (TEMP_DEG * 10);
//       MIN_SET_TEMP =((TEMP_DEG + ((CONV3 % 10) / 10.0)) +10); //7    //-----------------------Level sensing start minimu limit of temp
//    }         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    35a8:	23 2b       	or	r18, r19
    35aa:	51 f0       	breq	.+20     	; 0x35c0 <MODE_CLICK()+0x68>
    35ac:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    35b0:	99 23       	and	r25, r25
    35b2:	09 f4       	brne	.+2      	; 0x35b6 <MODE_CLICK()+0x5e>
    35b4:	57 c0       	rjmp	.+174    	; 0x3664 <MODE_CLICK()+0x10c>
    35b6:	81 11       	cpse	r24, r1
    35b8:	55 c0       	rjmp	.+170    	; 0x3664 <MODE_CLICK()+0x10c>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:123
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    35ba:	82 e0       	ldi	r24, 0x02	; 2
    35bc:	80 93 0a 29 	sts	0x290A, r24	; 0x80290a <ENTER_BUT>
    35c0:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    35c4:	85 30       	cpi	r24, 0x05	; 5
    35c6:	0c f4       	brge	.+2      	; 0x35ca <MODE_CLICK()+0x72>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:126
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    35c8:	73 c3       	rjmp	.+1766   	; 0x3cb0 <MODE_CLICK()+0x758>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:128
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    35ca:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:303
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    35ce:	88 23       	and	r24, r24
    35d0:	09 f1       	breq	.+66     	; 0x3614 <MODE_CLICK()+0xbc>
    35d2:	85 e0       	ldi	r24, 0x05	; 5
    35d4:	80 93 0a 29 	sts	0x290A, r24	; 0x80290a <ENTER_BUT>
    35d8:	80 91 f9 28 	lds	r24, 0x28F9	; 0x8028f9 <PUMP_FLAG>
    35dc:	88 23       	and	r24, r24
    35de:	09 f4       	brne	.+2      	; 0x35e2 <MODE_CLICK()+0x8a>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:305
   {
      ENTER_BUT = 5;  
    35e0:	63 c3       	rjmp	.+1734   	; 0x3ca8 <MODE_CLICK()+0x750>
    35e2:	10 92 f9 28 	sts	0x28F9, r1	; 0x8028f9 <PUMP_FLAG>
Save_Pump_Data():
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:306
      if(PUMP_FLAG)   PUMP_FLAG=0;
    35e6:	80 91 f9 28 	lds	r24, 0x28F9	; 0x8028f9 <PUMP_FLAG>
    35ea:	81 11       	cpse	r24, r1
    35ec:	13 c0       	rjmp	.+38     	; 0x3614 <MODE_CLICK()+0xbc>
    35ee:	61 e0       	ldi	r22, 0x01	; 1
    35f0:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <SET_VALUE+0xa>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:67
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    35f4:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <SET_VALUE+0xb>
    35f8:	89 2b       	or	r24, r25
    35fa:	09 f4       	brne	.+2      	; 0x35fe <MODE_CLICK()+0xa6>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:69
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    35fc:	60 e0       	ldi	r22, 0x00	; 0
    35fe:	60 93 8e 28 	sts	0x288E, r22	; 0x80288e <STIR_VALUE_SET>
    3602:	90 e0       	ldi	r25, 0x00	; 0
    3604:	80 e0       	ldi	r24, 0x00	; 0
    3606:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
MODE_CLICK():
    360a:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    360e:	85 30       	cpi	r24, 0x05	; 5
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Eeprom.cpp:70
      EEPROM.write(0, STIR_VALUE_SET);
    3610:	0c f4       	brge	.+2      	; 0x3614 <MODE_CLICK()+0xbc>
    3612:	4e c3       	rjmp	.+1692   	; 0x3cb0 <MODE_CLICK()+0x758>
    3614:	00 91 a3 28 	lds	r16, 0x28A3	; 0x8028a3 <REP1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:317
//   {
//      ENTER_BUT = 5;  
//      if(PUMP_FLAG)   PUMP_FLAG=0;
//      else            PUMP_FLAG =1;
//   }
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    3618:	10 91 a4 28 	lds	r17, 0x28A4	; 0x8028a4 <REP1+0x1>
    361c:	10 16       	cp	r1, r16
    361e:	11 06       	cpc	r1, r17
    3620:	0c f4       	brge	.+2      	; 0x3624 <MODE_CLICK()+0xcc>
    3622:	46 c3       	rjmp	.+1676   	; 0x3cb0 <MODE_CLICK()+0x758>
    3624:	88 ee       	ldi	r24, 0xE8	; 232
    3626:	93 e0       	ldi	r25, 0x03	; 3
    3628:	0e 94 b3 0b 	call	0x1766	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
    362c:	0f 5f       	subi	r16, 0xFF	; 255
    362e:	1f 4f       	sbci	r17, 0xFF	; 255
    3630:	00 93 a3 28 	sts	0x28A3, r16	; 0x8028a3 <REP1>
    3634:	10 93 a4 28 	sts	0x28A4, r17	; 0x8028a4 <REP1+0x1>
    3638:	23 96       	adiw	r28, 0x03	; 3
    363a:	cd bf       	out	0x3d, r28	; 61
    363c:	de bf       	out	0x3e, r29	; 62
    363e:	df 91       	pop	r29
    3640:	cf 91       	pop	r28
    3642:	1f 91       	pop	r17
    3644:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:321
   else                           Tick.BUZZ_INTERVAL(50);               //short pree

   
}
    3646:	ff 90       	pop	r15
    3648:	ef 90       	pop	r14
    364a:	df 90       	pop	r13
    364c:	cf 90       	pop	r12
    364e:	bf 90       	pop	r11
    3650:	af 90       	pop	r10
    3652:	9f 90       	pop	r9
    3654:	8f 90       	pop	r8
    3656:	7f 90       	pop	r7
    3658:	6f 90       	pop	r6
    365a:	5f 90       	pop	r5
    365c:	4f 90       	pop	r4
    365e:	3f 90       	pop	r3
    3660:	2f 90       	pop	r2
    3662:	08 95       	ret
    3664:	8f 5f       	subi	r24, 0xFF	; 255
    3666:	aa cf       	rjmp	.-172    	; 0x35bc <MODE_CLICK()+0x64>
    3668:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    366c:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    3670:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:128
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    3674:	81 11       	cpse	r24, r1
    3676:	02 c1       	rjmp	.+516    	; 0x387c <MODE_CLICK()+0x324>
    3678:	80 91 8e 28 	lds	r24, 0x288E	; 0x80288e <STIR_VALUE_SET>
    367c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:133
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    367e:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <SET_LONG_VALUE>
    3682:	90 93 0c 29 	sts	0x290C, r25	; 0x80290c <SET_LONG_VALUE+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:135
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; //
    3686:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    368a:	2b 83       	std	Y+3, r18	; 0x03
    368c:	82 2f       	mov	r24, r18
    368e:	90 e0       	ldi	r25, 0x00	; 0
    3690:	80 93 0d 29 	sts	0x290D, r24	; 0x80290d <SET_LONG_VALUE+0x2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:136
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    3694:	90 93 0e 29 	sts	0x290E, r25	; 0x80290e <SET_LONG_VALUE+0x3>
    3698:	80 91 95 28 	lds	r24, 0x2895	; 0x802895 <Proceess_Resume_Enable_Flag>
    369c:	90 e0       	ldi	r25, 0x00	; 0
    369e:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_LONG_VALUE+0x8>
    36a2:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_LONG_VALUE+0x9>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:137
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    36a6:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <select_product_type>
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_LONG_VALUE+0xa>
    36b0:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_LONG_VALUE+0xb>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:139
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type;//Siddhesh
    36b4:	21 11       	cpse	r18, r1
    36b6:	99 c0       	rjmp	.+306    	; 0x37ea <MODE_CLICK()+0x292>
    36b8:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SAFE_VALUE_SET_DEG>
    36bc:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
    36c0:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_LONG_VALUE+0x4>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:141
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    36c4:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_LONG_VALUE+0x5>
    36c8:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <CAL_SELECT_VALUE>
    36cc:	90 91 c4 28 	lds	r25, 0x28C4	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
    36d0:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_LONG_VALUE+0xc>
    36d4:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_LONG_VALUE+0xd>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:144
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    36d8:	c0 90 dc 28 	lds	r12, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    36dc:	d0 90 dd 28 	lds	r13, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    36e0:	e0 90 de 28 	lds	r14, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    36e4:	f0 90 df 28 	lds	r15, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    36e8:	c7 01       	movw	r24, r14
    36ea:	b6 01       	movw	r22, r12
    36ec:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    36f0:	4b 01       	movw	r8, r22
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	40 e2       	ldi	r20, 0x20	; 32
    36f8:	51 e4       	ldi	r21, 0x41	; 65
    36fa:	c7 01       	movw	r24, r14
    36fc:	b6 01       	movw	r22, r12
    36fe:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3702:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3706:	2b 01       	movw	r4, r22
    3708:	cb 01       	movw	r24, r22
    370a:	6a e0       	ldi	r22, 0x0A	; 10
    370c:	70 e0       	ldi	r23, 0x00	; 0
    370e:	0e 94 27 37 	call	0x6e4e	; 0x6e4e <__divmodhi4>
    3712:	1c 01       	movw	r2, r24
    3714:	8b 81       	ldd	r24, Y+3	; 0x03
    3716:	81 11       	cpse	r24, r1
    3718:	7e c0       	rjmp	.+252    	; 0x3816 <MODE_CLICK()+0x2be>
    371a:	20 e0       	ldi	r18, 0x00	; 0
    371c:	30 e0       	ldi	r19, 0x00	; 0
    371e:	48 ec       	ldi	r20, 0xC8	; 200
    3720:	52 e4       	ldi	r21, 0x42	; 66
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:145
      if (!DEGREE_VALUE_SET)
    3722:	c7 01       	movw	r24, r14
    3724:	b6 01       	movw	r22, r12
    3726:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:147
      {
        if(TEMP_DEG_RAW<100)
    372a:	87 ff       	sbrs	r24, 7
    372c:	67 c0       	rjmp	.+206    	; 0x37fc <MODE_CLICK()+0x2a4>
    372e:	80 92 19 29 	sts	0x2919, r8	; 0x802919 <SET_LONG_VALUE+0xe>
    3732:	90 92 1a 29 	sts	0x291A, r9	; 0x80291a <SET_LONG_VALUE+0xf>
    3736:	40 92 1e 28 	sts	0x281E, r4	; 0x80281e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    373a:	50 92 1f 28 	sts	0x281F, r5	; 0x80281f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:149
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    373e:	20 92 1b 29 	sts	0x291B, r2	; 0x80291b <SET_LONG_VALUE+0x10>
    3742:	30 92 1c 29 	sts	0x291C, r3	; 0x80291c <SET_LONG_VALUE+0x11>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:150
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    3746:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    374a:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:152
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    374e:	80 93 1d 29 	sts	0x291D, r24	; 0x80291d <SET_LONG_VALUE+0x12>
    3752:	90 93 1e 29 	sts	0x291E, r25	; 0x80291e <SET_LONG_VALUE+0x13>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:165
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    3756:	80 92 21 29 	sts	0x2921, r8	; 0x802921 <SET_LONG_VALUE+0x16>
    375a:	90 92 22 29 	sts	0x2922, r9	; 0x802922 <SET_LONG_VALUE+0x17>
    375e:	20 92 23 29 	sts	0x2923, r2	; 0x802923 <SET_LONG_VALUE+0x18>
    3762:	30 92 24 29 	sts	0x2924, r3	; 0x802924 <SET_LONG_VALUE+0x19>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:166
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    3766:	0c 30       	cpi	r16, 0x0C	; 12
    3768:	11 05       	cpc	r17, r1
    376a:	09 f0       	breq	.+2      	; 0x376e <MODE_CLICK()+0x216>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:169
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    376c:	6d c0       	rjmp	.+218    	; 0x3848 <MODE_CLICK()+0x2f0>
    376e:	c0 92 16 28 	sts	0x2816, r12	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    3772:	d0 92 17 28 	sts	0x2817, r13	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:171
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    3776:	e0 92 18 28 	sts	0x2818, r14	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    377a:	f0 92 19 28 	sts	0x2819, r15	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    377e:	20 e0       	ldi	r18, 0x00	; 0
    3780:	30 e0       	ldi	r19, 0x00	; 0
    3782:	48 ec       	ldi	r20, 0xC8	; 200
    3784:	52 e4       	ldi	r21, 0x42	; 66
    3786:	c7 01       	movw	r24, r14
    3788:	b6 01       	movw	r22, r12
    378a:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:174
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    378e:	87 ff       	sbrs	r24, 7
    3790:	68 c0       	rjmp	.+208    	; 0x3862 <MODE_CLICK()+0x30a>
    3792:	80 92 25 29 	sts	0x2925, r8	; 0x802925 <SET_LONG_VALUE+0x1a>
    3796:	90 92 26 29 	sts	0x2926, r9	; 0x802926 <SET_LONG_VALUE+0x1b>
    379a:	20 92 27 29 	sts	0x2927, r2	; 0x802927 <SET_LONG_VALUE+0x1c>
    379e:	30 92 28 29 	sts	0x2928, r3	; 0x802928 <SET_LONG_VALUE+0x1d>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:176
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    37a2:	80 91 55 28 	lds	r24, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    37a6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:178
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    37a8:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_LONG_VALUE+0x6>
    37ac:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_LONG_VALUE+0x7>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:186
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    37b0:	01 31       	cpi	r16, 0x11	; 17
    37b2:	11 05       	cpc	r17, r1
    37b4:	21 f4       	brne	.+8      	; 0x37be <MODE_CLICK()+0x266>
    37b6:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    37ba:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:187
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    37be:	2b 81       	ldd	r18, Y+3	; 0x03
    37c0:	21 11       	cpse	r18, r1
    37c2:	09 c0       	rjmp	.+18     	; 0x37d6 <MODE_CLICK()+0x27e>
    37c4:	08 30       	cpi	r16, 0x08	; 8
    37c6:	11 05       	cpc	r17, r1
    37c8:	31 f4       	brne	.+12     	; 0x37d6 <MODE_CLICK()+0x27e>
    37ca:	87 e0       	ldi	r24, 0x07	; 7
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:189
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    37d2:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    37d6:	81 e0       	ldi	r24, 0x01	; 1
    37d8:	80 93 98 28 	sts	0x2898, r24	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    37dc:	8a e1       	ldi	r24, 0x1A	; 26
    37de:	90 e0       	ldi	r25, 0x00	; 0
    37e0:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:191
      
      Mode_Button_Single_Press_In_Settings = 1;
    37e4:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
    37e8:	eb ce       	rjmp	.-554    	; 0x35c0 <MODE_CLICK()+0x68>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:301
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    37ea:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SAFE_VALUE_SET_FAH>
    37ee:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
    37f2:	80 93 31 29 	sts	0x2931, r24	; 0x802931 <SET_LONG_VALUE+0x26>
    37f6:	90 93 32 29 	sts	0x2932, r25	; 0x802932 <SET_LONG_VALUE+0x27>
C:\Users\Siddhesh.Hadawale\Downloads\Final_WLC_v3.00 (1)\Final_WLC_v3.00/Final_WLC_v3.00.ino:142
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type;//Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    37fa:	66 cf       	rjmp	.-308    	; 0x36c8 <MODE_CLICK()+0x170>
    37fc:	83 e6       	ldi	r24, 0x63	; 99
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <SET_LONG_VALUE+0xe>
    3804:	90 93 1a 29 	sts	0x291A, r25	; 0x80291a <SET_LONG_VALUE+0xf>
    3808:	89 e0       	ldi	r24, 0x09	; 9
    380a:	90 e0       	ldi	r25, 0x00	; 0
    380c:	80 93 1b 29 	sts	0x291B, r24	; 0x80291b <SET_LONG_VALUE+0x10>
    3810:	90 93 1c 29 	sts	0x291C, r25	; 0x80291c <SET_LONG_VALUE+0x11>
    3814:	98 cf       	rjmp	.-208    	; 0x3746 <MODE_CLICK()+0x1ee>
    3816:	40 90 c9 28 	lds	r4, 0x28C9	; 0x8028c9 <TEMP_FAH_RAW>
    381a:	50 90 ca 28 	lds	r5, 0x28CA	; 0x8028ca <TEMP_FAH_RAW+0x1>
    381e:	60 90 cb 28 	lds	r6, 0x28CB	; 0x8028cb <TEMP_FAH_RAW+0x2>
    3822:	70 90 cc 28 	lds	r7, 0x28CC	; 0x8028cc <TEMP_FAH_RAW+0x3>
    3826:	c3 01       	movw	r24, r6
    3828:	b2 01       	movw	r22, r4
    382a:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    382e:	60 93 33 29 	sts	0x2933, r22	; 0x802933 <SET_LONG_VALUE+0x28>
    3832:	70 93 34 29 	sts	0x2934, r23	; 0x802934 <SET_LONG_VALUE+0x29>
    3836:	40 92 1a 28 	sts	0x281A, r4	; 0x80281a <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    383a:	50 92 1b 28 	sts	0x281B, r5	; 0x80281b <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    383e:	60 92 1c 28 	sts	0x281C, r6	; 0x80281c <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    3842:	70 92 1d 28 	sts	0x281D, r7	; 0x80281d <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    3846:	7f cf       	rjmp	.-258    	; 0x3746 <MODE_CLICK()+0x1ee>
    3848:	0e 30       	cpi	r16, 0x0E	; 14
    384a:	11 05       	cpc	r17, r1
    384c:	09 f0       	breq	.+2      	; 0x3850 <MODE_CLICK()+0x2f8>
    384e:	97 cf       	rjmp	.-210    	; 0x377e <MODE_CLICK()+0x226>
    3850:	c0 92 12 28 	sts	0x2812, r12	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    3854:	d0 92 13 28 	sts	0x2813, r13	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    3858:	e0 92 14 28 	sts	0x2814, r14	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    385c:	f0 92 15 28 	sts	0x2815, r15	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    3860:	8e cf       	rjmp	.-228    	; 0x377e <MODE_CLICK()+0x226>
    3862:	83 e6       	ldi	r24, 0x63	; 99
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <SET_LONG_VALUE+0x1a>
    386a:	90 93 26 29 	sts	0x2926, r25	; 0x802926 <SET_LONG_VALUE+0x1b>
    386e:	89 e0       	ldi	r24, 0x09	; 9
    3870:	90 e0       	ldi	r25, 0x00	; 0
    3872:	80 93 27 29 	sts	0x2927, r24	; 0x802927 <SET_LONG_VALUE+0x1c>
    3876:	90 93 28 29 	sts	0x2928, r25	; 0x802928 <SET_LONG_VALUE+0x1d>
    387a:	93 cf       	rjmp	.-218    	; 0x37a2 <MODE_CLICK()+0x24a>
    387c:	0f 30       	cpi	r16, 0x0F	; 15
    387e:	11 05       	cpc	r17, r1
    3880:	10 f5       	brcc	.+68     	; 0x38c6 <MODE_CLICK()+0x36e>
    3882:	f8 01       	movw	r30, r16
    3884:	ea 5b       	subi	r30, 0xBA	; 186
    3886:	f3 4e       	sbci	r31, 0xE3	; 227
    3888:	0c 94 78 37 	jmp	0x6ef0	; 0x6ef0 <__tablejump2__>
    388c:	55 1c       	adc	r5, r5
    388e:	83 1c       	adc	r8, r3
    3890:	90 1c       	adc	r9, r0
    3892:	34 1e       	adc	r3, r20
    3894:	ae 1c       	adc	r10, r14
    3896:	bc 1c       	adc	r11, r12
    3898:	c9 1c       	adc	r12, r9
    389a:	63 1c       	adc	r6, r3
    389c:	d4 1c       	adc	r13, r4
    389e:	87 1d       	adc	r24, r7
    38a0:	95 1d       	adc	r25, r5
    38a2:	63 1c       	adc	r6, r3
    38a4:	ae 1d       	adc	r26, r14
    38a6:	63 1c       	adc	r6, r3
    38a8:	bf 1d       	adc	r27, r15
    38aa:	61 e0       	ldi	r22, 0x01	; 1
    38ac:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SET_LONG_VALUE>
    38b0:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SET_LONG_VALUE+0x1>
    38b4:	89 2b       	or	r24, r25
    38b6:	09 f4       	brne	.+2      	; 0x38ba <MODE_CLICK()+0x362>
    38b8:	60 e0       	ldi	r22, 0x00	; 0
    38ba:	60 93 8e 28 	sts	0x288E, r22	; 0x80288e <STIR_VALUE_SET>
    38be:	90 e0       	ldi	r25, 0x00	; 0
    38c0:	80 e0       	ldi	r24, 0x00	; 0
    38c2:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    38c6:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    38ca:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    38ce:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    38d2:	21 11       	cpse	r18, r1
    38d4:	03 c0       	rjmp	.+6      	; 0x38dc <MODE_CLICK()+0x384>
    38d6:	87 30       	cpi	r24, 0x07	; 7
    38d8:	91 05       	cpc	r25, r1
    38da:	61 f0       	breq	.+24     	; 0x38f4 <MODE_CLICK()+0x39c>
    38dc:	9c 01       	movw	r18, r24
    38de:	2d 7f       	andi	r18, 0xFD	; 253
    38e0:	29 30       	cpi	r18, 0x09	; 9
    38e2:	31 05       	cpc	r19, r1
    38e4:	39 f0       	breq	.+14     	; 0x38f4 <MODE_CLICK()+0x39c>
    38e6:	8d 30       	cpi	r24, 0x0D	; 13
    38e8:	91 05       	cpc	r25, r1
    38ea:	21 f0       	breq	.+8      	; 0x38f4 <MODE_CLICK()+0x39c>
    38ec:	81 31       	cpi	r24, 0x11	; 17
    38ee:	91 05       	cpc	r25, r1
    38f0:	09 f0       	breq	.+2      	; 0x38f4 <MODE_CLICK()+0x39c>
    38f2:	cd c1       	rjmp	.+922    	; 0x3c8e <MODE_CLICK()+0x736>
    38f4:	21 e0       	ldi	r18, 0x01	; 1
    38f6:	20 93 98 28 	sts	0x2898, r18	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    38fa:	01 96       	adiw	r24, 0x01	; 1
    38fc:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    3900:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    3904:	6b cf       	rjmp	.-298    	; 0x37dc <MODE_CLICK()+0x284>
    3906:	61 e0       	ldi	r22, 0x01	; 1
    3908:	80 91 0d 29 	lds	r24, 0x290D	; 0x80290d <SET_LONG_VALUE+0x2>
    390c:	90 91 0e 29 	lds	r25, 0x290E	; 0x80290e <SET_LONG_VALUE+0x3>
    3910:	89 2b       	or	r24, r25
    3912:	09 f4       	brne	.+2      	; 0x3916 <MODE_CLICK()+0x3be>
    3914:	60 e0       	ldi	r22, 0x00	; 0
    3916:	60 93 3d 29 	sts	0x293D, r22	; 0x80293d <DEGREE_VALUE_SET>
    391a:	81 e0       	ldi	r24, 0x01	; 1
    391c:	90 e0       	ldi	r25, 0x00	; 0
    391e:	d1 cf       	rjmp	.-94     	; 0x38c2 <MODE_CLICK()+0x36a>
    3920:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    3924:	81 11       	cpse	r24, r1
    3926:	0b c0       	rjmp	.+22     	; 0x393e <MODE_CLICK()+0x3e6>
    3928:	60 91 0f 29 	lds	r22, 0x290F	; 0x80290f <SET_LONG_VALUE+0x4>
    392c:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SET_LONG_VALUE+0x5>
    3930:	60 93 fc 28 	sts	0x28FC, r22	; 0x8028fc <SAFE_VALUE_SET_DEG>
    3934:	80 93 fd 28 	sts	0x28FD, r24	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
    3938:	82 e0       	ldi	r24, 0x02	; 2
    393a:	90 e0       	ldi	r25, 0x00	; 0
    393c:	c2 cf       	rjmp	.-124    	; 0x38c2 <MODE_CLICK()+0x36a>
    393e:	80 91 31 29 	lds	r24, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
    3942:	90 91 32 29 	lds	r25, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
    3946:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SAFE_VALUE_SET_FAH>
    394a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
    394e:	6a ef       	ldi	r22, 0xFA	; 250
    3950:	78 e2       	ldi	r23, 0x28	; 40
    3952:	83 e0       	ldi	r24, 0x03	; 3
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	0e 94 b7 10 	call	0x216e	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    395a:	b5 cf       	rjmp	.-150    	; 0x38c6 <MODE_CLICK()+0x36e>
    395c:	61 e0       	ldi	r22, 0x01	; 1
    395e:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_LONG_VALUE+0x8>
    3962:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_LONG_VALUE+0x9>
    3966:	89 2b       	or	r24, r25
    3968:	09 f4       	brne	.+2      	; 0x396c <MODE_CLICK()+0x414>
    396a:	60 e0       	ldi	r22, 0x00	; 0
    396c:	60 93 95 28 	sts	0x2895, r22	; 0x802895 <Proceess_Resume_Enable_Flag>
    3970:	8f e0       	ldi	r24, 0x0F	; 15
    3972:	90 e0       	ldi	r25, 0x00	; 0
    3974:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    3978:	61 e0       	ldi	r22, 0x01	; 1
    397a:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_LONG_VALUE+0xa>
    397e:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_LONG_VALUE+0xb>
    3982:	89 2b       	or	r24, r25
    3984:	09 f4       	brne	.+2      	; 0x3988 <MODE_CLICK()+0x430>
    3986:	60 e0       	ldi	r22, 0x00	; 0
    3988:	60 93 f8 28 	sts	0x28F8, r22	; 0x8028f8 <select_product_type>
    398c:	86 e9       	ldi	r24, 0x96	; 150
    398e:	90 e0       	ldi	r25, 0x00	; 0
    3990:	98 cf       	rjmp	.-208    	; 0x38c2 <MODE_CLICK()+0x36a>
    3992:	60 91 17 29 	lds	r22, 0x2917	; 0x802917 <SET_LONG_VALUE+0xc>
    3996:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_LONG_VALUE+0xd>
    399a:	60 93 c3 28 	sts	0x28C3, r22	; 0x8028c3 <CAL_SELECT_VALUE>
    399e:	80 93 c4 28 	sts	0x28C4, r24	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
    39a2:	85 e0       	ldi	r24, 0x05	; 5
    39a4:	90 e0       	ldi	r25, 0x00	; 0
    39a6:	8d cf       	rjmp	.-230    	; 0x38c2 <MODE_CLICK()+0x36a>
    39a8:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    39ac:	81 11       	cpse	r24, r1
    39ae:	8a c0       	rjmp	.+276    	; 0x3ac4 <MODE_CLICK()+0x56c>
    39b0:	60 91 1b 29 	lds	r22, 0x291B	; 0x80291b <SET_LONG_VALUE+0x10>
    39b4:	70 91 1c 29 	lds	r23, 0x291C	; 0x80291c <SET_LONG_VALUE+0x11>
    39b8:	07 2e       	mov	r0, r23
    39ba:	00 0c       	add	r0, r0
    39bc:	88 0b       	sbc	r24, r24
    39be:	99 0b       	sbc	r25, r25
    39c0:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    39c4:	20 e0       	ldi	r18, 0x00	; 0
    39c6:	30 e0       	ldi	r19, 0x00	; 0
    39c8:	40 e2       	ldi	r20, 0x20	; 32
    39ca:	51 e4       	ldi	r21, 0x41	; 65
    39cc:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    39d0:	6b 01       	movw	r12, r22
    39d2:	7c 01       	movw	r14, r24
    39d4:	60 91 19 29 	lds	r22, 0x2919	; 0x802919 <SET_LONG_VALUE+0xe>
    39d8:	70 91 1a 29 	lds	r23, 0x291A	; 0x80291a <SET_LONG_VALUE+0xf>
    39dc:	07 2e       	mov	r0, r23
    39de:	00 0c       	add	r0, r0
    39e0:	88 0b       	sbc	r24, r24
    39e2:	99 0b       	sbc	r25, r25
    39e4:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    39e8:	9b 01       	movw	r18, r22
    39ea:	ac 01       	movw	r20, r24
    39ec:	c7 01       	movw	r24, r14
    39ee:	b6 01       	movw	r22, r12
    39f0:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    39f4:	20 e0       	ldi	r18, 0x00	; 0
    39f6:	30 e0       	ldi	r19, 0x00	; 0
    39f8:	40 e2       	ldi	r20, 0x20	; 32
    39fa:	51 e4       	ldi	r21, 0x41	; 65
    39fc:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3a00:	6b 01       	movw	r12, r22
    3a02:	7c 01       	movw	r14, r24
    3a04:	60 91 1e 28 	lds	r22, 0x281E	; 0x80281e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    3a08:	70 91 1f 28 	lds	r23, 0x281F	; 0x80281f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    3a0c:	07 2e       	mov	r0, r23
    3a0e:	00 0c       	add	r0, r0
    3a10:	88 0b       	sbc	r24, r24
    3a12:	99 0b       	sbc	r25, r25
    3a14:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    3a18:	9b 01       	movw	r18, r22
    3a1a:	ac 01       	movw	r20, r24
    3a1c:	c7 01       	movw	r24, r14
    3a1e:	b6 01       	movw	r22, r12
    3a20:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    3a24:	20 e0       	ldi	r18, 0x00	; 0
    3a26:	30 e0       	ldi	r19, 0x00	; 0
    3a28:	40 e2       	ldi	r20, 0x20	; 32
    3a2a:	51 e4       	ldi	r21, 0x41	; 65
    3a2c:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    3a30:	60 93 d3 28 	sts	0x28D3, r22	; 0x8028d3 <ERROR_CAL>
    3a34:	70 93 d4 28 	sts	0x28D4, r23	; 0x8028d4 <ERROR_CAL+0x1>
    3a38:	80 93 d5 28 	sts	0x28D5, r24	; 0x8028d5 <ERROR_CAL+0x2>
    3a3c:	90 93 d6 28 	sts	0x28D6, r25	; 0x8028d6 <ERROR_CAL+0x3>
    3a40:	81 e0       	ldi	r24, 0x01	; 1
    3a42:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
    3a46:	10 92 cd 28 	sts	0x28CD, r1	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
    3a4a:	80 90 d3 28 	lds	r8, 0x28D3	; 0x8028d3 <ERROR_CAL>
    3a4e:	90 90 d4 28 	lds	r9, 0x28D4	; 0x8028d4 <ERROR_CAL+0x1>
    3a52:	a0 90 d5 28 	lds	r10, 0x28D5	; 0x8028d5 <ERROR_CAL+0x2>
    3a56:	b0 90 d6 28 	lds	r11, 0x28D6	; 0x8028d6 <ERROR_CAL+0x3>
    3a5a:	20 e0       	ldi	r18, 0x00	; 0
    3a5c:	30 e0       	ldi	r19, 0x00	; 0
    3a5e:	40 e2       	ldi	r20, 0x20	; 32
    3a60:	51 e4       	ldi	r21, 0x41	; 65
    3a62:	c5 01       	movw	r24, r10
    3a64:	b4 01       	movw	r22, r8
    3a66:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3a6a:	6b 01       	movw	r12, r22
    3a6c:	7c 01       	movw	r14, r24
    3a6e:	20 e0       	ldi	r18, 0x00	; 0
    3a70:	30 e0       	ldi	r19, 0x00	; 0
    3a72:	a9 01       	movw	r20, r18
    3a74:	c5 01       	movw	r24, r10
    3a76:	b4 01       	movw	r22, r8
    3a78:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    3a7c:	87 ff       	sbrs	r24, 7
    3a7e:	44 c0       	rjmp	.+136    	; 0x3b08 <MODE_CLICK()+0x5b0>
    3a80:	81 e0       	ldi	r24, 0x01	; 1
    3a82:	80 93 d7 28 	sts	0x28D7, r24	; 0x8028d7 <SIGN>
    3a86:	f7 fa       	bst	r15, 7
    3a88:	f0 94       	com	r15
    3a8a:	f7 f8       	bld	r15, 7
    3a8c:	f0 94       	com	r15
    3a8e:	c0 92 f4 28 	sts	0x28F4, r12	; 0x8028f4 <ERROR_CAL1>
    3a92:	d0 92 f5 28 	sts	0x28F5, r13	; 0x8028f5 <ERROR_CAL1+0x1>
    3a96:	e0 92 f6 28 	sts	0x28F6, r14	; 0x8028f6 <ERROR_CAL1+0x2>
    3a9a:	f0 92 f7 28 	sts	0x28F7, r15	; 0x8028f7 <ERROR_CAL1+0x3>
    3a9e:	0e 94 90 10 	call	0x2120	; 0x2120 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.63]>
    3aa2:	60 91 d7 28 	lds	r22, 0x28D7	; 0x8028d7 <SIGN>
    3aa6:	87 e0       	ldi	r24, 0x07	; 7
    3aa8:	90 e0       	ldi	r25, 0x00	; 0
    3aaa:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    3aae:	60 91 d2 28 	lds	r22, 0x28D2	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
    3ab2:	88 e0       	ldi	r24, 0x08	; 8
    3ab4:	90 e0       	ldi	r25, 0x00	; 0
    3ab6:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    3aba:	60 91 cd 28 	lds	r22, 0x28CD	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
    3abe:	89 e0       	ldi	r24, 0x09	; 9
    3ac0:	90 e0       	ldi	r25, 0x00	; 0
    3ac2:	ff ce       	rjmp	.-514    	; 0x38c2 <MODE_CLICK()+0x36a>
    3ac4:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
    3ac8:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
    3acc:	07 2e       	mov	r0, r23
    3ace:	00 0c       	add	r0, r0
    3ad0:	88 0b       	sbc	r24, r24
    3ad2:	99 0b       	sbc	r25, r25
    3ad4:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    3ad8:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    3adc:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    3ae0:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    3ae4:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    3ae8:	0e 94 0c 35 	call	0x6a18	; 0x6a18 <__subsf3>
    3aec:	60 93 d3 28 	sts	0x28D3, r22	; 0x8028d3 <ERROR_CAL>
    3af0:	70 93 d4 28 	sts	0x28D4, r23	; 0x8028d4 <ERROR_CAL+0x1>
    3af4:	80 93 d5 28 	sts	0x28D5, r24	; 0x8028d5 <ERROR_CAL+0x2>
    3af8:	90 93 d6 28 	sts	0x28D6, r25	; 0x8028d6 <ERROR_CAL+0x3>
    3afc:	10 92 d2 28 	sts	0x28D2, r1	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	80 93 cd 28 	sts	0x28CD, r24	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
    3b06:	a1 cf       	rjmp	.-190    	; 0x3a4a <MODE_CLICK()+0x4f2>
    3b08:	10 92 d7 28 	sts	0x28D7, r1	; 0x8028d7 <SIGN>
    3b0c:	c0 cf       	rjmp	.-128    	; 0x3a8e <MODE_CLICK()+0x536>
    3b0e:	80 91 1d 29 	lds	r24, 0x291D	; 0x80291d <SET_LONG_VALUE+0x12>
    3b12:	90 91 1e 29 	lds	r25, 0x291E	; 0x80291e <SET_LONG_VALUE+0x13>
    3b16:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    3b1a:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    3b1e:	0a 96       	adiw	r24, 0x0a	; 10
    3b20:	80 93 1f 29 	sts	0x291F, r24	; 0x80291f <SET_LONG_VALUE+0x14>
    3b24:	90 93 20 29 	sts	0x2920, r25	; 0x802920 <SET_LONG_VALUE+0x15>
    3b28:	ce ce       	rjmp	.-612    	; 0x38c6 <MODE_CLICK()+0x36e>
    3b2a:	80 91 1f 29 	lds	r24, 0x291F	; 0x80291f <SET_LONG_VALUE+0x14>
    3b2e:	90 91 20 29 	lds	r25, 0x2920	; 0x802920 <SET_LONG_VALUE+0x15>
    3b32:	80 93 35 28 	sts	0x2835, r24	; 0x802835 <HIGH_CAL_VALUE_SET>
    3b36:	90 93 36 28 	sts	0x2836, r25	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    3b3a:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    3b3e:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    3b42:	a0 91 de 28 	lds	r26, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    3b46:	b0 91 df 28 	lds	r27, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    3b4a:	80 93 16 28 	sts	0x2816, r24	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    3b4e:	90 93 17 28 	sts	0x2817, r25	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    3b52:	a0 93 18 28 	sts	0x2818, r26	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    3b56:	b0 93 19 28 	sts	0x2819, r27	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    3b5a:	b5 ce       	rjmp	.-662    	; 0x38c6 <MODE_CLICK()+0x36e>
    3b5c:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    3b60:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    3b64:	a0 91 de 28 	lds	r26, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    3b68:	b0 91 df 28 	lds	r27, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    3b6c:	80 93 12 28 	sts	0x2812, r24	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    3b70:	90 93 13 28 	sts	0x2813, r25	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    3b74:	a0 93 14 28 	sts	0x2814, r26	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    3b78:	b0 93 15 28 	sts	0x2815, r27	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    3b7c:	a4 ce       	rjmp	.-696    	; 0x38c6 <MODE_CLICK()+0x36e>
    3b7e:	20 e0       	ldi	r18, 0x00	; 0
    3b80:	30 e0       	ldi	r19, 0x00	; 0
    3b82:	40 e2       	ldi	r20, 0x20	; 32
    3b84:	51 e4       	ldi	r21, 0x41	; 65
    3b86:	60 91 16 28 	lds	r22, 0x2816	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    3b8a:	70 91 17 28 	lds	r23, 0x2817	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    3b8e:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    3b92:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    3b96:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3b9a:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3b9e:	60 93 bb 28 	sts	0x28BB, r22	; 0x8028bb <CAL2_RAW_LOW_VALUE_CONV>
    3ba2:	70 93 bc 28 	sts	0x28BC, r23	; 0x8028bc <CAL2_RAW_LOW_VALUE_CONV+0x1>
    3ba6:	80 93 bd 28 	sts	0x28BD, r24	; 0x8028bd <CAL2_RAW_LOW_VALUE_CONV+0x2>
    3baa:	90 93 be 28 	sts	0x28BE, r25	; 0x8028be <CAL2_RAW_LOW_VALUE_CONV+0x3>
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	40 e2       	ldi	r20, 0x20	; 32
    3bb4:	51 e4       	ldi	r21, 0x41	; 65
    3bb6:	60 91 12 28 	lds	r22, 0x2812	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    3bba:	70 91 13 28 	lds	r23, 0x2813	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    3bbe:	80 91 14 28 	lds	r24, 0x2814	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    3bc2:	90 91 15 28 	lds	r25, 0x2815	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    3bc6:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3bca:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3bce:	60 93 b7 28 	sts	0x28B7, r22	; 0x8028b7 <CAL2_RAW_HIGH_VALUE_CONV>
    3bd2:	70 93 b8 28 	sts	0x28B8, r23	; 0x8028b8 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    3bd6:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    3bda:	90 93 ba 28 	sts	0x28BA, r25	; 0x8028ba <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    3bde:	6b eb       	ldi	r22, 0xBB	; 187
    3be0:	78 e2       	ldi	r23, 0x28	; 40
    3be2:	80 e5       	ldi	r24, 0x50	; 80
    3be4:	90 e0       	ldi	r25, 0x00	; 0
    3be6:	85 dc       	rcall	.-1782   	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3be8:	67 eb       	ldi	r22, 0xB7	; 183
    3bea:	78 e2       	ldi	r23, 0x28	; 40
    3bec:	8a e5       	ldi	r24, 0x5A	; 90
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	80 dc       	rcall	.-1792   	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3bf2:	20 e0       	ldi	r18, 0x00	; 0
    3bf4:	30 e0       	ldi	r19, 0x00	; 0
    3bf6:	40 e2       	ldi	r20, 0x20	; 32
    3bf8:	51 e4       	ldi	r21, 0x41	; 65
    3bfa:	60 91 37 28 	lds	r22, 0x2837	; 0x802837 <CAL2_CALCULATED_LOW_CAL_VALUE>
    3bfe:	70 91 38 28 	lds	r23, 0x2838	; 0x802838 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    3c02:	80 91 39 28 	lds	r24, 0x2839	; 0x802839 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    3c06:	90 91 3a 28 	lds	r25, 0x283A	; 0x80283a <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    3c0a:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3c0e:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3c12:	60 93 b3 28 	sts	0x28B3, r22	; 0x8028b3 <MASTER_LOW_CONV>
    3c16:	70 93 b4 28 	sts	0x28B4, r23	; 0x8028b4 <MASTER_LOW_CONV+0x1>
    3c1a:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <MASTER_LOW_CONV+0x2>
    3c1e:	90 93 b6 28 	sts	0x28B6, r25	; 0x8028b6 <MASTER_LOW_CONV+0x3>
    3c22:	20 e0       	ldi	r18, 0x00	; 0
    3c24:	30 e0       	ldi	r19, 0x00	; 0
    3c26:	40 e2       	ldi	r20, 0x20	; 32
    3c28:	51 e4       	ldi	r21, 0x41	; 65
    3c2a:	60 91 31 28 	lds	r22, 0x2831	; 0x802831 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    3c2e:	70 91 32 28 	lds	r23, 0x2832	; 0x802832 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    3c32:	80 91 33 28 	lds	r24, 0x2833	; 0x802833 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    3c36:	90 91 34 28 	lds	r25, 0x2834	; 0x802834 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    3c3a:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    3c3e:	0e 94 dd 35 	call	0x6bba	; 0x6bba <__fixsfsi>
    3c42:	60 93 af 28 	sts	0x28AF, r22	; 0x8028af <MASTER_HIGH_CONV>
    3c46:	70 93 b0 28 	sts	0x28B0, r23	; 0x8028b0 <MASTER_HIGH_CONV+0x1>
    3c4a:	80 93 b1 28 	sts	0x28B1, r24	; 0x8028b1 <MASTER_HIGH_CONV+0x2>
    3c4e:	90 93 b2 28 	sts	0x28B2, r25	; 0x8028b2 <MASTER_HIGH_CONV+0x3>
    3c52:	63 eb       	ldi	r22, 0xB3	; 179
    3c54:	78 e2       	ldi	r23, 0x28	; 40
    3c56:	84 e6       	ldi	r24, 0x64	; 100
    3c58:	90 e0       	ldi	r25, 0x00	; 0
    3c5a:	4b dc       	rcall	.-1898   	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3c5c:	6f ea       	ldi	r22, 0xAF	; 175
    3c5e:	78 e2       	ldi	r23, 0x28	; 40
    3c60:	8e e6       	ldi	r24, 0x6E	; 110
    3c62:	90 e0       	ldi	r25, 0x00	; 0
    3c64:	46 dc       	rcall	.-1908   	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3c66:	2f ce       	rjmp	.-930    	; 0x38c6 <MODE_CLICK()+0x36e>
    3c68:	61 e0       	ldi	r22, 0x01	; 1
    3c6a:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_LONG_VALUE+0x6>
    3c6e:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_LONG_VALUE+0x7>
    3c72:	89 2b       	or	r24, r25
    3c74:	09 f4       	brne	.+2      	; 0x3c78 <MODE_CLICK()+0x720>
    3c76:	60 e0       	ldi	r22, 0x00	; 0
    3c78:	60 93 55 28 	sts	0x2855, r22	; 0x802855 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    3c7c:	81 e4       	ldi	r24, 0x41	; 65
    3c7e:	90 e0       	ldi	r25, 0x00	; 0
    3c80:	89 83       	std	Y+1, r24	; 0x01
    3c82:	9a 83       	std	Y+2, r25	; 0x02
    3c84:	ce 01       	movw	r24, r28
    3c86:	01 96       	adiw	r24, 0x01	; 1
    3c88:	0e 94 7f 10 	call	0x20fe	; 0x20fe <EERef::update(unsigned char)>
    3c8c:	1c ce       	rjmp	.-968    	; 0x38c6 <MODE_CLICK()+0x36e>
MODE_CLICK():
    3c8e:	9c 01       	movw	r18, r24
    3c90:	2b 7f       	andi	r18, 0xFB	; 251
    3c92:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    3c96:	2a 30       	cpi	r18, 0x0A	; 10
    3c98:	31 05       	cpc	r19, r1
    3c9a:	09 f4       	brne	.+2      	; 0x3c9e <MODE_CLICK()+0x746>
    3c9c:	2e ce       	rjmp	.-932    	; 0x38fa <MODE_CLICK()+0x3a2>
    3c9e:	8c 30       	cpi	r24, 0x0C	; 12
    3ca0:	91 05       	cpc	r25, r1
    3ca2:	09 f0       	breq	.+2      	; 0x3ca6 <MODE_CLICK()+0x74e>
    3ca4:	9b cd       	rjmp	.-1226   	; 0x37dc <MODE_CLICK()+0x284>
    3ca6:	29 ce       	rjmp	.-942    	; 0x38fa <MODE_CLICK()+0x3a2>
    3ca8:	81 e0       	ldi	r24, 0x01	; 1
    3caa:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <PUMP_FLAG>
    3cae:	9b cc       	rjmp	.-1738   	; 0x35e6 <MODE_CLICK()+0x8e>
    3cb0:	82 e3       	ldi	r24, 0x32	; 50
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	0e 94 b3 0b 	call	0x1766	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
    3cb8:	bf cc       	rjmp	.-1666   	; 0x3638 <MODE_CLICK()+0xe0>

00003cba <shiftOut.constprop.7>:
shiftOut():
    3cba:	ef 92       	push	r14
    3cbc:	ff 92       	push	r15
    3cbe:	0f 93       	push	r16
    3cc0:	1f 93       	push	r17
    3cc2:	cf 93       	push	r28
    3cc4:	df 93       	push	r29
    3cc6:	e8 2e       	mov	r14, r24
    3cc8:	f6 2e       	mov	r15, r22
    3cca:	d0 e0       	ldi	r29, 0x00	; 0
    3ccc:	c0 e0       	ldi	r28, 0x00	; 0
    3cce:	04 2f       	mov	r16, r20
    3cd0:	10 e0       	ldi	r17, 0x00	; 0
    3cd2:	b8 01       	movw	r22, r16
    3cd4:	0c 2e       	mov	r0, r28
    3cd6:	02 c0       	rjmp	.+4      	; 0x3cdc <shiftOut.constprop.7+0x22>
    3cd8:	75 95       	asr	r23
    3cda:	67 95       	ror	r22
    3cdc:	0a 94       	dec	r0
    3cde:	e2 f7       	brpl	.-8      	; 0x3cd8 <shiftOut.constprop.7+0x1e>
    3ce0:	61 70       	andi	r22, 0x01	; 1
    3ce2:	8e 2d       	mov	r24, r14
    3ce4:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3ce8:	61 e0       	ldi	r22, 0x01	; 1
    3cea:	8f 2d       	mov	r24, r15
    3cec:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3cf0:	60 e0       	ldi	r22, 0x00	; 0
    3cf2:	8f 2d       	mov	r24, r15
    3cf4:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3cf8:	21 96       	adiw	r28, 0x01	; 1
    3cfa:	c8 30       	cpi	r28, 0x08	; 8
    3cfc:	d1 05       	cpc	r29, r1
    3cfe:	49 f7       	brne	.-46     	; 0x3cd2 <shiftOut.constprop.7+0x18>
    3d00:	df 91       	pop	r29
    3d02:	cf 91       	pop	r28
    3d04:	1f 91       	pop	r17
    3d06:	0f 91       	pop	r16
    3d08:	ff 90       	pop	r15
    3d0a:	ef 90       	pop	r14
    3d0c:	08 95       	ret

00003d0e <DISP_REFRESH()>:
DISP_REFRESH():
    3d0e:	0f 93       	push	r16
    3d10:	1f 93       	push	r17
    3d12:	cf 93       	push	r28
    3d14:	df 93       	push	r29
    3d16:	0e 94 34 09 	call	0x1268	; 0x1268 <Eclass::cathode_high1() [clone .constprop.6]>
    3d1a:	0e 94 40 09 	call	0x1280	; 0x1280 <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    3d1e:	0e 94 40 09 	call	0x1280	; 0x1280 <Eclass::cathode_high2() [clone .constprop.4]>
    3d22:	60 e0       	ldi	r22, 0x00	; 0
    3d24:	80 e2       	ldi	r24, 0x20	; 32
    3d26:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3d2a:	c0 91 27 28 	lds	r28, 0x2827	; 0x802827 <count2>
    3d2e:	d0 91 28 28 	lds	r29, 0x2828	; 0x802828 <count2+0x1>
    3d32:	80 91 ae 28 	lds	r24, 0x28AE	; 0x8028ae <DOT2_0>
    3d36:	8e 01       	movw	r16, r28
    3d38:	00 0f       	add	r16, r16
    3d3a:	11 1f       	adc	r17, r17
    3d3c:	88 23       	and	r24, r24
    3d3e:	31 f0       	breq	.+12     	; 0x3d4c <DISP_REFRESH()+0x3e>
    3d40:	e0 91 e4 28 	lds	r30, 0x28E4	; 0x8028e4 <digits2>
    3d44:	f0 91 e5 28 	lds	r31, 0x28E5	; 0x8028e5 <digits2+0x1>
    3d48:	20 97       	sbiw	r28, 0x00	; 0
    3d4a:	c1 f0       	breq	.+48     	; 0x3d7c <DISP_REFRESH()+0x6e>
    3d4c:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <DOT2_1>
    3d50:	88 23       	and	r24, r24
    3d52:	39 f0       	breq	.+14     	; 0x3d62 <DISP_REFRESH()+0x54>
    3d54:	e0 91 e6 28 	lds	r30, 0x28E6	; 0x8028e6 <digits2+0x2>
    3d58:	f0 91 e7 28 	lds	r31, 0x28E7	; 0x8028e7 <digits2+0x3>
    3d5c:	c1 30       	cpi	r28, 0x01	; 1
    3d5e:	d1 05       	cpc	r29, r1
    3d60:	69 f0       	breq	.+26     	; 0x3d7c <DISP_REFRESH()+0x6e>
    3d62:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <DOT2_2>
    3d66:	88 23       	and	r24, r24
    3d68:	09 f4       	brne	.+2      	; 0x3d6c <DISP_REFRESH()+0x5e>
    3d6a:	80 c0       	rjmp	.+256    	; 0x3e6c <DISP_REFRESH()+0x15e>
    3d6c:	c2 30       	cpi	r28, 0x02	; 2
    3d6e:	d1 05       	cpc	r29, r1
    3d70:	09 f0       	breq	.+2      	; 0x3d74 <DISP_REFRESH()+0x66>
    3d72:	7c c0       	rjmp	.+248    	; 0x3e6c <DISP_REFRESH()+0x15e>
    3d74:	e0 91 e8 28 	lds	r30, 0x28E8	; 0x8028e8 <digits2+0x4>
    3d78:	f0 91 e9 28 	lds	r31, 0x28E9	; 0x8028e9 <digits2+0x5>
    3d7c:	ea 57       	subi	r30, 0x7A	; 122
    3d7e:	f0 45       	sbci	r31, 0x50	; 80
    3d80:	40 81       	ld	r20, Z
    3d82:	41 60       	ori	r20, 0x01	; 1
    3d84:	6e e1       	ldi	r22, 0x1E	; 30
    3d86:	8f e1       	ldi	r24, 0x1F	; 31
    3d88:	98 df       	rcall	.-208    	; 0x3cba <shiftOut.constprop.7>
    3d8a:	f8 01       	movw	r30, r16
    3d8c:	ee 58       	subi	r30, 0x8E	; 142
    3d8e:	f0 45       	sbci	r31, 0x50	; 80
    3d90:	60 e0       	ldi	r22, 0x00	; 0
    3d92:	80 81       	ld	r24, Z
    3d94:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3d98:	61 e0       	ldi	r22, 0x01	; 1
    3d9a:	80 e2       	ldi	r24, 0x20	; 32
    3d9c:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3da0:	21 96       	adiw	r28, 0x01	; 1
    3da2:	c4 30       	cpi	r28, 0x04	; 4
    3da4:	d1 05       	cpc	r29, r1
    3da6:	0c f0       	brlt	.+2      	; 0x3daa <DISP_REFRESH()+0x9c>
    3da8:	6b c0       	rjmp	.+214    	; 0x3e80 <DISP_REFRESH()+0x172>
    3daa:	c0 93 27 28 	sts	0x2827, r28	; 0x802827 <count2>
    3dae:	d0 93 28 28 	sts	0x2828, r29	; 0x802828 <count2+0x1>
DISPLAY_NUMBER1():
    3db2:	0e 94 34 09 	call	0x1268	; 0x1268 <Eclass::cathode_high1() [clone .constprop.6]>
    3db6:	60 e0       	ldi	r22, 0x00	; 0
    3db8:	83 e1       	ldi	r24, 0x13	; 19
    3dba:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3dbe:	c0 91 29 28 	lds	r28, 0x2829	; 0x802829 <count1>
    3dc2:	d0 91 2a 28 	lds	r29, 0x282A	; 0x80282a <count1+0x1>
    3dc6:	80 91 ab 28 	lds	r24, 0x28AB	; 0x8028ab <DOT1_0>
    3dca:	8e 01       	movw	r16, r28
    3dcc:	00 0f       	add	r16, r16
    3dce:	11 1f       	adc	r17, r17
    3dd0:	88 23       	and	r24, r24
    3dd2:	31 f0       	breq	.+12     	; 0x3de0 <DISP_REFRESH()+0xd2>
    3dd4:	e0 91 ec 28 	lds	r30, 0x28EC	; 0x8028ec <digits1>
    3dd8:	f0 91 ed 28 	lds	r31, 0x28ED	; 0x8028ed <digits1+0x1>
    3ddc:	20 97       	sbiw	r28, 0x00	; 0
    3dde:	c1 f0       	breq	.+48     	; 0x3e10 <DISP_REFRESH()+0x102>
    3de0:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <DOT1_1>
    3de4:	88 23       	and	r24, r24
    3de6:	39 f0       	breq	.+14     	; 0x3df6 <DISP_REFRESH()+0xe8>
    3de8:	e0 91 ee 28 	lds	r30, 0x28EE	; 0x8028ee <digits1+0x2>
    3dec:	f0 91 ef 28 	lds	r31, 0x28EF	; 0x8028ef <digits1+0x3>
    3df0:	c1 30       	cpi	r28, 0x01	; 1
    3df2:	d1 05       	cpc	r29, r1
    3df4:	69 f0       	breq	.+26     	; 0x3e10 <DISP_REFRESH()+0x102>
    3df6:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <DOT1_2>
    3dfa:	88 23       	and	r24, r24
    3dfc:	09 f4       	brne	.+2      	; 0x3e00 <DISP_REFRESH()+0xf2>
    3dfe:	45 c0       	rjmp	.+138    	; 0x3e8a <DISP_REFRESH()+0x17c>
    3e00:	c2 30       	cpi	r28, 0x02	; 2
    3e02:	d1 05       	cpc	r29, r1
    3e04:	09 f0       	breq	.+2      	; 0x3e08 <DISP_REFRESH()+0xfa>
    3e06:	41 c0       	rjmp	.+130    	; 0x3e8a <DISP_REFRESH()+0x17c>
    3e08:	e0 91 f0 28 	lds	r30, 0x28F0	; 0x8028f0 <digits1+0x4>
    3e0c:	f0 91 f1 28 	lds	r31, 0x28F1	; 0x8028f1 <digits1+0x5>
    3e10:	ea 57       	subi	r30, 0x7A	; 122
    3e12:	f0 45       	sbci	r31, 0x50	; 80
    3e14:	40 81       	ld	r20, Z
    3e16:	41 60       	ori	r20, 0x01	; 1
    3e18:	64 e1       	ldi	r22, 0x14	; 20
    3e1a:	82 e1       	ldi	r24, 0x12	; 18
    3e1c:	4e df       	rcall	.-356    	; 0x3cba <shiftOut.constprop.7>
    3e1e:	f8 01       	movw	r30, r16
    3e20:	e4 58       	subi	r30, 0x84	; 132
    3e22:	f0 45       	sbci	r31, 0x50	; 80
    3e24:	60 e0       	ldi	r22, 0x00	; 0
    3e26:	80 81       	ld	r24, Z
    3e28:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3e2c:	61 e0       	ldi	r22, 0x01	; 1
    3e2e:	83 e1       	ldi	r24, 0x13	; 19
    3e30:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    3e34:	21 96       	adiw	r28, 0x01	; 1
    3e36:	c4 30       	cpi	r28, 0x04	; 4
    3e38:	d1 05       	cpc	r29, r1
    3e3a:	8c f5       	brge	.+98     	; 0x3e9e <DISP_REFRESH()+0x190>
    3e3c:	c0 93 29 28 	sts	0x2829, r28	; 0x802829 <count1>
    3e40:	d0 93 2a 28 	sts	0x282A, r29	; 0x80282a <count1+0x1>
Button_Tick_Update():
    3e44:	89 e8       	ldi	r24, 0x89	; 137
    3e46:	9a e2       	ldi	r25, 0x2A	; 42
    3e48:	0e 94 75 0c 	call	0x18ea	; 0x18ea <OneButton::tick()>
    3e4c:	8a e6       	ldi	r24, 0x6A	; 106
    3e4e:	9a e2       	ldi	r25, 0x2A	; 42
    3e50:	0e 94 75 0c 	call	0x18ea	; 0x18ea <OneButton::tick()>
    3e54:	8b e4       	ldi	r24, 0x4B	; 75
    3e56:	9a e2       	ldi	r25, 0x2A	; 42
    3e58:	0e 94 75 0c 	call	0x18ea	; 0x18ea <OneButton::tick()>
    3e5c:	8c e2       	ldi	r24, 0x2C	; 44
    3e5e:	9a e2       	ldi	r25, 0x2A	; 42
DISP_REFRESH():
    3e60:	df 91       	pop	r29
    3e62:	cf 91       	pop	r28
    3e64:	1f 91       	pop	r17
    3e66:	0f 91       	pop	r16
Button_Tick_Update():
    3e68:	0c 94 75 0c 	jmp	0x18ea	; 0x18ea <OneButton::tick()>
DISPLAY_NUMBER2():
    3e6c:	f8 01       	movw	r30, r16
    3e6e:	ec 51       	subi	r30, 0x1C	; 28
    3e70:	f7 4d       	sbci	r31, 0xD7	; 215
    3e72:	01 90       	ld	r0, Z+
    3e74:	f0 81       	ld	r31, Z
    3e76:	e0 2d       	mov	r30, r0
    3e78:	ea 57       	subi	r30, 0x7A	; 122
    3e7a:	f0 45       	sbci	r31, 0x50	; 80
    3e7c:	40 81       	ld	r20, Z
    3e7e:	82 cf       	rjmp	.-252    	; 0x3d84 <DISP_REFRESH()+0x76>
    3e80:	10 92 27 28 	sts	0x2827, r1	; 0x802827 <count2>
    3e84:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <count2+0x1>
    3e88:	94 cf       	rjmp	.-216    	; 0x3db2 <DISP_REFRESH()+0xa4>
DISPLAY_NUMBER1():
    3e8a:	f8 01       	movw	r30, r16
    3e8c:	e4 51       	subi	r30, 0x14	; 20
    3e8e:	f7 4d       	sbci	r31, 0xD7	; 215
    3e90:	01 90       	ld	r0, Z+
    3e92:	f0 81       	ld	r31, Z
    3e94:	e0 2d       	mov	r30, r0
    3e96:	ea 57       	subi	r30, 0x7A	; 122
    3e98:	f0 45       	sbci	r31, 0x50	; 80
    3e9a:	40 81       	ld	r20, Z
    3e9c:	bd cf       	rjmp	.-134    	; 0x3e18 <DISP_REFRESH()+0x10a>
    3e9e:	10 92 29 28 	sts	0x2829, r1	; 0x802829 <count1>
    3ea2:	10 92 2a 28 	sts	0x282A, r1	; 0x80282a <count1+0x1>
    3ea6:	ce cf       	rjmp	.-100    	; 0x3e44 <DISP_REFRESH()+0x136>

00003ea8 <__vector_32>:
__vector_32():
    3ea8:	1f 92       	push	r1
    3eaa:	0f 92       	push	r0
    3eac:	0f b6       	in	r0, 0x3f	; 63
    3eae:	0f 92       	push	r0
    3eb0:	11 24       	eor	r1, r1
    3eb2:	2f 93       	push	r18
    3eb4:	3f 93       	push	r19
    3eb6:	4f 93       	push	r20
    3eb8:	5f 93       	push	r21
    3eba:	6f 93       	push	r22
    3ebc:	7f 93       	push	r23
    3ebe:	8f 93       	push	r24
    3ec0:	9f 93       	push	r25
    3ec2:	af 93       	push	r26
    3ec4:	bf 93       	push	r27
    3ec6:	ef 93       	push	r30
    3ec8:	ff 93       	push	r31
    3eca:	8f e3       	ldi	r24, 0x3F	; 63
    3ecc:	99 e2       	ldi	r25, 0x29	; 41
    3ece:	0e 94 75 07 	call	0xeea	; 0xeea <UartClass::_tx_data_empty_irq()>
    3ed2:	ff 91       	pop	r31
    3ed4:	ef 91       	pop	r30
    3ed6:	bf 91       	pop	r27
    3ed8:	af 91       	pop	r26
    3eda:	9f 91       	pop	r25
    3edc:	8f 91       	pop	r24
    3ede:	7f 91       	pop	r23
    3ee0:	6f 91       	pop	r22
    3ee2:	5f 91       	pop	r21
    3ee4:	4f 91       	pop	r20
    3ee6:	3f 91       	pop	r19
    3ee8:	2f 91       	pop	r18
    3eea:	0f 90       	pop	r0
    3eec:	0f be       	out	0x3f, r0	; 63
    3eee:	0f 90       	pop	r0
    3ef0:	1f 90       	pop	r1
    3ef2:	18 95       	reti

00003ef4 <__vector_31>:
__vector_31():
    3ef4:	1f 92       	push	r1
    3ef6:	0f 92       	push	r0
    3ef8:	0f b6       	in	r0, 0x3f	; 63
    3efa:	0f 92       	push	r0
    3efc:	11 24       	eor	r1, r1
    3efe:	2f 93       	push	r18
    3f00:	8f 93       	push	r24
    3f02:	9f 93       	push	r25
    3f04:	ef 93       	push	r30
    3f06:	ff 93       	push	r31
_rx_complete_irq():
    3f08:	e0 91 4b 29 	lds	r30, 0x294B	; 0x80294b <Serial2+0xc>
    3f0c:	f0 91 4c 29 	lds	r31, 0x294C	; 0x80294c <Serial2+0xd>
    3f10:	81 81       	ldd	r24, Z+1	; 0x01
    3f12:	81 fd       	sbrc	r24, 1
    3f14:	1b c0       	rjmp	.+54     	; 0x3f4c <__vector_31+0x58>
    3f16:	90 81       	ld	r25, Z
    3f18:	80 91 55 29 	lds	r24, 0x2955	; 0x802955 <Serial2+0x16>
    3f1c:	8f 5f       	subi	r24, 0xFF	; 255
    3f1e:	8f 73       	andi	r24, 0x3F	; 63
    3f20:	20 91 56 29 	lds	r18, 0x2956	; 0x802956 <Serial2+0x17>
    3f24:	82 17       	cp	r24, r18
    3f26:	41 f0       	breq	.+16     	; 0x3f38 <__vector_31+0x44>
    3f28:	e0 91 55 29 	lds	r30, 0x2955	; 0x802955 <Serial2+0x16>
    3f2c:	f0 e0       	ldi	r31, 0x00	; 0
    3f2e:	e1 5c       	subi	r30, 0xC1	; 193
    3f30:	f6 4d       	sbci	r31, 0xD6	; 214
    3f32:	95 8f       	std	Z+29, r25	; 0x1d
    3f34:	80 93 55 29 	sts	0x2955, r24	; 0x802955 <Serial2+0x16>
__vector_31():
    3f38:	ff 91       	pop	r31
    3f3a:	ef 91       	pop	r30
    3f3c:	9f 91       	pop	r25
    3f3e:	8f 91       	pop	r24
    3f40:	2f 91       	pop	r18
    3f42:	0f 90       	pop	r0
    3f44:	0f be       	out	0x3f, r0	; 63
    3f46:	0f 90       	pop	r0
    3f48:	1f 90       	pop	r1
    3f4a:	18 95       	reti
_rx_complete_irq():
    3f4c:	80 81       	ld	r24, Z
    3f4e:	f4 cf       	rjmp	.-24     	; 0x3f38 <__vector_31+0x44>

00003f50 <__vector_25>:
__vector_25():
    3f50:	1f 92       	push	r1
    3f52:	0f 92       	push	r0
    3f54:	0f b6       	in	r0, 0x3f	; 63
    3f56:	0f 92       	push	r0
    3f58:	11 24       	eor	r1, r1
    3f5a:	8f 93       	push	r24
    3f5c:	9f 93       	push	r25
    3f5e:	af 93       	push	r26
    3f60:	bf 93       	push	r27
    3f62:	80 91 2b 28 	lds	r24, 0x282B	; 0x80282b <timer_millis>
    3f66:	90 91 2c 28 	lds	r25, 0x282C	; 0x80282c <timer_millis+0x1>
    3f6a:	a0 91 2d 28 	lds	r26, 0x282D	; 0x80282d <timer_millis+0x2>
    3f6e:	b0 91 2e 28 	lds	r27, 0x282E	; 0x80282e <timer_millis+0x3>
    3f72:	01 96       	adiw	r24, 0x01	; 1
    3f74:	a1 1d       	adc	r26, r1
    3f76:	b1 1d       	adc	r27, r1
    3f78:	80 93 2b 28 	sts	0x282B, r24	; 0x80282b <timer_millis>
    3f7c:	90 93 2c 28 	sts	0x282C, r25	; 0x80282c <timer_millis+0x1>
    3f80:	a0 93 2d 28 	sts	0x282D, r26	; 0x80282d <timer_millis+0x2>
    3f84:	b0 93 2e 28 	sts	0x282E, r27	; 0x80282e <timer_millis+0x3>
    3f88:	81 e0       	ldi	r24, 0x01	; 1
    3f8a:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    3f8e:	bf 91       	pop	r27
    3f90:	af 91       	pop	r26
    3f92:	9f 91       	pop	r25
    3f94:	8f 91       	pop	r24
    3f96:	0f 90       	pop	r0
    3f98:	0f be       	out	0x3f, r0	; 63
    3f9a:	0f 90       	pop	r0
    3f9c:	1f 90       	pop	r1
    3f9e:	18 95       	reti

00003fa0 <__vector_7>:
__vector_7():
    3fa0:	1f 92       	push	r1
    3fa2:	0f 92       	push	r0
    3fa4:	0f b6       	in	r0, 0x3f	; 63
    3fa6:	0f 92       	push	r0
    3fa8:	11 24       	eor	r1, r1
    3faa:	2f 93       	push	r18
    3fac:	3f 93       	push	r19
    3fae:	4f 93       	push	r20
    3fb0:	5f 93       	push	r21
    3fb2:	6f 93       	push	r22
    3fb4:	7f 93       	push	r23
    3fb6:	8f 93       	push	r24
    3fb8:	9f 93       	push	r25
    3fba:	af 93       	push	r26
    3fbc:	bf 93       	push	r27
    3fbe:	ef 93       	push	r30
    3fc0:	ff 93       	push	r31
TICKER_UPDATE():
    3fc2:	80 e8       	ldi	r24, 0x80	; 128
    3fc4:	9b e2       	ldi	r25, 0x2B	; 43
    3fc6:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
PID_Tick_Update():
    3fca:	83 ec       	ldi	r24, 0xC3	; 195
    3fcc:	9a e2       	ldi	r25, 0x2A	; 42
    3fce:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
Rtd_Temp_Update():
    3fd2:	89 ef       	ldi	r24, 0xF9	; 249
    3fd4:	9a e2       	ldi	r25, 0x2A	; 42
    3fd6:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
TICKER_UPDATE():
    3fda:	85 e6       	ldi	r24, 0x65	; 101
    3fdc:	9b e2       	ldi	r25, 0x2B	; 43
    3fde:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
    3fe2:	8a e4       	ldi	r24, 0x4A	; 74
    3fe4:	9b e2       	ldi	r25, 0x2B	; 43
    3fe6:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
    3fea:	8f e2       	ldi	r24, 0x2F	; 47
    3fec:	9b e2       	ldi	r25, 0x2B	; 43
    3fee:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
    3ff2:	84 e1       	ldi	r24, 0x14	; 20
    3ff4:	9b e2       	ldi	r25, 0x2B	; 43
    3ff6:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
__vector_7():
    3ffa:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    3ffe:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    4002:	01 96       	adiw	r24, 0x01	; 1
    4004:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
    4008:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
TIME_CAL():
    400c:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    4010:	88 23       	and	r24, r24
    4012:	81 f1       	breq	.+96     	; 0x4074 <__RODATA_PM_OFFSET__+0x74>
    4014:	80 91 10 28 	lds	r24, 0x2810	; 0x802810 <__data_end>
    4018:	90 91 11 28 	lds	r25, 0x2811	; 0x802811 <__data_end+0x1>
    401c:	01 96       	adiw	r24, 0x01	; 1
    401e:	80 93 10 28 	sts	0x2810, r24	; 0x802810 <__data_end>
    4022:	90 93 11 28 	sts	0x2811, r25	; 0x802811 <__data_end+0x1>
    4026:	80 3b       	cpi	r24, 0xB0	; 176
    4028:	9e 40       	sbci	r25, 0x0E	; 14
    402a:	21 f5       	brne	.+72     	; 0x4074 <__RODATA_PM_OFFSET__+0x74>
    402c:	80 91 48 28 	lds	r24, 0x2848	; 0x802848 <actualRunMin>
    4030:	90 91 49 28 	lds	r25, 0x2849	; 0x802849 <actualRunMin+0x1>
    4034:	a0 91 4a 28 	lds	r26, 0x284A	; 0x80284a <actualRunMin+0x2>
    4038:	b0 91 4b 28 	lds	r27, 0x284B	; 0x80284b <actualRunMin+0x3>
    403c:	01 96       	adiw	r24, 0x01	; 1
    403e:	a1 1d       	adc	r26, r1
    4040:	b1 1d       	adc	r27, r1
    4042:	80 93 48 28 	sts	0x2848, r24	; 0x802848 <actualRunMin>
    4046:	90 93 49 28 	sts	0x2849, r25	; 0x802849 <actualRunMin+0x1>
    404a:	a0 93 4a 28 	sts	0x284A, r26	; 0x80284a <actualRunMin+0x2>
    404e:	b0 93 4b 28 	sts	0x284B, r27	; 0x80284b <actualRunMin+0x3>
    4052:	80 91 8c 28 	lds	r24, 0x288C	; 0x80288c <SET_MIN>
    4056:	90 91 8d 28 	lds	r25, 0x288D	; 0x80288d <SET_MIN+0x1>
    405a:	01 97       	sbiw	r24, 0x01	; 1
    405c:	80 93 8c 28 	sts	0x288C, r24	; 0x80288c <SET_MIN>
    4060:	90 93 8d 28 	sts	0x288D, r25	; 0x80288d <SET_MIN+0x1>
    4064:	10 92 10 28 	sts	0x2810, r1	; 0x802810 <__data_end>
    4068:	10 92 11 28 	sts	0x2811, r1	; 0x802811 <__data_end+0x1>
    406c:	89 2b       	or	r24, r25
    406e:	11 f4       	brne	.+4      	; 0x4074 <__RODATA_PM_OFFSET__+0x74>
    4070:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <COUNTDOWN_START>
__vector_7():
    4074:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    4078:	88 23       	and	r24, r24
    407a:	79 f0       	breq	.+30     	; 0x409a <__RODATA_PM_OFFSET__+0x9a>
    407c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4080:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    4084:	42 97       	sbiw	r24, 0x12	; 18
    4086:	49 f4       	brne	.+18     	; 0x409a <__RODATA_PM_OFFSET__+0x9a>
    4088:	80 91 2f 28 	lds	r24, 0x282F	; 0x80282f <currentMillis>
    408c:	90 91 30 28 	lds	r25, 0x2830	; 0x802830 <currentMillis+0x1>
    4090:	01 96       	adiw	r24, 0x01	; 1
    4092:	80 93 2f 28 	sts	0x282F, r24	; 0x80282f <currentMillis>
    4096:	90 93 30 28 	sts	0x2830, r25	; 0x802830 <currentMillis+0x1>
    409a:	81 e0       	ldi	r24, 0x01	; 1
    409c:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    40a0:	ff 91       	pop	r31
    40a2:	ef 91       	pop	r30
    40a4:	bf 91       	pop	r27
    40a6:	af 91       	pop	r26
    40a8:	9f 91       	pop	r25
    40aa:	8f 91       	pop	r24
    40ac:	7f 91       	pop	r23
    40ae:	6f 91       	pop	r22
    40b0:	5f 91       	pop	r21
    40b2:	4f 91       	pop	r20
    40b4:	3f 91       	pop	r19
    40b6:	2f 91       	pop	r18
    40b8:	0f 90       	pop	r0
    40ba:	0f be       	out	0x3f, r0	; 63
    40bc:	0f 90       	pop	r0
    40be:	1f 90       	pop	r1
    40c0:	18 95       	reti

000040c2 <global constructors keyed to 65535_0_Butn.cpp.o.4112>:
_GLOBAL__I_65535_0_Butn.cpp.o.4112():
    40c2:	4f 92       	push	r4
    40c4:	5f 92       	push	r5
    40c6:	6f 92       	push	r6
    40c8:	7f 92       	push	r7
    40ca:	8f 92       	push	r8
    40cc:	9f 92       	push	r9
    40ce:	af 92       	push	r10
    40d0:	bf 92       	push	r11
    40d2:	cf 92       	push	r12
    40d4:	df 92       	push	r13
    40d6:	ef 92       	push	r14
    40d8:	ff 92       	push	r15
    40da:	10 92 41 29 	sts	0x2941, r1	; 0x802941 <Serial2+0x2>
    40de:	10 92 42 29 	sts	0x2942, r1	; 0x802942 <Serial2+0x3>
    40e2:	88 ee       	ldi	r24, 0xE8	; 232
    40e4:	93 e0       	ldi	r25, 0x03	; 3
    40e6:	a0 e0       	ldi	r26, 0x00	; 0
    40e8:	b0 e0       	ldi	r27, 0x00	; 0
    40ea:	80 93 43 29 	sts	0x2943, r24	; 0x802943 <Serial2+0x4>
    40ee:	90 93 44 29 	sts	0x2944, r25	; 0x802944 <Serial2+0x5>
    40f2:	a0 93 45 29 	sts	0x2945, r26	; 0x802945 <Serial2+0x6>
    40f6:	b0 93 46 29 	sts	0x2946, r27	; 0x802946 <Serial2+0x7>
    40fa:	80 ed       	ldi	r24, 0xD0	; 208
    40fc:	90 eb       	ldi	r25, 0xB0	; 176
    40fe:	80 93 3f 29 	sts	0x293F, r24	; 0x80293f <Serial2>
    4102:	90 93 40 29 	sts	0x2940, r25	; 0x802940 <Serial2+0x1>
    4106:	80 e4       	ldi	r24, 0x40	; 64
    4108:	98 e0       	ldi	r25, 0x08	; 8
    410a:	80 93 4b 29 	sts	0x294B, r24	; 0x80294b <Serial2+0xc>
    410e:	90 93 4c 29 	sts	0x294C, r25	; 0x80294c <Serial2+0xd>
    4112:	83 e2       	ldi	r24, 0x23	; 35
    4114:	80 93 4d 29 	sts	0x294D, r24	; 0x80294d <Serial2+0xe>
    4118:	82 e2       	ldi	r24, 0x22	; 34
    411a:	80 93 4e 29 	sts	0x294E, r24	; 0x80294e <Serial2+0xf>
    411e:	10 92 4f 29 	sts	0x294F, r1	; 0x80294f <Serial2+0x10>
    4122:	87 e2       	ldi	r24, 0x27	; 39
    4124:	80 93 50 29 	sts	0x2950, r24	; 0x802950 <Serial2+0x11>
    4128:	86 e2       	ldi	r24, 0x26	; 38
    412a:	80 93 51 29 	sts	0x2951, r24	; 0x802951 <Serial2+0x12>
    412e:	80 e1       	ldi	r24, 0x10	; 16
    4130:	80 93 52 29 	sts	0x2952, r24	; 0x802952 <Serial2+0x13>
    4134:	10 92 53 29 	sts	0x2953, r1	; 0x802953 <Serial2+0x14>
    4138:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <Serial2+0x15>
    413c:	10 92 55 29 	sts	0x2955, r1	; 0x802955 <Serial2+0x16>
    4140:	10 92 56 29 	sts	0x2956, r1	; 0x802956 <Serial2+0x17>
    4144:	10 92 57 29 	sts	0x2957, r1	; 0x802957 <Serial2+0x18>
    4148:	10 92 58 29 	sts	0x2958, r1	; 0x802958 <Serial2+0x19>
    414c:	80 e2       	ldi	r24, 0x20	; 32
    414e:	80 93 59 29 	sts	0x2959, r24	; 0x802959 <Serial2+0x1a>
    4152:	10 92 5a 29 	sts	0x295A, r1	; 0x80295a <Serial2+0x1b>
    4156:	10 92 5b 29 	sts	0x295B, r1	; 0x80295b <Serial2+0x1c>
    415a:	82 e0       	ldi	r24, 0x02	; 2
    415c:	90 e0       	ldi	r25, 0x00	; 0
    415e:	80 93 a4 2b 	sts	0x2BA4, r24	; 0x802ba4 <DISP+0x9>
    4162:	90 93 a5 2b 	sts	0x2BA5, r25	; 0x802ba5 <DISP+0xa>
    4166:	80 e8       	ldi	r24, 0x80	; 128
    4168:	9c e0       	ldi	r25, 0x0C	; 12
    416a:	a0 e0       	ldi	r26, 0x00	; 0
    416c:	b0 e0       	ldi	r27, 0x00	; 0
    416e:	80 93 9c 2b 	sts	0x2B9C, r24	; 0x802b9c <DISP+0x1>
    4172:	90 93 9d 2b 	sts	0x2B9D, r25	; 0x802b9d <DISP+0x2>
    4176:	a0 93 9e 2b 	sts	0x2B9E, r26	; 0x802b9e <DISP+0x3>
    417a:	b0 93 9f 2b 	sts	0x2B9F, r27	; 0x802b9f <DISP+0x4>
    417e:	10 92 a0 2b 	sts	0x2BA0, r1	; 0x802ba0 <DISP+0x5>
    4182:	10 92 a1 2b 	sts	0x2BA1, r1	; 0x802ba1 <DISP+0x6>
    4186:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <DISP+0x7>
    418a:	10 92 a3 2b 	sts	0x2BA3, r1	; 0x802ba3 <DISP+0x8>
    418e:	87 e8       	ldi	r24, 0x87	; 135
    4190:	9e e1       	ldi	r25, 0x1E	; 30
    4192:	80 93 ac 2b 	sts	0x2BAC, r24	; 0x802bac <DISP+0x11>
    4196:	90 93 ad 2b 	sts	0x2BAD, r25	; 0x802bad <DISP+0x12>
    419a:	10 92 9b 2b 	sts	0x2B9B, r1	; 0x802b9b <DISP>
    419e:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <DISP+0x13>
    41a2:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <DISP+0x14>
    41a6:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <DISP+0x15>
    41aa:	10 92 b1 2b 	sts	0x2BB1, r1	; 0x802bb1 <DISP+0x16>
    41ae:	10 92 a6 2b 	sts	0x2BA6, r1	; 0x802ba6 <DISP+0xb>
    41b2:	10 92 a7 2b 	sts	0x2BA7, r1	; 0x802ba7 <DISP+0xc>
    41b6:	10 92 a8 2b 	sts	0x2BA8, r1	; 0x802ba8 <DISP+0xd>
    41ba:	10 92 a9 2b 	sts	0x2BA9, r1	; 0x802ba9 <DISP+0xe>
    41be:	10 92 89 2b 	sts	0x2B89, r1	; 0x802b89 <BUZZ+0x9>
    41c2:	10 92 8a 2b 	sts	0x2B8A, r1	; 0x802b8a <BUZZ+0xa>
    41c6:	80 ea       	ldi	r24, 0xA0	; 160
    41c8:	96 e8       	ldi	r25, 0x86	; 134
    41ca:	a1 e0       	ldi	r26, 0x01	; 1
    41cc:	b0 e0       	ldi	r27, 0x00	; 0
    41ce:	80 93 81 2b 	sts	0x2B81, r24	; 0x802b81 <BUZZ+0x1>
    41d2:	90 93 82 2b 	sts	0x2B82, r25	; 0x802b82 <BUZZ+0x2>
    41d6:	a0 93 83 2b 	sts	0x2B83, r26	; 0x802b83 <BUZZ+0x3>
    41da:	b0 93 84 2b 	sts	0x2B84, r27	; 0x802b84 <BUZZ+0x4>
    41de:	41 e0       	ldi	r20, 0x01	; 1
    41e0:	50 e0       	ldi	r21, 0x00	; 0
    41e2:	60 e0       	ldi	r22, 0x00	; 0
    41e4:	70 e0       	ldi	r23, 0x00	; 0
    41e6:	40 93 85 2b 	sts	0x2B85, r20	; 0x802b85 <BUZZ+0x5>
    41ea:	50 93 86 2b 	sts	0x2B86, r21	; 0x802b86 <BUZZ+0x6>
    41ee:	60 93 87 2b 	sts	0x2B87, r22	; 0x802b87 <BUZZ+0x7>
    41f2:	70 93 88 2b 	sts	0x2B88, r23	; 0x802b88 <BUZZ+0x8>
    41f6:	86 e4       	ldi	r24, 0x46	; 70
    41f8:	9d e0       	ldi	r25, 0x0D	; 13
    41fa:	80 93 91 2b 	sts	0x2B91, r24	; 0x802b91 <BUZZ+0x11>
    41fe:	90 93 92 2b 	sts	0x2B92, r25	; 0x802b92 <BUZZ+0x12>
    4202:	10 92 80 2b 	sts	0x2B80, r1	; 0x802b80 <BUZZ>
    4206:	10 92 93 2b 	sts	0x2B93, r1	; 0x802b93 <BUZZ+0x13>
    420a:	10 92 94 2b 	sts	0x2B94, r1	; 0x802b94 <BUZZ+0x14>
    420e:	10 92 95 2b 	sts	0x2B95, r1	; 0x802b95 <BUZZ+0x15>
    4212:	10 92 96 2b 	sts	0x2B96, r1	; 0x802b96 <BUZZ+0x16>
    4216:	10 92 8b 2b 	sts	0x2B8B, r1	; 0x802b8b <BUZZ+0xb>
    421a:	10 92 8c 2b 	sts	0x2B8C, r1	; 0x802b8c <BUZZ+0xc>
    421e:	10 92 8d 2b 	sts	0x2B8D, r1	; 0x802b8d <BUZZ+0xd>
    4222:	10 92 8e 2b 	sts	0x2B8E, r1	; 0x802b8e <BUZZ+0xe>
    4226:	10 92 6e 2b 	sts	0x2B6E, r1	; 0x802b6e <BUZZ_TICK1+0x9>
    422a:	10 92 6f 2b 	sts	0x2B6F, r1	; 0x802b6f <BUZZ_TICK1+0xa>
    422e:	80 e8       	ldi	r24, 0x80	; 128
    4230:	94 e8       	ldi	r25, 0x84	; 132
    4232:	ae e1       	ldi	r26, 0x1E	; 30
    4234:	b0 e0       	ldi	r27, 0x00	; 0
    4236:	80 93 66 2b 	sts	0x2B66, r24	; 0x802b66 <BUZZ_TICK1+0x1>
    423a:	90 93 67 2b 	sts	0x2B67, r25	; 0x802b67 <BUZZ_TICK1+0x2>
    423e:	a0 93 68 2b 	sts	0x2B68, r26	; 0x802b68 <BUZZ_TICK1+0x3>
    4242:	b0 93 69 2b 	sts	0x2B69, r27	; 0x802b69 <BUZZ_TICK1+0x4>
    4246:	10 92 6a 2b 	sts	0x2B6A, r1	; 0x802b6a <BUZZ_TICK1+0x5>
    424a:	10 92 6b 2b 	sts	0x2B6B, r1	; 0x802b6b <BUZZ_TICK1+0x6>
    424e:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1+0x7>
    4252:	10 92 6d 2b 	sts	0x2B6D, r1	; 0x802b6d <BUZZ_TICK1+0x8>
    4256:	22 e5       	ldi	r18, 0x52	; 82
    4258:	3d e0       	ldi	r19, 0x0D	; 13
    425a:	20 93 76 2b 	sts	0x2B76, r18	; 0x802b76 <BUZZ_TICK1+0x11>
    425e:	30 93 77 2b 	sts	0x2B77, r19	; 0x802b77 <BUZZ_TICK1+0x12>
    4262:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK1>
    4266:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0x13>
    426a:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0x14>
    426e:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0x15>
    4272:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0x16>
    4276:	10 92 70 2b 	sts	0x2B70, r1	; 0x802b70 <BUZZ_TICK1+0xb>
    427a:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0xc>
    427e:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0xd>
    4282:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0xe>
    4286:	10 92 53 2b 	sts	0x2B53, r1	; 0x802b53 <BUZZ_TICK2+0x9>
    428a:	10 92 54 2b 	sts	0x2B54, r1	; 0x802b54 <BUZZ_TICK2+0xa>
    428e:	20 e4       	ldi	r18, 0x40	; 64
    4290:	c2 2e       	mov	r12, r18
    4292:	22 e4       	ldi	r18, 0x42	; 66
    4294:	d2 2e       	mov	r13, r18
    4296:	2f e0       	ldi	r18, 0x0F	; 15
    4298:	e2 2e       	mov	r14, r18
    429a:	f1 2c       	mov	r15, r1
    429c:	c0 92 4b 2b 	sts	0x2B4B, r12	; 0x802b4b <BUZZ_TICK2+0x1>
    42a0:	d0 92 4c 2b 	sts	0x2B4C, r13	; 0x802b4c <BUZZ_TICK2+0x2>
    42a4:	e0 92 4d 2b 	sts	0x2B4D, r14	; 0x802b4d <BUZZ_TICK2+0x3>
    42a8:	f0 92 4e 2b 	sts	0x2B4E, r15	; 0x802b4e <BUZZ_TICK2+0x4>
    42ac:	40 93 4f 2b 	sts	0x2B4F, r20	; 0x802b4f <BUZZ_TICK2+0x5>
    42b0:	50 93 50 2b 	sts	0x2B50, r21	; 0x802b50 <BUZZ_TICK2+0x6>
    42b4:	60 93 51 2b 	sts	0x2B51, r22	; 0x802b51 <BUZZ_TICK2+0x7>
    42b8:	70 93 52 2b 	sts	0x2B52, r23	; 0x802b52 <BUZZ_TICK2+0x8>
    42bc:	28 e5       	ldi	r18, 0x58	; 88
    42be:	3d e0       	ldi	r19, 0x0D	; 13
    42c0:	20 93 5b 2b 	sts	0x2B5B, r18	; 0x802b5b <BUZZ_TICK2+0x11>
    42c4:	30 93 5c 2b 	sts	0x2B5C, r19	; 0x802b5c <BUZZ_TICK2+0x12>
    42c8:	10 92 4a 2b 	sts	0x2B4A, r1	; 0x802b4a <BUZZ_TICK2>
    42cc:	10 92 5d 2b 	sts	0x2B5D, r1	; 0x802b5d <BUZZ_TICK2+0x13>
    42d0:	10 92 5e 2b 	sts	0x2B5E, r1	; 0x802b5e <BUZZ_TICK2+0x14>
    42d4:	10 92 5f 2b 	sts	0x2B5F, r1	; 0x802b5f <BUZZ_TICK2+0x15>
    42d8:	10 92 60 2b 	sts	0x2B60, r1	; 0x802b60 <BUZZ_TICK2+0x16>
    42dc:	10 92 55 2b 	sts	0x2B55, r1	; 0x802b55 <BUZZ_TICK2+0xb>
    42e0:	10 92 56 2b 	sts	0x2B56, r1	; 0x802b56 <BUZZ_TICK2+0xc>
    42e4:	10 92 57 2b 	sts	0x2B57, r1	; 0x802b57 <BUZZ_TICK2+0xd>
    42e8:	10 92 58 2b 	sts	0x2B58, r1	; 0x802b58 <BUZZ_TICK2+0xe>
    42ec:	10 92 38 2b 	sts	0x2B38, r1	; 0x802b38 <Blink_LED_ON+0x9>
    42f0:	10 92 39 2b 	sts	0x2B39, r1	; 0x802b39 <Blink_LED_ON+0xa>
    42f4:	40 ee       	ldi	r20, 0xE0	; 224
    42f6:	53 e9       	ldi	r21, 0x93	; 147
    42f8:	64 e0       	ldi	r22, 0x04	; 4
    42fa:	70 e0       	ldi	r23, 0x00	; 0
    42fc:	40 93 30 2b 	sts	0x2B30, r20	; 0x802b30 <Blink_LED_ON+0x1>
    4300:	50 93 31 2b 	sts	0x2B31, r21	; 0x802b31 <Blink_LED_ON+0x2>
    4304:	60 93 32 2b 	sts	0x2B32, r22	; 0x802b32 <Blink_LED_ON+0x3>
    4308:	70 93 33 2b 	sts	0x2B33, r23	; 0x802b33 <Blink_LED_ON+0x4>
    430c:	10 92 34 2b 	sts	0x2B34, r1	; 0x802b34 <Blink_LED_ON+0x5>
    4310:	10 92 35 2b 	sts	0x2B35, r1	; 0x802b35 <Blink_LED_ON+0x6>
    4314:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <Blink_LED_ON+0x7>
    4318:	10 92 37 2b 	sts	0x2B37, r1	; 0x802b37 <Blink_LED_ON+0x8>
    431c:	28 e7       	ldi	r18, 0x78	; 120
    431e:	3d e0       	ldi	r19, 0x0D	; 13
    4320:	20 93 40 2b 	sts	0x2B40, r18	; 0x802b40 <Blink_LED_ON+0x11>
    4324:	30 93 41 2b 	sts	0x2B41, r19	; 0x802b41 <Blink_LED_ON+0x12>
    4328:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <Blink_LED_ON>
    432c:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <Blink_LED_ON+0x13>
    4330:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <Blink_LED_ON+0x14>
    4334:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <Blink_LED_ON+0x15>
    4338:	10 92 45 2b 	sts	0x2B45, r1	; 0x802b45 <Blink_LED_ON+0x16>
    433c:	10 92 3a 2b 	sts	0x2B3A, r1	; 0x802b3a <Blink_LED_ON+0xb>
    4340:	10 92 3b 2b 	sts	0x2B3B, r1	; 0x802b3b <Blink_LED_ON+0xc>
    4344:	10 92 3c 2b 	sts	0x2B3C, r1	; 0x802b3c <Blink_LED_ON+0xd>
    4348:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <Blink_LED_ON+0xe>
    434c:	10 92 1d 2b 	sts	0x2B1D, r1	; 0x802b1d <Blink_LED_OFF+0x9>
    4350:	10 92 1e 2b 	sts	0x2B1E, r1	; 0x802b1e <Blink_LED_OFF+0xa>
    4354:	40 ec       	ldi	r20, 0xC0	; 192
    4356:	57 e2       	ldi	r21, 0x27	; 39
    4358:	69 e0       	ldi	r22, 0x09	; 9
    435a:	70 e0       	ldi	r23, 0x00	; 0
    435c:	40 93 15 2b 	sts	0x2B15, r20	; 0x802b15 <Blink_LED_OFF+0x1>
    4360:	50 93 16 2b 	sts	0x2B16, r21	; 0x802b16 <Blink_LED_OFF+0x2>
    4364:	60 93 17 2b 	sts	0x2B17, r22	; 0x802b17 <Blink_LED_OFF+0x3>
    4368:	70 93 18 2b 	sts	0x2B18, r23	; 0x802b18 <Blink_LED_OFF+0x4>
    436c:	10 92 19 2b 	sts	0x2B19, r1	; 0x802b19 <Blink_LED_OFF+0x5>
    4370:	10 92 1a 2b 	sts	0x2B1A, r1	; 0x802b1a <Blink_LED_OFF+0x6>
    4374:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Blink_LED_OFF+0x7>
    4378:	10 92 1c 2b 	sts	0x2B1C, r1	; 0x802b1c <Blink_LED_OFF+0x8>
    437c:	22 e7       	ldi	r18, 0x72	; 114
    437e:	3d e0       	ldi	r19, 0x0D	; 13
    4380:	20 93 25 2b 	sts	0x2B25, r18	; 0x802b25 <Blink_LED_OFF+0x11>
    4384:	30 93 26 2b 	sts	0x2B26, r19	; 0x802b26 <Blink_LED_OFF+0x12>
    4388:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <Blink_LED_OFF>
    438c:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <Blink_LED_OFF+0x13>
    4390:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <Blink_LED_OFF+0x14>
    4394:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <Blink_LED_OFF+0x15>
    4398:	10 92 2a 2b 	sts	0x2B2A, r1	; 0x802b2a <Blink_LED_OFF+0x16>
    439c:	10 92 1f 2b 	sts	0x2B1F, r1	; 0x802b1f <Blink_LED_OFF+0xb>
    43a0:	10 92 20 2b 	sts	0x2B20, r1	; 0x802b20 <Blink_LED_OFF+0xc>
    43a4:	10 92 21 2b 	sts	0x2B21, r1	; 0x802b21 <Blink_LED_OFF+0xd>
    43a8:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <Blink_LED_OFF+0xe>
    43ac:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <TEMP_UPDATE+0x9>
    43b0:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <TEMP_UPDATE+0xa>
    43b4:	48 e4       	ldi	r20, 0x48	; 72
    43b6:	58 ee       	ldi	r21, 0xE8	; 232
    43b8:	61 e0       	ldi	r22, 0x01	; 1
    43ba:	70 e0       	ldi	r23, 0x00	; 0
    43bc:	40 93 fa 2a 	sts	0x2AFA, r20	; 0x802afa <TEMP_UPDATE+0x1>
    43c0:	50 93 fb 2a 	sts	0x2AFB, r21	; 0x802afb <TEMP_UPDATE+0x2>
    43c4:	60 93 fc 2a 	sts	0x2AFC, r22	; 0x802afc <TEMP_UPDATE+0x3>
    43c8:	70 93 fd 2a 	sts	0x2AFD, r23	; 0x802afd <TEMP_UPDATE+0x4>
    43cc:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <TEMP_UPDATE+0x5>
    43d0:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <TEMP_UPDATE+0x6>
    43d4:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <TEMP_UPDATE+0x7>
    43d8:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <TEMP_UPDATE+0x8>
    43dc:	21 e8       	ldi	r18, 0x81	; 129
    43de:	3d e0       	ldi	r19, 0x0D	; 13
    43e0:	20 93 0a 2b 	sts	0x2B0A, r18	; 0x802b0a <TEMP_UPDATE+0x11>
    43e4:	30 93 0b 2b 	sts	0x2B0B, r19	; 0x802b0b <TEMP_UPDATE+0x12>
    43e8:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <TEMP_UPDATE>
    43ec:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <TEMP_UPDATE+0x13>
    43f0:	10 92 0d 2b 	sts	0x2B0D, r1	; 0x802b0d <TEMP_UPDATE+0x14>
    43f4:	10 92 0e 2b 	sts	0x2B0E, r1	; 0x802b0e <TEMP_UPDATE+0x15>
    43f8:	10 92 0f 2b 	sts	0x2B0F, r1	; 0x802b0f <TEMP_UPDATE+0x16>
    43fc:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <TEMP_UPDATE+0xb>
    4400:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <TEMP_UPDATE+0xc>
    4404:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <TEMP_UPDATE+0xd>
    4408:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <TEMP_UPDATE+0xe>
    440c:	10 92 e7 2a 	sts	0x2AE7, r1	; 0x802ae7 <Alter_Disp+0x9>
    4410:	10 92 e8 2a 	sts	0x2AE8, r1	; 0x802ae8 <Alter_Disp+0xa>
    4414:	80 93 df 2a 	sts	0x2ADF, r24	; 0x802adf <Alter_Disp+0x1>
    4418:	90 93 e0 2a 	sts	0x2AE0, r25	; 0x802ae0 <Alter_Disp+0x2>
    441c:	a0 93 e1 2a 	sts	0x2AE1, r26	; 0x802ae1 <Alter_Disp+0x3>
    4420:	b0 93 e2 2a 	sts	0x2AE2, r27	; 0x802ae2 <Alter_Disp+0x4>
    4424:	10 92 e3 2a 	sts	0x2AE3, r1	; 0x802ae3 <Alter_Disp+0x5>
    4428:	10 92 e4 2a 	sts	0x2AE4, r1	; 0x802ae4 <Alter_Disp+0x6>
    442c:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <Alter_Disp+0x7>
    4430:	10 92 e6 2a 	sts	0x2AE6, r1	; 0x802ae6 <Alter_Disp+0x8>
    4434:	8d e7       	ldi	r24, 0x7D	; 125
    4436:	91 e0       	ldi	r25, 0x01	; 1
    4438:	80 93 ef 2a 	sts	0x2AEF, r24	; 0x802aef <Alter_Disp+0x11>
    443c:	90 93 f0 2a 	sts	0x2AF0, r25	; 0x802af0 <Alter_Disp+0x12>
    4440:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <Alter_Disp>
    4444:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <Alter_Disp+0x13>
    4448:	10 92 f2 2a 	sts	0x2AF2, r1	; 0x802af2 <Alter_Disp+0x14>
    444c:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <Alter_Disp+0x15>
    4450:	10 92 f4 2a 	sts	0x2AF4, r1	; 0x802af4 <Alter_Disp+0x16>
    4454:	10 92 e9 2a 	sts	0x2AE9, r1	; 0x802ae9 <Alter_Disp+0xb>
    4458:	10 92 ea 2a 	sts	0x2AEA, r1	; 0x802aea <Alter_Disp+0xc>
    445c:	10 92 eb 2a 	sts	0x2AEB, r1	; 0x802aeb <Alter_Disp+0xd>
    4460:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <Alter_Disp+0xe>
    4464:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <PID_EXE+0x9>
    4468:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <PID_EXE+0xa>
    446c:	80 e8       	ldi	r24, 0x80	; 128
    446e:	9a e1       	ldi	r25, 0x1A	; 26
    4470:	a6 e0       	ldi	r26, 0x06	; 6
    4472:	b0 e0       	ldi	r27, 0x00	; 0
    4474:	80 93 c4 2a 	sts	0x2AC4, r24	; 0x802ac4 <PID_EXE+0x1>
    4478:	90 93 c5 2a 	sts	0x2AC5, r25	; 0x802ac5 <PID_EXE+0x2>
    447c:	a0 93 c6 2a 	sts	0x2AC6, r26	; 0x802ac6 <PID_EXE+0x3>
    4480:	b0 93 c7 2a 	sts	0x2AC7, r27	; 0x802ac7 <PID_EXE+0x4>
    4484:	10 92 c8 2a 	sts	0x2AC8, r1	; 0x802ac8 <PID_EXE+0x5>
    4488:	10 92 c9 2a 	sts	0x2AC9, r1	; 0x802ac9 <PID_EXE+0x6>
    448c:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <PID_EXE+0x7>
    4490:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <PID_EXE+0x8>
    4494:	8a e4       	ldi	r24, 0x4A	; 74
    4496:	9e e0       	ldi	r25, 0x0E	; 14
    4498:	80 93 d4 2a 	sts	0x2AD4, r24	; 0x802ad4 <PID_EXE+0x11>
    449c:	90 93 d5 2a 	sts	0x2AD5, r25	; 0x802ad5 <PID_EXE+0x12>
    44a0:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE>
    44a4:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <PID_EXE+0x13>
    44a8:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <PID_EXE+0x14>
    44ac:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <PID_EXE+0x15>
    44b0:	10 92 d9 2a 	sts	0x2AD9, r1	; 0x802ad9 <PID_EXE+0x16>
    44b4:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <PID_EXE+0xb>
    44b8:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <PID_EXE+0xc>
    44bc:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <PID_EXE+0xd>
    44c0:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <PID_EXE+0xe>
    44c4:	c0 90 28 2a 	lds	r12, 0x2A28	; 0x802a28 <Kd>
    44c8:	d0 90 29 2a 	lds	r13, 0x2A29	; 0x802a29 <Kd+0x1>
    44cc:	e0 90 2a 2a 	lds	r14, 0x2A2A	; 0x802a2a <Kd+0x2>
    44d0:	f0 90 2b 2a 	lds	r15, 0x2A2B	; 0x802a2b <Kd+0x3>
    44d4:	80 90 24 2a 	lds	r8, 0x2A24	; 0x802a24 <Ki>
    44d8:	90 90 25 2a 	lds	r9, 0x2A25	; 0x802a25 <Ki+0x1>
    44dc:	a0 90 26 2a 	lds	r10, 0x2A26	; 0x802a26 <Ki+0x2>
    44e0:	b0 90 27 2a 	lds	r11, 0x2A27	; 0x802a27 <Ki+0x3>
    44e4:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    44e8:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    44ec:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    44f0:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    44f4:	80 ee       	ldi	r24, 0xE0	; 224
    44f6:	99 e2       	ldi	r25, 0x29	; 41
    44f8:	80 93 06 2a 	sts	0x2A06, r24	; 0x802a06 <myPID+0x1e>
    44fc:	90 93 07 2a 	sts	0x2A07, r25	; 0x802a07 <myPID+0x1f>
    4500:	84 ee       	ldi	r24, 0xE4	; 228
    4502:	99 e2       	ldi	r25, 0x29	; 41
    4504:	80 93 04 2a 	sts	0x2A04, r24	; 0x802a04 <myPID+0x1c>
    4508:	90 93 05 2a 	sts	0x2A05, r25	; 0x802a05 <myPID+0x1d>
    450c:	8c ed       	ldi	r24, 0xDC	; 220
    450e:	99 e2       	ldi	r25, 0x29	; 41
    4510:	80 93 08 2a 	sts	0x2A08, r24	; 0x802a08 <myPID+0x20>
    4514:	90 93 09 2a 	sts	0x2A09, r25	; 0x802a09 <myPID+0x21>
    4518:	10 92 22 2a 	sts	0x2A22, r1	; 0x802a22 <myPID+0x3a>
    451c:	10 92 1a 2a 	sts	0x2A1A, r1	; 0x802a1a <myPID+0x32>
    4520:	10 92 1b 2a 	sts	0x2A1B, r1	; 0x802a1b <myPID+0x33>
    4524:	10 92 1c 2a 	sts	0x2A1C, r1	; 0x802a1c <myPID+0x34>
    4528:	10 92 1d 2a 	sts	0x2A1D, r1	; 0x802a1d <myPID+0x35>
    452c:	80 e0       	ldi	r24, 0x00	; 0
    452e:	90 e0       	ldi	r25, 0x00	; 0
    4530:	af e7       	ldi	r26, 0x7F	; 127
    4532:	b3 e4       	ldi	r27, 0x43	; 67
    4534:	80 93 1e 2a 	sts	0x2A1E, r24	; 0x802a1e <myPID+0x36>
    4538:	90 93 1f 2a 	sts	0x2A1F, r25	; 0x802a1f <myPID+0x37>
    453c:	a0 93 20 2a 	sts	0x2A20, r26	; 0x802a20 <myPID+0x38>
    4540:	b0 93 21 2a 	sts	0x2A21, r27	; 0x802a21 <myPID+0x39>
    4544:	84 e6       	ldi	r24, 0x64	; 100
    4546:	90 e0       	ldi	r25, 0x00	; 0
    4548:	a0 e0       	ldi	r26, 0x00	; 0
    454a:	b0 e0       	ldi	r27, 0x00	; 0
    454c:	80 93 16 2a 	sts	0x2A16, r24	; 0x802a16 <myPID+0x2e>
    4550:	90 93 17 2a 	sts	0x2A17, r25	; 0x802a17 <myPID+0x2f>
    4554:	a0 93 18 2a 	sts	0x2A18, r26	; 0x802a18 <myPID+0x30>
    4558:	b0 93 19 2a 	sts	0x2A19, r27	; 0x802a19 <myPID+0x31>
    455c:	10 92 00 2a 	sts	0x2A00, r1	; 0x802a00 <myPID+0x18>
    4560:	10 92 01 2a 	sts	0x2A01, r1	; 0x802a01 <myPID+0x19>
    4564:	20 e0       	ldi	r18, 0x00	; 0
    4566:	30 e0       	ldi	r19, 0x00	; 0
    4568:	a9 01       	movw	r20, r18
    456a:	c3 01       	movw	r24, r6
    456c:	b2 01       	movw	r22, r4
    456e:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    4572:	87 fd       	sbrc	r24, 7
    4574:	5a c0       	rjmp	.+180    	; 0x462a <global constructors keyed to 65535_0_Butn.cpp.o.4112+0x568>
    4576:	20 e0       	ldi	r18, 0x00	; 0
    4578:	30 e0       	ldi	r19, 0x00	; 0
    457a:	a9 01       	movw	r20, r18
    457c:	c5 01       	movw	r24, r10
    457e:	b4 01       	movw	r22, r8
    4580:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    4584:	87 fd       	sbrc	r24, 7
    4586:	51 c0       	rjmp	.+162    	; 0x462a <global constructors keyed to 65535_0_Butn.cpp.o.4112+0x568>
    4588:	20 e0       	ldi	r18, 0x00	; 0
    458a:	30 e0       	ldi	r19, 0x00	; 0
    458c:	a9 01       	movw	r20, r18
    458e:	c7 01       	movw	r24, r14
    4590:	b6 01       	movw	r22, r12
    4592:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    4596:	87 fd       	sbrc	r24, 7
    4598:	48 c0       	rjmp	.+144    	; 0x462a <global constructors keyed to 65535_0_Butn.cpp.o.4112+0x568>
    459a:	81 e0       	ldi	r24, 0x01	; 1
    459c:	90 e0       	ldi	r25, 0x00	; 0
    459e:	80 93 02 2a 	sts	0x2A02, r24	; 0x802a02 <myPID+0x1a>
    45a2:	90 93 03 2a 	sts	0x2A03, r25	; 0x802a03 <myPID+0x1b>
    45a6:	80 93 23 2a 	sts	0x2A23, r24	; 0x802a23 <myPID+0x3b>
    45aa:	40 92 e8 29 	sts	0x29E8, r4	; 0x8029e8 <myPID>
    45ae:	50 92 e9 29 	sts	0x29E9, r5	; 0x8029e9 <myPID+0x1>
    45b2:	60 92 ea 29 	sts	0x29EA, r6	; 0x8029ea <myPID+0x2>
    45b6:	70 92 eb 29 	sts	0x29EB, r7	; 0x8029eb <myPID+0x3>
    45ba:	80 92 ec 29 	sts	0x29EC, r8	; 0x8029ec <myPID+0x4>
    45be:	90 92 ed 29 	sts	0x29ED, r9	; 0x8029ed <myPID+0x5>
    45c2:	a0 92 ee 29 	sts	0x29EE, r10	; 0x8029ee <myPID+0x6>
    45c6:	b0 92 ef 29 	sts	0x29EF, r11	; 0x8029ef <myPID+0x7>
    45ca:	c0 92 f0 29 	sts	0x29F0, r12	; 0x8029f0 <myPID+0x8>
    45ce:	d0 92 f1 29 	sts	0x29F1, r13	; 0x8029f1 <myPID+0x9>
    45d2:	e0 92 f2 29 	sts	0x29F2, r14	; 0x8029f2 <myPID+0xa>
    45d6:	f0 92 f3 29 	sts	0x29F3, r15	; 0x8029f3 <myPID+0xb>
    45da:	40 92 f4 29 	sts	0x29F4, r4	; 0x8029f4 <myPID+0xc>
    45de:	50 92 f5 29 	sts	0x29F5, r5	; 0x8029f5 <myPID+0xd>
    45e2:	60 92 f6 29 	sts	0x29F6, r6	; 0x8029f6 <myPID+0xe>
    45e6:	70 92 f7 29 	sts	0x29F7, r7	; 0x8029f7 <myPID+0xf>
    45ea:	2d ec       	ldi	r18, 0xCD	; 205
    45ec:	3c ec       	ldi	r19, 0xCC	; 204
    45ee:	4c ec       	ldi	r20, 0xCC	; 204
    45f0:	5d e3       	ldi	r21, 0x3D	; 61
    45f2:	c5 01       	movw	r24, r10
    45f4:	b4 01       	movw	r22, r8
    45f6:	0e 94 c4 36 	call	0x6d88	; 0x6d88 <__mulsf3>
    45fa:	60 93 f8 29 	sts	0x29F8, r22	; 0x8029f8 <myPID+0x10>
    45fe:	70 93 f9 29 	sts	0x29F9, r23	; 0x8029f9 <myPID+0x11>
    4602:	80 93 fa 29 	sts	0x29FA, r24	; 0x8029fa <myPID+0x12>
    4606:	90 93 fb 29 	sts	0x29FB, r25	; 0x8029fb <myPID+0x13>
    460a:	2d ec       	ldi	r18, 0xCD	; 205
    460c:	3c ec       	ldi	r19, 0xCC	; 204
    460e:	4c ec       	ldi	r20, 0xCC	; 204
    4610:	5d e3       	ldi	r21, 0x3D	; 61
    4612:	c7 01       	movw	r24, r14
    4614:	b6 01       	movw	r22, r12
    4616:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    461a:	60 93 fc 29 	sts	0x29FC, r22	; 0x8029fc <myPID+0x14>
    461e:	70 93 fd 29 	sts	0x29FD, r23	; 0x8029fd <myPID+0x15>
    4622:	80 93 fe 29 	sts	0x29FE, r24	; 0x8029fe <myPID+0x16>
    4626:	90 93 ff 29 	sts	0x29FF, r25	; 0x8029ff <myPID+0x17>
    462a:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    462e:	c0 90 16 2a 	lds	r12, 0x2A16	; 0x802a16 <myPID+0x2e>
    4632:	d0 90 17 2a 	lds	r13, 0x2A17	; 0x802a17 <myPID+0x2f>
    4636:	e0 90 18 2a 	lds	r14, 0x2A18	; 0x802a18 <myPID+0x30>
    463a:	f0 90 19 2a 	lds	r15, 0x2A19	; 0x802a19 <myPID+0x31>
    463e:	6c 19       	sub	r22, r12
    4640:	7d 09       	sbc	r23, r13
    4642:	8e 09       	sbc	r24, r14
    4644:	9f 09       	sbc	r25, r15
    4646:	60 93 0a 2a 	sts	0x2A0A, r22	; 0x802a0a <myPID+0x22>
    464a:	70 93 0b 2a 	sts	0x2A0B, r23	; 0x802a0b <myPID+0x23>
    464e:	80 93 0c 2a 	sts	0x2A0C, r24	; 0x802a0c <myPID+0x24>
    4652:	90 93 0d 2a 	sts	0x2A0D, r25	; 0x802a0d <myPID+0x25>
    4656:	10 92 b1 2a 	sts	0x2AB1, r1	; 0x802ab1 <VersionDisplay+0x9>
    465a:	10 92 b2 2a 	sts	0x2AB2, r1	; 0x802ab2 <VersionDisplay+0xa>
    465e:	80 e4       	ldi	r24, 0x40	; 64
    4660:	92 e4       	ldi	r25, 0x42	; 66
    4662:	af e0       	ldi	r26, 0x0F	; 15
    4664:	b0 e0       	ldi	r27, 0x00	; 0
    4666:	80 93 a9 2a 	sts	0x2AA9, r24	; 0x802aa9 <VersionDisplay+0x1>
    466a:	90 93 aa 2a 	sts	0x2AAA, r25	; 0x802aaa <VersionDisplay+0x2>
    466e:	a0 93 ab 2a 	sts	0x2AAB, r26	; 0x802aab <VersionDisplay+0x3>
    4672:	b0 93 ac 2a 	sts	0x2AAC, r27	; 0x802aac <VersionDisplay+0x4>
    4676:	81 e0       	ldi	r24, 0x01	; 1
    4678:	90 e0       	ldi	r25, 0x00	; 0
    467a:	a0 e0       	ldi	r26, 0x00	; 0
    467c:	b0 e0       	ldi	r27, 0x00	; 0
    467e:	80 93 ad 2a 	sts	0x2AAD, r24	; 0x802aad <VersionDisplay+0x5>
    4682:	90 93 ae 2a 	sts	0x2AAE, r25	; 0x802aae <VersionDisplay+0x6>
    4686:	a0 93 af 2a 	sts	0x2AAF, r26	; 0x802aaf <VersionDisplay+0x7>
    468a:	b0 93 b0 2a 	sts	0x2AB0, r27	; 0x802ab0 <VersionDisplay+0x8>
    468e:	8a e7       	ldi	r24, 0x7A	; 122
    4690:	91 e0       	ldi	r25, 0x01	; 1
    4692:	80 93 b9 2a 	sts	0x2AB9, r24	; 0x802ab9 <VersionDisplay+0x11>
    4696:	90 93 ba 2a 	sts	0x2ABA, r25	; 0x802aba <VersionDisplay+0x12>
    469a:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <VersionDisplay>
    469e:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <VersionDisplay+0x13>
    46a2:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <VersionDisplay+0x14>
    46a6:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <VersionDisplay+0x15>
    46aa:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <VersionDisplay+0x16>
    46ae:	10 92 b3 2a 	sts	0x2AB3, r1	; 0x802ab3 <VersionDisplay+0xb>
    46b2:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <VersionDisplay+0xc>
    46b6:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <VersionDisplay+0xd>
    46ba:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <VersionDisplay+0xe>
    46be:	63 e2       	ldi	r22, 0x23	; 35
    46c0:	70 e0       	ldi	r23, 0x00	; 0
    46c2:	89 e8       	ldi	r24, 0x89	; 137
    46c4:	9a e2       	ldi	r25, 0x2A	; 42
    46c6:	0e 94 01 09 	call	0x1202	; 0x1202 <OneButton::OneButton(int, int) [clone .constprop.54]>
    46ca:	65 e2       	ldi	r22, 0x25	; 37
    46cc:	70 e0       	ldi	r23, 0x00	; 0
    46ce:	8a e6       	ldi	r24, 0x6A	; 106
    46d0:	9a e2       	ldi	r25, 0x2A	; 42
    46d2:	0e 94 01 09 	call	0x1202	; 0x1202 <OneButton::OneButton(int, int) [clone .constprop.54]>
    46d6:	64 e2       	ldi	r22, 0x24	; 36
    46d8:	70 e0       	ldi	r23, 0x00	; 0
    46da:	8b e4       	ldi	r24, 0x4B	; 75
    46dc:	9a e2       	ldi	r25, 0x2A	; 42
    46de:	0e 94 01 09 	call	0x1202	; 0x1202 <OneButton::OneButton(int, int) [clone .constprop.54]>
    46e2:	62 e2       	ldi	r22, 0x22	; 34
    46e4:	70 e0       	ldi	r23, 0x00	; 0
    46e6:	8c e2       	ldi	r24, 0x2C	; 44
    46e8:	9a e2       	ldi	r25, 0x2A	; 42
    46ea:	ff 90       	pop	r15
    46ec:	ef 90       	pop	r14
    46ee:	df 90       	pop	r13
    46f0:	cf 90       	pop	r12
    46f2:	bf 90       	pop	r11
    46f4:	af 90       	pop	r10
    46f6:	9f 90       	pop	r9
    46f8:	8f 90       	pop	r8
    46fa:	7f 90       	pop	r7
    46fc:	6f 90       	pop	r6
    46fe:	5f 90       	pop	r5
    4700:	4f 90       	pop	r4
    4702:	0c 94 01 09 	jmp	0x1202	; 0x1202 <OneButton::OneButton(int, int) [clone .constprop.54]>

00004706 <main>:
main():
    4706:	cf 93       	push	r28
    4708:	df 93       	push	r29
    470a:	cd b7       	in	r28, 0x3d	; 61
    470c:	de b7       	in	r29, 0x3e	; 62
    470e:	26 97       	sbiw	r28, 0x06	; 6
    4710:	cd bf       	out	0x3d, r28	; 61
    4712:	de bf       	out	0x3e, r29	; 62
init():
    4714:	88 ed       	ldi	r24, 0xD8	; 216
    4716:	90 e0       	ldi	r25, 0x00	; 0
    4718:	84 bf       	out	0x34, r24	; 52
    471a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    471e:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4722:	86 60       	ori	r24, 0x06	; 6
    4724:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4728:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    472c:	81 60       	ori	r24, 0x01	; 1
    472e:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    4732:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4736:	8f 7c       	andi	r24, 0xCF	; 207
    4738:	80 65       	ori	r24, 0x50	; 80
    473a:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    473e:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    4742:	82 e0       	ldi	r24, 0x02	; 2
    4744:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    4748:	81 e0       	ldi	r24, 0x01	; 1
    474a:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    474e:	8e ef       	ldi	r24, 0xFE	; 254
    4750:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4754:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4758:	80 e8       	ldi	r24, 0x80	; 128
    475a:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    475e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    4762:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    4766:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    476a:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    476e:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    4772:	8b e0       	ldi	r24, 0x0B	; 11
    4774:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4778:	87 e0       	ldi	r24, 0x07	; 7
    477a:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    477e:	e0 e8       	ldi	r30, 0x80	; 128
    4780:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    4782:	37 e0       	ldi	r19, 0x07	; 7
    4784:	2e ef       	ldi	r18, 0xFE	; 254
    4786:	90 e8       	ldi	r25, 0x80	; 128
    4788:	85 e0       	ldi	r24, 0x05	; 5
    478a:	31 83       	std	Z+1, r19	; 0x01
    478c:	24 87       	std	Z+12, r18	; 0x0c
    478e:	95 87       	std	Z+13, r25	; 0x0d
    4790:	80 83       	st	Z, r24
    4792:	70 96       	adiw	r30, 0x10	; 16
    4794:	e0 3c       	cpi	r30, 0xC0	; 192
    4796:	4a e0       	ldi	r20, 0x0A	; 10
    4798:	f4 07       	cpc	r31, r20
    479a:	b9 f7       	brne	.-18     	; 0x478a <main+0x84>
init():
    479c:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    47a0:	8f e7       	ldi	r24, 0x7F	; 127
    47a2:	9e e3       	ldi	r25, 0x3E	; 62
    47a4:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    47a8:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    47ac:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    47b0:	81 60       	ori	r24, 0x01	; 1
    47b2:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    47b6:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    47ba:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    47be:	81 60       	ori	r24, 0x01	; 1
    47c0:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    47c4:	78 94       	sei
setup():
    47c6:	47 e2       	ldi	r20, 0x27	; 39
    47c8:	66 e2       	ldi	r22, 0x26	; 38
    47ca:	8f e3       	ldi	r24, 0x3F	; 63
    47cc:	99 e2       	ldi	r25, 0x29	; 41
    47ce:	0e 94 52 07 	call	0xea4	; 0xea4 <UartClass::pins(unsigned char, unsigned char)>
    47d2:	40 e8       	ldi	r20, 0x80	; 128
    47d4:	55 e2       	ldi	r21, 0x25	; 37
    47d6:	60 e0       	ldi	r22, 0x00	; 0
    47d8:	70 e0       	ldi	r23, 0x00	; 0
    47da:	8f e3       	ldi	r24, 0x3F	; 63
    47dc:	99 e2       	ldi	r25, 0x29	; 41
    47de:	0e 94 e6 0f 	call	0x1fcc	; 0x1fcc <UartClass::begin(unsigned long)>
SETUP():
    47e2:	f8 94       	cli
    47e4:	81 e0       	ldi	r24, 0x01	; 1
    47e6:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    47ea:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    47ee:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    47f2:	8e 7f       	andi	r24, 0xFE	; 254
    47f4:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    47f8:	8a ef       	ldi	r24, 0xFA	; 250
    47fa:	90 e0       	ldi	r25, 0x00	; 0
    47fc:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4800:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4804:	8f e0       	ldi	r24, 0x0F	; 15
    4806:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    480a:	78 94       	sei
    480c:	61 e0       	ldi	r22, 0x01	; 1
    480e:	8b e0       	ldi	r24, 0x0B	; 11
    4810:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4814:	61 e0       	ldi	r22, 0x01	; 1
    4816:	8a e0       	ldi	r24, 0x0A	; 10
    4818:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    481c:	61 e0       	ldi	r22, 0x01	; 1
    481e:	89 e0       	ldi	r24, 0x09	; 9
    4820:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4824:	61 e0       	ldi	r22, 0x01	; 1
    4826:	88 e0       	ldi	r24, 0x08	; 8
    4828:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    482c:	61 e0       	ldi	r22, 0x01	; 1
    482e:	84 e0       	ldi	r24, 0x04	; 4
    4830:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4834:	61 e0       	ldi	r22, 0x01	; 1
    4836:	85 e0       	ldi	r24, 0x05	; 5
    4838:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    483c:	61 e0       	ldi	r22, 0x01	; 1
    483e:	86 e0       	ldi	r24, 0x06	; 6
    4840:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4844:	61 e0       	ldi	r22, 0x01	; 1
    4846:	87 e0       	ldi	r24, 0x07	; 7
    4848:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    484c:	61 e0       	ldi	r22, 0x01	; 1
    484e:	84 e1       	ldi	r24, 0x14	; 20
    4850:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4854:	61 e0       	ldi	r22, 0x01	; 1
    4856:	83 e1       	ldi	r24, 0x13	; 19
    4858:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    485c:	61 e0       	ldi	r22, 0x01	; 1
    485e:	82 e1       	ldi	r24, 0x12	; 18
    4860:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4864:	61 e0       	ldi	r22, 0x01	; 1
    4866:	8e e1       	ldi	r24, 0x1E	; 30
    4868:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    486c:	61 e0       	ldi	r22, 0x01	; 1
    486e:	80 e2       	ldi	r24, 0x20	; 32
    4870:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    4874:	61 e0       	ldi	r22, 0x01	; 1
    4876:	8f e1       	ldi	r24, 0x1F	; 31
    4878:	0e 94 90 08 	call	0x1120	; 0x1120 <pinMode>
    487c:	61 e0       	ldi	r22, 0x01	; 1
    487e:	88 e0       	ldi	r24, 0x08	; 8
    4880:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    4884:	61 e0       	ldi	r22, 0x01	; 1
    4886:	89 e0       	ldi	r24, 0x09	; 9
    4888:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    488c:	61 e0       	ldi	r22, 0x01	; 1
    488e:	8a e0       	ldi	r24, 0x0A	; 10
    4890:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    4894:	61 e0       	ldi	r22, 0x01	; 1
    4896:	8b e0       	ldi	r24, 0x0B	; 11
    4898:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    489c:	61 e0       	ldi	r22, 0x01	; 1
    489e:	87 e0       	ldi	r24, 0x07	; 7
    48a0:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    48a4:	61 e0       	ldi	r22, 0x01	; 1
    48a6:	86 e0       	ldi	r24, 0x06	; 6
    48a8:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    48ac:	61 e0       	ldi	r22, 0x01	; 1
    48ae:	85 e0       	ldi	r24, 0x05	; 5
    48b0:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
    48b4:	61 e0       	ldi	r22, 0x01	; 1
    48b6:	84 e0       	ldi	r24, 0x04	; 4
    48b8:	0e 94 fd 08 	call	0x11fa	; 0x11fa <digitalWrite>
pinMode():
    48bc:	61 e0       	ldi	r22, 0x01	; 1
    48be:	8c e0       	ldi	r24, 0x0C	; 12
    48c0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    48c4:	61 e0       	ldi	r22, 0x01	; 1
    48c6:	8d e0       	ldi	r24, 0x0D	; 13
    48c8:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
digitalWrite():
    48cc:	60 e0       	ldi	r22, 0x00	; 0
    48ce:	8c e0       	ldi	r24, 0x0C	; 12
    48d0:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    48d4:	60 e0       	ldi	r22, 0x00	; 0
    48d6:	8d e0       	ldi	r24, 0x0D	; 13
    48d8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SETUP():
    48dc:	8b e9       	ldi	r24, 0x9B	; 155
    48de:	9b e2       	ldi	r25, 0x2B	; 43
    48e0:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SetOutputLimits():
    48e4:	10 92 1a 2a 	sts	0x2A1A, r1	; 0x802a1a <myPID+0x32>
    48e8:	10 92 1b 2a 	sts	0x2A1B, r1	; 0x802a1b <myPID+0x33>
    48ec:	10 92 1c 2a 	sts	0x2A1C, r1	; 0x802a1c <myPID+0x34>
    48f0:	10 92 1d 2a 	sts	0x2A1D, r1	; 0x802a1d <myPID+0x35>
    48f4:	81 2c       	mov	r8, r1
    48f6:	91 2c       	mov	r9, r1
    48f8:	9a e7       	ldi	r25, 0x7A	; 122
    48fa:	a9 2e       	mov	r10, r25
    48fc:	94 e4       	ldi	r25, 0x44	; 68
    48fe:	b9 2e       	mov	r11, r25
    4900:	80 92 1e 2a 	sts	0x2A1E, r8	; 0x802a1e <myPID+0x36>
    4904:	90 92 1f 2a 	sts	0x2A1F, r9	; 0x802a1f <myPID+0x37>
    4908:	a0 92 20 2a 	sts	0x2A20, r10	; 0x802a20 <myPID+0x38>
    490c:	b0 92 21 2a 	sts	0x2A21, r11	; 0x802a21 <myPID+0x39>
    4910:	80 91 22 2a 	lds	r24, 0x2A22	; 0x802a22 <myPID+0x3a>
    4914:	88 23       	and	r24, r24
    4916:	09 f4       	brne	.+2      	; 0x491a <main+0x214>
    4918:	57 c0       	rjmp	.+174    	; 0x49c8 <main+0x2c2>
    491a:	00 91 06 2a 	lds	r16, 0x2A06	; 0x802a06 <myPID+0x1e>
    491e:	10 91 07 2a 	lds	r17, 0x2A07	; 0x802a07 <myPID+0x1f>
    4922:	d8 01       	movw	r26, r16
    4924:	cd 90       	ld	r12, X+
    4926:	dd 90       	ld	r13, X+
    4928:	ed 90       	ld	r14, X+
    492a:	fc 90       	ld	r15, X
    492c:	a5 01       	movw	r20, r10
    492e:	94 01       	movw	r18, r8
    4930:	c7 01       	movw	r24, r14
    4932:	b6 01       	movw	r22, r12
    4934:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    4938:	18 16       	cp	r1, r24
    493a:	34 f5       	brge	.+76     	; 0x4988 <main+0x282>
    493c:	f8 01       	movw	r30, r16
    493e:	80 82       	st	Z, r8
    4940:	91 82       	std	Z+1, r9	; 0x01
    4942:	a2 82       	std	Z+2, r10	; 0x02
    4944:	b3 82       	std	Z+3, r11	; 0x03
    4946:	80 90 0e 2a 	lds	r8, 0x2A0E	; 0x802a0e <myPID+0x26>
    494a:	90 90 0f 2a 	lds	r9, 0x2A0F	; 0x802a0f <myPID+0x27>
    494e:	a0 90 10 2a 	lds	r10, 0x2A10	; 0x802a10 <myPID+0x28>
    4952:	b0 90 11 2a 	lds	r11, 0x2A11	; 0x802a11 <myPID+0x29>
    4956:	c0 90 1e 2a 	lds	r12, 0x2A1E	; 0x802a1e <myPID+0x36>
    495a:	d0 90 1f 2a 	lds	r13, 0x2A1F	; 0x802a1f <myPID+0x37>
    495e:	e0 90 20 2a 	lds	r14, 0x2A20	; 0x802a20 <myPID+0x38>
    4962:	f0 90 21 2a 	lds	r15, 0x2A21	; 0x802a21 <myPID+0x39>
    4966:	a7 01       	movw	r20, r14
    4968:	96 01       	movw	r18, r12
    496a:	c5 01       	movw	r24, r10
    496c:	b4 01       	movw	r22, r8
    496e:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    4972:	18 16       	cp	r1, r24
    4974:	cc f4       	brge	.+50     	; 0x49a8 <main+0x2a2>
    4976:	c0 92 0e 2a 	sts	0x2A0E, r12	; 0x802a0e <myPID+0x26>
    497a:	d0 92 0f 2a 	sts	0x2A0F, r13	; 0x802a0f <myPID+0x27>
    497e:	e0 92 10 2a 	sts	0x2A10, r14	; 0x802a10 <myPID+0x28>
    4982:	f0 92 11 2a 	sts	0x2A11, r15	; 0x802a11 <myPID+0x29>
    4986:	20 c0       	rjmp	.+64     	; 0x49c8 <main+0x2c2>
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	30 e0       	ldi	r19, 0x00	; 0
    498c:	a9 01       	movw	r20, r18
    498e:	c7 01       	movw	r24, r14
    4990:	b6 01       	movw	r22, r12
    4992:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    4996:	87 ff       	sbrs	r24, 7
    4998:	d6 cf       	rjmp	.-84     	; 0x4946 <main+0x240>
    499a:	d8 01       	movw	r26, r16
    499c:	1d 92       	st	X+, r1
    499e:	1d 92       	st	X+, r1
    49a0:	1d 92       	st	X+, r1
    49a2:	1c 92       	st	X, r1
    49a4:	13 97       	sbiw	r26, 0x03	; 3
    49a6:	cf cf       	rjmp	.-98     	; 0x4946 <main+0x240>
    49a8:	c0 90 1a 2a 	lds	r12, 0x2A1A	; 0x802a1a <myPID+0x32>
    49ac:	d0 90 1b 2a 	lds	r13, 0x2A1B	; 0x802a1b <myPID+0x33>
    49b0:	e0 90 1c 2a 	lds	r14, 0x2A1C	; 0x802a1c <myPID+0x34>
    49b4:	f0 90 1d 2a 	lds	r15, 0x2A1D	; 0x802a1d <myPID+0x35>
    49b8:	a7 01       	movw	r20, r14
    49ba:	96 01       	movw	r18, r12
    49bc:	c5 01       	movw	r24, r10
    49be:	b4 01       	movw	r22, r8
    49c0:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    49c4:	87 fd       	sbrc	r24, 7
    49c6:	d7 cf       	rjmp	.-82     	; 0x4976 <main+0x270>
Setup():
    49c8:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    49cc:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <WINDOW_START_TIME>
    49d0:	70 93 d9 28 	sts	0x28D9, r23	; 0x8028d9 <WINDOW_START_TIME+0x1>
    49d4:	80 93 da 28 	sts	0x28DA, r24	; 0x8028da <WINDOW_START_TIME+0x2>
    49d8:	90 93 db 28 	sts	0x28DB, r25	; 0x8028db <WINDOW_START_TIME+0x3>
SetMode():
    49dc:	80 91 22 2a 	lds	r24, 0x2A22	; 0x802a22 <myPID+0x3a>
    49e0:	81 11       	cpse	r24, r1
    49e2:	49 c0       	rjmp	.+146    	; 0x4a76 <main+0x370>
Initialize():
    49e4:	e0 91 06 2a 	lds	r30, 0x2A06	; 0x802a06 <myPID+0x1e>
    49e8:	f0 91 07 2a 	lds	r31, 0x2A07	; 0x802a07 <myPID+0x1f>
    49ec:	c0 80       	ld	r12, Z
    49ee:	d1 80       	ldd	r13, Z+1	; 0x01
    49f0:	e2 80       	ldd	r14, Z+2	; 0x02
    49f2:	f3 80       	ldd	r15, Z+3	; 0x03
    49f4:	c0 92 0e 2a 	sts	0x2A0E, r12	; 0x802a0e <myPID+0x26>
    49f8:	d0 92 0f 2a 	sts	0x2A0F, r13	; 0x802a0f <myPID+0x27>
    49fc:	e0 92 10 2a 	sts	0x2A10, r14	; 0x802a10 <myPID+0x28>
    4a00:	f0 92 11 2a 	sts	0x2A11, r15	; 0x802a11 <myPID+0x29>
    4a04:	e0 91 04 2a 	lds	r30, 0x2A04	; 0x802a04 <myPID+0x1c>
    4a08:	f0 91 05 2a 	lds	r31, 0x2A05	; 0x802a05 <myPID+0x1d>
    4a0c:	80 81       	ld	r24, Z
    4a0e:	91 81       	ldd	r25, Z+1	; 0x01
    4a10:	a2 81       	ldd	r26, Z+2	; 0x02
    4a12:	b3 81       	ldd	r27, Z+3	; 0x03
    4a14:	80 93 12 2a 	sts	0x2A12, r24	; 0x802a12 <myPID+0x2a>
    4a18:	90 93 13 2a 	sts	0x2A13, r25	; 0x802a13 <myPID+0x2b>
    4a1c:	a0 93 14 2a 	sts	0x2A14, r26	; 0x802a14 <myPID+0x2c>
    4a20:	b0 93 15 2a 	sts	0x2A15, r27	; 0x802a15 <myPID+0x2d>
    4a24:	80 90 1e 2a 	lds	r8, 0x2A1E	; 0x802a1e <myPID+0x36>
    4a28:	90 90 1f 2a 	lds	r9, 0x2A1F	; 0x802a1f <myPID+0x37>
    4a2c:	a0 90 20 2a 	lds	r10, 0x2A20	; 0x802a20 <myPID+0x38>
    4a30:	b0 90 21 2a 	lds	r11, 0x2A21	; 0x802a21 <myPID+0x39>
    4a34:	a5 01       	movw	r20, r10
    4a36:	94 01       	movw	r18, r8
    4a38:	c7 01       	movw	r24, r14
    4a3a:	b6 01       	movw	r22, r12
    4a3c:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    4a40:	18 16       	cp	r1, r24
    4a42:	4c f4       	brge	.+18     	; 0x4a56 <main+0x350>
    4a44:	80 92 0e 2a 	sts	0x2A0E, r8	; 0x802a0e <myPID+0x26>
    4a48:	90 92 0f 2a 	sts	0x2A0F, r9	; 0x802a0f <myPID+0x27>
    4a4c:	a0 92 10 2a 	sts	0x2A10, r10	; 0x802a10 <myPID+0x28>
    4a50:	b0 92 11 2a 	sts	0x2A11, r11	; 0x802a11 <myPID+0x29>
    4a54:	10 c0       	rjmp	.+32     	; 0x4a76 <main+0x370>
    4a56:	80 90 1a 2a 	lds	r8, 0x2A1A	; 0x802a1a <myPID+0x32>
    4a5a:	90 90 1b 2a 	lds	r9, 0x2A1B	; 0x802a1b <myPID+0x33>
    4a5e:	a0 90 1c 2a 	lds	r10, 0x2A1C	; 0x802a1c <myPID+0x34>
    4a62:	b0 90 1d 2a 	lds	r11, 0x2A1D	; 0x802a1d <myPID+0x35>
    4a66:	a5 01       	movw	r20, r10
    4a68:	94 01       	movw	r18, r8
    4a6a:	c7 01       	movw	r24, r14
    4a6c:	b6 01       	movw	r22, r12
    4a6e:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <__cmpsf2>
    4a72:	87 fd       	sbrc	r24, 7
    4a74:	e7 cf       	rjmp	.-50     	; 0x4a44 <main+0x33e>
SetMode():
    4a76:	81 e0       	ldi	r24, 0x01	; 1
    4a78:	80 93 22 2a 	sts	0x2A22, r24	; 0x802a22 <myPID+0x3a>
pinMode():
    4a7c:	61 e0       	ldi	r22, 0x01	; 1
    4a7e:	85 e1       	ldi	r24, 0x15	; 21
    4a80:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4a84:	61 e0       	ldi	r22, 0x01	; 1
    4a86:	88 e1       	ldi	r24, 0x18	; 24
    4a88:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4a8c:	61 e0       	ldi	r22, 0x01	; 1
    4a8e:	89 e1       	ldi	r24, 0x19	; 25
    4a90:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
digitalWrite():
    4a94:	60 e0       	ldi	r22, 0x00	; 0
    4a96:	89 e1       	ldi	r24, 0x19	; 25
    4a98:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    4a9c:	60 e0       	ldi	r22, 0x00	; 0
    4a9e:	85 e1       	ldi	r24, 0x15	; 21
    4aa0:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    4aa4:	60 e0       	ldi	r22, 0x00	; 0
    4aa6:	88 e1       	ldi	r24, 0x18	; 24
    4aa8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
pinMode():
    4aac:	61 e0       	ldi	r22, 0x01	; 1
    4aae:	8b e1       	ldi	r24, 0x1B	; 27
    4ab0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4ab4:	61 e0       	ldi	r22, 0x01	; 1
    4ab6:	8c e1       	ldi	r24, 0x1C	; 28
    4ab8:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4abc:	61 e0       	ldi	r22, 0x01	; 1
    4abe:	8d e1       	ldi	r24, 0x1D	; 29
    4ac0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4ac4:	61 e0       	ldi	r22, 0x01	; 1
    4ac6:	8a e1       	ldi	r24, 0x1A	; 26
    4ac8:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
Setup():
    4acc:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    4ad0:	89 ef       	ldi	r24, 0xF9	; 249
    4ad2:	9a e2       	ldi	r25, 0x2A	; 42
    4ad4:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
    4ad8:	90 e0       	ldi	r25, 0x00	; 0
    4ada:	80 e0       	ldi	r24, 0x00	; 0
    4adc:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4ae0:	bb 24       	eor	r11, r11
    4ae2:	b3 94       	inc	r11
    4ae4:	81 11       	cpse	r24, r1
    4ae6:	01 c0       	rjmp	.+2      	; 0x4aea <main+0x3e4>
    4ae8:	b1 2c       	mov	r11, r1
    4aea:	b0 92 8e 28 	sts	0x288E, r11	; 0x80288e <STIR_VALUE_SET>
    4aee:	81 e0       	ldi	r24, 0x01	; 1
    4af0:	90 e0       	ldi	r25, 0x00	; 0
    4af2:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4af6:	01 e0       	ldi	r16, 0x01	; 1
    4af8:	81 11       	cpse	r24, r1
    4afa:	01 c0       	rjmp	.+2      	; 0x4afe <main+0x3f8>
    4afc:	00 e0       	ldi	r16, 0x00	; 0
    4afe:	00 93 3d 29 	sts	0x293D, r16	; 0x80293d <DEGREE_VALUE_SET>
    4b02:	82 e0       	ldi	r24, 0x02	; 2
    4b04:	90 e0       	ldi	r25, 0x00	; 0
    4b06:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4b0a:	c8 2e       	mov	r12, r24
    4b0c:	d1 2c       	mov	r13, r1
    4b0e:	c0 92 fc 28 	sts	0x28FC, r12	; 0x8028fc <SAFE_VALUE_SET_DEG>
    4b12:	d0 92 fd 28 	sts	0x28FD, r13	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
    4b16:	6a ef       	ldi	r22, 0xFA	; 250
    4b18:	78 e2       	ldi	r23, 0x28	; 40
    4b1a:	83 e0       	ldi	r24, 0x03	; 3
    4b1c:	90 e0       	ldi	r25, 0x00	; 0
    4b1e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4b22:	85 e0       	ldi	r24, 0x05	; 5
    4b24:	90 e0       	ldi	r25, 0x00	; 0
    4b26:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4b2a:	e8 2e       	mov	r14, r24
    4b2c:	f1 2c       	mov	r15, r1
    4b2e:	e0 92 c3 28 	sts	0x28C3, r14	; 0x8028c3 <CAL_SELECT_VALUE>
    4b32:	f0 92 c4 28 	sts	0x28C4, r15	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
    4b36:	14 ef       	ldi	r17, 0xF4	; 244
    4b38:	61 2e       	mov	r6, r17
    4b3a:	18 e2       	ldi	r17, 0x28	; 40
    4b3c:	71 2e       	mov	r7, r17
main():
    4b3e:	86 e4       	ldi	r24, 0x46	; 70
    4b40:	88 2e       	mov	r8, r24
    4b42:	91 2c       	mov	r9, r1
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4b44:	89 82       	std	Y+1, r8	; 0x01
    4b46:	9a 82       	std	Y+2, r9	; 0x02
_ZNK5EERefcvhEv():
    4b48:	ce 01       	movw	r24, r28
    4b4a:	01 96       	adiw	r24, 0x01	; 1
    4b4c:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4b50:	f3 01       	movw	r30, r6
    4b52:	81 93       	st	Z+, r24
    4b54:	3f 01       	movw	r6, r30
_ZN5EEPtrppEv():
    4b56:	ff ef       	ldi	r31, 0xFF	; 255
    4b58:	8f 1a       	sub	r8, r31
    4b5a:	9f 0a       	sbc	r9, r31
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4b5c:	2a e4       	ldi	r18, 0x4A	; 74
    4b5e:	82 16       	cp	r8, r18
    4b60:	91 04       	cpc	r9, r1
    4b62:	81 f7       	brne	.-32     	; 0x4b44 <main+0x43e>
Setup():
    4b64:	87 e0       	ldi	r24, 0x07	; 7
    4b66:	90 e0       	ldi	r25, 0x00	; 0
    4b68:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4b6c:	91 e0       	ldi	r25, 0x01	; 1
    4b6e:	81 11       	cpse	r24, r1
    4b70:	01 c0       	rjmp	.+2      	; 0x4b74 <main+0x46e>
    4b72:	90 e0       	ldi	r25, 0x00	; 0
    4b74:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <SIGN>
    4b78:	88 e0       	ldi	r24, 0x08	; 8
    4b7a:	90 e0       	ldi	r25, 0x00	; 0
    4b7c:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4b80:	91 e0       	ldi	r25, 0x01	; 1
    4b82:	81 11       	cpse	r24, r1
    4b84:	01 c0       	rjmp	.+2      	; 0x4b88 <main+0x482>
    4b86:	90 e0       	ldi	r25, 0x00	; 0
    4b88:	90 93 d2 28 	sts	0x28D2, r25	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
    4b8c:	89 e0       	ldi	r24, 0x09	; 9
    4b8e:	90 e0       	ldi	r25, 0x00	; 0
    4b90:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4b94:	91 e0       	ldi	r25, 0x01	; 1
    4b96:	81 11       	cpse	r24, r1
    4b98:	01 c0       	rjmp	.+2      	; 0x4b9c <main+0x496>
    4b9a:	90 e0       	ldi	r25, 0x00	; 0
    4b9c:	90 93 cd 28 	sts	0x28CD, r25	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
    4ba0:	6b eb       	ldi	r22, 0xBB	; 187
    4ba2:	78 e2       	ldi	r23, 0x28	; 40
    4ba4:	80 e5       	ldi	r24, 0x50	; 80
    4ba6:	90 e0       	ldi	r25, 0x00	; 0
    4ba8:	0e 94 24 10 	call	0x2048	; 0x2048 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4bac:	67 eb       	ldi	r22, 0xB7	; 183
    4bae:	78 e2       	ldi	r23, 0x28	; 40
    4bb0:	8a e5       	ldi	r24, 0x5A	; 90
    4bb2:	90 e0       	ldi	r25, 0x00	; 0
    4bb4:	0e 94 24 10 	call	0x2048	; 0x2048 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4bb8:	63 eb       	ldi	r22, 0xB3	; 179
    4bba:	78 e2       	ldi	r23, 0x28	; 40
    4bbc:	84 e6       	ldi	r24, 0x64	; 100
    4bbe:	90 e0       	ldi	r25, 0x00	; 0
    4bc0:	0e 94 24 10 	call	0x2048	; 0x2048 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4bc4:	6f ea       	ldi	r22, 0xAF	; 175
    4bc6:	78 e2       	ldi	r23, 0x28	; 40
    4bc8:	8e e6       	ldi	r24, 0x6E	; 110
    4bca:	90 e0       	ldi	r25, 0x00	; 0
    4bcc:	0e 94 24 10 	call	0x2048	; 0x2048 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4bd0:	81 e4       	ldi	r24, 0x41	; 65
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	89 83       	std	Y+1, r24	; 0x01
    4bd6:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    4bd8:	ce 01       	movw	r24, r28
    4bda:	01 96       	adiw	r24, 0x01	; 1
    4bdc:	0e 94 ef 0f 	call	0x1fde	; 0x1fde <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4be0:	80 93 55 28 	sts	0x2855, r24	; 0x802855 <TIME_SOCK_OR_TOTAL>
Setup():
    4be4:	64 e4       	ldi	r22, 0x44	; 68
    4be6:	78 e2       	ldi	r23, 0x28	; 40
    4be8:	88 e9       	ldi	r24, 0x98	; 152
    4bea:	90 e0       	ldi	r25, 0x00	; 0
    4bec:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4bf0:	62 e4       	ldi	r22, 0x42	; 66
    4bf2:	78 e2       	ldi	r23, 0x28	; 40
    4bf4:	8a e9       	ldi	r24, 0x9A	; 154
    4bf6:	90 e0       	ldi	r25, 0x00	; 0
    4bf8:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4bfc:	8f e0       	ldi	r24, 0x0F	; 15
    4bfe:	90 e0       	ldi	r25, 0x00	; 0
    4c00:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4c04:	11 e0       	ldi	r17, 0x01	; 1
    4c06:	81 11       	cpse	r24, r1
    4c08:	01 c0       	rjmp	.+2      	; 0x4c0c <main+0x506>
    4c0a:	10 e0       	ldi	r17, 0x00	; 0
    4c0c:	10 93 95 28 	sts	0x2895, r17	; 0x802895 <Proceess_Resume_Enable_Flag>
    4c10:	86 e9       	ldi	r24, 0x96	; 150
    4c12:	90 e0       	ldi	r25, 0x00	; 0
    4c14:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4c18:	91 e0       	ldi	r25, 0x01	; 1
    4c1a:	81 11       	cpse	r24, r1
    4c1c:	01 c0       	rjmp	.+2      	; 0x4c20 <main+0x51a>
    4c1e:	90 e0       	ldi	r25, 0x00	; 0
    4c20:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <select_product_type>
    4c24:	2b 2d       	mov	r18, r11
    4c26:	30 e0       	ldi	r19, 0x00	; 0
    4c28:	20 93 0b 29 	sts	0x290B, r18	; 0x80290b <SET_LONG_VALUE>
    4c2c:	30 93 0c 29 	sts	0x290C, r19	; 0x80290c <SET_LONG_VALUE+0x1>
    4c30:	20 2f       	mov	r18, r16
    4c32:	30 e0       	ldi	r19, 0x00	; 0
    4c34:	20 93 0d 29 	sts	0x290D, r18	; 0x80290d <SET_LONG_VALUE+0x2>
    4c38:	30 93 0e 29 	sts	0x290E, r19	; 0x80290e <SET_LONG_VALUE+0x3>
    4c3c:	c0 92 0f 29 	sts	0x290F, r12	; 0x80290f <SET_LONG_VALUE+0x4>
    4c40:	d0 92 10 29 	sts	0x2910, r13	; 0x802910 <SET_LONG_VALUE+0x5>
    4c44:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SAFE_VALUE_SET_FAH>
    4c48:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
    4c4c:	20 93 31 29 	sts	0x2931, r18	; 0x802931 <SET_LONG_VALUE+0x26>
    4c50:	30 93 32 29 	sts	0x2932, r19	; 0x802932 <SET_LONG_VALUE+0x27>
    4c54:	e0 92 17 29 	sts	0x2917, r14	; 0x802917 <SET_LONG_VALUE+0xc>
    4c58:	f0 92 18 29 	sts	0x2918, r15	; 0x802918 <SET_LONG_VALUE+0xd>
    4c5c:	20 91 55 28 	lds	r18, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    4c60:	30 e0       	ldi	r19, 0x00	; 0
    4c62:	20 93 11 29 	sts	0x2911, r18	; 0x802911 <SET_LONG_VALUE+0x6>
    4c66:	30 93 12 29 	sts	0x2912, r19	; 0x802912 <SET_LONG_VALUE+0x7>
    4c6a:	21 2f       	mov	r18, r17
    4c6c:	30 e0       	ldi	r19, 0x00	; 0
    4c6e:	20 93 13 29 	sts	0x2913, r18	; 0x802913 <SET_LONG_VALUE+0x8>
    4c72:	30 93 14 29 	sts	0x2914, r19	; 0x802914 <SET_LONG_VALUE+0x9>
    4c76:	89 2f       	mov	r24, r25
    4c78:	90 e0       	ldi	r25, 0x00	; 0
    4c7a:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_LONG_VALUE+0xa>
    4c7e:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_LONG_VALUE+0xb>
    4c82:	6a e2       	ldi	r22, 0x2A	; 42
    4c84:	79 e2       	ldi	r23, 0x29	; 41
    4c86:	88 e7       	ldi	r24, 0x78	; 120
    4c88:	90 e0       	ldi	r25, 0x00	; 0
    4c8a:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4c8e:	83 e7       	ldi	r24, 0x73	; 115
    4c90:	90 e0       	ldi	r25, 0x00	; 0
    4c92:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4c96:	90 e0       	ldi	r25, 0x00	; 0
    4c98:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0x2>
    4c9c:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0x3>
    4ca0:	85 e7       	ldi	r24, 0x75	; 117
    4ca2:	90 e0       	ldi	r25, 0x00	; 0
    4ca4:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4ca8:	90 e0       	ldi	r25, 0x00	; 0
    4caa:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <SET_VALUE+0x4>
    4cae:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <SET_VALUE+0x5>
    4cb2:	8d e7       	ldi	r24, 0x7D	; 125
    4cb4:	90 e0       	ldi	r25, 0x00	; 0
    4cb6:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4cba:	90 e0       	ldi	r25, 0x00	; 0
    4cbc:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <SET_VALUE+0x6>
    4cc0:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <SET_VALUE+0x7>
    4cc4:	82 e8       	ldi	r24, 0x82	; 130
    4cc6:	90 e0       	ldi	r25, 0x00	; 0
    4cc8:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4ccc:	90 e0       	ldi	r25, 0x00	; 0
    4cce:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <SET_VALUE+0x8>
    4cd2:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <SET_VALUE+0x9>
    4cd6:	87 e8       	ldi	r24, 0x87	; 135
    4cd8:	90 e0       	ldi	r25, 0x00	; 0
    4cda:	0e 94 56 10 	call	0x20ac	; 0x20ac <EEPROMClass::read(int) [clone .isra.0]>
    4cde:	91 e0       	ldi	r25, 0x01	; 1
    4ce0:	81 11       	cpse	r24, r1
    4ce2:	01 c0       	rjmp	.+2      	; 0x4ce6 <main+0x5e0>
    4ce4:	90 e0       	ldi	r25, 0x00	; 0
    4ce6:	90 93 96 28 	sts	0x2896, r25	; 0x802896 <Process_Interrupt_flag>
pinMode():
    4cea:	62 e0       	ldi	r22, 0x02	; 2
    4cec:	83 e2       	ldi	r24, 0x23	; 35
    4cee:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4cf2:	62 e0       	ldi	r22, 0x02	; 2
    4cf4:	85 e2       	ldi	r24, 0x25	; 37
    4cf6:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4cfa:	62 e0       	ldi	r22, 0x02	; 2
    4cfc:	84 e2       	ldi	r24, 0x24	; 36
    4cfe:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
    4d02:	62 e0       	ldi	r22, 0x02	; 2
    4d04:	82 e2       	ldi	r24, 0x22	; 34
    4d06:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <pinMode.part.1>
attachClick():
    4d0a:	8c ea       	ldi	r24, 0xAC	; 172
    4d0c:	9a e1       	ldi	r25, 0x1A	; 26
    4d0e:	80 93 96 2a 	sts	0x2A96, r24	; 0x802a96 <button1+0xd>
    4d12:	90 93 97 2a 	sts	0x2A97, r25	; 0x802a97 <button1+0xe>
attachLongPressStart():
    4d16:	80 ed       	ldi	r24, 0xD0	; 208
    4d18:	9b e0       	ldi	r25, 0x0B	; 11
    4d1a:	80 93 9c 2a 	sts	0x2A9C, r24	; 0x802a9c <button1+0x13>
    4d1e:	90 93 9d 2a 	sts	0x2A9D, r25	; 0x802a9d <button1+0x14>
attachClick():
    4d22:	8a e1       	ldi	r24, 0x1A	; 26
    4d24:	96 e0       	ldi	r25, 0x06	; 6
    4d26:	80 93 77 2a 	sts	0x2A77, r24	; 0x802a77 <button2+0xd>
    4d2a:	90 93 78 2a 	sts	0x2A78, r25	; 0x802a78 <button2+0xe>
attachDuringLongPress():
    4d2e:	83 ed       	ldi	r24, 0xD3	; 211
    4d30:	9f e0       	ldi	r25, 0x0F	; 15
    4d32:	80 93 81 2a 	sts	0x2A81, r24	; 0x802a81 <button2+0x17>
    4d36:	90 93 82 2a 	sts	0x2A82, r25	; 0x802a82 <button2+0x18>
attachLongPressStop():
    4d3a:	8a eb       	ldi	r24, 0xBA	; 186
    4d3c:	96 e0       	ldi	r25, 0x06	; 6
    4d3e:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <button2+0x15>
    4d42:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <button2+0x16>
attachClick():
    4d46:	8f e5       	ldi	r24, 0x5F	; 95
    4d48:	96 e0       	ldi	r25, 0x06	; 6
    4d4a:	80 93 58 2a 	sts	0x2A58, r24	; 0x802a58 <button3+0xd>
    4d4e:	90 93 59 2a 	sts	0x2A59, r25	; 0x802a59 <button3+0xe>
attachDuringLongPress():
    4d52:	80 ec       	ldi	r24, 0xC0	; 192
    4d54:	9f e0       	ldi	r25, 0x0F	; 15
    4d56:	80 93 62 2a 	sts	0x2A62, r24	; 0x802a62 <button3+0x17>
    4d5a:	90 93 63 2a 	sts	0x2A63, r25	; 0x802a63 <button3+0x18>
attachLongPressStop():
    4d5e:	83 eb       	ldi	r24, 0xB3	; 179
    4d60:	96 e0       	ldi	r25, 0x06	; 6
    4d62:	80 93 60 2a 	sts	0x2A60, r24	; 0x802a60 <button3+0x15>
    4d66:	90 93 61 2a 	sts	0x2A61, r25	; 0x802a61 <button3+0x16>
attachClick():
    4d6a:	85 ef       	ldi	r24, 0xF5	; 245
    4d6c:	9b e0       	ldi	r25, 0x0B	; 11
    4d6e:	80 93 39 2a 	sts	0x2A39, r24	; 0x802a39 <button4+0xd>
    4d72:	90 93 3a 2a 	sts	0x2A3A, r25	; 0x802a3a <button4+0xe>
attachLongPressStart():
    4d76:	83 e5       	ldi	r24, 0x53	; 83
    4d78:	9c e0       	ldi	r25, 0x0C	; 12
    4d7a:	80 93 3f 2a 	sts	0x2A3F, r24	; 0x802a3f <button4+0x13>
    4d7e:	90 93 40 2a 	sts	0x2A40, r25	; 0x802a40 <button4+0x14>
setup():
    4d82:	88 ea       	ldi	r24, 0xA8	; 168
    4d84:	9a e2       	ldi	r25, 0x2A	; 42
    4d86:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    4d8a:	ee e1       	ldi	r30, 0x1E	; 30
    4d8c:	4e 2e       	mov	r4, r30
    4d8e:	51 2c       	mov	r5, r1
    4d90:	f9 e1       	ldi	r31, 0x19	; 25
    4d92:	6f 2e       	mov	r6, r31
    4d94:	71 2c       	mov	r7, r1
    4d96:	aa e0       	ldi	r26, 0x0A	; 10
    4d98:	ea 2e       	mov	r14, r26
    4d9a:	f1 2c       	mov	r15, r1
DISPLAY_DIGIT1():
    4d9c:	08 e1       	ldi	r16, 0x18	; 24
    4d9e:	10 e0       	ldi	r17, 0x00	; 0
    4da0:	b8 e1       	ldi	r27, 0x18	; 24
    4da2:	2b 2e       	mov	r2, r27
    4da4:	31 2c       	mov	r3, r1
DISP_UPDATE():
    4da6:	8b e9       	ldi	r24, 0x9B	; 155
    4da8:	9b e2       	ldi	r25, 0x2B	; 43
    4daa:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
loop():
    4dae:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
    4db2:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    4db6:	88 23       	and	r24, r24
    4db8:	91 f1       	breq	.+100    	; 0x4e1e <main+0x718>
    4dba:	88 ea       	ldi	r24, 0xA8	; 168
    4dbc:	9a e2       	ldi	r25, 0x2A	; 42
    4dbe:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
    4dc2:	89 e1       	ldi	r24, 0x19	; 25
    4dc4:	90 e0       	ldi	r25, 0x00	; 0
    4dc6:	0e 94 b3 0b 	call	0x1766	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
DISPLAY_DIGIT2():
    4dca:	82 e2       	ldi	r24, 0x22	; 34
    4dcc:	90 e0       	ldi	r25, 0x00	; 0
    4dce:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    4dd2:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    4dd6:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits2+0x2>
    4dda:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits2+0x3>
    4dde:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits2+0x4>
    4de2:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits2+0x5>
    4de6:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits2+0x6>
    4dea:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    4dee:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    4df2:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    4df6:	83 e0       	ldi	r24, 0x03	; 3
    4df8:	90 e0       	ldi	r25, 0x00	; 0
    4dfa:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    4dfe:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    4e02:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x4>
    4e06:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <digits1+0x5>
    4e0a:	10 92 f2 28 	sts	0x28F2, r1	; 0x8028f2 <digits1+0x6>
    4e0e:	10 92 f3 28 	sts	0x28F3, r1	; 0x8028f3 <digits1+0x7>
loop():
    4e12:	81 e0       	ldi	r24, 0x01	; 1
    4e14:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
main():
    4e18:	0e 94 2a 08 	call	0x1054	; 0x1054 <serialEventRun()>
    4e1c:	c4 cf       	rjmp	.-120    	; 0x4da6 <main+0x6a0>
stop():
    4e1e:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <VersionDisplay>
    4e22:	10 92 b3 2a 	sts	0x2AB3, r1	; 0x802ab3 <VersionDisplay+0xb>
    4e26:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <VersionDisplay+0xc>
    4e2a:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <VersionDisplay+0xd>
    4e2e:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <VersionDisplay+0xe>
    4e32:	10 92 b7 2a 	sts	0x2AB7, r1	; 0x802ab7 <VersionDisplay+0xf>
    4e36:	10 92 b8 2a 	sts	0x2AB8, r1	; 0x802ab8 <VersionDisplay+0x10>
loop():
    4e3a:	20 e0       	ldi	r18, 0x00	; 0
    4e3c:	30 e0       	ldi	r19, 0x00	; 0
    4e3e:	42 ee       	ldi	r20, 0xE2	; 226
    4e40:	52 e4       	ldi	r21, 0x42	; 66
    4e42:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    4e46:	70 91 dd 28 	lds	r23, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    4e4a:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    4e4e:	90 91 df 28 	lds	r25, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    4e52:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <__gesf2>
    4e56:	87 fd       	sbrc	r24, 7
    4e58:	8c c0       	rjmp	.+280    	; 0x4f72 <main+0x86c>
Probe_Error():
    4e5a:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <DOT2_0>
    4e5e:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <DOT2_2>
    4e62:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    4e66:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <DOT1_2>
    4e6a:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    4e6e:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    4e72:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    4e76:	10 92 dc 29 	sts	0x29DC, r1	; 0x8029dc <PID_SETPOINT>
    4e7a:	10 92 dd 29 	sts	0x29DD, r1	; 0x8029dd <PID_SETPOINT+0x1>
    4e7e:	10 92 de 29 	sts	0x29DE, r1	; 0x8029de <PID_SETPOINT+0x2>
    4e82:	10 92 df 29 	sts	0x29DF, r1	; 0x8029df <PID_SETPOINT+0x3>
    4e86:	10 92 3e 29 	sts	0x293E, r1	; 0x80293e <LONG_PRESS>
    4e8a:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ENTER_BUT>
digitalWrite():
    4e8e:	60 e0       	ldi	r22, 0x00	; 0
    4e90:	8c e0       	ldi	r24, 0x0C	; 12
    4e92:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    4e96:	60 e0       	ldi	r22, 0x00	; 0
    4e98:	8d e0       	ldi	r24, 0x0D	; 13
    4e9a:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    4e9e:	8b e0       	ldi	r24, 0x0B	; 11
    4ea0:	90 e0       	ldi	r25, 0x00	; 0
    4ea2:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    4ea6:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    4eaa:	81 e1       	ldi	r24, 0x11	; 17
    4eac:	90 e0       	ldi	r25, 0x00	; 0
    4eae:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    4eb2:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    4eb6:	27 e1       	ldi	r18, 0x17	; 23
    4eb8:	30 e0       	ldi	r19, 0x00	; 0
    4eba:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    4ebe:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    4ec2:	4e e0       	ldi	r20, 0x0E	; 14
    4ec4:	50 e0       	ldi	r21, 0x00	; 0
    4ec6:	40 93 ea 28 	sts	0x28EA, r20	; 0x8028ea <digits2+0x6>
    4eca:	50 93 eb 28 	sts	0x28EB, r21	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    4ece:	4f e0       	ldi	r20, 0x0F	; 15
    4ed0:	50 e0       	ldi	r21, 0x00	; 0
    4ed2:	40 93 ec 28 	sts	0x28EC, r20	; 0x8028ec <digits1>
    4ed6:	50 93 ed 28 	sts	0x28ED, r21	; 0x8028ed <digits1+0x1>
    4eda:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    4ede:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    4ee2:	20 93 f0 28 	sts	0x28F0, r18	; 0x8028f0 <digits1+0x4>
    4ee6:	30 93 f1 28 	sts	0x28F1, r19	; 0x8028f1 <digits1+0x5>
    4eea:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    4eee:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
interval():
    4ef2:	80 91 53 2b 	lds	r24, 0x2B53	; 0x802b53 <BUZZ_TICK2+0x9>
    4ef6:	90 91 54 2b 	lds	r25, 0x2B54	; 0x802b54 <BUZZ_TICK2+0xa>
    4efa:	89 2b       	or	r24, r25
    4efc:	81 f1       	breq	.+96     	; 0x4f5e <main+0x858>
    4efe:	88 ee       	ldi	r24, 0xE8	; 232
    4f00:	93 e0       	ldi	r25, 0x03	; 3
    4f02:	a0 e0       	ldi	r26, 0x00	; 0
    4f04:	b0 e0       	ldi	r27, 0x00	; 0
    4f06:	80 93 4b 2b 	sts	0x2B4B, r24	; 0x802b4b <BUZZ_TICK2+0x1>
    4f0a:	90 93 4c 2b 	sts	0x2B4C, r25	; 0x802b4c <BUZZ_TICK2+0x2>
    4f0e:	a0 93 4d 2b 	sts	0x2B4D, r26	; 0x802b4d <BUZZ_TICK2+0x3>
    4f12:	b0 93 4e 2b 	sts	0x2B4E, r27	; 0x802b4e <BUZZ_TICK2+0x4>
    4f16:	80 91 6e 2b 	lds	r24, 0x2B6E	; 0x802b6e <BUZZ_TICK1+0x9>
    4f1a:	90 91 6f 2b 	lds	r25, 0x2B6F	; 0x802b6f <BUZZ_TICK1+0xa>
    4f1e:	89 2b       	or	r24, r25
    4f20:	19 f1       	breq	.+70     	; 0x4f68 <main+0x862>
    4f22:	80 ed       	ldi	r24, 0xD0	; 208
    4f24:	97 e0       	ldi	r25, 0x07	; 7
    4f26:	a0 e0       	ldi	r26, 0x00	; 0
    4f28:	b0 e0       	ldi	r27, 0x00	; 0
    4f2a:	80 93 66 2b 	sts	0x2B66, r24	; 0x802b66 <BUZZ_TICK1+0x1>
    4f2e:	90 93 67 2b 	sts	0x2B67, r25	; 0x802b67 <BUZZ_TICK1+0x2>
    4f32:	a0 93 68 2b 	sts	0x2B68, r26	; 0x802b68 <BUZZ_TICK1+0x3>
    4f36:	b0 93 69 2b 	sts	0x2B69, r27	; 0x802b69 <BUZZ_TICK1+0x4>
Probe_Error():
    4f3a:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <REP>
    4f3e:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <REP+0x1>
    4f42:	89 2b       	or	r24, r25
    4f44:	09 f0       	breq	.+2      	; 0x4f48 <main+0x842>
    4f46:	68 cf       	rjmp	.-304    	; 0x4e18 <main+0x712>
BUZZ_TICK_START():
    4f48:	85 e6       	ldi	r24, 0x65	; 101
    4f4a:	9b e2       	ldi	r25, 0x2B	; 43
    4f4c:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
Probe_Error():
    4f50:	81 e0       	ldi	r24, 0x01	; 1
    4f52:	90 e0       	ldi	r25, 0x00	; 0
    4f54:	80 93 a1 28 	sts	0x28A1, r24	; 0x8028a1 <REP>
    4f58:	90 93 a2 28 	sts	0x28A2, r25	; 0x8028a2 <REP+0x1>
    4f5c:	5d cf       	rjmp	.-326    	; 0x4e18 <main+0x712>
main():
    4f5e:	80 e4       	ldi	r24, 0x40	; 64
    4f60:	92 e4       	ldi	r25, 0x42	; 66
    4f62:	af e0       	ldi	r26, 0x0F	; 15
    4f64:	b0 e0       	ldi	r27, 0x00	; 0
    4f66:	cf cf       	rjmp	.-98     	; 0x4f06 <main+0x800>
    4f68:	80 e8       	ldi	r24, 0x80	; 128
    4f6a:	94 e8       	ldi	r25, 0x84	; 132
    4f6c:	ae e1       	ldi	r26, 0x1E	; 30
    4f6e:	b0 e0       	ldi	r27, 0x00	; 0
    4f70:	dc cf       	rjmp	.-72     	; 0x4f2a <main+0x824>
digitalRead():
    4f72:	85 e2       	ldi	r24, 0x25	; 37
    4f74:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
    4f78:	d0 90 41 28 	lds	r13, 0x2841	; 0x802841 <but1>
but_check():
    4f7c:	81 11       	cpse	r24, r1
    4f7e:	42 c0       	rjmp	.+132    	; 0x5004 <main+0x8fe>
digitalRead():
    4f80:	84 e2       	ldi	r24, 0x24	; 36
    4f82:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
but_check():
    4f86:	81 11       	cpse	r24, r1
    4f88:	3d c0       	rjmp	.+122    	; 0x5004 <main+0x8fe>
    4f8a:	d1 10       	cpse	r13, r1
    4f8c:	3b c0       	rjmp	.+118    	; 0x5004 <main+0x8fe>
    4f8e:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    4f92:	60 93 3d 28 	sts	0x283D, r22	; 0x80283d <start_tt>
    4f96:	70 93 3e 28 	sts	0x283E, r23	; 0x80283e <start_tt+0x1>
    4f9a:	80 93 3f 28 	sts	0x283F, r24	; 0x80283f <start_tt+0x2>
    4f9e:	90 93 40 28 	sts	0x2840, r25	; 0x802840 <start_tt+0x3>
    4fa2:	81 e0       	ldi	r24, 0x01	; 1
    4fa4:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <but1>
loop():
    4fa8:	80 91 3e 29 	lds	r24, 0x293E	; 0x80293e <LONG_PRESS>
    4fac:	88 23       	and	r24, r24
    4fae:	11 f4       	brne	.+4      	; 0x4fb4 <main+0x8ae>
    4fb0:	0c 94 08 35 	jmp	0x6a10	; 0x6a10 <main+0x230a>
digitalWrite():
    4fb4:	60 e0       	ldi	r22, 0x00	; 0
    4fb6:	8c e0       	ldi	r24, 0x0C	; 12
    4fb8:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    4fbc:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4fc0:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    4fc4:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    4fc8:	88 23       	and	r24, r24
    4fca:	09 f4       	brne	.+2      	; 0x4fce <main+0x8c8>
    4fcc:	1f c7       	rjmp	.+3646   	; 0x5e0c <main+0x1706>
    4fce:	e3 31       	cpi	r30, 0x13	; 19
    4fd0:	f1 05       	cpc	r31, r1
    4fd2:	08 f0       	brcs	.+2      	; 0x4fd6 <main+0x8d0>
    4fd4:	21 cf       	rjmp	.-446    	; 0x4e18 <main+0x712>
    4fd6:	e1 51       	subi	r30, 0x11	; 17
    4fd8:	f8 4d       	sbci	r31, 0xD8	; 216
    4fda:	0c 94 78 37 	jmp	0x6ef0	; 0x6ef0 <__tablejump2__>
    4fde:	56 28       	or	r5, r6
    4fe0:	af 28       	or	r10, r15
    4fe2:	ed 28       	or	r14, r13
    4fe4:	58 29       	or	r21, r8
    4fe6:	c4 29       	or	r28, r4
    4fe8:	12 2a       	or	r1, r18
    4fea:	61 2a       	or	r6, r17
    4fec:	a2 2a       	or	r10, r18
    4fee:	cf 2a       	or	r12, r31
    4ff0:	1c 2b       	or	r17, r28
    4ff2:	6b 2b       	or	r22, r27
    4ff4:	b0 2b       	or	r27, r16
    4ff6:	f2 2b       	or	r31, r18
    4ff8:	6b 2c       	mov	r6, r11
    4ffa:	9d 2c       	mov	r9, r13
    4ffc:	15 2d       	mov	r17, r5
    4ffe:	1a 2d       	mov	r17, r10
    5000:	47 2d       	mov	r20, r7
    5002:	7a 2d       	mov	r23, r10
digitalRead():
    5004:	85 e2       	ldi	r24, 0x25	; 37
    5006:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
but_check():
    500a:	88 23       	and	r24, r24
    500c:	61 f0       	breq	.+24     	; 0x5026 <main+0x920>
    500e:	dd 20       	and	r13, r13
    5010:	09 f4       	brne	.+2      	; 0x5014 <main+0x90e>
    5012:	ca cf       	rjmp	.-108    	; 0x4fa8 <main+0x8a2>
digitalRead():
    5014:	85 e2       	ldi	r24, 0x25	; 37
    5016:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
but_check():
    501a:	81 30       	cpi	r24, 0x01	; 1
    501c:	09 f0       	breq	.+2      	; 0x5020 <main+0x91a>
    501e:	3f c0       	rjmp	.+126    	; 0x509e <main+0x998>
    5020:	10 92 41 28 	sts	0x2841, r1	; 0x802841 <but1>
    5024:	c1 cf       	rjmp	.-126    	; 0x4fa8 <main+0x8a2>
    5026:	c0 90 3e 29 	lds	r12, 0x293E	; 0x80293e <LONG_PRESS>
digitalRead():
    502a:	84 e2       	ldi	r24, 0x24	; 36
    502c:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
but_check():
    5030:	81 11       	cpse	r24, r1
    5032:	ed cf       	rjmp	.-38     	; 0x500e <main+0x908>
    5034:	dd 20       	and	r13, r13
    5036:	09 f4       	brne	.+2      	; 0x503a <main+0x934>
    5038:	b7 cf       	rjmp	.-146    	; 0x4fa8 <main+0x8a2>
    503a:	0e 94 23 0a 	call	0x1446	; 0x1446 <millis>
    503e:	80 90 3d 28 	lds	r8, 0x283D	; 0x80283d <start_tt>
    5042:	90 90 3e 28 	lds	r9, 0x283E	; 0x80283e <start_tt+0x1>
    5046:	a0 90 3f 28 	lds	r10, 0x283F	; 0x80283f <start_tt+0x2>
    504a:	b0 90 40 28 	lds	r11, 0x2840	; 0x802840 <start_tt+0x3>
    504e:	68 19       	sub	r22, r8
    5050:	79 09       	sbc	r23, r9
    5052:	8a 09       	sbc	r24, r10
    5054:	9b 09       	sbc	r25, r11
    5056:	68 3b       	cpi	r22, 0xB8	; 184
    5058:	7b 40       	sbci	r23, 0x0B	; 11
    505a:	81 05       	cpc	r24, r1
    505c:	91 05       	cpc	r25, r1
    505e:	08 f4       	brcc	.+2      	; 0x5062 <main+0x95c>
    5060:	a3 cf       	rjmp	.-186    	; 0x4fa8 <main+0x8a2>
    5062:	84 ef       	ldi	r24, 0xF4	; 244
    5064:	91 e0       	ldi	r25, 0x01	; 1
    5066:	0e 94 b3 0b 	call	0x1766	; 0x1766 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.56]>
    506a:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <ENTER_BUT>
    506e:	81 11       	cpse	r24, r1
    5070:	9b cf       	rjmp	.-202    	; 0x4fa8 <main+0x8a2>
    5072:	c1 10       	cpse	r12, r1
    5074:	9f cf       	rjmp	.-194    	; 0x4fb4 <main+0x8ae>
    5076:	8e e5       	ldi	r24, 0x5E	; 94
    5078:	91 e0       	ldi	r25, 0x01	; 1
    507a:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <i>
    507e:	90 93 92 28 	sts	0x2892, r25	; 0x802892 <i+0x1>
    5082:	81 e0       	ldi	r24, 0x01	; 1
    5084:	80 93 3e 29 	sts	0x293E, r24	; 0x80293e <LONG_PRESS>
    5088:	80 93 3c 28 	sts	0x283C, r24	; 0x80283c <RST_BUTT>
    508c:	80 93 3b 28 	sts	0x283B, r24	; 0x80283b <Service_Menu>
    5090:	85 e0       	ldi	r24, 0x05	; 5
    5092:	90 e0       	ldi	r25, 0x00	; 0
    5094:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5098:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    509c:	85 cf       	rjmp	.-246    	; 0x4fa8 <main+0x8a2>
digitalRead():
    509e:	84 e2       	ldi	r24, 0x24	; 36
    50a0:	0e 94 da 09 	call	0x13b4	; 0x13b4 <digitalRead.part.3>
but_check():
    50a4:	81 30       	cpi	r24, 0x01	; 1
    50a6:	09 f0       	breq	.+2      	; 0x50aa <main+0x9a4>
    50a8:	7f cf       	rjmp	.-258    	; 0x4fa8 <main+0x8a2>
    50aa:	ba cf       	rjmp	.-140    	; 0x5020 <main+0x91a>
SET_LONG_PRESS_FUNCTION():
    50ac:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    50b0:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    50b4:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    50b8:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    50bc:	8c e0       	ldi	r24, 0x0C	; 12
    50be:	90 e0       	ldi	r25, 0x00	; 0
    50c0:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    50c4:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    50c8:	80 e1       	ldi	r24, 0x10	; 16
    50ca:	90 e0       	ldi	r25, 0x00	; 0
    50cc:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    50d0:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    50d4:	60 92 e8 28 	sts	0x28E8, r6	; 0x8028e8 <digits2+0x4>
    50d8:	70 92 e9 28 	sts	0x28E9, r7	; 0x8028e9 <digits2+0x5>
    50dc:	81 e1       	ldi	r24, 0x11	; 17
    50de:	90 e0       	ldi	r25, 0x00	; 0
    50e0:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    50e4:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    50e8:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    50ec:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    50f0:	89 31       	cpi	r24, 0x19	; 25
    50f2:	91 05       	cpc	r25, r1
    50f4:	4c f4       	brge	.+18     	; 0x5108 <main+0xa02>
DISPLAY_DIGIT1():
    50f6:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    50fa:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    50fe:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    5102:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    5106:	03 c7       	rjmp	.+3590   	; 0x5f0e <main+0x1808>
SET_LONG_PRESS_FUNCTION():
    5108:	20 91 0b 29 	lds	r18, 0x290B	; 0x80290b <SET_LONG_VALUE>
    510c:	30 91 0c 29 	lds	r19, 0x290C	; 0x80290c <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    5110:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <digits1>
    5114:	10 92 ed 28 	sts	0x28ED, r1	; 0x8028ed <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    5118:	23 2b       	or	r18, r19
    511a:	b1 f4       	brne	.+44     	; 0x5148 <main+0xa42>
DISPLAY_DIGIT1():
    511c:	25 e1       	ldi	r18, 0x15	; 21
    511e:	30 e0       	ldi	r19, 0x00	; 0
    5120:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    5124:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    5128:	20 93 f0 28 	sts	0x28F0, r18	; 0x8028f0 <digits1+0x4>
    512c:	30 93 f1 28 	sts	0x28F1, r19	; 0x8028f1 <digits1+0x5>
    5130:	00 93 f2 28 	sts	0x28F2, r16	; 0x8028f2 <digits1+0x6>
    5134:	10 93 f3 28 	sts	0x28F3, r17	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5138:	c3 97       	sbiw	r24, 0x33	; 51
    513a:	0c f4       	brge	.+2      	; 0x513e <main+0xa38>
    513c:	6d ce       	rjmp	.-806    	; 0x4e18 <main+0x712>
    513e:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    5142:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    5146:	68 ce       	rjmp	.-816    	; 0x4e18 <main+0x712>
DISPLAY_DIGIT1():
    5148:	24 e1       	ldi	r18, 0x14	; 20
    514a:	30 e0       	ldi	r19, 0x00	; 0
    514c:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    5150:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    5154:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5158:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    515c:	e9 cf       	rjmp	.-46     	; 0x5130 <main+0xa2a>
SET_LONG_PRESS_FUNCTION():
    515e:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5162:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5166:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
DISPLAY_DIGIT2():
    516a:	8c e1       	ldi	r24, 0x1C	; 28
    516c:	90 e0       	ldi	r25, 0x00	; 0
    516e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5172:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5176:	84 e1       	ldi	r24, 0x14	; 20
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    517e:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5182:	60 92 e8 28 	sts	0x28E8, r6	; 0x8028e8 <digits2+0x4>
    5186:	70 92 e9 28 	sts	0x28E9, r7	; 0x8028e9 <digits2+0x5>
    518a:	80 e1       	ldi	r24, 0x10	; 16
    518c:	90 e0       	ldi	r25, 0x00	; 0
    518e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5192:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5196:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    519a:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    519e:	89 31       	cpi	r24, 0x19	; 25
    51a0:	91 05       	cpc	r25, r1
    51a2:	0c f4       	brge	.+2      	; 0x51a6 <main+0xaa0>
    51a4:	a8 cf       	rjmp	.-176    	; 0x50f6 <main+0x9f0>
    51a6:	20 91 0d 29 	lds	r18, 0x290D	; 0x80290d <SET_LONG_VALUE+0x2>
    51aa:	30 91 0e 29 	lds	r19, 0x290E	; 0x80290e <SET_LONG_VALUE+0x3>
    51ae:	23 2b       	or	r18, r19
    51b0:	59 f4       	brne	.+22     	; 0x51c8 <main+0xac2>
DISPLAY_DIGIT1():
    51b2:	2d e1       	ldi	r18, 0x1D	; 29
    51b4:	30 e0       	ldi	r19, 0x00	; 0
    51b6:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    51ba:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    51be:	e0 92 ee 28 	sts	0x28EE, r14	; 0x8028ee <digits1+0x2>
    51c2:	f0 92 ef 28 	sts	0x28EF, r15	; 0x8028ef <digits1+0x3>
    51c6:	c6 cf       	rjmp	.-116    	; 0x5154 <main+0xa4e>
    51c8:	2d e1       	ldi	r18, 0x1D	; 29
    51ca:	30 e0       	ldi	r19, 0x00	; 0
    51cc:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    51d0:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    51d4:	25 e1       	ldi	r18, 0x15	; 21
    51d6:	30 e0       	ldi	r19, 0x00	; 0
    51d8:	b9 cf       	rjmp	.-142    	; 0x514c <main+0xa46>
SET_LONG_PRESS_FUNCTION():
    51da:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    51de:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
DISPLAY_DIGIT2():
    51e2:	8c e0       	ldi	r24, 0x0C	; 12
    51e4:	90 e0       	ldi	r25, 0x00	; 0
    51e6:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    51ea:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    51ee:	8d e0       	ldi	r24, 0x0D	; 13
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    51f6:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    51fa:	85 e1       	ldi	r24, 0x15	; 21
    51fc:	90 e0       	ldi	r25, 0x00	; 0
    51fe:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    5202:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    5206:	8f e0       	ldi	r24, 0x0F	; 15
    5208:	90 e0       	ldi	r25, 0x00	; 0
    520a:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    520e:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
    5212:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    5216:	20 91 91 28 	lds	r18, 0x2891	; 0x802891 <i>
    521a:	30 91 92 28 	lds	r19, 0x2892	; 0x802892 <i+0x1>
    521e:	29 31       	cpi	r18, 0x19	; 25
    5220:	31 05       	cpc	r19, r1
    5222:	d4 f4       	brge	.+52     	; 0x5258 <main+0xb52>
    5224:	90 91 8f 28 	lds	r25, 0x288F	; 0x80288f <BLINK_STATS>
    5228:	91 11       	cpse	r25, r1
    522a:	11 c0       	rjmp	.+34     	; 0x524e <main+0xb48>
DISPLAY_DIGIT1():
    522c:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    5230:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    5234:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    5238:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    523c:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5240:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5244:	88 23       	and	r24, r24
    5246:	f1 f0       	breq	.+60     	; 0x5284 <main+0xb7e>
    5248:	85 e1       	ldi	r24, 0x15	; 21
    524a:	90 e0       	ldi	r25, 0x00	; 0
    524c:	81 c0       	rjmp	.+258    	; 0x5350 <main+0xc4a>
    524e:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    5252:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    5256:	f6 cf       	rjmp	.-20     	; 0x5244 <main+0xb3e>
    5258:	81 11       	cpse	r24, r1
    525a:	19 c0       	rjmp	.+50     	; 0x528e <main+0xb88>
    525c:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_LONG_VALUE+0x4>
    5260:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_LONG_VALUE+0x5>
    5264:	2a e0       	ldi	r18, 0x0A	; 10
    5266:	28 9f       	mul	r18, r24
    5268:	b0 01       	movw	r22, r0
    526a:	29 9f       	mul	r18, r25
    526c:	70 0d       	add	r23, r0
    526e:	11 24       	eor	r1, r1
    5270:	07 2e       	mov	r0, r23
    5272:	00 0c       	add	r0, r0
    5274:	88 0b       	sbc	r24, r24
    5276:	99 0b       	sbc	r25, r25
    5278:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    527c:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    5280:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    5284:	e0 92 f2 28 	sts	0x28F2, r14	; 0x8028f2 <digits1+0x6>
    5288:	f0 92 f3 28 	sts	0x28F3, r15	; 0x8028f3 <digits1+0x7>
    528c:	65 c0       	rjmp	.+202    	; 0x5358 <main+0xc52>
    528e:	80 91 31 29 	lds	r24, 0x2931	; 0x802931 <SET_LONG_VALUE+0x26>
    5292:	90 91 32 29 	lds	r25, 0x2932	; 0x802932 <SET_LONG_VALUE+0x27>
    5296:	2a e0       	ldi	r18, 0x0A	; 10
    5298:	28 9f       	mul	r18, r24
    529a:	b0 01       	movw	r22, r0
    529c:	29 9f       	mul	r18, r25
    529e:	70 0d       	add	r23, r0
    52a0:	11 24       	eor	r1, r1
    52a2:	07 2e       	mov	r0, r23
    52a4:	00 0c       	add	r0, r0
    52a6:	88 0b       	sbc	r24, r24
    52a8:	99 0b       	sbc	r25, r25
    52aa:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    52ae:	cc cf       	rjmp	.-104    	; 0x5248 <main+0xb42>
    52b0:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    52b4:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    52b8:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    52bc:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    52c0:	80 e1       	ldi	r24, 0x10	; 16
    52c2:	90 e0       	ldi	r25, 0x00	; 0
    52c4:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    52c8:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    52cc:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits2+0x2>
    52d0:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits2+0x3>
    52d4:	22 e1       	ldi	r18, 0x12	; 18
    52d6:	30 e0       	ldi	r19, 0x00	; 0
    52d8:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    52dc:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    52e0:	2f e0       	ldi	r18, 0x0F	; 15
    52e2:	30 e0       	ldi	r19, 0x00	; 0
    52e4:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    52e8:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    52ec:	20 91 91 28 	lds	r18, 0x2891	; 0x802891 <i>
    52f0:	30 91 92 28 	lds	r19, 0x2892	; 0x802892 <i+0x1>
    52f4:	29 31       	cpi	r18, 0x19	; 25
    52f6:	31 05       	cpc	r19, r1
    52f8:	ac f4       	brge	.+42     	; 0x5324 <main+0xc1e>
    52fa:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    52fe:	81 11       	cpse	r24, r1
    5300:	5d c2       	rjmp	.+1210   	; 0x57bc <main+0x10b6>
DISPLAY_DIGIT1():
    5302:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    5306:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    530a:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    530e:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    5312:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5316:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    531a:	00 93 f2 28 	sts	0x28F2, r16	; 0x8028f2 <digits1+0x6>
    531e:	10 93 f3 28 	sts	0x28F3, r17	; 0x8028f3 <digits1+0x7>
    5322:	1a c0       	rjmp	.+52     	; 0x5358 <main+0xc52>
SET_LONG_PRESS_FUNCTION():
    5324:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_LONG_VALUE+0x6>
    5328:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_LONG_VALUE+0x7>
    532c:	23 2b       	or	r18, r19
    532e:	c9 f4       	brne	.+50     	; 0x5362 <main+0xc5c>
DISPLAY_DIGIT1():
    5330:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5334:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5338:	27 e1       	ldi	r18, 0x17	; 23
    533a:	30 e0       	ldi	r19, 0x00	; 0
    533c:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    5340:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    5344:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5348:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    534c:	8f e1       	ldi	r24, 0x1F	; 31
    534e:	90 e0       	ldi	r25, 0x00	; 0
    5350:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    5354:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5358:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    535c:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5360:	eb ce       	rjmp	.-554    	; 0x5138 <main+0xa32>
DISPLAY_DIGIT1():
    5362:	8c e0       	ldi	r24, 0x0C	; 12
    5364:	90 e0       	ldi	r25, 0x00	; 0
    5366:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    536a:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    536e:	87 e1       	ldi	r24, 0x17	; 23
    5370:	90 e0       	ldi	r25, 0x00	; 0
    5372:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    5376:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    537a:	8d e0       	ldi	r24, 0x0D	; 13
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5382:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    5386:	7e cf       	rjmp	.-260    	; 0x5284 <main+0xb7e>
SET_LONG_PRESS_FUNCTION():
    5388:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    538c:	8b e0       	ldi	r24, 0x0B	; 11
    538e:	90 e0       	ldi	r25, 0x00	; 0
    5390:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5394:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5398:	81 e1       	ldi	r24, 0x11	; 17
    539a:	90 e0       	ldi	r25, 0x00	; 0
    539c:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    53a0:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    53a4:	87 e1       	ldi	r24, 0x17	; 23
    53a6:	90 e0       	ldi	r25, 0x00	; 0
    53a8:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    53ac:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    53b0:	8c e0       	ldi	r24, 0x0C	; 12
    53b2:	90 e0       	ldi	r25, 0x00	; 0
    53b4:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    53b8:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    53bc:	20 91 91 28 	lds	r18, 0x2891	; 0x802891 <i>
    53c0:	30 91 92 28 	lds	r19, 0x2892	; 0x802892 <i+0x1>
    53c4:	29 31       	cpi	r18, 0x19	; 25
    53c6:	31 05       	cpc	r19, r1
    53c8:	0c f4       	brge	.+2      	; 0x53cc <main+0xcc6>
    53ca:	97 cf       	rjmp	.-210    	; 0x52fa <main+0xbf4>
    53cc:	20 91 13 29 	lds	r18, 0x2913	; 0x802913 <SET_LONG_VALUE+0x8>
    53d0:	30 91 14 29 	lds	r19, 0x2914	; 0x802914 <SET_LONG_VALUE+0x9>
    53d4:	23 2b       	or	r18, r19
    53d6:	89 f4       	brne	.+34     	; 0x53fa <main+0xcf4>
DISPLAY_DIGIT1():
    53d8:	20 e2       	ldi	r18, 0x20	; 32
    53da:	30 e0       	ldi	r19, 0x00	; 0
    53dc:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    53e0:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    53e4:	60 92 ee 28 	sts	0x28EE, r6	; 0x8028ee <digits1+0x2>
    53e8:	70 92 ef 28 	sts	0x28EF, r7	; 0x8028ef <digits1+0x3>
    53ec:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    53f0:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    53f4:	8e e0       	ldi	r24, 0x0E	; 14
    53f6:	90 e0       	ldi	r25, 0x00	; 0
    53f8:	ab cf       	rjmp	.-170    	; 0x5350 <main+0xc4a>
    53fa:	8f e0       	ldi	r24, 0x0F	; 15
    53fc:	90 e0       	ldi	r25, 0x00	; 0
    53fe:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5402:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5406:	84 e1       	ldi	r24, 0x14	; 20
    5408:	90 e0       	ldi	r25, 0x00	; 0
    540a:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    540e:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    5412:	8e e0       	ldi	r24, 0x0E	; 14
    5414:	90 e0       	ldi	r25, 0x00	; 0
    5416:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    541a:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    541e:	8a e1       	ldi	r24, 0x1A	; 26
    5420:	90 e0       	ldi	r25, 0x00	; 0
    5422:	96 cf       	rjmp	.-212    	; 0x5350 <main+0xc4a>
SET_LONG_PRESS_FUNCTION():
    5424:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5428:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    542c:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    5430:	8b e0       	ldi	r24, 0x0B	; 11
    5432:	90 e0       	ldi	r25, 0x00	; 0
    5434:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5438:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    543c:	81 e1       	ldi	r24, 0x11	; 17
    543e:	90 e0       	ldi	r25, 0x00	; 0
    5440:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5444:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5448:	80 e2       	ldi	r24, 0x20	; 32
    544a:	90 e0       	ldi	r25, 0x00	; 0
    544c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    5450:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    5454:	80 e1       	ldi	r24, 0x10	; 16
    5456:	90 e0       	ldi	r25, 0x00	; 0
    5458:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    545c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5460:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    5464:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5468:	49 97       	sbiw	r24, 0x19	; 25
    546a:	0c f4       	brge	.+2      	; 0x546e <main+0xd68>
    546c:	46 cf       	rjmp	.-372    	; 0x52fa <main+0xbf4>
    546e:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_LONG_VALUE+0xa>
    5472:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_LONG_VALUE+0xb>
    5476:	89 2b       	or	r24, r25
    5478:	99 f0       	breq	.+38     	; 0x54a0 <main+0xd9a>
DISPLAY_DIGIT1():
    547a:	84 e2       	ldi	r24, 0x24	; 36
    547c:	90 e0       	ldi	r25, 0x00	; 0
    547e:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5482:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5486:	8a e1       	ldi	r24, 0x1A	; 26
    5488:	90 e0       	ldi	r25, 0x00	; 0
    548a:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    548e:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    5492:	8c e0       	ldi	r24, 0x0C	; 12
    5494:	90 e0       	ldi	r25, 0x00	; 0
    5496:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    549a:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    549e:	3d cf       	rjmp	.-390    	; 0x531a <main+0xc14>
    54a0:	84 e2       	ldi	r24, 0x24	; 36
    54a2:	90 e0       	ldi	r25, 0x00	; 0
    54a4:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    54a8:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    54ac:	8a e1       	ldi	r24, 0x1A	; 26
    54ae:	90 e0       	ldi	r25, 0x00	; 0
    54b0:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    54b4:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    54b8:	e0 92 f0 28 	sts	0x28F0, r14	; 0x8028f0 <digits1+0x4>
    54bc:	f0 92 f1 28 	sts	0x28F1, r15	; 0x8028f1 <digits1+0x5>
    54c0:	2c cf       	rjmp	.-424    	; 0x531a <main+0xc14>
SET_LONG_PRESS_FUNCTION():
    54c2:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    54c6:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    54ca:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    54ce:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    54d2:	2d e0       	ldi	r18, 0x0D	; 13
    54d4:	30 e0       	ldi	r19, 0x00	; 0
    54d6:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits2+0x2>
    54da:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits2+0x3>
    54de:	8a e1       	ldi	r24, 0x1A	; 26
    54e0:	90 e0       	ldi	r25, 0x00	; 0
    54e2:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    54e6:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    54ea:	4e e0       	ldi	r20, 0x0E	; 14
    54ec:	50 e0       	ldi	r21, 0x00	; 0
    54ee:	40 93 ea 28 	sts	0x28EA, r20	; 0x8028ea <digits2+0x6>
    54f2:	50 93 eb 28 	sts	0x28EB, r21	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    54f6:	40 91 91 28 	lds	r20, 0x2891	; 0x802891 <i>
    54fa:	50 91 92 28 	lds	r21, 0x2892	; 0x802892 <i+0x1>
    54fe:	49 31       	cpi	r20, 0x19	; 25
    5500:	51 05       	cpc	r21, r1
    5502:	0c f4       	brge	.+2      	; 0x5506 <main+0xe00>
    5504:	f8 cd       	rjmp	.-1040   	; 0x50f6 <main+0x9f0>
    5506:	60 91 17 29 	lds	r22, 0x2917	; 0x802917 <SET_LONG_VALUE+0xc>
    550a:	70 91 18 29 	lds	r23, 0x2918	; 0x802918 <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    550e:	e0 92 ec 28 	sts	0x28EC, r14	; 0x8028ec <digits1>
    5512:	f0 92 ed 28 	sts	0x28ED, r15	; 0x8028ed <digits1+0x1>
    5516:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    551a:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    551e:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5522:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    5526:	82 e0       	ldi	r24, 0x02	; 2
    5528:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    552a:	67 2b       	or	r22, r23
    552c:	11 f4       	brne	.+4      	; 0x5532 <main+0xe2c>
DISPLAY_DIGIT1():
    552e:	81 e0       	ldi	r24, 0x01	; 1
    5530:	90 e0       	ldi	r25, 0x00	; 0
    5532:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    5536:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    553a:	43 33       	cpi	r20, 0x33	; 51
    553c:	51 05       	cpc	r21, r1
    553e:	0c f0       	brlt	.+2      	; 0x5542 <main+0xe3c>
    5540:	fe cd       	rjmp	.-1028   	; 0x513e <main+0xa38>
    5542:	6a cc       	rjmp	.-1836   	; 0x4e18 <main+0x712>
    5544:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5548:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    554c:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    5550:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    5554:	8d e0       	ldi	r24, 0x0D	; 13
    5556:	90 e0       	ldi	r25, 0x00	; 0
    5558:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    555c:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5560:	8a e1       	ldi	r24, 0x1A	; 26
    5562:	90 e0       	ldi	r25, 0x00	; 0
    5564:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    5568:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    556c:	81 e0       	ldi	r24, 0x01	; 1
    556e:	90 e0       	ldi	r25, 0x00	; 0
    5570:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5574:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5578:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    557c:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5580:	49 97       	sbiw	r24, 0x19	; 25
    5582:	04 f5       	brge	.+64     	; 0x55c4 <main+0xebe>
    5584:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5588:	81 11       	cpse	r24, r1
    558a:	d2 c1       	rjmp	.+932    	; 0x5930 <main+0x122a>
    558c:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    5590:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    5594:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    5598:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    559c:	73 ce       	rjmp	.-794    	; 0x5284 <main+0xb7e>
    559e:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    55a2:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    55a6:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    55aa:	21 11       	cpse	r18, r1
    55ac:	28 c0       	rjmp	.+80     	; 0x55fe <main+0xef8>
    55ae:	49 97       	sbiw	r24, 0x19	; 25
    55b0:	4c f4       	brge	.+18     	; 0x55c4 <main+0xebe>
    55b2:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    55b6:	81 11       	cpse	r24, r1
    55b8:	bb c1       	rjmp	.+886    	; 0x5930 <main+0x122a>
    55ba:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    55be:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    55c2:	60 ce       	rjmp	.-832    	; 0x5284 <main+0xb7e>
    55c4:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <SET_LONG_VALUE+0xe>
    55c8:	90 91 1a 29 	lds	r25, 0x291A	; 0x80291a <SET_LONG_VALUE+0xf>
    55cc:	24 e6       	ldi	r18, 0x64	; 100
    55ce:	28 9f       	mul	r18, r24
    55d0:	b0 01       	movw	r22, r0
    55d2:	29 9f       	mul	r18, r25
    55d4:	70 0d       	add	r23, r0
    55d6:	11 24       	eor	r1, r1
    55d8:	20 91 1b 29 	lds	r18, 0x291B	; 0x80291b <SET_LONG_VALUE+0x10>
    55dc:	30 91 1c 29 	lds	r19, 0x291C	; 0x80291c <SET_LONG_VALUE+0x11>
    55e0:	4a e0       	ldi	r20, 0x0A	; 10
    55e2:	42 9f       	mul	r20, r18
    55e4:	c0 01       	movw	r24, r0
    55e6:	43 9f       	mul	r20, r19
    55e8:	90 0d       	add	r25, r0
    55ea:	11 24       	eor	r1, r1
    55ec:	68 0f       	add	r22, r24
    55ee:	79 1f       	adc	r23, r25
    55f0:	07 2e       	mov	r0, r23
    55f2:	00 0c       	add	r0, r0
    55f4:	88 0b       	sbc	r24, r24
    55f6:	99 0b       	sbc	r25, r25
    55f8:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    55fc:	43 ce       	rjmp	.-890    	; 0x5284 <main+0xb7e>
    55fe:	49 97       	sbiw	r24, 0x19	; 25
    5600:	b4 f4       	brge	.+44     	; 0x562e <main+0xf28>
    5602:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5606:	81 11       	cpse	r24, r1
    5608:	0d c0       	rjmp	.+26     	; 0x5624 <main+0xf1e>
DISPLAY_DIGIT1():
    560a:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    560e:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    5612:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    5616:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    561a:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    561e:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    5622:	12 ce       	rjmp	.-988    	; 0x5248 <main+0xb42>
SET_LONG_PRESS_FUNCTION():
    5624:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    5628:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    562c:	0d ce       	rjmp	.-998    	; 0x5248 <main+0xb42>
    562e:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x28>
    5632:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x29>
    5636:	2f ce       	rjmp	.-930    	; 0x5296 <main+0xb90>
    5638:	dd 24       	eor	r13, r13
    563a:	d3 94       	inc	r13
    563c:	d0 92 ab 28 	sts	0x28AB, r13	; 0x8028ab <DOT1_0>
    5640:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5644:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5648:	d0 92 9f 28 	sts	0x289F, r13	; 0x80289f <CAL2_START>
DISPLAY_DIGIT2():
    564c:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    5650:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    5654:	8d e0       	ldi	r24, 0x0D	; 13
    5656:	90 e0       	ldi	r25, 0x00	; 0
    5658:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    565c:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5660:	8a e1       	ldi	r24, 0x1A	; 26
    5662:	90 e0       	ldi	r25, 0x00	; 0
    5664:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    5668:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    566c:	82 e0       	ldi	r24, 0x02	; 2
    566e:	90 e0       	ldi	r25, 0x00	; 0
    5670:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5674:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5678:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    567c:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5680:	49 97       	sbiw	r24, 0x19	; 25
    5682:	c4 f4       	brge	.+48     	; 0x56b4 <main+0xfae>
    5684:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5688:	81 11       	cpse	r24, r1
    568a:	0f c0       	rjmp	.+30     	; 0x56aa <main+0xfa4>
DISPLAY_DIGIT1():
    568c:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    5690:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    5694:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5698:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    569c:	8a e1       	ldi	r24, 0x1A	; 26
    569e:	90 e0       	ldi	r25, 0x00	; 0
    56a0:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    56a4:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    56a8:	ed cd       	rjmp	.-1062   	; 0x5284 <main+0xb7e>
    56aa:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    56ae:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    56b2:	f4 cf       	rjmp	.-24     	; 0x569c <main+0xf96>
    56b4:	80 91 1d 29 	lds	r24, 0x291D	; 0x80291d <SET_LONG_VALUE+0x12>
    56b8:	90 91 1e 29 	lds	r25, 0x291E	; 0x80291e <SET_LONG_VALUE+0x13>
    56bc:	2a e0       	ldi	r18, 0x0A	; 10
    56be:	28 9f       	mul	r18, r24
    56c0:	b0 01       	movw	r22, r0
    56c2:	29 9f       	mul	r18, r25
    56c4:	70 0d       	add	r23, r0
    56c6:	11 24       	eor	r1, r1
    56c8:	07 2e       	mov	r0, r23
    56ca:	00 0c       	add	r0, r0
    56cc:	88 0b       	sbc	r24, r24
    56ce:	99 0b       	sbc	r25, r25
    56d0:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    56d4:	e3 cf       	rjmp	.-58     	; 0x569c <main+0xf96>
    56d6:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    56da:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    56de:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    56e2:	8d e0       	ldi	r24, 0x0D	; 13
    56e4:	90 e0       	ldi	r25, 0x00	; 0
    56e6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    56ea:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    56ee:	8a e1       	ldi	r24, 0x1A	; 26
    56f0:	90 e0       	ldi	r25, 0x00	; 0
    56f2:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    56f6:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    56fa:	82 e0       	ldi	r24, 0x02	; 2
    56fc:	90 e0       	ldi	r25, 0x00	; 0
    56fe:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5702:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5706:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    570a:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    570e:	49 97       	sbiw	r24, 0x19	; 25
    5710:	b4 f4       	brge	.+44     	; 0x573e <main+0x1038>
    5712:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5716:	81 11       	cpse	r24, r1
    5718:	0d c0       	rjmp	.+26     	; 0x5734 <main+0x102e>
DISPLAY_DIGIT1():
    571a:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    571e:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    5722:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5726:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    572a:	40 92 ec 28 	sts	0x28EC, r4	; 0x8028ec <digits1>
    572e:	50 92 ed 28 	sts	0x28ED, r5	; 0x8028ed <digits1+0x1>
    5732:	a8 cd       	rjmp	.-1200   	; 0x5284 <main+0xb7e>
    5734:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    5738:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    573c:	f6 cf       	rjmp	.-20     	; 0x572a <main+0x1024>
    573e:	80 91 1f 29 	lds	r24, 0x291F	; 0x80291f <SET_LONG_VALUE+0x14>
    5742:	90 91 20 29 	lds	r25, 0x2920	; 0x802920 <SET_LONG_VALUE+0x15>
    5746:	2a e0       	ldi	r18, 0x0A	; 10
    5748:	28 9f       	mul	r18, r24
    574a:	b0 01       	movw	r22, r0
    574c:	29 9f       	mul	r18, r25
    574e:	70 0d       	add	r23, r0
    5750:	11 24       	eor	r1, r1
    5752:	07 2e       	mov	r0, r23
    5754:	00 0c       	add	r0, r0
    5756:	88 0b       	sbc	r24, r24
    5758:	99 0b       	sbc	r25, r25
    575a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    575e:	e5 cf       	rjmp	.-54     	; 0x572a <main+0x1024>
    5760:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5764:	81 e0       	ldi	r24, 0x01	; 1
    5766:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
    576a:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    576e:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5772:	07 2e       	mov	r0, r23
    5774:	00 0c       	add	r0, r0
    5776:	88 0b       	sbc	r24, r24
    5778:	99 0b       	sbc	r25, r25
    577a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    577e:	8a e1       	ldi	r24, 0x1A	; 26
    5780:	90 e0       	ldi	r25, 0x00	; 0
    5782:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5786:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    578a:	87 e1       	ldi	r24, 0x17	; 23
    578c:	90 e0       	ldi	r25, 0x00	; 0
    578e:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5792:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5796:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    579a:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    579e:	49 97       	sbiw	r24, 0x19	; 25
    57a0:	94 f4       	brge	.+36     	; 0x57c6 <main+0x10c0>
    57a2:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    57a6:	81 11       	cpse	r24, r1
    57a8:	09 c0       	rjmp	.+18     	; 0x57bc <main+0x10b6>
    57aa:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    57ae:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    57b2:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    57b6:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    57ba:	ce cd       	rjmp	.-1124   	; 0x5358 <main+0xc52>
    57bc:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    57c0:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    57c4:	c9 cd       	rjmp	.-1134   	; 0x5358 <main+0xc52>
    57c6:	80 91 21 29 	lds	r24, 0x2921	; 0x802921 <SET_LONG_VALUE+0x16>
    57ca:	90 91 22 29 	lds	r25, 0x2922	; 0x802922 <SET_LONG_VALUE+0x17>
    57ce:	24 e6       	ldi	r18, 0x64	; 100
    57d0:	28 9f       	mul	r18, r24
    57d2:	b0 01       	movw	r22, r0
    57d4:	29 9f       	mul	r18, r25
    57d6:	70 0d       	add	r23, r0
    57d8:	11 24       	eor	r1, r1
    57da:	20 91 23 29 	lds	r18, 0x2923	; 0x802923 <SET_LONG_VALUE+0x18>
    57de:	30 91 24 29 	lds	r19, 0x2924	; 0x802924 <SET_LONG_VALUE+0x19>
    57e2:	fe ce       	rjmp	.-516    	; 0x55e0 <main+0xeda>
    57e4:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    57e8:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    57ec:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    57f0:	07 2e       	mov	r0, r23
    57f2:	00 0c       	add	r0, r0
    57f4:	88 0b       	sbc	r24, r24
    57f6:	99 0b       	sbc	r25, r25
    57f8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    57fc:	8a e1       	ldi	r24, 0x1A	; 26
    57fe:	90 e0       	ldi	r25, 0x00	; 0
    5800:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5804:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5808:	87 e1       	ldi	r24, 0x17	; 23
    580a:	90 e0       	ldi	r25, 0x00	; 0
    580c:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5810:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5814:	c0 90 21 29 	lds	r12, 0x2921	; 0x802921 <SET_LONG_VALUE+0x16>
    5818:	d0 90 22 29 	lds	r13, 0x2922	; 0x802922 <SET_LONG_VALUE+0x17>
    581c:	a0 90 23 29 	lds	r10, 0x2923	; 0x802923 <SET_LONG_VALUE+0x18>
    5820:	b0 90 24 29 	lds	r11, 0x2924	; 0x802924 <SET_LONG_VALUE+0x19>
    5824:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    5828:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    582c:	49 97       	sbiw	r24, 0x19	; 25
    582e:	f4 f5       	brge	.+124    	; 0x58ac <main+0x11a6>
    5830:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5834:	81 11       	cpse	r24, r1
    5836:	35 c0       	rjmp	.+106    	; 0x58a2 <main+0x119c>
    5838:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    583c:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    5840:	e0 92 f2 28 	sts	0x28F2, r14	; 0x8028f2 <digits1+0x6>
    5844:	f0 92 f3 28 	sts	0x28F3, r15	; 0x8028f3 <digits1+0x7>
    5848:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    584c:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5850:	c3 97       	sbiw	r24, 0x33	; 51
    5852:	24 f0       	brlt	.+8      	; 0x585c <main+0x1156>
    5854:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    5858:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    585c:	b5 01       	movw	r22, r10
    585e:	bb 0c       	add	r11, r11
    5860:	88 0b       	sbc	r24, r24
    5862:	99 0b       	sbc	r25, r25
    5864:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    5868:	20 e0       	ldi	r18, 0x00	; 0
    586a:	30 e0       	ldi	r19, 0x00	; 0
    586c:	40 e2       	ldi	r20, 0x20	; 32
    586e:	51 e4       	ldi	r21, 0x41	; 65
    5870:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    5874:	4b 01       	movw	r8, r22
    5876:	5c 01       	movw	r10, r24
    5878:	b6 01       	movw	r22, r12
    587a:	dd 0c       	add	r13, r13
    587c:	88 0b       	sbc	r24, r24
    587e:	99 0b       	sbc	r25, r25
    5880:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    5884:	9b 01       	movw	r18, r22
    5886:	ac 01       	movw	r20, r24
    5888:	c5 01       	movw	r24, r10
    588a:	b4 01       	movw	r22, r8
    588c:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    5890:	60 93 37 28 	sts	0x2837, r22	; 0x802837 <CAL2_CALCULATED_LOW_CAL_VALUE>
    5894:	70 93 38 28 	sts	0x2838, r23	; 0x802838 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    5898:	80 93 39 28 	sts	0x2839, r24	; 0x802839 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    589c:	90 93 3a 28 	sts	0x283A, r25	; 0x80283a <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    58a0:	bb ca       	rjmp	.-2698   	; 0x4e18 <main+0x712>
    58a2:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    58a6:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    58aa:	ca cf       	rjmp	.-108    	; 0x5840 <main+0x113a>
    58ac:	84 e6       	ldi	r24, 0x64	; 100
    58ae:	8c 9d       	mul	r24, r12
    58b0:	b0 01       	movw	r22, r0
    58b2:	8d 9d       	mul	r24, r13
    58b4:	70 0d       	add	r23, r0
    58b6:	11 24       	eor	r1, r1
    58b8:	2a e0       	ldi	r18, 0x0A	; 10
    58ba:	2a 9d       	mul	r18, r10
    58bc:	c0 01       	movw	r24, r0
    58be:	2b 9d       	mul	r18, r11
    58c0:	90 0d       	add	r25, r0
    58c2:	11 24       	eor	r1, r1
    58c4:	68 0f       	add	r22, r24
    58c6:	79 1f       	adc	r23, r25
    58c8:	07 2e       	mov	r0, r23
    58ca:	00 0c       	add	r0, r0
    58cc:	88 0b       	sbc	r24, r24
    58ce:	99 0b       	sbc	r25, r25
    58d0:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    58d4:	b5 cf       	rjmp	.-150    	; 0x5840 <main+0x113a>
    58d6:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    58da:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    58de:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    58e2:	07 2e       	mov	r0, r23
    58e4:	00 0c       	add	r0, r0
    58e6:	88 0b       	sbc	r24, r24
    58e8:	99 0b       	sbc	r25, r25
    58ea:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    58ee:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits2>
    58f2:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits2+0x1>
    58f6:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits2+0x2>
    58fa:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits2+0x3>
    58fe:	81 e0       	ldi	r24, 0x01	; 1
    5900:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
    5904:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    5908:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    590c:	49 97       	sbiw	r24, 0x19	; 25
    590e:	0c f4       	brge	.+2      	; 0x5912 <main+0x120c>
    5910:	39 ce       	rjmp	.-910    	; 0x5584 <main+0xe7e>
    5912:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <SET_LONG_VALUE+0x1a>
    5916:	90 91 26 29 	lds	r25, 0x2926	; 0x802926 <SET_LONG_VALUE+0x1b>
    591a:	24 e6       	ldi	r18, 0x64	; 100
    591c:	28 9f       	mul	r18, r24
    591e:	b0 01       	movw	r22, r0
    5920:	29 9f       	mul	r18, r25
    5922:	70 0d       	add	r23, r0
    5924:	11 24       	eor	r1, r1
    5926:	20 91 27 29 	lds	r18, 0x2927	; 0x802927 <SET_LONG_VALUE+0x1c>
    592a:	30 91 28 29 	lds	r19, 0x2928	; 0x802928 <SET_LONG_VALUE+0x1d>
    592e:	58 ce       	rjmp	.-848    	; 0x55e0 <main+0xeda>
    5930:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    5934:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    5938:	a5 cc       	rjmp	.-1718   	; 0x5284 <main+0xb7e>
    593a:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    593e:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    5942:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    5946:	07 2e       	mov	r0, r23
    5948:	00 0c       	add	r0, r0
    594a:	88 0b       	sbc	r24, r24
    594c:	99 0b       	sbc	r25, r25
    594e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    5952:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits2>
    5956:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits2+0x1>
    595a:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits2+0x2>
    595e:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits2+0x3>
    5962:	81 e0       	ldi	r24, 0x01	; 1
    5964:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
    5968:	c0 90 25 29 	lds	r12, 0x2925	; 0x802925 <SET_LONG_VALUE+0x1a>
    596c:	d0 90 26 29 	lds	r13, 0x2926	; 0x802926 <SET_LONG_VALUE+0x1b>
    5970:	a0 90 27 29 	lds	r10, 0x2927	; 0x802927 <SET_LONG_VALUE+0x1c>
    5974:	b0 90 28 29 	lds	r11, 0x2928	; 0x802928 <SET_LONG_VALUE+0x1d>
    5978:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    597c:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    5980:	49 97       	sbiw	r24, 0x19	; 25
    5982:	f4 f5       	brge	.+124    	; 0x5a00 <main+0x12fa>
    5984:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <BLINK_STATS>
    5988:	81 11       	cpse	r24, r1
    598a:	35 c0       	rjmp	.+106    	; 0x59f6 <main+0x12f0>
    598c:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5990:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    5994:	e0 92 f2 28 	sts	0x28F2, r14	; 0x8028f2 <digits1+0x6>
    5998:	f0 92 f3 28 	sts	0x28F3, r15	; 0x8028f3 <digits1+0x7>
    599c:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    59a0:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    59a4:	c3 97       	sbiw	r24, 0x33	; 51
    59a6:	24 f0       	brlt	.+8      	; 0x59b0 <main+0x12aa>
    59a8:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    59ac:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    59b0:	b5 01       	movw	r22, r10
    59b2:	bb 0c       	add	r11, r11
    59b4:	88 0b       	sbc	r24, r24
    59b6:	99 0b       	sbc	r25, r25
    59b8:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    59bc:	20 e0       	ldi	r18, 0x00	; 0
    59be:	30 e0       	ldi	r19, 0x00	; 0
    59c0:	40 e2       	ldi	r20, 0x20	; 32
    59c2:	51 e4       	ldi	r21, 0x41	; 65
    59c4:	0e 94 75 35 	call	0x6aea	; 0x6aea <__divsf3>
    59c8:	4b 01       	movw	r8, r22
    59ca:	5c 01       	movw	r10, r24
    59cc:	b6 01       	movw	r22, r12
    59ce:	dd 0c       	add	r13, r13
    59d0:	88 0b       	sbc	r24, r24
    59d2:	99 0b       	sbc	r25, r25
    59d4:	0e 94 10 36 	call	0x6c20	; 0x6c20 <__floatsisf>
    59d8:	9b 01       	movw	r18, r22
    59da:	ac 01       	movw	r20, r24
    59dc:	c5 01       	movw	r24, r10
    59de:	b4 01       	movw	r22, r8
    59e0:	0e 94 0d 35 	call	0x6a1a	; 0x6a1a <__addsf3>
    59e4:	60 93 31 28 	sts	0x2831, r22	; 0x802831 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    59e8:	70 93 32 28 	sts	0x2832, r23	; 0x802832 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    59ec:	80 93 33 28 	sts	0x2833, r24	; 0x802833 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    59f0:	90 93 34 28 	sts	0x2834, r25	; 0x802834 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    59f4:	11 ca       	rjmp	.-3038   	; 0x4e18 <main+0x712>
    59f6:	60 92 91 28 	sts	0x2891, r6	; 0x802891 <i>
    59fa:	70 92 92 28 	sts	0x2892, r7	; 0x802892 <i+0x1>
    59fe:	ca cf       	rjmp	.-108    	; 0x5994 <main+0x128e>
    5a00:	84 e6       	ldi	r24, 0x64	; 100
    5a02:	8c 9d       	mul	r24, r12
    5a04:	b0 01       	movw	r22, r0
    5a06:	8d 9d       	mul	r24, r13
    5a08:	70 0d       	add	r23, r0
    5a0a:	11 24       	eor	r1, r1
    5a0c:	2a e0       	ldi	r18, 0x0A	; 10
    5a0e:	2a 9d       	mul	r18, r10
    5a10:	c0 01       	movw	r24, r0
    5a12:	2b 9d       	mul	r18, r11
    5a14:	90 0d       	add	r25, r0
    5a16:	11 24       	eor	r1, r1
    5a18:	68 0f       	add	r22, r24
    5a1a:	79 1f       	adc	r23, r25
    5a1c:	07 2e       	mov	r0, r23
    5a1e:	00 0c       	add	r0, r0
    5a20:	88 0b       	sbc	r24, r24
    5a22:	99 0b       	sbc	r25, r25
    5a24:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    5a28:	b5 cf       	rjmp	.-150    	; 0x5994 <main+0x128e>
    5a2a:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    5a2e:	10 92 3e 29 	sts	0x293E, r1	; 0x80293e <LONG_PRESS>
    5a32:	f2 c9       	rjmp	.-3100   	; 0x4e18 <main+0x712>
    5a34:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5a38:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5a3c:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    5a40:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5a44:	80 91 44 28 	lds	r24, 0x2844	; 0x802844 <processLog>
    5a48:	90 91 45 28 	lds	r25, 0x2845	; 0x802845 <processLog+0x1>
    5a4c:	2a e0       	ldi	r18, 0x0A	; 10
    5a4e:	28 9f       	mul	r18, r24
    5a50:	b0 01       	movw	r22, r0
    5a52:	29 9f       	mul	r18, r25
    5a54:	70 0d       	add	r23, r0
    5a56:	11 24       	eor	r1, r1
    5a58:	90 e0       	ldi	r25, 0x00	; 0
    5a5a:	80 e0       	ldi	r24, 0x00	; 0
    5a5c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    5a60:	40 92 ea 28 	sts	0x28EA, r4	; 0x8028ea <digits2+0x6>
    5a64:	50 92 eb 28 	sts	0x28EB, r5	; 0x8028eb <digits2+0x7>
    5a68:	60 91 42 28 	lds	r22, 0x2842	; 0x802842 <processLogNumberOfTimes>
    5a6c:	70 91 43 28 	lds	r23, 0x2843	; 0x802843 <processLogNumberOfTimes+0x1>
    5a70:	90 e0       	ldi	r25, 0x00	; 0
    5a72:	80 e0       	ldi	r24, 0x00	; 0
    5a74:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    5a78:	8d e0       	ldi	r24, 0x0D	; 13
    5a7a:	90 e0       	ldi	r25, 0x00	; 0
    5a7c:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5a80:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5a84:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    5a88:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
    5a8c:	c5 c9       	rjmp	.-3190   	; 0x4e18 <main+0x712>
    5a8e:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5a92:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5a96:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    5a9a:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    5a9e:	8c e0       	ldi	r24, 0x0C	; 12
    5aa0:	90 e0       	ldi	r25, 0x00	; 0
    5aa2:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5aa6:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5aaa:	2c e1       	ldi	r18, 0x1C	; 28
    5aac:	30 e0       	ldi	r19, 0x00	; 0
    5aae:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits2+0x2>
    5ab2:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits2+0x3>
    5ab6:	41 e1       	ldi	r20, 0x11	; 17
    5ab8:	50 e0       	ldi	r21, 0x00	; 0
    5aba:	40 93 e8 28 	sts	0x28E8, r20	; 0x8028e8 <digits2+0x4>
    5abe:	50 93 e9 28 	sts	0x28E9, r21	; 0x8028e9 <digits2+0x5>
    5ac2:	2f e0       	ldi	r18, 0x0F	; 15
    5ac4:	30 e0       	ldi	r19, 0x00	; 0
    5ac6:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    5aca:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    5ace:	40 93 ec 28 	sts	0x28EC, r20	; 0x8028ec <digits1>
    5ad2:	50 93 ed 28 	sts	0x28ED, r21	; 0x8028ed <digits1+0x1>
    5ad6:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    5ada:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    5ade:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5ae2:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    5ae6:	80 e1       	ldi	r24, 0x10	; 16
    5ae8:	90 e0       	ldi	r25, 0x00	; 0
    5aea:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    5aee:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
    5af2:	c8 cf       	rjmp	.-112    	; 0x5a84 <main+0x137e>
SET_LONG_PRESS_FUNCTION():
    5af4:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5af8:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5afc:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    5b00:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5b04:	80 91 2f 28 	lds	r24, 0x282F	; 0x80282f <currentMillis>
    5b08:	90 91 30 28 	lds	r25, 0x2830	; 0x802830 <currentMillis+0x1>
    5b0c:	8f 31       	cpi	r24, 0x1F	; 31
    5b0e:	91 05       	cpc	r25, r1
    5b10:	38 f5       	brcc	.+78     	; 0x5b60 <main+0x145a>
digitalWrite():
    5b12:	61 e0       	ldi	r22, 0x01	; 1
    5b14:	85 e1       	ldi	r24, 0x15	; 21
    5b16:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5b1a:	86 e1       	ldi	r24, 0x16	; 22
    5b1c:	90 e0       	ldi	r25, 0x00	; 0
    5b1e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5b22:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5b26:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5b2a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5b2e:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    5b32:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    5b36:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5b3a:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    5b3e:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5b42:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5b46:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    5b4a:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    5b4e:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5b52:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    5b56:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <digits1+0x6>
    5b5a:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <digits1+0x7>
    5b5e:	5c c9       	rjmp	.-3400   	; 0x4e18 <main+0x712>
SET_LONG_PRESS_FUNCTION():
    5b60:	9c 01       	movw	r18, r24
    5b62:	29 52       	subi	r18, 0x29	; 41
    5b64:	31 09       	sbc	r19, r1
    5b66:	22 38       	cpi	r18, 0x82	; 130
    5b68:	31 05       	cpc	r19, r1
    5b6a:	78 f5       	brcc	.+94     	; 0x5bca <main+0x14c4>
digitalWrite():
    5b6c:	60 e0       	ldi	r22, 0x00	; 0
    5b6e:	85 e1       	ldi	r24, 0x15	; 21
    5b70:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5b74:	81 e1       	ldi	r24, 0x11	; 17
    5b76:	90 e0       	ldi	r25, 0x00	; 0
    5b78:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5b7c:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5b80:	8f e0       	ldi	r24, 0x0F	; 15
    5b82:	90 e0       	ldi	r25, 0x00	; 0
    5b84:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5b88:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5b8c:	2c e0       	ldi	r18, 0x0C	; 12
    5b8e:	30 e0       	ldi	r19, 0x00	; 0
    5b90:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    5b94:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    5b98:	20 e1       	ldi	r18, 0x10	; 16
    5b9a:	30 e0       	ldi	r19, 0x00	; 0
    5b9c:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    5ba0:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    5ba4:	20 e2       	ldi	r18, 0x20	; 32
    5ba6:	30 e0       	ldi	r19, 0x00	; 0
    5ba8:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    5bac:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    5bb0:	27 e1       	ldi	r18, 0x17	; 23
    5bb2:	30 e0       	ldi	r19, 0x00	; 0
    5bb4:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    5bb8:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    5bbc:	24 e1       	ldi	r18, 0x14	; 20
    5bbe:	30 e0       	ldi	r19, 0x00	; 0
    5bc0:	20 93 f0 28 	sts	0x28F0, r18	; 0x8028f0 <digits1+0x4>
    5bc4:	30 93 f1 28 	sts	0x28F1, r19	; 0x8028f1 <digits1+0x5>
    5bc8:	c6 cf       	rjmp	.-116    	; 0x5b56 <main+0x1450>
SET_LONG_PRESS_FUNCTION():
    5bca:	8b 3a       	cpi	r24, 0xAB	; 171
    5bcc:	91 05       	cpc	r25, r1
    5bce:	0c f4       	brge	.+2      	; 0x5bd2 <main+0x14cc>
    5bd0:	23 c9       	rjmp	.-3514   	; 0x4e18 <main+0x712>
EEPROM_CLEAR():
    5bd2:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <STIR_VALUE_SET>
    5bd6:	10 92 3d 29 	sts	0x293D, r1	; 0x80293d <DEGREE_VALUE_SET>
    5bda:	23 e6       	ldi	r18, 0x63	; 99
    5bdc:	30 e0       	ldi	r19, 0x00	; 0
    5bde:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <SAFE_VALUE_SET_DEG>
    5be2:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
    5be6:	84 ed       	ldi	r24, 0xD4	; 212
    5be8:	90 e0       	ldi	r25, 0x00	; 0
    5bea:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SAFE_VALUE_SET_FAH>
    5bee:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
    5bf2:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <CAL_SELECT_VALUE>
    5bf6:	10 92 c4 28 	sts	0x28C4, r1	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
    5bfa:	10 92 f4 28 	sts	0x28F4, r1	; 0x8028f4 <ERROR_CAL1>
    5bfe:	10 92 f5 28 	sts	0x28F5, r1	; 0x8028f5 <ERROR_CAL1+0x1>
    5c02:	10 92 f6 28 	sts	0x28F6, r1	; 0x8028f6 <ERROR_CAL1+0x2>
    5c06:	10 92 f7 28 	sts	0x28F7, r1	; 0x8028f7 <ERROR_CAL1+0x3>
    5c0a:	10 92 d7 28 	sts	0x28D7, r1	; 0x8028d7 <SIGN>
    5c0e:	41 e0       	ldi	r20, 0x01	; 1
    5c10:	40 93 d2 28 	sts	0x28D2, r20	; 0x8028d2 <ERROR_SET_IN_DEG_FLAG>
    5c14:	10 92 cd 28 	sts	0x28CD, r1	; 0x8028cd <ERROR_SET_IN_FAH_FLAG>
    5c18:	4e e1       	ldi	r20, 0x1E	; 30
    5c1a:	50 e0       	ldi	r21, 0x00	; 0
    5c1c:	60 e0       	ldi	r22, 0x00	; 0
    5c1e:	70 e0       	ldi	r23, 0x00	; 0
    5c20:	40 93 bb 28 	sts	0x28BB, r20	; 0x8028bb <CAL2_RAW_LOW_VALUE_CONV>
    5c24:	50 93 bc 28 	sts	0x28BC, r21	; 0x8028bc <CAL2_RAW_LOW_VALUE_CONV+0x1>
    5c28:	60 93 bd 28 	sts	0x28BD, r22	; 0x8028bd <CAL2_RAW_LOW_VALUE_CONV+0x2>
    5c2c:	70 93 be 28 	sts	0x28BE, r23	; 0x8028be <CAL2_RAW_LOW_VALUE_CONV+0x3>
    5c30:	44 e5       	ldi	r20, 0x54	; 84
    5c32:	50 e0       	ldi	r21, 0x00	; 0
    5c34:	60 e0       	ldi	r22, 0x00	; 0
    5c36:	70 e0       	ldi	r23, 0x00	; 0
    5c38:	40 93 b7 28 	sts	0x28B7, r20	; 0x8028b7 <CAL2_RAW_HIGH_VALUE_CONV>
    5c3c:	50 93 b8 28 	sts	0x28B8, r21	; 0x8028b8 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    5c40:	60 93 b9 28 	sts	0x28B9, r22	; 0x8028b9 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    5c44:	70 93 ba 28 	sts	0x28BA, r23	; 0x8028ba <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    5c48:	4c e1       	ldi	r20, 0x1C	; 28
    5c4a:	50 e0       	ldi	r21, 0x00	; 0
    5c4c:	60 e0       	ldi	r22, 0x00	; 0
    5c4e:	70 e0       	ldi	r23, 0x00	; 0
    5c50:	40 93 b3 28 	sts	0x28B3, r20	; 0x8028b3 <MASTER_LOW_CONV>
    5c54:	50 93 b4 28 	sts	0x28B4, r21	; 0x8028b4 <MASTER_LOW_CONV+0x1>
    5c58:	60 93 b5 28 	sts	0x28B5, r22	; 0x8028b5 <MASTER_LOW_CONV+0x2>
    5c5c:	70 93 b6 28 	sts	0x28B6, r23	; 0x8028b6 <MASTER_LOW_CONV+0x3>
    5c60:	42 e5       	ldi	r20, 0x52	; 82
    5c62:	50 e0       	ldi	r21, 0x00	; 0
    5c64:	60 e0       	ldi	r22, 0x00	; 0
    5c66:	70 e0       	ldi	r23, 0x00	; 0
    5c68:	40 93 af 28 	sts	0x28AF, r20	; 0x8028af <MASTER_HIGH_CONV>
    5c6c:	50 93 b0 28 	sts	0x28B0, r21	; 0x8028b0 <MASTER_HIGH_CONV+0x1>
    5c70:	60 93 b1 28 	sts	0x28B1, r22	; 0x8028b1 <MASTER_HIGH_CONV+0x2>
    5c74:	70 93 b2 28 	sts	0x28B2, r23	; 0x8028b2 <MASTER_HIGH_CONV+0x3>
    5c78:	10 92 55 28 	sts	0x2855, r1	; 0x802855 <TIME_SOCK_OR_TOTAL>
    5c7c:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <Proceess_Resume_Enable_Flag>
    5c80:	10 92 f8 28 	sts	0x28F8, r1	; 0x8028f8 <select_product_type>
    5c84:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <SET_LONG_VALUE>
    5c88:	10 92 0c 29 	sts	0x290C, r1	; 0x80290c <SET_LONG_VALUE+0x1>
    5c8c:	10 92 0d 29 	sts	0x290D, r1	; 0x80290d <SET_LONG_VALUE+0x2>
    5c90:	10 92 0e 29 	sts	0x290E, r1	; 0x80290e <SET_LONG_VALUE+0x3>
    5c94:	20 93 0f 29 	sts	0x290F, r18	; 0x80290f <SET_LONG_VALUE+0x4>
    5c98:	30 93 10 29 	sts	0x2910, r19	; 0x802910 <SET_LONG_VALUE+0x5>
    5c9c:	80 93 31 29 	sts	0x2931, r24	; 0x802931 <SET_LONG_VALUE+0x26>
    5ca0:	90 93 32 29 	sts	0x2932, r25	; 0x802932 <SET_LONG_VALUE+0x27>
    5ca4:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_LONG_VALUE+0xc>
    5ca8:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_LONG_VALUE+0xd>
    5cac:	10 92 11 29 	sts	0x2911, r1	; 0x802911 <SET_LONG_VALUE+0x6>
    5cb0:	10 92 12 29 	sts	0x2912, r1	; 0x802912 <SET_LONG_VALUE+0x7>
    5cb4:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_LONG_VALUE+0x8>
    5cb8:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_LONG_VALUE+0x9>
    5cbc:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_LONG_VALUE+0xa>
    5cc0:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_LONG_VALUE+0xb>
    5cc4:	10 92 84 28 	sts	0x2884, r1	; 0x802884 <SET_HOUR>
    5cc8:	10 92 85 28 	sts	0x2885, r1	; 0x802885 <SET_HOUR+0x1>
    5ccc:	10 92 82 28 	sts	0x2882, r1	; 0x802882 <SET_MINUTE>
    5cd0:	10 92 83 28 	sts	0x2883, r1	; 0x802883 <SET_MINUTE+0x1>
    5cd4:	85 e2       	ldi	r24, 0x25	; 37
    5cd6:	90 e0       	ldi	r25, 0x00	; 0
    5cd8:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0x2>
    5cdc:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0x3>
    5ce0:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <SET_VALUE+0x4>
    5ce4:	10 92 03 29 	sts	0x2903, r1	; 0x802903 <SET_VALUE+0x5>
    5ce8:	80 e2       	ldi	r24, 0x20	; 32
    5cea:	90 e0       	ldi	r25, 0x00	; 0
    5cec:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x1f>
    5cf0:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x20>
    5cf4:	10 92 04 29 	sts	0x2904, r1	; 0x802904 <SET_VALUE+0x6>
    5cf8:	10 92 05 29 	sts	0x2905, r1	; 0x802905 <SET_VALUE+0x7>
    5cfc:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <SET_VALUE+0x8>
    5d00:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <SET_VALUE+0x9>
    5d04:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <Process_Interrupt_flag>
    5d08:	60 e0       	ldi	r22, 0x00	; 0
    5d0a:	81 e0       	ldi	r24, 0x01	; 1
    5d0c:	90 e0       	ldi	r25, 0x00	; 0
    5d0e:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d12:	63 e6       	ldi	r22, 0x63	; 99
    5d14:	82 e0       	ldi	r24, 0x02	; 2
    5d16:	90 e0       	ldi	r25, 0x00	; 0
    5d18:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d1c:	6a ef       	ldi	r22, 0xFA	; 250
    5d1e:	78 e2       	ldi	r23, 0x28	; 40
    5d20:	83 e0       	ldi	r24, 0x03	; 3
    5d22:	90 e0       	ldi	r25, 0x00	; 0
    5d24:	0e 94 b7 10 	call	0x216e	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    5d28:	60 e0       	ldi	r22, 0x00	; 0
    5d2a:	85 e0       	ldi	r24, 0x05	; 5
    5d2c:	90 e0       	ldi	r25, 0x00	; 0
    5d2e:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d32:	60 e0       	ldi	r22, 0x00	; 0
    5d34:	8f e0       	ldi	r24, 0x0F	; 15
    5d36:	90 e0       	ldi	r25, 0x00	; 0
    5d38:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d3c:	0e 94 90 10 	call	0x2120	; 0x2120 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.63]>
    5d40:	60 e0       	ldi	r22, 0x00	; 0
    5d42:	87 e0       	ldi	r24, 0x07	; 7
    5d44:	90 e0       	ldi	r25, 0x00	; 0
    5d46:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d4a:	61 e0       	ldi	r22, 0x01	; 1
    5d4c:	88 e0       	ldi	r24, 0x08	; 8
    5d4e:	90 e0       	ldi	r25, 0x00	; 0
    5d50:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d54:	60 e0       	ldi	r22, 0x00	; 0
    5d56:	89 e0       	ldi	r24, 0x09	; 9
    5d58:	90 e0       	ldi	r25, 0x00	; 0
    5d5a:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5d5e:	6b eb       	ldi	r22, 0xBB	; 187
    5d60:	78 e2       	ldi	r23, 0x28	; 40
    5d62:	80 e5       	ldi	r24, 0x50	; 80
    5d64:	90 e0       	ldi	r25, 0x00	; 0
    5d66:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5d6a:	67 eb       	ldi	r22, 0xB7	; 183
    5d6c:	78 e2       	ldi	r23, 0x28	; 40
    5d6e:	8a e5       	ldi	r24, 0x5A	; 90
    5d70:	90 e0       	ldi	r25, 0x00	; 0
    5d72:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5d76:	63 eb       	ldi	r22, 0xB3	; 179
    5d78:	78 e2       	ldi	r23, 0x28	; 40
    5d7a:	84 e6       	ldi	r24, 0x64	; 100
    5d7c:	90 e0       	ldi	r25, 0x00	; 0
    5d7e:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5d82:	6f ea       	ldi	r22, 0xAF	; 175
    5d84:	78 e2       	ldi	r23, 0x28	; 40
    5d86:	8e e6       	ldi	r24, 0x6E	; 110
    5d88:	90 e0       	ldi	r25, 0x00	; 0
    5d8a:	0e 94 79 1a 	call	0x34f2	; 0x34f2 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    5d8e:	81 e4       	ldi	r24, 0x41	; 65
    5d90:	90 e0       	ldi	r25, 0x00	; 0
    5d92:	89 83       	std	Y+1, r24	; 0x01
    5d94:	9a 83       	std	Y+2, r25	; 0x02
    5d96:	60 91 55 28 	lds	r22, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    5d9a:	ce 01       	movw	r24, r28
    5d9c:	01 96       	adiw	r24, 0x01	; 1
    5d9e:	0e 94 7f 10 	call	0x20fe	; 0x20fe <EERef::update(unsigned char)>
EEPROM_CLEAR():
    5da2:	60 91 00 29 	lds	r22, 0x2900	; 0x802900 <SET_VALUE+0x2>
    5da6:	83 e7       	ldi	r24, 0x73	; 115
    5da8:	90 e0       	ldi	r25, 0x00	; 0
    5daa:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5dae:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <SET_VALUE+0x4>
    5db2:	85 e7       	ldi	r24, 0x75	; 117
    5db4:	90 e0       	ldi	r25, 0x00	; 0
    5db6:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5dba:	6a e2       	ldi	r22, 0x2A	; 42
    5dbc:	79 e2       	ldi	r23, 0x29	; 41
    5dbe:	88 e7       	ldi	r24, 0x78	; 120
    5dc0:	90 e0       	ldi	r25, 0x00	; 0
    5dc2:	0e 94 b7 10 	call	0x216e	; 0x216e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    5dc6:	60 e0       	ldi	r22, 0x00	; 0
    5dc8:	8d e7       	ldi	r24, 0x7D	; 125
    5dca:	90 e0       	ldi	r25, 0x00	; 0
    5dcc:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5dd0:	60 e0       	ldi	r22, 0x00	; 0
    5dd2:	82 e8       	ldi	r24, 0x82	; 130
    5dd4:	90 e0       	ldi	r25, 0x00	; 0
    5dd6:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5dda:	60 e0       	ldi	r22, 0x00	; 0
    5ddc:	87 e8       	ldi	r24, 0x87	; 135
    5dde:	90 e0       	ldi	r25, 0x00	; 0
    5de0:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5de4:	60 e0       	ldi	r22, 0x00	; 0
    5de6:	86 e9       	ldi	r24, 0x96	; 150
    5de8:	90 e0       	ldi	r25, 0x00	; 0
    5dea:	0e 94 7e 10 	call	0x20fc	; 0x20fc <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5dee:	81 e0       	ldi	r24, 0x01	; 1
    5df0:	90 e0       	ldi	r25, 0x00	; 0
    5df2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5df6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5dfa:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    5dfe:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    5e02:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    5e06:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    5e0a:	11 ce       	rjmp	.-990    	; 0x5a2e <main+0x1328>
    5e0c:	e2 31       	cpi	r30, 0x12	; 18
    5e0e:	f1 05       	cpc	r31, r1
    5e10:	08 f0       	brcs	.+2      	; 0x5e14 <main+0x170e>
    5e12:	02 c8       	rjmp	.-4092   	; 0x4e18 <main+0x712>
    5e14:	e2 5f       	subi	r30, 0xF2	; 242
    5e16:	f0 4d       	sbci	r31, 0xD0	; 208
    5e18:	0c 94 78 37 	jmp	0x6ef0	; 0x6ef0 <__tablejump2__>
    5e1c:	20 2f       	mov	r18, r16
    5e1e:	5d 2f       	mov	r21, r29
    5e20:	95 2f       	mov	r25, r21
    5e22:	e6 2f       	mov	r30, r22
    5e24:	31 30       	cpi	r19, 0x01	; 1
    5e26:	5e 30       	cpi	r21, 0x0E	; 14
    5e28:	8d 30       	cpi	r24, 0x0D	; 13
    5e2a:	c1 30       	cpi	r28, 0x01	; 1
    5e2c:	11 31       	cpi	r17, 0x11	; 17
    5e2e:	75 31       	cpi	r23, 0x15	; 21
    5e30:	a8 31       	cpi	r26, 0x18	; 24
    5e32:	d5 31       	cpi	r29, 0x15	; 21
    5e34:	b0 32       	cpi	r27, 0x20	; 32
    5e36:	2c 33       	cpi	r18, 0x3C	; 60
    5e38:	d0 33       	cpi	r29, 0x30	; 48
    5e3a:	8a 34       	cpi	r24, 0x4A	; 74
    5e3c:	bb 34       	cpi	r27, 0x4B	; 75
    5e3e:	db 34       	cpi	r29, 0x4B	; 75
    5e40:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5e44:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    5e48:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5e4c:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    5e50:	8c e0       	ldi	r24, 0x0C	; 12
    5e52:	90 e0       	ldi	r25, 0x00	; 0
    5e54:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5e58:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5e5c:	80 e1       	ldi	r24, 0x10	; 16
    5e5e:	90 e0       	ldi	r25, 0x00	; 0
    5e60:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5e64:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5e68:	60 92 e8 28 	sts	0x28E8, r6	; 0x8028e8 <digits2+0x4>
    5e6c:	70 92 e9 28 	sts	0x28E9, r7	; 0x8028e9 <digits2+0x5>
    5e70:	81 e1       	ldi	r24, 0x11	; 17
    5e72:	90 e0       	ldi	r25, 0x00	; 0
    5e74:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5e78:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5e7c:	80 91 8e 28 	lds	r24, 0x288E	; 0x80288e <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    5e80:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <digits1>
    5e84:	10 92 ed 28 	sts	0x28ED, r1	; 0x8028ed <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    5e88:	81 11       	cpse	r24, r1
    5e8a:	10 c0       	rjmp	.+32     	; 0x5eac <main+0x17a6>
DISPLAY_DIGIT1():
    5e8c:	85 e1       	ldi	r24, 0x15	; 21
    5e8e:	90 e0       	ldi	r25, 0x00	; 0
    5e90:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    5e94:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    5e98:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    5e9c:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    5ea0:	00 93 f2 28 	sts	0x28F2, r16	; 0x8028f2 <digits1+0x6>
    5ea4:	10 93 f3 28 	sts	0x28F3, r17	; 0x8028f3 <digits1+0x7>
    5ea8:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    5eac:	84 e1       	ldi	r24, 0x14	; 20
    5eae:	90 e0       	ldi	r25, 0x00	; 0
    5eb0:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    5eb4:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    5eb8:	2a c0       	rjmp	.+84     	; 0x5f0e <main+0x1808>
SET_LONG_PRESS_FUNCTION():
    5eba:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
    5ebe:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5ec2:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
DISPLAY_DIGIT2():
    5ec6:	8c e1       	ldi	r24, 0x1C	; 28
    5ec8:	90 e0       	ldi	r25, 0x00	; 0
    5eca:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5ece:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5ed2:	84 e1       	ldi	r24, 0x14	; 20
    5ed4:	90 e0       	ldi	r25, 0x00	; 0
    5ed6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5eda:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5ede:	60 92 e8 28 	sts	0x28E8, r6	; 0x8028e8 <digits2+0x4>
    5ee2:	70 92 e9 28 	sts	0x28E9, r7	; 0x8028e9 <digits2+0x5>
    5ee6:	80 e1       	ldi	r24, 0x10	; 16
    5ee8:	90 e0       	ldi	r25, 0x00	; 0
    5eea:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5eee:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5ef2:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    5ef6:	81 11       	cpse	r24, r1
    5ef8:	0f c0       	rjmp	.+30     	; 0x5f18 <main+0x1812>
DISPLAY_DIGIT1():
    5efa:	8d e1       	ldi	r24, 0x1D	; 29
    5efc:	90 e0       	ldi	r25, 0x00	; 0
    5efe:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5f02:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5f06:	e0 92 ee 28 	sts	0x28EE, r14	; 0x8028ee <digits1+0x2>
    5f0a:	f0 92 ef 28 	sts	0x28EF, r15	; 0x8028ef <digits1+0x3>
    5f0e:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    5f12:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    5f16:	c4 cf       	rjmp	.-120    	; 0x5ea0 <main+0x179a>
    5f18:	8d e1       	ldi	r24, 0x1D	; 29
    5f1a:	90 e0       	ldi	r25, 0x00	; 0
    5f1c:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    5f20:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    5f24:	85 e1       	ldi	r24, 0x15	; 21
    5f26:	90 e0       	ldi	r25, 0x00	; 0
    5f28:	c3 cf       	rjmp	.-122    	; 0x5eb0 <main+0x17aa>
SET_LONG_PRESS_FUNCTION():
    5f2a:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    5f2e:	8c e0       	ldi	r24, 0x0C	; 12
    5f30:	90 e0       	ldi	r25, 0x00	; 0
    5f32:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5f36:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5f3a:	8d e0       	ldi	r24, 0x0D	; 13
    5f3c:	90 e0       	ldi	r25, 0x00	; 0
    5f3e:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    5f42:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    5f46:	75 e1       	ldi	r23, 0x15	; 21
    5f48:	c7 2e       	mov	r12, r23
    5f4a:	d1 2c       	mov	r13, r1
    5f4c:	c0 92 e8 28 	sts	0x28E8, r12	; 0x8028e8 <digits2+0x4>
    5f50:	d0 92 e9 28 	sts	0x28E9, r13	; 0x8028e9 <digits2+0x5>
    5f54:	8f e0       	ldi	r24, 0x0F	; 15
    5f56:	90 e0       	ldi	r25, 0x00	; 0
    5f58:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    5f5c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5f60:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    5f64:	81 11       	cpse	r24, r1
    5f66:	1a c0       	rjmp	.+52     	; 0x5f9c <main+0x1896>
    5f68:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SAFE_VALUE_SET_DEG>
    5f6c:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SAFE_VALUE_SET_DEG+0x1>
    5f70:	2a e0       	ldi	r18, 0x0A	; 10
    5f72:	28 9f       	mul	r18, r24
    5f74:	b0 01       	movw	r22, r0
    5f76:	29 9f       	mul	r18, r25
    5f78:	70 0d       	add	r23, r0
    5f7a:	11 24       	eor	r1, r1
    5f7c:	07 2e       	mov	r0, r23
    5f7e:	00 0c       	add	r0, r0
    5f80:	88 0b       	sbc	r24, r24
    5f82:	99 0b       	sbc	r25, r25
    5f84:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    5f88:	e0 92 f2 28 	sts	0x28F2, r14	; 0x8028f2 <digits1+0x6>
    5f8c:	f0 92 f3 28 	sts	0x28F3, r15	; 0x8028f3 <digits1+0x7>
    5f90:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    5f94:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    5f98:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    5f9c:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5fa0:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SAFE_VALUE_SET_FAH>
    5fa4:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SAFE_VALUE_SET_FAH+0x1>
    5fa8:	2a e0       	ldi	r18, 0x0A	; 10
    5faa:	28 9f       	mul	r18, r24
    5fac:	b0 01       	movw	r22, r0
    5fae:	29 9f       	mul	r18, r25
    5fb0:	70 0d       	add	r23, r0
    5fb2:	11 24       	eor	r1, r1
    5fb4:	07 2e       	mov	r0, r23
    5fb6:	00 0c       	add	r0, r0
    5fb8:	88 0b       	sbc	r24, r24
    5fba:	99 0b       	sbc	r25, r25
    5fbc:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    5fc0:	c0 92 f2 28 	sts	0x28F2, r12	; 0x8028f2 <digits1+0x6>
    5fc4:	d0 92 f3 28 	sts	0x28F3, r13	; 0x8028f3 <digits1+0x7>
    5fc8:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    5fcc:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    5fd0:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    5fd4:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    5fd8:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    5fdc:	80 e1       	ldi	r24, 0x10	; 16
    5fde:	90 e0       	ldi	r25, 0x00	; 0
    5fe0:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    5fe4:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    5fe8:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits2+0x2>
    5fec:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits2+0x3>
    5ff0:	22 e1       	ldi	r18, 0x12	; 18
    5ff2:	30 e0       	ldi	r19, 0x00	; 0
    5ff4:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    5ff8:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    5ffc:	2f e0       	ldi	r18, 0x0F	; 15
    5ffe:	30 e0       	ldi	r19, 0x00	; 0
    6000:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    6004:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6008:	20 91 55 28 	lds	r18, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    600c:	21 11       	cpse	r18, r1
    600e:	11 c0       	rjmp	.+34     	; 0x6032 <main+0x192c>
DISPLAY_DIGIT1():
    6010:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    6014:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    6018:	27 e1       	ldi	r18, 0x17	; 23
    601a:	30 e0       	ldi	r19, 0x00	; 0
    601c:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    6020:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    6024:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    6028:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    602c:	8f e1       	ldi	r24, 0x1F	; 31
    602e:	90 e0       	ldi	r25, 0x00	; 0
    6030:	92 cd       	rjmp	.-1244   	; 0x5b56 <main+0x1450>
    6032:	8c e0       	ldi	r24, 0x0C	; 12
    6034:	90 e0       	ldi	r25, 0x00	; 0
    6036:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <digits1>
    603a:	90 93 ed 28 	sts	0x28ED, r25	; 0x8028ed <digits1+0x1>
    603e:	87 e1       	ldi	r24, 0x17	; 23
    6040:	90 e0       	ldi	r25, 0x00	; 0
    6042:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    6046:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    604a:	8d e0       	ldi	r24, 0x0D	; 13
    604c:	90 e0       	ldi	r25, 0x00	; 0
    604e:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    6052:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    6056:	e0 92 f2 28 	sts	0x28F2, r14	; 0x8028f2 <digits1+0x6>
    605a:	f0 92 f3 28 	sts	0x28F3, r15	; 0x8028f3 <digits1+0x7>
    605e:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    6062:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    6066:	8d e0       	ldi	r24, 0x0D	; 13
    6068:	90 e0       	ldi	r25, 0x00	; 0
    606a:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    606e:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    6072:	82 e2       	ldi	r24, 0x22	; 34
    6074:	90 e0       	ldi	r25, 0x00	; 0
    6076:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    607a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    607e:	80 e1       	ldi	r24, 0x10	; 16
    6080:	90 e0       	ldi	r25, 0x00	; 0
    6082:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    6086:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    608a:	87 e1       	ldi	r24, 0x17	; 23
    608c:	90 e0       	ldi	r25, 0x00	; 0
    608e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    6092:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    6096:	2b e0       	ldi	r18, 0x0B	; 11
    6098:	30 e0       	ldi	r19, 0x00	; 0
    609a:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    609e:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    60a2:	21 e1       	ldi	r18, 0x11	; 17
    60a4:	30 e0       	ldi	r19, 0x00	; 0
    60a6:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    60aa:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    60ae:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    60b2:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    60b6:	8c e0       	ldi	r24, 0x0C	; 12
    60b8:	90 e0       	ldi	r25, 0x00	; 0
    60ba:	4d cd       	rjmp	.-1382   	; 0x5b56 <main+0x1450>
SET_LONG_PRESS_FUNCTION():
    60bc:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    60c0:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    60c4:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    60c8:	8b e0       	ldi	r24, 0x0B	; 11
    60ca:	90 e0       	ldi	r25, 0x00	; 0
    60cc:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    60d0:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    60d4:	21 e1       	ldi	r18, 0x11	; 17
    60d6:	30 e0       	ldi	r19, 0x00	; 0
    60d8:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits2+0x2>
    60dc:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits2+0x3>
    60e0:	20 e2       	ldi	r18, 0x20	; 32
    60e2:	30 e0       	ldi	r19, 0x00	; 0
    60e4:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    60e8:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    60ec:	20 e1       	ldi	r18, 0x10	; 16
    60ee:	30 e0       	ldi	r19, 0x00	; 0
    60f0:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    60f4:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    60f8:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    60fc:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    6100:	23 e2       	ldi	r18, 0x23	; 35
    6102:	30 e0       	ldi	r19, 0x00	; 0
    6104:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    6108:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    610c:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    6110:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    6114:	8f e0       	ldi	r24, 0x0F	; 15
    6116:	90 e0       	ldi	r25, 0x00	; 0
    6118:	1e cd       	rjmp	.-1476   	; 0x5b56 <main+0x1450>
SET_LONG_PRESS_FUNCTION():
    611a:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    611e:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    6122:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    6126:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    612a:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    612e:	2d e0       	ldi	r18, 0x0D	; 13
    6130:	30 e0       	ldi	r19, 0x00	; 0
    6132:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits2+0x2>
    6136:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits2+0x3>
    613a:	8a e1       	ldi	r24, 0x1A	; 26
    613c:	90 e0       	ldi	r25, 0x00	; 0
    613e:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    6142:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    6146:	4e e0       	ldi	r20, 0x0E	; 14
    6148:	50 e0       	ldi	r21, 0x00	; 0
    614a:	40 93 ea 28 	sts	0x28EA, r20	; 0x8028ea <digits2+0x6>
    614e:	50 93 eb 28 	sts	0x28EB, r21	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6152:	40 91 c3 28 	lds	r20, 0x28C3	; 0x8028c3 <CAL_SELECT_VALUE>
    6156:	50 91 c4 28 	lds	r21, 0x28C4	; 0x8028c4 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    615a:	e0 92 ec 28 	sts	0x28EC, r14	; 0x8028ec <digits1>
    615e:	f0 92 ed 28 	sts	0x28ED, r15	; 0x8028ed <digits1+0x1>
    6162:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    6166:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    616a:	80 93 f0 28 	sts	0x28F0, r24	; 0x8028f0 <digits1+0x4>
    616e:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <digits1+0x5>
    6172:	82 e0       	ldi	r24, 0x02	; 2
    6174:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    6176:	45 2b       	or	r20, r21
    6178:	09 f0       	breq	.+2      	; 0x617c <main+0x1a76>
    617a:	ed cc       	rjmp	.-1574   	; 0x5b56 <main+0x1450>
DISPLAY_DIGIT1():
    617c:	81 e0       	ldi	r24, 0x01	; 1
    617e:	90 e0       	ldi	r25, 0x00	; 0
    6180:	ea cc       	rjmp	.-1580   	; 0x5b56 <main+0x1450>
SET_LONG_PRESS_FUNCTION():
    6182:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    6186:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    618a:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    618e:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    6192:	8d e0       	ldi	r24, 0x0D	; 13
    6194:	90 e0       	ldi	r25, 0x00	; 0
    6196:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    619a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    619e:	8a e1       	ldi	r24, 0x1A	; 26
    61a0:	90 e0       	ldi	r25, 0x00	; 0
    61a2:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    61a6:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    61aa:	81 e0       	ldi	r24, 0x01	; 1
    61ac:	90 e0       	ldi	r25, 0x00	; 0
    61ae:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    61b2:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    61b6:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    61ba:	81 11       	cpse	r24, r1
    61bc:	81 c0       	rjmp	.+258    	; 0x62c0 <main+0x1bba>
    61be:	80 90 dc 28 	lds	r8, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    61c2:	90 90 dd 28 	lds	r9, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    61c6:	a0 90 de 28 	lds	r10, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    61ca:	b0 90 df 28 	lds	r11, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    61ce:	2d ec       	ldi	r18, 0xCD	; 205
    61d0:	3c ec       	ldi	r19, 0xCC	; 204
    61d2:	47 ec       	ldi	r20, 0xC7	; 199
    61d4:	52 e4       	ldi	r21, 0x42	; 66
    61d6:	60 91 e0 28 	lds	r22, 0x28E0	; 0x8028e0 <TEMP_DEG>
    61da:	70 91 e1 28 	lds	r23, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    61de:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    61e2:	90 91 e3 28 	lds	r25, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    61e6:	cc d5       	rcall	.+2968   	; 0x6d80 <__gesf2>
    61e8:	18 16       	cp	r1, r24
    61ea:	6c f4       	brge	.+26     	; 0x6206 <main+0x1b00>
    61ec:	20 e0       	ldi	r18, 0x00	; 0
    61ee:	30 e0       	ldi	r19, 0x00	; 0
    61f0:	40 e2       	ldi	r20, 0x20	; 32
    61f2:	51 e4       	ldi	r21, 0x41	; 65
    61f4:	c5 01       	movw	r24, r10
    61f6:	b4 01       	movw	r22, r8
    61f8:	c7 d5       	rcall	.+2958   	; 0x6d88 <__mulsf3>
    61fa:	df d4       	rcall	.+2494   	; 0x6bba <__fixsfsi>
    61fc:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    6200:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    6204:	28 cf       	rjmp	.-432    	; 0x6056 <main+0x1950>
    6206:	20 e0       	ldi	r18, 0x00	; 0
    6208:	30 e0       	ldi	r19, 0x00	; 0
    620a:	48 ec       	ldi	r20, 0xC8	; 200
    620c:	52 e4       	ldi	r21, 0x42	; 66
    620e:	c5 01       	movw	r24, r10
    6210:	b4 01       	movw	r22, r8
    6212:	ba d5       	rcall	.+2932   	; 0x6d88 <__mulsf3>
    6214:	d2 d4       	rcall	.+2468   	; 0x6bba <__fixsfsi>
    6216:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    621a:	81 e0       	ldi	r24, 0x01	; 1
    621c:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
    6220:	1a cf       	rjmp	.-460    	; 0x6056 <main+0x1950>
    6222:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    6226:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    622a:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    622e:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    6232:	8d e0       	ldi	r24, 0x0D	; 13
    6234:	90 e0       	ldi	r25, 0x00	; 0
    6236:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    623a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    623e:	8a e1       	ldi	r24, 0x1A	; 26
    6240:	90 e0       	ldi	r25, 0x00	; 0
    6242:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    6246:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    624a:	81 e0       	ldi	r24, 0x01	; 1
    624c:	90 e0       	ldi	r25, 0x00	; 0
    624e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    6252:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6256:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <DEGREE_VALUE_SET>
    625a:	81 11       	cpse	r24, r1
    625c:	31 c0       	rjmp	.+98     	; 0x62c0 <main+0x1bba>
    625e:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    6262:	70 91 dd 28 	lds	r23, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    6266:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    626a:	90 91 df 28 	lds	r25, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
    626e:	6b 83       	std	Y+3, r22	; 0x03
    6270:	7c 83       	std	Y+4, r23	; 0x04
    6272:	8d 83       	std	Y+5, r24	; 0x05
    6274:	9e 83       	std	Y+6, r25	; 0x06
    6276:	20 e0       	ldi	r18, 0x00	; 0
    6278:	30 e0       	ldi	r19, 0x00	; 0
    627a:	48 ec       	ldi	r20, 0xC8	; 200
    627c:	52 e4       	ldi	r21, 0x42	; 66
    627e:	84 d5       	rcall	.+2824   	; 0x6d88 <__mulsf3>
    6280:	9c d4       	rcall	.+2360   	; 0x6bba <__fixsfsi>
    6282:	4b 01       	movw	r8, r22
    6284:	5c 01       	movw	r10, r24
    6286:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    628a:	2d ec       	ldi	r18, 0xCD	; 205
    628c:	3c ec       	ldi	r19, 0xCC	; 204
    628e:	47 ec       	ldi	r20, 0xC7	; 199
    6290:	52 e4       	ldi	r21, 0x42	; 66
    6292:	60 91 e0 28 	lds	r22, 0x28E0	; 0x8028e0 <TEMP_DEG>
    6296:	70 91 e1 28 	lds	r23, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    629a:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    629e:	90 91 e3 28 	lds	r25, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    62a2:	6e d5       	rcall	.+2780   	; 0x6d80 <__gesf2>
    62a4:	18 16       	cp	r1, r24
    62a6:	4c f4       	brge	.+18     	; 0x62ba <main+0x1bb4>
    62a8:	20 e0       	ldi	r18, 0x00	; 0
    62aa:	30 e0       	ldi	r19, 0x00	; 0
    62ac:	40 e2       	ldi	r20, 0x20	; 32
    62ae:	51 e4       	ldi	r21, 0x41	; 65
    62b0:	6b 81       	ldd	r22, Y+3	; 0x03
    62b2:	7c 81       	ldd	r23, Y+4	; 0x04
    62b4:	8d 81       	ldd	r24, Y+5	; 0x05
    62b6:	9e 81       	ldd	r25, Y+6	; 0x06
    62b8:	9f cf       	rjmp	.-194    	; 0x61f8 <main+0x1af2>
    62ba:	c5 01       	movw	r24, r10
    62bc:	b4 01       	movw	r22, r8
    62be:	ab cf       	rjmp	.-170    	; 0x6216 <main+0x1b10>
    62c0:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    62c4:	20 e0       	ldi	r18, 0x00	; 0
    62c6:	30 e0       	ldi	r19, 0x00	; 0
    62c8:	40 e2       	ldi	r20, 0x20	; 32
    62ca:	51 e4       	ldi	r21, 0x41	; 65
    62cc:	60 91 c9 28 	lds	r22, 0x28C9	; 0x8028c9 <TEMP_FAH_RAW>
    62d0:	70 91 ca 28 	lds	r23, 0x28CA	; 0x8028ca <TEMP_FAH_RAW+0x1>
    62d4:	80 91 cb 28 	lds	r24, 0x28CB	; 0x8028cb <TEMP_FAH_RAW+0x2>
    62d8:	90 91 cc 28 	lds	r25, 0x28CC	; 0x8028cc <TEMP_FAH_RAW+0x3>
    62dc:	55 d5       	rcall	.+2730   	; 0x6d88 <__mulsf3>
    62de:	6d d4       	rcall	.+2266   	; 0x6bba <__fixsfsi>
    62e0:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    62e4:	85 e1       	ldi	r24, 0x15	; 21
    62e6:	90 e0       	ldi	r25, 0x00	; 0
    62e8:	36 cc       	rjmp	.-1940   	; 0x5b56 <main+0x1450>
    62ea:	81 e0       	ldi	r24, 0x01	; 1
    62ec:	80 93 ab 28 	sts	0x28AB, r24	; 0x8028ab <DOT1_0>
    62f0:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    62f4:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    62f8:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    62fc:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    6300:	8d e0       	ldi	r24, 0x0D	; 13
    6302:	90 e0       	ldi	r25, 0x00	; 0
    6304:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    6308:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    630c:	6a e1       	ldi	r22, 0x1A	; 26
    630e:	c6 2e       	mov	r12, r22
    6310:	d1 2c       	mov	r13, r1
    6312:	c0 92 e8 28 	sts	0x28E8, r12	; 0x8028e8 <digits2+0x4>
    6316:	d0 92 e9 28 	sts	0x28E9, r13	; 0x8028e9 <digits2+0x5>
    631a:	82 e0       	ldi	r24, 0x02	; 2
    631c:	90 e0       	ldi	r25, 0x00	; 0
    631e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    6322:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6326:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    632a:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    632e:	2a e0       	ldi	r18, 0x0A	; 10
    6330:	28 9f       	mul	r18, r24
    6332:	b0 01       	movw	r22, r0
    6334:	29 9f       	mul	r18, r25
    6336:	70 0d       	add	r23, r0
    6338:	11 24       	eor	r1, r1
    633a:	07 2e       	mov	r0, r23
    633c:	00 0c       	add	r0, r0
    633e:	88 0b       	sbc	r24, r24
    6340:	99 0b       	sbc	r25, r25
    6342:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    6346:	c0 92 ec 28 	sts	0x28EC, r12	; 0x8028ec <digits1>
    634a:	d0 92 ed 28 	sts	0x28ED, r13	; 0x8028ed <digits1+0x1>
    634e:	83 ce       	rjmp	.-762    	; 0x6056 <main+0x1950>
    6350:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    6354:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    6358:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    635c:	8d e0       	ldi	r24, 0x0D	; 13
    635e:	90 e0       	ldi	r25, 0x00	; 0
    6360:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    6364:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    6368:	8a e1       	ldi	r24, 0x1A	; 26
    636a:	90 e0       	ldi	r25, 0x00	; 0
    636c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    6370:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    6374:	82 e0       	ldi	r24, 0x02	; 2
    6376:	90 e0       	ldi	r25, 0x00	; 0
    6378:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    637c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6380:	80 91 35 28 	lds	r24, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    6384:	90 91 36 28 	lds	r25, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    6388:	2a e0       	ldi	r18, 0x0A	; 10
    638a:	28 9f       	mul	r18, r24
    638c:	b0 01       	movw	r22, r0
    638e:	29 9f       	mul	r18, r25
    6390:	70 0d       	add	r23, r0
    6392:	11 24       	eor	r1, r1
    6394:	07 2e       	mov	r0, r23
    6396:	00 0c       	add	r0, r0
    6398:	88 0b       	sbc	r24, r24
    639a:	99 0b       	sbc	r25, r25
    639c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    63a0:	40 92 ec 28 	sts	0x28EC, r4	; 0x8028ec <digits1>
    63a4:	50 92 ed 28 	sts	0x28ED, r5	; 0x8028ed <digits1+0x1>
    63a8:	56 ce       	rjmp	.-852    	; 0x6056 <main+0x1950>
    63aa:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    63ae:	81 e0       	ldi	r24, 0x01	; 1
    63b0:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    63b4:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    63b8:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
PID_Start():
    63bc:	83 ec       	ldi	r24, 0xC3	; 195
    63be:	9a e2       	ldi	r25, 0x2A	; 42
    63c0:	0e 94 93 0b 	call	0x1726	; 0x1726 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    63c4:	60 91 1d 29 	lds	r22, 0x291D	; 0x80291d <SET_LONG_VALUE+0x12>
    63c8:	70 91 1e 29 	lds	r23, 0x291E	; 0x80291e <SET_LONG_VALUE+0x13>
    63cc:	07 2e       	mov	r0, r23
    63ce:	00 0c       	add	r0, r0
    63d0:	88 0b       	sbc	r24, r24
    63d2:	99 0b       	sbc	r25, r25
    63d4:	25 d4       	rcall	.+2122   	; 0x6c20 <__floatsisf>
    63d6:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    63da:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    63de:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    63e2:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
DISPLAY_DIGIT1():
    63e6:	3f e0       	ldi	r19, 0x0F	; 15
    63e8:	83 2e       	mov	r8, r19
    63ea:	91 2c       	mov	r9, r1
    63ec:	4d e0       	ldi	r20, 0x0D	; 13
    63ee:	a4 2e       	mov	r10, r20
    63f0:	b1 2c       	mov	r11, r1
    63f2:	50 e1       	ldi	r21, 0x10	; 16
    63f4:	c5 2e       	mov	r12, r21
    63f6:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    63f8:	20 91 dc 29 	lds	r18, 0x29DC	; 0x8029dc <PID_SETPOINT>
    63fc:	30 91 dd 29 	lds	r19, 0x29DD	; 0x8029dd <PID_SETPOINT+0x1>
    6400:	40 91 de 29 	lds	r20, 0x29DE	; 0x8029de <PID_SETPOINT+0x2>
    6404:	50 91 df 29 	lds	r21, 0x29DF	; 0x8029df <PID_SETPOINT+0x3>
    6408:	60 91 e4 29 	lds	r22, 0x29E4	; 0x8029e4 <PID_INPUT>
    640c:	70 91 e5 29 	lds	r23, 0x29E5	; 0x8029e5 <PID_INPUT+0x1>
    6410:	80 91 e6 29 	lds	r24, 0x29E6	; 0x8029e6 <PID_INPUT+0x2>
    6414:	90 91 e7 29 	lds	r25, 0x29E7	; 0x8029e7 <PID_INPUT+0x3>
    6418:	64 d3       	rcall	.+1736   	; 0x6ae2 <__cmpsf2>
    641a:	87 ff       	sbrs	r24, 7
    641c:	b4 c1       	rjmp	.+872    	; 0x6786 <main+0x2080>
    641e:	80 91 3c 28 	lds	r24, 0x283C	; 0x80283c <RST_BUTT>
    6422:	88 23       	and	r24, r24
    6424:	09 f4       	brne	.+2      	; 0x6428 <main+0x1d22>
    6426:	af c1       	rjmp	.+862    	; 0x6786 <main+0x2080>
    6428:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
    642c:	60 91 1d 29 	lds	r22, 0x291D	; 0x80291d <SET_LONG_VALUE+0x12>
    6430:	70 91 1e 29 	lds	r23, 0x291E	; 0x80291e <SET_LONG_VALUE+0x13>
    6434:	07 2e       	mov	r0, r23
    6436:	00 0c       	add	r0, r0
    6438:	88 0b       	sbc	r24, r24
    643a:	99 0b       	sbc	r25, r25
    643c:	f1 d3       	rcall	.+2018   	; 0x6c20 <__floatsisf>
    643e:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    6442:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    6446:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    644a:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
    644e:	0e 94 2f 0a 	call	0x145e	; 0x145e <Lclass::PID_callingg() [clone .constprop.39]>
digitalWrite():
    6452:	60 e0       	ldi	r22, 0x00	; 0
    6454:	8b e1       	ldi	r24, 0x1B	; 27
    6456:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
DISP_UPDATE():
    645a:	8b e9       	ldi	r24, 0x9B	; 155
    645c:	9b e2       	ldi	r25, 0x2B	; 43
    645e:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    6462:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    6466:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    646a:	89 31       	cpi	r24, 0x19	; 25
    646c:	91 05       	cpc	r25, r1
    646e:	3c f5       	brge	.+78     	; 0x64be <main+0x1db8>
DISPLAY_DIGIT1():
    6470:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    6474:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    6478:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    647c:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    6480:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    6484:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    6488:	00 93 f2 28 	sts	0x28F2, r16	; 0x8028f2 <digits1+0x6>
    648c:	10 93 f3 28 	sts	0x28F3, r17	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6490:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6494:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6498:	07 2e       	mov	r0, r23
    649a:	00 0c       	add	r0, r0
    649c:	88 0b       	sbc	r24, r24
    649e:	99 0b       	sbc	r25, r25
    64a0:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    64a4:	8a e1       	ldi	r24, 0x1A	; 26
    64a6:	90 e0       	ldi	r25, 0x00	; 0
    64a8:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    64ac:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    64b0:	a7 e1       	ldi	r26, 0x17	; 23
    64b2:	b0 e0       	ldi	r27, 0x00	; 0
    64b4:	a0 93 e6 28 	sts	0x28E6, r26	; 0x8028e6 <digits2+0x2>
    64b8:	b0 93 e7 28 	sts	0x28E7, r27	; 0x8028e7 <digits2+0x3>
    64bc:	9d cf       	rjmp	.-198    	; 0x63f8 <main+0x1cf2>
DISPLAY_DIGIT1():
    64be:	40 92 ec 28 	sts	0x28EC, r4	; 0x8028ec <digits1>
    64c2:	50 92 ed 28 	sts	0x28ED, r5	; 0x8028ed <digits1+0x1>
    64c6:	80 92 ee 28 	sts	0x28EE, r8	; 0x8028ee <digits1+0x2>
    64ca:	90 92 ef 28 	sts	0x28EF, r9	; 0x8028ef <digits1+0x3>
    64ce:	a0 92 f0 28 	sts	0x28F0, r10	; 0x8028f0 <digits1+0x4>
    64d2:	b0 92 f1 28 	sts	0x28F1, r11	; 0x8028f1 <digits1+0x5>
    64d6:	c0 92 f2 28 	sts	0x28F2, r12	; 0x8028f2 <digits1+0x6>
    64da:	d0 92 f3 28 	sts	0x28F3, r13	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    64de:	c3 97       	sbiw	r24, 0x33	; 51
    64e0:	bc f2       	brlt	.-82     	; 0x6490 <main+0x1d8a>
    64e2:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    64e6:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    64ea:	d2 cf       	rjmp	.-92     	; 0x6490 <main+0x1d8a>
digitalWrite():
    64ec:	61 e0       	ldi	r22, 0x01	; 1
    64ee:	85 e1       	ldi	r24, 0x15	; 21
    64f0:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    64f4:	80 90 dc 28 	lds	r8, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    64f8:	90 90 dd 28 	lds	r9, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    64fc:	a0 90 de 28 	lds	r10, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    6500:	b0 90 df 28 	lds	r11, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6504:	2d ec       	ldi	r18, 0xCD	; 205
    6506:	3c ec       	ldi	r19, 0xCC	; 204
    6508:	47 ec       	ldi	r20, 0xC7	; 199
    650a:	52 e4       	ldi	r21, 0x42	; 66
    650c:	60 91 e0 28 	lds	r22, 0x28E0	; 0x8028e0 <TEMP_DEG>
    6510:	70 91 e1 28 	lds	r23, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    6514:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    6518:	90 91 e3 28 	lds	r25, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    651c:	31 d4       	rcall	.+2146   	; 0x6d80 <__gesf2>
    651e:	20 e0       	ldi	r18, 0x00	; 0
    6520:	30 e0       	ldi	r19, 0x00	; 0
    6522:	40 e2       	ldi	r20, 0x20	; 32
    6524:	51 e4       	ldi	r21, 0x41	; 65
    6526:	18 16       	cp	r1, r24
    6528:	24 f0       	brlt	.+8      	; 0x6532 <main+0x1e2c>
    652a:	20 e0       	ldi	r18, 0x00	; 0
    652c:	30 e0       	ldi	r19, 0x00	; 0
    652e:	48 ec       	ldi	r20, 0xC8	; 200
    6530:	52 e4       	ldi	r21, 0x42	; 66
    6532:	c5 01       	movw	r24, r10
    6534:	b4 01       	movw	r22, r8
    6536:	28 d4       	rcall	.+2128   	; 0x6d88 <__mulsf3>
    6538:	40 d3       	rcall	.+1664   	; 0x6bba <__fixsfsi>
    653a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    653e:	81 e0       	ldi	r24, 0x01	; 1
    6540:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <DOT1_1>
    6544:	6a e0       	ldi	r22, 0x0A	; 10
    6546:	70 e0       	ldi	r23, 0x00	; 0
    6548:	60 93 f2 28 	sts	0x28F2, r22	; 0x8028f2 <digits1+0x6>
    654c:	70 93 f3 28 	sts	0x28F3, r23	; 0x8028f3 <digits1+0x7>
    6550:	73 e3       	ldi	r23, 0x33	; 51
    6552:	c7 16       	cp	r12, r23
    6554:	d1 04       	cpc	r13, r1
    6556:	24 f0       	brlt	.+8      	; 0x6560 <main+0x1e5a>
    6558:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    655c:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    6560:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    6564:	90 91 98 28 	lds	r25, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    6568:	91 11       	cpse	r25, r1
    656a:	62 c0       	rjmp	.+196    	; 0x6630 <main+0x1f2a>
    656c:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <RST_BUTT>
    6570:	99 23       	and	r25, r25
    6572:	09 f4       	brne	.+2      	; 0x6576 <main+0x1e70>
    6574:	5d c0       	rjmp	.+186    	; 0x6630 <main+0x1f2a>
    6576:	88 23       	and	r24, r24
    6578:	09 f4       	brne	.+2      	; 0x657c <main+0x1e76>
    657a:	64 c0       	rjmp	.+200    	; 0x6644 <main+0x1f3e>
    657c:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
    6580:	60 91 1d 29 	lds	r22, 0x291D	; 0x80291d <SET_LONG_VALUE+0x12>
    6584:	70 91 1e 29 	lds	r23, 0x291E	; 0x80291e <SET_LONG_VALUE+0x13>
    6588:	07 2e       	mov	r0, r23
    658a:	00 0c       	add	r0, r0
    658c:	88 0b       	sbc	r24, r24
    658e:	99 0b       	sbc	r25, r25
    6590:	47 d3       	rcall	.+1678   	; 0x6c20 <__floatsisf>
    6592:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    6596:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    659a:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    659e:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
DISP_UPDATE():
    65a2:	8b e9       	ldi	r24, 0x9B	; 155
    65a4:	9b e2       	ldi	r25, 0x2B	; 43
    65a6:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    65aa:	0e 94 2f 0a 	call	0x145e	; 0x145e <Lclass::PID_callingg() [clone .constprop.39]>
digitalWrite():
    65ae:	60 e0       	ldi	r22, 0x00	; 0
    65b0:	8a e1       	ldi	r24, 0x1A	; 26
    65b2:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    65b6:	61 e0       	ldi	r22, 0x01	; 1
    65b8:	8b e1       	ldi	r24, 0x1B	; 27
    65ba:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    65be:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    65c2:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    65c6:	07 2e       	mov	r0, r23
    65c8:	00 0c       	add	r0, r0
    65ca:	88 0b       	sbc	r24, r24
    65cc:	99 0b       	sbc	r25, r25
    65ce:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    65d2:	ea e1       	ldi	r30, 0x1A	; 26
    65d4:	f0 e0       	ldi	r31, 0x00	; 0
    65d6:	e0 93 e4 28 	sts	0x28E4, r30	; 0x8028e4 <digits2>
    65da:	f0 93 e5 28 	sts	0x28E5, r31	; 0x8028e5 <digits2+0x1>
    65de:	47 e1       	ldi	r20, 0x17	; 23
    65e0:	50 e0       	ldi	r21, 0x00	; 0
    65e2:	40 93 e6 28 	sts	0x28E6, r20	; 0x8028e6 <digits2+0x2>
    65e6:	50 93 e7 28 	sts	0x28E7, r21	; 0x8028e7 <digits2+0x3>
    65ea:	81 e0       	ldi	r24, 0x01	; 1
    65ec:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    65f0:	c0 90 91 28 	lds	r12, 0x2891	; 0x802891 <i>
    65f4:	d0 90 92 28 	lds	r13, 0x2892	; 0x802892 <i+0x1>
    65f8:	59 e1       	ldi	r21, 0x19	; 25
    65fa:	c5 16       	cp	r12, r21
    65fc:	d1 04       	cpc	r13, r1
    65fe:	0c f0       	brlt	.+2      	; 0x6602 <main+0x1efc>
    6600:	75 cf       	rjmp	.-278    	; 0x64ec <main+0x1de6>
DISPLAY_DIGIT1():
    6602:	20 92 ec 28 	sts	0x28EC, r2	; 0x8028ec <digits1>
    6606:	30 92 ed 28 	sts	0x28ED, r3	; 0x8028ed <digits1+0x1>
    660a:	20 92 ee 28 	sts	0x28EE, r2	; 0x8028ee <digits1+0x2>
    660e:	30 92 ef 28 	sts	0x28EF, r3	; 0x8028ef <digits1+0x3>
    6612:	20 92 f0 28 	sts	0x28F0, r2	; 0x8028f0 <digits1+0x4>
    6616:	30 92 f1 28 	sts	0x28F1, r3	; 0x8028f1 <digits1+0x5>
    661a:	20 92 f2 28 	sts	0x28F2, r2	; 0x8028f2 <digits1+0x6>
    661e:	30 92 f3 28 	sts	0x28F3, r3	; 0x8028f3 <digits1+0x7>
digitalWrite():
    6622:	60 e0       	ldi	r22, 0x00	; 0
    6624:	85 e1       	ldi	r24, 0x15	; 21
    6626:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    662a:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    662e:	98 cf       	rjmp	.-208    	; 0x6560 <main+0x1e5a>
    6630:	88 23       	and	r24, r24
    6632:	41 f0       	breq	.+16     	; 0x6644 <main+0x1f3e>
    6634:	8b e0       	ldi	r24, 0x0B	; 11
    6636:	90 e0       	ldi	r25, 0x00	; 0
    6638:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    663c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6640:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    6644:	8d e0       	ldi	r24, 0x0D	; 13
    6646:	90 e0       	ldi	r25, 0x00	; 0
    6648:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    664c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6650:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    6654:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>
    6658:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    665c:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    6660:	81 e0       	ldi	r24, 0x01	; 1
    6662:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <DOT2_1>
    6666:	60 91 1f 29 	lds	r22, 0x291F	; 0x80291f <SET_LONG_VALUE+0x14>
    666a:	70 91 20 29 	lds	r23, 0x2920	; 0x802920 <SET_LONG_VALUE+0x15>
    666e:	07 2e       	mov	r0, r23
    6670:	00 0c       	add	r0, r0
    6672:	88 0b       	sbc	r24, r24
    6674:	99 0b       	sbc	r25, r25
    6676:	d4 d2       	rcall	.+1448   	; 0x6c20 <__floatsisf>
    6678:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    667c:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    6680:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    6684:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
DISPLAY_DIGIT1():
    6688:	8f e0       	ldi	r24, 0x0F	; 15
    668a:	c8 2e       	mov	r12, r24
    668c:	d1 2c       	mov	r13, r1
    668e:	9d e0       	ldi	r25, 0x0D	; 13
    6690:	a9 2e       	mov	r10, r25
    6692:	b1 2c       	mov	r11, r1
    6694:	20 e1       	ldi	r18, 0x10	; 16
    6696:	82 2e       	mov	r8, r18
    6698:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    669a:	20 91 dc 29 	lds	r18, 0x29DC	; 0x8029dc <PID_SETPOINT>
    669e:	30 91 dd 29 	lds	r19, 0x29DD	; 0x8029dd <PID_SETPOINT+0x1>
    66a2:	40 91 de 29 	lds	r20, 0x29DE	; 0x8029de <PID_SETPOINT+0x2>
    66a6:	50 91 df 29 	lds	r21, 0x29DF	; 0x8029df <PID_SETPOINT+0x3>
    66aa:	60 91 e4 29 	lds	r22, 0x29E4	; 0x8029e4 <PID_INPUT>
    66ae:	70 91 e5 29 	lds	r23, 0x29E5	; 0x8029e5 <PID_INPUT+0x1>
    66b2:	80 91 e6 29 	lds	r24, 0x29E6	; 0x8029e6 <PID_INPUT+0x2>
    66b6:	90 91 e7 29 	lds	r25, 0x29E7	; 0x8029e7 <PID_INPUT+0x3>
    66ba:	13 d2       	rcall	.+1062   	; 0x6ae2 <__cmpsf2>
    66bc:	87 ff       	sbrs	r24, 7
    66be:	63 c0       	rjmp	.+198    	; 0x6786 <main+0x2080>
    66c0:	80 91 3c 28 	lds	r24, 0x283C	; 0x80283c <RST_BUTT>
    66c4:	88 23       	and	r24, r24
    66c6:	09 f4       	brne	.+2      	; 0x66ca <main+0x1fc4>
    66c8:	5e c0       	rjmp	.+188    	; 0x6786 <main+0x2080>
    66ca:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
    66ce:	60 91 1f 29 	lds	r22, 0x291F	; 0x80291f <SET_LONG_VALUE+0x14>
    66d2:	70 91 20 29 	lds	r23, 0x2920	; 0x802920 <SET_LONG_VALUE+0x15>
    66d6:	07 2e       	mov	r0, r23
    66d8:	00 0c       	add	r0, r0
    66da:	88 0b       	sbc	r24, r24
    66dc:	99 0b       	sbc	r25, r25
    66de:	a0 d2       	rcall	.+1344   	; 0x6c20 <__floatsisf>
    66e0:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    66e4:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    66e8:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    66ec:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
    66f0:	0e 94 2f 0a 	call	0x145e	; 0x145e <Lclass::PID_callingg() [clone .constprop.39]>
DISP_UPDATE():
    66f4:	8b e9       	ldi	r24, 0x9B	; 155
    66f6:	9b e2       	ldi	r25, 0x2B	; 43
    66f8:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
digitalWrite():
    66fc:	60 e0       	ldi	r22, 0x00	; 0
    66fe:	8b e1       	ldi	r24, 0x1B	; 27
    6700:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6704:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    6708:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    670c:	89 31       	cpi	r24, 0x19	; 25
    670e:	91 05       	cpc	r25, r1
    6710:	1c f5       	brge	.+70     	; 0x6758 <main+0x2052>
DISPLAY_DIGIT1():
    6712:	00 93 ec 28 	sts	0x28EC, r16	; 0x8028ec <digits1>
    6716:	10 93 ed 28 	sts	0x28ED, r17	; 0x8028ed <digits1+0x1>
    671a:	00 93 ee 28 	sts	0x28EE, r16	; 0x8028ee <digits1+0x2>
    671e:	10 93 ef 28 	sts	0x28EF, r17	; 0x8028ef <digits1+0x3>
    6722:	00 93 f0 28 	sts	0x28F0, r16	; 0x8028f0 <digits1+0x4>
    6726:	10 93 f1 28 	sts	0x28F1, r17	; 0x8028f1 <digits1+0x5>
    672a:	00 93 f2 28 	sts	0x28F2, r16	; 0x8028f2 <digits1+0x6>
    672e:	10 93 f3 28 	sts	0x28F3, r17	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6732:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    6736:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    673a:	07 2e       	mov	r0, r23
    673c:	00 0c       	add	r0, r0
    673e:	88 0b       	sbc	r24, r24
    6740:	99 0b       	sbc	r25, r25
    6742:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    6746:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits2>
    674a:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits2+0x1>
    674e:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits2+0x2>
    6752:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits2+0x3>
    6756:	a1 cf       	rjmp	.-190    	; 0x669a <main+0x1f94>
DISPLAY_DIGIT1():
    6758:	40 92 ec 28 	sts	0x28EC, r4	; 0x8028ec <digits1>
    675c:	50 92 ed 28 	sts	0x28ED, r5	; 0x8028ed <digits1+0x1>
    6760:	c0 92 ee 28 	sts	0x28EE, r12	; 0x8028ee <digits1+0x2>
    6764:	d0 92 ef 28 	sts	0x28EF, r13	; 0x8028ef <digits1+0x3>
    6768:	a0 92 f0 28 	sts	0x28F0, r10	; 0x8028f0 <digits1+0x4>
    676c:	b0 92 f1 28 	sts	0x28F1, r11	; 0x8028f1 <digits1+0x5>
    6770:	80 92 f2 28 	sts	0x28F2, r8	; 0x8028f2 <digits1+0x6>
    6774:	90 92 f3 28 	sts	0x28F3, r9	; 0x8028f3 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6778:	c3 97       	sbiw	r24, 0x33	; 51
    677a:	dc f2       	brlt	.-74     	; 0x6732 <main+0x202c>
    677c:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    6780:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    6784:	d6 cf       	rjmp	.-84     	; 0x6732 <main+0x202c>
    6786:	40 92 8c 28 	sts	0x288C, r4	; 0x80288c <SET_MIN>
    678a:	50 92 8d 28 	sts	0x288D, r5	; 0x80288d <SET_MIN+0x1>
    678e:	81 e0       	ldi	r24, 0x01	; 1
    6790:	80 93 54 28 	sts	0x2854, r24	; 0x802854 <COUNTDOWN_START>
    6794:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    6798:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    679c:	01 96       	adiw	r24, 0x01	; 1
    679e:	4c cf       	rjmp	.-360    	; 0x6638 <main+0x1f32>
    67a0:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    67a4:	90 91 98 28 	lds	r25, 0x2898	; 0x802898 <Mode_Button_Single_Press_In_Settings>
    67a8:	91 11       	cpse	r25, r1
    67aa:	a4 c0       	rjmp	.+328    	; 0x68f4 <main+0x21ee>
    67ac:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <RST_BUTT>
    67b0:	99 23       	and	r25, r25
    67b2:	09 f4       	brne	.+2      	; 0x67b6 <main+0x20b0>
    67b4:	9f c0       	rjmp	.+318    	; 0x68f4 <main+0x21ee>
    67b6:	88 23       	and	r24, r24
    67b8:	09 f4       	brne	.+2      	; 0x67bc <main+0x20b6>
    67ba:	9c c0       	rjmp	.+312    	; 0x68f4 <main+0x21ee>
    67bc:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.38]>
    67c0:	60 91 1f 29 	lds	r22, 0x291F	; 0x80291f <SET_LONG_VALUE+0x14>
    67c4:	70 91 20 29 	lds	r23, 0x2920	; 0x802920 <SET_LONG_VALUE+0x15>
    67c8:	07 2e       	mov	r0, r23
    67ca:	00 0c       	add	r0, r0
    67cc:	88 0b       	sbc	r24, r24
    67ce:	99 0b       	sbc	r25, r25
    67d0:	27 d2       	rcall	.+1102   	; 0x6c20 <__floatsisf>
    67d2:	60 93 dc 29 	sts	0x29DC, r22	; 0x8029dc <PID_SETPOINT>
    67d6:	70 93 dd 29 	sts	0x29DD, r23	; 0x8029dd <PID_SETPOINT+0x1>
    67da:	80 93 de 29 	sts	0x29DE, r24	; 0x8029de <PID_SETPOINT+0x2>
    67de:	90 93 df 29 	sts	0x29DF, r25	; 0x8029df <PID_SETPOINT+0x3>
    67e2:	0e 94 2f 0a 	call	0x145e	; 0x145e <Lclass::PID_callingg() [clone .constprop.39]>
DISP_UPDATE():
    67e6:	8b e9       	ldi	r24, 0x9B	; 155
    67e8:	9b e2       	ldi	r25, 0x2B	; 43
    67ea:	0e 94 35 0b 	call	0x166a	; 0x166a <Ticker::update()>
digitalWrite():
    67ee:	60 e0       	ldi	r22, 0x00	; 0
    67f0:	8a e1       	ldi	r24, 0x1A	; 26
    67f2:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    67f6:	61 e0       	ldi	r22, 0x01	; 1
    67f8:	8b e1       	ldi	r24, 0x1B	; 27
    67fa:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    67fe:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    6802:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    6806:	07 2e       	mov	r0, r23
    6808:	00 0c       	add	r0, r0
    680a:	88 0b       	sbc	r24, r24
    680c:	99 0b       	sbc	r25, r25
    680e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.44]>
    6812:	8e e1       	ldi	r24, 0x1E	; 30
    6814:	90 e0       	ldi	r25, 0x00	; 0
    6816:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    681a:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    681e:	a9 e1       	ldi	r26, 0x19	; 25
    6820:	b0 e0       	ldi	r27, 0x00	; 0
    6822:	a0 93 e6 28 	sts	0x28E6, r26	; 0x8028e6 <digits2+0x2>
    6826:	b0 93 e7 28 	sts	0x28E7, r27	; 0x8028e7 <digits2+0x3>
    682a:	dd 24       	eor	r13, r13
    682c:	d3 94       	inc	r13
    682e:	d0 92 90 28 	sts	0x2890, r13	; 0x802890 <DOT2_1>
    6832:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    6836:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    683a:	49 97       	sbiw	r24, 0x19	; 25
    683c:	04 f5       	brge	.+64     	; 0x687e <main+0x2178>
DISPLAY_DIGIT1():
    683e:	20 92 ec 28 	sts	0x28EC, r2	; 0x8028ec <digits1>
    6842:	30 92 ed 28 	sts	0x28ED, r3	; 0x8028ed <digits1+0x1>
    6846:	20 92 ee 28 	sts	0x28EE, r2	; 0x8028ee <digits1+0x2>
    684a:	30 92 ef 28 	sts	0x28EF, r3	; 0x8028ef <digits1+0x3>
    684e:	20 92 f0 28 	sts	0x28F0, r2	; 0x8028f0 <digits1+0x4>
    6852:	30 92 f1 28 	sts	0x28F1, r3	; 0x8028f1 <digits1+0x5>
    6856:	20 92 f2 28 	sts	0x28F2, r2	; 0x8028f2 <digits1+0x6>
    685a:	30 92 f3 28 	sts	0x28F3, r3	; 0x8028f3 <digits1+0x7>
digitalWrite():
    685e:	60 e0       	ldi	r22, 0x00	; 0
    6860:	85 e1       	ldi	r24, 0x15	; 21
    6862:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6866:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    686a:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    686e:	c3 97       	sbiw	r24, 0x33	; 51
    6870:	0c f4       	brge	.+2      	; 0x6874 <main+0x216e>
    6872:	96 cf       	rjmp	.-212    	; 0x67a0 <main+0x209a>
    6874:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <i>
    6878:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <i+0x1>
    687c:	91 cf       	rjmp	.-222    	; 0x67a0 <main+0x209a>
digitalWrite():
    687e:	61 e0       	ldi	r22, 0x01	; 1
    6880:	85 e1       	ldi	r24, 0x15	; 21
    6882:	0e 94 bf 08 	call	0x117e	; 0x117e <digitalWrite.part.2>
    6886:	80 90 dc 28 	lds	r8, 0x28DC	; 0x8028dc <TEMP_DEG_RAW>
    688a:	90 90 dd 28 	lds	r9, 0x28DD	; 0x8028dd <TEMP_DEG_RAW+0x1>
    688e:	a0 90 de 28 	lds	r10, 0x28DE	; 0x8028de <TEMP_DEG_RAW+0x2>
    6892:	b0 90 df 28 	lds	r11, 0x28DF	; 0x8028df <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6896:	2d ec       	ldi	r18, 0xCD	; 205
    6898:	3c ec       	ldi	r19, 0xCC	; 204
    689a:	47 ec       	ldi	r20, 0xC7	; 199
    689c:	52 e4       	ldi	r21, 0x42	; 66
    689e:	60 91 e0 28 	lds	r22, 0x28E0	; 0x8028e0 <TEMP_DEG>
    68a2:	70 91 e1 28 	lds	r23, 0x28E1	; 0x8028e1 <TEMP_DEG+0x1>
    68a6:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <TEMP_DEG+0x2>
    68aa:	90 91 e3 28 	lds	r25, 0x28E3	; 0x8028e3 <TEMP_DEG+0x3>
    68ae:	68 d2       	rcall	.+1232   	; 0x6d80 <__gesf2>
    68b0:	18 16       	cp	r1, r24
    68b2:	9c f4       	brge	.+38     	; 0x68da <main+0x21d4>
    68b4:	20 e0       	ldi	r18, 0x00	; 0
    68b6:	30 e0       	ldi	r19, 0x00	; 0
    68b8:	40 e2       	ldi	r20, 0x20	; 32
    68ba:	51 e4       	ldi	r21, 0x41	; 65
    68bc:	c5 01       	movw	r24, r10
    68be:	b4 01       	movw	r22, r8
    68c0:	63 d2       	rcall	.+1222   	; 0x6d88 <__mulsf3>
    68c2:	7b d1       	rcall	.+758    	; 0x6bba <__fixsfsi>
    68c4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    68c8:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    68cc:	ea e0       	ldi	r30, 0x0A	; 10
    68ce:	f0 e0       	ldi	r31, 0x00	; 0
    68d0:	e0 93 f2 28 	sts	0x28F2, r30	; 0x8028f2 <digits1+0x6>
    68d4:	f0 93 f3 28 	sts	0x28F3, r31	; 0x8028f3 <digits1+0x7>
    68d8:	c6 cf       	rjmp	.-116    	; 0x6866 <main+0x2160>
    68da:	20 e0       	ldi	r18, 0x00	; 0
    68dc:	30 e0       	ldi	r19, 0x00	; 0
    68de:	48 ec       	ldi	r20, 0xC8	; 200
    68e0:	52 e4       	ldi	r21, 0x42	; 66
    68e2:	c5 01       	movw	r24, r10
    68e4:	b4 01       	movw	r22, r8
    68e6:	50 d2       	rcall	.+1184   	; 0x6d88 <__mulsf3>
    68e8:	68 d1       	rcall	.+720    	; 0x6bba <__fixsfsi>
    68ea:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.45]>
    68ee:	d0 92 aa 28 	sts	0x28AA, r13	; 0x8028aa <DOT1_1>
    68f2:	ec cf       	rjmp	.-40     	; 0x68cc <main+0x21c6>
    68f4:	10 92 dc 29 	sts	0x29DC, r1	; 0x8029dc <PID_SETPOINT>
    68f8:	10 92 dd 29 	sts	0x29DD, r1	; 0x8029dd <PID_SETPOINT+0x1>
    68fc:	10 92 de 29 	sts	0x29DE, r1	; 0x8029de <PID_SETPOINT+0x2>
    6900:	10 92 df 29 	sts	0x29DF, r1	; 0x8029df <PID_SETPOINT+0x3>
    6904:	88 23       	and	r24, r24
    6906:	19 f0       	breq	.+6      	; 0x690e <main+0x2208>
    6908:	8d e0       	ldi	r24, 0x0D	; 13
    690a:	90 e0       	ldi	r25, 0x00	; 0
    690c:	95 ce       	rjmp	.-726    	; 0x6638 <main+0x1f32>
    690e:	10 92 3e 29 	sts	0x293E, r1	; 0x80293e <LONG_PRESS>
    6912:	9e ce       	rjmp	.-708    	; 0x6650 <main+0x1f4a>
    6914:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    6918:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    691c:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <i>
    6920:	90 91 92 28 	lds	r25, 0x2892	; 0x802892 <i+0x1>
    6924:	88 3c       	cpi	r24, 0xC8	; 200
    6926:	91 05       	cpc	r25, r1
    6928:	1c f5       	brge	.+70     	; 0x6970 <main+0x226a>
DISPLAY_DIGIT2():
    692a:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits2>
    692e:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits2+0x1>
    6932:	8d e0       	ldi	r24, 0x0D	; 13
    6934:	90 e0       	ldi	r25, 0x00	; 0
    6936:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    693a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    693e:	2a e1       	ldi	r18, 0x1A	; 26
    6940:	30 e0       	ldi	r19, 0x00	; 0
    6942:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits2+0x4>
    6946:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits2+0x5>
    694a:	2e e0       	ldi	r18, 0x0E	; 14
    694c:	30 e0       	ldi	r19, 0x00	; 0
    694e:	20 93 ea 28 	sts	0x28EA, r18	; 0x8028ea <digits2+0x6>
    6952:	30 93 eb 28 	sts	0x28EB, r19	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    6956:	2c e0       	ldi	r18, 0x0C	; 12
    6958:	30 e0       	ldi	r19, 0x00	; 0
    695a:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    695e:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    6962:	80 93 ee 28 	sts	0x28EE, r24	; 0x8028ee <digits1+0x2>
    6966:	90 93 ef 28 	sts	0x28EF, r25	; 0x8028ef <digits1+0x3>
    696a:	8c e1       	ldi	r24, 0x1C	; 28
    696c:	90 e0       	ldi	r25, 0x00	; 0
    696e:	ce cb       	rjmp	.-2148   	; 0x610c <main+0x1a06>
SET_LONG_PRESS_FUNCTION():
    6970:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    6974:	48 ca       	rjmp	.-2928   	; 0x5e06 <main+0x1700>
    6976:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    697a:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    697e:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    6982:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    6986:	8a e1       	ldi	r24, 0x1A	; 26
    6988:	90 e0       	ldi	r25, 0x00	; 0
    698a:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    698e:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    6992:	87 e1       	ldi	r24, 0x17	; 23
    6994:	90 e0       	ldi	r25, 0x00	; 0
    6996:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    699a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    699e:	8b e1       	ldi	r24, 0x1B	; 27
    69a0:	90 e0       	ldi	r25, 0x00	; 0
    69a2:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits2+0x4>
    69a6:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits2+0x5>
    69aa:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits2+0x6>
    69ae:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits2+0x7>
    69b2:	0c 94 7b 28 	jmp	0x50f6	; 0x50f6 <main+0x9f0>
SET_LONG_PRESS_FUNCTION():
    69b6:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <DOT1_0>
    69ba:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <DOT1_1>
    69be:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <DOT2_1>
    69c2:	0e 94 ce 09 	call	0x139c	; 0x139c <Pclass::ALL_LED_OFF() [clone .constprop.46]>
DISPLAY_DIGIT2():
    69c6:	85 e1       	ldi	r24, 0x15	; 21
    69c8:	90 e0       	ldi	r25, 0x00	; 0
    69ca:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits2>
    69ce:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits2+0x1>
    69d2:	8d e0       	ldi	r24, 0x0D	; 13
    69d4:	90 e0       	ldi	r25, 0x00	; 0
    69d6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits2+0x2>
    69da:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits2+0x3>
    69de:	e0 92 e8 28 	sts	0x28E8, r14	; 0x8028e8 <digits2+0x4>
    69e2:	f0 92 e9 28 	sts	0x28E9, r15	; 0x8028e9 <digits2+0x5>
    69e6:	80 e1       	ldi	r24, 0x10	; 16
    69e8:	90 e0       	ldi	r25, 0x00	; 0
    69ea:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits2+0x6>
    69ee:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits2+0x7>
DISPLAY_DIGIT1():
    69f2:	21 e1       	ldi	r18, 0x11	; 17
    69f4:	30 e0       	ldi	r19, 0x00	; 0
    69f6:	20 93 ec 28 	sts	0x28EC, r18	; 0x8028ec <digits1>
    69fa:	30 93 ed 28 	sts	0x28ED, r19	; 0x8028ed <digits1+0x1>
    69fe:	2f e0       	ldi	r18, 0x0F	; 15
    6a00:	30 e0       	ldi	r19, 0x00	; 0
    6a02:	20 93 ee 28 	sts	0x28EE, r18	; 0x8028ee <digits1+0x2>
    6a06:	30 93 ef 28 	sts	0x28EF, r19	; 0x8028ef <digits1+0x3>
    6a0a:	2c e0       	ldi	r18, 0x0C	; 12
    6a0c:	30 e0       	ldi	r19, 0x00	; 0
    6a0e:	d8 c8       	rjmp	.-3664   	; 0x5bc0 <main+0x14ba>
loop():
    6a10:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.31]>
    6a14:	0c 94 0c 27 	jmp	0x4e18	; 0x4e18 <main+0x712>

00006a18 <__subsf3>:
__subsf3():
    6a18:	50 58       	subi	r21, 0x80	; 128

00006a1a <__addsf3>:
    6a1a:	bb 27       	eor	r27, r27
    6a1c:	aa 27       	eor	r26, r26
    6a1e:	0e d0       	rcall	.+28     	; 0x6a3c <__addsf3x>
    6a20:	75 c1       	rjmp	.+746    	; 0x6d0c <__fp_round>
__addsf3():
    6a22:	66 d1       	rcall	.+716    	; 0x6cf0 <__fp_pscA>
    6a24:	30 f0       	brcs	.+12     	; 0x6a32 <__addsf3+0x18>
    6a26:	6b d1       	rcall	.+726    	; 0x6cfe <__fp_pscB>
    6a28:	20 f0       	brcs	.+8      	; 0x6a32 <__addsf3+0x18>
    6a2a:	31 f4       	brne	.+12     	; 0x6a38 <__addsf3+0x1e>
    6a2c:	9f 3f       	cpi	r25, 0xFF	; 255
    6a2e:	11 f4       	brne	.+4      	; 0x6a34 <__addsf3+0x1a>
    6a30:	1e f4       	brtc	.+6      	; 0x6a38 <__addsf3+0x1e>
    6a32:	5b c1       	rjmp	.+694    	; 0x6cea <__fp_nan>
    6a34:	0e f4       	brtc	.+2      	; 0x6a38 <__addsf3+0x1e>
    6a36:	e0 95       	com	r30
    6a38:	e7 fb       	bst	r30, 7
    6a3a:	51 c1       	rjmp	.+674    	; 0x6cde <__fp_inf>

00006a3c <__addsf3x>:
__addsf3x():
    6a3c:	e9 2f       	mov	r30, r25
    6a3e:	77 d1       	rcall	.+750    	; 0x6d2e <__fp_split3>
    6a40:	80 f3       	brcs	.-32     	; 0x6a22 <__addsf3+0x8>
    6a42:	ba 17       	cp	r27, r26
    6a44:	62 07       	cpc	r22, r18
    6a46:	73 07       	cpc	r23, r19
    6a48:	84 07       	cpc	r24, r20
    6a4a:	95 07       	cpc	r25, r21
    6a4c:	18 f0       	brcs	.+6      	; 0x6a54 <__addsf3x+0x18>
    6a4e:	71 f4       	brne	.+28     	; 0x6a6c <__addsf3x+0x30>
    6a50:	9e f5       	brtc	.+102    	; 0x6ab8 <__addsf3x+0x7c>
    6a52:	8f c1       	rjmp	.+798    	; 0x6d72 <__fp_zero>
    6a54:	0e f4       	brtc	.+2      	; 0x6a58 <__addsf3x+0x1c>
    6a56:	e0 95       	com	r30
    6a58:	0b 2e       	mov	r0, r27
    6a5a:	ba 2f       	mov	r27, r26
    6a5c:	a0 2d       	mov	r26, r0
    6a5e:	0b 01       	movw	r0, r22
    6a60:	b9 01       	movw	r22, r18
    6a62:	90 01       	movw	r18, r0
    6a64:	0c 01       	movw	r0, r24
    6a66:	ca 01       	movw	r24, r20
    6a68:	a0 01       	movw	r20, r0
    6a6a:	11 24       	eor	r1, r1
    6a6c:	ff 27       	eor	r31, r31
    6a6e:	59 1b       	sub	r21, r25
    6a70:	99 f0       	breq	.+38     	; 0x6a98 <__addsf3x+0x5c>
    6a72:	59 3f       	cpi	r21, 0xF9	; 249
    6a74:	50 f4       	brcc	.+20     	; 0x6a8a <__addsf3x+0x4e>
    6a76:	50 3e       	cpi	r21, 0xE0	; 224
    6a78:	68 f1       	brcs	.+90     	; 0x6ad4 <__addsf3x+0x98>
    6a7a:	1a 16       	cp	r1, r26
    6a7c:	f0 40       	sbci	r31, 0x00	; 0
    6a7e:	a2 2f       	mov	r26, r18
    6a80:	23 2f       	mov	r18, r19
    6a82:	34 2f       	mov	r19, r20
    6a84:	44 27       	eor	r20, r20
    6a86:	58 5f       	subi	r21, 0xF8	; 248
    6a88:	f3 cf       	rjmp	.-26     	; 0x6a70 <__addsf3x+0x34>
    6a8a:	46 95       	lsr	r20
    6a8c:	37 95       	ror	r19
    6a8e:	27 95       	ror	r18
    6a90:	a7 95       	ror	r26
    6a92:	f0 40       	sbci	r31, 0x00	; 0
    6a94:	53 95       	inc	r21
    6a96:	c9 f7       	brne	.-14     	; 0x6a8a <__addsf3x+0x4e>
    6a98:	7e f4       	brtc	.+30     	; 0x6ab8 <__addsf3x+0x7c>
    6a9a:	1f 16       	cp	r1, r31
    6a9c:	ba 0b       	sbc	r27, r26
    6a9e:	62 0b       	sbc	r22, r18
    6aa0:	73 0b       	sbc	r23, r19
    6aa2:	84 0b       	sbc	r24, r20
    6aa4:	ba f0       	brmi	.+46     	; 0x6ad4 <__addsf3x+0x98>
    6aa6:	91 50       	subi	r25, 0x01	; 1
    6aa8:	a1 f0       	breq	.+40     	; 0x6ad2 <__addsf3x+0x96>
    6aaa:	ff 0f       	add	r31, r31
    6aac:	bb 1f       	adc	r27, r27
    6aae:	66 1f       	adc	r22, r22
    6ab0:	77 1f       	adc	r23, r23
    6ab2:	88 1f       	adc	r24, r24
    6ab4:	c2 f7       	brpl	.-16     	; 0x6aa6 <__addsf3x+0x6a>
    6ab6:	0e c0       	rjmp	.+28     	; 0x6ad4 <__addsf3x+0x98>
    6ab8:	ba 0f       	add	r27, r26
    6aba:	62 1f       	adc	r22, r18
    6abc:	73 1f       	adc	r23, r19
    6abe:	84 1f       	adc	r24, r20
    6ac0:	48 f4       	brcc	.+18     	; 0x6ad4 <__addsf3x+0x98>
    6ac2:	87 95       	ror	r24
    6ac4:	77 95       	ror	r23
    6ac6:	67 95       	ror	r22
    6ac8:	b7 95       	ror	r27
    6aca:	f7 95       	ror	r31
    6acc:	9e 3f       	cpi	r25, 0xFE	; 254
    6ace:	08 f0       	brcs	.+2      	; 0x6ad2 <__addsf3x+0x96>
    6ad0:	b3 cf       	rjmp	.-154    	; 0x6a38 <__addsf3+0x1e>
    6ad2:	93 95       	inc	r25
    6ad4:	88 0f       	add	r24, r24
    6ad6:	08 f0       	brcs	.+2      	; 0x6ada <__addsf3x+0x9e>
    6ad8:	99 27       	eor	r25, r25
    6ada:	ee 0f       	add	r30, r30
    6adc:	97 95       	ror	r25
    6ade:	87 95       	ror	r24
    6ae0:	08 95       	ret

00006ae2 <__cmpsf2>:
    6ae2:	d9 d0       	rcall	.+434    	; 0x6c96 <__fp_cmp>
    6ae4:	08 f4       	brcc	.+2      	; 0x6ae8 <__cmpsf2+0x6>
    6ae6:	81 e0       	ldi	r24, 0x01	; 1
    6ae8:	08 95       	ret

00006aea <__divsf3>:
    6aea:	0c d0       	rcall	.+24     	; 0x6b04 <__divsf3x>
    6aec:	0f c1       	rjmp	.+542    	; 0x6d0c <__fp_round>
    6aee:	07 d1       	rcall	.+526    	; 0x6cfe <__fp_pscB>
    6af0:	40 f0       	brcs	.+16     	; 0x6b02 <__divsf3+0x18>
    6af2:	fe d0       	rcall	.+508    	; 0x6cf0 <__fp_pscA>
    6af4:	30 f0       	brcs	.+12     	; 0x6b02 <__divsf3+0x18>
    6af6:	21 f4       	brne	.+8      	; 0x6b00 <__divsf3+0x16>
    6af8:	5f 3f       	cpi	r21, 0xFF	; 255
    6afa:	19 f0       	breq	.+6      	; 0x6b02 <__divsf3+0x18>
    6afc:	f0 c0       	rjmp	.+480    	; 0x6cde <__fp_inf>
    6afe:	51 11       	cpse	r21, r1
    6b00:	39 c1       	rjmp	.+626    	; 0x6d74 <__fp_szero>
    6b02:	f3 c0       	rjmp	.+486    	; 0x6cea <__fp_nan>

00006b04 <__divsf3x>:
    6b04:	14 d1       	rcall	.+552    	; 0x6d2e <__fp_split3>
    6b06:	98 f3       	brcs	.-26     	; 0x6aee <__divsf3+0x4>

00006b08 <__divsf3_pse>:
__divsf3_pse():
    6b08:	99 23       	and	r25, r25
    6b0a:	c9 f3       	breq	.-14     	; 0x6afe <__divsf3+0x14>
    6b0c:	55 23       	and	r21, r21
    6b0e:	b1 f3       	breq	.-20     	; 0x6afc <__divsf3+0x12>
    6b10:	95 1b       	sub	r25, r21
    6b12:	55 0b       	sbc	r21, r21
    6b14:	bb 27       	eor	r27, r27
    6b16:	aa 27       	eor	r26, r26
    6b18:	62 17       	cp	r22, r18
    6b1a:	73 07       	cpc	r23, r19
    6b1c:	84 07       	cpc	r24, r20
    6b1e:	38 f0       	brcs	.+14     	; 0x6b2e <__divsf3_pse+0x26>
    6b20:	9f 5f       	subi	r25, 0xFF	; 255
    6b22:	5f 4f       	sbci	r21, 0xFF	; 255
    6b24:	22 0f       	add	r18, r18
    6b26:	33 1f       	adc	r19, r19
    6b28:	44 1f       	adc	r20, r20
    6b2a:	aa 1f       	adc	r26, r26
    6b2c:	a9 f3       	breq	.-22     	; 0x6b18 <__divsf3_pse+0x10>
    6b2e:	33 d0       	rcall	.+102    	; 0x6b96 <__divsf3_pse+0x8e>
    6b30:	0e 2e       	mov	r0, r30
    6b32:	3a f0       	brmi	.+14     	; 0x6b42 <__divsf3_pse+0x3a>
    6b34:	e0 e8       	ldi	r30, 0x80	; 128
    6b36:	30 d0       	rcall	.+96     	; 0x6b98 <__divsf3_pse+0x90>
    6b38:	91 50       	subi	r25, 0x01	; 1
    6b3a:	50 40       	sbci	r21, 0x00	; 0
    6b3c:	e6 95       	lsr	r30
    6b3e:	00 1c       	adc	r0, r0
    6b40:	ca f7       	brpl	.-14     	; 0x6b34 <__divsf3_pse+0x2c>
    6b42:	29 d0       	rcall	.+82     	; 0x6b96 <__divsf3_pse+0x8e>
    6b44:	fe 2f       	mov	r31, r30
    6b46:	27 d0       	rcall	.+78     	; 0x6b96 <__divsf3_pse+0x8e>
    6b48:	66 0f       	add	r22, r22
    6b4a:	77 1f       	adc	r23, r23
    6b4c:	88 1f       	adc	r24, r24
    6b4e:	bb 1f       	adc	r27, r27
    6b50:	26 17       	cp	r18, r22
    6b52:	37 07       	cpc	r19, r23
    6b54:	48 07       	cpc	r20, r24
    6b56:	ab 07       	cpc	r26, r27
    6b58:	b0 e8       	ldi	r27, 0x80	; 128
    6b5a:	09 f0       	breq	.+2      	; 0x6b5e <__divsf3_pse+0x56>
    6b5c:	bb 0b       	sbc	r27, r27
    6b5e:	80 2d       	mov	r24, r0
    6b60:	bf 01       	movw	r22, r30
    6b62:	ff 27       	eor	r31, r31
    6b64:	93 58       	subi	r25, 0x83	; 131
    6b66:	5f 4f       	sbci	r21, 0xFF	; 255
    6b68:	2a f0       	brmi	.+10     	; 0x6b74 <__divsf3_pse+0x6c>
    6b6a:	9e 3f       	cpi	r25, 0xFE	; 254
    6b6c:	51 05       	cpc	r21, r1
    6b6e:	68 f0       	brcs	.+26     	; 0x6b8a <__divsf3_pse+0x82>
    6b70:	b6 c0       	rjmp	.+364    	; 0x6cde <__fp_inf>
    6b72:	00 c1       	rjmp	.+512    	; 0x6d74 <__fp_szero>
    6b74:	5f 3f       	cpi	r21, 0xFF	; 255
    6b76:	ec f3       	brlt	.-6      	; 0x6b72 <__divsf3_pse+0x6a>
    6b78:	98 3e       	cpi	r25, 0xE8	; 232
    6b7a:	dc f3       	brlt	.-10     	; 0x6b72 <__divsf3_pse+0x6a>
    6b7c:	86 95       	lsr	r24
    6b7e:	77 95       	ror	r23
    6b80:	67 95       	ror	r22
    6b82:	b7 95       	ror	r27
    6b84:	f7 95       	ror	r31
    6b86:	9f 5f       	subi	r25, 0xFF	; 255
    6b88:	c9 f7       	brne	.-14     	; 0x6b7c <__divsf3_pse+0x74>
    6b8a:	88 0f       	add	r24, r24
    6b8c:	91 1d       	adc	r25, r1
    6b8e:	96 95       	lsr	r25
    6b90:	87 95       	ror	r24
    6b92:	97 f9       	bld	r25, 7
    6b94:	08 95       	ret
    6b96:	e1 e0       	ldi	r30, 0x01	; 1
    6b98:	66 0f       	add	r22, r22
    6b9a:	77 1f       	adc	r23, r23
    6b9c:	88 1f       	adc	r24, r24
    6b9e:	bb 1f       	adc	r27, r27
    6ba0:	62 17       	cp	r22, r18
    6ba2:	73 07       	cpc	r23, r19
    6ba4:	84 07       	cpc	r24, r20
    6ba6:	ba 07       	cpc	r27, r26
    6ba8:	20 f0       	brcs	.+8      	; 0x6bb2 <__divsf3_pse+0xaa>
    6baa:	62 1b       	sub	r22, r18
    6bac:	73 0b       	sbc	r23, r19
    6bae:	84 0b       	sbc	r24, r20
    6bb0:	ba 0b       	sbc	r27, r26
    6bb2:	ee 1f       	adc	r30, r30
    6bb4:	88 f7       	brcc	.-30     	; 0x6b98 <__divsf3_pse+0x90>
    6bb6:	e0 95       	com	r30
    6bb8:	08 95       	ret

00006bba <__fixsfsi>:
__fixsfsi():
    6bba:	04 d0       	rcall	.+8      	; 0x6bc4 <__fixunssfsi>
    6bbc:	68 94       	set
    6bbe:	b1 11       	cpse	r27, r1
    6bc0:	d9 c0       	rjmp	.+434    	; 0x6d74 <__fp_szero>
    6bc2:	08 95       	ret

00006bc4 <__fixunssfsi>:
__fixunssfsi():
    6bc4:	bc d0       	rcall	.+376    	; 0x6d3e <__fp_splitA>
    6bc6:	88 f0       	brcs	.+34     	; 0x6bea <__fixunssfsi+0x26>
    6bc8:	9f 57       	subi	r25, 0x7F	; 127
    6bca:	90 f0       	brcs	.+36     	; 0x6bf0 <__fixunssfsi+0x2c>
    6bcc:	b9 2f       	mov	r27, r25
    6bce:	99 27       	eor	r25, r25
    6bd0:	b7 51       	subi	r27, 0x17	; 23
    6bd2:	a0 f0       	brcs	.+40     	; 0x6bfc <__fixunssfsi+0x38>
    6bd4:	d1 f0       	breq	.+52     	; 0x6c0a <__fixunssfsi+0x46>
    6bd6:	66 0f       	add	r22, r22
    6bd8:	77 1f       	adc	r23, r23
    6bda:	88 1f       	adc	r24, r24
    6bdc:	99 1f       	adc	r25, r25
    6bde:	1a f0       	brmi	.+6      	; 0x6be6 <__fixunssfsi+0x22>
    6be0:	ba 95       	dec	r27
    6be2:	c9 f7       	brne	.-14     	; 0x6bd6 <__fixunssfsi+0x12>
    6be4:	12 c0       	rjmp	.+36     	; 0x6c0a <__fixunssfsi+0x46>
    6be6:	b1 30       	cpi	r27, 0x01	; 1
    6be8:	81 f0       	breq	.+32     	; 0x6c0a <__fixunssfsi+0x46>
    6bea:	c3 d0       	rcall	.+390    	; 0x6d72 <__fp_zero>
    6bec:	b1 e0       	ldi	r27, 0x01	; 1
    6bee:	08 95       	ret
    6bf0:	c0 c0       	rjmp	.+384    	; 0x6d72 <__fp_zero>
    6bf2:	67 2f       	mov	r22, r23
    6bf4:	78 2f       	mov	r23, r24
    6bf6:	88 27       	eor	r24, r24
    6bf8:	b8 5f       	subi	r27, 0xF8	; 248
    6bfa:	39 f0       	breq	.+14     	; 0x6c0a <__fixunssfsi+0x46>
    6bfc:	b9 3f       	cpi	r27, 0xF9	; 249
    6bfe:	cc f3       	brlt	.-14     	; 0x6bf2 <__fixunssfsi+0x2e>
    6c00:	86 95       	lsr	r24
    6c02:	77 95       	ror	r23
    6c04:	67 95       	ror	r22
    6c06:	b3 95       	inc	r27
    6c08:	d9 f7       	brne	.-10     	; 0x6c00 <__fixunssfsi+0x3c>
    6c0a:	3e f4       	brtc	.+14     	; 0x6c1a <__fixunssfsi+0x56>
    6c0c:	90 95       	com	r25
    6c0e:	80 95       	com	r24
    6c10:	70 95       	com	r23
    6c12:	61 95       	neg	r22
    6c14:	7f 4f       	sbci	r23, 0xFF	; 255
    6c16:	8f 4f       	sbci	r24, 0xFF	; 255
    6c18:	9f 4f       	sbci	r25, 0xFF	; 255
    6c1a:	08 95       	ret

00006c1c <__floatunsisf>:
__floatunsisf():
    6c1c:	e8 94       	clt
    6c1e:	09 c0       	rjmp	.+18     	; 0x6c32 <__floatsisf+0x12>

00006c20 <__floatsisf>:
    6c20:	97 fb       	bst	r25, 7
    6c22:	3e f4       	brtc	.+14     	; 0x6c32 <__floatsisf+0x12>
    6c24:	90 95       	com	r25
    6c26:	80 95       	com	r24
    6c28:	70 95       	com	r23
    6c2a:	61 95       	neg	r22
    6c2c:	7f 4f       	sbci	r23, 0xFF	; 255
    6c2e:	8f 4f       	sbci	r24, 0xFF	; 255
    6c30:	9f 4f       	sbci	r25, 0xFF	; 255
    6c32:	99 23       	and	r25, r25
    6c34:	a9 f0       	breq	.+42     	; 0x6c60 <__floatsisf+0x40>
    6c36:	f9 2f       	mov	r31, r25
    6c38:	96 e9       	ldi	r25, 0x96	; 150
    6c3a:	bb 27       	eor	r27, r27
    6c3c:	93 95       	inc	r25
    6c3e:	f6 95       	lsr	r31
    6c40:	87 95       	ror	r24
    6c42:	77 95       	ror	r23
    6c44:	67 95       	ror	r22
    6c46:	b7 95       	ror	r27
    6c48:	f1 11       	cpse	r31, r1
    6c4a:	f8 cf       	rjmp	.-16     	; 0x6c3c <__floatsisf+0x1c>
    6c4c:	fa f4       	brpl	.+62     	; 0x6c8c <__floatsisf+0x6c>
    6c4e:	bb 0f       	add	r27, r27
    6c50:	11 f4       	brne	.+4      	; 0x6c56 <__floatsisf+0x36>
    6c52:	60 ff       	sbrs	r22, 0
    6c54:	1b c0       	rjmp	.+54     	; 0x6c8c <__floatsisf+0x6c>
    6c56:	6f 5f       	subi	r22, 0xFF	; 255
    6c58:	7f 4f       	sbci	r23, 0xFF	; 255
    6c5a:	8f 4f       	sbci	r24, 0xFF	; 255
    6c5c:	9f 4f       	sbci	r25, 0xFF	; 255
    6c5e:	16 c0       	rjmp	.+44     	; 0x6c8c <__floatsisf+0x6c>
    6c60:	88 23       	and	r24, r24
    6c62:	11 f0       	breq	.+4      	; 0x6c68 <__floatsisf+0x48>
    6c64:	96 e9       	ldi	r25, 0x96	; 150
    6c66:	11 c0       	rjmp	.+34     	; 0x6c8a <__floatsisf+0x6a>
    6c68:	77 23       	and	r23, r23
    6c6a:	21 f0       	breq	.+8      	; 0x6c74 <__floatsisf+0x54>
    6c6c:	9e e8       	ldi	r25, 0x8E	; 142
    6c6e:	87 2f       	mov	r24, r23
    6c70:	76 2f       	mov	r23, r22
    6c72:	05 c0       	rjmp	.+10     	; 0x6c7e <__floatsisf+0x5e>
    6c74:	66 23       	and	r22, r22
    6c76:	71 f0       	breq	.+28     	; 0x6c94 <__floatsisf+0x74>
    6c78:	96 e8       	ldi	r25, 0x86	; 134
    6c7a:	86 2f       	mov	r24, r22
    6c7c:	70 e0       	ldi	r23, 0x00	; 0
    6c7e:	60 e0       	ldi	r22, 0x00	; 0
    6c80:	2a f0       	brmi	.+10     	; 0x6c8c <__floatsisf+0x6c>
    6c82:	9a 95       	dec	r25
    6c84:	66 0f       	add	r22, r22
    6c86:	77 1f       	adc	r23, r23
    6c88:	88 1f       	adc	r24, r24
    6c8a:	da f7       	brpl	.-10     	; 0x6c82 <__floatsisf+0x62>
    6c8c:	88 0f       	add	r24, r24
    6c8e:	96 95       	lsr	r25
    6c90:	87 95       	ror	r24
    6c92:	97 f9       	bld	r25, 7
    6c94:	08 95       	ret

00006c96 <__fp_cmp>:
__fp_cmp():
    6c96:	99 0f       	add	r25, r25
    6c98:	00 08       	sbc	r0, r0
    6c9a:	55 0f       	add	r21, r21
    6c9c:	aa 0b       	sbc	r26, r26
    6c9e:	e0 e8       	ldi	r30, 0x80	; 128
    6ca0:	fe ef       	ldi	r31, 0xFE	; 254
    6ca2:	16 16       	cp	r1, r22
    6ca4:	17 06       	cpc	r1, r23
    6ca6:	e8 07       	cpc	r30, r24
    6ca8:	f9 07       	cpc	r31, r25
    6caa:	c0 f0       	brcs	.+48     	; 0x6cdc <__fp_cmp+0x46>
    6cac:	12 16       	cp	r1, r18
    6cae:	13 06       	cpc	r1, r19
    6cb0:	e4 07       	cpc	r30, r20
    6cb2:	f5 07       	cpc	r31, r21
    6cb4:	98 f0       	brcs	.+38     	; 0x6cdc <__fp_cmp+0x46>
    6cb6:	62 1b       	sub	r22, r18
    6cb8:	73 0b       	sbc	r23, r19
    6cba:	84 0b       	sbc	r24, r20
    6cbc:	95 0b       	sbc	r25, r21
    6cbe:	39 f4       	brne	.+14     	; 0x6cce <__fp_cmp+0x38>
    6cc0:	0a 26       	eor	r0, r26
    6cc2:	61 f0       	breq	.+24     	; 0x6cdc <__fp_cmp+0x46>
    6cc4:	23 2b       	or	r18, r19
    6cc6:	24 2b       	or	r18, r20
    6cc8:	25 2b       	or	r18, r21
    6cca:	21 f4       	brne	.+8      	; 0x6cd4 <__fp_cmp+0x3e>
    6ccc:	08 95       	ret
    6cce:	0a 26       	eor	r0, r26
    6cd0:	09 f4       	brne	.+2      	; 0x6cd4 <__fp_cmp+0x3e>
    6cd2:	a1 40       	sbci	r26, 0x01	; 1
    6cd4:	a6 95       	lsr	r26
    6cd6:	8f ef       	ldi	r24, 0xFF	; 255
    6cd8:	81 1d       	adc	r24, r1
    6cda:	81 1d       	adc	r24, r1
    6cdc:	08 95       	ret

00006cde <__fp_inf>:
__fp_inf():
    6cde:	97 f9       	bld	r25, 7
    6ce0:	9f 67       	ori	r25, 0x7F	; 127
    6ce2:	80 e8       	ldi	r24, 0x80	; 128
    6ce4:	70 e0       	ldi	r23, 0x00	; 0
    6ce6:	60 e0       	ldi	r22, 0x00	; 0
    6ce8:	08 95       	ret

00006cea <__fp_nan>:
__fp_nan():
    6cea:	9f ef       	ldi	r25, 0xFF	; 255
    6cec:	80 ec       	ldi	r24, 0xC0	; 192
    6cee:	08 95       	ret

00006cf0 <__fp_pscA>:
__fp_pscA():
    6cf0:	00 24       	eor	r0, r0
    6cf2:	0a 94       	dec	r0
    6cf4:	16 16       	cp	r1, r22
    6cf6:	17 06       	cpc	r1, r23
    6cf8:	18 06       	cpc	r1, r24
    6cfa:	09 06       	cpc	r0, r25
    6cfc:	08 95       	ret

00006cfe <__fp_pscB>:
__fp_pscB():
    6cfe:	00 24       	eor	r0, r0
    6d00:	0a 94       	dec	r0
    6d02:	12 16       	cp	r1, r18
    6d04:	13 06       	cpc	r1, r19
    6d06:	14 06       	cpc	r1, r20
    6d08:	05 06       	cpc	r0, r21
    6d0a:	08 95       	ret

00006d0c <__fp_round>:
__fp_round():
    6d0c:	09 2e       	mov	r0, r25
    6d0e:	03 94       	inc	r0
    6d10:	00 0c       	add	r0, r0
    6d12:	11 f4       	brne	.+4      	; 0x6d18 <__fp_round+0xc>
    6d14:	88 23       	and	r24, r24
    6d16:	52 f0       	brmi	.+20     	; 0x6d2c <__fp_round+0x20>
    6d18:	bb 0f       	add	r27, r27
    6d1a:	40 f4       	brcc	.+16     	; 0x6d2c <__fp_round+0x20>
    6d1c:	bf 2b       	or	r27, r31
    6d1e:	11 f4       	brne	.+4      	; 0x6d24 <__fp_round+0x18>
    6d20:	60 ff       	sbrs	r22, 0
    6d22:	04 c0       	rjmp	.+8      	; 0x6d2c <__fp_round+0x20>
    6d24:	6f 5f       	subi	r22, 0xFF	; 255
    6d26:	7f 4f       	sbci	r23, 0xFF	; 255
    6d28:	8f 4f       	sbci	r24, 0xFF	; 255
    6d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    6d2c:	08 95       	ret

00006d2e <__fp_split3>:
__fp_split3():
    6d2e:	57 fd       	sbrc	r21, 7
    6d30:	90 58       	subi	r25, 0x80	; 128
    6d32:	44 0f       	add	r20, r20
    6d34:	55 1f       	adc	r21, r21
    6d36:	59 f0       	breq	.+22     	; 0x6d4e <__fp_splitA+0x10>
    6d38:	5f 3f       	cpi	r21, 0xFF	; 255
    6d3a:	71 f0       	breq	.+28     	; 0x6d58 <__fp_splitA+0x1a>
    6d3c:	47 95       	ror	r20

00006d3e <__fp_splitA>:
    6d3e:	88 0f       	add	r24, r24
    6d40:	97 fb       	bst	r25, 7
    6d42:	99 1f       	adc	r25, r25
    6d44:	61 f0       	breq	.+24     	; 0x6d5e <__fp_splitA+0x20>
    6d46:	9f 3f       	cpi	r25, 0xFF	; 255
    6d48:	79 f0       	breq	.+30     	; 0x6d68 <__fp_splitA+0x2a>
    6d4a:	87 95       	ror	r24
    6d4c:	08 95       	ret
    6d4e:	12 16       	cp	r1, r18
    6d50:	13 06       	cpc	r1, r19
    6d52:	14 06       	cpc	r1, r20
    6d54:	55 1f       	adc	r21, r21
    6d56:	f2 cf       	rjmp	.-28     	; 0x6d3c <__fp_split3+0xe>
    6d58:	46 95       	lsr	r20
    6d5a:	f1 df       	rcall	.-30     	; 0x6d3e <__fp_splitA>
    6d5c:	08 c0       	rjmp	.+16     	; 0x6d6e <__fp_splitA+0x30>
    6d5e:	16 16       	cp	r1, r22
    6d60:	17 06       	cpc	r1, r23
    6d62:	18 06       	cpc	r1, r24
    6d64:	99 1f       	adc	r25, r25
    6d66:	f1 cf       	rjmp	.-30     	; 0x6d4a <__fp_splitA+0xc>
    6d68:	86 95       	lsr	r24
    6d6a:	71 05       	cpc	r23, r1
    6d6c:	61 05       	cpc	r22, r1
    6d6e:	08 94       	sec
    6d70:	08 95       	ret

00006d72 <__fp_zero>:
__fp_zero():
    6d72:	e8 94       	clt

00006d74 <__fp_szero>:
    6d74:	bb 27       	eor	r27, r27
    6d76:	66 27       	eor	r22, r22
    6d78:	77 27       	eor	r23, r23
    6d7a:	cb 01       	movw	r24, r22
    6d7c:	97 f9       	bld	r25, 7
    6d7e:	08 95       	ret

00006d80 <__gesf2>:
__gesf2():
    6d80:	8a df       	rcall	.-236    	; 0x6c96 <__fp_cmp>
    6d82:	08 f4       	brcc	.+2      	; 0x6d86 <__gesf2+0x6>
    6d84:	8f ef       	ldi	r24, 0xFF	; 255
    6d86:	08 95       	ret

00006d88 <__mulsf3>:
__mulsf3():
    6d88:	0b d0       	rcall	.+22     	; 0x6da0 <__mulsf3x>
    6d8a:	c0 cf       	rjmp	.-128    	; 0x6d0c <__fp_round>
    6d8c:	b1 df       	rcall	.-158    	; 0x6cf0 <__fp_pscA>
    6d8e:	28 f0       	brcs	.+10     	; 0x6d9a <__mulsf3+0x12>
    6d90:	b6 df       	rcall	.-148    	; 0x6cfe <__fp_pscB>
    6d92:	18 f0       	brcs	.+6      	; 0x6d9a <__mulsf3+0x12>
    6d94:	95 23       	and	r25, r21
    6d96:	09 f0       	breq	.+2      	; 0x6d9a <__mulsf3+0x12>
    6d98:	a2 cf       	rjmp	.-188    	; 0x6cde <__fp_inf>
    6d9a:	a7 cf       	rjmp	.-178    	; 0x6cea <__fp_nan>
    6d9c:	11 24       	eor	r1, r1
    6d9e:	ea cf       	rjmp	.-44     	; 0x6d74 <__fp_szero>

00006da0 <__mulsf3x>:
__mulsf3x():
    6da0:	c6 df       	rcall	.-116    	; 0x6d2e <__fp_split3>
    6da2:	a0 f3       	brcs	.-24     	; 0x6d8c <__mulsf3+0x4>

00006da4 <__mulsf3_pse>:
    6da4:	95 9f       	mul	r25, r21
    6da6:	d1 f3       	breq	.-12     	; 0x6d9c <__mulsf3+0x14>
    6da8:	95 0f       	add	r25, r21
    6daa:	50 e0       	ldi	r21, 0x00	; 0
    6dac:	55 1f       	adc	r21, r21
    6dae:	62 9f       	mul	r22, r18
    6db0:	f0 01       	movw	r30, r0
    6db2:	72 9f       	mul	r23, r18
    6db4:	bb 27       	eor	r27, r27
    6db6:	f0 0d       	add	r31, r0
    6db8:	b1 1d       	adc	r27, r1
    6dba:	63 9f       	mul	r22, r19
    6dbc:	aa 27       	eor	r26, r26
    6dbe:	f0 0d       	add	r31, r0
    6dc0:	b1 1d       	adc	r27, r1
    6dc2:	aa 1f       	adc	r26, r26
    6dc4:	64 9f       	mul	r22, r20
    6dc6:	66 27       	eor	r22, r22
    6dc8:	b0 0d       	add	r27, r0
    6dca:	a1 1d       	adc	r26, r1
    6dcc:	66 1f       	adc	r22, r22
    6dce:	82 9f       	mul	r24, r18
    6dd0:	22 27       	eor	r18, r18
    6dd2:	b0 0d       	add	r27, r0
    6dd4:	a1 1d       	adc	r26, r1
    6dd6:	62 1f       	adc	r22, r18
    6dd8:	73 9f       	mul	r23, r19
    6dda:	b0 0d       	add	r27, r0
    6ddc:	a1 1d       	adc	r26, r1
    6dde:	62 1f       	adc	r22, r18
    6de0:	83 9f       	mul	r24, r19
    6de2:	a0 0d       	add	r26, r0
    6de4:	61 1d       	adc	r22, r1
    6de6:	22 1f       	adc	r18, r18
    6de8:	74 9f       	mul	r23, r20
    6dea:	33 27       	eor	r19, r19
    6dec:	a0 0d       	add	r26, r0
    6dee:	61 1d       	adc	r22, r1
    6df0:	23 1f       	adc	r18, r19
    6df2:	84 9f       	mul	r24, r20
    6df4:	60 0d       	add	r22, r0
    6df6:	21 1d       	adc	r18, r1
    6df8:	82 2f       	mov	r24, r18
    6dfa:	76 2f       	mov	r23, r22
    6dfc:	6a 2f       	mov	r22, r26
    6dfe:	11 24       	eor	r1, r1
    6e00:	9f 57       	subi	r25, 0x7F	; 127
    6e02:	50 40       	sbci	r21, 0x00	; 0
    6e04:	8a f0       	brmi	.+34     	; 0x6e28 <__mulsf3_pse+0x84>
    6e06:	e1 f0       	breq	.+56     	; 0x6e40 <__mulsf3_pse+0x9c>
    6e08:	88 23       	and	r24, r24
    6e0a:	4a f0       	brmi	.+18     	; 0x6e1e <__mulsf3_pse+0x7a>
    6e0c:	ee 0f       	add	r30, r30
    6e0e:	ff 1f       	adc	r31, r31
    6e10:	bb 1f       	adc	r27, r27
    6e12:	66 1f       	adc	r22, r22
    6e14:	77 1f       	adc	r23, r23
    6e16:	88 1f       	adc	r24, r24
    6e18:	91 50       	subi	r25, 0x01	; 1
    6e1a:	50 40       	sbci	r21, 0x00	; 0
    6e1c:	a9 f7       	brne	.-22     	; 0x6e08 <__mulsf3_pse+0x64>
    6e1e:	9e 3f       	cpi	r25, 0xFE	; 254
    6e20:	51 05       	cpc	r21, r1
    6e22:	70 f0       	brcs	.+28     	; 0x6e40 <__mulsf3_pse+0x9c>
    6e24:	5c cf       	rjmp	.-328    	; 0x6cde <__fp_inf>
    6e26:	a6 cf       	rjmp	.-180    	; 0x6d74 <__fp_szero>
    6e28:	5f 3f       	cpi	r21, 0xFF	; 255
    6e2a:	ec f3       	brlt	.-6      	; 0x6e26 <__mulsf3_pse+0x82>
    6e2c:	98 3e       	cpi	r25, 0xE8	; 232
    6e2e:	dc f3       	brlt	.-10     	; 0x6e26 <__mulsf3_pse+0x82>
    6e30:	86 95       	lsr	r24
    6e32:	77 95       	ror	r23
    6e34:	67 95       	ror	r22
    6e36:	b7 95       	ror	r27
    6e38:	f7 95       	ror	r31
    6e3a:	e7 95       	ror	r30
    6e3c:	9f 5f       	subi	r25, 0xFF	; 255
    6e3e:	c1 f7       	brne	.-16     	; 0x6e30 <__mulsf3_pse+0x8c>
    6e40:	fe 2b       	or	r31, r30
    6e42:	88 0f       	add	r24, r24
    6e44:	91 1d       	adc	r25, r1
    6e46:	96 95       	lsr	r25
    6e48:	87 95       	ror	r24
    6e4a:	97 f9       	bld	r25, 7
    6e4c:	08 95       	ret

00006e4e <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    6e4e:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    6e50:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    6e52:	16 f4       	brtc	.+4      	; 0x6e58 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    6e54:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    6e56:	06 d0       	rcall	.+12     	; 0x6e64 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    6e58:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    6e5a:	08 d0       	rcall	.+16     	; 0x6e6c <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    6e5c:	65 d0       	rcall	.+202    	; 0x6f28 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    6e5e:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    6e60:	05 d0       	rcall	.+10     	; 0x6e6c <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    6e62:	3e f4       	brtc	.+14     	; 0x6e72 <__divmodhi4_exit>

00006e64 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    6e64:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    6e66:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    6e68:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    6e6a:	08 95       	ret

00006e6c <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    6e6c:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    6e6e:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    6e70:	7f 4f       	sbci	r23, 0xFF	; 255

00006e72 <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    6e72:	08 95       	ret

00006e74 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    6e74:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    6e76:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    6e78:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    6e7a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    6e7c:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    6e7e:	0d c0       	rjmp	.+26     	; 0x6e9a <__udivmodsi4_ep>

00006e80 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    6e80:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    6e82:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    6e84:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    6e86:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    6e88:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    6e8a:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    6e8c:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    6e8e:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    6e90:	20 f0       	brcs	.+8      	; 0x6e9a <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    6e92:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    6e94:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    6e96:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    6e98:	f5 0b       	sbc	r31, r21

00006e9a <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    6e9a:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    6e9c:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    6e9e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    6ea0:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    6ea2:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    6ea4:	69 f7       	brne	.-38     	; 0x6e80 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    6ea6:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    6ea8:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    6eaa:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    6eac:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    6eae:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    6eb0:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    6eb2:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    6eb4:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    6eb6:	08 95       	ret

00006eb8 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    6eb8:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    6eba:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    6ebc:	16 f4       	brtc	.+4      	; 0x6ec2 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    6ebe:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    6ec0:	0f d0       	rcall	.+30     	; 0x6ee0 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    6ec2:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    6ec4:	05 d0       	rcall	.+10     	; 0x6ed0 <__divmodsi4_neg2>
    6ec6:	d6 df       	rcall	.-84     	; 0x6e74 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    6ec8:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    6eca:	02 d0       	rcall	.+4      	; 0x6ed0 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    6ecc:	46 f4       	brtc	.+16     	; 0x6ede <__divmodsi4_exit>
    6ece:	08 c0       	rjmp	.+16     	; 0x6ee0 <__negsi2>

00006ed0 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    6ed0:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    6ed2:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    6ed4:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    6ed6:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    6ed8:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    6eda:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    6edc:	5f 4f       	sbci	r21, 0xFF	; 255

00006ede <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    6ede:	08 95       	ret

00006ee0 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    6ee0:	90 95       	com	r25
    6ee2:	80 95       	com	r24
    6ee4:	70 95       	com	r23
    6ee6:	61 95       	neg	r22
    6ee8:	7f 4f       	sbci	r23, 0xFF	; 255
    6eea:	8f 4f       	sbci	r24, 0xFF	; 255
    6eec:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    6eee:	08 95       	ret

00006ef0 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    6ef0:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    6ef2:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    6ef4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    6ef6:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    6ef8:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    6efa:	09 94       	ijmp

00006efc <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    6efc:	29 d0       	rcall	.+82     	; 0x6f50 <__umulhisi3>

00006efe <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    6efe:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    6f00:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    6f02:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    6f04:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    6f06:	08 95       	ret

00006f08 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    6f08:	23 d0       	rcall	.+70     	; 0x6f50 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    6f0a:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    6f0c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    6f0e:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    6f10:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    6f12:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    6f14:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    6f16:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    6f18:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    6f1a:	08 95       	ret

00006f1c <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    6f1c:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    6f1e:	f4 cf       	rjmp	.-24     	; 0x6f08 <__muluhisi3>

00006f20 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    6f20:	f3 df       	rcall	.-26     	; 0x6f08 <__muluhisi3>
    6f22:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    6f24:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    6f26:	08 95       	ret

00006f28 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    6f28:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    6f2a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    6f2c:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    6f2e:	07 c0       	rjmp	.+14     	; 0x6f3e <__udivmodhi4_ep>

00006f30 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    6f30:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    6f32:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    6f34:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    6f36:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    6f38:	10 f0       	brcs	.+4      	; 0x6f3e <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    6f3a:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    6f3c:	b7 0b       	sbc	r27, r23

00006f3e <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    6f3e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    6f40:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    6f42:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    6f44:	a9 f7       	brne	.-22     	; 0x6f30 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    6f46:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    6f48:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    6f4a:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    6f4c:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    6f4e:	08 95       	ret

00006f50 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    6f50:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    6f52:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    6f54:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    6f56:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    6f58:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    6f5a:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    6f5c:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    6f5e:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    6f60:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    6f62:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    6f64:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    6f66:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    6f68:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    6f6a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    6f6c:	08 95       	ret

00006f6e <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    6f6e:	f8 94       	cli

00006f70 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    6f70:	ff cf       	rjmp	.-2      	; 0x6f70 <__stop_program>


C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_822501/WLC_WLS_V4.01.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 c7 20 	jmp	0x418e	; 0x418e <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 9f 20 	jmp	0x413e	; 0x413e <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 71 20 	jmp	0x40e2	; 0x40e2 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 4b 20 	jmp	0x4096	; 0x4096 <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	5c 21       	and	r21, r12

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	e4 e8       	ldi	r30, 0x84	; 132
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	f3 e7       	ldi	r31, 0x73	; 115
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a8 31       	cpi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a8 e1       	ldi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	a8 3d       	cpi	r26, 0xD8	; 216
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 c5 38 	call	0x718a	; 0x718a <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 a7 24 	call	0x494e	; 0x494e <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 04 39 	jmp	0x7208	; 0x7208 <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Procss.cpp:64
bool select_product_type=0;
bool checkTempRaised=0; //Siddhesh

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     2f4:	80 91 82 28 	lds	r24, 0x2882	; 0x802882 <Alternate_Display_Flag>
     2f8:	88 23       	and	r24, r24
     2fa:	19 f0       	breq	.+6      	; 0x302 <Alternate_Display()+0xe>
     2fc:	10 92 82 28 	sts	0x2882, r1	; 0x802882 <Alternate_Display_Flag>
     300:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Procss.cpp:65
  else                       Alternate_Display_Flag=1;
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	80 93 82 28 	sts	0x2882, r24	; 0x802882 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Procss.cpp:66
}
     308:	08 95       	ret

0000030a <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:94
  } 
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     30a:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:95
}
     30e:	08 95       	ret

00000310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:64
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     310:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
     314:	88 23       	and	r24, r24
     316:	09 f4       	brne	.+2      	; 0x31a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xa>
     318:	5e c0       	rjmp	.+188    	; 0x3d6 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:66
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     31a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     31e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	91 05       	cpc	r25, r1
     326:	71 f4       	brne	.+28     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     328:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     32c:	22 23       	and	r18, r18
     32e:	51 f0       	breq	.+20     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     330:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     334:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     338:	2f 5f       	subi	r18, 0xFF	; 255
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     340:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
     344:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     348:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     34c:	25 3d       	cpi	r18, 0xD5	; 213
     34e:	31 05       	cpc	r19, r1
     350:	a4 f0       	brlt	.+40     	; 0x37a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x6a>
     352:	24 ed       	ldi	r18, 0xD4	; 212
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     35a:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:67
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     35e:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     362:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     366:	25 3d       	cpi	r18, 0xD5	; 213
     368:	31 05       	cpc	r19, r1
     36a:	cc f0       	brlt	.+50     	; 0x39e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x8e>
     36c:	84 ed       	ldi	r24, 0xD4	; 212
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 93 42 29 	sts	0x2942, r24	; 0x802942 <SET_LONG_VALUE+0x28>
     374:	90 93 43 29 	sts	0x2943, r25	; 0x802943 <SET_LONG_VALUE+0x29>
     378:	08 95       	ret
     37a:	88 30       	cpi	r24, 0x08	; 8
     37c:	91 05       	cpc	r25, r1
     37e:	79 f7       	brne	.-34     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     380:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     384:	22 23       	and	r18, r18
     386:	59 f3       	breq	.-42     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     388:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     38c:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	20 93 42 29 	sts	0x2942, r18	; 0x802942 <SET_LONG_VALUE+0x28>
     398:	30 93 43 29 	sts	0x2943, r19	; 0x802943 <SET_LONG_VALUE+0x29>
     39c:	e0 cf       	rjmp	.-64     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:70
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	fc 01       	movw	r30, r24
     3a4:	e6 5e       	subi	r30, 0xE6	; 230
     3a6:	f6 4d       	sbci	r31, 0xD6	; 214
     3a8:	20 81       	ld	r18, Z
     3aa:	31 81       	ldd	r19, Z+1	; 0x01
     3ac:	2f 5f       	subi	r18, 0xFF	; 255
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	20 83       	st	Z, r18
     3b2:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:71
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3b4:	dc 01       	movw	r26, r24
     3b6:	a4 5c       	subi	r26, 0xC4	; 196
     3b8:	bc 44       	sbci	r27, 0x4C	; 76
     3ba:	4d 91       	ld	r20, X+
     3bc:	5c 91       	ld	r21, X
     3be:	42 17       	cp	r20, r18
     3c0:	53 07       	cpc	r21, r19
     3c2:	0c f0       	brlt	.+2      	; 0x3c6 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xb6>
     3c4:	8e c0       	rjmp	.+284    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     3c6:	8a 5e       	subi	r24, 0xEA	; 234
     3c8:	9c 44       	sbci	r25, 0x4C	; 76
     3ca:	dc 01       	movw	r26, r24
     3cc:	8d 91       	ld	r24, X+
     3ce:	9c 91       	ld	r25, X
     3d0:	80 83       	st	Z, r24
     3d2:	91 83       	std	Z+1, r25	; 0x01
     3d4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:76
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3d6:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
     3da:	81 30       	cpi	r24, 0x01	; 1
     3dc:	b1 f4       	brne	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:78
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3de:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
     3e2:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     3ec:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     3f0:	20 91 0b 29 	lds	r18, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
     3f4:	30 91 0c 29 	lds	r19, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
     3f8:	28 17       	cp	r18, r24
     3fa:	39 07       	cpc	r19, r25
     3fc:	0c f0       	brlt	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	71 c0       	rjmp	.+226    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     400:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <SET_VALUE+0x2>
     404:	10 92 10 29 	sts	0x2910, r1	; 0x802910 <SET_VALUE+0x3>
     408:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:80
               }
                else if( ENTER_BUT == 2 )   
     40a:	82 30       	cpi	r24, 0x02	; 2
     40c:	39 f5       	brne	.+78     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:82
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     40e:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     412:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     416:	01 96       	adiw	r24, 0x01	; 1
     418:	8a 30       	cpi	r24, 0x0A	; 10
     41a:	91 05       	cpc	r25, r1
     41c:	e4 f4       	brge	.+56     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     41e:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     422:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:83
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     426:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     42a:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     434:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     438:	20 91 09 29 	lds	r18, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
     43c:	30 91 0a 29 	lds	r19, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
     440:	28 17       	cp	r18, r24
     442:	39 07       	cpc	r19, r25
     444:	0c f0       	brlt	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	4d c0       	rjmp	.+154    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     448:	80 e2       	ldi	r24, 0x20	; 32
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     450:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     454:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:82
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     456:	89 e0       	ldi	r24, 0x09	; 9
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	e1 cf       	rjmp	.-62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:85
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     45c:	83 30       	cpi	r24, 0x03	; 3
     45e:	91 f4       	brne	.+36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:87
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     460:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
     464:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	84 36       	cpi	r24, 0x64	; 100
     46c:	91 05       	cpc	r25, r1
     46e:	2c f4       	brge	.+10     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     470:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
     474:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
     478:	08 95       	ret
     47a:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_VALUE+0x6>
     47e:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_VALUE+0x7>
     482:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:89
               }
               else if( ENTER_BUT == 4 )   
     484:	84 30       	cpi	r24, 0x04	; 4
     486:	91 f4       	brne	.+36     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:91
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     488:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
     48c:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	8c 33       	cpi	r24, 0x3C	; 60
     494:	91 05       	cpc	r25, r1
     496:	2c f4       	brge	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     498:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
     49c:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
     4a0:	08 95       	ret
     4a2:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_VALUE+0x8>
     4a6:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x9>
     4aa:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:93
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4ac:	85 30       	cpi	r24, 0x05	; 5
     4ae:	c9 f4       	brne	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b0:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
     4b4:	88 23       	and	r24, r24
     4b6:	a9 f0       	breq	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b8:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
     4bc:	88 23       	and	r24, r24
     4be:	89 f0       	breq	.+34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:95
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4c0:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
     4c4:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
     4c8:	01 96       	adiw	r24, 0x01	; 1
     4ca:	82 30       	cpi	r24, 0x02	; 2
     4cc:	91 05       	cpc	r25, r1
     4ce:	2c f4       	brge	.+10     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d0:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
     4d4:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
     4d8:	08 95       	ret
     4da:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0xa>
     4de:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:98
               }
  }
}
     4e2:	08 95       	ret

000004e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:102

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4e4:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
     4e8:	88 23       	and	r24, r24
     4ea:	09 f4       	brne	.+2      	; 0x4ee <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xa>
     4ec:	57 c0       	rjmp	.+174    	; 0x59c <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:104
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     4ee:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     4f2:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	91 05       	cpc	r25, r1
     4fa:	71 f4       	brne	.+28     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     4fc:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     500:	22 23       	and	r18, r18
     502:	51 f0       	breq	.+20     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     504:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     508:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     50c:	21 50       	subi	r18, 0x01	; 1
     50e:	31 09       	sbc	r19, r1
     510:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     514:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
     518:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     51c:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     520:	20 32       	cpi	r18, 0x20	; 32
     522:	31 05       	cpc	r19, r1
     524:	a4 f4       	brge	.+40     	; 0x54e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x6a>
     526:	20 e2       	ldi	r18, 0x20	; 32
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     52e:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:105
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     532:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     536:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     53a:	20 32       	cpi	r18, 0x20	; 32
     53c:	31 05       	cpc	r19, r1
     53e:	cc f4       	brge	.+50     	; 0x572 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x8e>
     540:	80 e2       	ldi	r24, 0x20	; 32
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	80 93 42 29 	sts	0x2942, r24	; 0x802942 <SET_LONG_VALUE+0x28>
     548:	90 93 43 29 	sts	0x2943, r25	; 0x802943 <SET_LONG_VALUE+0x29>
     54c:	08 95       	ret
     54e:	88 30       	cpi	r24, 0x08	; 8
     550:	91 05       	cpc	r25, r1
     552:	79 f7       	brne	.-34     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     554:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     558:	22 23       	and	r18, r18
     55a:	59 f3       	breq	.-42     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     55c:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     560:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     564:	21 50       	subi	r18, 0x01	; 1
     566:	31 09       	sbc	r19, r1
     568:	20 93 42 29 	sts	0x2942, r18	; 0x802942 <SET_LONG_VALUE+0x28>
     56c:	30 93 43 29 	sts	0x2943, r19	; 0x802943 <SET_LONG_VALUE+0x29>
     570:	e0 cf       	rjmp	.-64     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:108
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     572:	88 0f       	add	r24, r24
     574:	99 1f       	adc	r25, r25
     576:	fc 01       	movw	r30, r24
     578:	e6 5e       	subi	r30, 0xE6	; 230
     57a:	f6 4d       	sbci	r31, 0xD6	; 214
     57c:	20 81       	ld	r18, Z
     57e:	31 81       	ldd	r19, Z+1	; 0x01
     580:	21 50       	subi	r18, 0x01	; 1
     582:	31 09       	sbc	r19, r1
     584:	20 83       	st	Z, r18
     586:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:109
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     588:	37 ff       	sbrs	r19, 7
     58a:	8c c0       	rjmp	.+280    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     58c:	84 51       	subi	r24, 0x14	; 20
     58e:	9d 44       	sbci	r25, 0x4D	; 77
     590:	dc 01       	movw	r26, r24
     592:	8d 91       	ld	r24, X+
     594:	9c 91       	ld	r25, X
     596:	80 83       	st	Z, r24
     598:	91 83       	std	Z+1, r25	; 0x01
     59a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:114
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     59c:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	a1 f4       	brne	.+40     	; 0x5cc <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:116
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5a4:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
     5a8:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     5b2:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     5b6:	97 ff       	sbrs	r25, 7
     5b8:	75 c0       	rjmp	.+234    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     5ba:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
     5be:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
     5c2:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     5c6:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     5ca:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:118
    }
    else if( ENTER_BUT == 2 )   
     5cc:	82 30       	cpi	r24, 0x02	; 2
     5ce:	99 f5       	brne	.+102    	; 0x636 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:120
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5d0:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     5d4:	81 11       	cpse	r24, r1
     5d6:	09 c0       	rjmp	.+18     	; 0x5ea <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x106>
     5d8:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     5dc:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     5e6:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
     5ea:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     5ee:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     5f2:	97 ff       	sbrs	r25, 7
     5f4:	16 c0       	rjmp	.+44     	; 0x622 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x13e>
     5f6:	89 e0       	ldi	r24, 0x09	; 9
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     5fe:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:121
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     602:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     606:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     60a:	80 97       	sbiw	r24, 0x20	; 32
     60c:	0c f0       	brlt	.+2      	; 0x610 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x12c>
     60e:	4a c0       	rjmp	.+148    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     610:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
     614:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
     618:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     61c:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     620:	08 95       	ret
     622:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     626:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     630:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     634:	e6 cf       	rjmp	.-52     	; 0x602 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:123
    }
    else if( ENTER_BUT == 3 )   
     636:	83 30       	cpi	r24, 0x03	; 3
     638:	79 f4       	brne	.+30     	; 0x658 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:125
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     63a:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
     63e:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	97 fd       	sbrc	r25, 7
     646:	05 c0       	rjmp	.+10     	; 0x652 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x16e>
     648:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
     64c:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
     650:	08 95       	ret
     652:	83 e6       	ldi	r24, 0x63	; 99
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	f8 cf       	rjmp	.-16     	; 0x648 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:127
    }
    else if( ENTER_BUT == 4 )   
     658:	84 30       	cpi	r24, 0x04	; 4
     65a:	79 f4       	brne	.+30     	; 0x67a <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:129
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     65c:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
     660:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	97 fd       	sbrc	r25, 7
     668:	05 c0       	rjmp	.+10     	; 0x674 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x190>
     66a:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
     66e:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
     672:	08 95       	ret
     674:	8b e3       	ldi	r24, 0x3B	; 59
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	f8 cf       	rjmp	.-16     	; 0x66a <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:131
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     67a:	85 30       	cpi	r24, 0x05	; 5
     67c:	99 f4       	brne	.+38     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     67e:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
     682:	88 23       	and	r24, r24
     684:	79 f0       	breq	.+30     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     686:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
     68a:	88 23       	and	r24, r24
     68c:	59 f0       	breq	.+22     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     68e:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
     692:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	97 fd       	sbrc	r25, 7
     69a:	05 c0       	rjmp	.+10     	; 0x6a6 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c2>
     69c:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
     6a0:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:136
    }
  }
}
     6a4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	f8 cf       	rjmp	.-16     	; 0x69c <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1b8>

000006ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:209
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:211
{ 
    first_digit = num / 1000;
     6b6:	28 ee       	ldi	r18, 0xE8	; 232
     6b8:	33 e0       	ldi	r19, 0x03	; 3
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	0e 94 a9 38 	call	0x7152	; 0x7152 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:212
    digits1[0] = first_digit;
     6c2:	ef ee       	ldi	r30, 0xEF	; 239
     6c4:	f8 e2       	ldi	r31, 0x28	; 40
     6c6:	20 83       	st	Z, r18
     6c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:213
    int first_left = num - (first_digit * 1000);
     6ca:	68 ee       	ldi	r22, 0xE8	; 232
     6cc:	73 e0       	ldi	r23, 0x03	; 3
     6ce:	62 9f       	mul	r22, r18
     6d0:	c0 01       	movw	r24, r0
     6d2:	63 9f       	mul	r22, r19
     6d4:	90 0d       	add	r25, r0
     6d6:	72 9f       	mul	r23, r18
     6d8:	90 0d       	add	r25, r0
     6da:	11 24       	eor	r1, r1
     6dc:	c8 1a       	sub	r12, r24
     6de:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:214
    second_digit = first_left / 100;
     6e0:	c6 01       	movw	r24, r12
     6e2:	64 e6       	ldi	r22, 0x64	; 100
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:215
    digits1[1] = second_digit;
     6ea:	62 83       	std	Z+2, r22	; 0x02
     6ec:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:216
    int second_left = first_left - (second_digit * 100);
     6ee:	2c e9       	ldi	r18, 0x9C	; 156
     6f0:	26 03       	mulsu	r18, r22
     6f2:	c0 01       	movw	r24, r0
     6f4:	27 9f       	mul	r18, r23
     6f6:	90 0d       	add	r25, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	c8 0e       	add	r12, r24
     6fc:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:217
    third_digit = second_left / 10;
     6fe:	c6 01       	movw	r24, r12
     700:	6a e0       	ldi	r22, 0x0A	; 10
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:218
    digits1[2] = third_digit;
     708:	64 83       	std	Z+4, r22	; 0x04
     70a:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:219
    fourth_digit = second_left - (third_digit * 10);
     70c:	26 ef       	ldi	r18, 0xF6	; 246
     70e:	26 03       	mulsu	r18, r22
     710:	c0 01       	movw	r24, r0
     712:	27 9f       	mul	r18, r23
     714:	90 0d       	add	r25, r0
     716:	11 24       	eor	r1, r1
     718:	c8 0e       	add	r12, r24
     71a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:220
    digits1[3] = fourth_digit;
     71c:	c6 82       	std	Z+6, r12	; 0x06
     71e:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:221
}
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:223

void Eclass:: BREAK_NUMBER2(long num2) 
     72a:	cf 92       	push	r12
     72c:	df 92       	push	r13
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:225
{ 
    first_digit2 = num2 / 1000;
     734:	28 ee       	ldi	r18, 0xE8	; 232
     736:	33 e0       	ldi	r19, 0x03	; 3
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	0e 94 a9 38 	call	0x7152	; 0x7152 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:226
    digits2[0] = first_digit2;
     740:	e7 ee       	ldi	r30, 0xE7	; 231
     742:	f8 e2       	ldi	r31, 0x28	; 40
     744:	20 83       	st	Z, r18
     746:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:227
    int first_left2 = num2 - (first_digit2 * 1000);
     748:	68 ee       	ldi	r22, 0xE8	; 232
     74a:	73 e0       	ldi	r23, 0x03	; 3
     74c:	62 9f       	mul	r22, r18
     74e:	c0 01       	movw	r24, r0
     750:	63 9f       	mul	r22, r19
     752:	90 0d       	add	r25, r0
     754:	72 9f       	mul	r23, r18
     756:	90 0d       	add	r25, r0
     758:	11 24       	eor	r1, r1
     75a:	c8 1a       	sub	r12, r24
     75c:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:228
    second_digit2 = first_left2 / 100;
     75e:	c6 01       	movw	r24, r12
     760:	64 e6       	ldi	r22, 0x64	; 100
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:229
    digits2[1] = second_digit2;
     768:	62 83       	std	Z+2, r22	; 0x02
     76a:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:230
    int second_left2 = first_left2 - (second_digit2 * 100);
     76c:	2c e9       	ldi	r18, 0x9C	; 156
     76e:	26 03       	mulsu	r18, r22
     770:	c0 01       	movw	r24, r0
     772:	27 9f       	mul	r18, r23
     774:	90 0d       	add	r25, r0
     776:	11 24       	eor	r1, r1
     778:	c8 0e       	add	r12, r24
     77a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:231
    third_digit2 = second_left2 / 10;
     77c:	c6 01       	movw	r24, r12
     77e:	6a e0       	ldi	r22, 0x0A	; 10
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:232
    digits2[2] = third_digit2;
     786:	64 83       	std	Z+4, r22	; 0x04
     788:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:233
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     78a:	26 ef       	ldi	r18, 0xF6	; 246
     78c:	26 03       	mulsu	r18, r22
     78e:	c0 01       	movw	r24, r0
     790:	27 9f       	mul	r18, r23
     792:	90 0d       	add	r25, r0
     794:	11 24       	eor	r1, r1
     796:	c8 0e       	add	r12, r24
     798:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:234
    digits2[3] = fourth_digit2;
     79a:	c6 82       	std	Z+6, r12	; 0x06
     79c:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:235
}
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	08 95       	ret

000007a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:58
      sample = 0;   AvgVout = 0;   
    }
      avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     7a8:	4f 92       	push	r4
     7aa:	5f 92       	push	r5
     7ac:	6f 92       	push	r6
     7ae:	7f 92       	push	r7
     7b0:	8f 92       	push	r8
     7b2:	9f 92       	push	r9
     7b4:	af 92       	push	r10
     7b6:	bf 92       	push	r11
     7b8:	cf 92       	push	r12
     7ba:	df 92       	push	r13
     7bc:	ef 92       	push	r14
     7be:	ff 92       	push	r15
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	40 e2       	ldi	r20, 0x20	; 32
     7c6:	51 e4       	ldi	r21, 0x41	; 65
     7c8:	60 91 03 29 	lds	r22, 0x2903	; 0x802903 <ERROR_CAL1>
     7cc:	70 91 04 29 	lds	r23, 0x2904	; 0x802904 <ERROR_CAL1+0x1>
     7d0:	80 91 05 29 	lds	r24, 0x2905	; 0x802905 <ERROR_CAL1+0x2>
     7d4:	90 91 06 29 	lds	r25, 0x2906	; 0x802906 <ERROR_CAL1+0x3>
     7d8:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:60
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     7dc:	20 91 e6 28 	lds	r18, 0x28E6	; 0x8028e6 <SIGN>
     7e0:	21 11       	cpse	r18, r1
     7e2:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:61
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     7e4:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
     7e8:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
     7ec:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
     7f0:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:63
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     7f4:	f0 90 e1 28 	lds	r15, 0x28E1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
     7f8:	ff 20       	and	r15, r15
     7fa:	09 f4       	brne	.+2      	; 0x7fe <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x56>
     7fc:	55 c0       	rjmp	.+170    	; 0x8a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x100>
     7fe:	20 91 e2 28 	lds	r18, 0x28E2	; 0x8028e2 <ERROR_CAL>
     802:	30 91 e3 28 	lds	r19, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
     806:	40 91 e4 28 	lds	r20, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
     80a:	50 91 e5 28 	lds	r21, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
     80e:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
     812:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
     816:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
     81a:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
     81e:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
     822:	60 93 dd 28 	sts	0x28DD, r22	; 0x8028dd <TEMP_DEG_RAW2>
     826:	70 93 de 28 	sts	0x28DE, r23	; 0x8028de <TEMP_DEG_RAW2+0x1>
     82a:	80 93 df 28 	sts	0x28DF, r24	; 0x8028df <TEMP_DEG_RAW2+0x2>
     82e:	90 93 e0 28 	sts	0x28E0, r25	; 0x8028e0 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:66
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
    
    if (!CAL_SELECT_VALUE)
     832:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
     836:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
     83a:	89 2b       	or	r24, r25
     83c:	09 f0       	breq	.+2      	; 0x840 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x98>
     83e:	7e c0       	rjmp	.+252    	; 0x93c <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:68
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     840:	ff 20       	and	r15, r15
     842:	09 f4       	brne	.+2      	; 0x846 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x9e>
     844:	50 c0       	rjmp	.+160    	; 0x8e6 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:70
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     846:	60 91 dd 28 	lds	r22, 0x28DD	; 0x8028dd <TEMP_DEG_RAW2>
     84a:	70 91 de 28 	lds	r23, 0x28DE	; 0x8028de <TEMP_DEG_RAW2+0x1>
     84e:	80 91 df 28 	lds	r24, 0x28DF	; 0x8028df <TEMP_DEG_RAW2+0x2>
     852:	90 91 e0 28 	lds	r25, 0x28E0	; 0x8028e0 <TEMP_DEG_RAW2+0x3>
     856:	60 93 ff 28 	sts	0x28FF, r22	; 0x8028ff <TEMP_DEG>
     85a:	70 93 00 29 	sts	0x2900, r23	; 0x802900 <TEMP_DEG+0x1>
     85e:	80 93 01 29 	sts	0x2901, r24	; 0x802901 <TEMP_DEG+0x2>
     862:	90 93 02 29 	sts	0x2902, r25	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:71
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     866:	26 e6       	ldi	r18, 0x66	; 102
     868:	36 e6       	ldi	r19, 0x66	; 102
     86a:	46 ee       	ldi	r20, 0xE6	; 230
     86c:	5f e3       	ldi	r21, 0x3F	; 63
     86e:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	40 e0       	ldi	r20, 0x00	; 0
     878:	52 e4       	ldi	r21, 0x42	; 66
     87a:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
     87e:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <TEMP_FAH>
     882:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <TEMP_FAH+0x1>
     886:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <TEMP_FAH+0x2>
     88a:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:89
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
   }
}
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:64
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
     8a8:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
     8ac:	88 23       	and	r24, r24
     8ae:	09 f2       	breq	.-126    	; 0x832 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
     8b0:	20 91 e2 28 	lds	r18, 0x28E2	; 0x8028e2 <ERROR_CAL>
     8b4:	30 91 e3 28 	lds	r19, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
     8b8:	40 91 e4 28 	lds	r20, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
     8bc:	50 91 e5 28 	lds	r21, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
     8c0:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
     8c4:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
     8c8:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
     8cc:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
     8d0:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
     8d4:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH_RAW2>
     8d8:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH_RAW2+0x1>
     8dc:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH_RAW2+0x2>
     8e0:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH_RAW2+0x3>
     8e4:	a6 cf       	rjmp	.-180    	; 0x832 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:73
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     8e6:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
     8ea:	88 23       	and	r24, r24
     8ec:	81 f2       	breq	.-96     	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:75
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     8ee:	c0 90 d4 28 	lds	r12, 0x28D4	; 0x8028d4 <TEMP_FAH_RAW2>
     8f2:	d0 90 d5 28 	lds	r13, 0x28D5	; 0x8028d5 <TEMP_FAH_RAW2+0x1>
     8f6:	e0 90 d6 28 	lds	r14, 0x28D6	; 0x8028d6 <TEMP_FAH_RAW2+0x2>
     8fa:	f0 90 d7 28 	lds	r15, 0x28D7	; 0x8028d7 <TEMP_FAH_RAW2+0x3>
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	40 e0       	ldi	r20, 0x00	; 0
     904:	52 e4       	ldi	r21, 0x42	; 66
     906:	c7 01       	movw	r24, r14
     908:	b6 01       	movw	r22, r12
     90a:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
     90e:	26 e6       	ldi	r18, 0x66	; 102
     910:	36 e6       	ldi	r19, 0x66	; 102
     912:	46 ee       	ldi	r20, 0xE6	; 230
     914:	5f e3       	ldi	r21, 0x3F	; 63
     916:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
     91a:	60 93 ff 28 	sts	0x28FF, r22	; 0x8028ff <TEMP_DEG>
     91e:	70 93 00 29 	sts	0x2900, r23	; 0x802900 <TEMP_DEG+0x1>
     922:	80 93 01 29 	sts	0x2901, r24	; 0x802901 <TEMP_DEG+0x2>
     926:	90 93 02 29 	sts	0x2902, r25	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:76
          TEMP_FAH  =  TEMP_FAH_RAW2;
     92a:	c0 92 ce 28 	sts	0x28CE, r12	; 0x8028ce <TEMP_FAH>
     92e:	d0 92 cf 28 	sts	0x28CF, r13	; 0x8028cf <TEMP_FAH+0x1>
     932:	e0 92 d0 28 	sts	0x28D0, r14	; 0x8028d0 <TEMP_FAH+0x2>
     936:	f0 92 d1 28 	sts	0x28D1, r15	; 0x8028d1 <TEMP_FAH+0x3>
     93a:	a9 cf       	rjmp	.-174    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     93c:	60 91 ca 28 	lds	r22, 0x28CA	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
     940:	70 91 cb 28 	lds	r23, 0x28CB	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
     944:	80 91 cc 28 	lds	r24, 0x28CC	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
     948:	90 91 cd 28 	lds	r25, 0x28CD	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
     94c:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e2       	ldi	r20, 0x20	; 32
     956:	51 e4       	ldi	r21, 0x41	; 65
     958:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
     95c:	4b 01       	movw	r8, r22
     95e:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:83
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     960:	60 91 c2 28 	lds	r22, 0x28C2	; 0x8028c2 <MASTER_LOW_CONV>
     964:	70 91 c3 28 	lds	r23, 0x28C3	; 0x8028c3 <MASTER_LOW_CONV+0x1>
     968:	80 91 c4 28 	lds	r24, 0x28C4	; 0x8028c4 <MASTER_LOW_CONV+0x2>
     96c:	90 91 c5 28 	lds	r25, 0x28C5	; 0x8028c5 <MASTER_LOW_CONV+0x3>
     970:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	40 e2       	ldi	r20, 0x20	; 32
     97a:	51 e4       	ldi	r21, 0x41	; 65
     97c:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
     980:	6b 01       	movw	r12, r22
     982:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:84
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     984:	60 91 be 28 	lds	r22, 0x28BE	; 0x8028be <MASTER_HIGH_CONV>
     988:	70 91 bf 28 	lds	r23, 0x28BF	; 0x8028bf <MASTER_HIGH_CONV+0x1>
     98c:	80 91 c0 28 	lds	r24, 0x28C0	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
     990:	90 91 c1 28 	lds	r25, 0x28C1	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
     994:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	40 e2       	ldi	r20, 0x20	; 32
     99e:	51 e4       	ldi	r21, 0x41	; 65
     9a0:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     9a4:	a7 01       	movw	r20, r14
     9a6:	96 01       	movw	r18, r12
     9a8:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
     9ac:	2b 01       	movw	r4, r22
     9ae:	3c 01       	movw	r6, r24
     9b0:	a5 01       	movw	r20, r10
     9b2:	94 01       	movw	r18, r8
     9b4:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
     9b8:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
     9bc:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
     9c0:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
     9c4:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	c3 01       	movw	r24, r6
     9ce:	b2 01       	movw	r22, r4
     9d0:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
     9d4:	2b 01       	movw	r4, r22
     9d6:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:82
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     9d8:	60 91 c6 28 	lds	r22, 0x28C6	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
     9dc:	70 91 c7 28 	lds	r23, 0x28C7	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     9e0:	80 91 c8 28 	lds	r24, 0x28C8	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     9e4:	90 91 c9 28 	lds	r25, 0x28C9	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     9e8:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e2       	ldi	r20, 0x20	; 32
     9f2:	51 e4       	ldi	r21, 0x41	; 65
     9f4:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     9f8:	a5 01       	movw	r20, r10
     9fa:	94 01       	movw	r18, r8
     9fc:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
     a00:	9b 01       	movw	r18, r22
     a02:	ac 01       	movw	r20, r24
     a04:	c3 01       	movw	r24, r6
     a06:	b2 01       	movw	r22, r4
     a08:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
     a0c:	a7 01       	movw	r20, r14
     a0e:	96 01       	movw	r18, r12
     a10:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
     a14:	6b 01       	movw	r12, r22
     a16:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:85
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
     a18:	c0 92 ff 28 	sts	0x28FF, r12	; 0x8028ff <TEMP_DEG>
     a1c:	d0 92 00 29 	sts	0x2900, r13	; 0x802900 <TEMP_DEG+0x1>
     a20:	e0 92 01 29 	sts	0x2901, r14	; 0x802901 <TEMP_DEG+0x2>
     a24:	f0 92 02 29 	sts	0x2902, r15	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:86
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     a28:	26 e6       	ldi	r18, 0x66	; 102
     a2a:	36 e6       	ldi	r19, 0x66	; 102
     a2c:	46 ee       	ldi	r20, 0xE6	; 230
     a2e:	5f e3       	ldi	r21, 0x3F	; 63
     a30:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	40 e0       	ldi	r20, 0x00	; 0
     a3a:	52 e4       	ldi	r21, 0x42	; 66
     a3c:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
     a40:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <TEMP_FAH>
     a44:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <TEMP_FAH+0x1>
     a48:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <TEMP_FAH+0x2>
     a4c:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:87
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	48 ec       	ldi	r20, 0xC8	; 200
     a56:	52 e4       	ldi	r21, 0x42	; 66
     a58:	c7 01       	movw	r24, r14
     a5a:	b6 01       	movw	r22, r12
     a5c:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
     a60:	87 fd       	sbrc	r24, 7
     a62:	15 cf       	rjmp	.-470    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
     a64:	8d ec       	ldi	r24, 0xCD	; 205
     a66:	9c ec       	ldi	r25, 0xCC	; 204
     a68:	a7 ec       	ldi	r26, 0xC7	; 199
     a6a:	b2 e4       	ldi	r27, 0x42	; 66
     a6c:	80 93 ff 28 	sts	0x28FF, r24	; 0x8028ff <TEMP_DEG>
     a70:	90 93 00 29 	sts	0x2900, r25	; 0x802900 <TEMP_DEG+0x1>
     a74:	a0 93 01 29 	sts	0x2901, r26	; 0x802901 <TEMP_DEG+0x2>
     a78:	b0 93 02 29 	sts	0x2902, r27	; 0x802902 <TEMP_DEG+0x3>
     a7c:	08 cf       	rjmp	.-496    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>

00000a7e <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:461
}
}

void DEC_LONGPRESS_STOP()
{
  if(checkTempRaised==0)
     a7e:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
     a82:	81 11       	cpse	r24, r1
     a84:	06 c0       	rjmp	.+12     	; 0xa92 <DEC_LONGPRESS_STOP()+0x14>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:463
  {
  i = 0;
     a86:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
     a8a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:464
  BLINK_STATS=0;
     a8e:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:466
  }
}
     a92:	08 95       	ret

00000a94 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     a94:	f4 cf       	rjmp	.-24     	; 0xa7e <DEC_LONGPRESS_STOP()>

00000a96 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	6c 01       	movw	r12, r24
     aac:	7b 01       	movw	r14, r22
     aae:	8b 01       	movw	r16, r22
     ab0:	04 0f       	add	r16, r20
     ab2:	15 1f       	adc	r17, r21
     ab4:	eb 01       	movw	r28, r22
     ab6:	5e 01       	movw	r10, r28
     ab8:	ae 18       	sub	r10, r14
     aba:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     abc:	c0 17       	cp	r28, r16
     abe:	d1 07       	cpc	r29, r17
     ac0:	59 f0       	breq	.+22     	; 0xad8 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     ac2:	69 91       	ld	r22, Y+
     ac4:	d6 01       	movw	r26, r12
     ac6:	ed 91       	ld	r30, X+
     ac8:	fc 91       	ld	r31, X
     aca:	01 90       	ld	r0, Z+
     acc:	f0 81       	ld	r31, Z
     ace:	e0 2d       	mov	r30, r0
     ad0:	c6 01       	movw	r24, r12
     ad2:	09 95       	icall
     ad4:	89 2b       	or	r24, r25
     ad6:	79 f7       	brne	.-34     	; 0xab6 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     ad8:	c5 01       	movw	r24, r10
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	df 90       	pop	r13
     ae8:	cf 90       	pop	r12
     aea:	bf 90       	pop	r11
     aec:	af 90       	pop	r10
     aee:	08 95       	ret

00000af0 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     af0:	fc 01       	movw	r30, r24
     af2:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     af4:	41 8d       	ldd	r20, Z+25	; 0x19
     af6:	25 2f       	mov	r18, r21
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	84 2f       	mov	r24, r20
     afc:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     afe:	82 1b       	sub	r24, r18
     b00:	93 0b       	sbc	r25, r19
     b02:	54 17       	cp	r21, r20
     b04:	10 f0       	brcs	.+4      	; 0xb0a <UartClass::availableForWrite()+0x1a>
     b06:	cf 96       	adiw	r24, 0x3f	; 63
     b08:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     b0a:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     b0c:	08 95       	ret

00000b0e <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     b0e:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     b10:	96 89       	ldd	r25, Z+22	; 0x16
     b12:	87 89       	ldd	r24, Z+23	; 0x17
     b14:	98 17       	cp	r25, r24
     b16:	61 f0       	breq	.+24     	; 0xb30 <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     b18:	a7 89       	ldd	r26, Z+23	; 0x17
     b1a:	ae 0f       	add	r26, r30
     b1c:	bf 2f       	mov	r27, r31
     b1e:	b1 1d       	adc	r27, r1
     b20:	5d 96       	adiw	r26, 0x1d	; 29
     b22:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     b24:	97 89       	ldd	r25, Z+23	; 0x17
     b26:	9f 5f       	subi	r25, 0xFF	; 255
     b28:	9f 73       	andi	r25, 0x3F	; 63
     b2a:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     b30:	8f ef       	ldi	r24, 0xFF	; 255
     b32:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     b34:	08 95       	ret

00000b36 <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     b36:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     b38:	96 89       	ldd	r25, Z+22	; 0x16
     b3a:	87 89       	ldd	r24, Z+23	; 0x17
     b3c:	98 17       	cp	r25, r24
     b3e:	31 f0       	breq	.+12     	; 0xb4c <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     b40:	87 89       	ldd	r24, Z+23	; 0x17
     b42:	e8 0f       	add	r30, r24
     b44:	f1 1d       	adc	r31, r1
     b46:	85 8d       	ldd	r24, Z+29	; 0x1d
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     b4c:	8f ef       	ldi	r24, 0xFF	; 255
     b4e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     b50:	08 95       	ret

00000b52 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     b52:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     b54:	96 89       	ldd	r25, Z+22	; 0x16
     b56:	27 89       	ldd	r18, Z+23	; 0x17
     b58:	89 2f       	mov	r24, r25
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	80 5c       	subi	r24, 0xC0	; 192
     b5e:	9f 4f       	sbci	r25, 0xFF	; 255
     b60:	82 1b       	sub	r24, r18
     b62:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     b64:	8f 73       	andi	r24, 0x3F	; 63
     b66:	99 27       	eor	r25, r25
     b68:	08 95       	ret

00000b6a <Serial2_available()>:
Serial2_available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     b6a:	8e e4       	ldi	r24, 0x4E	; 78
     b6c:	99 e2       	ldi	r25, 0x29	; 41
     b6e:	f1 df       	rcall	.-30     	; 0xb52 <UartClass::available()>
     b70:	21 e0       	ldi	r18, 0x01	; 1
     b72:	89 2b       	or	r24, r25
     b74:	09 f4       	brne	.+2      	; 0xb78 <Serial2_available()+0xe>
     b76:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     b78:	82 2f       	mov	r24, r18
     b7a:	08 95       	ret

00000b7c <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     b7c:	cf 93       	push	r28
     b7e:	df 93       	push	r29
     b80:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     b82:	e8 81       	ld	r30, Y
     b84:	f9 81       	ldd	r31, Y+1	; 0x01
     b86:	06 80       	ldd	r0, Z+6	; 0x06
     b88:	f7 81       	ldd	r31, Z+7	; 0x07
     b8a:	e0 2d       	mov	r30, r0
     b8c:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     b8e:	ec 85       	ldd	r30, Y+12	; 0x0c
     b90:	fd 85       	ldd	r31, Y+13	; 0x0d
     b92:	86 81       	ldd	r24, Z+6	; 0x06
     b94:	8f 73       	andi	r24, 0x3F	; 63
     b96:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     b98:	ec 85       	ldd	r30, Y+12	; 0x0c
     b9a:	fd 85       	ldd	r31, Y+13	; 0x0d
     b9c:	85 81       	ldd	r24, Z+5	; 0x05
     b9e:	8f 75       	andi	r24, 0x5F	; 95
     ba0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     ba2:	8f 89       	ldd	r24, Y+23	; 0x17
     ba4:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     ba6:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	08 95       	ret

00000bae <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     bae:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     bb0:	61 30       	cpi	r22, 0x01	; 1
     bb2:	19 f4       	brne	.+6      	; 0xbba <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     bb4:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     bba:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     bbc:	66 23       	and	r22, r22
     bbe:	d9 f3       	breq	.-10     	; 0xbb6 <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     bc0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     bc2:	08 95       	ret

00000bc4 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     bc4:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     bc6:	54 96       	adiw	r26, 0x14	; 20
     bc8:	1c 92       	st	X, r1
     bca:	54 97       	sbiw	r26, 0x14	; 20
     bcc:	54 96       	adiw	r26, 0x14	; 20
     bce:	8c 91       	ld	r24, X
     bd0:	54 97       	sbiw	r26, 0x14	; 20
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	a0 f4       	brcc	.+40     	; 0xbfe <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     bd6:	28 2f       	mov	r18, r24
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	f9 01       	movw	r30, r18
     bdc:	ee 0f       	add	r30, r30
     bde:	ff 1f       	adc	r31, r31
     be0:	e2 0f       	add	r30, r18
     be2:	f3 1f       	adc	r31, r19
     be4:	ea 0f       	add	r30, r26
     be6:	fb 1f       	adc	r31, r27
     be8:	97 85       	ldd	r25, Z+15	; 0x0f
     bea:	96 13       	cpse	r25, r22
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <UartClass::pins(unsigned char, unsigned char)+0x30>
     bee:	96 85       	ldd	r25, Z+14	; 0x0e
     bf0:	94 17       	cp	r25, r20
     bf2:	49 f0       	breq	.+18     	; 0xc06 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	54 96       	adiw	r26, 0x14	; 20
     bf8:	8c 93       	st	X, r24
     bfa:	54 97       	sbiw	r26, 0x14	; 20
     bfc:	e7 cf       	rjmp	.-50     	; 0xbcc <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     bfe:	54 96       	adiw	r26, 0x14	; 20
     c00:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     c06:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     c08:	08 95       	ret

00000c0a <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     c10:	90 8d       	ldd	r25, Z+24	; 0x18
     c12:	81 8d       	ldd	r24, Z+25	; 0x19
     c14:	c4 85       	ldd	r28, Z+12	; 0x0c
     c16:	d5 85       	ldd	r29, Z+13	; 0x0d
     c18:	98 13       	cpse	r25, r24
     c1a:	06 c0       	rjmp	.+12     	; 0xc28 <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     c1c:	8d 81       	ldd	r24, Y+5	; 0x05
     c1e:	8f 7d       	andi	r24, 0xDF	; 223
     c20:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     c22:	df 91       	pop	r29
     c24:	cf 91       	pop	r28
     c26:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     c28:	a1 8d       	ldd	r26, Z+25	; 0x19
     c2a:	ae 0f       	add	r26, r30
     c2c:	bf 2f       	mov	r27, r31
     c2e:	b1 1d       	adc	r27, r1
     c30:	a3 5a       	subi	r26, 0xA3	; 163
     c32:	bf 4f       	sbci	r27, 0xFF	; 255
     c34:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     c36:	81 8d       	ldd	r24, Z+25	; 0x19
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	8f 73       	andi	r24, 0x3F	; 63
     c3e:	99 27       	eor	r25, r25
     c40:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     c42:	80 e4       	ldi	r24, 0x40	; 64
     c44:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     c46:	a4 85       	ldd	r26, Z+12	; 0x0c
     c48:	b5 85       	ldd	r27, Z+13	; 0x0d
     c4a:	12 96       	adiw	r26, 0x02	; 2
     c4c:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     c4e:	90 8d       	ldd	r25, Z+24	; 0x18
     c50:	81 8d       	ldd	r24, Z+25	; 0x19
     c52:	98 13       	cpse	r25, r24
     c54:	e6 cf       	rjmp	.-52     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     c56:	a4 85       	ldd	r26, Z+12	; 0x0c
     c58:	b5 85       	ldd	r27, Z+13	; 0x0d
     c5a:	15 96       	adiw	r26, 0x05	; 5
     c5c:	8c 91       	ld	r24, X
     c5e:	15 97       	sbiw	r26, 0x05	; 5
     c60:	8f 7d       	andi	r24, 0xDF	; 223
     c62:	15 96       	adiw	r26, 0x05	; 5
     c64:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     c66:	83 8d       	ldd	r24, Z+27	; 0x1b
     c68:	88 23       	and	r24, r24
     c6a:	d9 f2       	breq	.-74     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     c6c:	84 8d       	ldd	r24, Z+28	; 0x1c
     c6e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     c72:	13 8e       	std	Z+27, r1	; 0x1b
     c74:	d6 cf       	rjmp	.-84     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>

00000c76 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     c76:	dc 01       	movw	r26, r24
     c78:	1c 96       	adiw	r26, 0x0c	; 12
     c7a:	ed 91       	ld	r30, X+
     c7c:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	07 fe       	sbrs	r0, 7
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <UartClass::_poll_tx_data_empty()+0x14>
     c84:	25 81       	ldd	r18, Z+5	; 0x05
     c86:	25 fd       	sbrc	r18, 5
     c88:	03 c0       	rjmp	.+6      	; 0xc90 <UartClass::_poll_tx_data_empty()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     c8c:	25 fd       	sbrc	r18, 5
     c8e:	bd cf       	rjmp	.-134    	; 0xc0a <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     c90:	08 95       	ret

00000c92 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     c92:	ef 92       	push	r14
     c94:	ff 92       	push	r15
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     ca4:	98 8d       	ldd	r25, Y+24	; 0x18
     ca6:	89 8d       	ldd	r24, Y+25	; 0x19
     ca8:	98 13       	cpse	r25, r24
     caa:	1c c0       	rjmp	.+56     	; 0xce4 <UartClass::write(unsigned char)+0x52>
     cac:	ac 85       	ldd	r26, Y+12	; 0x0c
     cae:	bd 85       	ldd	r27, Y+13	; 0x0d
     cb0:	14 96       	adiw	r26, 0x04	; 4
     cb2:	8c 91       	ld	r24, X
     cb4:	14 97       	sbiw	r26, 0x04	; 4
     cb6:	85 ff       	sbrs	r24, 5
     cb8:	15 c0       	rjmp	.+42     	; 0xce4 <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     cba:	12 96       	adiw	r26, 0x02	; 2
     cbc:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     cbe:	ac 85       	ldd	r26, Y+12	; 0x0c
     cc0:	bd 85       	ldd	r27, Y+13	; 0x0d
     cc2:	80 e4       	ldi	r24, 0x40	; 64
     cc4:	14 96       	adiw	r26, 0x04	; 4
     cc6:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     cc8:	ec 85       	ldd	r30, Y+12	; 0x0c
     cca:	fd 85       	ldd	r31, Y+13	; 0x0d
     ccc:	85 81       	ldd	r24, Z+5	; 0x05
     cce:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     cd0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	1f 91       	pop	r17
     cdc:	0f 91       	pop	r16
     cde:	ff 90       	pop	r15
     ce0:	ef 90       	pop	r14
     ce2:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     ce4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     ce8:	80 ff       	sbrs	r24, 0
     cea:	08 c0       	rjmp	.+16     	; 0xcfc <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     cec:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     cf0:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     cf2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     cf4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	8b 8f       	std	Y+27, r24	; 0x1b
     cfc:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     cfe:	08 8d       	ldd	r16, Y+24	; 0x18
     d00:	10 e0       	ldi	r17, 0x00	; 0
     d02:	0f 5f       	subi	r16, 0xFF	; 255
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	0f 73       	andi	r16, 0x3F	; 63
     d08:	11 27       	eor	r17, r17
     d0a:	e0 2e       	mov	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     d0c:	89 8d       	ldd	r24, Y+25	; 0x19
     d0e:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     d10:	03 c0       	rjmp	.+6      	; 0xd18 <UartClass::write(unsigned char)+0x86>
     d12:	ce 01       	movw	r24, r28
     d14:	b0 df       	rcall	.-160    	; 0xc76 <UartClass::_poll_tx_data_empty()>
     d16:	fa cf       	rjmp	.-12     	; 0xd0c <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     d18:	e8 8d       	ldd	r30, Y+24	; 0x18
     d1a:	ec 0f       	add	r30, r28
     d1c:	fd 2f       	mov	r31, r29
     d1e:	f1 1d       	adc	r31, r1
     d20:	e3 5a       	subi	r30, 0xA3	; 163
     d22:	ff 4f       	sbci	r31, 0xFF	; 255
     d24:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     d26:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     d28:	ec 85       	ldd	r30, Y+12	; 0x0c
     d2a:	fd 85       	ldd	r31, Y+13	; 0x0d
     d2c:	85 81       	ldd	r24, Z+5	; 0x05
     d2e:	80 62       	ori	r24, 0x20	; 32
     d30:	cf cf       	rjmp	.-98     	; 0xcd0 <UartClass::write(unsigned char)+0x3e>

00000d32 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     d36:	fc 01       	movw	r30, r24
     d38:	25 89       	ldd	r18, Z+21	; 0x15
     d3a:	22 23       	and	r18, r18
     d3c:	c1 f0       	breq	.+48     	; 0xd6e <UartClass::flush()+0x3c>
     d3e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     d40:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     d44:	80 ff       	sbrs	r24, 0
     d46:	08 c0       	rjmp	.+16     	; 0xd58 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     d48:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     d4c:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     d4e:	82 8d       	ldd	r24, Z+26	; 0x1a
     d50:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     d58:	ec 85       	ldd	r30, Y+12	; 0x0c
     d5a:	fd 85       	ldd	r31, Y+13	; 0x0d
     d5c:	85 81       	ldd	r24, Z+5	; 0x05
     d5e:	85 fd       	sbrc	r24, 5
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <UartClass::flush()+0x36>
     d62:	84 81       	ldd	r24, Z+4	; 0x04
     d64:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     d66:	03 c0       	rjmp	.+6      	; 0xd6e <UartClass::flush()+0x3c>
     d68:	ce 01       	movw	r24, r28
     d6a:	85 df       	rcall	.-246    	; 0xc76 <UartClass::_poll_tx_data_empty()>
     d6c:	f5 cf       	rjmp	.-22     	; 0xd58 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     d6e:	df 91       	pop	r29
     d70:	cf 91       	pop	r28
     d72:	08 95       	ret

00000d74 <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	89 2b       	or	r24, r25
     d7a:	49 f0       	breq	.+18     	; 0xd8e <serialEventRun()+0x1a>
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	89 2b       	or	r24, r25
     d82:	29 f0       	breq	.+10     	; 0xd8e <serialEventRun()+0x1a>
     d84:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     d88:	81 11       	cpse	r24, r1
     d8a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	89 2b       	or	r24, r25
     d94:	49 f0       	breq	.+18     	; 0xda8 <serialEventRun()+0x34>
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	89 2b       	or	r24, r25
     d9c:	29 f0       	breq	.+10     	; 0xda8 <serialEventRun()+0x34>
     d9e:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     da2:	81 11       	cpse	r24, r1
     da4:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	89 2b       	or	r24, r25
     dae:	21 f0       	breq	.+8      	; 0xdb8 <serialEventRun()+0x44>
     db0:	dc de       	rcall	.-584    	; 0xb6a <Serial2_available()>
     db2:	81 11       	cpse	r24, r1
     db4:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	89 2b       	or	r24, r25
     dbe:	49 f0       	breq	.+18     	; 0xdd2 <serialEventRun()+0x5e>
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	89 2b       	or	r24, r25
     dc6:	29 f0       	breq	.+10     	; 0xdd2 <serialEventRun()+0x5e>
     dc8:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     dcc:	81 11       	cpse	r24, r1
     dce:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
     dd2:	08 95       	ret

00000dd4 <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	08 95       	ret

00000dd8 <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     dd8:	cf 93       	push	r28
     dda:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	fc 01       	movw	r30, r24
     de0:	ed 53       	subi	r30, 0x3D	; 61
     de2:	fd 44       	sbci	r31, 0x4D	; 77
     de4:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     de6:	2f 3f       	cpi	r18, 0xFF	; 255
     de8:	69 f0       	breq	.+26     	; 0xe04 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     dea:	fc 01       	movw	r30, r24
     dec:	e6 56       	subi	r30, 0x66	; 102
     dee:	fd 44       	sbci	r31, 0x4D	; 77
     df0:	a0 81       	ld	r26, Z
     df2:	30 e2       	ldi	r19, 0x20	; 32
     df4:	a3 9f       	mul	r26, r19
     df6:	d0 01       	movw	r26, r0
     df8:	11 24       	eor	r1, r1
     dfa:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     dfc:	61 30       	cpi	r22, 0x01	; 1
     dfe:	29 f4       	brne	.+10     	; 0xe0a <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     e00:	11 96       	adiw	r26, 0x01	; 1
     e02:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     e0a:	8f 58       	subi	r24, 0x8F	; 143
     e0c:	9d 44       	sbci	r25, 0x4D	; 77
     e0e:	ec 01       	movw	r28, r24
     e10:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     e12:	ef 3f       	cpi	r30, 0xFF	; 255
     e14:	81 f0       	breq	.+32     	; 0xe36 <pinMode.part.1+0x5e>
     e16:	cd 01       	movw	r24, r26
     e18:	40 96       	adiw	r24, 0x10	; 16
     e1a:	e8 0f       	add	r30, r24
     e1c:	f9 2f       	mov	r31, r25
     e1e:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     e20:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     e22:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     e24:	12 96       	adiw	r26, 0x02	; 2
     e26:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     e28:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     e2a:	62 30       	cpi	r22, 0x02	; 2
     e2c:	39 f4       	brne	.+14     	; 0xe3c <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     e2e:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     e30:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     e32:	9f bf       	out	0x3f, r25	; 63
     e34:	e7 cf       	rjmp	.-50     	; 0xe04 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     e3a:	f2 cf       	rjmp	.-28     	; 0xe20 <pinMode.part.1+0x48>
     e3c:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     e3e:	f8 cf       	rjmp	.-16     	; 0xe30 <pinMode.part.1+0x58>

00000e40 <pinMode>:
pinMode():
     e40:	89 32       	cpi	r24, 0x29	; 41
     e42:	08 f4       	brcc	.+2      	; 0xe46 <pinMode+0x6>
     e44:	c9 cf       	rjmp	.-110    	; 0xdd8 <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     e46:	08 95       	ret

00000e48 <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	fc 01       	movw	r30, r24
     e4c:	e8 5b       	subi	r30, 0xB8	; 184
     e4e:	fd 44       	sbci	r31, 0x4D	; 77
     e50:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     e52:	ee 23       	and	r30, r30
     e54:	19 f1       	breq	.+70     	; 0xe9c <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     e56:	e1 30       	cpi	r30, 0x01	; 1
     e58:	21 f0       	breq	.+8      	; 0xe62 <turnOffPWM.part.0+0x1a>
     e5a:	00 f1       	brcs	.+64     	; 0xe9c <turnOffPWM.part.0+0x54>
     e5c:	e6 30       	cpi	r30, 0x06	; 6
     e5e:	a8 f0       	brcs	.+42     	; 0xe8a <turnOffPWM.part.0+0x42>
     e60:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     e62:	8f 58       	subi	r24, 0x8F	; 143
     e64:	9d 44       	sbci	r25, 0x4D	; 77
     e66:	fc 01       	movw	r30, r24
     e68:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     e6a:	23 30       	cpi	r18, 0x03	; 3
     e6c:	08 f0       	brcs	.+2      	; 0xe70 <turnOffPWM.part.0+0x28>
     e6e:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     e70:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <turnOffPWM.part.0+0x34>
     e7a:	88 0f       	add	r24, r24
     e7c:	2a 95       	dec	r18
     e7e:	ea f7       	brpl	.-6      	; 0xe7a <turnOffPWM.part.0+0x32>
     e80:	80 95       	com	r24
     e82:	83 23       	and	r24, r19
     e84:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e88:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
     e8a:	80 e1       	ldi	r24, 0x10	; 16
     e8c:	e8 9f       	mul	r30, r24
     e8e:	f0 01       	movw	r30, r0
     e90:	11 24       	eor	r1, r1
     e92:	e0 5a       	subi	r30, 0xA0	; 160
     e94:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
     e96:	81 81       	ldd	r24, Z+1	; 0x01
     e98:	8f 7e       	andi	r24, 0xEF	; 239
     e9a:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
     e9c:	08 95       	ret

00000e9e <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
     e9e:	0f 93       	push	r16
     ea0:	1f 93       	push	r17
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     ea6:	c8 2f       	mov	r28, r24
     ea8:	d0 e0       	ldi	r29, 0x00	; 0
     eaa:	fe 01       	movw	r30, r28
     eac:	ed 53       	subi	r30, 0x3D	; 61
     eae:	fd 44       	sbci	r31, 0x4D	; 77
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
     eb0:	00 81       	ld	r16, Z
     eb2:	0f 3f       	cpi	r16, 0xFF	; 255
     eb4:	99 f0       	breq	.+38     	; 0xedc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     eb6:	16 2f       	mov	r17, r22
turnOffPWM():
     eb8:	89 32       	cpi	r24, 0x29	; 41
     eba:	08 f4       	brcc	.+2      	; 0xebe <digitalWrite.part.2+0x20>
     ebc:	c5 df       	rcall	.-118    	; 0xe48 <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
     ebe:	fe 01       	movw	r30, r28
     ec0:	e6 56       	subi	r30, 0x66	; 102
     ec2:	fd 44       	sbci	r31, 0x4D	; 77
     ec4:	e0 81       	ld	r30, Z
     ec6:	80 e2       	ldi	r24, 0x20	; 32
     ec8:	e8 9f       	mul	r30, r24
     eca:	f0 01       	movw	r30, r0
     ecc:	11 24       	eor	r1, r1
     ece:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
     ed0:	80 81       	ld	r24, Z
     ed2:	80 23       	and	r24, r16
     ed4:	51 f0       	breq	.+20     	; 0xeea <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
     ed6:	11 11       	cpse	r17, r1
     ed8:	06 c0       	rjmp	.+12     	; 0xee6 <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
     eda:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
     ee6:	05 83       	std	Z+5, r16	; 0x05
     ee8:	f9 cf       	rjmp	.-14     	; 0xedc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
     eea:	cf 58       	subi	r28, 0x8F	; 143
     eec:	dd 44       	sbci	r29, 0x4D	; 77
     eee:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     ef0:	30 97       	sbiw	r30, 0x00	; 0
     ef2:	71 f0       	breq	.+28     	; 0xf10 <digitalWrite.part.2+0x72>
     ef4:	8f 3f       	cpi	r24, 0xFF	; 255
     ef6:	61 f0       	breq	.+24     	; 0xf10 <digitalWrite.part.2+0x72>
     ef8:	70 96       	adiw	r30, 0x10	; 16
     efa:	e8 0f       	add	r30, r24
     efc:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
     efe:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
     f00:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     f02:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
     f04:	11 11       	cpse	r17, r1
     f06:	07 c0       	rjmp	.+14     	; 0xf16 <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     f08:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     f0a:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
     f0c:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     f0e:	e6 cf       	rjmp	.-52     	; 0xedc <digitalWrite.part.2+0x3e>
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     f14:	f4 cf       	rjmp	.-24     	; 0xefe <digitalWrite.part.2+0x60>
     f16:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f18:	f8 cf       	rjmp	.-16     	; 0xf0a <digitalWrite.part.2+0x6c>

00000f1a <digitalWrite>:
digitalWrite():
     f1a:	89 32       	cpi	r24, 0x29	; 41
     f1c:	08 f4       	brcc	.+2      	; 0xf20 <digitalWrite+0x6>
     f1e:	bf cf       	rjmp	.-130    	; 0xe9e <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     f20:	08 95       	ret

00000f22 <OneButton::OneButton(int, int) [clone .constprop.13]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	ec 01       	movw	r28, r24
     f2c:	16 2f       	mov	r17, r22
     f2e:	07 2f       	mov	r16, r23
     f30:	82 e3       	ldi	r24, 0x32	; 50
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
     f36:	9f 83       	std	Y+7, r25	; 0x07
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	81 2f       	mov	r24, r17
     f3c:	81 df       	rcall	.-254    	; 0xe40 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
     f3e:	18 83       	st	Y, r17
     f40:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
     f42:	88 e5       	ldi	r24, 0x58	; 88
     f44:	92 e0       	ldi	r25, 0x02	; 2
     f46:	8a 83       	std	Y+2, r24	; 0x02
     f48:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
     f4a:	88 ee       	ldi	r24, 0xE8	; 232
     f4c:	93 e0       	ldi	r25, 0x03	; 3
     f4e:	8c 83       	std	Y+4, r24	; 0x04
     f50:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
     f52:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
     f54:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
     f56:	1c 86       	std	Y+12, r1	; 0x0c
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
     f5e:	99 87       	std	Y+9, r25	; 0x09
     f60:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
     f62:	1b 86       	std	Y+11, r1	; 0x0b
     f64:	61 e0       	ldi	r22, 0x01	; 1
     f66:	81 2f       	mov	r24, r17
     f68:	d8 df       	rcall	.-80     	; 0xf1a <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
     f6a:	1f 86       	std	Y+15, r1	; 0x0f
     f6c:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
     f6e:	19 8a       	std	Y+17, r1	; 0x11
     f70:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
     f72:	1b 8a       	std	Y+19, r1	; 0x13
     f74:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
     f76:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
     f78:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
     f7a:	1f 8a       	std	Y+23, r1	; 0x17
     f7c:	18 8e       	std	Y+24, r1	; 0x18
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:195
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	08 95       	ret

00000f88 <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:196
    digitalWrite(CA_6, HIGH);
     f88:	61 e0       	ldi	r22, 0x01	; 1
     f8a:	8b e0       	ldi	r24, 0x0B	; 11
     f8c:	c6 df       	rcall	.-116    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:197
    digitalWrite(CA_7, HIGH);
     f8e:	61 e0       	ldi	r22, 0x01	; 1
     f90:	8a e0       	ldi	r24, 0x0A	; 10
     f92:	c3 df       	rcall	.-122    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:198
    digitalWrite(CA_8, HIGH);
     f94:	61 e0       	ldi	r22, 0x01	; 1
     f96:	89 e0       	ldi	r24, 0x09	; 9
     f98:	c0 df       	rcall	.-128    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:203
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
     f9a:	61 e0       	ldi	r22, 0x01	; 1
     f9c:	88 e0       	ldi	r24, 0x08	; 8
     f9e:	bd cf       	rjmp	.-134    	; 0xf1a <digitalWrite>

00000fa0 <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
     fa0:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:204
    digitalWrite(CA_3, HIGH);
     fa2:	87 e0       	ldi	r24, 0x07	; 7
     fa4:	ba df       	rcall	.-140    	; 0xf1a <digitalWrite>
     fa6:	61 e0       	ldi	r22, 0x01	; 1
     fa8:	86 e0       	ldi	r24, 0x06	; 6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:205
    digitalWrite(CA_2, HIGH);
     faa:	b7 df       	rcall	.-146    	; 0xf1a <digitalWrite>
     fac:	61 e0       	ldi	r22, 0x01	; 1
     fae:	85 e0       	ldi	r24, 0x05	; 5
     fb0:	b4 df       	rcall	.-152    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/led.cpp:206
    digitalWrite(CA_1, HIGH);
     fb2:	61 e0       	ldi	r22, 0x01	; 1
     fb4:	84 e0       	ldi	r24, 0x04	; 4
     fb6:	b1 cf       	rjmp	.-158    	; 0xf1a <digitalWrite>

00000fb8 <UartClass::begin(unsigned long, unsigned int)>:
begin():
     fb8:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
     fba:	bf 92       	push	r11
     fbc:	cf 92       	push	r12
     fbe:	df 92       	push	r13
     fc0:	ef 92       	push	r14
     fc2:	ff 92       	push	r15
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	ec 01       	movw	r28, r24
     fce:	6a 01       	movw	r12, r20
     fd0:	7b 01       	movw	r14, r22
     fd2:	a2 2e       	mov	r10, r18
     fd4:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
     fd6:	88 23       	and	r24, r24
     fd8:	39 f0       	breq	.+14     	; 0xfe8 <UartClass::begin(unsigned long, unsigned int)+0x30>
     fda:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
     fdc:	f9 81       	ldd	r31, Y+1	; 0x01
     fde:	06 88       	ldd	r0, Z+22	; 0x16
     fe0:	f7 89       	ldd	r31, Z+23	; 0x17
     fe2:	e0 2d       	mov	r30, r0
     fe4:	ce 01       	movw	r24, r28
     fe6:	09 95       	icall
     fe8:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
     fea:	10 e0       	ldi	r17, 0x00	; 0
     fec:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
     fee:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
     ff0:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
     ff2:	70 e2       	ldi	r23, 0x20	; 32
     ff4:	81 ea       	ldi	r24, 0xA1	; 161
     ff6:	97 e0       	ldi	r25, 0x07	; 7
     ff8:	a7 01       	movw	r20, r14
     ffa:	96 01       	movw	r18, r12
     ffc:	0e 94 87 38 	call	0x710e	; 0x710e <__udivmodsi4>
    1000:	69 01       	movw	r12, r18
    1002:	7a 01       	movw	r14, r20
    1004:	8f ef       	ldi	r24, 0xFF	; 255
    1006:	c8 1a       	sub	r12, r24
    1008:	d8 0a       	sbc	r13, r24
    100a:	e8 0a       	sbc	r14, r24
    100c:	f8 0a       	sbc	r15, r24
    100e:	f6 94       	lsr	r15
    1010:	e7 94       	ror	r14
    1012:	d7 94       	ror	r13
    1014:	c7 94       	ror	r12
    1016:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    1018:	fd 85       	ldd	r31, Y+13	; 0x0d
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	8d 7f       	andi	r24, 0xFD	; 253
    101e:	86 83       	std	Z+6, r24	; 0x06
    1020:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    1022:	fd 85       	ldd	r31, Y+13	; 0x0d
    1024:	86 81       	ldd	r24, Z+6	; 0x06
    1026:	86 83       	std	Z+6, r24	; 0x06
    1028:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    102a:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    102e:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    1030:	00 0c       	add	r0, r0
    1032:	bb 0b       	sbc	r27, r27
    1034:	a7 01       	movw	r20, r14
    1036:	96 01       	movw	r18, r12
    1038:	0e 94 db 38 	call	0x71b6	; 0x71b6 <__mulshisi3>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	34 e0       	ldi	r19, 0x04	; 4
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	50 e0       	ldi	r21, 0x00	; 0
    1044:	0e 94 a9 38 	call	0x7152	; 0x7152 <__divmodsi4>
    1048:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    104a:	fd 85       	ldd	r31, Y+13	; 0x0d
    104c:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    104e:	d3 1e       	adc	r13, r19
    1050:	e4 1e       	adc	r14, r20
    1052:	f5 1e       	adc	r15, r21
    1054:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    1056:	d1 86       	std	Z+9, r13	; 0x09
    1058:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    105a:	fd 85       	ldd	r31, Y+13	; 0x0d
    105c:	a7 82       	std	Z+7, r10	; 0x07
    105e:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    1060:	fd 85       	ldd	r31, Y+13	; 0x0d
    1062:	86 81       	ldd	r24, Z+6	; 0x06
    1064:	80 6c       	ori	r24, 0xC0	; 192
    1066:	86 83       	std	Z+6, r24	; 0x06
    1068:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    106a:	fd 85       	ldd	r31, Y+13	; 0x0d
    106c:	85 81       	ldd	r24, Z+5	; 0x05
    106e:	80 68       	ori	r24, 0x80	; 128
    1070:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    1072:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1076:	8b 89       	ldd	r24, Y+19	; 0x13
    1078:	80 95       	com	r24
    107a:	89 23       	and	r24, r25
    107c:	98 01       	movw	r18, r16
    107e:	22 0f       	add	r18, r18
    1080:	33 1f       	adc	r19, r19
    1082:	02 0f       	add	r16, r18
    1084:	13 1f       	adc	r17, r19
    1086:	c0 0f       	add	r28, r16
    1088:	d1 1f       	adc	r29, r17
    108a:	98 89       	ldd	r25, Y+16	; 0x10
    108c:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    108e:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1092:	62 e0       	ldi	r22, 0x02	; 2
    1094:	8e 85       	ldd	r24, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    1096:	d4 de       	rcall	.-600    	; 0xe40 <pinMode>
    1098:	61 e0       	ldi	r22, 0x01	; 1
    109a:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    109c:	3e df       	rcall	.-388    	; 0xf1a <digitalWrite>
    109e:	61 e0       	ldi	r22, 0x01	; 1
    10a0:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    10a2:	ce de       	rcall	.-612    	; 0xe40 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    10a4:	bf be       	out	0x3f, r11	; 63
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	ff 90       	pop	r15
    10b0:	ef 90       	pop	r14
    10b2:	df 90       	pop	r13
    10b4:	cf 90       	pop	r12
    10b6:	bf 90       	pop	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Procss.cpp:1184
            break;                 
      }      
  }  
}

void Pclass :: ALL_LED_OFF()
    10b8:	af 90       	pop	r10
    10ba:	08 95       	ret

000010bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>:
digitalWrite():
    10bc:	61 e0       	ldi	r22, 0x01	; 1
    10be:	8a e1       	ldi	r24, 0x1A	; 26
    10c0:	ee de       	rcall	.-548    	; 0xe9e <digitalWrite.part.2>
    10c2:	61 e0       	ldi	r22, 0x01	; 1
    10c4:	8d e1       	ldi	r24, 0x1D	; 29
    10c6:	eb de       	rcall	.-554    	; 0xe9e <digitalWrite.part.2>
    10c8:	61 e0       	ldi	r22, 0x01	; 1
    10ca:	8c e1       	ldi	r24, 0x1C	; 28
    10cc:	e8 de       	rcall	.-560    	; 0xe9e <digitalWrite.part.2>
    10ce:	61 e0       	ldi	r22, 0x01	; 1
    10d0:	8b e1       	ldi	r24, 0x1B	; 27
    10d2:	e5 ce       	rjmp	.-566    	; 0xe9e <digitalWrite.part.2>

000010d4 <digitalRead.part.3>:
digitalRead.part.3():
    10d4:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    10d6:	1f 93       	push	r17
    10d8:	cf 93       	push	r28
    10da:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    10dc:	10 e0       	ldi	r17, 0x00	; 0
    10de:	f8 01       	movw	r30, r16
    10e0:	ed 53       	subi	r30, 0x3D	; 61
    10e2:	fd 44       	sbci	r31, 0x4D	; 77
    10e4:	c0 81       	ld	r28, Z
    10e6:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    10e8:	81 f0       	breq	.+32     	; 0x110a <digitalRead.part.3+0x36>
turnOffPWM():
    10ea:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    10ec:	08 f4       	brcc	.+2      	; 0x10f0 <digitalRead.part.3+0x1c>
    10ee:	ac de       	rcall	.-680    	; 0xe48 <turnOffPWM.part.0>
digitalRead.part.3():
    10f0:	f8 01       	movw	r30, r16
    10f2:	e6 56       	subi	r30, 0x66	; 102
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    10f4:	fd 44       	sbci	r31, 0x4D	; 77
    10f6:	e0 81       	ld	r30, Z
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	e8 9f       	mul	r30, r24
    10fc:	f0 01       	movw	r30, r0
    10fe:	11 24       	eor	r1, r1
    1100:	fc 5f       	subi	r31, 0xFC	; 252
    1102:	80 85       	ldd	r24, Z+8	; 0x08
    1104:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	09 f4       	brne	.+2      	; 0x110c <digitalRead.part.3+0x38>
    110a:	80 e0       	ldi	r24, 0x00	; 0
    110c:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    110e:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    1110:	0f 91       	pop	r16
    1112:	08 95       	ret

00001114 <micros>:
micros():
    1114:	8f b7       	in	r24, 0x3f	; 63
    1116:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    1118:	20 91 39 28 	lds	r18, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    111c:	30 91 3a 28 	lds	r19, 0x283A	; 0x80283a <timer_millis+0x1>
    1120:	40 91 3b 28 	lds	r20, 0x283B	; 0x80283b <timer_millis+0x2>
    1124:	50 91 3c 28 	lds	r21, 0x283C	; 0x80283c <timer_millis+0x3>
    1128:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    112c:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1130:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    1134:	90 ff       	sbrs	r25, 0
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <micros+0x34>
    1138:	2f 5f       	subi	r18, 0xFF	; 255
    113a:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    113c:	4f 4f       	sbci	r20, 0xFF	; 255
    113e:	5f 4f       	sbci	r21, 0xFF	; 255
    1140:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    1144:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1148:	8f bf       	out	0x3f, r24	; 63
    114a:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    114c:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    114e:	0e 94 d1 38 	call	0x71a2	; 0x71a2 <__muluhisi3>
    1152:	24 e0       	ldi	r18, 0x04	; 4
    1154:	f6 95       	lsr	r31
    1156:	e7 95       	ror	r30
    1158:	2a 95       	dec	r18
    115a:	e1 f7       	brne	.-8      	; 0x1154 <micros+0x40>
    115c:	6e 0f       	add	r22, r30
    115e:	7f 1f       	adc	r23, r31
    1160:	81 1d       	adc	r24, r1
    1162:	91 1d       	adc	r25, r1
    1164:	08 95       	ret

00001166 <millis>:
millis():
    1166:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    1168:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    116a:	60 91 39 28 	lds	r22, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    116e:	70 91 3a 28 	lds	r23, 0x283A	; 0x80283a <timer_millis+0x1>
    1172:	80 91 3b 28 	lds	r24, 0x283B	; 0x80283b <timer_millis+0x2>
    1176:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <timer_millis+0x3>
    117a:	2f bf       	out	0x3f, r18	; 63
    117c:	08 95       	ret

0000117e <Lclass::PID_callingg() [clone .constprop.43]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    117e:	4f 92       	push	r4
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    1180:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:34
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    1182:	6f 92       	push	r6
    1184:	7f 92       	push	r7
    1186:	8f 92       	push	r8
    1188:	9f 92       	push	r9
    118a:	af 92       	push	r10
    118c:	bf 92       	push	r11
    118e:	cf 92       	push	r12
    1190:	df 92       	push	r13
    1192:	ef 92       	push	r14
    1194:	ff 92       	push	r15
    1196:	1f 93       	push	r17
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:36
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    11a0:	81 11       	cpse	r24, r1
    11a2:	26 c1       	rjmp	.+588    	; 0x13f0 <Lclass::PID_callingg() [clone .constprop.43]+0x272>
    11a4:	80 91 ff 28 	lds	r24, 0x28FF	; 0x8028ff <TEMP_DEG>
    11a8:	90 91 00 29 	lds	r25, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    11ac:	a0 91 01 29 	lds	r26, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    11b0:	b0 91 02 29 	lds	r27, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    11b4:	80 93 6f 2a 	sts	0x2A6F, r24	; 0x802a6f <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:37
  else               PID_INPUT = TEMP_DEG_RAW;
    11b8:	90 93 70 2a 	sts	0x2A70, r25	; 0x802a70 <PID_INPUT+0x1>
    11bc:	a0 93 71 2a 	sts	0x2A71, r26	; 0x802a71 <PID_INPUT+0x2>
    11c0:	b0 93 72 2a 	sts	0x2A72, r27	; 0x802a72 <PID_INPUT+0x3>
    11c4:	11 e0       	ldi	r17, 0x01	; 1
    11c6:	80 91 8d 2a 	lds	r24, 0x2A8D	; 0x802a8d <myPID+0x1a>
    11ca:	90 91 8e 2a 	lds	r25, 0x2A8E	; 0x802a8e <myPID+0x1b>
    11ce:	01 97       	sbiw	r24, 0x01	; 1
    11d0:	09 f0       	breq	.+2      	; 0x11d4 <Lclass::PID_callingg() [clone .constprop.43]+0x56>
    11d2:	10 e0       	ldi	r17, 0x00	; 0
    11d4:	60 91 a1 2a 	lds	r22, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    11d8:	70 91 a2 2a 	lds	r23, 0x2AA2	; 0x802aa2 <myPID+0x2f>
    11dc:	80 91 a3 2a 	lds	r24, 0x2AA3	; 0x802aa3 <myPID+0x30>
    11e0:	90 91 a4 2a 	lds	r25, 0x2AA4	; 0x802aa4 <myPID+0x31>
    11e4:	0e 94 5b 37 	call	0x6eb6	; 0x6eb6 <__floatunsisf>
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	4a e7       	ldi	r20, 0x7A	; 122
    11ee:	54 e4       	ldi	r21, 0x44	; 68
    11f0:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    11f4:	4b 01       	movw	r8, r22
    11f6:	5c 01       	movw	r10, r24
    11f8:	2a e0       	ldi	r18, 0x0A	; 10
    11fa:	37 ed       	ldi	r19, 0xD7	; 215
    11fc:	43 e2       	ldi	r20, 0x23	; 35
    11fe:	5c e3       	ldi	r21, 0x3C	; 60
    1200:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1204:	6b 01       	movw	r12, r22
    1206:	7c 01       	movw	r14, r24
    1208:	c0 91 8b 2a 	lds	r28, 0x2A8B	; 0x802a8b <myPID+0x18>
    120c:	d0 91 8c 2a 	lds	r29, 0x2A8C	; 0x802a8c <myPID+0x19>
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:40


if(PID_SETPOINT < 51)
    1214:	4c e4       	ldi	r20, 0x4C	; 76
    1216:	52 e4       	ldi	r21, 0x42	; 66
    1218:	60 91 67 2a 	lds	r22, 0x2A67	; 0x802a67 <PID_SETPOINT>
    121c:	70 91 68 2a 	lds	r23, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    1220:	80 91 69 2a 	lds	r24, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    1224:	90 91 6a 2a 	lds	r25, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    1228:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    122c:	87 ff       	sbrs	r24, 7
    122e:	e9 c0       	rjmp	.+466    	; 0x1402 <Lclass::PID_callingg() [clone .constprop.43]+0x284>
    1230:	80 e0       	ldi	r24, 0x00	; 0
    1232:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:42
  {
    Kp= 25; Ki=0.010; Kd=700;  //Ring Heater <51 
    1234:	a8 ec       	ldi	r26, 0xC8	; 200
    1236:	b1 e4       	ldi	r27, 0x41	; 65
    1238:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    123c:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1240:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1244:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    1248:	3a e0       	ldi	r19, 0x0A	; 10
    124a:	43 2e       	mov	r4, r19
    124c:	37 ed       	ldi	r19, 0xD7	; 215
    124e:	53 2e       	mov	r5, r19
    1250:	33 e2       	ldi	r19, 0x23	; 35
    1252:	63 2e       	mov	r6, r19
    1254:	3c e3       	ldi	r19, 0x3C	; 60
    1256:	73 2e       	mov	r7, r19
    1258:	40 92 0f 28 	sts	0x280F, r4	; 0x80280f <Ki>
    125c:	50 92 10 28 	sts	0x2810, r5	; 0x802810 <Ki+0x1>
    1260:	60 92 11 28 	sts	0x2811, r6	; 0x802811 <Ki+0x2>
    1264:	70 92 12 28 	sts	0x2812, r7	; 0x802812 <Ki+0x3>
    1268:	40 e0       	ldi	r20, 0x00	; 0
    126a:	50 e0       	ldi	r21, 0x00	; 0
    126c:	6f e2       	ldi	r22, 0x2F	; 47
    126e:	74 e4       	ldi	r23, 0x44	; 68
    1270:	40 93 13 28 	sts	0x2813, r20	; 0x802813 <Kd>
    1274:	50 93 14 28 	sts	0x2814, r21	; 0x802814 <Kd+0x1>
    1278:	60 93 15 28 	sts	0x2815, r22	; 0x802815 <Kd+0x2>
    127c:	70 93 16 28 	sts	0x2816, r23	; 0x802816 <Kd+0x3>
SetTunings():
    1280:	10 93 ae 2a 	sts	0x2AAE, r17	; 0x802aae <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;

   pOn = POn;
   pOnE = POn == P_ON_E;
    1284:	80 93 73 2a 	sts	0x2A73, r24	; 0x802a73 <myPID>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
    1288:	90 93 74 2a 	sts	0x2A74, r25	; 0x802a74 <myPID+0x1>
    128c:	a0 93 75 2a 	sts	0x2A75, r26	; 0x802a75 <myPID+0x2>
    1290:	b0 93 76 2a 	sts	0x2A76, r27	; 0x802a76 <myPID+0x3>
    1294:	40 92 77 2a 	sts	0x2A77, r4	; 0x802a77 <myPID+0x4>
    1298:	50 92 78 2a 	sts	0x2A78, r5	; 0x802a78 <myPID+0x5>
    129c:	60 92 79 2a 	sts	0x2A79, r6	; 0x802a79 <myPID+0x6>
    12a0:	70 92 7a 2a 	sts	0x2A7A, r7	; 0x802a7a <myPID+0x7>
    12a4:	40 93 7b 2a 	sts	0x2A7B, r20	; 0x802a7b <myPID+0x8>
    12a8:	50 93 7c 2a 	sts	0x2A7C, r21	; 0x802a7c <myPID+0x9>
    12ac:	60 93 7d 2a 	sts	0x2A7D, r22	; 0x802a7d <myPID+0xa>
    12b0:	70 93 7e 2a 	sts	0x2A7E, r23	; 0x802a7e <myPID+0xb>
    12b4:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112

   double SampleTimeInSec = ((double)SampleTime)/1000;
   kp = Kp;
    12b8:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    12bc:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    12c0:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    12c4:	c0 92 83 2a 	sts	0x2A83, r12	; 0x802a83 <myPID+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
    12c8:	d0 92 84 2a 	sts	0x2A84, r13	; 0x802a84 <myPID+0x11>
    12cc:	e0 92 85 2a 	sts	0x2A85, r14	; 0x802a85 <myPID+0x12>
    12d0:	f0 92 86 2a 	sts	0x2A86, r15	; 0x802a86 <myPID+0x13>
    12d4:	a5 01       	movw	r20, r10
    12d6:	94 01       	movw	r18, r8
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
    12d8:	60 e0       	ldi	r22, 0x00	; 0
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	8f e2       	ldi	r24, 0x2F	; 47
    12de:	94 e4       	ldi	r25, 0x44	; 68
    12e0:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    12e4:	4b 01       	movw	r8, r22
    12e6:	5c 01       	movw	r10, r24
    12e8:	80 92 87 2a 	sts	0x2A87, r8	; 0x802a87 <myPID+0x14>
    12ec:	90 92 88 2a 	sts	0x2A88, r9	; 0x802a88 <myPID+0x15>
    12f0:	a0 92 89 2a 	sts	0x2A89, r10	; 0x802a89 <myPID+0x16>
    12f4:	b0 92 8a 2a 	sts	0x2A8A, r11	; 0x802a8a <myPID+0x17>
    12f8:	21 97       	sbiw	r28, 0x01	; 1
    12fa:	51 f5       	brne	.+84     	; 0x1350 <Lclass::PID_callingg() [clone .constprop.43]+0x1d2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
    1300:	a8 ec       	ldi	r26, 0xC8	; 200
    1302:	b1 ec       	ldi	r27, 0xC1	; 193
    1304:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
    1308:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    130c:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    1310:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    1314:	a7 01       	movw	r20, r14
    1316:	96 01       	movw	r18, r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	cb 01       	movw	r24, r22
    131e:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1322:	60 93 83 2a 	sts	0x2A83, r22	; 0x802a83 <myPID+0x10>
    1326:	70 93 84 2a 	sts	0x2A84, r23	; 0x802a84 <myPID+0x11>
    132a:	80 93 85 2a 	sts	0x2A85, r24	; 0x802a85 <myPID+0x12>
    132e:	90 93 86 2a 	sts	0x2A86, r25	; 0x802a86 <myPID+0x13>
    1332:	a5 01       	movw	r20, r10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
    1334:	94 01       	movw	r18, r8
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	cb 01       	movw	r24, r22
    133c:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1340:	60 93 87 2a 	sts	0x2A87, r22	; 0x802a87 <myPID+0x14>
    1344:	70 93 88 2a 	sts	0x2A88, r23	; 0x802a88 <myPID+0x15>
    1348:	80 93 89 2a 	sts	0x2A89, r24	; 0x802a89 <myPID+0x16>
    134c:	90 93 8a 2a 	sts	0x2A8A, r25	; 0x802a8a <myPID+0x17>
PID_callingg():
    1350:	0a df       	rcall	.-492    	; 0x1166 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:51
  {
    Kp= 25; Ki=0.010; Kd=650;  //Ring Heater >51    
    myPID.SetTunings(Kp, Ki, Kd);        
  }   
  
  if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1352:	c0 90 f7 28 	lds	r12, 0x28F7	; 0x8028f7 <WINDOW_START_TIME>
    1356:	d0 90 f8 28 	lds	r13, 0x28F8	; 0x8028f8 <WINDOW_START_TIME+0x1>
    135a:	e0 90 f9 28 	lds	r14, 0x28F9	; 0x8028f9 <WINDOW_START_TIME+0x2>
    135e:	f0 90 fa 28 	lds	r15, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x3>
    1362:	ab 01       	movw	r20, r22
    1364:	bc 01       	movw	r22, r24
    1366:	4c 19       	sub	r20, r12
    1368:	5d 09       	sbc	r21, r13
    136a:	6e 09       	sbc	r22, r14
    136c:	7f 09       	sbc	r23, r15
    136e:	49 3e       	cpi	r20, 0xE9	; 233
    1370:	53 40       	sbci	r21, 0x03	; 3
    1372:	61 05       	cpc	r22, r1
    1374:	71 05       	cpc	r23, r1
    1376:	70 f0       	brcs	.+28     	; 0x1394 <Lclass::PID_callingg() [clone .constprop.43]+0x216>
    1378:	d7 01       	movw	r26, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:52
                 WINDOW_START_TIME += WINDOW_SIZE;
    137a:	c6 01       	movw	r24, r12
    137c:	88 51       	subi	r24, 0x18	; 24
    137e:	9c 4f       	sbci	r25, 0xFC	; 252
    1380:	af 4f       	sbci	r26, 0xFF	; 255
    1382:	bf 4f       	sbci	r27, 0xFF	; 255
    1384:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <WINDOW_START_TIME>
    1388:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <WINDOW_START_TIME+0x1>
    138c:	a0 93 f9 28 	sts	0x28F9, r26	; 0x8028f9 <WINDOW_START_TIME+0x2>
    1390:	b0 93 fa 28 	sts	0x28FA, r27	; 0x8028fa <WINDOW_START_TIME+0x3>
    1394:	e8 de       	rcall	.-560    	; 0x1166 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:56

//  /*        
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    //Check SSR Fail (Heater Pin HIGH) only validation
    1396:	c0 90 f7 28 	lds	r12, 0x28F7	; 0x8028f7 <WINDOW_START_TIME>
    139a:	d0 90 f8 28 	lds	r13, 0x28F8	; 0x8028f8 <WINDOW_START_TIME+0x1>
    139e:	e0 90 f9 28 	lds	r14, 0x28F9	; 0x8028f9 <WINDOW_START_TIME+0x2>
    13a2:	f0 90 fa 28 	lds	r15, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x3>
    13a6:	6c 19       	sub	r22, r12
    13a8:	7d 09       	sbc	r23, r13
    13aa:	8e 09       	sbc	r24, r14
    13ac:	9f 09       	sbc	r25, r15
    13ae:	0e 94 5b 37 	call	0x6eb6	; 0x6eb6 <__floatunsisf>
    13b2:	20 91 6b 2a 	lds	r18, 0x2A6B	; 0x802a6b <PID_OUTPUT>
    13b6:	30 91 6c 2a 	lds	r19, 0x2A6C	; 0x802a6c <PID_OUTPUT+0x1>
    13ba:	40 91 6d 2a 	lds	r20, 0x2A6D	; 0x802a6d <PID_OUTPUT+0x2>
    13be:	50 91 6e 2a 	lds	r21, 0x2A6E	; 0x802a6e <PID_OUTPUT+0x3>
    13c2:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    13c6:	18 16       	cp	r1, r24
    13c8:	0c f0       	brlt	.+2      	; 0x13cc <Lclass::PID_callingg() [clone .constprop.43]+0x24e>
    13ca:	74 c0       	rjmp	.+232    	; 0x14b4 <Lclass::PID_callingg() [clone .constprop.43]+0x336>
digitalWrite():
    13cc:	60 e0       	ldi	r22, 0x00	; 0
    13ce:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
    13d0:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:64
    if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    //Check SSR Fail (Heater Pin HIGH) only validation
    else                                                 digitalWrite(HEATER, HIGH);
  }
//  */
//  digitalWrite(HEATER, HIGH);
}
    13d2:	cf 91       	pop	r28
    13d4:	1f 91       	pop	r17
    13d6:	ff 90       	pop	r15
    13d8:	ef 90       	pop	r14
    13da:	df 90       	pop	r13
    13dc:	cf 90       	pop	r12
    13de:	bf 90       	pop	r11
    13e0:	af 90       	pop	r10
    13e2:	9f 90       	pop	r9
    13e4:	8f 90       	pop	r8
    13e6:	7f 90       	pop	r7
    13e8:	6f 90       	pop	r6
    13ea:	5f 90       	pop	r5
    13ec:	4f 90       	pop	r4
digitalWrite():
    13ee:	57 cd       	rjmp	.-1362   	; 0xe9e <digitalWrite.part.2>
PID_callingg():
    13f0:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:37
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    13f4:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    13f8:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    13fc:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    1400:	d9 ce       	rjmp	.-590    	; 0x11b4 <Lclass::PID_callingg() [clone .constprop.43]+0x36>
    1402:	80 e0       	ldi	r24, 0x00	; 0
    1404:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:47
    Kp= 25; Ki=0.010; Kd=700;  //Ring Heater <51 
    myPID.SetTunings(Kp, Ki, Kd);    
  }
  else
  {
    Kp= 25; Ki=0.010; Kd=650;  //Ring Heater >51    
    1406:	a8 ec       	ldi	r26, 0xC8	; 200
    1408:	b1 e4       	ldi	r27, 0x41	; 65
    140a:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    140e:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1412:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1416:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    141a:	2a e0       	ldi	r18, 0x0A	; 10
    141c:	42 2e       	mov	r4, r18
    141e:	27 ed       	ldi	r18, 0xD7	; 215
    1420:	52 2e       	mov	r5, r18
    1422:	23 e2       	ldi	r18, 0x23	; 35
    1424:	62 2e       	mov	r6, r18
    1426:	2c e3       	ldi	r18, 0x3C	; 60
    1428:	72 2e       	mov	r7, r18
    142a:	40 92 0f 28 	sts	0x280F, r4	; 0x80280f <Ki>
    142e:	50 92 10 28 	sts	0x2810, r5	; 0x802810 <Ki+0x1>
    1432:	60 92 11 28 	sts	0x2811, r6	; 0x802811 <Ki+0x2>
    1436:	70 92 12 28 	sts	0x2812, r7	; 0x802812 <Ki+0x3>
    143a:	40 e0       	ldi	r20, 0x00	; 0
    143c:	50 e8       	ldi	r21, 0x80	; 128
    143e:	62 e2       	ldi	r22, 0x22	; 34
    1440:	74 e4       	ldi	r23, 0x44	; 68
    1442:	40 93 13 28 	sts	0x2813, r20	; 0x802813 <Kd>
    1446:	50 93 14 28 	sts	0x2814, r21	; 0x802814 <Kd+0x1>
    144a:	60 93 15 28 	sts	0x2815, r22	; 0x802815 <Kd+0x2>
    144e:	70 93 16 28 	sts	0x2816, r23	; 0x802816 <Kd+0x3>
SetTunings():
    1452:	10 93 ae 2a 	sts	0x2AAE, r17	; 0x802aae <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;

   pOn = POn;
   pOnE = POn == P_ON_E;
    1456:	80 93 73 2a 	sts	0x2A73, r24	; 0x802a73 <myPID>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
    145a:	90 93 74 2a 	sts	0x2A74, r25	; 0x802a74 <myPID+0x1>
    145e:	a0 93 75 2a 	sts	0x2A75, r26	; 0x802a75 <myPID+0x2>
    1462:	b0 93 76 2a 	sts	0x2A76, r27	; 0x802a76 <myPID+0x3>
    1466:	40 92 77 2a 	sts	0x2A77, r4	; 0x802a77 <myPID+0x4>
    146a:	50 92 78 2a 	sts	0x2A78, r5	; 0x802a78 <myPID+0x5>
    146e:	60 92 79 2a 	sts	0x2A79, r6	; 0x802a79 <myPID+0x6>
    1472:	70 92 7a 2a 	sts	0x2A7A, r7	; 0x802a7a <myPID+0x7>
    1476:	40 93 7b 2a 	sts	0x2A7B, r20	; 0x802a7b <myPID+0x8>
    147a:	50 93 7c 2a 	sts	0x2A7C, r21	; 0x802a7c <myPID+0x9>
    147e:	60 93 7d 2a 	sts	0x2A7D, r22	; 0x802a7d <myPID+0xa>
    1482:	70 93 7e 2a 	sts	0x2A7E, r23	; 0x802a7e <myPID+0xb>
    1486:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112

   double SampleTimeInSec = ((double)SampleTime)/1000;
   kp = Kp;
    148a:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    148e:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    1492:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    1496:	c0 92 83 2a 	sts	0x2A83, r12	; 0x802a83 <myPID+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
    149a:	d0 92 84 2a 	sts	0x2A84, r13	; 0x802a84 <myPID+0x11>
    149e:	e0 92 85 2a 	sts	0x2A85, r14	; 0x802a85 <myPID+0x12>
    14a2:	f0 92 86 2a 	sts	0x2A86, r15	; 0x802a86 <myPID+0x13>
    14a6:	a5 01       	movw	r20, r10
    14a8:	94 01       	movw	r18, r8
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
    14aa:	60 e0       	ldi	r22, 0x00	; 0
    14ac:	70 e8       	ldi	r23, 0x80	; 128
    14ae:	82 e2       	ldi	r24, 0x22	; 34
    14b0:	94 e4       	ldi	r25, 0x44	; 68
    14b2:	16 cf       	rjmp	.-468    	; 0x12e0 <Lclass::PID_callingg() [clone .constprop.43]+0x162>
PID_callingg():
    14b4:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:59
//  /*        
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    //Check SSR Fail (Heater Pin HIGH) only validation
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    //Check SSR Fail (Heater Pin HIGH) only validation
    14b8:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    14bc:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    14c0:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    14c4:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    14c8:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    14cc:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    14d0:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    14d4:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    14d8:	87 ff       	sbrs	r24, 7
    14da:	78 cf       	rjmp	.-272    	; 0x13cc <Lclass::PID_callingg() [clone .constprop.43]+0x24e>
digitalWrite():
    14dc:	61 e0       	ldi	r22, 0x01	; 1
    14de:	77 cf       	rjmp	.-274    	; 0x13ce <Lclass::PID_callingg() [clone .constprop.43]+0x250>

000014e0 <Ticker::update()>:
update():
    14e0:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    14e2:	1f 93       	push	r17
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    14e8:	fc 01       	movw	r30, r24
    14ea:	20 81       	ld	r18, Z
    14ec:	22 23       	and	r18, r18
    14ee:	09 f4       	brne	.+2      	; 0x14f2 <Ticker::update()+0x12>
    14f0:	50 c0       	rjmp	.+160    	; 0x1592 <Ticker::update()+0xb2>
    14f2:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    14f4:	81 85       	ldd	r24, Z+9	; 0x09
    14f6:	92 85       	ldd	r25, Z+10	; 0x0a
    14f8:	01 97       	sbiw	r24, 0x01	; 1
    14fa:	b9 f5       	brne	.+110    	; 0x156a <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    14fc:	34 de       	rcall	.-920    	; 0x1166 <millis>
    14fe:	0b 89       	ldd	r16, Y+19	; 0x13
    1500:	1c 89       	ldd	r17, Y+20	; 0x14
    1502:	2d 89       	ldd	r18, Y+21	; 0x15
    1504:	3e 89       	ldd	r19, Y+22	; 0x16
    1506:	60 1b       	sub	r22, r16
    1508:	71 0b       	sbc	r23, r17
    150a:	82 0b       	sbc	r24, r18
    150c:	93 0b       	sbc	r25, r19
    150e:	09 81       	ldd	r16, Y+1	; 0x01
    1510:	1a 81       	ldd	r17, Y+2	; 0x02
    1512:	2b 81       	ldd	r18, Y+3	; 0x03
    1514:	3c 81       	ldd	r19, Y+4	; 0x04
    1516:	60 17       	cp	r22, r16
    1518:	71 07       	cpc	r23, r17
    151a:	82 07       	cpc	r24, r18
    151c:	93 07       	cpc	r25, r19
    151e:	c8 f1       	brcs	.+114    	; 0x1592 <Ticker::update()+0xb2>
    1520:	22 de       	rcall	.-956    	; 0x1166 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    1522:	6b 8b       	std	Y+19, r22	; 0x13
    1524:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    1526:	8d 8b       	std	Y+21, r24	; 0x15
    1528:	9e 8b       	std	Y+22, r25	; 0x16
    152a:	8b 85       	ldd	r24, Y+11	; 0x0b
    152c:	9c 85       	ldd	r25, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    152e:	ad 85       	ldd	r26, Y+13	; 0x0d
    1530:	be 85       	ldd	r27, Y+14	; 0x0e
    1532:	4d 81       	ldd	r20, Y+5	; 0x05
    1534:	5e 81       	ldd	r21, Y+6	; 0x06
    1536:	6f 81       	ldd	r22, Y+7	; 0x07
    1538:	78 85       	ldd	r23, Y+8	; 0x08
    153a:	48 1b       	sub	r20, r24
    153c:	59 0b       	sbc	r21, r25
    153e:	6a 0b       	sbc	r22, r26
    1540:	7b 0b       	sbc	r23, r27
    1542:	41 30       	cpi	r20, 0x01	; 1
    1544:	51 05       	cpc	r21, r1
    1546:	61 05       	cpc	r22, r1
    1548:	71 05       	cpc	r23, r1
    154a:	09 f4       	brne	.+2      	; 0x154e <Ticker::update()+0x6e>
    154c:	18 82       	st	Y, r1
    154e:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    1550:	a1 1d       	adc	r26, r1
    1552:	b1 1d       	adc	r27, r1
    1554:	8b 87       	std	Y+11, r24	; 0x0b
    1556:	9c 87       	std	Y+12, r25	; 0x0c
    1558:	ad 87       	std	Y+13, r26	; 0x0d
    155a:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    155c:	e9 89       	ldd	r30, Y+17	; 0x11
    155e:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    1560:	df 91       	pop	r29
    1562:	cf 91       	pop	r28
    1564:	1f 91       	pop	r17
    1566:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1568:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    156a:	d4 dd       	rcall	.-1112   	; 0x1114 <micros>
    156c:	0b 89       	ldd	r16, Y+19	; 0x13
    156e:	1c 89       	ldd	r17, Y+20	; 0x14
    1570:	2d 89       	ldd	r18, Y+21	; 0x15
    1572:	3e 89       	ldd	r19, Y+22	; 0x16
    1574:	60 1b       	sub	r22, r16
    1576:	71 0b       	sbc	r23, r17
    1578:	82 0b       	sbc	r24, r18
    157a:	93 0b       	sbc	r25, r19
    157c:	09 81       	ldd	r16, Y+1	; 0x01
    157e:	1a 81       	ldd	r17, Y+2	; 0x02
    1580:	2b 81       	ldd	r18, Y+3	; 0x03
    1582:	3c 81       	ldd	r19, Y+4	; 0x04
    1584:	60 17       	cp	r22, r16
    1586:	71 07       	cpc	r23, r17
    1588:	82 07       	cpc	r24, r18
    158a:	93 07       	cpc	r25, r19
    158c:	10 f0       	brcs	.+4      	; 0x1592 <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    158e:	c2 dd       	rcall	.-1148   	; 0x1114 <micros>
    1590:	c8 cf       	rjmp	.-112    	; 0x1522 <Ticker::update()+0x42>
update():
    1592:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    1594:	cf 91       	pop	r28
    1596:	1f 91       	pop	r17
    1598:	0f 91       	pop	r16
    159a:	08 95       	ret

0000159c <Ticker::start()>:
start():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    15a0:	fc 01       	movw	r30, r24
    15a2:	21 89       	ldd	r18, Z+17	; 0x11
    15a4:	32 89       	ldd	r19, Z+18	; 0x12
    15a6:	23 2b       	or	r18, r19
    15a8:	a1 f0       	breq	.+40     	; 0x15d2 <Ticker::start()+0x36>
    15aa:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    15ac:	81 85       	ldd	r24, Z+9	; 0x09
    15ae:	92 85       	ldd	r25, Z+10	; 0x0a
    15b0:	01 97       	sbiw	r24, 0x01	; 1
    15b2:	91 f4       	brne	.+36     	; 0x15d8 <Ticker::start()+0x3c>
    15b4:	d8 dd       	rcall	.-1104   	; 0x1166 <millis>
    15b6:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    15b8:	7c 8b       	std	Y+20, r23	; 0x14
    15ba:	8d 8b       	std	Y+21, r24	; 0x15
    15bc:	9e 8b       	std	Y+22, r25	; 0x16
    15be:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    15c0:	88 83       	st	Y, r24
    15c2:	1b 86       	std	Y+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    15c4:	1c 86       	std	Y+12, r1	; 0x0c
    15c6:	1d 86       	std	Y+13, r1	; 0x0d
    15c8:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	8f 87       	std	Y+15, r24	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    15d0:	98 8b       	std	Y+16, r25	; 0x10
    15d2:	df 91       	pop	r29
    15d4:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    15d6:	08 95       	ret
    15d8:	9d dd       	rcall	.-1222   	; 0x1114 <micros>
    15da:	ed cf       	rjmp	.-38     	; 0x15b6 <Ticker::start()+0x1a>

000015dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>:
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:60
{
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
    15dc:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:62
{
  BUZZ.interval(i);
    15de:	bc 01       	movw	r22, r24
    15e0:	99 0f       	add	r25, r25
    15e2:	88 0b       	sbc	r24, r24
    15e4:	99 0b       	sbc	r25, r25
interval():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    15e6:	20 91 90 2b 	lds	r18, 0x2B90	; 0x802b90 <BUZZ+0x9>
    15ea:	30 91 91 2b 	lds	r19, 0x2B91	; 0x802b91 <BUZZ+0xa>
    15ee:	23 2b       	or	r18, r19
    15f0:	21 f4       	brne	.+8      	; 0x15fa <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]+0x1e>
    15f2:	28 ee       	ldi	r18, 0xE8	; 232
    15f4:	33 e0       	ldi	r19, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    15f6:	0e 94 cb 38 	call	0x7196	; 0x7196 <__usmulhisi3>
    15fa:	60 93 88 2b 	sts	0x2B88, r22	; 0x802b88 <BUZZ+0x1>
    15fe:	70 93 89 2b 	sts	0x2B89, r23	; 0x802b89 <BUZZ+0x2>
    1602:	80 93 8a 2b 	sts	0x2B8A, r24	; 0x802b8a <BUZZ+0x3>
    1606:	90 93 8b 2b 	sts	0x2B8B, r25	; 0x802b8b <BUZZ+0x4>
digitalWrite():
    160a:	61 e0       	ldi	r22, 0x01	; 1
    160c:	85 e1       	ldi	r24, 0x15	; 21
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    160e:	47 dc       	rcall	.-1906   	; 0xe9e <digitalWrite.part.2>
BUZZ_INTERVAL():
    1610:	87 e8       	ldi	r24, 0x87	; 135
    1612:	9b e2       	ldi	r25, 0x2B	; 43
    1614:	c3 cf       	rjmp	.-122    	; 0x159c <Ticker::start()>

00001616 <OneButton::tick()>:
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    1616:	cf 92       	push	r12
    1618:	df 92       	push	r13
    161a:	ef 92       	push	r14
    161c:	ff 92       	push	r15
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	cf 93       	push	r28
    1624:	df 93       	push	r29
    1626:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    1628:	88 81       	ld	r24, Y
digitalRead():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    162a:	89 32       	cpi	r24, 0x29	; 41
    162c:	f8 f4       	brcc	.+62     	; 0x166c <OneButton::tick()+0x56>
    162e:	52 dd       	rcall	.-1372   	; 0x10d4 <digitalRead.part.3>
tick():
    1630:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    1632:	10 e0       	ldi	r17, 0x00	; 0
    1634:	98 dd       	rcall	.-1232   	; 0x1166 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    1636:	29 8d       	ldd	r18, Y+25	; 0x19
    1638:	3a 8d       	ldd	r19, Y+26	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    163a:	21 15       	cp	r18, r1
    163c:	31 05       	cpc	r19, r1
    163e:	c1 f4       	brne	.+48     	; 0x1670 <OneButton::tick()+0x5a>
    1640:	2a 85       	ldd	r18, Y+10	; 0x0a
    1642:	3b 85       	ldd	r19, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    1644:	20 17       	cp	r18, r16
    1646:	31 07       	cpc	r19, r17
    1648:	41 f4       	brne	.+16     	; 0x165a <OneButton::tick()+0x44>
    164a:	21 e0       	ldi	r18, 0x01	; 1
    164c:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    164e:	29 8f       	std	Y+25, r18	; 0x19
    1650:	3a 8f       	std	Y+26, r19	; 0x1a
    1652:	6b 8f       	std	Y+27, r22	; 0x1b
    1654:	7c 8f       	std	Y+28, r23	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    1656:	8d 8f       	std	Y+29, r24	; 0x1d
    1658:	9e 8f       	std	Y+30, r25	; 0x1e
    165a:	df 91       	pop	r29
    165c:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    165e:	1f 91       	pop	r17
    1660:	0f 91       	pop	r16
    1662:	ff 90       	pop	r15
    1664:	ef 90       	pop	r14
    1666:	df 90       	pop	r13
    1668:	cf 90       	pop	r12
    166a:	08 95       	ret
    166c:	80 e0       	ldi	r24, 0x00	; 0
    166e:	e0 cf       	rjmp	.-64     	; 0x1630 <OneButton::tick()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    1670:	21 30       	cpi	r18, 0x01	; 1
    1672:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    1674:	09 f0       	breq	.+2      	; 0x1678 <OneButton::tick()+0x62>
    1676:	51 c0       	rjmp	.+162    	; 0x171a <OneButton::tick()+0x104>
    1678:	28 85       	ldd	r18, Y+8	; 0x08
    167a:	39 85       	ldd	r19, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    167c:	20 17       	cp	r18, r16
    167e:	31 07       	cpc	r19, r17
    1680:	e9 f4       	brne	.+58     	; 0x16bc <OneButton::tick()+0xa6>
    1682:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1684:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1686:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1688:	3e 8d       	ldd	r19, Y+30	; 0x1e
    168a:	ab 01       	movw	r20, r22
    168c:	bc 01       	movw	r22, r24
    168e:	40 1b       	sub	r20, r16
    1690:	51 0b       	sbc	r21, r17
    1692:	62 0b       	sbc	r22, r18
    1694:	73 0b       	sbc	r23, r19
    1696:	8e 81       	ldd	r24, Y+6	; 0x06
    1698:	9f 81       	ldd	r25, Y+7	; 0x07
    169a:	09 2e       	mov	r0, r25
    169c:	00 0c       	add	r0, r0
    169e:	aa 0b       	sbc	r26, r26
    16a0:	bb 0b       	sbc	r27, r27
    16a2:	48 17       	cp	r20, r24
    16a4:	59 07       	cpc	r21, r25
    16a6:	6a 07       	cpc	r22, r26
    16a8:	7b 07       	cpc	r23, r27
    16aa:	18 f4       	brcc	.+6      	; 0x16b2 <OneButton::tick()+0x9c>
    16ac:	19 8e       	std	Y+25, r1	; 0x19
    16ae:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    16b0:	d4 cf       	rjmp	.-88     	; 0x165a <OneButton::tick()+0x44>
    16b2:	82 e0       	ldi	r24, 0x02	; 2
    16b4:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    16b6:	89 8f       	std	Y+25, r24	; 0x19
    16b8:	9a 8f       	std	Y+26, r25	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    16ba:	cf cf       	rjmp	.-98     	; 0x165a <OneButton::tick()+0x44>
    16bc:	2a 85       	ldd	r18, Y+10	; 0x0a
    16be:	3b 85       	ldd	r19, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    16c0:	20 17       	cp	r18, r16
    16c2:	31 07       	cpc	r19, r17
    16c4:	51 f6       	brne	.-108    	; 0x165a <OneButton::tick()+0x44>
    16c6:	0b 8d       	ldd	r16, Y+27	; 0x1b
    16c8:	1c 8d       	ldd	r17, Y+28	; 0x1c
    16ca:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16cc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16ce:	ab 01       	movw	r20, r22
    16d0:	bc 01       	movw	r22, r24
    16d2:	40 1b       	sub	r20, r16
    16d4:	51 0b       	sbc	r21, r17
    16d6:	62 0b       	sbc	r22, r18
    16d8:	73 0b       	sbc	r23, r19
    16da:	8c 81       	ldd	r24, Y+4	; 0x04
    16dc:	9d 81       	ldd	r25, Y+5	; 0x05
    16de:	09 2e       	mov	r0, r25
    16e0:	00 0c       	add	r0, r0
    16e2:	aa 0b       	sbc	r26, r26
    16e4:	bb 0b       	sbc	r27, r27
    16e6:	84 17       	cp	r24, r20
    16e8:	95 07       	cpc	r25, r21
    16ea:	a6 07       	cpc	r26, r22
    16ec:	b7 07       	cpc	r27, r23
    16ee:	08 f0       	brcs	.+2      	; 0x16f2 <OneButton::tick()+0xdc>
    16f0:	b4 cf       	rjmp	.-152    	; 0x165a <OneButton::tick()+0x44>
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	8c 87       	std	Y+12, r24	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    16f6:	e9 89       	ldd	r30, Y+17	; 0x11
    16f8:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    16fa:	30 97       	sbiw	r30, 0x00	; 0
    16fc:	09 f0       	breq	.+2      	; 0x1700 <OneButton::tick()+0xea>
    16fe:	09 95       	icall
    1700:	eb 89       	ldd	r30, Y+19	; 0x13
    1702:	fc 89       	ldd	r31, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    1704:	30 97       	sbiw	r30, 0x00	; 0
    1706:	09 f0       	breq	.+2      	; 0x170a <OneButton::tick()+0xf4>
    1708:	09 95       	icall
    170a:	ef 89       	ldd	r30, Y+23	; 0x17
    170c:	f8 8d       	ldd	r31, Y+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    170e:	30 97       	sbiw	r30, 0x00	; 0
    1710:	09 f0       	breq	.+2      	; 0x1714 <OneButton::tick()+0xfe>
    1712:	09 95       	icall
    1714:	86 e0       	ldi	r24, 0x06	; 6
    1716:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    1718:	ce cf       	rjmp	.-100    	; 0x16b6 <OneButton::tick()+0xa0>
    171a:	22 30       	cpi	r18, 0x02	; 2
    171c:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    171e:	19 f5       	brne	.+70     	; 0x1766 <OneButton::tick()+0x150>
    1720:	cb 8c       	ldd	r12, Y+27	; 0x1b
    1722:	dc 8c       	ldd	r13, Y+28	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    1724:	ed 8c       	ldd	r14, Y+29	; 0x1d
    1726:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1728:	6c 19       	sub	r22, r12
    172a:	7d 09       	sbc	r23, r13
    172c:	8e 09       	sbc	r24, r14
    172e:	9f 09       	sbc	r25, r15
    1730:	ca 80       	ldd	r12, Y+2	; 0x02
    1732:	db 80       	ldd	r13, Y+3	; 0x03
    1734:	0d 2c       	mov	r0, r13
    1736:	00 0c       	add	r0, r0
    1738:	ee 08       	sbc	r14, r14
    173a:	ff 08       	sbc	r15, r15
    173c:	c6 16       	cp	r12, r22
    173e:	d7 06       	cpc	r13, r23
    1740:	e8 06       	cpc	r14, r24
    1742:	f9 06       	cpc	r15, r25
    1744:	38 f4       	brcc	.+14     	; 0x1754 <OneButton::tick()+0x13e>
    1746:	ed 85       	ldd	r30, Y+13	; 0x0d
    1748:	fe 85       	ldd	r31, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    174a:	30 97       	sbiw	r30, 0x00	; 0
    174c:	09 f4       	brne	.+2      	; 0x1750 <OneButton::tick()+0x13a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    174e:	ae cf       	rjmp	.-164    	; 0x16ac <OneButton::tick()+0x96>
    1750:	09 95       	icall
    1752:	ac cf       	rjmp	.-168    	; 0x16ac <OneButton::tick()+0x96>
    1754:	8a 85       	ldd	r24, Y+10	; 0x0a
    1756:	9b 85       	ldd	r25, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    1758:	80 17       	cp	r24, r16
    175a:	91 07       	cpc	r25, r17
    175c:	09 f0       	breq	.+2      	; 0x1760 <OneButton::tick()+0x14a>
    175e:	7d cf       	rjmp	.-262    	; 0x165a <OneButton::tick()+0x44>
    1760:	83 e0       	ldi	r24, 0x03	; 3
    1762:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    1764:	a8 cf       	rjmp	.-176    	; 0x16b6 <OneButton::tick()+0xa0>
    1766:	23 30       	cpi	r18, 0x03	; 3
    1768:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    176a:	49 f4       	brne	.+18     	; 0x177e <OneButton::tick()+0x168>
    176c:	88 85       	ldd	r24, Y+8	; 0x08
    176e:	99 85       	ldd	r25, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    1770:	80 17       	cp	r24, r16
    1772:	91 07       	cpc	r25, r17
    1774:	09 f0       	breq	.+2      	; 0x1778 <OneButton::tick()+0x162>
    1776:	71 cf       	rjmp	.-286    	; 0x165a <OneButton::tick()+0x44>
    1778:	ef 85       	ldd	r30, Y+15	; 0x0f
    177a:	f8 89       	ldd	r31, Y+16	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    177c:	e6 cf       	rjmp	.-52     	; 0x174a <OneButton::tick()+0x134>
    177e:	26 30       	cpi	r18, 0x06	; 6
    1780:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    1782:	09 f0       	breq	.+2      	; 0x1786 <OneButton::tick()+0x170>
    1784:	6a cf       	rjmp	.-300    	; 0x165a <OneButton::tick()+0x44>
    1786:	88 85       	ldd	r24, Y+8	; 0x08
    1788:	99 85       	ldd	r25, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    178a:	80 17       	cp	r24, r16
    178c:	91 07       	cpc	r25, r17
    178e:	21 f4       	brne	.+8      	; 0x1798 <OneButton::tick()+0x182>
    1790:	1c 86       	std	Y+12, r1	; 0x0c
    1792:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    1794:	fe 89       	ldd	r31, Y+22	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    1796:	d9 cf       	rjmp	.-78     	; 0x174a <OneButton::tick()+0x134>
    1798:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    179a:	8c 87       	std	Y+12, r24	; 0x0c
    179c:	ef 89       	ldd	r30, Y+23	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    179e:	f8 8d       	ldd	r31, Y+24	; 0x18
    17a0:	30 97       	sbiw	r30, 0x00	; 0
    17a2:	09 f4       	brne	.+2      	; 0x17a6 <OneButton::tick()+0x190>
    17a4:	5a cf       	rjmp	.-332    	; 0x165a <OneButton::tick()+0x44>
    17a6:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    17a8:	cf 91       	pop	r28
    17aa:	1f 91       	pop	r17
    17ac:	0f 91       	pop	r16
    17ae:	ff 90       	pop	r15
    17b0:	ef 90       	pop	r14
    17b2:	df 90       	pop	r13
    17b4:	cf 90       	pop	r12
    17b6:	09 94       	ijmp

000017b8 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if(_longPressStopFunc) _longPressStopFunc();
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    17b8:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:534
}
}

void RESET_LONG_PRESS_START()
{
  if(checkTempRaised==0)
    17bc:	81 11       	cpse	r24, r1
    17be:	22 c0       	rjmp	.+68     	; 0x1804 <__DATA_REGION_LENGTH__+0x4>
    17c0:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:536
  {
  if (!LONG_PRESS )   {
    17c4:	81 11       	cpse	r24, r1
    17c6:	16 c0       	rjmp	.+44     	; 0x17f4 <RESET_LONG_PRESS_START()+0x3c>
    17c8:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:537
  if(!ENTER_BUT)
    17cc:	81 11       	cpse	r24, r1
    17ce:	0b c0       	rjmp	.+22     	; 0x17e6 <RESET_LONG_PRESS_START()+0x2e>
    17d0:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:539
  {
    RST_BUTT = 0;    
    17d4:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:541
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    17dc:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    17e0:	88 ec       	ldi	r24, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:554
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    17e2:	90 e0       	ldi	r25, 0x00	; 0
    17e4:	fb ce       	rjmp	.-522    	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    17e6:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:545
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
    17ea:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:546
      SET_MIN = 0;
    17ee:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
    17f2:	f6 cf       	rjmp	.-20     	; 0x17e0 <RESET_LONG_PRESS_START()+0x28>
    17f4:	80 91 49 28 	lds	r24, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:551
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    17f8:	81 11       	cpse	r24, r1
    17fa:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    17fe:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:552
    LONG_PRESS = 0;
    1802:	ee cf       	rjmp	.-36     	; 0x17e0 <RESET_LONG_PRESS_START()+0x28>
    1804:	08 95       	ret

00001806 <RESET_CLICK()>:
RESET_CLICK():
    1806:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:502
  }
}

void RESET_CLICK()
{
  if(checkTempRaised==0)
    180a:	81 11       	cpse	r24, r1
    180c:	5e c0       	rjmp	.+188    	; 0x18ca <RESET_CLICK()+0xc4>
    180e:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:504
  {
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    1812:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1816:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    181a:	21 11       	cpse	r18, r1
    181c:	03 c0       	rjmp	.+6      	; 0x1824 <RESET_CLICK()+0x1e>
    181e:	88 30       	cpi	r24, 0x08	; 8
    1820:	91 05       	cpc	r25, r1
    1822:	29 f0       	breq	.+10     	; 0x182e <RESET_CLICK()+0x28>
    1824:	ac 01       	movw	r20, r24
    1826:	4d 7f       	andi	r20, 0xFD	; 253
    1828:	4c 30       	cpi	r20, 0x0C	; 12
    182a:	51 05       	cpc	r21, r1
    182c:	b9 f5       	brne	.+110    	; 0x189c <RESET_CLICK()+0x96>
    182e:	01 97       	sbiw	r24, 0x01	; 1
    1830:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:507
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    1834:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1838:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:518
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    183c:	81 11       	cpse	r24, r1
    183e:	2b c0       	rjmp	.+86     	; 0x1896 <RESET_CLICK()+0x90>
    1840:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    1844:	22 23       	and	r18, r18
    1846:	d9 f1       	breq	.+118    	; 0x18be <RESET_CLICK()+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:520
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    1848:	82 30       	cpi	r24, 0x02	; 2
    184a:	c9 f5       	brne	.+114    	; 0x18be <RESET_CLICK()+0xb8>
    184c:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    1850:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:522
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    1854:	85 30       	cpi	r24, 0x05	; 5
    1856:	f9 f4       	brne	.+62     	; 0x1896 <RESET_CLICK()+0x90>
    1858:	20 e0       	ldi	r18, 0x00	; 0
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	40 e8       	ldi	r20, 0x80	; 128
    185e:	5f e3       	ldi	r21, 0x3F	; 63
    1860:	60 91 aa 28 	lds	r22, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    1864:	70 91 ab 28 	lds	r23, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    1868:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    186c:	90 91 ad 28 	lds	r25, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    1870:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    1874:	87 fd       	sbrc	r24, 7
    1876:	0f c0       	rjmp	.+30     	; 0x1896 <RESET_CLICK()+0x90>
    1878:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    187c:	88 23       	and	r24, r24
    187e:	59 f0       	breq	.+22     	; 0x1896 <RESET_CLICK()+0x90>
    1880:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:524
   {
     RATE_OF_HEATING =0;
    1884:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    1888:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    188c:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    1890:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:525
     CHECK_RATE_OF_HEATING =1;
    1892:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    1896:	82 e3       	ldi	r24, 0x32	; 50
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:528
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	a0 ce       	rjmp	.-704    	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    189c:	8b 30       	cpi	r24, 0x0B	; 11
    189e:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:510
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    18a0:	11 f0       	breq	.+4      	; 0x18a6 <RESET_CLICK()+0xa0>
    18a2:	0d 97       	sbiw	r24, 0x0d	; 13
    18a4:	21 f4       	brne	.+8      	; 0x18ae <RESET_CLICK()+0xa8>
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	80 93 a7 28 	sts	0x28A7, r24	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:512
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat ) //|| SELECTION_PARAMETER == Product_Selection_Parameter )   
          Mode_Button_Single_Press_In_Settings =1;
    18ac:	c5 cf       	rjmp	.-118    	; 0x1838 <RESET_CLICK()+0x32>
    18ae:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:515
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    18b2:	88 23       	and	r24, r24
    18b4:	09 f4       	brne	.+2      	; 0x18b8 <RESET_CLICK()+0xb2>
    18b6:	c0 cf       	rjmp	.-128    	; 0x1838 <RESET_CLICK()+0x32>
    18b8:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    18bc:	bd cf       	rjmp	.-134    	; 0x1838 <RESET_CLICK()+0x32>
    18be:	81 50       	subi	r24, 0x01	; 1
    18c0:	84 30       	cpi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:521
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    18c2:	30 f6       	brcc	.-116    	; 0x1850 <RESET_CLICK()+0x4a>
    18c4:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
    18c8:	c3 cf       	rjmp	.-122    	; 0x1850 <RESET_CLICK()+0x4a>
    18ca:	08 95       	ret

000018cc <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    18cc:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:444
}
}

void DEC_LONGPRESS()
{ 
  if(checkTempRaised==0)
    18d0:	81 11       	cpse	r24, r1
    18d2:	12 c0       	rjmp	.+36     	; 0x18f8 <DEC_LONGPRESS()+0x2c>
    18d4:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:446
  {
  if(!but1)
    18d8:	81 11       	cpse	r24, r1
    18da:	0e c0       	rjmp	.+28     	; 0x18f8 <DEC_LONGPRESS()+0x2c>
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:448
  {
    BLINK_STATS=1;
    18e2:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:449
    INC5++;
    18e6:	8f 5f       	subi	r24, 0xFF	; 255
    18e8:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    18ec:	89 31       	cpi	r24, 0x19	; 25
    18ee:	24 f0       	brlt	.+8      	; 0x18f8 <DEC_LONGPRESS()+0x2c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:450
    if (INC5 >= 25)
    18f0:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:452
    {
      Butn.SET_CHANGE_DOWN();
    18f4:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:453
      INC5 = 0;
    18f8:	08 95       	ret

000018fa <DEC_CLICK()>:
DEC_CLICK():
    18fa:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:406
}
}

void DEC_CLICK()
{ 
  if(checkTempRaised==0)
    18fe:	81 11       	cpse	r24, r1
    1900:	54 c0       	rjmp	.+168    	; 0x19aa <DEC_CLICK()+0xb0>
    1902:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:408
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1906:	88 23       	and	r24, r24
    1908:	09 f4       	brne	.+2      	; 0x190c <DEC_CLICK()+0x12>
    190a:	4d c0       	rjmp	.+154    	; 0x19a6 <DEC_CLICK()+0xac>
    190c:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    1910:	81 11       	cpse	r24, r1
    1912:	49 c0       	rjmp	.+146    	; 0x19a6 <DEC_CLICK()+0xac>
    1914:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1918:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    191c:	20 91 49 28 	lds	r18, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:410
  {
    if(!Service_Menu){
    1920:	21 11       	cpse	r18, r1
    1922:	19 c0       	rjmp	.+50     	; 0x1956 <DEC_CLICK()+0x5c>
    1924:	01 96       	adiw	r24, 0x01	; 1
    1926:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:411
        SELECTION_PARAMETER++;
    192a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    192e:	20 91 07 29 	lds	r18, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:413

      if(select_product_type )
    1932:	22 23       	and	r18, r18
    1934:	39 f0       	breq	.+14     	; 0x1944 <DEC_CLICK()+0x4a>
    1936:	05 97       	sbiw	r24, 0x05	; 5
    1938:	c4 f1       	brlt	.+112    	; 0x19aa <DEC_CLICK()+0xb0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:415
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
    193a:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    193e:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    1942:	08 95       	ret
    1944:	05 97       	sbiw	r24, 0x05	; 5
    1946:	8c f1       	brlt	.+98     	; 0x19aa <DEC_CLICK()+0xb0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:419
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
    1948:	81 e0       	ldi	r24, 0x01	; 1
    194a:	90 e0       	ldi	r25, 0x00	; 0
    194c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:425
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
    1950:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1954:	08 95       	ret
    1956:	86 30       	cpi	r24, 0x06	; 6
    1958:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:424
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
    195a:	19 f4       	brne	.+6      	; 0x1962 <DEC_CLICK()+0x68>
    195c:	88 e0       	ldi	r24, 0x08	; 8
    195e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:425
                   SELECTION_PARAMETER = Cal1_Point;
    1960:	f5 cf       	rjmp	.-22     	; 0x194c <DEC_CLICK()+0x52>
    1962:	20 91 ae 28 	lds	r18, 0x28AE	; 0x8028ae <CAL2_START>
    1966:	89 30       	cpi	r24, 0x09	; 9
    1968:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:426
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    196a:	39 f4       	brne	.+14     	; 0x197a <DEC_CLICK()+0x80>
    196c:	8b e0       	ldi	r24, 0x0B	; 11
    196e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:427
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
    1970:	21 11       	cpse	r18, r1
    1972:	ec cf       	rjmp	.-40     	; 0x194c <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:426
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1974:	80 e1       	ldi	r24, 0x10	; 16
    1976:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:429
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Log; 
    1978:	e9 cf       	rjmp	.-46     	; 0x194c <DEC_CLICK()+0x52>
    197a:	21 11       	cpse	r18, r1
    197c:	06 c0       	rjmp	.+12     	; 0x198a <DEC_CLICK()+0x90>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:428
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
    197e:	89 30       	cpi	r24, 0x09	; 9
    1980:	91 05       	cpc	r25, r1
    1982:	4c f0       	brlt	.+18     	; 0x1996 <DEC_CLICK()+0x9c>
    1984:	80 31       	cpi	r24, 0x10	; 16
    1986:	91 05       	cpc	r25, r1
    1988:	ac f3       	brlt	.-22     	; 0x1974 <DEC_CLICK()+0x7a>
    198a:	80 31       	cpi	r24, 0x10	; 16
    198c:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:430
                       SELECTION_PARAMETER = Log; 
      else if(SELECTION_PARAMETER ==  Log)            
    198e:	19 f4       	brne	.+6      	; 0x1996 <DEC_CLICK()+0x9c>
    1990:	81 e1       	ldi	r24, 0x11	; 17
    1992:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:431
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
    1994:	db cf       	rjmp	.-74     	; 0x194c <DEC_CLICK()+0x52>
    1996:	81 31       	cpi	r24, 0x11	; 17
    1998:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:432
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
    199a:	1c f0       	brlt	.+6      	; 0x19a2 <DEC_CLICK()+0xa8>
    199c:	85 e0       	ldi	r24, 0x05	; 5
    199e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:433
              SELECTION_PARAMETER = Product_Selection_Parameter; //0; 
    19a0:	d5 cf       	rjmp	.-86     	; 0x194c <DEC_CLICK()+0x52>
    19a2:	01 96       	adiw	r24, 0x01	; 1
    19a4:	d3 cf       	rjmp	.-90     	; 0x194c <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:435
      else                                                 
             SELECTION_PARAMETER++;             
    19a6:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:438
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
    19aa:	08 95       	ret

000019ac <INC_LONGPRESS()>:
INC_LONGPRESS():
    19ac:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:381
}
}

void INC_LONGPRESS()
{
  if(checkTempRaised==0)
    19b0:	81 11       	cpse	r24, r1
    19b2:	12 c0       	rjmp	.+36     	; 0x19d8 <INC_LONGPRESS()+0x2c>
    19b4:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:383
  {
  if(!but1)
    19b8:	81 11       	cpse	r24, r1
    19ba:	0e c0       	rjmp	.+28     	; 0x19d8 <INC_LONGPRESS()+0x2c>
    19bc:	81 e0       	ldi	r24, 0x01	; 1
    19be:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:385
  {
    BLINK_STATS=1;
    19c2:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:386
    INC5++;
    19c6:	8f 5f       	subi	r24, 0xFF	; 255
    19c8:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    19cc:	89 31       	cpi	r24, 0x19	; 25
    19ce:	24 f0       	brlt	.+8      	; 0x19d8 <INC_LONGPRESS()+0x2c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:387
    if (INC5 >= 25)
    19d0:	0e 94 88 01 	call	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:389
    {
      Butn.SET_CHANGE_UP();
    19d4:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:390
      INC5 = 0;
    19d8:	08 95       	ret

000019da <INC_CLICK()>:
INC_CLICK():
    19da:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:343
  button4.tick();  
}

void INC_CLICK()
{ 
  if(checkTempRaised==0)
    19de:	81 11       	cpse	r24, r1
    19e0:	26 c0       	rjmp	.+76     	; 0x1a2e <INC_CLICK()+0x54>
    19e2:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:345
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    19e6:	88 23       	and	r24, r24
    19e8:	09 f4       	brne	.+2      	; 0x19ec <INC_CLICK()+0x12>
    19ea:	3f c0       	rjmp	.+126    	; 0x1a6a <INC_CLICK()+0x90>
    19ec:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    19f0:	81 11       	cpse	r24, r1
    19f2:	3b c0       	rjmp	.+118    	; 0x1a6a <INC_CLICK()+0x90>
    19f4:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    19f8:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    19fc:	20 91 49 28 	lds	r18, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:347
  {    
    if(!Service_Menu)
    1a00:	21 11       	cpse	r18, r1
    1a02:	16 c0       	rjmp	.+44     	; 0x1a30 <INC_CLICK()+0x56>
    1a04:	01 97       	sbiw	r24, 0x01	; 1
    1a06:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:349
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
    1a0a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a0e:	20 91 07 29 	lds	r18, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:350
      if(select_product_type )
    1a12:	22 23       	and	r18, r18
    1a14:	49 f0       	breq	.+18     	; 0x1a28 <INC_CLICK()+0x4e>
    1a16:	97 ff       	sbrs	r25, 7
    1a18:	0a c0       	rjmp	.+20     	; 0x1a2e <INC_CLICK()+0x54>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:352
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
    1a1a:	84 e0       	ldi	r24, 0x04	; 4
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:362
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
    1a22:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a26:	08 95       	ret
    1a28:	18 16       	cp	r1, r24
    1a2a:	19 06       	cpc	r1, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:356
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
    1a2c:	b4 f7       	brge	.-20     	; 0x1a1a <INC_CLICK()+0x40>
    1a2e:	08 95       	ret
    1a30:	88 30       	cpi	r24, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:377
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
}
    1a32:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:361
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
    1a34:	19 f4       	brne	.+6      	; 0x1a3c <INC_CLICK()+0x62>
    1a36:	86 e0       	ldi	r24, 0x06	; 6
    1a38:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:362
                              SELECTION_PARAMETER = Calibration_Selection;
    1a3a:	f1 cf       	rjmp	.-30     	; 0x1a1e <INC_CLICK()+0x44>
    1a3c:	8b 30       	cpi	r24, 0x0B	; 11
    1a3e:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:363
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
    1a40:	19 f4       	brne	.+6      	; 0x1a48 <INC_CLICK()+0x6e>
    1a42:	89 e0       	ldi	r24, 0x09	; 9
    1a44:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:364
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
    1a46:	eb cf       	rjmp	.-42     	; 0x1a1e <INC_CLICK()+0x44>
    1a48:	81 31       	cpi	r24, 0x11	; 17
    1a4a:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:365
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
    1a4c:	19 f4       	brne	.+6      	; 0x1a54 <INC_CLICK()+0x7a>
    1a4e:	80 e1       	ldi	r24, 0x10	; 16
    1a50:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:366
                                SELECTION_PARAMETER = Log;
    1a52:	e5 cf       	rjmp	.-54     	; 0x1a1e <INC_CLICK()+0x44>
    1a54:	80 31       	cpi	r24, 0x10	; 16
    1a56:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:367
      else if(SELECTION_PARAMETER == Log)   
    1a58:	a1 f3       	breq	.-24     	; 0x1a42 <INC_CLICK()+0x68>
    1a5a:	86 30       	cpi	r24, 0x06	; 6
    1a5c:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:369
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;                                
      else if (SELECTION_PARAMETER < Calibration_Selection)
    1a5e:	1c f4       	brge	.+6      	; 0x1a66 <INC_CLICK()+0x8c>
    1a60:	81 e1       	ldi	r24, 0x11	; 17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:370
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	dc cf       	rjmp	.-72     	; 0x1a1e <INC_CLICK()+0x44>
    1a66:	01 97       	sbiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:371
      else                      SELECTION_PARAMETER--;      
    1a68:	da cf       	rjmp	.-76     	; 0x1a1e <INC_CLICK()+0x44>
    1a6a:	0c 94 88 01 	jmp	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>

00001a6e <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:375
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
    1a6e:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:316
}
}

void MODE_LONG_PRESS_START()
{ 
  if(checkTempRaised==0)
    1a72:	81 11       	cpse	r24, r1
    1a74:	25 c0       	rjmp	.+74     	; 0x1ac0 <MODE_LONG_PRESS_START()+0x52>
    1a76:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:318
  {
  if (!ENTER_BUT)
    1a7a:	81 11       	cpse	r24, r1
    1a7c:	17 c0       	rjmp	.+46     	; 0x1aac <MODE_LONG_PRESS_START()+0x3e>
    1a7e:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:320
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    1a82:	81 11       	cpse	r24, r1
    1a84:	13 c0       	rjmp	.+38     	; 0x1aac <MODE_LONG_PRESS_START()+0x3e>
    1a86:	8e e5       	ldi	r24, 0x5E	; 94
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:322
    {
      i = 350;
    1a88:	91 e0       	ldi	r25, 0x01	; 1
    1a8a:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    1a8e:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    1a92:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:323
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    1a96:	88 23       	and	r24, r24
    1a98:	61 f0       	breq	.+24     	; 0x1ab2 <MODE_LONG_PRESS_START()+0x44>
    1a9a:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1a9e:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:325
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    1aa2:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:326
      RST_BUTT = 1;
    1aa4:	80 93 4d 29 	sts	0x294D, r24	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:329
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
    1aa8:	80 93 4a 28 	sts	0x284A, r24	; 0x80284a <RST_BUTT>
    1aac:	88 ec       	ldi	r24, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:324
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	95 cd       	rjmp	.-1238   	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    1ab2:	81 e0       	ldi	r24, 0x01	; 1
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1aba:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1abe:	f1 cf       	rjmp	.-30     	; 0x1aa2 <MODE_LONG_PRESS_START()+0x34>
    1ac0:	08 95       	ret

00001ac2 <UartClass::begin(unsigned long)>:
begin():
    1ac2:	dc 01       	movw	r26, r24
    1ac4:	ed 91       	ld	r30, X+
    1ac6:	fc 91       	ld	r31, X
    1ac8:	04 88       	ldd	r0, Z+20	; 0x14
    1aca:	f5 89       	ldd	r31, Z+21	; 0x15
    1acc:	e0 2d       	mov	r30, r0
    1ace:	23 e0       	ldi	r18, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	09 94       	ijmp

00001ad4 <STOP_BUZZER()>:
stop():
    1ad4:	e7 e8       	ldi	r30, 0x87	; 135
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1ad6:	fb e2       	ldi	r31, 0x2B	; 43
    1ad8:	10 82       	st	Z, r1
    1ada:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1adc:	14 86       	std	Z+12, r1	; 0x0c
    1ade:	15 86       	std	Z+13, r1	; 0x0d
    1ae0:	16 86       	std	Z+14, r1	; 0x0e
    1ae2:	17 86       	std	Z+15, r1	; 0x0f
    1ae4:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1ae6:	60 e0       	ldi	r22, 0x00	; 0
    1ae8:	85 e1       	ldi	r24, 0x15	; 21
    1aea:	d9 c9       	rjmp	.-3150   	; 0xe9e <digitalWrite.part.2>

00001aec <STOP_BUZZER1()>:
STOP_BUZZER1():
    1aec:	81 e5       	ldi	r24, 0x51	; 81
    1aee:	9b e2       	ldi	r25, 0x2B	; 43
    1af0:	55 dd       	rcall	.-1366   	; 0x159c <Ticker::start()>
digitalWrite():
    1af2:	61 e0       	ldi	r22, 0x01	; 1
    1af4:	85 e1       	ldi	r24, 0x15	; 21
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1af6:	d3 c9       	rjmp	.-3162   	; 0xe9e <digitalWrite.part.2>

00001af8 <STOP_BUZZER2()>:
    1af8:	60 e0       	ldi	r22, 0x00	; 0
    1afa:	85 e1       	ldi	r24, 0x15	; 21
    1afc:	d0 d9       	rcall	.-3168   	; 0xe9e <digitalWrite.part.2>
STOP_BUZZER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1afe:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <REPETATION_FLAG>
    1b02:	88 23       	and	r24, r24
    1b04:	49 f0       	breq	.+18     	; 0x1b18 <STOP_BUZZER2()+0x20>
    1b06:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <FOR_REP>
    1b0a:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <FOR_REP+0x1>
    1b0e:	01 96       	adiw	r24, 0x01	; 1
    1b10:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <FOR_REP>
    1b14:	90 93 b6 28 	sts	0x28B6, r25	; 0x8028b6 <FOR_REP+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:71
   FOR_REP2++;
    1b18:	80 91 b7 28 	lds	r24, 0x28B7	; 0x8028b7 <FOR_REP2>
    1b1c:	90 91 b8 28 	lds	r25, 0x28B8	; 0x8028b8 <FOR_REP2+0x1>
    1b20:	01 96       	adiw	r24, 0x01	; 1
    1b22:	80 93 b7 28 	sts	0x28B7, r24	; 0x8028b7 <FOR_REP2>
    1b26:	90 93 b8 28 	sts	0x28B8, r25	; 0x8028b8 <FOR_REP2+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:72
}
    1b2a:	08 95       	ret

00001b2c <LED_off()>:
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:55
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1b2c:	60 e0       	ldi	r22, 0x00	; 0
    1b2e:	8a e1       	ldi	r24, 0x1A	; 26
    1b30:	b6 d9       	rcall	.-3220   	; 0xe9e <digitalWrite.part.2>
LED_off():
    1b32:	86 e3       	ldi	r24, 0x36	; 54
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    1b34:	9b e2       	ldi	r25, 0x2B	; 43
    1b36:	32 cd       	rjmp	.-1436   	; 0x159c <Ticker::start()>

00001b38 <LED_on()>:
digitalWrite():
    1b38:	61 e0       	ldi	r22, 0x01	; 1
    1b3a:	8a e1       	ldi	r24, 0x1A	; 26
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1b3c:	b0 d9       	rcall	.-3232   	; 0xe9e <digitalWrite.part.2>
LED_on():
    1b3e:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <Blinking_Freq>
    1b42:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:51
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    1b44:	80 93 af 28 	sts	0x28AF, r24	; 0x8028af <Blinking_Freq>
    1b48:	08 95       	ret

00001b4a <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    1b4a:	8f 92       	push	r8
    1b4c:	9f 92       	push	r9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Tick.cpp:52
}
    1b4e:	af 92       	push	r10
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:39
{  
  TEMP_UPDATE.start();
}

void RTD_TEMP_CAL()
{
    1b50:	bf 92       	push	r11
    1b52:	cf 92       	push	r12
    1b54:	df 92       	push	r13
    1b56:	ef 92       	push	r14
    1b58:	ff 92       	push	r15
    1b5a:	cf 93       	push	r28
    1b5c:	df 93       	push	r29
    1b5e:	c0 91 24 28 	lds	r28, 0x2824	; 0x802824 <sample>
    1b62:	d0 91 25 28 	lds	r29, 0x2825	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:40
    sample++;
    1b66:	21 96       	adiw	r28, 0x01	; 1
    1b68:	c0 93 24 28 	sts	0x2824, r28	; 0x802824 <sample>
    1b6c:	d0 93 25 28 	sts	0x2825, r29	; 0x802825 <sample+0x1>
analogRead():
    1b70:	81 e0       	ldi	r24, 0x01	; 1
    1b72:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1b76:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
    1b7a:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1b7e:	80 ff       	sbrs	r24, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1b80:	fc cf       	rjmp	.-8      	; 0x1b7a <RTD_TEMP_CAL()+0x30>
    1b82:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1b86:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1b8a:	07 2e       	mov	r0, r23
    1b8c:	00 0c       	add	r0, r0
    1b8e:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:41
    AvgVout = analogRead(A1);
    1b90:	99 0b       	sbc	r25, r25
    1b92:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    1b96:	20 91 20 28 	lds	r18, 0x2820	; 0x802820 <TotalVout>
    1b9a:	30 91 21 28 	lds	r19, 0x2821	; 0x802821 <TotalVout+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:42
    TotalVout  += AvgVout ;  // Vout;
    1b9e:	40 91 22 28 	lds	r20, 0x2822	; 0x802822 <TotalVout+0x2>
    1ba2:	50 91 23 28 	lds	r21, 0x2823	; 0x802823 <TotalVout+0x3>
    1ba6:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1baa:	6b 01       	movw	r12, r22
    1bac:	7c 01       	movw	r14, r24
    1bae:	c0 92 20 28 	sts	0x2820, r12	; 0x802820 <TotalVout>
    1bb2:	d0 92 21 28 	sts	0x2821, r13	; 0x802821 <TotalVout+0x1>
    1bb6:	e0 92 22 28 	sts	0x2822, r14	; 0x802822 <TotalVout+0x2>
    1bba:	f0 92 23 28 	sts	0x2823, r15	; 0x802823 <TotalVout+0x3>
    1bbe:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    1bc2:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:43
    if(sample >= avrage_val)
    1bc6:	c6 17       	cp	r28, r22
    1bc8:	d7 07       	cpc	r29, r23
    1bca:	0c f4       	brge	.+2      	; 0x1bce <RTD_TEMP_CAL()+0x84>
    1bcc:	76 c0       	rjmp	.+236    	; 0x1cba <RTD_TEMP_CAL()+0x170>
    1bce:	07 2e       	mov	r0, r23
    1bd0:	00 0c       	add	r0, r0
    1bd2:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:45
    {
      TotalVout /= avrage_val;
    1bd4:	99 0b       	sbc	r25, r25
    1bd6:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    1bda:	9b 01       	movw	r18, r22
    1bdc:	ac 01       	movw	r20, r24
    1bde:	c7 01       	movw	r24, r14
    1be0:	b6 01       	movw	r22, r12
    1be2:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1be6:	60 93 20 28 	sts	0x2820, r22	; 0x802820 <TotalVout>
    1bea:	70 93 21 28 	sts	0x2821, r23	; 0x802821 <TotalVout+0x1>
    1bee:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <TotalVout+0x2>
    1bf2:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <TotalVout+0x3>
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	40 ea       	ldi	r20, 0xA0	; 160
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:46
      float Vout = ((TotalVout * Vs) / 1023.0);                                      // Voltage conversion
    1bfc:	50 e4       	ldi	r21, 0x40	; 64
    1bfe:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1c02:	20 e0       	ldi	r18, 0x00	; 0
    1c04:	30 ec       	ldi	r19, 0xC0	; 192
    1c06:	4f e7       	ldi	r20, 0x7F	; 127
    1c08:	54 e4       	ldi	r21, 0x44	; 68
    1c0a:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	40 e2       	ldi	r20, 0x20	; 32
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:47
      Vin = Vout / 10;                                                               // Gain
    1c14:	51 e4       	ldi	r21, 0x41	; 65
    1c16:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1c1a:	28 eb       	ldi	r18, 0xB8	; 184
    1c1c:	3f e8       	ldi	r19, 0x8F	; 143
    1c1e:	40 e6       	ldi	r20, 0x60	; 96
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:48
      Rt = ((Vb + Vin) * Rc) / (Vs - (Vb + Vin));   //   Va = Vb + Vin 
    1c20:	5f e3       	ldi	r21, 0x3F	; 63
    1c22:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1c26:	6b 01       	movw	r12, r22
    1c28:	7c 01       	movw	r14, r24
    1c2a:	20 e0       	ldi	r18, 0x00	; 0
    1c2c:	30 e0       	ldi	r19, 0x00	; 0
    1c2e:	4b ee       	ldi	r20, 0xEB	; 235
    1c30:	53 e4       	ldi	r21, 0x43	; 67
    1c32:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1c36:	4b 01       	movw	r8, r22
    1c38:	5c 01       	movw	r10, r24
    1c3a:	a7 01       	movw	r20, r14
    1c3c:	96 01       	movw	r18, r12
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	70 e0       	ldi	r23, 0x00	; 0
    1c42:	80 ea       	ldi	r24, 0xA0	; 160
    1c44:	90 e4       	ldi	r25, 0x40	; 64
    1c46:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1c4a:	9b 01       	movw	r18, r22
    1c4c:	ac 01       	movw	r20, r24
    1c4e:	c5 01       	movw	r24, r10
    1c50:	b4 01       	movw	r22, r8
    1c52:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1c56:	20 e0       	ldi	r18, 0x00	; 0
    1c58:	30 e0       	ldi	r19, 0x00	; 0
    1c5a:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:49
      TEMP_DEG_RAW = ((Rt / Rb) - 1) / (Alpha);         // alpha is temp coefficient for paltinum
    1c5c:	52 e4       	ldi	r21, 0x42	; 66
    1c5e:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1c62:	20 e0       	ldi	r18, 0x00	; 0
    1c64:	30 e0       	ldi	r19, 0x00	; 0
    1c66:	40 e8       	ldi	r20, 0x80	; 128
    1c68:	5f e3       	ldi	r21, 0x3F	; 63
    1c6a:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1c6e:	28 e4       	ldi	r18, 0x48	; 72
    1c70:	30 e5       	ldi	r19, 0x50	; 80
    1c72:	4c e7       	ldi	r20, 0x7C	; 124
    1c74:	5b e3       	ldi	r21, 0x3B	; 59
    1c76:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1c7a:	60 93 fb 28 	sts	0x28FB, r22	; 0x8028fb <TEMP_DEG_RAW>
    1c7e:	70 93 fc 28 	sts	0x28FC, r23	; 0x8028fc <TEMP_DEG_RAW+0x1>
    1c82:	80 93 fd 28 	sts	0x28FD, r24	; 0x8028fd <TEMP_DEG_RAW+0x2>
    1c86:	90 93 fe 28 	sts	0x28FE, r25	; 0x8028fe <TEMP_DEG_RAW+0x3>
    1c8a:	26 e6       	ldi	r18, 0x66	; 102
    1c8c:	36 e6       	ldi	r19, 0x66	; 102
    1c8e:	46 ee       	ldi	r20, 0xE6	; 230
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:52
//      Serial2.println("Product Temp."); //;Serial2.println("\t");
//      Serial2.print(TEMP_DEG_RAW); Serial2.print("\t"); Serial2.println(TEMP_DEG_RAW_1);
      TEMP_FAH_RAW = (( TEMP_DEG_RAW * 1.8 ) + 32);
    1c90:	5f e3       	ldi	r21, 0x3F	; 63
    1c92:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1c96:	20 e0       	ldi	r18, 0x00	; 0
    1c98:	30 e0       	ldi	r19, 0x00	; 0
    1c9a:	40 e0       	ldi	r20, 0x00	; 0
    1c9c:	52 e4       	ldi	r21, 0x42	; 66
    1c9e:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1ca2:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <TEMP_FAH_RAW>
    1ca6:	70 93 d9 28 	sts	0x28D9, r23	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    1caa:	80 93 da 28 	sts	0x28DA, r24	; 0x8028da <TEMP_FAH_RAW+0x2>
    1cae:	90 93 db 28 	sts	0x28DB, r25	; 0x8028db <TEMP_FAH_RAW+0x3>
    1cb2:	10 92 24 28 	sts	0x2824, r1	; 0x802824 <sample>
    1cb6:	10 92 25 28 	sts	0x2825, r1	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:53
      sample = 0;   AvgVout = 0;   
    1cba:	82 e3       	ldi	r24, 0x32	; 50
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:55
    }
      avrage_val = 50;
    1cc2:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    1cc6:	df 91       	pop	r29
    1cc8:	cf 91       	pop	r28
    1cca:	ff 90       	pop	r15
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Temp.cpp:56
}
    1ccc:	ef 90       	pop	r14
    1cce:	df 90       	pop	r13
    1cd0:	cf 90       	pop	r12
    1cd2:	bf 90       	pop	r11
    1cd4:	af 90       	pop	r10
    1cd6:	9f 90       	pop	r9
    1cd8:	8f 90       	pop	r8
    1cda:	08 95       	ret

00001cdc <RTD_TEMP_CAL_1()>:
RTD_TEMP_CAL_1():
    1cdc:	cf 93       	push	r28
    1cde:	df 93       	push	r29
    1ce0:	c0 91 1e 28 	lds	r28, 0x281E	; 0x80281e <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:27
{  
  TEMP_UPDATE_1.start();
}

void RTD_TEMP_CAL_1()
{
    1ce4:	d0 91 1f 28 	lds	r29, 0x281F	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:28
    sample_1++;
    1ce8:	21 96       	adiw	r28, 0x01	; 1
    1cea:	c0 93 1e 28 	sts	0x281E, r28	; 0x80281e <sample_1>
    1cee:	d0 93 1f 28 	sts	0x281F, r29	; 0x80281f <sample_1+0x1>
analogRead():
    1cf2:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1cf6:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1cf8:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1cfc:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
    1d00:	80 ff       	sbrs	r24, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1d02:	fc cf       	rjmp	.-8      	; 0x1cfc <RTD_TEMP_CAL_1()+0x20>
    1d04:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1d08:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL_1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1d0c:	07 2e       	mov	r0, r23
    1d0e:	00 0c       	add	r0, r0
    1d10:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:29
    AvgVout_1 = analogRead(A0);
    1d12:	99 0b       	sbc	r25, r25
    1d14:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    1d18:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TotalVout_1>
    1d1c:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:30
    TotalVout_1  += AvgVout_1 ; 
    1d20:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TotalVout_1+0x2>
    1d24:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TotalVout_1+0x3>
    1d28:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1d2c:	69 97       	sbiw	r28, 0x19	; 25
    1d2e:	5c f4       	brge	.+22     	; 0x1d46 <RTD_TEMP_CAL_1()+0x6a>
    1d30:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:31
    if(sample_1 >= avrage_val_1)
    1d34:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:30

void RTD_TEMP_CAL_1()
{
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    1d38:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1d3c:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1d40:	df 91       	pop	r29
    1d42:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:40
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    }
}
    1d44:	08 95       	ret
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:33
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    if(sample_1 >= avrage_val_1)
    {
      TotalVout_1 /= avrage_val_1;
    1d4a:	48 ec       	ldi	r20, 0xC8	; 200
    1d4c:	51 e4       	ldi	r21, 0x41	; 65
    1d4e:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    1d52:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
    1d56:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
    1d5a:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1d5e:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1d62:	10 92 1e 28 	sts	0x281E, r1	; 0x80281e <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Safety_probe.cpp:38
      float Vout1 = ((TotalVout_1 * Vs1) / 1023.0); // Voltage conversion
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    1d66:	10 92 1f 28 	sts	0x281F, r1	; 0x80281f <sample_1+0x1>
    1d6a:	ea cf       	rjmp	.-44     	; 0x1d40 <RTD_TEMP_CAL_1()+0x64>

00001d6c <PID_RUN()>:
PID_RUN():
    1d6c:	3f 92       	push	r3
    1d6e:	4f 92       	push	r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:30
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1d70:	5f 92       	push	r5
    1d72:	6f 92       	push	r6
    1d74:	7f 92       	push	r7
    1d76:	8f 92       	push	r8
    1d78:	9f 92       	push	r9
    1d7a:	af 92       	push	r10
    1d7c:	bf 92       	push	r11
    1d7e:	cf 92       	push	r12
    1d80:	df 92       	push	r13
    1d82:	ef 92       	push	r14
    1d84:	ff 92       	push	r15
    1d86:	0f 93       	push	r16
    1d88:	1f 93       	push	r17
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	cd b7       	in	r28, 0x3d	; 61
    1d90:	de b7       	in	r29, 0x3e	; 62
    1d92:	2e 97       	sbiw	r28, 0x0e	; 14
    1d94:	cd bf       	out	0x3d, r28	; 61
    1d96:	de bf       	out	0x3e, r29	; 62
Compute():
    1d98:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1d9c:	88 23       	and	r24, r24
    1d9e:	09 f4       	brne	.+2      	; 0x1da2 <PID_RUN()+0x36>
    1da0:	29 c1       	rjmp	.+594    	; 0x1ff4 <PID_RUN()+0x288>
    1da2:	e1 d9       	rcall	.-3134   	; 0x1166 <millis>
    1da4:	6d 83       	std	Y+5, r22	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1da6:	7e 83       	std	Y+6, r23	; 0x06
    1da8:	8f 83       	std	Y+7, r24	; 0x07
    1daa:	98 87       	std	Y+8, r25	; 0x08
    1dac:	80 91 95 2a 	lds	r24, 0x2A95	; 0x802a95 <myPID+0x22>
    1db0:	90 91 96 2a 	lds	r25, 0x2A96	; 0x802a96 <myPID+0x23>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1db4:	a0 91 97 2a 	lds	r26, 0x2A97	; 0x802a97 <myPID+0x24>
    1db8:	b0 91 98 2a 	lds	r27, 0x2A98	; 0x802a98 <myPID+0x25>
    1dbc:	4d 81       	ldd	r20, Y+5	; 0x05
    1dbe:	5e 81       	ldd	r21, Y+6	; 0x06
    1dc0:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc2:	78 85       	ldd	r23, Y+8	; 0x08
    1dc4:	48 1b       	sub	r20, r24
    1dc6:	59 0b       	sbc	r21, r25
    1dc8:	6a 0b       	sbc	r22, r26
    1dca:	7b 0b       	sbc	r23, r27
    1dcc:	80 91 a1 2a 	lds	r24, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    1dd0:	90 91 a2 2a 	lds	r25, 0x2AA2	; 0x802aa2 <myPID+0x2f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1dd4:	a0 91 a3 2a 	lds	r26, 0x2AA3	; 0x802aa3 <myPID+0x30>
    1dd8:	b0 91 a4 2a 	lds	r27, 0x2AA4	; 0x802aa4 <myPID+0x31>
    1ddc:	48 17       	cp	r20, r24
    1dde:	59 07       	cpc	r21, r25
    1de0:	6a 07       	cpc	r22, r26
    1de2:	7b 07       	cpc	r23, r27
    1de4:	08 f4       	brcc	.+2      	; 0x1de8 <PID_RUN()+0x7c>
    1de6:	06 c1       	rjmp	.+524    	; 0x1ff4 <PID_RUN()+0x288>
    1de8:	e0 91 8f 2a 	lds	r30, 0x2A8F	; 0x802a8f <myPID+0x1c>
    1dec:	f0 91 90 2a 	lds	r31, 0x2A90	; 0x802a90 <myPID+0x1d>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1df0:	80 81       	ld	r24, Z
    1df2:	91 81       	ldd	r25, Z+1	; 0x01
    1df4:	a2 81       	ldd	r26, Z+2	; 0x02
    1df6:	b3 81       	ldd	r27, Z+3	; 0x03
    1df8:	89 83       	std	Y+1, r24	; 0x01
    1dfa:	9a 83       	std	Y+2, r25	; 0x02
    1dfc:	ab 83       	std	Y+3, r26	; 0x03
    1dfe:	bc 83       	std	Y+4, r27	; 0x04
    1e00:	e0 91 93 2a 	lds	r30, 0x2A93	; 0x802a93 <myPID+0x20>
    1e04:	f0 91 94 2a 	lds	r31, 0x2A94	; 0x802a94 <myPID+0x21>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1e08:	9c 01       	movw	r18, r24
    1e0a:	ad 01       	movw	r20, r26
    1e0c:	60 81       	ld	r22, Z
    1e0e:	71 81       	ldd	r23, Z+1	; 0x01
    1e10:	82 81       	ldd	r24, Z+2	; 0x02
    1e12:	93 81       	ldd	r25, Z+3	; 0x03
    1e14:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1e18:	4b 01       	movw	r8, r22
    1e1a:	5c 01       	movw	r10, r24
    1e1c:	20 91 9d 2a 	lds	r18, 0x2A9D	; 0x802a9d <myPID+0x2a>
    1e20:	30 91 9e 2a 	lds	r19, 0x2A9E	; 0x802a9e <myPID+0x2b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1e24:	40 91 9f 2a 	lds	r20, 0x2A9F	; 0x802a9f <myPID+0x2c>
    1e28:	50 91 a0 2a 	lds	r21, 0x2AA0	; 0x802aa0 <myPID+0x2d>
    1e2c:	69 81       	ldd	r22, Y+1	; 0x01
    1e2e:	7a 81       	ldd	r23, Y+2	; 0x02
    1e30:	8b 81       	ldd	r24, Y+3	; 0x03
    1e32:	9c 81       	ldd	r25, Y+4	; 0x04
    1e34:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1e38:	6b 01       	movw	r12, r22
    1e3a:	7c 01       	movw	r14, r24
    1e3c:	20 91 83 2a 	lds	r18, 0x2A83	; 0x802a83 <myPID+0x10>
    1e40:	30 91 84 2a 	lds	r19, 0x2A84	; 0x802a84 <myPID+0x11>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1e44:	40 91 85 2a 	lds	r20, 0x2A85	; 0x802a85 <myPID+0x12>
    1e48:	50 91 86 2a 	lds	r21, 0x2A86	; 0x802a86 <myPID+0x13>
    1e4c:	c5 01       	movw	r24, r10
    1e4e:	b4 01       	movw	r22, r8
    1e50:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1e54:	20 91 99 2a 	lds	r18, 0x2A99	; 0x802a99 <myPID+0x26>
    1e58:	30 91 9a 2a 	lds	r19, 0x2A9A	; 0x802a9a <myPID+0x27>
    1e5c:	40 91 9b 2a 	lds	r20, 0x2A9B	; 0x802a9b <myPID+0x28>
    1e60:	50 91 9c 2a 	lds	r21, 0x2A9C	; 0x802a9c <myPID+0x29>
    1e64:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1e68:	2b 01       	movw	r4, r22
    1e6a:	3c 01       	movw	r6, r24
    1e6c:	40 92 99 2a 	sts	0x2A99, r4	; 0x802a99 <myPID+0x26>
    1e70:	50 92 9a 2a 	sts	0x2A9A, r5	; 0x802a9a <myPID+0x27>
    1e74:	60 92 9b 2a 	sts	0x2A9B, r6	; 0x802a9b <myPID+0x28>
    1e78:	70 92 9c 2a 	sts	0x2A9C, r7	; 0x802a9c <myPID+0x29>
    1e7c:	30 90 ae 2a 	lds	r3, 0x2AAE	; 0x802aae <myPID+0x3b>
    1e80:	31 10       	cpse	r3, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1e82:	1a c0       	rjmp	.+52     	; 0x1eb8 <PID_RUN()+0x14c>
    1e84:	20 91 7f 2a 	lds	r18, 0x2A7F	; 0x802a7f <myPID+0xc>
    1e88:	30 91 80 2a 	lds	r19, 0x2A80	; 0x802a80 <myPID+0xd>
    1e8c:	40 91 81 2a 	lds	r20, 0x2A81	; 0x802a81 <myPID+0xe>
    1e90:	50 91 82 2a 	lds	r21, 0x2A82	; 0x802a82 <myPID+0xf>
    1e94:	c7 01       	movw	r24, r14
    1e96:	b6 01       	movw	r22, r12
    1e98:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1e9c:	9b 01       	movw	r18, r22
    1e9e:	ac 01       	movw	r20, r24
    1ea0:	c3 01       	movw	r24, r6
    1ea2:	b2 01       	movw	r22, r4
    1ea4:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1ea8:	60 93 99 2a 	sts	0x2A99, r22	; 0x802a99 <myPID+0x26>
    1eac:	70 93 9a 2a 	sts	0x2A9A, r23	; 0x802a9a <myPID+0x27>
    1eb0:	80 93 9b 2a 	sts	0x2A9B, r24	; 0x802a9b <myPID+0x28>
    1eb4:	90 93 9c 2a 	sts	0x2A9C, r25	; 0x802a9c <myPID+0x29>
    1eb8:	40 90 99 2a 	lds	r4, 0x2A99	; 0x802a99 <myPID+0x26>
    1ebc:	50 90 9a 2a 	lds	r5, 0x2A9A	; 0x802a9a <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1ec0:	60 90 9b 2a 	lds	r6, 0x2A9B	; 0x802a9b <myPID+0x28>
    1ec4:	70 90 9c 2a 	lds	r7, 0x2A9C	; 0x802a9c <myPID+0x29>
    1ec8:	10 91 a9 2a 	lds	r17, 0x2AA9	; 0x802aa9 <myPID+0x36>
    1ecc:	90 91 aa 2a 	lds	r25, 0x2AAA	; 0x802aaa <myPID+0x37>
    1ed0:	9e 87       	std	Y+14, r25	; 0x0e
    1ed2:	a0 91 ab 2a 	lds	r26, 0x2AAB	; 0x802aab <myPID+0x38>
    1ed6:	ad 87       	std	Y+13, r26	; 0x0d
    1ed8:	00 91 ac 2a 	lds	r16, 0x2AAC	; 0x802aac <myPID+0x39>
    1edc:	21 2f       	mov	r18, r17
    1ede:	39 2f       	mov	r19, r25
    1ee0:	4a 2f       	mov	r20, r26
    1ee2:	50 2f       	mov	r21, r16
    1ee4:	c3 01       	movw	r24, r6
    1ee6:	b2 01       	movw	r22, r4
    1ee8:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    1eec:	18 16       	cp	r1, r24
    1eee:	0c f0       	brlt	.+2      	; 0x1ef2 <PID_RUN()+0x186>
    1ef0:	96 c0       	rjmp	.+300    	; 0x201e <PID_RUN()+0x2b2>
    1ef2:	81 2f       	mov	r24, r17
    1ef4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ef6:	ad 85       	ldd	r26, Y+13	; 0x0d
    1ef8:	b0 2f       	mov	r27, r16
    1efa:	80 93 99 2a 	sts	0x2A99, r24	; 0x802a99 <myPID+0x26>
    1efe:	90 93 9a 2a 	sts	0x2A9A, r25	; 0x802a9a <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1f02:	a0 93 9b 2a 	sts	0x2A9B, r26	; 0x802a9b <myPID+0x28>
    1f06:	b0 93 9c 2a 	sts	0x2A9C, r27	; 0x802a9c <myPID+0x29>
    1f0a:	33 20       	and	r3, r3
    1f0c:	09 f4       	brne	.+2      	; 0x1f10 <PID_RUN()+0x1a4>
    1f0e:	a0 c0       	rjmp	.+320    	; 0x2050 <PID_RUN()+0x2e4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1f10:	20 91 7f 2a 	lds	r18, 0x2A7F	; 0x802a7f <myPID+0xc>
    1f14:	30 91 80 2a 	lds	r19, 0x2A80	; 0x802a80 <myPID+0xd>
    1f18:	40 91 81 2a 	lds	r20, 0x2A81	; 0x802a81 <myPID+0xe>
    1f1c:	50 91 82 2a 	lds	r21, 0x2A82	; 0x802a82 <myPID+0xf>
    1f20:	c5 01       	movw	r24, r10
    1f22:	b4 01       	movw	r22, r8
    1f24:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1f28:	4b 01       	movw	r8, r22
    1f2a:	5c 01       	movw	r10, r24
    1f2c:	20 91 87 2a 	lds	r18, 0x2A87	; 0x802a87 <myPID+0x14>
    1f30:	30 91 88 2a 	lds	r19, 0x2A88	; 0x802a88 <myPID+0x15>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1f34:	40 91 89 2a 	lds	r20, 0x2A89	; 0x802a89 <myPID+0x16>
    1f38:	50 91 8a 2a 	lds	r21, 0x2A8A	; 0x802a8a <myPID+0x17>
    1f3c:	c7 01       	movw	r24, r14
    1f3e:	b6 01       	movw	r22, r12
    1f40:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    1f44:	9b 01       	movw	r18, r22
    1f46:	ac 01       	movw	r20, r24
    1f48:	60 91 99 2a 	lds	r22, 0x2A99	; 0x802a99 <myPID+0x26>
    1f4c:	70 91 9a 2a 	lds	r23, 0x2A9A	; 0x802a9a <myPID+0x27>
    1f50:	80 91 9b 2a 	lds	r24, 0x2A9B	; 0x802a9b <myPID+0x28>
    1f54:	90 91 9c 2a 	lds	r25, 0x2A9C	; 0x802a9c <myPID+0x29>
    1f58:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    1f5c:	a5 01       	movw	r20, r10
    1f5e:	94 01       	movw	r18, r8
    1f60:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    1f64:	6b 01       	movw	r12, r22
    1f66:	7c 01       	movw	r14, r24
    1f68:	9b 01       	movw	r18, r22
    1f6a:	ac 01       	movw	r20, r24
    1f6c:	61 2f       	mov	r22, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1f6e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1f70:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f72:	90 2f       	mov	r25, r16
    1f74:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    1f78:	87 fd       	sbrc	r24, 7
    1f7a:	18 c0       	rjmp	.+48     	; 0x1fac <PID_RUN()+0x240>
    1f7c:	10 91 a5 2a 	lds	r17, 0x2AA5	; 0x802aa5 <myPID+0x32>
    1f80:	90 91 a6 2a 	lds	r25, 0x2AA6	; 0x802aa6 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1f84:	9e 87       	std	Y+14, r25	; 0x0e
    1f86:	a0 91 a7 2a 	lds	r26, 0x2AA7	; 0x802aa7 <myPID+0x34>
    1f8a:	ad 87       	std	Y+13, r26	; 0x0d
    1f8c:	00 91 a8 2a 	lds	r16, 0x2AA8	; 0x802aa8 <myPID+0x35>
    1f90:	21 2f       	mov	r18, r17
    1f92:	39 2f       	mov	r19, r25
    1f94:	4a 2f       	mov	r20, r26
    1f96:	50 2f       	mov	r21, r16
    1f98:	b6 01       	movw	r22, r12
    1f9a:	c7 01       	movw	r24, r14
    1f9c:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    1fa0:	87 fd       	sbrc	r24, 7
    1fa2:	04 c0       	rjmp	.+8      	; 0x1fac <PID_RUN()+0x240>
PID_RUN():
    1fa4:	1c 2d       	mov	r17, r12
    1fa6:	de 86       	std	Y+14, r13	; 0x0e
    1fa8:	ed 86       	std	Y+13, r14	; 0x0d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1faa:	0f 2d       	mov	r16, r15
Compute():
    1fac:	e0 91 91 2a 	lds	r30, 0x2A91	; 0x802a91 <myPID+0x1e>
    1fb0:	f0 91 92 2a 	lds	r31, 0x2A92	; 0x802a92 <myPID+0x1f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1fb4:	81 2f       	mov	r24, r17
    1fb6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fb8:	ad 85       	ldd	r26, Y+13	; 0x0d
    1fba:	b0 2f       	mov	r27, r16
    1fbc:	80 83       	st	Z, r24
    1fbe:	91 83       	std	Z+1, r25	; 0x01
    1fc0:	a2 83       	std	Z+2, r26	; 0x02
    1fc2:	b3 83       	std	Z+3, r27	; 0x03
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	ab 81       	ldd	r26, Y+3	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1fca:	bc 81       	ldd	r27, Y+4	; 0x04
    1fcc:	80 93 9d 2a 	sts	0x2A9D, r24	; 0x802a9d <myPID+0x2a>
    1fd0:	90 93 9e 2a 	sts	0x2A9E, r25	; 0x802a9e <myPID+0x2b>
    1fd4:	a0 93 9f 2a 	sts	0x2A9F, r26	; 0x802a9f <myPID+0x2c>
    1fd8:	b0 93 a0 2a 	sts	0x2AA0, r27	; 0x802aa0 <myPID+0x2d>
    1fdc:	8d 81       	ldd	r24, Y+5	; 0x05
    1fde:	9e 81       	ldd	r25, Y+6	; 0x06
    1fe0:	af 81       	ldd	r26, Y+7	; 0x07
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    1fe2:	b8 85       	ldd	r27, Y+8	; 0x08
    1fe4:	80 93 95 2a 	sts	0x2A95, r24	; 0x802a95 <myPID+0x22>
    1fe8:	90 93 96 2a 	sts	0x2A96, r25	; 0x802a96 <myPID+0x23>
    1fec:	a0 93 97 2a 	sts	0x2A97, r26	; 0x802a97 <myPID+0x24>
    1ff0:	b0 93 98 2a 	sts	0x2A98, r27	; 0x802a98 <myPID+0x25>
PID_RUN():
    1ff4:	2e 96       	adiw	r28, 0x0e	; 14
    1ff6:	cd bf       	out	0x3d, r28	; 61
    1ff8:	de bf       	out	0x3e, r29	; 62
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Pid.cpp:32
   myPID.Compute();  
}
    1ffa:	df 91       	pop	r29
    1ffc:	cf 91       	pop	r28
    1ffe:	1f 91       	pop	r17
    2000:	0f 91       	pop	r16
    2002:	ff 90       	pop	r15
    2004:	ef 90       	pop	r14
    2006:	df 90       	pop	r13
    2008:	cf 90       	pop	r12
    200a:	bf 90       	pop	r11
    200c:	af 90       	pop	r10
    200e:	9f 90       	pop	r9
    2010:	8f 90       	pop	r8
    2012:	7f 90       	pop	r7
    2014:	6f 90       	pop	r6
    2016:	5f 90       	pop	r5
    2018:	4f 90       	pop	r4
    201a:	3f 90       	pop	r3
    201c:	08 95       	ret
Compute():
    201e:	80 91 a5 2a 	lds	r24, 0x2AA5	; 0x802aa5 <myPID+0x32>
    2022:	90 91 a6 2a 	lds	r25, 0x2AA6	; 0x802aa6 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    2026:	a0 91 a7 2a 	lds	r26, 0x2AA7	; 0x802aa7 <myPID+0x34>
    202a:	b0 91 a8 2a 	lds	r27, 0x2AA8	; 0x802aa8 <myPID+0x35>
    202e:	89 87       	std	Y+9, r24	; 0x09
    2030:	9a 87       	std	Y+10, r25	; 0x0a
    2032:	ab 87       	std	Y+11, r26	; 0x0b
    2034:	bc 87       	std	Y+12, r27	; 0x0c
    2036:	9c 01       	movw	r18, r24
    2038:	ad 01       	movw	r20, r26
    203a:	c3 01       	movw	r24, r6
    203c:	b2 01       	movw	r22, r4
    203e:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    2042:	87 ff       	sbrs	r24, 7
    2044:	62 cf       	rjmp	.-316    	; 0x1f0a <PID_RUN()+0x19e>
    2046:	89 85       	ldd	r24, Y+9	; 0x09
    2048:	9a 85       	ldd	r25, Y+10	; 0x0a
    204a:	ab 85       	ldd	r26, Y+11	; 0x0b
    204c:	bc 85       	ldd	r27, Y+12	; 0x0c
    204e:	55 cf       	rjmp	.-342    	; 0x1efa <PID_RUN()+0x18e>
PID_RUN():
    2050:	81 2c       	mov	r8, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    2052:	91 2c       	mov	r9, r1
    2054:	54 01       	movw	r10, r8
    2056:	6a cf       	rjmp	.-300    	; 0x1f2c <PID_RUN()+0x1c0>

00002058 <EERef::operator*() const>:
operator*():
    2058:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    205a:	80 81       	ld	r24, Z
    205c:	91 81       	ldd	r25, Z+1	; 0x01
    205e:	fc 01       	movw	r30, r24
    2060:	ff 27       	eor	r31, r31
    2062:	90 fd       	sbrc	r25, 0
    2064:	06 c0       	rjmp	.+12     	; 0x2072 <EERef::operator*() const+0x1a>
    2066:	80 e0       	ldi	r24, 0x00	; 0
    2068:	94 e1       	ldi	r25, 0x14	; 20
    206a:	e8 2b       	or	r30, r24
    206c:	f9 2b       	or	r31, r25
    206e:	80 81       	ld	r24, Z
    2070:	08 95       	ret
    2072:	80 e0       	ldi	r24, 0x00	; 0
    2074:	93 e1       	ldi	r25, 0x13	; 19
    2076:	f9 cf       	rjmp	.-14     	; 0x206a <EERef::operator*() const+0x12>

00002078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    2078:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    207a:	ff 92       	push	r15
    207c:	0f 93       	push	r16
    207e:	1f 93       	push	r17
    2080:	cf 93       	push	r28
    2082:	df 93       	push	r29
    2084:	00 d0       	rcall	.+0      	; 0x2086 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    2086:	cd b7       	in	r28, 0x3d	; 61
    2088:	de b7       	in	r29, 0x3e	; 62
    208a:	8c 01       	movw	r16, r24
    208c:	7b 01       	movw	r14, r22
    208e:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2090:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    2092:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2094:	01 96       	adiw	r24, 0x01	; 1
    2096:	e0 df       	rcall	.-64     	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    2098:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    209a:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
    209c:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    209e:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20a0:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20a2:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    20a4:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20a6:	01 96       	adiw	r24, 0x01	; 1
    20a8:	d7 df       	rcall	.-82     	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20aa:	f7 01       	movw	r30, r14
    20ac:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20ae:	c7 01       	movw	r24, r14
    20b0:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    20b2:	0f 90       	pop	r0
    20b4:	df 91       	pop	r29
    20b6:	cf 91       	pop	r28
    20b8:	1f 91       	pop	r17
    20ba:	0f 91       	pop	r16
    20bc:	ff 90       	pop	r15
    20be:	ef 90       	pop	r14
    20c0:	08 95       	ret

000020c2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20c2:	af 92       	push	r10
    20c4:	bf 92       	push	r11
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    20c6:	cf 92       	push	r12
    20c8:	df 92       	push	r13
    20ca:	ef 92       	push	r14
    20cc:	ff 92       	push	r15
    20ce:	0f 93       	push	r16
    20d0:	1f 93       	push	r17
    20d2:	cf 93       	push	r28
    20d4:	df 93       	push	r29
    20d6:	00 d0       	rcall	.+0      	; 0x20d8 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    20d8:	cd b7       	in	r28, 0x3d	; 61
    20da:	de b7       	in	r29, 0x3e	; 62
    20dc:	8b 01       	movw	r16, r22
    20de:	6b 01       	movw	r12, r22
    20e0:	24 e0       	ldi	r18, 0x04	; 4
    20e2:	c2 0e       	add	r12, r18
    20e4:	d1 1c       	adc	r13, r1
    20e6:	7b 01       	movw	r14, r22
    20e8:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20ea:	a6 1a       	sub	r10, r22
    20ec:	b7 0a       	sbc	r11, r23
    20ee:	c5 01       	movw	r24, r10
    20f0:	8e 0d       	add	r24, r14
    20f2:	9f 1d       	adc	r25, r15
    20f4:	89 83       	std	Y+1, r24	; 0x01
    20f6:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20f8:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20fa:	01 96       	adiw	r24, 0x01	; 1
    20fc:	ad df       	rcall	.-166    	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20fe:	f7 01       	movw	r30, r14
    2100:	81 93       	st	Z+, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2102:	7f 01       	movw	r14, r30
    2104:	ec 15       	cp	r30, r12
    2106:	fd 05       	cpc	r31, r13
    2108:	91 f7       	brne	.-28     	; 0x20ee <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    210a:	c8 01       	movw	r24, r16
    210c:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    210e:	0f 90       	pop	r0
    2110:	df 91       	pop	r29
    2112:	cf 91       	pop	r28
    2114:	1f 91       	pop	r17
    2116:	0f 91       	pop	r16
    2118:	ff 90       	pop	r15
    211a:	ef 90       	pop	r14
    211c:	df 90       	pop	r13
    211e:	cf 90       	pop	r12
    2120:	bf 90       	pop	r11
    2122:	af 90       	pop	r10
    2124:	08 95       	ret

00002126 <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    2126:	cf 93       	push	r28
    2128:	df 93       	push	r29
    212a:	00 d0       	rcall	.+0      	; 0x212c <EEPROMClass::read(int) [clone .isra.0]+0x6>
    212c:	cd b7       	in	r28, 0x3d	; 61
    212e:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    2130:	89 83       	std	Y+1, r24	; 0x01
    2132:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2134:	ce 01       	movw	r24, r28
    2136:	01 96       	adiw	r24, 0x01	; 1
    2138:	8f df       	rcall	.-226    	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
    213a:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    213c:	0f 90       	pop	r0
    213e:	df 91       	pop	r29
    2140:	cf 91       	pop	r28
    2142:	08 95       	ret

00002144 <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    2144:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2146:	ff 27       	eor	r31, r31
    2148:	90 fd       	sbrc	r25, 0
    214a:	12 c0       	rjmp	.+36     	; 0x2170 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    214c:	80 e0       	ldi	r24, 0x00	; 0
    214e:	94 e1       	ldi	r25, 0x14	; 20
    2150:	e8 2b       	or	r30, r24
    2152:	f9 2b       	or	r31, r25
    2154:	60 83       	st	Z, r22
    2156:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    2158:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  cli();
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    215a:	9d e9       	ldi	r25, 0x9D	; 157
    215c:	23 e0       	ldi	r18, 0x03	; 3
    215e:	94 bf       	out	0x34, r25	; 52
    2160:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:41
  SREG = oldSREG;
    2164:	8f bf       	out	0x3f, r24	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    2166:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    216a:	81 fd       	sbrc	r24, 1
    216c:	fc cf       	rjmp	.-8      	; 0x2166 <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    216e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	93 e1       	ldi	r25, 0x13	; 19
    2174:	ed cf       	rjmp	.-38     	; 0x2150 <nvm_write_byte(unsigned int, unsigned char)+0xc>

00002176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>:
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    2176:	e6 cf       	rjmp	.-52     	; 0x2144 <nvm_write_byte(unsigned int, unsigned char)>

00002178 <EERef::update(unsigned char)>:
update():
    2178:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    217a:	cf 93       	push	r28
    217c:	df 93       	push	r29
    217e:	ec 01       	movw	r28, r24
    2180:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    2182:	6a df       	rcall	.-300    	; 0x2058 <EERef::operator*() const>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2184:	81 17       	cp	r24, r17
    2186:	21 f0       	breq	.+8      	; 0x2190 <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2188:	61 2f       	mov	r22, r17
    218a:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    218c:	99 81       	ldd	r25, Y+1	; 0x01
    218e:	da df       	rcall	.-76     	; 0x2144 <nvm_write_byte(unsigned int, unsigned char)>
update():
    2190:	ce 01       	movw	r24, r28
    2192:	df 91       	pop	r29
    2194:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2196:	1f 91       	pop	r17
    2198:	08 95       	ret

0000219a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    219a:	ef 92       	push	r14
    219c:	ff 92       	push	r15
    219e:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    21a0:	1f 93       	push	r17
    21a2:	cf 93       	push	r28
    21a4:	df 93       	push	r29
    21a6:	00 d0       	rcall	.+0      	; 0x21a8 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0xe>
    21a8:	cd b7       	in	r28, 0x3d	; 61
    21aa:	de b7       	in	r29, 0x3e	; 62
    21ac:	83 e0       	ldi	r24, 0x03	; 3
    21ae:	e8 2e       	mov	r14, r24
    21b0:	89 e2       	ldi	r24, 0x29	; 41
    21b2:	f8 2e       	mov	r15, r24
    21b4:	06 e4       	ldi	r16, 0x46	; 70
    21b6:	10 e0       	ldi	r17, 0x00	; 0
    21b8:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    21ba:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21bc:	f7 01       	movw	r30, r14
    21be:	61 91       	ld	r22, Z+
    21c0:	7f 01       	movw	r14, r30
    21c2:	ce 01       	movw	r24, r28
    21c4:	01 96       	adiw	r24, 0x01	; 1
    21c6:	d8 df       	rcall	.-80     	; 0x2178 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    21c8:	0f 5f       	subi	r16, 0xFF	; 255
    21ca:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    21cc:	0a 34       	cpi	r16, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    21ce:	11 05       	cpc	r17, r1
    21d0:	99 f7       	brne	.-26     	; 0x21b8 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21d2:	83 e0       	ldi	r24, 0x03	; 3
    21d4:	99 e2       	ldi	r25, 0x29	; 41
    21d6:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    21d8:	0f 90       	pop	r0
    21da:	df 91       	pop	r29
    21dc:	cf 91       	pop	r28
    21de:	1f 91       	pop	r17
    21e0:	0f 91       	pop	r16
    21e2:	ff 90       	pop	r15
    21e4:	ef 90       	pop	r14
    21e6:	08 95       	ret

000021e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    21e8:	af 92       	push	r10
    21ea:	bf 92       	push	r11
    21ec:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    21ee:	df 92       	push	r13
    21f0:	ef 92       	push	r14
    21f2:	ff 92       	push	r15
    21f4:	0f 93       	push	r16
    21f6:	1f 93       	push	r17
    21f8:	cf 93       	push	r28
    21fa:	df 93       	push	r29
    21fc:	00 d0       	rcall	.+0      	; 0x21fe <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x16>
    21fe:	cd b7       	in	r28, 0x3d	; 61
    2200:	de b7       	in	r29, 0x3e	; 62
    2202:	8b 01       	movw	r16, r22
    2204:	6b 01       	movw	r12, r22
    2206:	24 e0       	ldi	r18, 0x04	; 4
    2208:	c2 0e       	add	r12, r18
    220a:	d1 1c       	adc	r13, r1
    220c:	7b 01       	movw	r14, r22
    220e:	5c 01       	movw	r10, r24
    2210:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2212:	b7 0a       	sbc	r11, r23
    2214:	c5 01       	movw	r24, r10
    2216:	8e 0d       	add	r24, r14
    2218:	9f 1d       	adc	r25, r15
    221a:	89 83       	std	Y+1, r24	; 0x01
    221c:	9a 83       	std	Y+2, r25	; 0x02
    221e:	f7 01       	movw	r30, r14
    2220:	61 91       	ld	r22, Z+
    2222:	7f 01       	movw	r14, r30
    2224:	ce 01       	movw	r24, r28
    2226:	01 96       	adiw	r24, 0x01	; 1
    2228:	a7 df       	rcall	.-178    	; 0x2178 <EERef::update(unsigned char)>
    222a:	ec 14       	cp	r14, r12
    222c:	fd 04       	cpc	r15, r13
    222e:	91 f7       	brne	.-28     	; 0x2214 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x2c>
    2230:	c8 01       	movw	r24, r16
    2232:	0f 90       	pop	r0
    2234:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2236:	df 91       	pop	r29
    2238:	cf 91       	pop	r28
    223a:	1f 91       	pop	r17
    223c:	0f 91       	pop	r16
    223e:	ff 90       	pop	r15
    2240:	ef 90       	pop	r14
    2242:	df 90       	pop	r13
    2244:	cf 90       	pop	r12
    2246:	bf 90       	pop	r11
    2248:	af 90       	pop	r10
    224a:	08 95       	ret

0000224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    224c:	ef 92       	push	r14
    224e:	ff 92       	push	r15
    2250:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2252:	1f 93       	push	r17
    2254:	cf 93       	push	r28
    2256:	df 93       	push	r29
    2258:	00 d0       	rcall	.+0      	; 0x225a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]+0xe>
    225a:	cd b7       	in	r28, 0x3d	; 61
    225c:	de b7       	in	r29, 0x3e	; 62
    225e:	8c 01       	movw	r16, r24
    2260:	7b 01       	movw	r14, r22
    2262:	89 83       	std	Y+1, r24	; 0x01
    2264:	9a 83       	std	Y+2, r25	; 0x02
    2266:	fb 01       	movw	r30, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2268:	60 81       	ld	r22, Z
    226a:	ce 01       	movw	r24, r28
    226c:	01 96       	adiw	r24, 0x01	; 1
    226e:	84 df       	rcall	.-248    	; 0x2178 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    2270:	0f 5f       	subi	r16, 0xFF	; 255
    2272:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    2274:	09 83       	std	Y+1, r16	; 0x01
    2276:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2278:	f7 01       	movw	r30, r14
    227a:	61 81       	ldd	r22, Z+1	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    227c:	ce 01       	movw	r24, r28
    227e:	01 96       	adiw	r24, 0x01	; 1
    2280:	7b df       	rcall	.-266    	; 0x2178 <EERef::update(unsigned char)>
    2282:	c7 01       	movw	r24, r14
    2284:	0f 90       	pop	r0
    2286:	0f 90       	pop	r0
    2288:	df 91       	pop	r29
    228a:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    228c:	1f 91       	pop	r17
    228e:	0f 91       	pop	r16
    2290:	ff 90       	pop	r15
    2292:	ef 90       	pop	r14
    2294:	08 95       	ret

00002296 <MODE_CLICK()>:
MODE_CLICK():
    2296:	2f 92       	push	r2
    2298:	3f 92       	push	r3
    229a:	4f 92       	push	r4
    229c:	5f 92       	push	r5
    229e:	6f 92       	push	r6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:115
     REP++;
    }
}

void MODE_CLICK()
{
    22a0:	7f 92       	push	r7
    22a2:	8f 92       	push	r8
    22a4:	9f 92       	push	r9
    22a6:	af 92       	push	r10
    22a8:	bf 92       	push	r11
    22aa:	cf 92       	push	r12
    22ac:	df 92       	push	r13
    22ae:	ef 92       	push	r14
    22b0:	ff 92       	push	r15
    22b2:	0f 93       	push	r16
    22b4:	1f 93       	push	r17
    22b6:	cf 93       	push	r28
    22b8:	df 93       	push	r29
    22ba:	00 d0       	rcall	.+0      	; 0x22bc <MODE_CLICK()+0x26>
    22bc:	1f 92       	push	r1
    22be:	cd b7       	in	r28, 0x3d	; 61
    22c0:	de b7       	in	r29, 0x3e	; 62
    22c2:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
    22c6:	81 11       	cpse	r24, r1
    22c8:	58 c0       	rjmp	.+176    	; 0x237a <MODE_CLICK()+0xe4>
    22ca:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:116
  if(checkTempRaised==0)
    22ce:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
    22d2:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:118
  {
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    22d4:	6a c0       	rjmp	.+212    	; 0x23aa <MODE_CLICK()+0x114>
    22d6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:119
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    22da:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:121
  {
    i = 0;
    22de:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    22e2:	84 30       	cpi	r24, 0x04	; 4
    22e4:	31 f4       	brne	.+12     	; 0x22f2 <MODE_CLICK()+0x5c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:123
         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    22e6:	20 91 9a 28 	lds	r18, 0x289A	; 0x80289a <SET_MIN>
    22ea:	30 91 9b 28 	lds	r19, 0x289B	; 0x80289b <SET_MIN+0x1>
    22ee:	23 2b       	or	r18, r19
    22f0:	51 f0       	breq	.+20     	; 0x2306 <MODE_CLICK()+0x70>
    22f2:	90 91 4c 29 	lds	r25, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    22f6:	99 23       	and	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:124
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    22f8:	09 f4       	brne	.+2      	; 0x22fc <MODE_CLICK()+0x66>
    22fa:	55 c0       	rjmp	.+170    	; 0x23a6 <MODE_CLICK()+0x110>
    22fc:	81 11       	cpse	r24, r1
    22fe:	53 c0       	rjmp	.+166    	; 0x23a6 <MODE_CLICK()+0x110>
    2300:	82 e0       	ldi	r24, 0x02	; 2
    2302:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:127
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    2306:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:129
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    230a:	85 30       	cpi	r24, 0x05	; 5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:301
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    230c:	0c f4       	brge	.+2      	; 0x2310 <MODE_CLICK()+0x7a>
    230e:	6a c3       	rjmp	.+1748   	; 0x29e4 <MODE_CLICK()+0x74e>
    2310:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    2314:	88 23       	and	r24, r24
    2316:	01 f1       	breq	.+64     	; 0x2358 <MODE_CLICK()+0xc2>
    2318:	85 e0       	ldi	r24, 0x05	; 5
    231a:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:303
   {
      ENTER_BUT = 5;  
    231e:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    2322:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:304
      if(PUMP_FLAG)   PUMP_FLAG=0;
    2324:	09 f4       	brne	.+2      	; 0x2328 <MODE_CLICK()+0x92>
    2326:	5a c3       	rjmp	.+1716   	; 0x29dc <MODE_CLICK()+0x746>
    2328:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <PUMP_FLAG>
Save_Pump_Data():
    232c:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    2330:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Eeprom.cpp:63
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    2332:	12 c0       	rjmp	.+36     	; 0x2358 <MODE_CLICK()+0xc2>
    2334:	61 e0       	ldi	r22, 0x01	; 1
    2336:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Eeprom.cpp:65
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    233a:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
    233e:	89 2b       	or	r24, r25
    2340:	09 f4       	brne	.+2      	; 0x2344 <MODE_CLICK()+0xae>
    2342:	60 e0       	ldi	r22, 0x00	; 0
    2344:	60 93 9c 28 	sts	0x289C, r22	; 0x80289c <STIR_VALUE_SET>
    2348:	90 e0       	ldi	r25, 0x00	; 0
    234a:	80 e0       	ldi	r24, 0x00	; 0
    234c:	14 df       	rcall	.-472    	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
MODE_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/Eeprom.cpp:66
      EEPROM.write(0, STIR_VALUE_SET);
    234e:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    2352:	85 30       	cpi	r24, 0x05	; 5
    2354:	0c f4       	brge	.+2      	; 0x2358 <MODE_CLICK()+0xc2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:309
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); //Siddhesh
   }
   
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    2356:	46 c3       	rjmp	.+1676   	; 0x29e4 <MODE_CLICK()+0x74e>
    2358:	00 91 b2 28 	lds	r16, 0x28B2	; 0x8028b2 <REP1>
    235c:	10 91 b3 28 	lds	r17, 0x28B3	; 0x8028b3 <REP1+0x1>
    2360:	10 16       	cp	r1, r16
    2362:	11 06       	cpc	r1, r17
    2364:	0c f4       	brge	.+2      	; 0x2368 <MODE_CLICK()+0xd2>
    2366:	3e c3       	rjmp	.+1660   	; 0x29e4 <MODE_CLICK()+0x74e>
    2368:	88 ee       	ldi	r24, 0xE8	; 232
    236a:	93 e0       	ldi	r25, 0x03	; 3
    236c:	37 d9       	rcall	.-3474   	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    236e:	0f 5f       	subi	r16, 0xFF	; 255
    2370:	1f 4f       	sbci	r17, 0xFF	; 255
    2372:	00 93 b2 28 	sts	0x28B2, r16	; 0x8028b2 <REP1>
    2376:	10 93 b3 28 	sts	0x28B3, r17	; 0x8028b3 <REP1+0x1>
    237a:	23 96       	adiw	r28, 0x03	; 3
    237c:	cd bf       	out	0x3d, r28	; 61
    237e:	de bf       	out	0x3e, r29	; 62
    2380:	df 91       	pop	r29
    2382:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:312
   else                           Tick.BUZZ_INTERVAL(50);               //short pree   
}
}
    2384:	1f 91       	pop	r17
    2386:	0f 91       	pop	r16
    2388:	ff 90       	pop	r15
    238a:	ef 90       	pop	r14
    238c:	df 90       	pop	r13
    238e:	cf 90       	pop	r12
    2390:	bf 90       	pop	r11
    2392:	af 90       	pop	r10
    2394:	9f 90       	pop	r9
    2396:	8f 90       	pop	r8
    2398:	7f 90       	pop	r7
    239a:	6f 90       	pop	r6
    239c:	5f 90       	pop	r5
    239e:	4f 90       	pop	r4
    23a0:	3f 90       	pop	r3
    23a2:	2f 90       	pop	r2
    23a4:	08 95       	ret
    23a6:	8f 5f       	subi	r24, 0xFF	; 255
    23a8:	ac cf       	rjmp	.-168    	; 0x2302 <MODE_CLICK()+0x6c>
    23aa:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    23ae:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:129
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    23b2:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    23b6:	81 11       	cpse	r24, r1
    23b8:	02 c1       	rjmp	.+516    	; 0x25be <MODE_CLICK()+0x328>
    23ba:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:134
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    23be:	90 e0       	ldi	r25, 0x00	; 0
    23c0:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_LONG_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:136
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; //
    23c4:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_LONG_VALUE+0x1>
    23c8:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    23cc:	2b 83       	std	Y+3, r18	; 0x03
    23ce:	82 2f       	mov	r24, r18
    23d0:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:137
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    23d2:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_LONG_VALUE+0x2>
    23d6:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_LONG_VALUE+0x3>
    23da:	80 91 a3 28 	lds	r24, 0x28A3	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    23de:	90 e0       	ldi	r25, 0x00	; 0
    23e0:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:138
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    23e4:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x9>
    23e8:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <SET_LONG_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:140
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
    23f2:	90 93 25 29 	sts	0x2925, r25	; 0x802925 <SET_LONG_VALUE+0xb>
    23f6:	21 11       	cpse	r18, r1
    23f8:	99 c0       	rjmp	.+306    	; 0x252c <MODE_CLICK()+0x296>
    23fa:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
    23fe:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:142
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    2402:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_LONG_VALUE+0x4>
    2406:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_LONG_VALUE+0x5>
    240a:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
    240e:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    2412:	80 93 26 29 	sts	0x2926, r24	; 0x802926 <SET_LONG_VALUE+0xc>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:145
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    2416:	90 93 27 29 	sts	0x2927, r25	; 0x802927 <SET_LONG_VALUE+0xd>
    241a:	c0 90 fb 28 	lds	r12, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    241e:	d0 90 fc 28 	lds	r13, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2422:	e0 90 fd 28 	lds	r14, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    2426:	f0 90 fe 28 	lds	r15, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    242a:	c7 01       	movw	r24, r14
    242c:	b6 01       	movw	r22, r12
    242e:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2432:	4b 01       	movw	r8, r22
    2434:	20 e0       	ldi	r18, 0x00	; 0
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	40 e2       	ldi	r20, 0x20	; 32
    243a:	51 e4       	ldi	r21, 0x41	; 65
    243c:	c7 01       	movw	r24, r14
    243e:	b6 01       	movw	r22, r12
    2440:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    2444:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2448:	2b 01       	movw	r4, r22
    244a:	cb 01       	movw	r24, r22
    244c:	6a e0       	ldi	r22, 0x0A	; 10
    244e:	70 e0       	ldi	r23, 0x00	; 0
    2450:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
    2454:	1c 01       	movw	r2, r24
    2456:	8b 81       	ldd	r24, Y+3	; 0x03
    2458:	81 11       	cpse	r24, r1
    245a:	7e c0       	rjmp	.+252    	; 0x2558 <MODE_CLICK()+0x2c2>
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:146
      if (!DEGREE_VALUE_SET)
    2460:	48 ec       	ldi	r20, 0xC8	; 200
    2462:	52 e4       	ldi	r21, 0x42	; 66
    2464:	c7 01       	movw	r24, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:148
      {
        if(TEMP_DEG_RAW<100)
    2466:	b6 01       	movw	r22, r12
    2468:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    246c:	87 ff       	sbrs	r24, 7
    246e:	67 c0       	rjmp	.+206    	; 0x253e <MODE_CLICK()+0x2a8>
    2470:	80 92 28 29 	sts	0x2928, r8	; 0x802928 <SET_LONG_VALUE+0xe>
    2474:	90 92 29 29 	sts	0x2929, r9	; 0x802929 <SET_LONG_VALUE+0xf>
    2478:	40 92 32 28 	sts	0x2832, r4	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:150
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    247c:	50 92 33 28 	sts	0x2833, r5	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    2480:	20 92 2a 29 	sts	0x292A, r2	; 0x80292a <SET_LONG_VALUE+0x10>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:151
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    2484:	30 92 2b 29 	sts	0x292B, r3	; 0x80292b <SET_LONG_VALUE+0x11>
    2488:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:153
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    248c:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    2490:	80 93 2c 29 	sts	0x292C, r24	; 0x80292c <SET_LONG_VALUE+0x12>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:166
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    2494:	90 93 2d 29 	sts	0x292D, r25	; 0x80292d <SET_LONG_VALUE+0x13>
    2498:	80 92 30 29 	sts	0x2930, r8	; 0x802930 <SET_LONG_VALUE+0x16>
    249c:	90 92 31 29 	sts	0x2931, r9	; 0x802931 <SET_LONG_VALUE+0x17>
    24a0:	20 92 32 29 	sts	0x2932, r2	; 0x802932 <SET_LONG_VALUE+0x18>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:167
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    24a4:	30 92 33 29 	sts	0x2933, r3	; 0x802933 <SET_LONG_VALUE+0x19>
    24a8:	0c 30       	cpi	r16, 0x0C	; 12
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:170
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    24aa:	11 05       	cpc	r17, r1
    24ac:	09 f0       	breq	.+2      	; 0x24b0 <MODE_CLICK()+0x21a>
    24ae:	6d c0       	rjmp	.+218    	; 0x258a <MODE_CLICK()+0x2f4>
    24b0:	c0 92 2a 28 	sts	0x282A, r12	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:172
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    24b4:	d0 92 2b 28 	sts	0x282B, r13	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    24b8:	e0 92 2c 28 	sts	0x282C, r14	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    24bc:	f0 92 2d 28 	sts	0x282D, r15	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    24c0:	20 e0       	ldi	r18, 0x00	; 0
    24c2:	30 e0       	ldi	r19, 0x00	; 0
    24c4:	48 ec       	ldi	r20, 0xC8	; 200
    24c6:	52 e4       	ldi	r21, 0x42	; 66
    24c8:	c7 01       	movw	r24, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:175
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    24ca:	b6 01       	movw	r22, r12
    24cc:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    24d0:	87 ff       	sbrs	r24, 7
    24d2:	68 c0       	rjmp	.+208    	; 0x25a4 <MODE_CLICK()+0x30e>
    24d4:	80 92 34 29 	sts	0x2934, r8	; 0x802934 <SET_LONG_VALUE+0x1a>
    24d8:	90 92 35 29 	sts	0x2935, r9	; 0x802935 <SET_LONG_VALUE+0x1b>
    24dc:	20 92 36 29 	sts	0x2936, r2	; 0x802936 <SET_LONG_VALUE+0x1c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:177
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    24e0:	30 92 37 29 	sts	0x2937, r3	; 0x802937 <SET_LONG_VALUE+0x1d>
    24e4:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:179
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <SET_LONG_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:187
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    24ee:	90 93 21 29 	sts	0x2921, r25	; 0x802921 <SET_LONG_VALUE+0x7>
    24f2:	01 31       	cpi	r16, 0x11	; 17
    24f4:	11 05       	cpc	r17, r1
    24f6:	21 f4       	brne	.+8      	; 0x2500 <MODE_CLICK()+0x26a>
    24f8:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:188
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    24fc:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
    2500:	2b 81       	ldd	r18, Y+3	; 0x03
    2502:	21 11       	cpse	r18, r1
    2504:	09 c0       	rjmp	.+18     	; 0x2518 <MODE_CLICK()+0x282>
    2506:	08 30       	cpi	r16, 0x08	; 8
    2508:	11 05       	cpc	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:190
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    250a:	31 f4       	brne	.+12     	; 0x2518 <MODE_CLICK()+0x282>
    250c:	87 e0       	ldi	r24, 0x07	; 7
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2514:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	80 93 a7 28 	sts	0x28A7, r24	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    251e:	8a e1       	ldi	r24, 0x1A	; 26
    2520:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:192
      
      Mode_Button_Single_Press_In_Settings = 1;
    2522:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    2526:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:299
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    252a:	ed ce       	rjmp	.-550    	; 0x2306 <MODE_CLICK()+0x70>
    252c:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    2530:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    2534:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x26>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:143
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    2538:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x27>
    253c:	66 cf       	rjmp	.-308    	; 0x240a <MODE_CLICK()+0x174>
    253e:	83 e6       	ldi	r24, 0x63	; 99
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	80 93 28 29 	sts	0x2928, r24	; 0x802928 <SET_LONG_VALUE+0xe>
    2546:	90 93 29 29 	sts	0x2929, r25	; 0x802929 <SET_LONG_VALUE+0xf>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:157
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    254a:	89 e0       	ldi	r24, 0x09	; 9
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x10>
    2552:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x11>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_V4.01/WLC_WLS_V4.01.ino:158
          SET_LONG_VALUE[Cal1_Point] = 9;
    2556:	98 cf       	rjmp	.-208    	; 0x2488 <MODE_CLICK()+0x1f2>
    2558:	40 90 d8 28 	lds	r4, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
    255c:	50 90 d9 28 	lds	r5, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    2560:	60 90 da 28 	lds	r6, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
    2564:	70 90 db 28 	lds	r7, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
    2568:	c3 01       	movw	r24, r6
    256a:	b2 01       	movw	r22, r4
    256c:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2570:	60 93 42 29 	sts	0x2942, r22	; 0x802942 <SET_LONG_VALUE+0x28>
    2574:	70 93 43 29 	sts	0x2943, r23	; 0x802943 <SET_LONG_VALUE+0x29>
    2578:	40 92 2e 28 	sts	0x282E, r4	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    257c:	50 92 2f 28 	sts	0x282F, r5	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    2580:	60 92 30 28 	sts	0x2830, r6	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    2584:	70 92 31 28 	sts	0x2831, r7	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    2588:	7f cf       	rjmp	.-258    	; 0x2488 <MODE_CLICK()+0x1f2>
    258a:	0e 30       	cpi	r16, 0x0E	; 14
    258c:	11 05       	cpc	r17, r1
    258e:	09 f0       	breq	.+2      	; 0x2592 <MODE_CLICK()+0x2fc>
    2590:	97 cf       	rjmp	.-210    	; 0x24c0 <MODE_CLICK()+0x22a>
    2592:	c0 92 26 28 	sts	0x2826, r12	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    2596:	d0 92 27 28 	sts	0x2827, r13	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    259a:	e0 92 28 28 	sts	0x2828, r14	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    259e:	f0 92 29 28 	sts	0x2829, r15	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    25a2:	8e cf       	rjmp	.-228    	; 0x24c0 <MODE_CLICK()+0x22a>
    25a4:	83 e6       	ldi	r24, 0x63	; 99
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	80 93 34 29 	sts	0x2934, r24	; 0x802934 <SET_LONG_VALUE+0x1a>
    25ac:	90 93 35 29 	sts	0x2935, r25	; 0x802935 <SET_LONG_VALUE+0x1b>
    25b0:	89 e0       	ldi	r24, 0x09	; 9
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	80 93 36 29 	sts	0x2936, r24	; 0x802936 <SET_LONG_VALUE+0x1c>
    25b8:	90 93 37 29 	sts	0x2937, r25	; 0x802937 <SET_LONG_VALUE+0x1d>
    25bc:	93 cf       	rjmp	.-218    	; 0x24e4 <MODE_CLICK()+0x24e>
    25be:	0f 30       	cpi	r16, 0x0F	; 15
    25c0:	11 05       	cpc	r17, r1
    25c2:	08 f5       	brcc	.+66     	; 0x2606 <MODE_CLICK()+0x370>
    25c4:	f8 01       	movw	r30, r16
    25c6:	e9 51       	subi	r30, 0x19	; 25
    25c8:	fd 4e       	sbci	r31, 0xED	; 237
    25ca:	0c 94 c5 38 	jmp	0x718a	; 0x718a <__tablejump2__>
    25ce:	f6 12       	cpse	r15, r22
    25d0:	23 13       	cpse	r18, r19
    25d2:	30 13       	cpse	r19, r16
    25d4:	cf 14       	cp	r12, r15
    25d6:	4d 13       	cpse	r20, r29
    25d8:	5a 13       	cpse	r21, r26
    25da:	67 13       	cpse	r22, r23
    25dc:	03 13       	cpse	r16, r19
    25de:	72 13       	cpse	r23, r18
    25e0:	22 14       	cp	r2, r2
    25e2:	30 14       	cp	r3, r0
    25e4:	03 13       	cpse	r16, r19
    25e6:	49 14       	cp	r4, r9
    25e8:	03 13       	cpse	r16, r19
    25ea:	5a 14       	cp	r5, r10
    25ec:	61 e0       	ldi	r22, 0x01	; 1
    25ee:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_LONG_VALUE>
    25f2:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_LONG_VALUE+0x1>
    25f6:	89 2b       	or	r24, r25
    25f8:	09 f4       	brne	.+2      	; 0x25fc <MODE_CLICK()+0x366>
    25fa:	60 e0       	ldi	r22, 0x00	; 0
    25fc:	60 93 9c 28 	sts	0x289C, r22	; 0x80289c <STIR_VALUE_SET>
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	80 e0       	ldi	r24, 0x00	; 0
    2604:	b8 dd       	rcall	.-1168   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2606:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    260a:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    260e:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    2612:	21 11       	cpse	r18, r1
    2614:	03 c0       	rjmp	.+6      	; 0x261c <MODE_CLICK()+0x386>
    2616:	87 30       	cpi	r24, 0x07	; 7
    2618:	91 05       	cpc	r25, r1
    261a:	61 f0       	breq	.+24     	; 0x2634 <MODE_CLICK()+0x39e>
    261c:	9c 01       	movw	r18, r24
    261e:	2d 7f       	andi	r18, 0xFD	; 253
    2620:	29 30       	cpi	r18, 0x09	; 9
    2622:	31 05       	cpc	r19, r1
    2624:	39 f0       	breq	.+14     	; 0x2634 <MODE_CLICK()+0x39e>
    2626:	8d 30       	cpi	r24, 0x0D	; 13
    2628:	91 05       	cpc	r25, r1
    262a:	21 f0       	breq	.+8      	; 0x2634 <MODE_CLICK()+0x39e>
    262c:	81 31       	cpi	r24, 0x11	; 17
    262e:	91 05       	cpc	r25, r1
    2630:	09 f0       	breq	.+2      	; 0x2634 <MODE_CLICK()+0x39e>
    2632:	c7 c1       	rjmp	.+910    	; 0x29c2 <MODE_CLICK()+0x72c>
    2634:	21 e0       	ldi	r18, 0x01	; 1
    2636:	20 93 a7 28 	sts	0x28A7, r18	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    263a:	01 96       	adiw	r24, 0x01	; 1
    263c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2640:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2644:	6c cf       	rjmp	.-296    	; 0x251e <MODE_CLICK()+0x288>
    2646:	61 e0       	ldi	r22, 0x01	; 1
    2648:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_LONG_VALUE+0x2>
    264c:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_LONG_VALUE+0x3>
    2650:	89 2b       	or	r24, r25
    2652:	09 f4       	brne	.+2      	; 0x2656 <MODE_CLICK()+0x3c0>
    2654:	60 e0       	ldi	r22, 0x00	; 0
    2656:	60 93 4c 29 	sts	0x294C, r22	; 0x80294c <DEGREE_VALUE_SET>
    265a:	81 e0       	ldi	r24, 0x01	; 1
    265c:	90 e0       	ldi	r25, 0x00	; 0
    265e:	d2 cf       	rjmp	.-92     	; 0x2604 <MODE_CLICK()+0x36e>
    2660:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    2664:	81 11       	cpse	r24, r1
    2666:	0b c0       	rjmp	.+22     	; 0x267e <MODE_CLICK()+0x3e8>
    2668:	60 91 1e 29 	lds	r22, 0x291E	; 0x80291e <SET_LONG_VALUE+0x4>
    266c:	80 91 1f 29 	lds	r24, 0x291F	; 0x80291f <SET_LONG_VALUE+0x5>
    2670:	60 93 0b 29 	sts	0x290B, r22	; 0x80290b <SAFE_VALUE_SET_DEG>
    2674:	80 93 0c 29 	sts	0x290C, r24	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    2678:	82 e0       	ldi	r24, 0x02	; 2
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	c3 cf       	rjmp	.-122    	; 0x2604 <MODE_CLICK()+0x36e>
    267e:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
    2682:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
    2686:	80 93 09 29 	sts	0x2909, r24	; 0x802909 <SAFE_VALUE_SET_FAH>
    268a:	90 93 0a 29 	sts	0x290A, r25	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    268e:	69 e0       	ldi	r22, 0x09	; 9
    2690:	79 e2       	ldi	r23, 0x29	; 41
    2692:	83 e0       	ldi	r24, 0x03	; 3
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	da dd       	rcall	.-1100   	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    2698:	b6 cf       	rjmp	.-148    	; 0x2606 <MODE_CLICK()+0x370>
    269a:	61 e0       	ldi	r22, 0x01	; 1
    269c:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x8>
    26a0:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x9>
    26a4:	89 2b       	or	r24, r25
    26a6:	09 f4       	brne	.+2      	; 0x26aa <MODE_CLICK()+0x414>
    26a8:	60 e0       	ldi	r22, 0x00	; 0
    26aa:	60 93 a3 28 	sts	0x28A3, r22	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    26ae:	8f e0       	ldi	r24, 0x0F	; 15
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	61 dd       	rcall	.-1342   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    26b4:	61 e0       	ldi	r22, 0x01	; 1
    26b6:	80 91 24 29 	lds	r24, 0x2924	; 0x802924 <SET_LONG_VALUE+0xa>
    26ba:	90 91 25 29 	lds	r25, 0x2925	; 0x802925 <SET_LONG_VALUE+0xb>
    26be:	89 2b       	or	r24, r25
    26c0:	09 f4       	brne	.+2      	; 0x26c4 <MODE_CLICK()+0x42e>
    26c2:	60 e0       	ldi	r22, 0x00	; 0
    26c4:	60 93 07 29 	sts	0x2907, r22	; 0x802907 <select_product_type>
    26c8:	86 e9       	ldi	r24, 0x96	; 150
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	9b cf       	rjmp	.-202    	; 0x2604 <MODE_CLICK()+0x36e>
    26ce:	60 91 26 29 	lds	r22, 0x2926	; 0x802926 <SET_LONG_VALUE+0xc>
    26d2:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0xd>
    26d6:	60 93 d2 28 	sts	0x28D2, r22	; 0x8028d2 <CAL_SELECT_VALUE>
    26da:	80 93 d3 28 	sts	0x28D3, r24	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    26de:	85 e0       	ldi	r24, 0x05	; 5
    26e0:	90 e0       	ldi	r25, 0x00	; 0
    26e2:	90 cf       	rjmp	.-224    	; 0x2604 <MODE_CLICK()+0x36e>
    26e4:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    26e8:	81 11       	cpse	r24, r1
    26ea:	87 c0       	rjmp	.+270    	; 0x27fa <MODE_CLICK()+0x564>
    26ec:	60 91 2a 29 	lds	r22, 0x292A	; 0x80292a <SET_LONG_VALUE+0x10>
    26f0:	70 91 2b 29 	lds	r23, 0x292B	; 0x80292b <SET_LONG_VALUE+0x11>
    26f4:	07 2e       	mov	r0, r23
    26f6:	00 0c       	add	r0, r0
    26f8:	88 0b       	sbc	r24, r24
    26fa:	99 0b       	sbc	r25, r25
    26fc:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	40 e2       	ldi	r20, 0x20	; 32
    2706:	51 e4       	ldi	r21, 0x41	; 65
    2708:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    270c:	6b 01       	movw	r12, r22
    270e:	7c 01       	movw	r14, r24
    2710:	60 91 28 29 	lds	r22, 0x2928	; 0x802928 <SET_LONG_VALUE+0xe>
    2714:	70 91 29 29 	lds	r23, 0x2929	; 0x802929 <SET_LONG_VALUE+0xf>
    2718:	07 2e       	mov	r0, r23
    271a:	00 0c       	add	r0, r0
    271c:	88 0b       	sbc	r24, r24
    271e:	99 0b       	sbc	r25, r25
    2720:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    2724:	9b 01       	movw	r18, r22
    2726:	ac 01       	movw	r20, r24
    2728:	c7 01       	movw	r24, r14
    272a:	b6 01       	movw	r22, r12
    272c:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    2730:	20 e0       	ldi	r18, 0x00	; 0
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	40 e2       	ldi	r20, 0x20	; 32
    2736:	51 e4       	ldi	r21, 0x41	; 65
    2738:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    273c:	6b 01       	movw	r12, r22
    273e:	7c 01       	movw	r14, r24
    2740:	60 91 32 28 	lds	r22, 0x2832	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    2744:	70 91 33 28 	lds	r23, 0x2833	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    2748:	07 2e       	mov	r0, r23
    274a:	00 0c       	add	r0, r0
    274c:	88 0b       	sbc	r24, r24
    274e:	99 0b       	sbc	r25, r25
    2750:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    2754:	9b 01       	movw	r18, r22
    2756:	ac 01       	movw	r20, r24
    2758:	c7 01       	movw	r24, r14
    275a:	b6 01       	movw	r22, r12
    275c:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    2760:	20 e0       	ldi	r18, 0x00	; 0
    2762:	30 e0       	ldi	r19, 0x00	; 0
    2764:	40 e2       	ldi	r20, 0x20	; 32
    2766:	51 e4       	ldi	r21, 0x41	; 65
    2768:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    276c:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
    2770:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
    2774:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
    2778:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
    277c:	81 e0       	ldi	r24, 0x01	; 1
    277e:	80 93 e1 28 	sts	0x28E1, r24	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    2782:	10 92 dc 28 	sts	0x28DC, r1	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    2786:	80 90 e2 28 	lds	r8, 0x28E2	; 0x8028e2 <ERROR_CAL>
    278a:	90 90 e3 28 	lds	r9, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
    278e:	a0 90 e4 28 	lds	r10, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
    2792:	b0 90 e5 28 	lds	r11, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
    2796:	20 e0       	ldi	r18, 0x00	; 0
    2798:	30 e0       	ldi	r19, 0x00	; 0
    279a:	40 e2       	ldi	r20, 0x20	; 32
    279c:	51 e4       	ldi	r21, 0x41	; 65
    279e:	c5 01       	movw	r24, r10
    27a0:	b4 01       	movw	r22, r8
    27a2:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    27a6:	6b 01       	movw	r12, r22
    27a8:	7c 01       	movw	r14, r24
    27aa:	20 e0       	ldi	r18, 0x00	; 0
    27ac:	30 e0       	ldi	r19, 0x00	; 0
    27ae:	a9 01       	movw	r20, r18
    27b0:	c5 01       	movw	r24, r10
    27b2:	b4 01       	movw	r22, r8
    27b4:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    27b8:	87 ff       	sbrs	r24, 7
    27ba:	41 c0       	rjmp	.+130    	; 0x283e <MODE_CLICK()+0x5a8>
    27bc:	81 e0       	ldi	r24, 0x01	; 1
    27be:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <SIGN>
    27c2:	f7 fa       	bst	r15, 7
    27c4:	f0 94       	com	r15
    27c6:	f7 f8       	bld	r15, 7
    27c8:	f0 94       	com	r15
    27ca:	c0 92 03 29 	sts	0x2903, r12	; 0x802903 <ERROR_CAL1>
    27ce:	d0 92 04 29 	sts	0x2904, r13	; 0x802904 <ERROR_CAL1+0x1>
    27d2:	e0 92 05 29 	sts	0x2905, r14	; 0x802905 <ERROR_CAL1+0x2>
    27d6:	f0 92 06 29 	sts	0x2906, r15	; 0x802906 <ERROR_CAL1+0x3>
    27da:	df dc       	rcall	.-1602   	; 0x219a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    27dc:	60 91 e6 28 	lds	r22, 0x28E6	; 0x8028e6 <SIGN>
    27e0:	87 e0       	ldi	r24, 0x07	; 7
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	c8 dc       	rcall	.-1648   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27e6:	60 91 e1 28 	lds	r22, 0x28E1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    27ea:	88 e0       	ldi	r24, 0x08	; 8
    27ec:	90 e0       	ldi	r25, 0x00	; 0
    27ee:	c3 dc       	rcall	.-1658   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27f0:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    27f4:	89 e0       	ldi	r24, 0x09	; 9
    27f6:	90 e0       	ldi	r25, 0x00	; 0
    27f8:	05 cf       	rjmp	.-502    	; 0x2604 <MODE_CLICK()+0x36e>
    27fa:	60 91 42 29 	lds	r22, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
    27fe:	70 91 43 29 	lds	r23, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
    2802:	07 2e       	mov	r0, r23
    2804:	00 0c       	add	r0, r0
    2806:	88 0b       	sbc	r24, r24
    2808:	99 0b       	sbc	r25, r25
    280a:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    280e:	20 91 2e 28 	lds	r18, 0x282E	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    2812:	30 91 2f 28 	lds	r19, 0x282F	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    2816:	40 91 30 28 	lds	r20, 0x2830	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    281a:	50 91 31 28 	lds	r21, 0x2831	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    281e:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    2822:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
    2826:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
    282a:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
    282e:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
    2832:	10 92 e1 28 	sts	0x28E1, r1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    2836:	81 e0       	ldi	r24, 0x01	; 1
    2838:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    283c:	a4 cf       	rjmp	.-184    	; 0x2786 <MODE_CLICK()+0x4f0>
    283e:	10 92 e6 28 	sts	0x28E6, r1	; 0x8028e6 <SIGN>
    2842:	c3 cf       	rjmp	.-122    	; 0x27ca <MODE_CLICK()+0x534>
    2844:	80 91 2c 29 	lds	r24, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    2848:	90 91 2d 29 	lds	r25, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    284c:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    2850:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    2854:	0a 96       	adiw	r24, 0x0a	; 10
    2856:	80 93 2e 29 	sts	0x292E, r24	; 0x80292e <SET_LONG_VALUE+0x14>
    285a:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <SET_LONG_VALUE+0x15>
    285e:	d3 ce       	rjmp	.-602    	; 0x2606 <MODE_CLICK()+0x370>
    2860:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    2864:	90 91 2f 29 	lds	r25, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    2868:	80 93 43 28 	sts	0x2843, r24	; 0x802843 <HIGH_CAL_VALUE_SET>
    286c:	90 93 44 28 	sts	0x2844, r25	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    2870:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2874:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2878:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    287c:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2880:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    2884:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2888:	a0 93 2c 28 	sts	0x282C, r26	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    288c:	b0 93 2d 28 	sts	0x282D, r27	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    2890:	ba ce       	rjmp	.-652    	; 0x2606 <MODE_CLICK()+0x370>
    2892:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2896:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    289a:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    289e:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    28a2:	80 93 26 28 	sts	0x2826, r24	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    28a6:	90 93 27 28 	sts	0x2827, r25	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    28aa:	a0 93 28 28 	sts	0x2828, r26	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    28ae:	b0 93 29 28 	sts	0x2829, r27	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    28b2:	a9 ce       	rjmp	.-686    	; 0x2606 <MODE_CLICK()+0x370>
    28b4:	20 e0       	ldi	r18, 0x00	; 0
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	40 e2       	ldi	r20, 0x20	; 32
    28ba:	51 e4       	ldi	r21, 0x41	; 65
    28bc:	60 91 2a 28 	lds	r22, 0x282A	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    28c0:	70 91 2b 28 	lds	r23, 0x282B	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    28c4:	80 91 2c 28 	lds	r24, 0x282C	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    28c8:	90 91 2d 28 	lds	r25, 0x282D	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    28cc:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    28d0:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    28d4:	60 93 ca 28 	sts	0x28CA, r22	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
    28d8:	70 93 cb 28 	sts	0x28CB, r23	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
    28dc:	80 93 cc 28 	sts	0x28CC, r24	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
    28e0:	90 93 cd 28 	sts	0x28CD, r25	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
    28e4:	20 e0       	ldi	r18, 0x00	; 0
    28e6:	30 e0       	ldi	r19, 0x00	; 0
    28e8:	40 e2       	ldi	r20, 0x20	; 32
    28ea:	51 e4       	ldi	r21, 0x41	; 65
    28ec:	60 91 26 28 	lds	r22, 0x2826	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    28f0:	70 91 27 28 	lds	r23, 0x2827	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    28f4:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    28f8:	90 91 29 28 	lds	r25, 0x2829	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    28fc:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    2900:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2904:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
    2908:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    290c:	80 93 c8 28 	sts	0x28C8, r24	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    2910:	90 93 c9 28 	sts	0x28C9, r25	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    2914:	6a ec       	ldi	r22, 0xCA	; 202
    2916:	78 e2       	ldi	r23, 0x28	; 40
    2918:	80 e5       	ldi	r24, 0x50	; 80
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	65 dc       	rcall	.-1846   	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    291e:	66 ec       	ldi	r22, 0xC6	; 198
    2920:	78 e2       	ldi	r23, 0x28	; 40
    2922:	8a e5       	ldi	r24, 0x5A	; 90
    2924:	90 e0       	ldi	r25, 0x00	; 0
    2926:	60 dc       	rcall	.-1856   	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    2928:	20 e0       	ldi	r18, 0x00	; 0
    292a:	30 e0       	ldi	r19, 0x00	; 0
    292c:	40 e2       	ldi	r20, 0x20	; 32
    292e:	51 e4       	ldi	r21, 0x41	; 65
    2930:	60 91 45 28 	lds	r22, 0x2845	; 0x802845 <CAL2_CALCULATED_LOW_CAL_VALUE>
    2934:	70 91 46 28 	lds	r23, 0x2846	; 0x802846 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    2938:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    293c:	90 91 48 28 	lds	r25, 0x2848	; 0x802848 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    2940:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    2944:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2948:	60 93 c2 28 	sts	0x28C2, r22	; 0x8028c2 <MASTER_LOW_CONV>
    294c:	70 93 c3 28 	sts	0x28C3, r23	; 0x8028c3 <MASTER_LOW_CONV+0x1>
    2950:	80 93 c4 28 	sts	0x28C4, r24	; 0x8028c4 <MASTER_LOW_CONV+0x2>
    2954:	90 93 c5 28 	sts	0x28C5, r25	; 0x8028c5 <MASTER_LOW_CONV+0x3>
    2958:	20 e0       	ldi	r18, 0x00	; 0
    295a:	30 e0       	ldi	r19, 0x00	; 0
    295c:	40 e2       	ldi	r20, 0x20	; 32
    295e:	51 e4       	ldi	r21, 0x41	; 65
    2960:	60 91 3f 28 	lds	r22, 0x283F	; 0x80283f <CAL2_CALCULATED_HIGH_CAL_VALUE>
    2964:	70 91 40 28 	lds	r23, 0x2840	; 0x802840 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    2968:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    296c:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    2970:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    2974:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    2978:	60 93 be 28 	sts	0x28BE, r22	; 0x8028be <MASTER_HIGH_CONV>
    297c:	70 93 bf 28 	sts	0x28BF, r23	; 0x8028bf <MASTER_HIGH_CONV+0x1>
    2980:	80 93 c0 28 	sts	0x28C0, r24	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
    2984:	90 93 c1 28 	sts	0x28C1, r25	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
    2988:	62 ec       	ldi	r22, 0xC2	; 194
    298a:	78 e2       	ldi	r23, 0x28	; 40
    298c:	84 e6       	ldi	r24, 0x64	; 100
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	2b dc       	rcall	.-1962   	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    2992:	6e eb       	ldi	r22, 0xBE	; 190
    2994:	78 e2       	ldi	r23, 0x28	; 40
    2996:	8e e6       	ldi	r24, 0x6E	; 110
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	26 dc       	rcall	.-1972   	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    299c:	34 ce       	rjmp	.-920    	; 0x2606 <MODE_CLICK()+0x370>
    299e:	61 e0       	ldi	r22, 0x01	; 1
    29a0:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <SET_LONG_VALUE+0x6>
    29a4:	90 91 21 29 	lds	r25, 0x2921	; 0x802921 <SET_LONG_VALUE+0x7>
    29a8:	89 2b       	or	r24, r25
    29aa:	09 f4       	brne	.+2      	; 0x29ae <MODE_CLICK()+0x718>
    29ac:	60 e0       	ldi	r22, 0x00	; 0
    29ae:	60 93 63 28 	sts	0x2863, r22	; 0x802863 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    29b2:	81 e4       	ldi	r24, 0x41	; 65
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	89 83       	std	Y+1, r24	; 0x01
    29b8:	9a 83       	std	Y+2, r25	; 0x02
    29ba:	ce 01       	movw	r24, r28
    29bc:	01 96       	adiw	r24, 0x01	; 1
    29be:	dc db       	rcall	.-2120   	; 0x2178 <EERef::update(unsigned char)>
    29c0:	22 ce       	rjmp	.-956    	; 0x2606 <MODE_CLICK()+0x370>
MODE_CLICK():
    29c2:	9c 01       	movw	r18, r24
    29c4:	2b 7f       	andi	r18, 0xFB	; 251
    29c6:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    29ca:	2a 30       	cpi	r18, 0x0A	; 10
    29cc:	31 05       	cpc	r19, r1
    29ce:	09 f4       	brne	.+2      	; 0x29d2 <MODE_CLICK()+0x73c>
    29d0:	34 ce       	rjmp	.-920    	; 0x263a <MODE_CLICK()+0x3a4>
    29d2:	8c 30       	cpi	r24, 0x0C	; 12
    29d4:	91 05       	cpc	r25, r1
    29d6:	09 f0       	breq	.+2      	; 0x29da <MODE_CLICK()+0x744>
    29d8:	a2 cd       	rjmp	.-1212   	; 0x251e <MODE_CLICK()+0x288>
    29da:	2f ce       	rjmp	.-930    	; 0x263a <MODE_CLICK()+0x3a4>
    29dc:	81 e0       	ldi	r24, 0x01	; 1
    29de:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <PUMP_FLAG>
    29e2:	a4 cc       	rjmp	.-1720   	; 0x232c <MODE_CLICK()+0x96>
    29e4:	82 e3       	ldi	r24, 0x32	; 50
    29e6:	90 e0       	ldi	r25, 0x00	; 0
    29e8:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    29ec:	c6 cc       	rjmp	.-1652   	; 0x237a <MODE_CLICK()+0xe4>

000029ee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]>:
SET_SHORT_PRESS_FUNCTION():
    29ee:	2f 92       	push	r2
    29f0:	3f 92       	push	r3
    29f2:	4f 92       	push	r4
    29f4:	5f 92       	push	r5
    29f6:	6f 92       	push	r6
    29f8:	7f 92       	push	r7
    29fa:	8f 92       	push	r8
    29fc:	9f 92       	push	r9
    29fe:	af 92       	push	r10
    2a00:	bf 92       	push	r11
    2a02:	cf 92       	push	r12
    2a04:	df 92       	push	r13
    2a06:	ef 92       	push	r14
    2a08:	ff 92       	push	r15
    2a0a:	0f 93       	push	r16
    2a0c:	1f 93       	push	r17
    2a0e:	cf 93       	push	r28
    2a10:	df 93       	push	r29
    2a12:	c0 91 19 29 	lds	r28, 0x2919	; 0x802919 <ENTER_BUT>
    2a16:	c2 30       	cpi	r28, 0x02	; 2
    2a18:	09 f4       	brne	.+2      	; 0x2a1c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2e>
    2a1a:	fe c5       	rjmp	.+3068   	; 0x3618 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xc2a>
    2a1c:	cc f4       	brge	.+50     	; 0x2a50 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x62>
    2a1e:	cc 23       	and	r28, r28
    2a20:	09 f4       	brne	.+2      	; 0x2a24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x36>
    2a22:	80 c3       	rjmp	.+1792   	; 0x3124 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x736>
    2a24:	c1 30       	cpi	r28, 0x01	; 1
    2a26:	09 f4       	brne	.+2      	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    2a28:	78 c5       	rjmp	.+2800   	; 0x351a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb2c>
    2a2a:	df 91       	pop	r29
    2a2c:	cf 91       	pop	r28
    2a2e:	1f 91       	pop	r17
    2a30:	0f 91       	pop	r16
    2a32:	ff 90       	pop	r15
    2a34:	ef 90       	pop	r14
    2a36:	df 90       	pop	r13
    2a38:	cf 90       	pop	r12
    2a3a:	bf 90       	pop	r11
    2a3c:	af 90       	pop	r10
    2a3e:	9f 90       	pop	r9
    2a40:	8f 90       	pop	r8
    2a42:	7f 90       	pop	r7
    2a44:	6f 90       	pop	r6
    2a46:	5f 90       	pop	r5
    2a48:	4f 90       	pop	r4
    2a4a:	3f 90       	pop	r3
    2a4c:	2f 90       	pop	r2
    2a4e:	08 95       	ret
    2a50:	c4 30       	cpi	r28, 0x04	; 4
    2a52:	09 f4       	brne	.+2      	; 0x2a56 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x68>
    2a54:	e4 c6       	rjmp	.+3528   	; 0x381e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xe30>
    2a56:	0c f4       	brge	.+2      	; 0x2a5a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6c>
    2a58:	5e c6       	rjmp	.+3260   	; 0x3716 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xd28>
    2a5a:	c5 30       	cpi	r28, 0x05	; 5
    2a5c:	31 f7       	brne	.-52     	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    2a5e:	c0 90 0f 29 	lds	r12, 0x290F	; 0x80290f <SET_VALUE+0x2>
    2a62:	d0 90 10 29 	lds	r13, 0x2910	; 0x802910 <SET_VALUE+0x3>
    2a66:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    2a6a:	70 91 12 29 	lds	r23, 0x2912	; 0x802912 <SET_VALUE+0x5>
    2a6e:	07 2e       	mov	r0, r23
    2a70:	00 0c       	add	r0, r0
    2a72:	88 0b       	sbc	r24, r24
    2a74:	99 0b       	sbc	r25, r25
    2a76:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    2a7a:	20 e0       	ldi	r18, 0x00	; 0
    2a7c:	30 e0       	ldi	r19, 0x00	; 0
    2a7e:	40 e2       	ldi	r20, 0x20	; 32
    2a80:	51 e4       	ldi	r21, 0x41	; 65
    2a82:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    2a86:	4b 01       	movw	r8, r22
    2a88:	5c 01       	movw	r10, r24
    2a8a:	b6 01       	movw	r22, r12
    2a8c:	dd 0c       	add	r13, r13
    2a8e:	88 0b       	sbc	r24, r24
    2a90:	99 0b       	sbc	r25, r25
    2a92:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    2a96:	9b 01       	movw	r18, r22
    2a98:	ac 01       	movw	r20, r24
    2a9a:	c5 01       	movw	r24, r10
    2a9c:	b4 01       	movw	r22, r8
    2a9e:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    2aa2:	4b 01       	movw	r8, r22
    2aa4:	5c 01       	movw	r10, r24
    2aa6:	80 92 96 28 	sts	0x2896, r8	; 0x802896 <SET_TEMP_DEG>
    2aaa:	90 92 97 28 	sts	0x2897, r9	; 0x802897 <SET_TEMP_DEG+0x1>
    2aae:	a0 92 98 28 	sts	0x2898, r10	; 0x802898 <SET_TEMP_DEG+0x2>
    2ab2:	b0 92 99 28 	sts	0x2899, r11	; 0x802899 <SET_TEMP_DEG+0x3>
    2ab6:	c0 91 39 29 	lds	r28, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    2aba:	d0 91 3a 29 	lds	r29, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    2abe:	c0 93 94 28 	sts	0x2894, r28	; 0x802894 <SET_TEMP_FAH>
    2ac2:	d0 93 95 28 	sts	0x2895, r29	; 0x802895 <SET_TEMP_FAH+0x1>
    2ac6:	e0 90 13 29 	lds	r14, 0x2913	; 0x802913 <SET_VALUE+0x6>
    2aca:	f0 90 14 29 	lds	r15, 0x2914	; 0x802914 <SET_VALUE+0x7>
    2ace:	e0 92 92 28 	sts	0x2892, r14	; 0x802892 <SET_HOUR>
    2ad2:	f0 92 93 28 	sts	0x2893, r15	; 0x802893 <SET_HOUR+0x1>
    2ad6:	00 91 15 29 	lds	r16, 0x2915	; 0x802915 <SET_VALUE+0x8>
    2ada:	10 91 16 29 	lds	r17, 0x2916	; 0x802916 <SET_VALUE+0x9>
    2ade:	00 93 90 28 	sts	0x2890, r16	; 0x802890 <SET_MINUTE>
    2ae2:	10 93 91 28 	sts	0x2891, r17	; 0x802891 <SET_MINUTE+0x1>
    2ae6:	2c e3       	ldi	r18, 0x3C	; 60
    2ae8:	2e 9d       	mul	r18, r14
    2aea:	c0 01       	movw	r24, r0
    2aec:	2f 9d       	mul	r18, r15
    2aee:	90 0d       	add	r25, r0
    2af0:	11 24       	eor	r1, r1
    2af2:	80 0f       	add	r24, r16
    2af4:	91 1f       	adc	r25, r17
    2af6:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    2afa:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    2b04:	6c 2d       	mov	r22, r12
    2b06:	83 e7       	ldi	r24, 0x73	; 115
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	35 db       	rcall	.-2454   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b0c:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    2b10:	85 e7       	ldi	r24, 0x75	; 117
    2b12:	90 e0       	ldi	r25, 0x00	; 0
    2b14:	30 db       	rcall	.-2464   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b16:	69 e3       	ldi	r22, 0x39	; 57
    2b18:	79 e2       	ldi	r23, 0x29	; 41
    2b1a:	88 e7       	ldi	r24, 0x78	; 120
    2b1c:	90 e0       	ldi	r25, 0x00	; 0
    2b1e:	96 db       	rcall	.-2260   	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    2b20:	6e 2d       	mov	r22, r14
    2b22:	8d e7       	ldi	r24, 0x7D	; 125
    2b24:	90 e0       	ldi	r25, 0x00	; 0
    2b26:	27 db       	rcall	.-2482   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b28:	60 2f       	mov	r22, r16
    2b2a:	82 e8       	ldi	r24, 0x82	; 130
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	23 db       	rcall	.-2490   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
Process_Time_Set_On_Eeprom():
    2b30:	61 e0       	ldi	r22, 0x01	; 1
    2b32:	87 e8       	ldi	r24, 0x87	; 135
    2b34:	90 e0       	ldi	r25, 0x00	; 0
    2b36:	1f db       	rcall	.-2498   	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b38:	10 91 4c 29 	lds	r17, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    2b3c:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2b40:	81 11       	cpse	r24, r1
    2b42:	1b c0       	rjmp	.+54     	; 0x2b7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x18c>
    2b44:	11 11       	cpse	r17, r1
    2b46:	0d c7       	rjmp	.+3610   	; 0x3962 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf74>
    2b48:	20 e0       	ldi	r18, 0x00	; 0
    2b4a:	30 e0       	ldi	r19, 0x00	; 0
    2b4c:	40 e2       	ldi	r20, 0x20	; 32
    2b4e:	51 e4       	ldi	r21, 0x41	; 65
    2b50:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    2b54:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2b58:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2b5c:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2b60:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    2b64:	9b 01       	movw	r18, r22
    2b66:	ac 01       	movw	r20, r24
    2b68:	c5 01       	movw	r24, r10
    2b6a:	b4 01       	movw	r22, r8
    2b6c:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    2b70:	87 ff       	sbrs	r24, 7
    2b72:	03 c0       	rjmp	.+6      	; 0x2b7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x18c>
    2b74:	81 e0       	ldi	r24, 0x01	; 1
    2b76:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2b7a:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2b7e:	88 23       	and	r24, r24
    2b80:	09 f4       	brne	.+2      	; 0x2b84 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x196>
    2b82:	0a c7       	rjmp	.+3604   	; 0x3998 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xfaa>
    2b84:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    2b88:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    2b8c:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    2b90:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2b9a:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2b9e:	11 11       	cpse	r17, r1
    2ba0:	1c c7       	rjmp	.+3640   	; 0x39da <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xfec>
    2ba2:	80 91 96 28 	lds	r24, 0x2896	; 0x802896 <SET_TEMP_DEG>
    2ba6:	90 91 97 28 	lds	r25, 0x2897	; 0x802897 <SET_TEMP_DEG+0x1>
    2baa:	a0 91 98 28 	lds	r26, 0x2898	; 0x802898 <SET_TEMP_DEG+0x2>
    2bae:	b0 91 99 28 	lds	r27, 0x2899	; 0x802899 <SET_TEMP_DEG+0x3>
    2bb2:	80 93 83 28 	sts	0x2883, r24	; 0x802883 <PID_SETPOINT_To_Show>
    2bb6:	90 93 84 28 	sts	0x2884, r25	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    2bba:	a0 93 85 28 	sts	0x2885, r26	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    2bbe:	b0 93 86 28 	sts	0x2886, r27	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    2bc2:	80 93 67 2a 	sts	0x2A67, r24	; 0x802a67 <PID_SETPOINT>
    2bc6:	90 93 68 2a 	sts	0x2A68, r25	; 0x802a68 <PID_SETPOINT+0x1>
    2bca:	a0 93 69 2a 	sts	0x2A69, r26	; 0x802a69 <PID_SETPOINT+0x2>
    2bce:	b0 93 6a 2a 	sts	0x2A6A, r27	; 0x802a6a <PID_SETPOINT+0x3>
    2bd2:	8a ec       	ldi	r24, 0xCA	; 202
    2bd4:	9a e2       	ldi	r25, 0x2A	; 42
    2bd6:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
    2bda:	81 e0       	ldi	r24, 0x01	; 1
    2bdc:	80 93 82 28 	sts	0x2882, r24	; 0x802882 <Alternate_Display_Flag>
digitalWrite():
    2be0:	61 e0       	ldi	r22, 0x01	; 1
    2be2:	81 e2       	ldi	r24, 0x21	; 33
    2be4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2be8:	01 e0       	ldi	r16, 0x01	; 1
    2bea:	10 e0       	ldi	r17, 0x00	; 0
    2bec:	8c e3       	ldi	r24, 0x3C	; 60
    2bee:	28 2e       	mov	r2, r24
    2bf0:	31 2c       	mov	r3, r1
    2bf2:	c5 e1       	ldi	r28, 0x15	; 21
    2bf4:	d0 e0       	ldi	r29, 0x00	; 0
    2bf6:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    2bfa:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    2bfe:	18 16       	cp	r1, r24
    2c00:	19 06       	cpc	r1, r25
    2c02:	14 f0       	brlt	.+4      	; 0x2c08 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x21a>
    2c04:	0c 94 c6 1e 	jmp	0x3d8c	; 0x3d8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x139e>
    2c08:	20 e0       	ldi	r18, 0x00	; 0
    2c0a:	30 e0       	ldi	r19, 0x00	; 0
    2c0c:	40 e2       	ldi	r20, 0x20	; 32
    2c0e:	51 e4       	ldi	r21, 0x41	; 65
    2c10:	60 91 96 28 	lds	r22, 0x2896	; 0x802896 <SET_TEMP_DEG>
    2c14:	70 91 97 28 	lds	r23, 0x2897	; 0x802897 <SET_TEMP_DEG+0x1>
    2c18:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <SET_TEMP_DEG+0x2>
    2c1c:	90 91 99 28 	lds	r25, 0x2899	; 0x802899 <SET_TEMP_DEG+0x3>
    2c20:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    2c24:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <TEMP_DEG>
    2c28:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2c2c:	40 91 01 29 	lds	r20, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2c30:	50 91 02 29 	lds	r21, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2c34:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    2c38:	87 ff       	sbrs	r24, 7
    2c3a:	f6 c6       	rjmp	.+3564   	; 0x3a28 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x103a>
    2c3c:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    2c40:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    2c44:	81 e0       	ldi	r24, 0x01	; 1
    2c46:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <checkTempRaised>
digitalWrite():
    2c4a:	60 e0       	ldi	r22, 0x00	; 0
    2c4c:	81 e2       	ldi	r24, 0x21	; 33
    2c4e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c52:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    2c56:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
    2c5a:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
digitalWrite():
    2c5e:	61 e0       	ldi	r22, 0x01	; 1
    2c60:	8d e1       	ldi	r24, 0x1D	; 29
    2c62:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    2c66:	60 e0       	ldi	r22, 0x00	; 0
    2c68:	8b e1       	ldi	r24, 0x1B	; 27
    2c6a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c6e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
DISP_UPDATE():
    2c72:	8d eb       	ldi	r24, 0xBD	; 189
    2c74:	9b e2       	ldi	r25, 0x2B	; 43
    2c76:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2c7a:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
    2c7e:	88 23       	and	r24, r24
    2c80:	29 f0       	breq	.+10     	; 0x2c8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x29e>
    2c82:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
digitalWrite():
    2c86:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    2c88:	81 11       	cpse	r24, r1
    2c8a:	01 c0       	rjmp	.+2      	; 0x2c8e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2a0>
digitalWrite():
    2c8c:	60 e0       	ldi	r22, 0x00	; 0
    2c8e:	89 e1       	ldi	r24, 0x19	; 25
    2c90:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c94:	b0 90 a6 28 	lds	r11, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2c98:	b1 10       	cpse	r11, r1
    2c9a:	0a c0       	rjmp	.+20     	; 0x2cb0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2c2>
    2c9c:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2ca0:	60 93 7e 28 	sts	0x287E, r22	; 0x80287e <STOP_COUNT_VALUE>
    2ca4:	70 93 7f 28 	sts	0x287F, r23	; 0x80287f <STOP_COUNT_VALUE+0x1>
    2ca8:	80 93 80 28 	sts	0x2880, r24	; 0x802880 <STOP_COUNT_VALUE+0x2>
    2cac:	90 93 81 28 	sts	0x2881, r25	; 0x802881 <STOP_COUNT_VALUE+0x3>
    2cb0:	c0 90 7e 28 	lds	r12, 0x287E	; 0x80287e <STOP_COUNT_VALUE>
    2cb4:	d0 90 7f 28 	lds	r13, 0x287F	; 0x80287f <STOP_COUNT_VALUE+0x1>
    2cb8:	e0 90 80 28 	lds	r14, 0x2880	; 0x802880 <STOP_COUNT_VALUE+0x2>
    2cbc:	f0 90 81 28 	lds	r15, 0x2881	; 0x802881 <STOP_COUNT_VALUE+0x3>
    2cc0:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <START_COUNT_VALUE>
    2cc4:	90 91 88 28 	lds	r25, 0x2888	; 0x802888 <START_COUNT_VALUE+0x1>
    2cc8:	a0 91 89 28 	lds	r26, 0x2889	; 0x802889 <START_COUNT_VALUE+0x2>
    2ccc:	b0 91 8a 28 	lds	r27, 0x288A	; 0x80288a <START_COUNT_VALUE+0x3>
    2cd0:	c8 1a       	sub	r12, r24
    2cd2:	d9 0a       	sbc	r13, r25
    2cd4:	ea 0a       	sbc	r14, r26
    2cd6:	fb 0a       	sbc	r15, r27
    2cd8:	20 e2       	ldi	r18, 0x20	; 32
    2cda:	c2 16       	cp	r12, r18
    2cdc:	2f eb       	ldi	r18, 0xBF	; 191
    2cde:	d2 06       	cpc	r13, r18
    2ce0:	22 e0       	ldi	r18, 0x02	; 2
    2ce2:	e2 06       	cpc	r14, r18
    2ce4:	f1 04       	cpc	r15, r1
    2ce6:	08 f4       	brcc	.+2      	; 0x2cea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2fc>
    2ce8:	51 c0       	rjmp	.+162    	; 0x2d8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x39e>
    2cea:	b1 10       	cpse	r11, r1
    2cec:	4f c0       	rjmp	.+158    	; 0x2d8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x39e>
    2cee:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2cf2:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2cf6:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    2cfa:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2cfe:	20 91 8b 28 	lds	r18, 0x288B	; 0x80288b <TEMP_VALUE_INITIAL>
    2d02:	30 91 8c 28 	lds	r19, 0x288C	; 0x80288c <TEMP_VALUE_INITIAL+0x1>
    2d06:	40 91 8d 28 	lds	r20, 0x288D	; 0x80288d <TEMP_VALUE_INITIAL+0x2>
    2d0a:	50 91 8e 28 	lds	r21, 0x288E	; 0x80288e <TEMP_VALUE_INITIAL+0x3>
    2d0e:	c5 01       	movw	r24, r10
    2d10:	b4 01       	movw	r22, r8
    2d12:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    2d16:	2b 01       	movw	r4, r22
    2d18:	3c 01       	movw	r6, r24
    2d1a:	c7 01       	movw	r24, r14
    2d1c:	b6 01       	movw	r22, r12
    2d1e:	20 e6       	ldi	r18, 0x60	; 96
    2d20:	3a ee       	ldi	r19, 0xEA	; 234
    2d22:	40 e0       	ldi	r20, 0x00	; 0
    2d24:	50 e0       	ldi	r21, 0x00	; 0
    2d26:	0e 94 87 38 	call	0x710e	; 0x710e <__udivmodsi4>
    2d2a:	ca 01       	movw	r24, r20
    2d2c:	b9 01       	movw	r22, r18
    2d2e:	0e 94 5b 37 	call	0x6eb6	; 0x6eb6 <__floatunsisf>
    2d32:	9b 01       	movw	r18, r22
    2d34:	ac 01       	movw	r20, r24
    2d36:	c3 01       	movw	r24, r6
    2d38:	b2 01       	movw	r22, r4
    2d3a:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    2d3e:	60 93 aa 28 	sts	0x28AA, r22	; 0x8028aa <RATE_OF_HEATING>
    2d42:	70 93 ab 28 	sts	0x28AB, r23	; 0x8028ab <RATE_OF_HEATING+0x1>
    2d46:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <RATE_OF_HEATING+0x2>
    2d4a:	90 93 ad 28 	sts	0x28AD, r25	; 0x8028ad <RATE_OF_HEATING+0x3>
    2d4e:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2d52:	60 93 7a 28 	sts	0x287A, r22	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2d56:	70 93 7b 28 	sts	0x287B, r23	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2d5a:	80 93 7c 28 	sts	0x287C, r24	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2d5e:	90 93 7d 28 	sts	0x287D, r25	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2d62:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2d66:	60 93 76 28 	sts	0x2876, r22	; 0x802876 <CAL_OF_10_MIN>
    2d6a:	70 93 77 28 	sts	0x2877, r23	; 0x802877 <CAL_OF_10_MIN+0x1>
    2d6e:	80 93 78 28 	sts	0x2878, r24	; 0x802878 <CAL_OF_10_MIN+0x2>
    2d72:	90 93 79 28 	sts	0x2879, r25	; 0x802879 <CAL_OF_10_MIN+0x3>
    2d76:	80 92 72 28 	sts	0x2872, r8	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2d7a:	90 92 73 28 	sts	0x2873, r9	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2d7e:	a0 92 74 28 	sts	0x2874, r10	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2d82:	b0 92 75 28 	sts	0x2875, r11	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2d86:	81 e0       	ldi	r24, 0x01	; 1
    2d88:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2d8c:	c0 90 aa 28 	lds	r12, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    2d90:	d0 90 ab 28 	lds	r13, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    2d94:	e0 90 ac 28 	lds	r14, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    2d98:	f0 90 ad 28 	lds	r15, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    2d9c:	20 e0       	ldi	r18, 0x00	; 0
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	40 e8       	ldi	r20, 0x80	; 128
    2da2:	5f e3       	ldi	r21, 0x3F	; 63
    2da4:	c7 01       	movw	r24, r14
    2da6:	b6 01       	movw	r22, r12
    2da8:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    2dac:	87 fd       	sbrc	r24, 7
    2dae:	83 c6       	rjmp	.+3334   	; 0x3ab6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10c8>
    2db0:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2db4:	88 23       	and	r24, r24
    2db6:	09 f4       	brne	.+2      	; 0x2dba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3cc>
    2db8:	a1 c0       	rjmp	.+322    	; 0x2efc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
digitalWrite():
    2dba:	60 e0       	ldi	r22, 0x00	; 0
    2dbc:	88 e1       	ldi	r24, 0x18	; 24
    2dbe:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    2dc2:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    2dc6:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    2dca:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    2dce:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    2dd2:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    2dd6:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    2dda:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2dde:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2de2:	6b 01       	movw	r12, r22
    2de4:	7c 01       	movw	r14, r24
    2de6:	c0 92 6e 28 	sts	0x286E, r12	; 0x80286e <CURRENT_COOLING_RATE_TIME>
    2dea:	d0 92 6f 28 	sts	0x286F, r13	; 0x80286f <CURRENT_COOLING_RATE_TIME+0x1>
    2dee:	e0 92 70 28 	sts	0x2870, r14	; 0x802870 <CURRENT_COOLING_RATE_TIME+0x2>
    2df2:	f0 92 71 28 	sts	0x2871, r15	; 0x802871 <CURRENT_COOLING_RATE_TIME+0x3>
    2df6:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <EXECUTE_PID_LOOP>
    2dfa:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2dfe:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2e02:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    2e06:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2e0a:	80 92 6a 28 	sts	0x286A, r8	; 0x80286a <CURRENT_TEMP_COOLING_RATE>
    2e0e:	90 92 6b 28 	sts	0x286B, r9	; 0x80286b <CURRENT_TEMP_COOLING_RATE+0x1>
    2e12:	a0 92 6c 28 	sts	0x286C, r10	; 0x80286c <CURRENT_TEMP_COOLING_RATE+0x2>
    2e16:	b0 92 6d 28 	sts	0x286D, r11	; 0x80286d <CURRENT_TEMP_COOLING_RATE+0x3>
    2e1a:	80 91 7a 28 	lds	r24, 0x287A	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2e1e:	90 91 7b 28 	lds	r25, 0x287B	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2e22:	a0 91 7c 28 	lds	r26, 0x287C	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2e26:	b0 91 7d 28 	lds	r27, 0x287D	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2e2a:	26 01       	movw	r4, r12
    2e2c:	37 01       	movw	r6, r14
    2e2e:	48 1a       	sub	r4, r24
    2e30:	59 0a       	sbc	r5, r25
    2e32:	6a 0a       	sbc	r6, r26
    2e34:	7b 0a       	sbc	r7, r27
    2e36:	d3 01       	movw	r26, r6
    2e38:	c2 01       	movw	r24, r4
    2e3a:	80 36       	cpi	r24, 0x60	; 96
    2e3c:	9a 4e       	sbci	r25, 0xEA	; 234
    2e3e:	a1 05       	cpc	r26, r1
    2e40:	b1 05       	cpc	r27, r1
    2e42:	09 f0       	breq	.+2      	; 0x2e46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x458>
    2e44:	5b c0       	rjmp	.+182    	; 0x2efc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    2e46:	20 91 72 28 	lds	r18, 0x2872	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2e4a:	30 91 73 28 	lds	r19, 0x2873	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2e4e:	40 91 74 28 	lds	r20, 0x2874	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2e52:	50 91 75 28 	lds	r21, 0x2875	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2e56:	c5 01       	movw	r24, r10
    2e58:	b4 01       	movw	r22, r8
    2e5a:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    2e5e:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2e62:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2e66:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2e6a:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2e6e:	50 58       	subi	r21, 0x80	; 128
    2e70:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    2e74:	18 16       	cp	r1, r24
    2e76:	0c f4       	brge	.+2      	; 0x2e7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x48c>
    2e78:	fa c5       	rjmp	.+3060   	; 0x3a6e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1080>
    2e7a:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <COOLING_CYCLE_COUNT>
    2e7e:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2e82:	18 16       	cp	r1, r24
    2e84:	19 06       	cpc	r1, r25
    2e86:	0c f4       	brge	.+2      	; 0x2e8a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x49c>
    2e88:	d2 c5       	rjmp	.+2980   	; 0x3a2e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1040>
    2e8a:	01 96       	adiw	r24, 0x01	; 1
    2e8c:	80 93 68 28 	sts	0x2868, r24	; 0x802868 <COOLING_CYCLE_COUNT>
    2e90:	90 93 69 28 	sts	0x2869, r25	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2e94:	8a e0       	ldi	r24, 0x0A	; 10
    2e96:	97 ed       	ldi	r25, 0xD7	; 215
    2e98:	a3 e2       	ldi	r26, 0x23	; 35
    2e9a:	bc e3       	ldi	r27, 0x3C	; 60
    2e9c:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2ea0:	90 93 06 28 	sts	0x2806, r25	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2ea4:	a0 93 07 28 	sts	0x2807, r26	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2ea8:	b0 93 08 28 	sts	0x2808, r27	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2eac:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2eb0:	60 93 64 28 	sts	0x2864, r22	; 0x802864 <TO_CHECK_REPETATION_WITHIN_TIME>
    2eb4:	70 93 65 28 	sts	0x2865, r23	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2eb8:	80 93 66 28 	sts	0x2866, r24	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2ebc:	90 93 67 28 	sts	0x2867, r25	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2ec0:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <COOLING_CYCLE_COUNT>
    2ec4:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2ec8:	02 97       	sbiw	r24, 0x02	; 2
    2eca:	41 f4       	brne	.+16     	; 0x2edc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4ee>
    2ecc:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    2ed0:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    2ed4:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    2ed8:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    2edc:	c0 92 7a 28 	sts	0x287A, r12	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2ee0:	d0 92 7b 28 	sts	0x287B, r13	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2ee4:	e0 92 7c 28 	sts	0x287C, r14	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2ee8:	f0 92 7d 28 	sts	0x287D, r15	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2eec:	80 92 72 28 	sts	0x2872, r8	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2ef0:	90 92 73 28 	sts	0x2873, r9	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2ef4:	a0 92 74 28 	sts	0x2874, r10	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2ef8:	b0 92 75 28 	sts	0x2875, r11	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2efc:	80 90 ff 28 	lds	r8, 0x28FF	; 0x8028ff <TEMP_DEG>
    2f00:	90 90 00 29 	lds	r9, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2f04:	a0 90 01 29 	lds	r10, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2f08:	b0 90 02 29 	lds	r11, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2f0c:	c0 90 83 28 	lds	r12, 0x2883	; 0x802883 <PID_SETPOINT_To_Show>
    2f10:	d0 90 84 28 	lds	r13, 0x2884	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    2f14:	e0 90 85 28 	lds	r14, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    2f18:	f0 90 86 28 	lds	r15, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    2f1c:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    2f20:	81 11       	cpse	r24, r1
    2f22:	e6 c5       	rjmp	.+3020   	; 0x3af0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1102>
    2f24:	81 e0       	ldi	r24, 0x01	; 1
    2f26:	80 93 62 28 	sts	0x2862, r24	; 0x802862 <COUNTDOWN_START>
    2f2a:	a7 01       	movw	r20, r14
    2f2c:	96 01       	movw	r18, r12
    2f2e:	c5 01       	movw	r24, r10
    2f30:	b4 01       	movw	r22, r8
    2f32:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    2f36:	87 fd       	sbrc	r24, 7
    2f38:	4d c0       	rjmp	.+154    	; 0x2fd4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5e6>
interval():
    2f3a:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    2f3e:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    2f42:	89 2b       	or	r24, r25
    2f44:	09 f4       	brne	.+2      	; 0x2f48 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x55a>
    2f46:	ec c5       	rjmp	.+3032   	; 0x3b20 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1132>
    2f48:	80 e9       	ldi	r24, 0x90	; 144
    2f4a:	91 e0       	ldi	r25, 0x01	; 1
    2f4c:	a0 e0       	ldi	r26, 0x00	; 0
    2f4e:	b0 e0       	ldi	r27, 0x00	; 0
    2f50:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    2f54:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    2f58:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    2f5c:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    2f60:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    2f64:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    2f68:	89 2b       	or	r24, r25
    2f6a:	09 f4       	brne	.+2      	; 0x2f6e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x580>
    2f6c:	de c5       	rjmp	.+3004   	; 0x3b2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x113c>
    2f6e:	80 e2       	ldi	r24, 0x20	; 32
    2f70:	93 e0       	ldi	r25, 0x03	; 3
    2f72:	a0 e0       	ldi	r26, 0x00	; 0
    2f74:	b0 e0       	ldi	r27, 0x00	; 0
    2f76:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    2f7a:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    2f7e:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    2f82:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    2f86:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    2f8a:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    2f8e:	89 2b       	or	r24, r25
    2f90:	59 f4       	brne	.+22     	; 0x2fa8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5ba>
    2f92:	81 e0       	ldi	r24, 0x01	; 1
    2f94:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <REPETATION_FLAG>
BUZZ_TICK_START():
    2f98:	8c e6       	ldi	r24, 0x6C	; 108
    2f9a:	9b e2       	ldi	r25, 0x2B	; 43
    2f9c:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    2fa0:	00 93 b0 28 	sts	0x28B0, r16	; 0x8028b0 <REP>
    2fa4:	10 93 b1 28 	sts	0x28B1, r17	; 0x8028b1 <REP+0x1>
    2fa8:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <FOR_REP>
    2fac:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <FOR_REP+0x1>
    2fb0:	02 97       	sbiw	r24, 0x02	; 2
    2fb2:	81 f4       	brne	.+32     	; 0x2fd4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5e6>
stop():
    2fb4:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    2fb8:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    2fbc:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    2fc0:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    2fc4:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    2fc8:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    2fcc:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    2fd0:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    2fd4:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    2fd8:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    2fdc:	b1 01       	movw	r22, r2
    2fde:	0e 94 74 38 	call	0x70e8	; 0x70e8 <__divmodhi4>
    2fe2:	6b 01       	movw	r12, r22
    2fe4:	7c 01       	movw	r14, r24
    2fe6:	60 93 92 28 	sts	0x2892, r22	; 0x802892 <SET_HOUR>
    2fea:	70 93 93 28 	sts	0x2893, r23	; 0x802893 <SET_HOUR+0x1>
    2fee:	80 93 60 28 	sts	0x2860, r24	; 0x802860 <REMAIN_MIN>
    2ff2:	90 93 61 28 	sts	0x2861, r25	; 0x802861 <REMAIN_MIN+0x1>
    2ff6:	20 e0       	ldi	r18, 0x00	; 0
    2ff8:	30 e0       	ldi	r19, 0x00	; 0
    2ffa:	40 e8       	ldi	r20, 0x80	; 128
    2ffc:	5f e3       	ldi	r21, 0x3F	; 63
    2ffe:	60 91 5c 28 	lds	r22, 0x285C	; 0x80285c <DISP_INC>
    3002:	70 91 5d 28 	lds	r23, 0x285D	; 0x80285d <DISP_INC+0x1>
    3006:	80 91 5e 28 	lds	r24, 0x285E	; 0x80285e <DISP_INC+0x2>
    300a:	90 91 5f 28 	lds	r25, 0x285F	; 0x80285f <DISP_INC+0x3>
    300e:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    3012:	60 93 5c 28 	sts	0x285C, r22	; 0x80285c <DISP_INC>
    3016:	70 93 5d 28 	sts	0x285D, r23	; 0x80285d <DISP_INC+0x1>
    301a:	80 93 5e 28 	sts	0x285E, r24	; 0x80285e <DISP_INC+0x2>
    301e:	90 93 5f 28 	sts	0x285F, r25	; 0x80285f <DISP_INC+0x3>
    3022:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3026:	20 e0       	ldi	r18, 0x00	; 0
    3028:	30 e0       	ldi	r19, 0x00	; 0
    302a:	40 e8       	ldi	r20, 0x80	; 128
    302c:	5f e3       	ldi	r21, 0x3F	; 63
    302e:	60 91 aa 28 	lds	r22, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    3032:	70 91 ab 28 	lds	r23, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    3036:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    303a:	90 91 ad 28 	lds	r25, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    303e:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    3042:	87 fd       	sbrc	r24, 7
    3044:	81 c5       	rjmp	.+2818   	; 0x3b48 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x115a>
    3046:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    304a:	81 e0       	ldi	r24, 0x01	; 1
    304c:	80 93 b4 28 	sts	0x28B4, r24	; 0x8028b4 <IN_ERROR>
    3050:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    3054:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3058:	60 e0       	ldi	r22, 0x00	; 0
    305a:	8d e0       	ldi	r24, 0x0D	; 13
    305c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3060:	c0 93 e7 28 	sts	0x28E7, r28	; 0x8028e7 <digits2>
    3064:	d0 93 e8 28 	sts	0x28E8, r29	; 0x8028e8 <digits2+0x1>
    3068:	89 e1       	ldi	r24, 0x19	; 25
    306a:	90 e0       	ldi	r25, 0x00	; 0
    306c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3070:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3074:	8a e1       	ldi	r24, 0x1A	; 26
    3076:	90 e0       	ldi	r25, 0x00	; 0
    3078:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    307c:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    3080:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3084:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    3088:	8e e0       	ldi	r24, 0x0E	; 14
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    3090:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    3094:	8d e0       	ldi	r24, 0x0D	; 13
    3096:	90 e0       	ldi	r25, 0x00	; 0
    3098:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    309c:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    30a0:	80 e1       	ldi	r24, 0x10	; 16
    30a2:	90 e0       	ldi	r25, 0x00	; 0
    30a4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    30a8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    30ac:	8e e1       	ldi	r24, 0x1E	; 30
    30ae:	90 e0       	ldi	r25, 0x00	; 0
    30b0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    30b4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
interval():
    30b8:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    30bc:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    30c0:	89 2b       	or	r24, r25
    30c2:	09 f4       	brne	.+2      	; 0x30c6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6d8>
    30c4:	37 c5       	rjmp	.+2670   	; 0x3b34 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1146>
    30c6:	88 ee       	ldi	r24, 0xE8	; 232
    30c8:	93 e0       	ldi	r25, 0x03	; 3
    30ca:	a0 e0       	ldi	r26, 0x00	; 0
    30cc:	b0 e0       	ldi	r27, 0x00	; 0
    30ce:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    30d2:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    30d6:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    30da:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    30de:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    30e2:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    30e6:	89 2b       	or	r24, r25
    30e8:	09 f4       	brne	.+2      	; 0x30ec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6fe>
    30ea:	29 c5       	rjmp	.+2642   	; 0x3b3e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1150>
    30ec:	80 ed       	ldi	r24, 0xD0	; 208
    30ee:	97 e0       	ldi	r25, 0x07	; 7
    30f0:	a0 e0       	ldi	r26, 0x00	; 0
    30f2:	b0 e0       	ldi	r27, 0x00	; 0
    30f4:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    30f8:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    30fc:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    3100:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    3104:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    3108:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    310c:	89 2b       	or	r24, r25
    310e:	09 f0       	breq	.+2      	; 0x3112 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x724>
    3110:	72 cd       	rjmp	.-1308   	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
BUZZ_TICK_START():
    3112:	8c e6       	ldi	r24, 0x6C	; 108
    3114:	9b e2       	ldi	r25, 0x2B	; 43
    3116:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    311a:	00 93 b0 28 	sts	0x28B0, r16	; 0x8028b0 <REP>
    311e:	10 93 b1 28 	sts	0x28B1, r17	; 0x8028b1 <REP+0x1>
    3122:	69 cd       	rjmp	.-1326   	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3124:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT2_0>
    3128:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT2_2>
    312c:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_2>
    3130:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    3134:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3138:	10 92 b7 28 	sts	0x28B7, r1	; 0x8028b7 <FOR_REP2>
    313c:	10 92 b8 28 	sts	0x28B8, r1	; 0x8028b8 <FOR_REP2+0x1>
    3140:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <FOR_REP>
    3144:	10 92 b6 28 	sts	0x28B6, r1	; 0x8028b6 <FOR_REP+0x1>
    3148:	10 92 b4 28 	sts	0x28B4, r1	; 0x8028b4 <IN_ERROR>
    314c:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <REP1>
    3150:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <REP1+0x1>
    3154:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <REP>
    3158:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <REP+0x1>
    315c:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <Blinking_Freq>
    3160:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <CAL2_START>
    3164:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <PUMP_FLAG>
    3168:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    316c:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    3170:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    3174:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    3178:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <EXECUTE_PID_LOOP>
    317c:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    3180:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    3184:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    3188:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    318c:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    3190:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    3194:	81 e0       	ldi	r24, 0x01	; 1
    3196:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
stop():
    319a:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    319e:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    31a2:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    31a6:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    31aa:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    31ae:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    31b2:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
digitalWrite():
    31b6:	60 e0       	ldi	r22, 0x00	; 0
    31b8:	89 e1       	ldi	r24, 0x19	; 25
    31ba:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    31be:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <Blink_LED_ON>
    31c2:	10 92 41 2b 	sts	0x2B41, r1	; 0x802b41 <Blink_LED_ON+0xb>
    31c6:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <Blink_LED_ON+0xc>
    31ca:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <Blink_LED_ON+0xd>
    31ce:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <Blink_LED_ON+0xe>
    31d2:	10 92 45 2b 	sts	0x2B45, r1	; 0x802b45 <Blink_LED_ON+0xf>
    31d6:	10 92 46 2b 	sts	0x2B46, r1	; 0x802b46 <Blink_LED_ON+0x10>
    31da:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Blink_LED_OFF>
    31de:	10 92 26 2b 	sts	0x2B26, r1	; 0x802b26 <Blink_LED_OFF+0xb>
    31e2:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <Blink_LED_OFF+0xc>
    31e6:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <Blink_LED_OFF+0xd>
    31ea:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <Blink_LED_OFF+0xe>
    31ee:	10 92 2a 2b 	sts	0x2B2A, r1	; 0x802b2a <Blink_LED_OFF+0xf>
    31f2:	10 92 2b 2b 	sts	0x2B2B, r1	; 0x802b2b <Blink_LED_OFF+0x10>
digitalWrite():
    31f6:	60 e0       	ldi	r22, 0x00	; 0
    31f8:	88 e1       	ldi	r24, 0x18	; 24
    31fa:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    31fe:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    3202:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    3206:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    320a:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    320e:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    3212:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    3216:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    321a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    321e:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
    3222:	81 11       	cpse	r24, r1
    3224:	f4 c0       	rjmp	.+488    	; 0x340e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xa20>
    3226:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Process_Interrupt_flag>
    322a:	88 23       	and	r24, r24
    322c:	09 f4       	brne	.+2      	; 0x3230 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x842>
    322e:	93 c0       	rjmp	.+294    	; 0x3356 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x968>
    3230:	80 91 a3 28 	lds	r24, 0x28A3	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    3234:	88 23       	and	r24, r24
    3236:	09 f4       	brne	.+2      	; 0x323a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x84c>
    3238:	8e c0       	rjmp	.+284    	; 0x3356 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x968>
    323a:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <z>
    323e:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <z+0x1>
    3242:	03 97       	sbiw	r24, 0x03	; 3
    3244:	0c f0       	brlt	.+2      	; 0x3248 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x85a>
    3246:	83 c0       	rjmp	.+262    	; 0x334e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x960>
    3248:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    324c:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    3250:	cb 34       	cpi	r28, 0x4B	; 75
    3252:	d1 05       	cpc	r29, r1
    3254:	e4 f5       	brge	.+120    	; 0x32ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8e0>
digitalWrite():
    3256:	61 e0       	ldi	r22, 0x01	; 1
    3258:	85 e1       	ldi	r24, 0x15	; 21
    325a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    325e:	88 e1       	ldi	r24, 0x18	; 24
    3260:	90 e0       	ldi	r25, 0x00	; 0
    3262:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    3266:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    326a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    326e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3272:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    3276:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    327a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    327e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
DISPLAY_DIGIT2():
    3282:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3286:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    328a:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    328e:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3292:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    3296:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    329a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    329e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
digitalWrite():
    32a2:	60 e0       	ldi	r22, 0x00	; 0
    32a4:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    32a6:	df 91       	pop	r29
    32a8:	cf 91       	pop	r28
    32aa:	1f 91       	pop	r17
    32ac:	0f 91       	pop	r16
    32ae:	ff 90       	pop	r15
    32b0:	ef 90       	pop	r14
    32b2:	df 90       	pop	r13
    32b4:	cf 90       	pop	r12
    32b6:	bf 90       	pop	r11
    32b8:	af 90       	pop	r10
    32ba:	9f 90       	pop	r9
    32bc:	8f 90       	pop	r8
    32be:	7f 90       	pop	r7
    32c0:	6f 90       	pop	r6
    32c2:	5f 90       	pop	r5
    32c4:	4f 90       	pop	r4
    32c6:	3f 90       	pop	r3
    32c8:	2f 90       	pop	r2
digitalWrite():
    32ca:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <digitalWrite.part.2>
    32ce:	60 e0       	ldi	r22, 0x00	; 0
    32d0:	85 e1       	ldi	r24, 0x15	; 21
    32d2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    32d6:	8b e0       	ldi	r24, 0x0B	; 11
    32d8:	90 e0       	ldi	r25, 0x00	; 0
    32da:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    32de:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    32e2:	21 e1       	ldi	r18, 0x11	; 17
    32e4:	30 e0       	ldi	r19, 0x00	; 0
    32e6:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    32ea:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    32ee:	87 e1       	ldi	r24, 0x17	; 23
    32f0:	90 e0       	ldi	r25, 0x00	; 0
    32f2:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    32f6:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    32fa:	8c e0       	ldi	r24, 0x0C	; 12
    32fc:	90 e0       	ldi	r25, 0x00	; 0
    32fe:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3302:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    3306:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    330a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    330e:	80 e1       	ldi	r24, 0x10	; 16
    3310:	90 e0       	ldi	r25, 0x00	; 0
    3312:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    3316:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    331a:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    331e:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    3322:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    3326:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    332a:	c7 39       	cpi	r28, 0x97	; 151
    332c:	d1 05       	cpc	r29, r1
    332e:	0c f4       	brge	.+2      	; 0x3332 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x944>
    3330:	b8 cf       	rjmp	.-144    	; 0x32a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    3332:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <z>
    3336:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <z+0x1>
    333a:	01 96       	adiw	r24, 0x01	; 1
    333c:	80 93 a1 28 	sts	0x28A1, r24	; 0x8028a1 <z>
    3340:	90 93 a2 28 	sts	0x28A2, r25	; 0x8028a2 <z+0x1>
    3344:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    3348:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    334c:	aa cf       	rjmp	.-172    	; 0x32a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    334e:	85 e0       	ldi	r24, 0x05	; 5
    3350:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
    3354:	a6 cf       	rjmp	.-180    	; 0x32a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    3356:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    335a:	81 11       	cpse	r24, r1
    335c:	3d c0       	rjmp	.+122    	; 0x33d8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9ea>
    335e:	c0 90 ff 28 	lds	r12, 0x28FF	; 0x8028ff <TEMP_DEG>
    3362:	d0 90 00 29 	lds	r13, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    3366:	e0 90 01 29 	lds	r14, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    336a:	f0 90 02 29 	lds	r15, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    336e:	2d ec       	ldi	r18, 0xCD	; 205
    3370:	3c ec       	ldi	r19, 0xCC	; 204
    3372:	47 ec       	ldi	r20, 0xC7	; 199
    3374:	52 e4       	ldi	r21, 0x42	; 66
    3376:	c7 01       	movw	r24, r14
    3378:	b6 01       	movw	r22, r12
    337a:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    337e:	18 16       	cp	r1, r24
    3380:	dc f4       	brge	.+54     	; 0x33b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9ca>
    3382:	20 e0       	ldi	r18, 0x00	; 0
    3384:	30 e0       	ldi	r19, 0x00	; 0
    3386:	40 e2       	ldi	r20, 0x20	; 32
    3388:	51 e4       	ldi	r21, 0x41	; 65
    338a:	c7 01       	movw	r24, r14
    338c:	b6 01       	movw	r22, r12
    338e:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    3392:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    3396:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    339a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    339e:	8a e0       	ldi	r24, 0x0A	; 10
    33a0:	90 e0       	ldi	r25, 0x00	; 0
    33a2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    33a6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    33aa:	60 e0       	ldi	r22, 0x00	; 0
    33ac:	70 e0       	ldi	r23, 0x00	; 0
    33ae:	cb 01       	movw	r24, r22
    33b0:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
digitalWrite():
    33b4:	61 e0       	ldi	r22, 0x01	; 1
    33b6:	76 cf       	rjmp	.-276    	; 0x32a4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b6>
SET_SHORT_PRESS_FUNCTION():
    33b8:	20 e0       	ldi	r18, 0x00	; 0
    33ba:	30 e0       	ldi	r19, 0x00	; 0
    33bc:	48 ec       	ldi	r20, 0xC8	; 200
    33be:	52 e4       	ldi	r21, 0x42	; 66
    33c0:	c7 01       	movw	r24, r14
    33c2:	b6 01       	movw	r22, r12
    33c4:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    33c8:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    33cc:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    33d0:	81 e0       	ldi	r24, 0x01	; 1
    33d2:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    33d6:	e3 cf       	rjmp	.-58     	; 0x339e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9b0>
    33d8:	20 e0       	ldi	r18, 0x00	; 0
    33da:	30 e0       	ldi	r19, 0x00	; 0
    33dc:	40 e2       	ldi	r20, 0x20	; 32
    33de:	51 e4       	ldi	r21, 0x41	; 65
    33e0:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    33e4:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    33e8:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    33ec:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    33f0:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    33f4:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    33f8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    33fc:	85 e1       	ldi	r24, 0x15	; 21
    33fe:	90 e0       	ldi	r25, 0x00	; 0
    3400:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3404:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3408:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    340c:	ce cf       	rjmp	.-100    	; 0x33aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9bc>
digitalWrite():
    340e:	60 e0       	ldi	r22, 0x00	; 0
    3410:	81 e2       	ldi	r24, 0x21	; 33
    3412:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3416:	61 e0       	ldi	r22, 0x01	; 1
    3418:	8d e1       	ldi	r24, 0x1D	; 29
    341a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    341e:	61 e0       	ldi	r22, 0x01	; 1
    3420:	8c e1       	ldi	r24, 0x1C	; 28
    3422:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3426:	61 e0       	ldi	r22, 0x01	; 1
    3428:	8b e1       	ldi	r24, 0x1B	; 27
    342a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    342e:	60 e0       	ldi	r22, 0x00	; 0
    3430:	8a e1       	ldi	r24, 0x1A	; 26
    3432:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3436:	60 e0       	ldi	r22, 0x00	; 0
    3438:	8d e0       	ldi	r24, 0x0D	; 13
    343a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    343e:	60 e0       	ldi	r22, 0x00	; 0
    3440:	8c e0       	ldi	r24, 0x0C	; 12
    3442:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3446:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    344a:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    344e:	c9 31       	cpi	r28, 0x19	; 25
    3450:	d1 05       	cpc	r29, r1
    3452:	3c f5       	brge	.+78     	; 0x34a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xab4>
digitalWrite():
    3454:	60 e0       	ldi	r22, 0x00	; 0
    3456:	85 e1       	ldi	r24, 0x15	; 21
    3458:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    345c:	88 e1       	ldi	r24, 0x18	; 24
    345e:	90 e0       	ldi	r25, 0x00	; 0
    3460:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3464:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3468:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    346c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3470:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    3474:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    3478:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    347c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    3480:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    3484:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    3488:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    348c:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3490:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    3494:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    3498:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    349c:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    34a0:	c4 ca       	rjmp	.-2680   	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
digitalWrite():
    34a2:	61 e0       	ldi	r22, 0x01	; 1
    34a4:	85 e1       	ldi	r24, 0x15	; 21
    34a6:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    34aa:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    34ae:	8c e0       	ldi	r24, 0x0C	; 12
    34b0:	90 e0       	ldi	r25, 0x00	; 0
    34b2:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    34b6:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    34ba:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    34be:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    34c2:	81 e1       	ldi	r24, 0x11	; 17
    34c4:	90 e0       	ldi	r25, 0x00	; 0
    34c6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    34ca:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    34ce:	88 e1       	ldi	r24, 0x18	; 24
    34d0:	90 e0       	ldi	r25, 0x00	; 0
    34d2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    34d6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    34da:	85 e1       	ldi	r24, 0x15	; 21
    34dc:	90 e0       	ldi	r25, 0x00	; 0
    34de:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    34e2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    34e6:	8d e0       	ldi	r24, 0x0D	; 13
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    34ee:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    34f2:	89 e1       	ldi	r24, 0x19	; 25
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    34fa:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    34fe:	8a e1       	ldi	r24, 0x1A	; 26
    3500:	90 e0       	ldi	r25, 0x00	; 0
    3502:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    3506:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    350a:	e3 97       	sbiw	r28, 0x33	; 51
    350c:	0c f4       	brge	.+2      	; 0x3510 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb22>
    350e:	8d ca       	rjmp	.-2790   	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    3510:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    3514:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3518:	88 ca       	rjmp	.-2800   	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    351a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    351e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
digitalWrite():
    3522:	60 e0       	ldi	r22, 0x00	; 0
    3524:	8d e1       	ldi	r24, 0x1D	; 29
    3526:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    352a:	61 e0       	ldi	r22, 0x01	; 1
    352c:	8c e0       	ldi	r24, 0x0C	; 12
    352e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3532:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    3536:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    353a:	49 97       	sbiw	r24, 0x19	; 25
    353c:	0c f0       	brlt	.+2      	; 0x3540 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb52>
    353e:	4d c0       	rjmp	.+154    	; 0x35da <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xbec>
    3540:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    3544:	81 11       	cpse	r24, r1
    3546:	42 c0       	rjmp	.+132    	; 0x35cc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xbde>
    3548:	88 e1       	ldi	r24, 0x18	; 24
    354a:	90 e0       	ldi	r25, 0x00	; 0
    354c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3550:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3554:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3558:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    355c:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    3560:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    3564:	c3 97       	sbiw	r24, 0x33	; 51
    3566:	24 f0       	brlt	.+8      	; 0x3570 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb82>
    3568:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    356c:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3570:	8a e0       	ldi	r24, 0x0A	; 10
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3578:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    357c:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    3580:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    3584:	24 e6       	ldi	r18, 0x64	; 100
    3586:	28 9f       	mul	r18, r24
    3588:	b0 01       	movw	r22, r0
    358a:	29 9f       	mul	r18, r25
    358c:	70 0d       	add	r23, r0
    358e:	11 24       	eor	r1, r1
    3590:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    3594:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    3598:	68 0f       	add	r22, r24
    359a:	79 1f       	adc	r23, r25
    359c:	07 2e       	mov	r0, r23
    359e:	00 0c       	add	r0, r0
    35a0:	88 0b       	sbc	r24, r24
    35a2:	99 0b       	sbc	r25, r25
    35a4:	df 91       	pop	r29
    35a6:	cf 91       	pop	r28
    35a8:	1f 91       	pop	r17
    35aa:	0f 91       	pop	r16
    35ac:	ff 90       	pop	r15
    35ae:	ef 90       	pop	r14
    35b0:	df 90       	pop	r13
    35b2:	cf 90       	pop	r12
    35b4:	bf 90       	pop	r11
    35b6:	af 90       	pop	r10
    35b8:	9f 90       	pop	r9
    35ba:	8f 90       	pop	r8
    35bc:	7f 90       	pop	r7
    35be:	6f 90       	pop	r6
    35c0:	5f 90       	pop	r5
    35c2:	4f 90       	pop	r4
    35c4:	3f 90       	pop	r3
    35c6:	2f 90       	pop	r2
    35c8:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    35cc:	89 e1       	ldi	r24, 0x19	; 25
    35ce:	90 e0       	ldi	r25, 0x00	; 0
    35d0:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    35d4:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    35d8:	c1 cf       	rjmp	.-126    	; 0x355c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb6e>
    35da:	c0 93 9e 28 	sts	0x289E, r28	; 0x80289e <DOT2_1>
    35de:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    35e2:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    35e6:	24 e6       	ldi	r18, 0x64	; 100
    35e8:	28 9f       	mul	r18, r24
    35ea:	b0 01       	movw	r22, r0
    35ec:	29 9f       	mul	r18, r25
    35ee:	70 0d       	add	r23, r0
    35f0:	11 24       	eor	r1, r1
    35f2:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    35f6:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    35fa:	4a e0       	ldi	r20, 0x0A	; 10
    35fc:	42 9f       	mul	r20, r18
    35fe:	c0 01       	movw	r24, r0
    3600:	43 9f       	mul	r20, r19
    3602:	90 0d       	add	r25, r0
    3604:	11 24       	eor	r1, r1
    3606:	68 0f       	add	r22, r24
    3608:	79 1f       	adc	r23, r25
    360a:	07 2e       	mov	r0, r23
    360c:	00 0c       	add	r0, r0
    360e:	88 0b       	sbc	r24, r24
    3610:	99 0b       	sbc	r25, r25
    3612:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3616:	a2 cf       	rjmp	.-188    	; 0x355c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb6e>
    3618:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    361c:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    3620:	14 e6       	ldi	r17, 0x64	; 100
    3622:	18 9f       	mul	r17, r24
    3624:	b0 01       	movw	r22, r0
    3626:	19 9f       	mul	r17, r25
    3628:	70 0d       	add	r23, r0
    362a:	11 24       	eor	r1, r1
    362c:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    3630:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    3634:	68 0f       	add	r22, r24
    3636:	79 1f       	adc	r23, r25
    3638:	07 2e       	mov	r0, r23
    363a:	00 0c       	add	r0, r0
    363c:	88 0b       	sbc	r24, r24
    363e:	99 0b       	sbc	r25, r25
    3640:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3644:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    3648:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    364c:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3650:	81 11       	cpse	r24, r1
    3652:	38 c0       	rjmp	.+112    	; 0x36c4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcd6>
    3654:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    3658:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    365c:	18 9f       	mul	r17, r24
    365e:	b0 01       	movw	r22, r0
    3660:	19 9f       	mul	r17, r25
    3662:	70 0d       	add	r23, r0
    3664:	11 24       	eor	r1, r1
    3666:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    366a:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    366e:	4a e0       	ldi	r20, 0x0A	; 10
    3670:	42 9f       	mul	r20, r18
    3672:	c0 01       	movw	r24, r0
    3674:	43 9f       	mul	r20, r19
    3676:	90 0d       	add	r25, r0
    3678:	11 24       	eor	r1, r1
    367a:	68 0f       	add	r22, r24
    367c:	79 1f       	adc	r23, r25
    367e:	07 2e       	mov	r0, r23
    3680:	00 0c       	add	r0, r0
    3682:	88 0b       	sbc	r24, r24
    3684:	99 0b       	sbc	r25, r25
    3686:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    368a:	8a e0       	ldi	r24, 0x0A	; 10
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3692:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3696:	81 e0       	ldi	r24, 0x01	; 1
    3698:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    369c:	69 97       	sbiw	r28, 0x19	; 25
    369e:	54 f4       	brge	.+20     	; 0x36b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    36a0:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    36a4:	81 11       	cpse	r24, r1
    36a6:	90 c0       	rjmp	.+288    	; 0x37c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    36a8:	88 e1       	ldi	r24, 0x18	; 24
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    36b0:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    36b4:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    36b8:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    36bc:	c3 97       	sbiw	r24, 0x33	; 51
    36be:	0c f0       	brlt	.+2      	; 0x36c2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcd4>
    36c0:	27 cf       	rjmp	.-434    	; 0x3510 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb22>
    36c2:	b3 c9       	rjmp	.-3226   	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    36c4:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    36c8:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    36cc:	2a e0       	ldi	r18, 0x0A	; 10
    36ce:	28 9f       	mul	r18, r24
    36d0:	b0 01       	movw	r22, r0
    36d2:	29 9f       	mul	r18, r25
    36d4:	70 0d       	add	r23, r0
    36d6:	11 24       	eor	r1, r1
    36d8:	07 2e       	mov	r0, r23
    36da:	00 0c       	add	r0, r0
    36dc:	88 0b       	sbc	r24, r24
    36de:	99 0b       	sbc	r25, r25
    36e0:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    36e4:	85 e1       	ldi	r24, 0x15	; 21
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    36ec:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    36f0:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    36f4:	69 97       	sbiw	r28, 0x19	; 25
    36f6:	f4 f6       	brge	.-68     	; 0x36b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    36f8:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    36fc:	81 11       	cpse	r24, r1
    36fe:	64 c0       	rjmp	.+200    	; 0x37c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    3700:	88 e1       	ldi	r24, 0x18	; 24
    3702:	90 e0       	ldi	r25, 0x00	; 0
    3704:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3708:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    370c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3710:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3714:	cb cf       	rjmp	.-106    	; 0x36ac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcbe>
    3716:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    371a:	81 11       	cpse	r24, r1
    371c:	3c c0       	rjmp	.+120    	; 0x3796 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xda8>
    371e:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    3722:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    3726:	24 e6       	ldi	r18, 0x64	; 100
    3728:	28 9f       	mul	r18, r24
    372a:	b0 01       	movw	r22, r0
    372c:	29 9f       	mul	r18, r25
    372e:	70 0d       	add	r23, r0
    3730:	11 24       	eor	r1, r1
    3732:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    3736:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    373a:	4a e0       	ldi	r20, 0x0A	; 10
    373c:	42 9f       	mul	r20, r18
    373e:	c0 01       	movw	r24, r0
    3740:	43 9f       	mul	r20, r19
    3742:	90 0d       	add	r25, r0
    3744:	11 24       	eor	r1, r1
    3746:	68 0f       	add	r22, r24
    3748:	79 1f       	adc	r23, r25
    374a:	07 2e       	mov	r0, r23
    374c:	00 0c       	add	r0, r0
    374e:	88 0b       	sbc	r24, r24
    3750:	99 0b       	sbc	r25, r25
    3752:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3756:	8a e0       	ldi	r24, 0x0A	; 10
    3758:	90 e0       	ldi	r25, 0x00	; 0
    375a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    375e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3762:	81 e0       	ldi	r24, 0x01	; 1
    3764:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3768:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    376c:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    3770:	49 97       	sbiw	r24, 0x19	; 25
    3772:	8c f5       	brge	.+98     	; 0x37d6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xde8>
    3774:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    3778:	81 11       	cpse	r24, r1
    377a:	26 c0       	rjmp	.+76     	; 0x37c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    377c:	88 e1       	ldi	r24, 0x18	; 24
    377e:	90 e0       	ldi	r25, 0x00	; 0
    3780:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    3784:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    3788:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    378c:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3790:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3794:	8f cf       	rjmp	.-226    	; 0x36b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    3796:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    379a:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    379e:	2a e0       	ldi	r18, 0x0A	; 10
    37a0:	28 9f       	mul	r18, r24
    37a2:	b0 01       	movw	r22, r0
    37a4:	29 9f       	mul	r18, r25
    37a6:	70 0d       	add	r23, r0
    37a8:	11 24       	eor	r1, r1
    37aa:	07 2e       	mov	r0, r23
    37ac:	00 0c       	add	r0, r0
    37ae:	88 0b       	sbc	r24, r24
    37b0:	99 0b       	sbc	r25, r25
    37b2:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    37b6:	85 e1       	ldi	r24, 0x15	; 21
    37b8:	90 e0       	ldi	r25, 0x00	; 0
    37ba:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    37be:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    37c2:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    37c6:	d0 cf       	rjmp	.-96     	; 0x3768 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xd7a>
    37c8:	89 e1       	ldi	r24, 0x19	; 25
    37ca:	90 e0       	ldi	r25, 0x00	; 0
    37cc:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    37d0:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    37d4:	6f cf       	rjmp	.-290    	; 0x36b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    37d6:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    37da:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    37de:	08 2e       	mov	r0, r24
    37e0:	00 0c       	add	r0, r0
    37e2:	99 0b       	sbc	r25, r25
    37e4:	fc 01       	movw	r30, r24
    37e6:	ee 0f       	add	r30, r30
    37e8:	ff 1f       	adc	r31, r31
    37ea:	e3 5f       	subi	r30, 0xF3	; 243
    37ec:	f6 4d       	sbci	r31, 0xD6	; 214
    37ee:	20 81       	ld	r18, Z
    37f0:	31 81       	ldd	r19, Z+1	; 0x01
    37f2:	44 e6       	ldi	r20, 0x64	; 100
    37f4:	42 9f       	mul	r20, r18
    37f6:	b0 01       	movw	r22, r0
    37f8:	43 9f       	mul	r20, r19
    37fa:	70 0d       	add	r23, r0
    37fc:	11 24       	eor	r1, r1
    37fe:	88 0f       	add	r24, r24
    3800:	99 1f       	adc	r25, r25
    3802:	fc 01       	movw	r30, r24
    3804:	e1 5f       	subi	r30, 0xF1	; 241
    3806:	f6 4d       	sbci	r31, 0xD6	; 214
    3808:	80 81       	ld	r24, Z
    380a:	91 81       	ldd	r25, Z+1	; 0x01
    380c:	68 0f       	add	r22, r24
    380e:	79 1f       	adc	r23, r25
    3810:	07 2e       	mov	r0, r23
    3812:	00 0c       	add	r0, r0
    3814:	88 0b       	sbc	r24, r24
    3816:	99 0b       	sbc	r25, r25
    3818:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    381c:	4b cf       	rjmp	.-362    	; 0x36b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    381e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3822:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3826:	81 11       	cpse	r24, r1
    3828:	7c c0       	rjmp	.+248    	; 0x3922 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf34>
    382a:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    382e:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    3832:	24 e6       	ldi	r18, 0x64	; 100
    3834:	28 9f       	mul	r18, r24
    3836:	b0 01       	movw	r22, r0
    3838:	29 9f       	mul	r18, r25
    383a:	70 0d       	add	r23, r0
    383c:	11 24       	eor	r1, r1
    383e:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    3842:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    3846:	4a e0       	ldi	r20, 0x0A	; 10
    3848:	42 9f       	mul	r20, r18
    384a:	c0 01       	movw	r24, r0
    384c:	43 9f       	mul	r20, r19
    384e:	90 0d       	add	r25, r0
    3850:	11 24       	eor	r1, r1
    3852:	68 0f       	add	r22, r24
    3854:	79 1f       	adc	r23, r25
    3856:	07 2e       	mov	r0, r23
    3858:	00 0c       	add	r0, r0
    385a:	88 0b       	sbc	r24, r24
    385c:	99 0b       	sbc	r25, r25
    385e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3862:	8a e0       	ldi	r24, 0x0A	; 10
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    386a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    386e:	81 e0       	ldi	r24, 0x01	; 1
    3870:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3874:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    3878:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    387c:	24 e6       	ldi	r18, 0x64	; 100
    387e:	28 9f       	mul	r18, r24
    3880:	b0 01       	movw	r22, r0
    3882:	29 9f       	mul	r18, r25
    3884:	70 0d       	add	r23, r0
    3886:	11 24       	eor	r1, r1
    3888:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    388c:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    3890:	68 0f       	add	r22, r24
    3892:	79 1f       	adc	r23, r25
    3894:	07 2e       	mov	r0, r23
    3896:	00 0c       	add	r0, r0
    3898:	88 0b       	sbc	r24, r24
    389a:	99 0b       	sbc	r25, r25
    389c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    38a0:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    38a4:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    38a8:	49 97       	sbiw	r24, 0x19	; 25
    38aa:	74 f4       	brge	.+28     	; 0x38c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeda>
    38ac:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    38b0:	81 11       	cpse	r24, r1
    38b2:	50 c0       	rjmp	.+160    	; 0x3954 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf66>
    38b4:	88 e1       	ldi	r24, 0x18	; 24
    38b6:	90 e0       	ldi	r25, 0x00	; 0
    38b8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    38bc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    38c0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    38c4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    38c8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    38cc:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    38d0:	c3 97       	sbiw	r24, 0x33	; 51
    38d2:	24 f0       	brlt	.+8      	; 0x38dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeee>
    38d4:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    38d8:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    38dc:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <REP1>
    38e0:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <REP1+0x1>
    38e4:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
    38e8:	90 e0       	ldi	r25, 0x00	; 0
    38ea:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
    38ee:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
    38f2:	81 e0       	ldi	r24, 0x01	; 1
    38f4:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <PUMP_FLAG>
    38f8:	20 91 13 29 	lds	r18, 0x2913	; 0x802913 <SET_VALUE+0x6>
    38fc:	30 91 14 29 	lds	r19, 0x2914	; 0x802914 <SET_VALUE+0x7>
    3900:	4c e3       	ldi	r20, 0x3C	; 60
    3902:	42 9f       	mul	r20, r18
    3904:	c0 01       	movw	r24, r0
    3906:	43 9f       	mul	r20, r19
    3908:	90 0d       	add	r25, r0
    390a:	11 24       	eor	r1, r1
    390c:	20 91 15 29 	lds	r18, 0x2915	; 0x802915 <SET_VALUE+0x8>
    3910:	30 91 16 29 	lds	r19, 0x2916	; 0x802916 <SET_VALUE+0x9>
    3914:	82 0f       	add	r24, r18
    3916:	93 1f       	adc	r25, r19
    3918:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    391c:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    3920:	84 c8       	rjmp	.-3832   	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    3922:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    3926:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    392a:	2a e0       	ldi	r18, 0x0A	; 10
    392c:	28 9f       	mul	r18, r24
    392e:	b0 01       	movw	r22, r0
    3930:	29 9f       	mul	r18, r25
    3932:	70 0d       	add	r23, r0
    3934:	11 24       	eor	r1, r1
    3936:	07 2e       	mov	r0, r23
    3938:	00 0c       	add	r0, r0
    393a:	88 0b       	sbc	r24, r24
    393c:	99 0b       	sbc	r25, r25
    393e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3942:	85 e1       	ldi	r24, 0x15	; 21
    3944:	90 e0       	ldi	r25, 0x00	; 0
    3946:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    394a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    394e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3952:	90 cf       	rjmp	.-224    	; 0x3874 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xe86>
    3954:	89 e1       	ldi	r24, 0x19	; 25
    3956:	90 e0       	ldi	r25, 0x00	; 0
    3958:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    395c:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    3960:	b3 cf       	rjmp	.-154    	; 0x38c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeda>
    3962:	be 01       	movw	r22, r28
    3964:	dd 0f       	add	r29, r29
    3966:	88 0b       	sbc	r24, r24
    3968:	99 0b       	sbc	r25, r25
    396a:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    396e:	6b 01       	movw	r12, r22
    3970:	7c 01       	movw	r14, r24
    3972:	20 e0       	ldi	r18, 0x00	; 0
    3974:	30 e0       	ldi	r19, 0x00	; 0
    3976:	40 e7       	ldi	r20, 0x70	; 112
    3978:	51 e4       	ldi	r21, 0x41	; 65
    397a:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    397e:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3982:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3986:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    398a:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    398e:	9b 01       	movw	r18, r22
    3990:	ac 01       	movw	r20, r24
    3992:	c7 01       	movw	r24, r14
    3994:	b6 01       	movw	r22, r12
    3996:	ea c8       	rjmp	.-3628   	; 0x2b6c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x17e>
    3998:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <CHECK_RATE_OF_HEATING>
digitalWrite():
    399c:	61 e0       	ldi	r22, 0x01	; 1
    399e:	88 e1       	ldi	r24, 0x18	; 24
    39a0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    39a4:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    39a8:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    39ac:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    39b0:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    39b4:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <TEMP_VALUE_INITIAL>
    39b8:	90 93 8c 28 	sts	0x288C, r25	; 0x80288c <TEMP_VALUE_INITIAL+0x1>
    39bc:	a0 93 8d 28 	sts	0x288D, r26	; 0x80288d <TEMP_VALUE_INITIAL+0x2>
    39c0:	b0 93 8e 28 	sts	0x288E, r27	; 0x80288e <TEMP_VALUE_INITIAL+0x3>
    39c4:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    39c8:	60 93 87 28 	sts	0x2887, r22	; 0x802887 <START_COUNT_VALUE>
    39cc:	70 93 88 28 	sts	0x2888, r23	; 0x802888 <START_COUNT_VALUE+0x1>
    39d0:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <START_COUNT_VALUE+0x2>
    39d4:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <START_COUNT_VALUE+0x3>
    39d8:	e2 c8       	rjmp	.-3644   	; 0x2b9e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1b0>
    39da:	60 91 94 28 	lds	r22, 0x2894	; 0x802894 <SET_TEMP_FAH>
    39de:	70 91 95 28 	lds	r23, 0x2895	; 0x802895 <SET_TEMP_FAH+0x1>
    39e2:	07 2e       	mov	r0, r23
    39e4:	00 0c       	add	r0, r0
    39e6:	88 0b       	sbc	r24, r24
    39e8:	99 0b       	sbc	r25, r25
    39ea:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    39ee:	60 93 83 28 	sts	0x2883, r22	; 0x802883 <PID_SETPOINT_To_Show>
    39f2:	70 93 84 28 	sts	0x2884, r23	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    39f6:	80 93 85 28 	sts	0x2885, r24	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    39fa:	90 93 86 28 	sts	0x2886, r25	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    39fe:	20 e0       	ldi	r18, 0x00	; 0
    3a00:	30 e0       	ldi	r19, 0x00	; 0
    3a02:	40 e0       	ldi	r20, 0x00	; 0
    3a04:	52 e4       	ldi	r21, 0x42	; 66
    3a06:	0e 94 59 36 	call	0x6cb2	; 0x6cb2 <__subsf3>
    3a0a:	26 e6       	ldi	r18, 0x66	; 102
    3a0c:	36 e6       	ldi	r19, 0x66	; 102
    3a0e:	46 ee       	ldi	r20, 0xE6	; 230
    3a10:	5f e3       	ldi	r21, 0x3F	; 63
    3a12:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    3a16:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    3a1a:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    3a1e:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    3a22:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    3a26:	d5 c8       	rjmp	.-3670   	; 0x2bd2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1e4>
    3a28:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <checkTempRaised>
    3a2c:	18 c9       	rjmp	.-3536   	; 0x2c5e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x270>
    3a2e:	40 91 64 28 	lds	r20, 0x2864	; 0x802864 <TO_CHECK_REPETATION_WITHIN_TIME>
    3a32:	50 91 65 28 	lds	r21, 0x2865	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    3a36:	60 91 66 28 	lds	r22, 0x2866	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    3a3a:	70 91 67 28 	lds	r23, 0x2867	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    3a3e:	26 01       	movw	r4, r12
    3a40:	37 01       	movw	r6, r14
    3a42:	44 1a       	sub	r4, r20
    3a44:	55 0a       	sbc	r5, r21
    3a46:	66 0a       	sbc	r6, r22
    3a48:	77 0a       	sbc	r7, r23
    3a4a:	b3 01       	movw	r22, r6
    3a4c:	a2 01       	movw	r20, r4
    3a4e:	40 39       	cpi	r20, 0x90	; 144
    3a50:	5f 45       	sbci	r21, 0x5F	; 95
    3a52:	61 40       	sbci	r22, 0x01	; 1
    3a54:	71 05       	cpc	r23, r1
    3a56:	30 f4       	brcc	.+12     	; 0x3a64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1076>
    3a58:	01 96       	adiw	r24, 0x01	; 1
    3a5a:	80 93 68 28 	sts	0x2868, r24	; 0x802868 <COOLING_CYCLE_COUNT>
    3a5e:	90 93 69 28 	sts	0x2869, r25	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    3a62:	2e ca       	rjmp	.-2980   	; 0x2ec0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3a64:	10 92 68 28 	sts	0x2868, r1	; 0x802868 <COOLING_CYCLE_COUNT>
    3a68:	10 92 69 28 	sts	0x2869, r1	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    3a6c:	29 ca       	rjmp	.-2990   	; 0x2ec0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3a6e:	80 91 76 28 	lds	r24, 0x2876	; 0x802876 <CAL_OF_10_MIN>
    3a72:	90 91 77 28 	lds	r25, 0x2877	; 0x802877 <CAL_OF_10_MIN+0x1>
    3a76:	a0 91 78 28 	lds	r26, 0x2878	; 0x802878 <CAL_OF_10_MIN+0x2>
    3a7a:	b0 91 79 28 	lds	r27, 0x2879	; 0x802879 <CAL_OF_10_MIN+0x3>
    3a7e:	26 01       	movw	r4, r12
    3a80:	37 01       	movw	r6, r14
    3a82:	48 1a       	sub	r4, r24
    3a84:	59 0a       	sbc	r5, r25
    3a86:	6a 0a       	sbc	r6, r26
    3a88:	7b 0a       	sbc	r7, r27
    3a8a:	d3 01       	movw	r26, r6
    3a8c:	c2 01       	movw	r24, r4
    3a8e:	81 3a       	cpi	r24, 0xA1	; 161
    3a90:	98 46       	sbci	r25, 0x68	; 104
    3a92:	a6 40       	sbci	r26, 0x06	; 6
    3a94:	b1 05       	cpc	r27, r1
    3a96:	08 f4       	brcc	.+2      	; 0x3a9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10ac>
    3a98:	13 ca       	rjmp	.-3034   	; 0x2ec0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3a9a:	81 e0       	ldi	r24, 0x01	; 1
    3a9c:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    3aa0:	60 e0       	ldi	r22, 0x00	; 0
    3aa2:	85 e1       	ldi	r24, 0x15	; 21
    3aa4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3aa8:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    3aac:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
    3ab0:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
    3ab4:	05 ca       	rjmp	.-3062   	; 0x2ec0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3ab6:	20 e0       	ldi	r18, 0x00	; 0
    3ab8:	30 e0       	ldi	r19, 0x00	; 0
    3aba:	40 e8       	ldi	r20, 0x80	; 128
    3abc:	5f e3       	ldi	r21, 0x3F	; 63
    3abe:	c7 01       	movw	r24, r14
    3ac0:	b6 01       	movw	r22, r12
    3ac2:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    3ac6:	87 ff       	sbrs	r24, 7
    3ac8:	19 ca       	rjmp	.-3022   	; 0x2efc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3aca:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    3ace:	88 23       	and	r24, r24
    3ad0:	09 f4       	brne	.+2      	; 0x3ad4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10e6>
    3ad2:	14 ca       	rjmp	.-3032   	; 0x2efc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3ad4:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <EXECUTE_PID_LOOP>
    3ad8:	81 11       	cpse	r24, r1
    3ada:	07 c0       	rjmp	.+14     	; 0x3aea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10fc>
PID_Start():
    3adc:	8f ea       	ldi	r24, 0xAF	; 175
    3ade:	9a e2       	ldi	r25, 0x2A	; 42
    3ae0:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3ae4:	81 e0       	ldi	r24, 0x01	; 1
    3ae6:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <EXECUTE_PID_LOOP>
    3aea:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
    3aee:	06 ca       	rjmp	.-3060   	; 0x2efc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3af0:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3af4:	a7 01       	movw	r20, r14
    3af6:	96 01       	movw	r18, r12
    3af8:	81 11       	cpse	r24, r1
    3afa:	09 c0       	rjmp	.+18     	; 0x3b0e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1120>
    3afc:	c5 01       	movw	r24, r10
    3afe:	b4 01       	movw	r22, r8
    3b00:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    3b04:	87 ff       	sbrs	r24, 7
    3b06:	0e ca       	rjmp	.-3044   	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x536>
    3b08:	10 92 62 28 	sts	0x2862, r1	; 0x802862 <COUNTDOWN_START>
    3b0c:	0e ca       	rjmp	.-3044   	; 0x2f2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x53c>
    3b0e:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    3b12:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3b16:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3b1a:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    3b1e:	f0 cf       	rjmp	.-32     	; 0x3b00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1112>
    3b20:	80 e8       	ldi	r24, 0x80	; 128
    3b22:	9a e1       	ldi	r25, 0x1A	; 26
    3b24:	a6 e0       	ldi	r26, 0x06	; 6
    3b26:	b0 e0       	ldi	r27, 0x00	; 0
    3b28:	13 ca       	rjmp	.-3034   	; 0x2f50 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x562>
    3b2a:	80 e0       	ldi	r24, 0x00	; 0
    3b2c:	95 e3       	ldi	r25, 0x35	; 53
    3b2e:	ac e0       	ldi	r26, 0x0C	; 12
    3b30:	b0 e0       	ldi	r27, 0x00	; 0
    3b32:	21 ca       	rjmp	.-3006   	; 0x2f76 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x588>
    3b34:	80 e4       	ldi	r24, 0x40	; 64
    3b36:	92 e4       	ldi	r25, 0x42	; 66
    3b38:	af e0       	ldi	r26, 0x0F	; 15
    3b3a:	b0 e0       	ldi	r27, 0x00	; 0
    3b3c:	c8 ca       	rjmp	.-2672   	; 0x30ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6e0>
    3b3e:	80 e8       	ldi	r24, 0x80	; 128
    3b40:	94 e8       	ldi	r25, 0x84	; 132
    3b42:	ae e1       	ldi	r26, 0x1E	; 30
    3b44:	b0 e0       	ldi	r27, 0x00	; 0
    3b46:	d6 ca       	rjmp	.-2644   	; 0x30f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x706>
    3b48:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    3b4c:	88 23       	and	r24, r24
    3b4e:	09 f4       	brne	.+2      	; 0x3b52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1164>
    3b50:	4d c0       	rjmp	.+154    	; 0x3bec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11fe>
    3b52:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    3b56:	88 23       	and	r24, r24
    3b58:	09 f4       	brne	.+2      	; 0x3b5c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x116e>
    3b5a:	48 c0       	rjmp	.+144    	; 0x3bec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11fe>
    3b5c:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3b60:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    3b64:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3b68:	60 e0       	ldi	r22, 0x00	; 0
    3b6a:	8c e0       	ldi	r24, 0x0C	; 12
    3b6c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3b70:	8c e0       	ldi	r24, 0x0C	; 12
    3b72:	90 e0       	ldi	r25, 0x00	; 0
    3b74:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3b78:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3b7c:	80 e1       	ldi	r24, 0x10	; 16
    3b7e:	90 e0       	ldi	r25, 0x00	; 0
    3b80:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3b84:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3b88:	89 e1       	ldi	r24, 0x19	; 25
    3b8a:	90 e0       	ldi	r25, 0x00	; 0
    3b8c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    3b90:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    3b94:	81 e1       	ldi	r24, 0x11	; 17
    3b96:	90 e0       	ldi	r25, 0x00	; 0
    3b98:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3b9c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    3ba0:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
    3ba4:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    3ba8:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    3bac:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    3bb0:	89 2b       	or	r24, r25
    3bb2:	79 f4       	brne	.+30     	; 0x3bd2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11e4>
DISPLAY_DIGIT1():
    3bb4:	c0 93 f1 28 	sts	0x28F1, r28	; 0x8028f1 <digits1+0x2>
    3bb8:	d0 93 f2 28 	sts	0x28F2, r29	; 0x8028f2 <digits1+0x3>
    3bbc:	c0 93 f3 28 	sts	0x28F3, r28	; 0x8028f3 <digits1+0x4>
    3bc0:	d0 93 f4 28 	sts	0x28F4, r29	; 0x8028f4 <digits1+0x5>
    3bc4:	88 e1       	ldi	r24, 0x18	; 24
    3bc6:	90 e0       	ldi	r25, 0x00	; 0
    3bc8:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    3bcc:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    3bd0:	12 c8       	rjmp	.-4060   	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3bd2:	84 e1       	ldi	r24, 0x14	; 20
    3bd4:	90 e0       	ldi	r25, 0x00	; 0
    3bd6:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    3bda:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3bde:	88 e1       	ldi	r24, 0x18	; 24
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    3be6:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    3bea:	ee cf       	rjmp	.-36     	; 0x3bc8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11da>
SET_SHORT_PRESS_FUNCTION():
    3bec:	80 91 5a 28 	lds	r24, 0x285A	; 0x80285a <TIMER_LED_BLINK>
    3bf0:	90 91 5b 28 	lds	r25, 0x285B	; 0x80285b <TIMER_LED_BLINK+0x1>
    3bf4:	9c 01       	movw	r18, r24
    3bf6:	2f 5f       	subi	r18, 0xFF	; 255
    3bf8:	3f 4f       	sbci	r19, 0xFF	; 255
    3bfa:	20 93 5a 28 	sts	0x285A, r18	; 0x80285a <TIMER_LED_BLINK>
    3bfe:	30 93 5b 28 	sts	0x285B, r19	; 0x80285b <TIMER_LED_BLINK+0x1>
digitalWrite():
    3c02:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    3c04:	28 39       	cpi	r18, 0x98	; 152
    3c06:	38 40       	sbci	r19, 0x08	; 8
    3c08:	38 f0       	brcs	.+14     	; 0x3c18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x122a>
    3c0a:	87 59       	subi	r24, 0x97	; 151
    3c0c:	98 40       	sbci	r25, 0x08	; 8
    3c0e:	88 39       	cpi	r24, 0x98	; 152
    3c10:	98 40       	sbci	r25, 0x08	; 8
    3c12:	08 f0       	brcs	.+2      	; 0x3c16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1228>
    3c14:	55 c0       	rjmp	.+170    	; 0x3cc0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12d2>
digitalWrite():
    3c16:	60 e0       	ldi	r22, 0x00	; 0
    3c18:	8c e0       	ldi	r24, 0x0C	; 12
    3c1a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3c1e:	80 91 b4 28 	lds	r24, 0x28B4	; 0x8028b4 <IN_ERROR>
    3c22:	88 23       	and	r24, r24
    3c24:	71 f0       	breq	.+28     	; 0x3c42 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1254>
stop():
    3c26:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    3c2a:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    3c2e:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    3c32:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    3c36:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    3c3a:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    3c3e:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    3c42:	84 e6       	ldi	r24, 0x64	; 100
    3c44:	8c 9d       	mul	r24, r12
    3c46:	b0 01       	movw	r22, r0
    3c48:	8d 9d       	mul	r24, r13
    3c4a:	70 0d       	add	r23, r0
    3c4c:	11 24       	eor	r1, r1
    3c4e:	6e 0d       	add	r22, r14
    3c50:	7f 1d       	adc	r23, r15
    3c52:	07 2e       	mov	r0, r23
    3c54:	00 0c       	add	r0, r0
    3c56:	88 0b       	sbc	r24, r24
    3c58:	99 0b       	sbc	r25, r25
    3c5a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3c5e:	8a ec       	ldi	r24, 0xCA	; 202
    3c60:	9a e2       	ldi	r25, 0x2A	; 42
    3c62:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    3c66:	80 91 82 28 	lds	r24, 0x2882	; 0x802882 <Alternate_Display_Flag>
    3c6a:	88 23       	and	r24, r24
    3c6c:	f1 f1       	breq	.+124    	; 0x3cea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12fc>
digitalWrite():
    3c6e:	61 e0       	ldi	r22, 0x01	; 1
    3c70:	8c e1       	ldi	r24, 0x1C	; 28
    3c72:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3c76:	60 e0       	ldi	r22, 0x00	; 0
    3c78:	8d e1       	ldi	r24, 0x1D	; 29
    3c7a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3c7e:	60 91 83 28 	lds	r22, 0x2883	; 0x802883 <PID_SETPOINT_To_Show>
    3c82:	70 91 84 28 	lds	r23, 0x2884	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    3c86:	80 91 85 28 	lds	r24, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    3c8a:	90 91 86 28 	lds	r25, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    3c8e:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3c92:	21 11       	cpse	r18, r1
    3c94:	1a c0       	rjmp	.+52     	; 0x3cca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12dc>
    3c96:	20 e0       	ldi	r18, 0x00	; 0
    3c98:	30 e0       	ldi	r19, 0x00	; 0
    3c9a:	48 ec       	ldi	r20, 0xC8	; 200
    3c9c:	52 e4       	ldi	r21, 0x42	; 66
    3c9e:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    3ca2:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    3ca6:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3caa:	8a e0       	ldi	r24, 0x0A	; 10
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3cb2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3cb6:	81 e0       	ldi	r24, 0x01	; 1
    3cb8:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3cbc:	0c 94 fb 15 	jmp	0x2bf6	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3cc0:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <TIMER_LED_BLINK>
    3cc4:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <TIMER_LED_BLINK+0x1>
    3cc8:	aa cf       	rjmp	.-172    	; 0x3c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1230>
    3cca:	20 e0       	ldi	r18, 0x00	; 0
    3ccc:	30 e0       	ldi	r19, 0x00	; 0
    3cce:	40 e2       	ldi	r20, 0x20	; 32
    3cd0:	51 e4       	ldi	r21, 0x41	; 65
    3cd2:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    3cd6:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    3cda:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3cde:	c0 93 ed 28 	sts	0x28ED, r28	; 0x8028ed <digits2+0x6>
    3ce2:	d0 93 ee 28 	sts	0x28EE, r29	; 0x8028ee <digits2+0x7>
    3ce6:	0c 94 fb 15 	jmp	0x2bf6	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
digitalWrite():
    3cea:	60 e0       	ldi	r22, 0x00	; 0
    3cec:	8c e1       	ldi	r24, 0x1C	; 28
    3cee:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3cf2:	61 e0       	ldi	r22, 0x01	; 1
    3cf4:	8d e1       	ldi	r24, 0x1D	; 29
    3cf6:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3cfa:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3cfe:	81 11       	cpse	r24, r1
    3d00:	38 c0       	rjmp	.+112    	; 0x3d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1384>
    3d02:	c0 90 ff 28 	lds	r12, 0x28FF	; 0x8028ff <TEMP_DEG>
    3d06:	d0 90 00 29 	lds	r13, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    3d0a:	e0 90 01 29 	lds	r14, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    3d0e:	f0 90 02 29 	lds	r15, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    3d12:	2d ec       	ldi	r18, 0xCD	; 205
    3d14:	3c ec       	ldi	r19, 0xCC	; 204
    3d16:	47 ec       	ldi	r20, 0xC7	; 199
    3d18:	52 e4       	ldi	r21, 0x42	; 66
    3d1a:	c7 01       	movw	r24, r14
    3d1c:	b6 01       	movw	r22, r12
    3d1e:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    3d22:	18 16       	cp	r1, r24
    3d24:	b4 f4       	brge	.+44     	; 0x3d52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1364>
    3d26:	20 e0       	ldi	r18, 0x00	; 0
    3d28:	30 e0       	ldi	r19, 0x00	; 0
    3d2a:	40 e2       	ldi	r20, 0x20	; 32
    3d2c:	51 e4       	ldi	r21, 0x41	; 65
    3d2e:	c7 01       	movw	r24, r14
    3d30:	b6 01       	movw	r22, r12
    3d32:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    3d36:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    3d3a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3d3e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3d42:	8a e0       	ldi	r24, 0x0A	; 10
    3d44:	90 e0       	ldi	r25, 0x00	; 0
    3d46:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3d4a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3d4e:	0c 94 fb 15 	jmp	0x2bf6	; 0x2bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3d52:	20 e0       	ldi	r18, 0x00	; 0
    3d54:	30 e0       	ldi	r19, 0x00	; 0
    3d56:	48 ec       	ldi	r20, 0xC8	; 200
    3d58:	52 e4       	ldi	r21, 0x42	; 66
    3d5a:	c7 01       	movw	r24, r14
    3d5c:	b6 01       	movw	r22, r12
    3d5e:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    3d62:	0e 94 2a 37 	call	0x6e54	; 0x6e54 <__fixsfsi>
    3d66:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3d6a:	81 e0       	ldi	r24, 0x01	; 1
    3d6c:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3d70:	e8 cf       	rjmp	.-48     	; 0x3d42 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1354>
    3d72:	20 e0       	ldi	r18, 0x00	; 0
    3d74:	30 e0       	ldi	r19, 0x00	; 0
    3d76:	40 e2       	ldi	r20, 0x20	; 32
    3d78:	51 e4       	ldi	r21, 0x41	; 65
    3d7a:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    3d7e:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3d82:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3d86:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    3d8a:	a3 cf       	rjmp	.-186    	; 0x3cd2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12e4>
digitalWrite():
    3d8c:	60 e0       	ldi	r22, 0x00	; 0
    3d8e:	81 e2       	ldi	r24, 0x21	; 33
    3d90:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3d94:	60 e0       	ldi	r22, 0x00	; 0
    3d96:	80 ea       	ldi	r24, 0xA0	; 160
    3d98:	90 e0       	ldi	r25, 0x00	; 0
    3d9a:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3d9e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
LED_On_Call():
    3da2:	8b e1       	ldi	r24, 0x1B	; 27
    3da4:	9b e2       	ldi	r25, 0x2B	; 43
    3da6:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3daa:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
    3dae:	60 e0       	ldi	r22, 0x00	; 0
    3db0:	87 e8       	ldi	r24, 0x87	; 135
    3db2:	90 e0       	ldi	r25, 0x00	; 0
    3db4:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
SET_SHORT_PRESS_FUNCTION():
    3db8:	60 91 56 28 	lds	r22, 0x2856	; 0x802856 <actualRunMin>
    3dbc:	70 91 57 28 	lds	r23, 0x2857	; 0x802857 <actualRunMin+0x1>
    3dc0:	80 91 58 28 	lds	r24, 0x2858	; 0x802858 <actualRunMin+0x2>
    3dc4:	90 91 59 28 	lds	r25, 0x2859	; 0x802859 <actualRunMin+0x3>
    3dc8:	2c e3       	ldi	r18, 0x3C	; 60
    3dca:	30 e0       	ldi	r19, 0x00	; 0
    3dcc:	40 e0       	ldi	r20, 0x00	; 0
    3dce:	50 e0       	ldi	r21, 0x00	; 0
    3dd0:	0e 94 87 38 	call	0x710e	; 0x710e <__udivmodsi4>
    3dd4:	69 01       	movw	r12, r18
    3dd6:	20 93 54 28 	sts	0x2854, r18	; 0x802854 <actualRunHours>
    3dda:	30 93 55 28 	sts	0x2855, r19	; 0x802855 <actualRunHours+0x1>
    3dde:	62 e5       	ldi	r22, 0x52	; 82
    3de0:	78 e2       	ldi	r23, 0x28	; 40
    3de2:	88 e9       	ldi	r24, 0x98	; 152
    3de4:	90 e0       	ldi	r25, 0x00	; 0
    3de6:	0e 94 3c 10 	call	0x2078	; 0x2078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    3dea:	20 91 52 28 	lds	r18, 0x2852	; 0x802852 <processLog>
    3dee:	30 91 53 28 	lds	r19, 0x2853	; 0x802853 <processLog+0x1>
    3df2:	2c 0d       	add	r18, r12
    3df4:	3d 1d       	adc	r19, r13
    3df6:	20 93 52 28 	sts	0x2852, r18	; 0x802852 <processLog>
    3dfa:	30 93 53 28 	sts	0x2853, r19	; 0x802853 <processLog+0x1>
    3dfe:	2f 30       	cpi	r18, 0x0F	; 15
    3e00:	37 42       	sbci	r19, 0x27	; 39
    3e02:	68 f0       	brcs	.+26     	; 0x3e1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1430>
    3e04:	80 91 50 28 	lds	r24, 0x2850	; 0x802850 <processLogNumberOfTimes>
    3e08:	90 91 51 28 	lds	r25, 0x2851	; 0x802851 <processLogNumberOfTimes+0x1>
    3e0c:	01 96       	adiw	r24, 0x01	; 1
    3e0e:	80 93 50 28 	sts	0x2850, r24	; 0x802850 <processLogNumberOfTimes>
    3e12:	90 93 51 28 	sts	0x2851, r25	; 0x802851 <processLogNumberOfTimes+0x1>
    3e16:	10 92 52 28 	sts	0x2852, r1	; 0x802852 <processLog>
    3e1a:	10 92 53 28 	sts	0x2853, r1	; 0x802853 <processLog+0x1>
    3e1e:	62 e5       	ldi	r22, 0x52	; 82
    3e20:	78 e2       	ldi	r23, 0x28	; 40
    3e22:	88 e9       	ldi	r24, 0x98	; 152
    3e24:	90 e0       	ldi	r25, 0x00	; 0
    3e26:	0e 94 26 11 	call	0x224c	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    3e2a:	60 e5       	ldi	r22, 0x50	; 80
    3e2c:	78 e2       	ldi	r23, 0x28	; 40
    3e2e:	8a e9       	ldi	r24, 0x9A	; 154
    3e30:	90 e0       	ldi	r25, 0x00	; 0
    3e32:	0e 94 26 11 	call	0x224c	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    3e36:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <actualRunHours>
    3e3a:	10 92 55 28 	sts	0x2855, r1	; 0x802855 <actualRunHours+0x1>
    3e3e:	10 92 56 28 	sts	0x2856, r1	; 0x802856 <actualRunMin>
    3e42:	10 92 57 28 	sts	0x2857, r1	; 0x802857 <actualRunMin+0x1>
    3e46:	10 92 58 28 	sts	0x2858, r1	; 0x802858 <actualRunMin+0x2>
    3e4a:	10 92 59 28 	sts	0x2859, r1	; 0x802859 <actualRunMin+0x3>
stop():
    3e4e:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Alter_Disp>
    3e52:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <Alter_Disp+0xb>
    3e56:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <Alter_Disp+0xc>
    3e5a:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <Alter_Disp+0xd>
    3e5e:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <Alter_Disp+0xe>
    3e62:	10 92 d9 2a 	sts	0x2AD9, r1	; 0x802ad9 <Alter_Disp+0xf>
    3e66:	10 92 da 2a 	sts	0x2ADA, r1	; 0x802ada <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    3e6a:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <Blinking_Freq>
    3e6e:	83 30       	cpi	r24, 0x03	; 3
    3e70:	b8 f4       	brcc	.+46     	; 0x3ea0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x14b2>
    3e72:	84 ef       	ldi	r24, 0xF4	; 244
    3e74:	91 e0       	ldi	r25, 0x01	; 1
    3e76:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
stop():
    3e7a:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    3e7e:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    3e82:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    3e86:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    3e8a:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    3e8e:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    3e92:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
DISP_UPDATE():
    3e96:	8d eb       	ldi	r24, 0xBD	; 189
    3e98:	9b e2       	ldi	r25, 0x2B	; 43
    3e9a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    3e9e:	e5 cf       	rjmp	.-54     	; 0x3e6a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x147c>
SET_SHORT_PRESS_FUNCTION():
    3ea0:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    3ea4:	0c 94 15 15 	jmp	0x2a2a	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>

00003ea8 <shiftOut.constprop.7>:
shiftOut():
    3ea8:	ef 92       	push	r14
    3eaa:	ff 92       	push	r15
    3eac:	0f 93       	push	r16
    3eae:	1f 93       	push	r17
    3eb0:	cf 93       	push	r28
    3eb2:	df 93       	push	r29
    3eb4:	e8 2e       	mov	r14, r24
    3eb6:	f6 2e       	mov	r15, r22
    3eb8:	d0 e0       	ldi	r29, 0x00	; 0
    3eba:	c0 e0       	ldi	r28, 0x00	; 0
    3ebc:	04 2f       	mov	r16, r20
    3ebe:	10 e0       	ldi	r17, 0x00	; 0
    3ec0:	b8 01       	movw	r22, r16
    3ec2:	0c 2e       	mov	r0, r28
    3ec4:	02 c0       	rjmp	.+4      	; 0x3eca <shiftOut.constprop.7+0x22>
    3ec6:	75 95       	asr	r23
    3ec8:	67 95       	ror	r22
    3eca:	0a 94       	dec	r0
    3ecc:	e2 f7       	brpl	.-8      	; 0x3ec6 <shiftOut.constprop.7+0x1e>
    3ece:	61 70       	andi	r22, 0x01	; 1
    3ed0:	8e 2d       	mov	r24, r14
    3ed2:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3ed6:	61 e0       	ldi	r22, 0x01	; 1
    3ed8:	8f 2d       	mov	r24, r15
    3eda:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3ede:	60 e0       	ldi	r22, 0x00	; 0
    3ee0:	8f 2d       	mov	r24, r15
    3ee2:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3ee6:	21 96       	adiw	r28, 0x01	; 1
    3ee8:	c8 30       	cpi	r28, 0x08	; 8
    3eea:	d1 05       	cpc	r29, r1
    3eec:	49 f7       	brne	.-46     	; 0x3ec0 <shiftOut.constprop.7+0x18>
    3eee:	df 91       	pop	r29
    3ef0:	cf 91       	pop	r28
    3ef2:	1f 91       	pop	r17
    3ef4:	0f 91       	pop	r16
    3ef6:	ff 90       	pop	r15
    3ef8:	ef 90       	pop	r14
    3efa:	08 95       	ret

00003efc <DISP_REFRESH()>:
DISP_REFRESH():
    3efc:	0f 93       	push	r16
    3efe:	1f 93       	push	r17
    3f00:	cf 93       	push	r28
    3f02:	df 93       	push	r29
    3f04:	0e 94 c4 07 	call	0xf88	; 0xf88 <Eclass::cathode_high1() [clone .constprop.6]>
    3f08:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    3f0c:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <Eclass::cathode_high2() [clone .constprop.4]>
    3f10:	60 e0       	ldi	r22, 0x00	; 0
    3f12:	80 e2       	ldi	r24, 0x20	; 32
    3f14:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f18:	c0 91 35 28 	lds	r28, 0x2835	; 0x802835 <count2>
    3f1c:	d0 91 36 28 	lds	r29, 0x2836	; 0x802836 <count2+0x1>
    3f20:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <DOT2_0>
    3f24:	8e 01       	movw	r16, r28
    3f26:	00 0f       	add	r16, r16
    3f28:	11 1f       	adc	r17, r17
    3f2a:	88 23       	and	r24, r24
    3f2c:	31 f0       	breq	.+12     	; 0x3f3a <DISP_REFRESH()+0x3e>
    3f2e:	e0 91 e7 28 	lds	r30, 0x28E7	; 0x8028e7 <digits2>
    3f32:	f0 91 e8 28 	lds	r31, 0x28E8	; 0x8028e8 <digits2+0x1>
    3f36:	20 97       	sbiw	r28, 0x00	; 0
    3f38:	c1 f0       	breq	.+48     	; 0x3f6a <DISP_REFRESH()+0x6e>
    3f3a:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <DOT2_1>
    3f3e:	88 23       	and	r24, r24
    3f40:	39 f0       	breq	.+14     	; 0x3f50 <DISP_REFRESH()+0x54>
    3f42:	e0 91 e9 28 	lds	r30, 0x28E9	; 0x8028e9 <digits2+0x2>
    3f46:	f0 91 ea 28 	lds	r31, 0x28EA	; 0x8028ea <digits2+0x3>
    3f4a:	c1 30       	cpi	r28, 0x01	; 1
    3f4c:	d1 05       	cpc	r29, r1
    3f4e:	69 f0       	breq	.+26     	; 0x3f6a <DISP_REFRESH()+0x6e>
    3f50:	80 91 bc 28 	lds	r24, 0x28BC	; 0x8028bc <DOT2_2>
    3f54:	88 23       	and	r24, r24
    3f56:	09 f4       	brne	.+2      	; 0x3f5a <DISP_REFRESH()+0x5e>
    3f58:	80 c0       	rjmp	.+256    	; 0x405a <__RODATA_PM_OFFSET__+0x5a>
    3f5a:	c2 30       	cpi	r28, 0x02	; 2
    3f5c:	d1 05       	cpc	r29, r1
    3f5e:	09 f0       	breq	.+2      	; 0x3f62 <DISP_REFRESH()+0x66>
    3f60:	7c c0       	rjmp	.+248    	; 0x405a <__RODATA_PM_OFFSET__+0x5a>
    3f62:	e0 91 eb 28 	lds	r30, 0x28EB	; 0x8028eb <digits2+0x4>
    3f66:	f0 91 ec 28 	lds	r31, 0x28EC	; 0x8028ec <digits2+0x5>
    3f6a:	e0 5e       	subi	r30, 0xE0	; 224
    3f6c:	fd 44       	sbci	r31, 0x4D	; 77
    3f6e:	40 81       	ld	r20, Z
    3f70:	41 60       	ori	r20, 0x01	; 1
    3f72:	6e e1       	ldi	r22, 0x1E	; 30
    3f74:	8f e1       	ldi	r24, 0x1F	; 31
    3f76:	98 df       	rcall	.-208    	; 0x3ea8 <shiftOut.constprop.7>
    3f78:	f8 01       	movw	r30, r16
    3f7a:	e4 5f       	subi	r30, 0xF4	; 244
    3f7c:	fd 44       	sbci	r31, 0x4D	; 77
    3f7e:	60 e0       	ldi	r22, 0x00	; 0
    3f80:	80 81       	ld	r24, Z
    3f82:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f86:	61 e0       	ldi	r22, 0x01	; 1
    3f88:	80 e2       	ldi	r24, 0x20	; 32
    3f8a:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f8e:	21 96       	adiw	r28, 0x01	; 1
    3f90:	c4 30       	cpi	r28, 0x04	; 4
    3f92:	d1 05       	cpc	r29, r1
    3f94:	0c f0       	brlt	.+2      	; 0x3f98 <DISP_REFRESH()+0x9c>
    3f96:	6b c0       	rjmp	.+214    	; 0x406e <__RODATA_PM_OFFSET__+0x6e>
    3f98:	c0 93 35 28 	sts	0x2835, r28	; 0x802835 <count2>
    3f9c:	d0 93 36 28 	sts	0x2836, r29	; 0x802836 <count2+0x1>
DISPLAY_NUMBER1():
    3fa0:	0e 94 c4 07 	call	0xf88	; 0xf88 <Eclass::cathode_high1() [clone .constprop.6]>
    3fa4:	60 e0       	ldi	r22, 0x00	; 0
    3fa6:	83 e1       	ldi	r24, 0x13	; 19
    3fa8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3fac:	c0 91 37 28 	lds	r28, 0x2837	; 0x802837 <count1>
    3fb0:	d0 91 38 28 	lds	r29, 0x2838	; 0x802838 <count1+0x1>
    3fb4:	80 91 ba 28 	lds	r24, 0x28BA	; 0x8028ba <DOT1_0>
    3fb8:	8e 01       	movw	r16, r28
    3fba:	00 0f       	add	r16, r16
    3fbc:	11 1f       	adc	r17, r17
    3fbe:	88 23       	and	r24, r24
    3fc0:	31 f0       	breq	.+12     	; 0x3fce <DISP_REFRESH()+0xd2>
    3fc2:	e0 91 ef 28 	lds	r30, 0x28EF	; 0x8028ef <digits1>
    3fc6:	f0 91 f0 28 	lds	r31, 0x28F0	; 0x8028f0 <digits1+0x1>
    3fca:	20 97       	sbiw	r28, 0x00	; 0
    3fcc:	c1 f0       	breq	.+48     	; 0x3ffe <DISP_REFRESH()+0x102>
    3fce:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <DOT1_1>
    3fd2:	88 23       	and	r24, r24
    3fd4:	39 f0       	breq	.+14     	; 0x3fe4 <DISP_REFRESH()+0xe8>
    3fd6:	e0 91 f1 28 	lds	r30, 0x28F1	; 0x8028f1 <digits1+0x2>
    3fda:	f0 91 f2 28 	lds	r31, 0x28F2	; 0x8028f2 <digits1+0x3>
    3fde:	c1 30       	cpi	r28, 0x01	; 1
    3fe0:	d1 05       	cpc	r29, r1
    3fe2:	69 f0       	breq	.+26     	; 0x3ffe <DISP_REFRESH()+0x102>
    3fe4:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <DOT1_2>
    3fe8:	88 23       	and	r24, r24
    3fea:	09 f4       	brne	.+2      	; 0x3fee <DISP_REFRESH()+0xf2>
    3fec:	45 c0       	rjmp	.+138    	; 0x4078 <__RODATA_PM_OFFSET__+0x78>
    3fee:	c2 30       	cpi	r28, 0x02	; 2
    3ff0:	d1 05       	cpc	r29, r1
    3ff2:	09 f0       	breq	.+2      	; 0x3ff6 <DISP_REFRESH()+0xfa>
    3ff4:	41 c0       	rjmp	.+130    	; 0x4078 <__RODATA_PM_OFFSET__+0x78>
    3ff6:	e0 91 f3 28 	lds	r30, 0x28F3	; 0x8028f3 <digits1+0x4>
    3ffa:	f0 91 f4 28 	lds	r31, 0x28F4	; 0x8028f4 <digits1+0x5>
    3ffe:	e0 5e       	subi	r30, 0xE0	; 224
    4000:	fd 44       	sbci	r31, 0x4D	; 77
    4002:	40 81       	ld	r20, Z
    4004:	41 60       	ori	r20, 0x01	; 1
    4006:	64 e1       	ldi	r22, 0x14	; 20
    4008:	82 e1       	ldi	r24, 0x12	; 18
    400a:	4e df       	rcall	.-356    	; 0x3ea8 <shiftOut.constprop.7>
    400c:	f8 01       	movw	r30, r16
    400e:	ea 5e       	subi	r30, 0xEA	; 234
    4010:	fd 44       	sbci	r31, 0x4D	; 77
    4012:	60 e0       	ldi	r22, 0x00	; 0
    4014:	80 81       	ld	r24, Z
    4016:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    401a:	61 e0       	ldi	r22, 0x01	; 1
    401c:	83 e1       	ldi	r24, 0x13	; 19
    401e:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4022:	21 96       	adiw	r28, 0x01	; 1
    4024:	c4 30       	cpi	r28, 0x04	; 4
    4026:	d1 05       	cpc	r29, r1
    4028:	8c f5       	brge	.+98     	; 0x408c <__RODATA_PM_OFFSET__+0x8c>
    402a:	c0 93 37 28 	sts	0x2837, r28	; 0x802837 <count1>
    402e:	d0 93 38 28 	sts	0x2838, r29	; 0x802838 <count1+0x1>
Button_Tick_Update():
    4032:	88 e4       	ldi	r24, 0x48	; 72
    4034:	9a e2       	ldi	r25, 0x2A	; 42
    4036:	0e 94 0b 0b 	call	0x1616	; 0x1616 <OneButton::tick()>
    403a:	89 e2       	ldi	r24, 0x29	; 41
    403c:	9a e2       	ldi	r25, 0x2A	; 42
    403e:	0e 94 0b 0b 	call	0x1616	; 0x1616 <OneButton::tick()>
    4042:	8a e0       	ldi	r24, 0x0A	; 10
    4044:	9a e2       	ldi	r25, 0x2A	; 42
    4046:	0e 94 0b 0b 	call	0x1616	; 0x1616 <OneButton::tick()>
    404a:	8b ee       	ldi	r24, 0xEB	; 235
    404c:	99 e2       	ldi	r25, 0x29	; 41
DISP_REFRESH():
    404e:	df 91       	pop	r29
    4050:	cf 91       	pop	r28
    4052:	1f 91       	pop	r17
    4054:	0f 91       	pop	r16
Button_Tick_Update():
    4056:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <OneButton::tick()>
DISPLAY_NUMBER2():
    405a:	f8 01       	movw	r30, r16
    405c:	e9 51       	subi	r30, 0x19	; 25
    405e:	f7 4d       	sbci	r31, 0xD7	; 215
    4060:	01 90       	ld	r0, Z+
    4062:	f0 81       	ld	r31, Z
    4064:	e0 2d       	mov	r30, r0
    4066:	e0 5e       	subi	r30, 0xE0	; 224
    4068:	fd 44       	sbci	r31, 0x4D	; 77
    406a:	40 81       	ld	r20, Z
    406c:	82 cf       	rjmp	.-252    	; 0x3f72 <DISP_REFRESH()+0x76>
    406e:	10 92 35 28 	sts	0x2835, r1	; 0x802835 <count2>
    4072:	10 92 36 28 	sts	0x2836, r1	; 0x802836 <count2+0x1>
    4076:	94 cf       	rjmp	.-216    	; 0x3fa0 <DISP_REFRESH()+0xa4>
DISPLAY_NUMBER1():
    4078:	f8 01       	movw	r30, r16
    407a:	e1 51       	subi	r30, 0x11	; 17
    407c:	f7 4d       	sbci	r31, 0xD7	; 215
    407e:	01 90       	ld	r0, Z+
    4080:	f0 81       	ld	r31, Z
    4082:	e0 2d       	mov	r30, r0
    4084:	e0 5e       	subi	r30, 0xE0	; 224
    4086:	fd 44       	sbci	r31, 0x4D	; 77
    4088:	40 81       	ld	r20, Z
    408a:	bd cf       	rjmp	.-134    	; 0x4006 <__RODATA_PM_OFFSET__+0x6>
    408c:	10 92 37 28 	sts	0x2837, r1	; 0x802837 <count1>
    4090:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <count1+0x1>
    4094:	ce cf       	rjmp	.-100    	; 0x4032 <__RODATA_PM_OFFSET__+0x32>

00004096 <__vector_32>:
__vector_32():
    4096:	1f 92       	push	r1
    4098:	0f 92       	push	r0
    409a:	0f b6       	in	r0, 0x3f	; 63
    409c:	0f 92       	push	r0
    409e:	11 24       	eor	r1, r1
    40a0:	2f 93       	push	r18
    40a2:	3f 93       	push	r19
    40a4:	4f 93       	push	r20
    40a6:	5f 93       	push	r21
    40a8:	6f 93       	push	r22
    40aa:	7f 93       	push	r23
    40ac:	8f 93       	push	r24
    40ae:	9f 93       	push	r25
    40b0:	af 93       	push	r26
    40b2:	bf 93       	push	r27
    40b4:	ef 93       	push	r30
    40b6:	ff 93       	push	r31
    40b8:	8e e4       	ldi	r24, 0x4E	; 78
    40ba:	99 e2       	ldi	r25, 0x29	; 41
    40bc:	0e 94 05 06 	call	0xc0a	; 0xc0a <UartClass::_tx_data_empty_irq()>
    40c0:	ff 91       	pop	r31
    40c2:	ef 91       	pop	r30
    40c4:	bf 91       	pop	r27
    40c6:	af 91       	pop	r26
    40c8:	9f 91       	pop	r25
    40ca:	8f 91       	pop	r24
    40cc:	7f 91       	pop	r23
    40ce:	6f 91       	pop	r22
    40d0:	5f 91       	pop	r21
    40d2:	4f 91       	pop	r20
    40d4:	3f 91       	pop	r19
    40d6:	2f 91       	pop	r18
    40d8:	0f 90       	pop	r0
    40da:	0f be       	out	0x3f, r0	; 63
    40dc:	0f 90       	pop	r0
    40de:	1f 90       	pop	r1
    40e0:	18 95       	reti

000040e2 <__vector_31>:
__vector_31():
    40e2:	1f 92       	push	r1
    40e4:	0f 92       	push	r0
    40e6:	0f b6       	in	r0, 0x3f	; 63
    40e8:	0f 92       	push	r0
    40ea:	11 24       	eor	r1, r1
    40ec:	2f 93       	push	r18
    40ee:	8f 93       	push	r24
    40f0:	9f 93       	push	r25
    40f2:	ef 93       	push	r30
    40f4:	ff 93       	push	r31
_rx_complete_irq():
    40f6:	e0 91 5a 29 	lds	r30, 0x295A	; 0x80295a <Serial2+0xc>
    40fa:	f0 91 5b 29 	lds	r31, 0x295B	; 0x80295b <Serial2+0xd>
    40fe:	81 81       	ldd	r24, Z+1	; 0x01
    4100:	81 fd       	sbrc	r24, 1
    4102:	1b c0       	rjmp	.+54     	; 0x413a <__vector_31+0x58>
    4104:	90 81       	ld	r25, Z
    4106:	80 91 64 29 	lds	r24, 0x2964	; 0x802964 <Serial2+0x16>
    410a:	8f 5f       	subi	r24, 0xFF	; 255
    410c:	8f 73       	andi	r24, 0x3F	; 63
    410e:	20 91 65 29 	lds	r18, 0x2965	; 0x802965 <Serial2+0x17>
    4112:	82 17       	cp	r24, r18
    4114:	41 f0       	breq	.+16     	; 0x4126 <__vector_31+0x44>
    4116:	e0 91 64 29 	lds	r30, 0x2964	; 0x802964 <Serial2+0x16>
    411a:	f0 e0       	ldi	r31, 0x00	; 0
    411c:	e2 5b       	subi	r30, 0xB2	; 178
    411e:	f6 4d       	sbci	r31, 0xD6	; 214
    4120:	95 8f       	std	Z+29, r25	; 0x1d
    4122:	80 93 64 29 	sts	0x2964, r24	; 0x802964 <Serial2+0x16>
__vector_31():
    4126:	ff 91       	pop	r31
    4128:	ef 91       	pop	r30
    412a:	9f 91       	pop	r25
    412c:	8f 91       	pop	r24
    412e:	2f 91       	pop	r18
    4130:	0f 90       	pop	r0
    4132:	0f be       	out	0x3f, r0	; 63
    4134:	0f 90       	pop	r0
    4136:	1f 90       	pop	r1
    4138:	18 95       	reti
_rx_complete_irq():
    413a:	80 81       	ld	r24, Z
    413c:	f4 cf       	rjmp	.-24     	; 0x4126 <__vector_31+0x44>

0000413e <__vector_25>:
__vector_25():
    413e:	1f 92       	push	r1
    4140:	0f 92       	push	r0
    4142:	0f b6       	in	r0, 0x3f	; 63
    4144:	0f 92       	push	r0
    4146:	11 24       	eor	r1, r1
    4148:	8f 93       	push	r24
    414a:	9f 93       	push	r25
    414c:	af 93       	push	r26
    414e:	bf 93       	push	r27
    4150:	80 91 39 28 	lds	r24, 0x2839	; 0x802839 <timer_millis>
    4154:	90 91 3a 28 	lds	r25, 0x283A	; 0x80283a <timer_millis+0x1>
    4158:	a0 91 3b 28 	lds	r26, 0x283B	; 0x80283b <timer_millis+0x2>
    415c:	b0 91 3c 28 	lds	r27, 0x283C	; 0x80283c <timer_millis+0x3>
    4160:	01 96       	adiw	r24, 0x01	; 1
    4162:	a1 1d       	adc	r26, r1
    4164:	b1 1d       	adc	r27, r1
    4166:	80 93 39 28 	sts	0x2839, r24	; 0x802839 <timer_millis>
    416a:	90 93 3a 28 	sts	0x283A, r25	; 0x80283a <timer_millis+0x1>
    416e:	a0 93 3b 28 	sts	0x283B, r26	; 0x80283b <timer_millis+0x2>
    4172:	b0 93 3c 28 	sts	0x283C, r27	; 0x80283c <timer_millis+0x3>
    4176:	81 e0       	ldi	r24, 0x01	; 1
    4178:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    417c:	bf 91       	pop	r27
    417e:	af 91       	pop	r26
    4180:	9f 91       	pop	r25
    4182:	8f 91       	pop	r24
    4184:	0f 90       	pop	r0
    4186:	0f be       	out	0x3f, r0	; 63
    4188:	0f 90       	pop	r0
    418a:	1f 90       	pop	r1
    418c:	18 95       	reti

0000418e <__vector_7>:
__vector_7():
    418e:	1f 92       	push	r1
    4190:	0f 92       	push	r0
    4192:	0f b6       	in	r0, 0x3f	; 63
    4194:	0f 92       	push	r0
    4196:	11 24       	eor	r1, r1
    4198:	2f 93       	push	r18
    419a:	3f 93       	push	r19
    419c:	4f 93       	push	r20
    419e:	5f 93       	push	r21
    41a0:	6f 93       	push	r22
    41a2:	7f 93       	push	r23
    41a4:	8f 93       	push	r24
    41a6:	9f 93       	push	r25
    41a8:	af 93       	push	r26
    41aa:	bf 93       	push	r27
    41ac:	ef 93       	push	r30
    41ae:	ff 93       	push	r31
TICKER_UPDATE():
    41b0:	87 e8       	ldi	r24, 0x87	; 135
    41b2:	9b e2       	ldi	r25, 0x2B	; 43
    41b4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
PID_Tick_Update():
    41b8:	8f ea       	ldi	r24, 0xAF	; 175
    41ba:	9a e2       	ldi	r25, 0x2A	; 42
    41bc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
Rtd_Temp_Update():
    41c0:	80 e0       	ldi	r24, 0x00	; 0
    41c2:	9b e2       	ldi	r25, 0x2B	; 43
    41c4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
Rtd_Temp_Update_1():
    41c8:	85 ee       	ldi	r24, 0xE5	; 229
    41ca:	9a e2       	ldi	r25, 0x2A	; 42
    41cc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
TICKER_UPDATE():
    41d0:	8c e6       	ldi	r24, 0x6C	; 108
    41d2:	9b e2       	ldi	r25, 0x2B	; 43
    41d4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    41d8:	81 e5       	ldi	r24, 0x51	; 81
    41da:	9b e2       	ldi	r25, 0x2B	; 43
    41dc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    41e0:	86 e3       	ldi	r24, 0x36	; 54
    41e2:	9b e2       	ldi	r25, 0x2B	; 43
    41e4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    41e8:	8b e1       	ldi	r24, 0x1B	; 27
    41ea:	9b e2       	ldi	r25, 0x2B	; 43
    41ec:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
__vector_7():
    41f0:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    41f4:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    41f8:	01 96       	adiw	r24, 0x01	; 1
    41fa:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    41fe:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
TIME_CAL():
    4202:	80 91 62 28 	lds	r24, 0x2862	; 0x802862 <COUNTDOWN_START>
    4206:	88 23       	and	r24, r24
    4208:	81 f1       	breq	.+96     	; 0x426a <__vector_7+0xdc>
    420a:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <__data_end>
    420e:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <__data_end+0x1>
    4212:	01 96       	adiw	r24, 0x01	; 1
    4214:	80 93 18 28 	sts	0x2818, r24	; 0x802818 <__data_end>
    4218:	90 93 19 28 	sts	0x2819, r25	; 0x802819 <__data_end+0x1>
    421c:	80 3b       	cpi	r24, 0xB0	; 176
    421e:	9e 40       	sbci	r25, 0x0E	; 14
    4220:	21 f5       	brne	.+72     	; 0x426a <__vector_7+0xdc>
    4222:	80 91 56 28 	lds	r24, 0x2856	; 0x802856 <actualRunMin>
    4226:	90 91 57 28 	lds	r25, 0x2857	; 0x802857 <actualRunMin+0x1>
    422a:	a0 91 58 28 	lds	r26, 0x2858	; 0x802858 <actualRunMin+0x2>
    422e:	b0 91 59 28 	lds	r27, 0x2859	; 0x802859 <actualRunMin+0x3>
    4232:	01 96       	adiw	r24, 0x01	; 1
    4234:	a1 1d       	adc	r26, r1
    4236:	b1 1d       	adc	r27, r1
    4238:	80 93 56 28 	sts	0x2856, r24	; 0x802856 <actualRunMin>
    423c:	90 93 57 28 	sts	0x2857, r25	; 0x802857 <actualRunMin+0x1>
    4240:	a0 93 58 28 	sts	0x2858, r26	; 0x802858 <actualRunMin+0x2>
    4244:	b0 93 59 28 	sts	0x2859, r27	; 0x802859 <actualRunMin+0x3>
    4248:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    424c:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    4250:	01 97       	sbiw	r24, 0x01	; 1
    4252:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    4256:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    425a:	10 92 18 28 	sts	0x2818, r1	; 0x802818 <__data_end>
    425e:	10 92 19 28 	sts	0x2819, r1	; 0x802819 <__data_end+0x1>
    4262:	89 2b       	or	r24, r25
    4264:	11 f4       	brne	.+4      	; 0x426a <__vector_7+0xdc>
    4266:	10 92 62 28 	sts	0x2862, r1	; 0x802862 <COUNTDOWN_START>
__vector_7():
    426a:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    426e:	88 23       	and	r24, r24
    4270:	79 f0       	breq	.+30     	; 0x4290 <__vector_7+0x102>
    4272:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4276:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    427a:	42 97       	sbiw	r24, 0x12	; 18
    427c:	49 f4       	brne	.+18     	; 0x4290 <__vector_7+0x102>
    427e:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <currentMillis>
    4282:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <currentMillis+0x1>
    4286:	01 96       	adiw	r24, 0x01	; 1
    4288:	80 93 3d 28 	sts	0x283D, r24	; 0x80283d <currentMillis>
    428c:	90 93 3e 28 	sts	0x283E, r25	; 0x80283e <currentMillis+0x1>
    4290:	81 e0       	ldi	r24, 0x01	; 1
    4292:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    4296:	ff 91       	pop	r31
    4298:	ef 91       	pop	r30
    429a:	bf 91       	pop	r27
    429c:	af 91       	pop	r26
    429e:	9f 91       	pop	r25
    42a0:	8f 91       	pop	r24
    42a2:	7f 91       	pop	r23
    42a4:	6f 91       	pop	r22
    42a6:	5f 91       	pop	r21
    42a8:	4f 91       	pop	r20
    42aa:	3f 91       	pop	r19
    42ac:	2f 91       	pop	r18
    42ae:	0f 90       	pop	r0
    42b0:	0f be       	out	0x3f, r0	; 63
    42b2:	0f 90       	pop	r0
    42b4:	1f 90       	pop	r1
    42b6:	18 95       	reti

000042b8 <global constructors keyed to 65535_0_Butn.cpp.o.4190>:
_GLOBAL__I_65535_0_Butn.cpp.o.4190():
    42b8:	4f 92       	push	r4
    42ba:	5f 92       	push	r5
    42bc:	6f 92       	push	r6
    42be:	7f 92       	push	r7
    42c0:	8f 92       	push	r8
    42c2:	9f 92       	push	r9
    42c4:	af 92       	push	r10
    42c6:	bf 92       	push	r11
    42c8:	cf 92       	push	r12
    42ca:	df 92       	push	r13
    42cc:	ef 92       	push	r14
    42ce:	ff 92       	push	r15
    42d0:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <Serial2+0x2>
    42d4:	10 92 51 29 	sts	0x2951, r1	; 0x802951 <Serial2+0x3>
    42d8:	88 ee       	ldi	r24, 0xE8	; 232
    42da:	93 e0       	ldi	r25, 0x03	; 3
    42dc:	a0 e0       	ldi	r26, 0x00	; 0
    42de:	b0 e0       	ldi	r27, 0x00	; 0
    42e0:	80 93 52 29 	sts	0x2952, r24	; 0x802952 <Serial2+0x4>
    42e4:	90 93 53 29 	sts	0x2953, r25	; 0x802953 <Serial2+0x5>
    42e8:	a0 93 54 29 	sts	0x2954, r26	; 0x802954 <Serial2+0x6>
    42ec:	b0 93 55 29 	sts	0x2955, r27	; 0x802955 <Serial2+0x7>
    42f0:	8a e6       	ldi	r24, 0x6A	; 106
    42f2:	93 eb       	ldi	r25, 0xB3	; 179
    42f4:	80 93 4e 29 	sts	0x294E, r24	; 0x80294e <Serial2>
    42f8:	90 93 4f 29 	sts	0x294F, r25	; 0x80294f <Serial2+0x1>
    42fc:	80 e4       	ldi	r24, 0x40	; 64
    42fe:	98 e0       	ldi	r25, 0x08	; 8
    4300:	80 93 5a 29 	sts	0x295A, r24	; 0x80295a <Serial2+0xc>
    4304:	90 93 5b 29 	sts	0x295B, r25	; 0x80295b <Serial2+0xd>
    4308:	83 e2       	ldi	r24, 0x23	; 35
    430a:	80 93 5c 29 	sts	0x295C, r24	; 0x80295c <Serial2+0xe>
    430e:	82 e2       	ldi	r24, 0x22	; 34
    4310:	80 93 5d 29 	sts	0x295D, r24	; 0x80295d <Serial2+0xf>
    4314:	10 92 5e 29 	sts	0x295E, r1	; 0x80295e <Serial2+0x10>
    4318:	87 e2       	ldi	r24, 0x27	; 39
    431a:	80 93 5f 29 	sts	0x295F, r24	; 0x80295f <Serial2+0x11>
    431e:	86 e2       	ldi	r24, 0x26	; 38
    4320:	80 93 60 29 	sts	0x2960, r24	; 0x802960 <Serial2+0x12>
    4324:	80 e1       	ldi	r24, 0x10	; 16
    4326:	80 93 61 29 	sts	0x2961, r24	; 0x802961 <Serial2+0x13>
    432a:	10 92 62 29 	sts	0x2962, r1	; 0x802962 <Serial2+0x14>
    432e:	10 92 63 29 	sts	0x2963, r1	; 0x802963 <Serial2+0x15>
    4332:	10 92 64 29 	sts	0x2964, r1	; 0x802964 <Serial2+0x16>
    4336:	10 92 65 29 	sts	0x2965, r1	; 0x802965 <Serial2+0x17>
    433a:	10 92 66 29 	sts	0x2966, r1	; 0x802966 <Serial2+0x18>
    433e:	10 92 67 29 	sts	0x2967, r1	; 0x802967 <Serial2+0x19>
    4342:	80 e2       	ldi	r24, 0x20	; 32
    4344:	80 93 68 29 	sts	0x2968, r24	; 0x802968 <Serial2+0x1a>
    4348:	10 92 69 29 	sts	0x2969, r1	; 0x802969 <Serial2+0x1b>
    434c:	10 92 6a 29 	sts	0x296A, r1	; 0x80296a <Serial2+0x1c>
    4350:	82 e0       	ldi	r24, 0x02	; 2
    4352:	90 e0       	ldi	r25, 0x00	; 0
    4354:	80 93 c6 2b 	sts	0x2BC6, r24	; 0x802bc6 <DISP+0x9>
    4358:	90 93 c7 2b 	sts	0x2BC7, r25	; 0x802bc7 <DISP+0xa>
    435c:	80 e8       	ldi	r24, 0x80	; 128
    435e:	9c e0       	ldi	r25, 0x0C	; 12
    4360:	a0 e0       	ldi	r26, 0x00	; 0
    4362:	b0 e0       	ldi	r27, 0x00	; 0
    4364:	80 93 be 2b 	sts	0x2BBE, r24	; 0x802bbe <DISP+0x1>
    4368:	90 93 bf 2b 	sts	0x2BBF, r25	; 0x802bbf <DISP+0x2>
    436c:	a0 93 c0 2b 	sts	0x2BC0, r26	; 0x802bc0 <DISP+0x3>
    4370:	b0 93 c1 2b 	sts	0x2BC1, r27	; 0x802bc1 <DISP+0x4>
    4374:	10 92 c2 2b 	sts	0x2BC2, r1	; 0x802bc2 <DISP+0x5>
    4378:	10 92 c3 2b 	sts	0x2BC3, r1	; 0x802bc3 <DISP+0x6>
    437c:	10 92 c4 2b 	sts	0x2BC4, r1	; 0x802bc4 <DISP+0x7>
    4380:	10 92 c5 2b 	sts	0x2BC5, r1	; 0x802bc5 <DISP+0x8>
    4384:	8e e7       	ldi	r24, 0x7E	; 126
    4386:	9f e1       	ldi	r25, 0x1F	; 31
    4388:	80 93 ce 2b 	sts	0x2BCE, r24	; 0x802bce <DISP+0x11>
    438c:	90 93 cf 2b 	sts	0x2BCF, r25	; 0x802bcf <DISP+0x12>
    4390:	10 92 bd 2b 	sts	0x2BBD, r1	; 0x802bbd <DISP>
    4394:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <DISP+0x13>
    4398:	10 92 d1 2b 	sts	0x2BD1, r1	; 0x802bd1 <DISP+0x14>
    439c:	10 92 d2 2b 	sts	0x2BD2, r1	; 0x802bd2 <DISP+0x15>
    43a0:	10 92 d3 2b 	sts	0x2BD3, r1	; 0x802bd3 <DISP+0x16>
    43a4:	10 92 c8 2b 	sts	0x2BC8, r1	; 0x802bc8 <DISP+0xb>
    43a8:	10 92 c9 2b 	sts	0x2BC9, r1	; 0x802bc9 <DISP+0xc>
    43ac:	10 92 ca 2b 	sts	0x2BCA, r1	; 0x802bca <DISP+0xd>
    43b0:	10 92 cb 2b 	sts	0x2BCB, r1	; 0x802bcb <DISP+0xe>
    43b4:	10 92 ab 2b 	sts	0x2BAB, r1	; 0x802bab <VersionDisplay+0x9>
    43b8:	10 92 ac 2b 	sts	0x2BAC, r1	; 0x802bac <VersionDisplay+0xa>
    43bc:	80 e4       	ldi	r24, 0x40	; 64
    43be:	88 2e       	mov	r8, r24
    43c0:	82 e4       	ldi	r24, 0x42	; 66
    43c2:	98 2e       	mov	r9, r24
    43c4:	8f e0       	ldi	r24, 0x0F	; 15
    43c6:	a8 2e       	mov	r10, r24
    43c8:	b1 2c       	mov	r11, r1
    43ca:	80 92 a3 2b 	sts	0x2BA3, r8	; 0x802ba3 <VersionDisplay+0x1>
    43ce:	90 92 a4 2b 	sts	0x2BA4, r9	; 0x802ba4 <VersionDisplay+0x2>
    43d2:	a0 92 a5 2b 	sts	0x2BA5, r10	; 0x802ba5 <VersionDisplay+0x3>
    43d6:	b0 92 a6 2b 	sts	0x2BA6, r11	; 0x802ba6 <VersionDisplay+0x4>
    43da:	c1 2c       	mov	r12, r1
    43dc:	d1 2c       	mov	r13, r1
    43de:	76 01       	movw	r14, r12
    43e0:	c3 94       	inc	r12
    43e2:	c0 92 a7 2b 	sts	0x2BA7, r12	; 0x802ba7 <VersionDisplay+0x5>
    43e6:	d0 92 a8 2b 	sts	0x2BA8, r13	; 0x802ba8 <VersionDisplay+0x6>
    43ea:	e0 92 a9 2b 	sts	0x2BA9, r14	; 0x802ba9 <VersionDisplay+0x7>
    43ee:	f0 92 aa 2b 	sts	0x2BAA, r15	; 0x802baa <VersionDisplay+0x8>
    43f2:	85 e8       	ldi	r24, 0x85	; 133
    43f4:	91 e0       	ldi	r25, 0x01	; 1
    43f6:	80 93 b3 2b 	sts	0x2BB3, r24	; 0x802bb3 <VersionDisplay+0x11>
    43fa:	90 93 b4 2b 	sts	0x2BB4, r25	; 0x802bb4 <VersionDisplay+0x12>
    43fe:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <VersionDisplay>
    4402:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <VersionDisplay+0x13>
    4406:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <VersionDisplay+0x14>
    440a:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <VersionDisplay+0x15>
    440e:	10 92 b8 2b 	sts	0x2BB8, r1	; 0x802bb8 <VersionDisplay+0x16>
    4412:	10 92 ad 2b 	sts	0x2BAD, r1	; 0x802bad <VersionDisplay+0xb>
    4416:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <VersionDisplay+0xc>
    441a:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <VersionDisplay+0xd>
    441e:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <VersionDisplay+0xe>
    4422:	63 e2       	ldi	r22, 0x23	; 35
    4424:	70 e0       	ldi	r23, 0x00	; 0
    4426:	88 e4       	ldi	r24, 0x48	; 72
    4428:	9a e2       	ldi	r25, 0x2A	; 42
    442a:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    442e:	65 e2       	ldi	r22, 0x25	; 37
    4430:	70 e0       	ldi	r23, 0x00	; 0
    4432:	89 e2       	ldi	r24, 0x29	; 41
    4434:	9a e2       	ldi	r25, 0x2A	; 42
    4436:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    443a:	64 e2       	ldi	r22, 0x24	; 36
    443c:	70 e0       	ldi	r23, 0x00	; 0
    443e:	8a e0       	ldi	r24, 0x0A	; 10
    4440:	9a e2       	ldi	r25, 0x2A	; 42
    4442:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4446:	62 e2       	ldi	r22, 0x22	; 34
    4448:	70 e0       	ldi	r23, 0x00	; 0
    444a:	8b ee       	ldi	r24, 0xEB	; 235
    444c:	99 e2       	ldi	r25, 0x29	; 41
    444e:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4452:	10 92 90 2b 	sts	0x2B90, r1	; 0x802b90 <BUZZ+0x9>
    4456:	10 92 91 2b 	sts	0x2B91, r1	; 0x802b91 <BUZZ+0xa>
    445a:	80 ea       	ldi	r24, 0xA0	; 160
    445c:	96 e8       	ldi	r25, 0x86	; 134
    445e:	a1 e0       	ldi	r26, 0x01	; 1
    4460:	b0 e0       	ldi	r27, 0x00	; 0
    4462:	80 93 88 2b 	sts	0x2B88, r24	; 0x802b88 <BUZZ+0x1>
    4466:	90 93 89 2b 	sts	0x2B89, r25	; 0x802b89 <BUZZ+0x2>
    446a:	a0 93 8a 2b 	sts	0x2B8A, r26	; 0x802b8a <BUZZ+0x3>
    446e:	b0 93 8b 2b 	sts	0x2B8B, r27	; 0x802b8b <BUZZ+0x4>
    4472:	c0 92 8c 2b 	sts	0x2B8C, r12	; 0x802b8c <BUZZ+0x5>
    4476:	d0 92 8d 2b 	sts	0x2B8D, r13	; 0x802b8d <BUZZ+0x6>
    447a:	e0 92 8e 2b 	sts	0x2B8E, r14	; 0x802b8e <BUZZ+0x7>
    447e:	f0 92 8f 2b 	sts	0x2B8F, r15	; 0x802b8f <BUZZ+0x8>
    4482:	8a e6       	ldi	r24, 0x6A	; 106
    4484:	9d e0       	ldi	r25, 0x0D	; 13
    4486:	80 93 98 2b 	sts	0x2B98, r24	; 0x802b98 <BUZZ+0x11>
    448a:	90 93 99 2b 	sts	0x2B99, r25	; 0x802b99 <BUZZ+0x12>
    448e:	10 92 87 2b 	sts	0x2B87, r1	; 0x802b87 <BUZZ>
    4492:	10 92 9a 2b 	sts	0x2B9A, r1	; 0x802b9a <BUZZ+0x13>
    4496:	10 92 9b 2b 	sts	0x2B9B, r1	; 0x802b9b <BUZZ+0x14>
    449a:	10 92 9c 2b 	sts	0x2B9C, r1	; 0x802b9c <BUZZ+0x15>
    449e:	10 92 9d 2b 	sts	0x2B9D, r1	; 0x802b9d <BUZZ+0x16>
    44a2:	10 92 92 2b 	sts	0x2B92, r1	; 0x802b92 <BUZZ+0xb>
    44a6:	10 92 93 2b 	sts	0x2B93, r1	; 0x802b93 <BUZZ+0xc>
    44aa:	10 92 94 2b 	sts	0x2B94, r1	; 0x802b94 <BUZZ+0xd>
    44ae:	10 92 95 2b 	sts	0x2B95, r1	; 0x802b95 <BUZZ+0xe>
    44b2:	10 92 75 2b 	sts	0x2B75, r1	; 0x802b75 <BUZZ_TICK1+0x9>
    44b6:	10 92 76 2b 	sts	0x2B76, r1	; 0x802b76 <BUZZ_TICK1+0xa>
    44ba:	80 e8       	ldi	r24, 0x80	; 128
    44bc:	94 e8       	ldi	r25, 0x84	; 132
    44be:	ae e1       	ldi	r26, 0x1E	; 30
    44c0:	b0 e0       	ldi	r27, 0x00	; 0
    44c2:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    44c6:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    44ca:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    44ce:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
    44d2:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0x5>
    44d6:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0x6>
    44da:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0x7>
    44de:	10 92 74 2b 	sts	0x2B74, r1	; 0x802b74 <BUZZ_TICK1+0x8>
    44e2:	26 e7       	ldi	r18, 0x76	; 118
    44e4:	3d e0       	ldi	r19, 0x0D	; 13
    44e6:	20 93 7d 2b 	sts	0x2B7D, r18	; 0x802b7d <BUZZ_TICK1+0x11>
    44ea:	30 93 7e 2b 	sts	0x2B7E, r19	; 0x802b7e <BUZZ_TICK1+0x12>
    44ee:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    44f2:	10 92 7f 2b 	sts	0x2B7F, r1	; 0x802b7f <BUZZ_TICK1+0x13>
    44f6:	10 92 80 2b 	sts	0x2B80, r1	; 0x802b80 <BUZZ_TICK1+0x14>
    44fa:	10 92 81 2b 	sts	0x2B81, r1	; 0x802b81 <BUZZ_TICK1+0x15>
    44fe:	10 92 82 2b 	sts	0x2B82, r1	; 0x802b82 <BUZZ_TICK1+0x16>
    4502:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    4506:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    450a:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    450e:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    4512:	10 92 5a 2b 	sts	0x2B5A, r1	; 0x802b5a <BUZZ_TICK2+0x9>
    4516:	10 92 5b 2b 	sts	0x2B5B, r1	; 0x802b5b <BUZZ_TICK2+0xa>
    451a:	80 92 52 2b 	sts	0x2B52, r8	; 0x802b52 <BUZZ_TICK2+0x1>
    451e:	90 92 53 2b 	sts	0x2B53, r9	; 0x802b53 <BUZZ_TICK2+0x2>
    4522:	a0 92 54 2b 	sts	0x2B54, r10	; 0x802b54 <BUZZ_TICK2+0x3>
    4526:	b0 92 55 2b 	sts	0x2B55, r11	; 0x802b55 <BUZZ_TICK2+0x4>
    452a:	c0 92 56 2b 	sts	0x2B56, r12	; 0x802b56 <BUZZ_TICK2+0x5>
    452e:	d0 92 57 2b 	sts	0x2B57, r13	; 0x802b57 <BUZZ_TICK2+0x6>
    4532:	e0 92 58 2b 	sts	0x2B58, r14	; 0x802b58 <BUZZ_TICK2+0x7>
    4536:	f0 92 59 2b 	sts	0x2B59, r15	; 0x802b59 <BUZZ_TICK2+0x8>
    453a:	2c e7       	ldi	r18, 0x7C	; 124
    453c:	3d e0       	ldi	r19, 0x0D	; 13
    453e:	20 93 62 2b 	sts	0x2B62, r18	; 0x802b62 <BUZZ_TICK2+0x11>
    4542:	30 93 63 2b 	sts	0x2B63, r19	; 0x802b63 <BUZZ_TICK2+0x12>
    4546:	10 92 51 2b 	sts	0x2B51, r1	; 0x802b51 <BUZZ_TICK2>
    454a:	10 92 64 2b 	sts	0x2B64, r1	; 0x802b64 <BUZZ_TICK2+0x13>
    454e:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK2+0x14>
    4552:	10 92 66 2b 	sts	0x2B66, r1	; 0x802b66 <BUZZ_TICK2+0x15>
    4556:	10 92 67 2b 	sts	0x2B67, r1	; 0x802b67 <BUZZ_TICK2+0x16>
    455a:	10 92 5c 2b 	sts	0x2B5C, r1	; 0x802b5c <BUZZ_TICK2+0xb>
    455e:	10 92 5d 2b 	sts	0x2B5D, r1	; 0x802b5d <BUZZ_TICK2+0xc>
    4562:	10 92 5e 2b 	sts	0x2B5E, r1	; 0x802b5e <BUZZ_TICK2+0xd>
    4566:	10 92 5f 2b 	sts	0x2B5F, r1	; 0x802b5f <BUZZ_TICK2+0xe>
    456a:	10 92 3f 2b 	sts	0x2B3F, r1	; 0x802b3f <Blink_LED_ON+0x9>
    456e:	10 92 40 2b 	sts	0x2B40, r1	; 0x802b40 <Blink_LED_ON+0xa>
    4572:	40 ee       	ldi	r20, 0xE0	; 224
    4574:	53 e9       	ldi	r21, 0x93	; 147
    4576:	64 e0       	ldi	r22, 0x04	; 4
    4578:	70 e0       	ldi	r23, 0x00	; 0
    457a:	40 93 37 2b 	sts	0x2B37, r20	; 0x802b37 <Blink_LED_ON+0x1>
    457e:	50 93 38 2b 	sts	0x2B38, r21	; 0x802b38 <Blink_LED_ON+0x2>
    4582:	60 93 39 2b 	sts	0x2B39, r22	; 0x802b39 <Blink_LED_ON+0x3>
    4586:	70 93 3a 2b 	sts	0x2B3A, r23	; 0x802b3a <Blink_LED_ON+0x4>
    458a:	10 92 3b 2b 	sts	0x2B3B, r1	; 0x802b3b <Blink_LED_ON+0x5>
    458e:	10 92 3c 2b 	sts	0x2B3C, r1	; 0x802b3c <Blink_LED_ON+0x6>
    4592:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <Blink_LED_ON+0x7>
    4596:	10 92 3e 2b 	sts	0x2B3E, r1	; 0x802b3e <Blink_LED_ON+0x8>
    459a:	2c e9       	ldi	r18, 0x9C	; 156
    459c:	3d e0       	ldi	r19, 0x0D	; 13
    459e:	20 93 47 2b 	sts	0x2B47, r18	; 0x802b47 <Blink_LED_ON+0x11>
    45a2:	30 93 48 2b 	sts	0x2B48, r19	; 0x802b48 <Blink_LED_ON+0x12>
    45a6:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <Blink_LED_ON>
    45aa:	10 92 49 2b 	sts	0x2B49, r1	; 0x802b49 <Blink_LED_ON+0x13>
    45ae:	10 92 4a 2b 	sts	0x2B4A, r1	; 0x802b4a <Blink_LED_ON+0x14>
    45b2:	10 92 4b 2b 	sts	0x2B4B, r1	; 0x802b4b <Blink_LED_ON+0x15>
    45b6:	10 92 4c 2b 	sts	0x2B4C, r1	; 0x802b4c <Blink_LED_ON+0x16>
    45ba:	10 92 41 2b 	sts	0x2B41, r1	; 0x802b41 <Blink_LED_ON+0xb>
    45be:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <Blink_LED_ON+0xc>
    45c2:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <Blink_LED_ON+0xd>
    45c6:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <Blink_LED_ON+0xe>
    45ca:	10 92 24 2b 	sts	0x2B24, r1	; 0x802b24 <Blink_LED_OFF+0x9>
    45ce:	10 92 25 2b 	sts	0x2B25, r1	; 0x802b25 <Blink_LED_OFF+0xa>
    45d2:	40 ec       	ldi	r20, 0xC0	; 192
    45d4:	57 e2       	ldi	r21, 0x27	; 39
    45d6:	69 e0       	ldi	r22, 0x09	; 9
    45d8:	70 e0       	ldi	r23, 0x00	; 0
    45da:	40 93 1c 2b 	sts	0x2B1C, r20	; 0x802b1c <Blink_LED_OFF+0x1>
    45de:	50 93 1d 2b 	sts	0x2B1D, r21	; 0x802b1d <Blink_LED_OFF+0x2>
    45e2:	60 93 1e 2b 	sts	0x2B1E, r22	; 0x802b1e <Blink_LED_OFF+0x3>
    45e6:	70 93 1f 2b 	sts	0x2B1F, r23	; 0x802b1f <Blink_LED_OFF+0x4>
    45ea:	10 92 20 2b 	sts	0x2B20, r1	; 0x802b20 <Blink_LED_OFF+0x5>
    45ee:	10 92 21 2b 	sts	0x2B21, r1	; 0x802b21 <Blink_LED_OFF+0x6>
    45f2:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <Blink_LED_OFF+0x7>
    45f6:	10 92 23 2b 	sts	0x2B23, r1	; 0x802b23 <Blink_LED_OFF+0x8>
    45fa:	26 e9       	ldi	r18, 0x96	; 150
    45fc:	3d e0       	ldi	r19, 0x0D	; 13
    45fe:	20 93 2c 2b 	sts	0x2B2C, r18	; 0x802b2c <Blink_LED_OFF+0x11>
    4602:	30 93 2d 2b 	sts	0x2B2D, r19	; 0x802b2d <Blink_LED_OFF+0x12>
    4606:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Blink_LED_OFF>
    460a:	10 92 2e 2b 	sts	0x2B2E, r1	; 0x802b2e <Blink_LED_OFF+0x13>
    460e:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <Blink_LED_OFF+0x14>
    4612:	10 92 30 2b 	sts	0x2B30, r1	; 0x802b30 <Blink_LED_OFF+0x15>
    4616:	10 92 31 2b 	sts	0x2B31, r1	; 0x802b31 <Blink_LED_OFF+0x16>
    461a:	10 92 26 2b 	sts	0x2B26, r1	; 0x802b26 <Blink_LED_OFF+0xb>
    461e:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <Blink_LED_OFF+0xc>
    4622:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <Blink_LED_OFF+0xd>
    4626:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <Blink_LED_OFF+0xe>
    462a:	10 92 09 2b 	sts	0x2B09, r1	; 0x802b09 <TEMP_UPDATE+0x9>
    462e:	10 92 0a 2b 	sts	0x2B0A, r1	; 0x802b0a <TEMP_UPDATE+0xa>
    4632:	48 e4       	ldi	r20, 0x48	; 72
    4634:	58 ee       	ldi	r21, 0xE8	; 232
    4636:	61 e0       	ldi	r22, 0x01	; 1
    4638:	70 e0       	ldi	r23, 0x00	; 0
    463a:	40 93 01 2b 	sts	0x2B01, r20	; 0x802b01 <TEMP_UPDATE+0x1>
    463e:	50 93 02 2b 	sts	0x2B02, r21	; 0x802b02 <TEMP_UPDATE+0x2>
    4642:	60 93 03 2b 	sts	0x2B03, r22	; 0x802b03 <TEMP_UPDATE+0x3>
    4646:	70 93 04 2b 	sts	0x2B04, r23	; 0x802b04 <TEMP_UPDATE+0x4>
    464a:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <TEMP_UPDATE+0x5>
    464e:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <TEMP_UPDATE+0x6>
    4652:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <TEMP_UPDATE+0x7>
    4656:	10 92 08 2b 	sts	0x2B08, r1	; 0x802b08 <TEMP_UPDATE+0x8>
    465a:	25 ea       	ldi	r18, 0xA5	; 165
    465c:	3d e0       	ldi	r19, 0x0D	; 13
    465e:	20 93 11 2b 	sts	0x2B11, r18	; 0x802b11 <TEMP_UPDATE+0x11>
    4662:	30 93 12 2b 	sts	0x2B12, r19	; 0x802b12 <TEMP_UPDATE+0x12>
    4666:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <TEMP_UPDATE>
    466a:	10 92 13 2b 	sts	0x2B13, r1	; 0x802b13 <TEMP_UPDATE+0x13>
    466e:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <TEMP_UPDATE+0x14>
    4672:	10 92 15 2b 	sts	0x2B15, r1	; 0x802b15 <TEMP_UPDATE+0x15>
    4676:	10 92 16 2b 	sts	0x2B16, r1	; 0x802b16 <TEMP_UPDATE+0x16>
    467a:	10 92 0b 2b 	sts	0x2B0B, r1	; 0x802b0b <TEMP_UPDATE+0xb>
    467e:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <TEMP_UPDATE+0xc>
    4682:	10 92 0d 2b 	sts	0x2B0D, r1	; 0x802b0d <TEMP_UPDATE+0xd>
    4686:	10 92 0e 2b 	sts	0x2B0E, r1	; 0x802b0e <TEMP_UPDATE+0xe>
    468a:	10 92 ee 2a 	sts	0x2AEE, r1	; 0x802aee <TEMP_UPDATE_1+0x9>
    468e:	10 92 ef 2a 	sts	0x2AEF, r1	; 0x802aef <TEMP_UPDATE_1+0xa>
    4692:	48 eb       	ldi	r20, 0xB8	; 184
    4694:	5f ef       	ldi	r21, 0xFF	; 255
    4696:	61 e0       	ldi	r22, 0x01	; 1
    4698:	70 e0       	ldi	r23, 0x00	; 0
    469a:	40 93 e6 2a 	sts	0x2AE6, r20	; 0x802ae6 <TEMP_UPDATE_1+0x1>
    469e:	50 93 e7 2a 	sts	0x2AE7, r21	; 0x802ae7 <TEMP_UPDATE_1+0x2>
    46a2:	60 93 e8 2a 	sts	0x2AE8, r22	; 0x802ae8 <TEMP_UPDATE_1+0x3>
    46a6:	70 93 e9 2a 	sts	0x2AE9, r23	; 0x802ae9 <TEMP_UPDATE_1+0x4>
    46aa:	10 92 ea 2a 	sts	0x2AEA, r1	; 0x802aea <TEMP_UPDATE_1+0x5>
    46ae:	10 92 eb 2a 	sts	0x2AEB, r1	; 0x802aeb <TEMP_UPDATE_1+0x6>
    46b2:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <TEMP_UPDATE_1+0x7>
    46b6:	10 92 ed 2a 	sts	0x2AED, r1	; 0x802aed <TEMP_UPDATE_1+0x8>
    46ba:	2e e6       	ldi	r18, 0x6E	; 110
    46bc:	3e e0       	ldi	r19, 0x0E	; 14
    46be:	20 93 f6 2a 	sts	0x2AF6, r18	; 0x802af6 <TEMP_UPDATE_1+0x11>
    46c2:	30 93 f7 2a 	sts	0x2AF7, r19	; 0x802af7 <TEMP_UPDATE_1+0x12>
    46c6:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <TEMP_UPDATE_1>
    46ca:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <TEMP_UPDATE_1+0x13>
    46ce:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <TEMP_UPDATE_1+0x14>
    46d2:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <TEMP_UPDATE_1+0x15>
    46d6:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <TEMP_UPDATE_1+0x16>
    46da:	10 92 f0 2a 	sts	0x2AF0, r1	; 0x802af0 <TEMP_UPDATE_1+0xb>
    46de:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <TEMP_UPDATE_1+0xc>
    46e2:	10 92 f2 2a 	sts	0x2AF2, r1	; 0x802af2 <TEMP_UPDATE_1+0xd>
    46e6:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <TEMP_UPDATE_1+0xe>
    46ea:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <Alter_Disp+0x9>
    46ee:	10 92 d4 2a 	sts	0x2AD4, r1	; 0x802ad4 <Alter_Disp+0xa>
    46f2:	80 93 cb 2a 	sts	0x2ACB, r24	; 0x802acb <Alter_Disp+0x1>
    46f6:	90 93 cc 2a 	sts	0x2ACC, r25	; 0x802acc <Alter_Disp+0x2>
    46fa:	a0 93 cd 2a 	sts	0x2ACD, r26	; 0x802acd <Alter_Disp+0x3>
    46fe:	b0 93 ce 2a 	sts	0x2ACE, r27	; 0x802ace <Alter_Disp+0x4>
    4702:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <Alter_Disp+0x5>
    4706:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <Alter_Disp+0x6>
    470a:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <Alter_Disp+0x7>
    470e:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <Alter_Disp+0x8>
    4712:	8a e7       	ldi	r24, 0x7A	; 122
    4714:	91 e0       	ldi	r25, 0x01	; 1
    4716:	80 93 db 2a 	sts	0x2ADB, r24	; 0x802adb <Alter_Disp+0x11>
    471a:	90 93 dc 2a 	sts	0x2ADC, r25	; 0x802adc <Alter_Disp+0x12>
    471e:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Alter_Disp>
    4722:	10 92 dd 2a 	sts	0x2ADD, r1	; 0x802add <Alter_Disp+0x13>
    4726:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <Alter_Disp+0x14>
    472a:	10 92 df 2a 	sts	0x2ADF, r1	; 0x802adf <Alter_Disp+0x15>
    472e:	10 92 e0 2a 	sts	0x2AE0, r1	; 0x802ae0 <Alter_Disp+0x16>
    4732:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <Alter_Disp+0xb>
    4736:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <Alter_Disp+0xc>
    473a:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <Alter_Disp+0xd>
    473e:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <Alter_Disp+0xe>
    4742:	10 92 b8 2a 	sts	0x2AB8, r1	; 0x802ab8 <PID_EXE+0x9>
    4746:	10 92 b9 2a 	sts	0x2AB9, r1	; 0x802ab9 <PID_EXE+0xa>
    474a:	80 e8       	ldi	r24, 0x80	; 128
    474c:	9a e1       	ldi	r25, 0x1A	; 26
    474e:	a6 e0       	ldi	r26, 0x06	; 6
    4750:	b0 e0       	ldi	r27, 0x00	; 0
    4752:	80 93 b0 2a 	sts	0x2AB0, r24	; 0x802ab0 <PID_EXE+0x1>
    4756:	90 93 b1 2a 	sts	0x2AB1, r25	; 0x802ab1 <PID_EXE+0x2>
    475a:	a0 93 b2 2a 	sts	0x2AB2, r26	; 0x802ab2 <PID_EXE+0x3>
    475e:	b0 93 b3 2a 	sts	0x2AB3, r27	; 0x802ab3 <PID_EXE+0x4>
    4762:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <PID_EXE+0x5>
    4766:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <PID_EXE+0x6>
    476a:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <PID_EXE+0x7>
    476e:	10 92 b7 2a 	sts	0x2AB7, r1	; 0x802ab7 <PID_EXE+0x8>
    4772:	86 eb       	ldi	r24, 0xB6	; 182
    4774:	9e e0       	ldi	r25, 0x0E	; 14
    4776:	80 93 c0 2a 	sts	0x2AC0, r24	; 0x802ac0 <PID_EXE+0x11>
    477a:	90 93 c1 2a 	sts	0x2AC1, r25	; 0x802ac1 <PID_EXE+0x12>
    477e:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    4782:	10 92 c2 2a 	sts	0x2AC2, r1	; 0x802ac2 <PID_EXE+0x13>
    4786:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE+0x14>
    478a:	10 92 c4 2a 	sts	0x2AC4, r1	; 0x802ac4 <PID_EXE+0x15>
    478e:	10 92 c5 2a 	sts	0x2AC5, r1	; 0x802ac5 <PID_EXE+0x16>
    4792:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    4796:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    479a:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    479e:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    47a2:	c0 90 13 28 	lds	r12, 0x2813	; 0x802813 <Kd>
    47a6:	d0 90 14 28 	lds	r13, 0x2814	; 0x802814 <Kd+0x1>
    47aa:	e0 90 15 28 	lds	r14, 0x2815	; 0x802815 <Kd+0x2>
    47ae:	f0 90 16 28 	lds	r15, 0x2816	; 0x802816 <Kd+0x3>
    47b2:	80 90 0f 28 	lds	r8, 0x280F	; 0x80280f <Ki>
    47b6:	90 90 10 28 	lds	r9, 0x2810	; 0x802810 <Ki+0x1>
    47ba:	a0 90 11 28 	lds	r10, 0x2811	; 0x802811 <Ki+0x2>
    47be:	b0 90 12 28 	lds	r11, 0x2812	; 0x802812 <Ki+0x3>
    47c2:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    47c6:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    47ca:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    47ce:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    47d2:	8b e6       	ldi	r24, 0x6B	; 107
    47d4:	9a e2       	ldi	r25, 0x2A	; 42
    47d6:	80 93 91 2a 	sts	0x2A91, r24	; 0x802a91 <myPID+0x1e>
    47da:	90 93 92 2a 	sts	0x2A92, r25	; 0x802a92 <myPID+0x1f>
    47de:	8f e6       	ldi	r24, 0x6F	; 111
    47e0:	9a e2       	ldi	r25, 0x2A	; 42
    47e2:	80 93 8f 2a 	sts	0x2A8F, r24	; 0x802a8f <myPID+0x1c>
    47e6:	90 93 90 2a 	sts	0x2A90, r25	; 0x802a90 <myPID+0x1d>
    47ea:	87 e6       	ldi	r24, 0x67	; 103
    47ec:	9a e2       	ldi	r25, 0x2A	; 42
    47ee:	80 93 93 2a 	sts	0x2A93, r24	; 0x802a93 <myPID+0x20>
    47f2:	90 93 94 2a 	sts	0x2A94, r25	; 0x802a94 <myPID+0x21>
    47f6:	10 92 ad 2a 	sts	0x2AAD, r1	; 0x802aad <myPID+0x3a>
    47fa:	10 92 a5 2a 	sts	0x2AA5, r1	; 0x802aa5 <myPID+0x32>
    47fe:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <myPID+0x33>
    4802:	10 92 a7 2a 	sts	0x2AA7, r1	; 0x802aa7 <myPID+0x34>
    4806:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <myPID+0x35>
    480a:	80 e0       	ldi	r24, 0x00	; 0
    480c:	90 e0       	ldi	r25, 0x00	; 0
    480e:	af e7       	ldi	r26, 0x7F	; 127
    4810:	b3 e4       	ldi	r27, 0x43	; 67
    4812:	80 93 a9 2a 	sts	0x2AA9, r24	; 0x802aa9 <myPID+0x36>
    4816:	90 93 aa 2a 	sts	0x2AAA, r25	; 0x802aaa <myPID+0x37>
    481a:	a0 93 ab 2a 	sts	0x2AAB, r26	; 0x802aab <myPID+0x38>
    481e:	b0 93 ac 2a 	sts	0x2AAC, r27	; 0x802aac <myPID+0x39>
    4822:	84 e6       	ldi	r24, 0x64	; 100
    4824:	90 e0       	ldi	r25, 0x00	; 0
    4826:	a0 e0       	ldi	r26, 0x00	; 0
    4828:	b0 e0       	ldi	r27, 0x00	; 0
    482a:	80 93 a1 2a 	sts	0x2AA1, r24	; 0x802aa1 <myPID+0x2e>
    482e:	90 93 a2 2a 	sts	0x2AA2, r25	; 0x802aa2 <myPID+0x2f>
    4832:	a0 93 a3 2a 	sts	0x2AA3, r26	; 0x802aa3 <myPID+0x30>
    4836:	b0 93 a4 2a 	sts	0x2AA4, r27	; 0x802aa4 <myPID+0x31>
    483a:	10 92 8b 2a 	sts	0x2A8B, r1	; 0x802a8b <myPID+0x18>
    483e:	10 92 8c 2a 	sts	0x2A8C, r1	; 0x802a8c <myPID+0x19>
    4842:	20 e0       	ldi	r18, 0x00	; 0
    4844:	30 e0       	ldi	r19, 0x00	; 0
    4846:	a9 01       	movw	r20, r18
    4848:	c3 01       	movw	r24, r6
    484a:	b2 01       	movw	r22, r4
    484c:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4850:	87 fd       	sbrc	r24, 7
    4852:	5a c0       	rjmp	.+180    	; 0x4908 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    4854:	20 e0       	ldi	r18, 0x00	; 0
    4856:	30 e0       	ldi	r19, 0x00	; 0
    4858:	a9 01       	movw	r20, r18
    485a:	c5 01       	movw	r24, r10
    485c:	b4 01       	movw	r22, r8
    485e:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4862:	87 fd       	sbrc	r24, 7
    4864:	51 c0       	rjmp	.+162    	; 0x4908 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    4866:	20 e0       	ldi	r18, 0x00	; 0
    4868:	30 e0       	ldi	r19, 0x00	; 0
    486a:	a9 01       	movw	r20, r18
    486c:	c7 01       	movw	r24, r14
    486e:	b6 01       	movw	r22, r12
    4870:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4874:	87 fd       	sbrc	r24, 7
    4876:	48 c0       	rjmp	.+144    	; 0x4908 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    4878:	81 e0       	ldi	r24, 0x01	; 1
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	80 93 8d 2a 	sts	0x2A8D, r24	; 0x802a8d <myPID+0x1a>
    4880:	90 93 8e 2a 	sts	0x2A8E, r25	; 0x802a8e <myPID+0x1b>
    4884:	80 93 ae 2a 	sts	0x2AAE, r24	; 0x802aae <myPID+0x3b>
    4888:	40 92 73 2a 	sts	0x2A73, r4	; 0x802a73 <myPID>
    488c:	50 92 74 2a 	sts	0x2A74, r5	; 0x802a74 <myPID+0x1>
    4890:	60 92 75 2a 	sts	0x2A75, r6	; 0x802a75 <myPID+0x2>
    4894:	70 92 76 2a 	sts	0x2A76, r7	; 0x802a76 <myPID+0x3>
    4898:	80 92 77 2a 	sts	0x2A77, r8	; 0x802a77 <myPID+0x4>
    489c:	90 92 78 2a 	sts	0x2A78, r9	; 0x802a78 <myPID+0x5>
    48a0:	a0 92 79 2a 	sts	0x2A79, r10	; 0x802a79 <myPID+0x6>
    48a4:	b0 92 7a 2a 	sts	0x2A7A, r11	; 0x802a7a <myPID+0x7>
    48a8:	c0 92 7b 2a 	sts	0x2A7B, r12	; 0x802a7b <myPID+0x8>
    48ac:	d0 92 7c 2a 	sts	0x2A7C, r13	; 0x802a7c <myPID+0x9>
    48b0:	e0 92 7d 2a 	sts	0x2A7D, r14	; 0x802a7d <myPID+0xa>
    48b4:	f0 92 7e 2a 	sts	0x2A7E, r15	; 0x802a7e <myPID+0xb>
    48b8:	40 92 7f 2a 	sts	0x2A7F, r4	; 0x802a7f <myPID+0xc>
    48bc:	50 92 80 2a 	sts	0x2A80, r5	; 0x802a80 <myPID+0xd>
    48c0:	60 92 81 2a 	sts	0x2A81, r6	; 0x802a81 <myPID+0xe>
    48c4:	70 92 82 2a 	sts	0x2A82, r7	; 0x802a82 <myPID+0xf>
    48c8:	2d ec       	ldi	r18, 0xCD	; 205
    48ca:	3c ec       	ldi	r19, 0xCC	; 204
    48cc:	4c ec       	ldi	r20, 0xCC	; 204
    48ce:	5d e3       	ldi	r21, 0x3D	; 61
    48d0:	c5 01       	movw	r24, r10
    48d2:	b4 01       	movw	r22, r8
    48d4:	0e 94 11 38 	call	0x7022	; 0x7022 <__mulsf3>
    48d8:	60 93 83 2a 	sts	0x2A83, r22	; 0x802a83 <myPID+0x10>
    48dc:	70 93 84 2a 	sts	0x2A84, r23	; 0x802a84 <myPID+0x11>
    48e0:	80 93 85 2a 	sts	0x2A85, r24	; 0x802a85 <myPID+0x12>
    48e4:	90 93 86 2a 	sts	0x2A86, r25	; 0x802a86 <myPID+0x13>
    48e8:	2d ec       	ldi	r18, 0xCD	; 205
    48ea:	3c ec       	ldi	r19, 0xCC	; 204
    48ec:	4c ec       	ldi	r20, 0xCC	; 204
    48ee:	5d e3       	ldi	r21, 0x3D	; 61
    48f0:	c7 01       	movw	r24, r14
    48f2:	b6 01       	movw	r22, r12
    48f4:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    48f8:	60 93 87 2a 	sts	0x2A87, r22	; 0x802a87 <myPID+0x14>
    48fc:	70 93 88 2a 	sts	0x2A88, r23	; 0x802a88 <myPID+0x15>
    4900:	80 93 89 2a 	sts	0x2A89, r24	; 0x802a89 <myPID+0x16>
    4904:	90 93 8a 2a 	sts	0x2A8A, r25	; 0x802a8a <myPID+0x17>
    4908:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    490c:	c0 90 a1 2a 	lds	r12, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    4910:	d0 90 a2 2a 	lds	r13, 0x2AA2	; 0x802aa2 <myPID+0x2f>
    4914:	e0 90 a3 2a 	lds	r14, 0x2AA3	; 0x802aa3 <myPID+0x30>
    4918:	f0 90 a4 2a 	lds	r15, 0x2AA4	; 0x802aa4 <myPID+0x31>
    491c:	6c 19       	sub	r22, r12
    491e:	7d 09       	sbc	r23, r13
    4920:	8e 09       	sbc	r24, r14
    4922:	9f 09       	sbc	r25, r15
    4924:	60 93 95 2a 	sts	0x2A95, r22	; 0x802a95 <myPID+0x22>
    4928:	70 93 96 2a 	sts	0x2A96, r23	; 0x802a96 <myPID+0x23>
    492c:	80 93 97 2a 	sts	0x2A97, r24	; 0x802a97 <myPID+0x24>
    4930:	90 93 98 2a 	sts	0x2A98, r25	; 0x802a98 <myPID+0x25>
    4934:	ff 90       	pop	r15
    4936:	ef 90       	pop	r14
    4938:	df 90       	pop	r13
    493a:	cf 90       	pop	r12
    493c:	bf 90       	pop	r11
    493e:	af 90       	pop	r10
    4940:	9f 90       	pop	r9
    4942:	8f 90       	pop	r8
    4944:	7f 90       	pop	r7
    4946:	6f 90       	pop	r6
    4948:	5f 90       	pop	r5
    494a:	4f 90       	pop	r4
    494c:	08 95       	ret

0000494e <main>:
main():
    494e:	cf 93       	push	r28
    4950:	df 93       	push	r29
    4952:	cd b7       	in	r28, 0x3d	; 61
    4954:	de b7       	in	r29, 0x3e	; 62
    4956:	26 97       	sbiw	r28, 0x06	; 6
    4958:	cd bf       	out	0x3d, r28	; 61
    495a:	de bf       	out	0x3e, r29	; 62
init():
    495c:	88 ed       	ldi	r24, 0xD8	; 216
    495e:	90 e0       	ldi	r25, 0x00	; 0
    4960:	84 bf       	out	0x34, r24	; 52
    4962:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    4966:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    496a:	86 60       	ori	r24, 0x06	; 6
    496c:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4970:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    4974:	81 60       	ori	r24, 0x01	; 1
    4976:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    497a:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    497e:	8f 7c       	andi	r24, 0xCF	; 207
    4980:	80 65       	ori	r24, 0x50	; 80
    4982:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    4986:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    498a:	82 e0       	ldi	r24, 0x02	; 2
    498c:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    4990:	81 e0       	ldi	r24, 0x01	; 1
    4992:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    4996:	8e ef       	ldi	r24, 0xFE	; 254
    4998:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    499c:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    49a0:	80 e8       	ldi	r24, 0x80	; 128
    49a2:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    49a6:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    49aa:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    49ae:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    49b2:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    49b6:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    49ba:	8b e0       	ldi	r24, 0x0B	; 11
    49bc:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    49c0:	87 e0       	ldi	r24, 0x07	; 7
    49c2:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    49c6:	e0 e8       	ldi	r30, 0x80	; 128
    49c8:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    49ca:	37 e0       	ldi	r19, 0x07	; 7
    49cc:	2e ef       	ldi	r18, 0xFE	; 254
    49ce:	90 e8       	ldi	r25, 0x80	; 128
    49d0:	85 e0       	ldi	r24, 0x05	; 5
    49d2:	31 83       	std	Z+1, r19	; 0x01
    49d4:	24 87       	std	Z+12, r18	; 0x0c
    49d6:	95 87       	std	Z+13, r25	; 0x0d
    49d8:	80 83       	st	Z, r24
    49da:	70 96       	adiw	r30, 0x10	; 16
    49dc:	e0 3c       	cpi	r30, 0xC0	; 192
    49de:	4a e0       	ldi	r20, 0x0A	; 10
    49e0:	f4 07       	cpc	r31, r20
    49e2:	b9 f7       	brne	.-18     	; 0x49d2 <main+0x84>
init():
    49e4:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    49e8:	8f e7       	ldi	r24, 0x7F	; 127
    49ea:	9e e3       	ldi	r25, 0x3E	; 62
    49ec:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    49f0:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    49f4:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    49f8:	81 60       	ori	r24, 0x01	; 1
    49fa:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    49fe:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a02:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a06:	81 60       	ori	r24, 0x01	; 1
    4a08:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a0c:	78 94       	sei
setup():
    4a0e:	47 e2       	ldi	r20, 0x27	; 39
    4a10:	66 e2       	ldi	r22, 0x26	; 38
    4a12:	8e e4       	ldi	r24, 0x4E	; 78
    4a14:	99 e2       	ldi	r25, 0x29	; 41
    4a16:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <UartClass::pins(unsigned char, unsigned char)>
    4a1a:	40 e8       	ldi	r20, 0x80	; 128
    4a1c:	55 e2       	ldi	r21, 0x25	; 37
    4a1e:	60 e0       	ldi	r22, 0x00	; 0
    4a20:	70 e0       	ldi	r23, 0x00	; 0
    4a22:	8e e4       	ldi	r24, 0x4E	; 78
    4a24:	99 e2       	ldi	r25, 0x29	; 41
    4a26:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <UartClass::begin(unsigned long)>
SETUP():
    4a2a:	f8 94       	cli
    4a2c:	81 e0       	ldi	r24, 0x01	; 1
    4a2e:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    4a32:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    4a36:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4a3a:	8e 7f       	andi	r24, 0xFE	; 254
    4a3c:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4a40:	8a ef       	ldi	r24, 0xFA	; 250
    4a42:	90 e0       	ldi	r25, 0x00	; 0
    4a44:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4a48:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4a4c:	8f e0       	ldi	r24, 0x0F	; 15
    4a4e:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4a52:	78 94       	sei
    4a54:	61 e0       	ldi	r22, 0x01	; 1
    4a56:	8b e0       	ldi	r24, 0x0B	; 11
    4a58:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a5c:	61 e0       	ldi	r22, 0x01	; 1
    4a5e:	8a e0       	ldi	r24, 0x0A	; 10
    4a60:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a64:	61 e0       	ldi	r22, 0x01	; 1
    4a66:	89 e0       	ldi	r24, 0x09	; 9
    4a68:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a6c:	61 e0       	ldi	r22, 0x01	; 1
    4a6e:	88 e0       	ldi	r24, 0x08	; 8
    4a70:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a74:	61 e0       	ldi	r22, 0x01	; 1
    4a76:	84 e0       	ldi	r24, 0x04	; 4
    4a78:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a7c:	61 e0       	ldi	r22, 0x01	; 1
    4a7e:	85 e0       	ldi	r24, 0x05	; 5
    4a80:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a84:	61 e0       	ldi	r22, 0x01	; 1
    4a86:	86 e0       	ldi	r24, 0x06	; 6
    4a88:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a8c:	61 e0       	ldi	r22, 0x01	; 1
    4a8e:	87 e0       	ldi	r24, 0x07	; 7
    4a90:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a94:	61 e0       	ldi	r22, 0x01	; 1
    4a96:	84 e1       	ldi	r24, 0x14	; 20
    4a98:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a9c:	61 e0       	ldi	r22, 0x01	; 1
    4a9e:	83 e1       	ldi	r24, 0x13	; 19
    4aa0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4aa4:	61 e0       	ldi	r22, 0x01	; 1
    4aa6:	82 e1       	ldi	r24, 0x12	; 18
    4aa8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4aac:	61 e0       	ldi	r22, 0x01	; 1
    4aae:	8e e1       	ldi	r24, 0x1E	; 30
    4ab0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ab4:	61 e0       	ldi	r22, 0x01	; 1
    4ab6:	80 e2       	ldi	r24, 0x20	; 32
    4ab8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4abc:	61 e0       	ldi	r22, 0x01	; 1
    4abe:	8f e1       	ldi	r24, 0x1F	; 31
    4ac0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ac4:	61 e0       	ldi	r22, 0x01	; 1
    4ac6:	88 e0       	ldi	r24, 0x08	; 8
    4ac8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4acc:	61 e0       	ldi	r22, 0x01	; 1
    4ace:	89 e0       	ldi	r24, 0x09	; 9
    4ad0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4ad4:	61 e0       	ldi	r22, 0x01	; 1
    4ad6:	8a e0       	ldi	r24, 0x0A	; 10
    4ad8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4adc:	61 e0       	ldi	r22, 0x01	; 1
    4ade:	8b e0       	ldi	r24, 0x0B	; 11
    4ae0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4ae4:	61 e0       	ldi	r22, 0x01	; 1
    4ae6:	87 e0       	ldi	r24, 0x07	; 7
    4ae8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4aec:	61 e0       	ldi	r22, 0x01	; 1
    4aee:	86 e0       	ldi	r24, 0x06	; 6
    4af0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4af4:	61 e0       	ldi	r22, 0x01	; 1
    4af6:	85 e0       	ldi	r24, 0x05	; 5
    4af8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4afc:	61 e0       	ldi	r22, 0x01	; 1
    4afe:	84 e0       	ldi	r24, 0x04	; 4
    4b00:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
pinMode():
    4b04:	61 e0       	ldi	r22, 0x01	; 1
    4b06:	8c e0       	ldi	r24, 0x0C	; 12
    4b08:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4b0c:	61 e0       	ldi	r22, 0x01	; 1
    4b0e:	8d e0       	ldi	r24, 0x0D	; 13
    4b10:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
digitalWrite():
    4b14:	60 e0       	ldi	r22, 0x00	; 0
    4b16:	8c e0       	ldi	r24, 0x0C	; 12
    4b18:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4b1c:	60 e0       	ldi	r22, 0x00	; 0
    4b1e:	8d e0       	ldi	r24, 0x0D	; 13
    4b20:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SETUP():
    4b24:	8d eb       	ldi	r24, 0xBD	; 189
    4b26:	9b e2       	ldi	r25, 0x2B	; 43
    4b28:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SetOutputLimits():
    4b2c:	10 92 a5 2a 	sts	0x2AA5, r1	; 0x802aa5 <myPID+0x32>
    4b30:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <myPID+0x33>
    4b34:	10 92 a7 2a 	sts	0x2AA7, r1	; 0x802aa7 <myPID+0x34>
    4b38:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <myPID+0x35>
    4b3c:	81 2c       	mov	r8, r1
    4b3e:	91 2c       	mov	r9, r1
    4b40:	9a e7       	ldi	r25, 0x7A	; 122
    4b42:	a9 2e       	mov	r10, r25
    4b44:	94 e4       	ldi	r25, 0x44	; 68
    4b46:	b9 2e       	mov	r11, r25
    4b48:	80 92 a9 2a 	sts	0x2AA9, r8	; 0x802aa9 <myPID+0x36>
    4b4c:	90 92 aa 2a 	sts	0x2AAA, r9	; 0x802aaa <myPID+0x37>
    4b50:	a0 92 ab 2a 	sts	0x2AAB, r10	; 0x802aab <myPID+0x38>
    4b54:	b0 92 ac 2a 	sts	0x2AAC, r11	; 0x802aac <myPID+0x39>
    4b58:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
    4b5c:	88 23       	and	r24, r24
    4b5e:	09 f4       	brne	.+2      	; 0x4b62 <main+0x214>
    4b60:	57 c0       	rjmp	.+174    	; 0x4c10 <main+0x2c2>
    4b62:	00 91 91 2a 	lds	r16, 0x2A91	; 0x802a91 <myPID+0x1e>
    4b66:	10 91 92 2a 	lds	r17, 0x2A92	; 0x802a92 <myPID+0x1f>
    4b6a:	d8 01       	movw	r26, r16
    4b6c:	cd 90       	ld	r12, X+
    4b6e:	dd 90       	ld	r13, X+
    4b70:	ed 90       	ld	r14, X+
    4b72:	fc 90       	ld	r15, X
    4b74:	a5 01       	movw	r20, r10
    4b76:	94 01       	movw	r18, r8
    4b78:	c7 01       	movw	r24, r14
    4b7a:	b6 01       	movw	r22, r12
    4b7c:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    4b80:	18 16       	cp	r1, r24
    4b82:	34 f5       	brge	.+76     	; 0x4bd0 <main+0x282>
    4b84:	f8 01       	movw	r30, r16
    4b86:	80 82       	st	Z, r8
    4b88:	91 82       	std	Z+1, r9	; 0x01
    4b8a:	a2 82       	std	Z+2, r10	; 0x02
    4b8c:	b3 82       	std	Z+3, r11	; 0x03
    4b8e:	80 90 99 2a 	lds	r8, 0x2A99	; 0x802a99 <myPID+0x26>
    4b92:	90 90 9a 2a 	lds	r9, 0x2A9A	; 0x802a9a <myPID+0x27>
    4b96:	a0 90 9b 2a 	lds	r10, 0x2A9B	; 0x802a9b <myPID+0x28>
    4b9a:	b0 90 9c 2a 	lds	r11, 0x2A9C	; 0x802a9c <myPID+0x29>
    4b9e:	c0 90 a9 2a 	lds	r12, 0x2AA9	; 0x802aa9 <myPID+0x36>
    4ba2:	d0 90 aa 2a 	lds	r13, 0x2AAA	; 0x802aaa <myPID+0x37>
    4ba6:	e0 90 ab 2a 	lds	r14, 0x2AAB	; 0x802aab <myPID+0x38>
    4baa:	f0 90 ac 2a 	lds	r15, 0x2AAC	; 0x802aac <myPID+0x39>
    4bae:	a7 01       	movw	r20, r14
    4bb0:	96 01       	movw	r18, r12
    4bb2:	c5 01       	movw	r24, r10
    4bb4:	b4 01       	movw	r22, r8
    4bb6:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    4bba:	18 16       	cp	r1, r24
    4bbc:	cc f4       	brge	.+50     	; 0x4bf0 <main+0x2a2>
    4bbe:	c0 92 99 2a 	sts	0x2A99, r12	; 0x802a99 <myPID+0x26>
    4bc2:	d0 92 9a 2a 	sts	0x2A9A, r13	; 0x802a9a <myPID+0x27>
    4bc6:	e0 92 9b 2a 	sts	0x2A9B, r14	; 0x802a9b <myPID+0x28>
    4bca:	f0 92 9c 2a 	sts	0x2A9C, r15	; 0x802a9c <myPID+0x29>
    4bce:	20 c0       	rjmp	.+64     	; 0x4c10 <main+0x2c2>
    4bd0:	20 e0       	ldi	r18, 0x00	; 0
    4bd2:	30 e0       	ldi	r19, 0x00	; 0
    4bd4:	a9 01       	movw	r20, r18
    4bd6:	c7 01       	movw	r24, r14
    4bd8:	b6 01       	movw	r22, r12
    4bda:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4bde:	87 ff       	sbrs	r24, 7
    4be0:	d6 cf       	rjmp	.-84     	; 0x4b8e <main+0x240>
    4be2:	d8 01       	movw	r26, r16
    4be4:	1d 92       	st	X+, r1
    4be6:	1d 92       	st	X+, r1
    4be8:	1d 92       	st	X+, r1
    4bea:	1c 92       	st	X, r1
    4bec:	13 97       	sbiw	r26, 0x03	; 3
    4bee:	cf cf       	rjmp	.-98     	; 0x4b8e <main+0x240>
    4bf0:	c0 90 a5 2a 	lds	r12, 0x2AA5	; 0x802aa5 <myPID+0x32>
    4bf4:	d0 90 a6 2a 	lds	r13, 0x2AA6	; 0x802aa6 <myPID+0x33>
    4bf8:	e0 90 a7 2a 	lds	r14, 0x2AA7	; 0x802aa7 <myPID+0x34>
    4bfc:	f0 90 a8 2a 	lds	r15, 0x2AA8	; 0x802aa8 <myPID+0x35>
    4c00:	a7 01       	movw	r20, r14
    4c02:	96 01       	movw	r18, r12
    4c04:	c5 01       	movw	r24, r10
    4c06:	b4 01       	movw	r22, r8
    4c08:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4c0c:	87 fd       	sbrc	r24, 7
    4c0e:	d7 cf       	rjmp	.-82     	; 0x4bbe <main+0x270>
Setup():
    4c10:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    4c14:	60 93 f7 28 	sts	0x28F7, r22	; 0x8028f7 <WINDOW_START_TIME>
    4c18:	70 93 f8 28 	sts	0x28F8, r23	; 0x8028f8 <WINDOW_START_TIME+0x1>
    4c1c:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <WINDOW_START_TIME+0x2>
    4c20:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <WINDOW_START_TIME+0x3>
SetMode():
    4c24:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
    4c28:	81 11       	cpse	r24, r1
    4c2a:	49 c0       	rjmp	.+146    	; 0x4cbe <main+0x370>
Initialize():
    4c2c:	e0 91 91 2a 	lds	r30, 0x2A91	; 0x802a91 <myPID+0x1e>
    4c30:	f0 91 92 2a 	lds	r31, 0x2A92	; 0x802a92 <myPID+0x1f>
    4c34:	c0 80       	ld	r12, Z
    4c36:	d1 80       	ldd	r13, Z+1	; 0x01
    4c38:	e2 80       	ldd	r14, Z+2	; 0x02
    4c3a:	f3 80       	ldd	r15, Z+3	; 0x03
    4c3c:	c0 92 99 2a 	sts	0x2A99, r12	; 0x802a99 <myPID+0x26>
    4c40:	d0 92 9a 2a 	sts	0x2A9A, r13	; 0x802a9a <myPID+0x27>
    4c44:	e0 92 9b 2a 	sts	0x2A9B, r14	; 0x802a9b <myPID+0x28>
    4c48:	f0 92 9c 2a 	sts	0x2A9C, r15	; 0x802a9c <myPID+0x29>
    4c4c:	e0 91 8f 2a 	lds	r30, 0x2A8F	; 0x802a8f <myPID+0x1c>
    4c50:	f0 91 90 2a 	lds	r31, 0x2A90	; 0x802a90 <myPID+0x1d>
    4c54:	80 81       	ld	r24, Z
    4c56:	91 81       	ldd	r25, Z+1	; 0x01
    4c58:	a2 81       	ldd	r26, Z+2	; 0x02
    4c5a:	b3 81       	ldd	r27, Z+3	; 0x03
    4c5c:	80 93 9d 2a 	sts	0x2A9D, r24	; 0x802a9d <myPID+0x2a>
    4c60:	90 93 9e 2a 	sts	0x2A9E, r25	; 0x802a9e <myPID+0x2b>
    4c64:	a0 93 9f 2a 	sts	0x2A9F, r26	; 0x802a9f <myPID+0x2c>
    4c68:	b0 93 a0 2a 	sts	0x2AA0, r27	; 0x802aa0 <myPID+0x2d>
    4c6c:	80 90 a9 2a 	lds	r8, 0x2AA9	; 0x802aa9 <myPID+0x36>
    4c70:	90 90 aa 2a 	lds	r9, 0x2AAA	; 0x802aaa <myPID+0x37>
    4c74:	a0 90 ab 2a 	lds	r10, 0x2AAB	; 0x802aab <myPID+0x38>
    4c78:	b0 90 ac 2a 	lds	r11, 0x2AAC	; 0x802aac <myPID+0x39>
    4c7c:	a5 01       	movw	r20, r10
    4c7e:	94 01       	movw	r18, r8
    4c80:	c7 01       	movw	r24, r14
    4c82:	b6 01       	movw	r22, r12
    4c84:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    4c88:	18 16       	cp	r1, r24
    4c8a:	4c f4       	brge	.+18     	; 0x4c9e <main+0x350>
    4c8c:	80 92 99 2a 	sts	0x2A99, r8	; 0x802a99 <myPID+0x26>
    4c90:	90 92 9a 2a 	sts	0x2A9A, r9	; 0x802a9a <myPID+0x27>
    4c94:	a0 92 9b 2a 	sts	0x2A9B, r10	; 0x802a9b <myPID+0x28>
    4c98:	b0 92 9c 2a 	sts	0x2A9C, r11	; 0x802a9c <myPID+0x29>
    4c9c:	10 c0       	rjmp	.+32     	; 0x4cbe <main+0x370>
    4c9e:	80 90 a5 2a 	lds	r8, 0x2AA5	; 0x802aa5 <myPID+0x32>
    4ca2:	90 90 a6 2a 	lds	r9, 0x2AA6	; 0x802aa6 <myPID+0x33>
    4ca6:	a0 90 a7 2a 	lds	r10, 0x2AA7	; 0x802aa7 <myPID+0x34>
    4caa:	b0 90 a8 2a 	lds	r11, 0x2AA8	; 0x802aa8 <myPID+0x35>
    4cae:	a5 01       	movw	r20, r10
    4cb0:	94 01       	movw	r18, r8
    4cb2:	c7 01       	movw	r24, r14
    4cb4:	b6 01       	movw	r22, r12
    4cb6:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <__cmpsf2>
    4cba:	87 fd       	sbrc	r24, 7
    4cbc:	e7 cf       	rjmp	.-50     	; 0x4c8c <main+0x33e>
SetMode():
    4cbe:	81 e0       	ldi	r24, 0x01	; 1
    4cc0:	80 93 ad 2a 	sts	0x2AAD, r24	; 0x802aad <myPID+0x3a>
pinMode():
    4cc4:	61 e0       	ldi	r22, 0x01	; 1
    4cc6:	85 e1       	ldi	r24, 0x15	; 21
    4cc8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4ccc:	61 e0       	ldi	r22, 0x01	; 1
    4cce:	88 e1       	ldi	r24, 0x18	; 24
    4cd0:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4cd4:	61 e0       	ldi	r22, 0x01	; 1
    4cd6:	89 e1       	ldi	r24, 0x19	; 25
    4cd8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4cdc:	61 e0       	ldi	r22, 0x01	; 1
    4cde:	81 e2       	ldi	r24, 0x21	; 33
    4ce0:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
digitalWrite():
    4ce4:	60 e0       	ldi	r22, 0x00	; 0
    4ce6:	89 e1       	ldi	r24, 0x19	; 25
    4ce8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4cec:	60 e0       	ldi	r22, 0x00	; 0
    4cee:	85 e1       	ldi	r24, 0x15	; 21
    4cf0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4cf4:	60 e0       	ldi	r22, 0x00	; 0
    4cf6:	88 e1       	ldi	r24, 0x18	; 24
    4cf8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4cfc:	60 e0       	ldi	r22, 0x00	; 0
    4cfe:	81 e2       	ldi	r24, 0x21	; 33
    4d00:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
pinMode():
    4d04:	61 e0       	ldi	r22, 0x01	; 1
    4d06:	8b e1       	ldi	r24, 0x1B	; 27
    4d08:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d0c:	61 e0       	ldi	r22, 0x01	; 1
    4d0e:	8c e1       	ldi	r24, 0x1C	; 28
    4d10:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d14:	61 e0       	ldi	r22, 0x01	; 1
    4d16:	8d e1       	ldi	r24, 0x1D	; 29
    4d18:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d1c:	61 e0       	ldi	r22, 0x01	; 1
    4d1e:	8a e1       	ldi	r24, 0x1A	; 26
    4d20:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
Setup():
    4d24:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    4d28:	80 e0       	ldi	r24, 0x00	; 0
    4d2a:	9b e2       	ldi	r25, 0x2B	; 43
    4d2c:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
    4d30:	85 ee       	ldi	r24, 0xE5	; 229
    4d32:	9a e2       	ldi	r25, 0x2A	; 42
    4d34:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	80 e0       	ldi	r24, 0x00	; 0
    4d3c:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4d40:	bb 24       	eor	r11, r11
    4d42:	b3 94       	inc	r11
    4d44:	81 11       	cpse	r24, r1
    4d46:	01 c0       	rjmp	.+2      	; 0x4d4a <main+0x3fc>
    4d48:	b1 2c       	mov	r11, r1
    4d4a:	b0 92 9c 28 	sts	0x289C, r11	; 0x80289c <STIR_VALUE_SET>
    4d4e:	81 e0       	ldi	r24, 0x01	; 1
    4d50:	90 e0       	ldi	r25, 0x00	; 0
    4d52:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4d56:	01 e0       	ldi	r16, 0x01	; 1
    4d58:	81 11       	cpse	r24, r1
    4d5a:	01 c0       	rjmp	.+2      	; 0x4d5e <main+0x410>
    4d5c:	00 e0       	ldi	r16, 0x00	; 0
    4d5e:	00 93 4c 29 	sts	0x294C, r16	; 0x80294c <DEGREE_VALUE_SET>
    4d62:	82 e0       	ldi	r24, 0x02	; 2
    4d64:	90 e0       	ldi	r25, 0x00	; 0
    4d66:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4d6a:	c8 2e       	mov	r12, r24
    4d6c:	d1 2c       	mov	r13, r1
    4d6e:	c0 92 0b 29 	sts	0x290B, r12	; 0x80290b <SAFE_VALUE_SET_DEG>
    4d72:	d0 92 0c 29 	sts	0x290C, r13	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    4d76:	69 e0       	ldi	r22, 0x09	; 9
    4d78:	79 e2       	ldi	r23, 0x29	; 41
    4d7a:	83 e0       	ldi	r24, 0x03	; 3
    4d7c:	90 e0       	ldi	r25, 0x00	; 0
    4d7e:	0e 94 3c 10 	call	0x2078	; 0x2078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4d82:	85 e0       	ldi	r24, 0x05	; 5
    4d84:	90 e0       	ldi	r25, 0x00	; 0
    4d86:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4d8a:	e8 2e       	mov	r14, r24
    4d8c:	f1 2c       	mov	r15, r1
    4d8e:	e0 92 d2 28 	sts	0x28D2, r14	; 0x8028d2 <CAL_SELECT_VALUE>
    4d92:	f0 92 d3 28 	sts	0x28D3, r15	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    4d96:	13 e0       	ldi	r17, 0x03	; 3
    4d98:	61 2e       	mov	r6, r17
    4d9a:	19 e2       	ldi	r17, 0x29	; 41
    4d9c:	71 2e       	mov	r7, r17
main():
    4d9e:	86 e4       	ldi	r24, 0x46	; 70
    4da0:	88 2e       	mov	r8, r24
    4da2:	91 2c       	mov	r9, r1
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4da4:	89 82       	std	Y+1, r8	; 0x01
    4da6:	9a 82       	std	Y+2, r9	; 0x02
_ZNK5EERefcvhEv():
    4da8:	ce 01       	movw	r24, r28
    4daa:	01 96       	adiw	r24, 0x01	; 1
    4dac:	0e 94 2c 10 	call	0x2058	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4db0:	f3 01       	movw	r30, r6
    4db2:	81 93       	st	Z+, r24
    4db4:	3f 01       	movw	r6, r30
_ZN5EEPtrppEv():
    4db6:	ff ef       	ldi	r31, 0xFF	; 255
    4db8:	8f 1a       	sub	r8, r31
    4dba:	9f 0a       	sbc	r9, r31
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4dbc:	2a e4       	ldi	r18, 0x4A	; 74
    4dbe:	82 16       	cp	r8, r18
    4dc0:	91 04       	cpc	r9, r1
    4dc2:	81 f7       	brne	.-32     	; 0x4da4 <main+0x456>
Setup():
    4dc4:	87 e0       	ldi	r24, 0x07	; 7
    4dc6:	90 e0       	ldi	r25, 0x00	; 0
    4dc8:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4dcc:	91 e0       	ldi	r25, 0x01	; 1
    4dce:	81 11       	cpse	r24, r1
    4dd0:	01 c0       	rjmp	.+2      	; 0x4dd4 <main+0x486>
    4dd2:	90 e0       	ldi	r25, 0x00	; 0
    4dd4:	90 93 e6 28 	sts	0x28E6, r25	; 0x8028e6 <SIGN>
    4dd8:	88 e0       	ldi	r24, 0x08	; 8
    4dda:	90 e0       	ldi	r25, 0x00	; 0
    4ddc:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4de0:	91 e0       	ldi	r25, 0x01	; 1
    4de2:	81 11       	cpse	r24, r1
    4de4:	01 c0       	rjmp	.+2      	; 0x4de8 <main+0x49a>
    4de6:	90 e0       	ldi	r25, 0x00	; 0
    4de8:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    4dec:	89 e0       	ldi	r24, 0x09	; 9
    4dee:	90 e0       	ldi	r25, 0x00	; 0
    4df0:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4df4:	91 e0       	ldi	r25, 0x01	; 1
    4df6:	81 11       	cpse	r24, r1
    4df8:	01 c0       	rjmp	.+2      	; 0x4dfc <main+0x4ae>
    4dfa:	90 e0       	ldi	r25, 0x00	; 0
    4dfc:	90 93 dc 28 	sts	0x28DC, r25	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    4e00:	6a ec       	ldi	r22, 0xCA	; 202
    4e02:	78 e2       	ldi	r23, 0x28	; 40
    4e04:	80 e5       	ldi	r24, 0x50	; 80
    4e06:	90 e0       	ldi	r25, 0x00	; 0
    4e08:	0e 94 61 10 	call	0x20c2	; 0x20c2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e0c:	66 ec       	ldi	r22, 0xC6	; 198
    4e0e:	78 e2       	ldi	r23, 0x28	; 40
    4e10:	8a e5       	ldi	r24, 0x5A	; 90
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	0e 94 61 10 	call	0x20c2	; 0x20c2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e18:	62 ec       	ldi	r22, 0xC2	; 194
    4e1a:	78 e2       	ldi	r23, 0x28	; 40
    4e1c:	84 e6       	ldi	r24, 0x64	; 100
    4e1e:	90 e0       	ldi	r25, 0x00	; 0
    4e20:	0e 94 61 10 	call	0x20c2	; 0x20c2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e24:	6e eb       	ldi	r22, 0xBE	; 190
    4e26:	78 e2       	ldi	r23, 0x28	; 40
    4e28:	8e e6       	ldi	r24, 0x6E	; 110
    4e2a:	90 e0       	ldi	r25, 0x00	; 0
    4e2c:	0e 94 61 10 	call	0x20c2	; 0x20c2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4e30:	81 e4       	ldi	r24, 0x41	; 65
    4e32:	90 e0       	ldi	r25, 0x00	; 0
    4e34:	89 83       	std	Y+1, r24	; 0x01
    4e36:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    4e38:	ce 01       	movw	r24, r28
    4e3a:	01 96       	adiw	r24, 0x01	; 1
    4e3c:	0e 94 2c 10 	call	0x2058	; 0x2058 <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4e40:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <TIME_SOCK_OR_TOTAL>
Setup():
    4e44:	62 e5       	ldi	r22, 0x52	; 82
    4e46:	78 e2       	ldi	r23, 0x28	; 40
    4e48:	88 e9       	ldi	r24, 0x98	; 152
    4e4a:	90 e0       	ldi	r25, 0x00	; 0
    4e4c:	0e 94 3c 10 	call	0x2078	; 0x2078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4e50:	60 e5       	ldi	r22, 0x50	; 80
    4e52:	78 e2       	ldi	r23, 0x28	; 40
    4e54:	8a e9       	ldi	r24, 0x9A	; 154
    4e56:	90 e0       	ldi	r25, 0x00	; 0
    4e58:	0e 94 3c 10 	call	0x2078	; 0x2078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4e5c:	8f e0       	ldi	r24, 0x0F	; 15
    4e5e:	90 e0       	ldi	r25, 0x00	; 0
    4e60:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4e64:	11 e0       	ldi	r17, 0x01	; 1
    4e66:	81 11       	cpse	r24, r1
    4e68:	01 c0       	rjmp	.+2      	; 0x4e6c <main+0x51e>
    4e6a:	10 e0       	ldi	r17, 0x00	; 0
    4e6c:	10 93 a3 28 	sts	0x28A3, r17	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    4e70:	86 e9       	ldi	r24, 0x96	; 150
    4e72:	90 e0       	ldi	r25, 0x00	; 0
    4e74:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4e78:	91 e0       	ldi	r25, 0x01	; 1
    4e7a:	81 11       	cpse	r24, r1
    4e7c:	01 c0       	rjmp	.+2      	; 0x4e80 <main+0x532>
    4e7e:	90 e0       	ldi	r25, 0x00	; 0
    4e80:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <select_product_type>
    4e84:	2b 2d       	mov	r18, r11
    4e86:	30 e0       	ldi	r19, 0x00	; 0
    4e88:	20 93 1a 29 	sts	0x291A, r18	; 0x80291a <SET_LONG_VALUE>
    4e8c:	30 93 1b 29 	sts	0x291B, r19	; 0x80291b <SET_LONG_VALUE+0x1>
    4e90:	20 2f       	mov	r18, r16
    4e92:	30 e0       	ldi	r19, 0x00	; 0
    4e94:	20 93 1c 29 	sts	0x291C, r18	; 0x80291c <SET_LONG_VALUE+0x2>
    4e98:	30 93 1d 29 	sts	0x291D, r19	; 0x80291d <SET_LONG_VALUE+0x3>
    4e9c:	c0 92 1e 29 	sts	0x291E, r12	; 0x80291e <SET_LONG_VALUE+0x4>
    4ea0:	d0 92 1f 29 	sts	0x291F, r13	; 0x80291f <SET_LONG_VALUE+0x5>
    4ea4:	20 91 09 29 	lds	r18, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    4ea8:	30 91 0a 29 	lds	r19, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    4eac:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
    4eb0:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
    4eb4:	e0 92 26 29 	sts	0x2926, r14	; 0x802926 <SET_LONG_VALUE+0xc>
    4eb8:	f0 92 27 29 	sts	0x2927, r15	; 0x802927 <SET_LONG_VALUE+0xd>
    4ebc:	20 91 63 28 	lds	r18, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    4ec0:	30 e0       	ldi	r19, 0x00	; 0
    4ec2:	20 93 20 29 	sts	0x2920, r18	; 0x802920 <SET_LONG_VALUE+0x6>
    4ec6:	30 93 21 29 	sts	0x2921, r19	; 0x802921 <SET_LONG_VALUE+0x7>
    4eca:	21 2f       	mov	r18, r17
    4ecc:	30 e0       	ldi	r19, 0x00	; 0
    4ece:	20 93 22 29 	sts	0x2922, r18	; 0x802922 <SET_LONG_VALUE+0x8>
    4ed2:	30 93 23 29 	sts	0x2923, r19	; 0x802923 <SET_LONG_VALUE+0x9>
    4ed6:	89 2f       	mov	r24, r25
    4ed8:	90 e0       	ldi	r25, 0x00	; 0
    4eda:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <SET_LONG_VALUE+0xa>
    4ede:	90 93 25 29 	sts	0x2925, r25	; 0x802925 <SET_LONG_VALUE+0xb>
    4ee2:	69 e3       	ldi	r22, 0x39	; 57
    4ee4:	79 e2       	ldi	r23, 0x29	; 41
    4ee6:	88 e7       	ldi	r24, 0x78	; 120
    4ee8:	90 e0       	ldi	r25, 0x00	; 0
    4eea:	0e 94 3c 10 	call	0x2078	; 0x2078 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4eee:	83 e7       	ldi	r24, 0x73	; 115
    4ef0:	90 e0       	ldi	r25, 0x00	; 0
    4ef2:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4ef6:	90 e0       	ldi	r25, 0x00	; 0
    4ef8:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
    4efc:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
    4f00:	85 e7       	ldi	r24, 0x75	; 117
    4f02:	90 e0       	ldi	r25, 0x00	; 0
    4f04:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4f08:	90 e0       	ldi	r25, 0x00	; 0
    4f0a:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
    4f0e:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
    4f12:	8d e7       	ldi	r24, 0x7D	; 125
    4f14:	90 e0       	ldi	r25, 0x00	; 0
    4f16:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4f1a:	90 e0       	ldi	r25, 0x00	; 0
    4f1c:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
    4f20:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
    4f24:	82 e8       	ldi	r24, 0x82	; 130
    4f26:	90 e0       	ldi	r25, 0x00	; 0
    4f28:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4f2c:	90 e0       	ldi	r25, 0x00	; 0
    4f2e:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
    4f32:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
    4f36:	87 e8       	ldi	r24, 0x87	; 135
    4f38:	90 e0       	ldi	r25, 0x00	; 0
    4f3a:	0e 94 93 10 	call	0x2126	; 0x2126 <EEPROMClass::read(int) [clone .isra.0]>
    4f3e:	91 e0       	ldi	r25, 0x01	; 1
    4f40:	81 11       	cpse	r24, r1
    4f42:	01 c0       	rjmp	.+2      	; 0x4f46 <main+0x5f8>
    4f44:	90 e0       	ldi	r25, 0x00	; 0
    4f46:	90 93 a4 28 	sts	0x28A4, r25	; 0x8028a4 <Process_Interrupt_flag>
pinMode():
    4f4a:	62 e0       	ldi	r22, 0x02	; 2
    4f4c:	83 e2       	ldi	r24, 0x23	; 35
    4f4e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f52:	62 e0       	ldi	r22, 0x02	; 2
    4f54:	85 e2       	ldi	r24, 0x25	; 37
    4f56:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f5a:	62 e0       	ldi	r22, 0x02	; 2
    4f5c:	84 e2       	ldi	r24, 0x24	; 36
    4f5e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f62:	62 e0       	ldi	r22, 0x02	; 2
    4f64:	82 e2       	ldi	r24, 0x22	; 34
    4f66:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
attachClick():
    4f6a:	8b e4       	ldi	r24, 0x4B	; 75
    4f6c:	91 e1       	ldi	r25, 0x11	; 17
    4f6e:	80 93 55 2a 	sts	0x2A55, r24	; 0x802a55 <button1+0xd>
    4f72:	90 93 56 2a 	sts	0x2A56, r25	; 0x802a56 <button1+0xe>
attachLongPressStart():
    4f76:	87 e3       	ldi	r24, 0x37	; 55
    4f78:	9d e0       	ldi	r25, 0x0D	; 13
    4f7a:	80 93 5b 2a 	sts	0x2A5B, r24	; 0x802a5b <button1+0x13>
    4f7e:	90 93 5c 2a 	sts	0x2A5C, r25	; 0x802a5c <button1+0x14>
attachClick():
    4f82:	8d ee       	ldi	r24, 0xED	; 237
    4f84:	9c e0       	ldi	r25, 0x0C	; 12
    4f86:	80 93 36 2a 	sts	0x2A36, r24	; 0x802a36 <button2+0xd>
    4f8a:	90 93 37 2a 	sts	0x2A37, r25	; 0x802a37 <button2+0xe>
attachDuringLongPress():
    4f8e:	86 ed       	ldi	r24, 0xD6	; 214
    4f90:	9c e0       	ldi	r25, 0x0C	; 12
    4f92:	80 93 40 2a 	sts	0x2A40, r24	; 0x802a40 <button2+0x17>
    4f96:	90 93 41 2a 	sts	0x2A41, r25	; 0x802a41 <button2+0x18>
attachLongPressStop():
    4f9a:	8a e4       	ldi	r24, 0x4A	; 74
    4f9c:	95 e0       	ldi	r25, 0x05	; 5
    4f9e:	80 93 3e 2a 	sts	0x2A3E, r24	; 0x802a3e <button2+0x15>
    4fa2:	90 93 3f 2a 	sts	0x2A3F, r25	; 0x802a3f <button2+0x16>
attachClick():
    4fa6:	8d e7       	ldi	r24, 0x7D	; 125
    4fa8:	9c e0       	ldi	r25, 0x0C	; 12
    4faa:	80 93 17 2a 	sts	0x2A17, r24	; 0x802a17 <button3+0xd>
    4fae:	90 93 18 2a 	sts	0x2A18, r25	; 0x802a18 <button3+0xe>
attachDuringLongPress():
    4fb2:	86 e6       	ldi	r24, 0x66	; 102
    4fb4:	9c e0       	ldi	r25, 0x0C	; 12
    4fb6:	80 93 21 2a 	sts	0x2A21, r24	; 0x802a21 <button3+0x17>
    4fba:	90 93 22 2a 	sts	0x2A22, r25	; 0x802a22 <button3+0x18>
attachLongPressStop():
    4fbe:	8f e3       	ldi	r24, 0x3F	; 63
    4fc0:	95 e0       	ldi	r25, 0x05	; 5
    4fc2:	80 93 1f 2a 	sts	0x2A1F, r24	; 0x802a1f <button3+0x15>
    4fc6:	90 93 20 2a 	sts	0x2A20, r25	; 0x802a20 <button3+0x16>
attachClick():
    4fca:	83 e0       	ldi	r24, 0x03	; 3
    4fcc:	9c e0       	ldi	r25, 0x0C	; 12
    4fce:	80 93 f8 29 	sts	0x29F8, r24	; 0x8029f8 <button4+0xd>
    4fd2:	90 93 f9 29 	sts	0x29F9, r25	; 0x8029f9 <button4+0xe>
attachLongPressStart():
    4fd6:	8c ed       	ldi	r24, 0xDC	; 220
    4fd8:	9b e0       	ldi	r25, 0x0B	; 11
    4fda:	80 93 fe 29 	sts	0x29FE, r24	; 0x8029fe <button4+0x13>
    4fde:	90 93 ff 29 	sts	0x29FF, r25	; 0x8029ff <button4+0x14>
setup():
    4fe2:	82 ea       	ldi	r24, 0xA2	; 162
    4fe4:	9b e2       	ldi	r25, 0x2B	; 43
    4fe6:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
DISPLAY_DIGIT2():
    4fea:	ea e0       	ldi	r30, 0x0A	; 10
    4fec:	ee 2e       	mov	r14, r30
    4fee:	f1 2c       	mov	r15, r1
    4ff0:	08 e1       	ldi	r16, 0x18	; 24
    4ff2:	10 e0       	ldi	r17, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    4ff4:	fe e1       	ldi	r31, 0x1E	; 30
    4ff6:	4f 2e       	mov	r4, r31
    4ff8:	51 2c       	mov	r5, r1
    4ffa:	a9 e1       	ldi	r26, 0x19	; 25
    4ffc:	6a 2e       	mov	r6, r26
    4ffe:	71 2c       	mov	r7, r1
DISPLAY_DIGIT1():
    5000:	b8 e1       	ldi	r27, 0x18	; 24
    5002:	2b 2e       	mov	r2, r27
    5004:	31 2c       	mov	r3, r1
DISP_UPDATE():
    5006:	8d eb       	ldi	r24, 0xBD	; 189
    5008:	9b e2       	ldi	r25, 0x2B	; 43
    500a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
loop():
    500e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    5012:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    5016:	88 23       	and	r24, r24
    5018:	99 f1       	breq	.+102    	; 0x5080 <main+0x732>
    501a:	82 ea       	ldi	r24, 0xA2	; 162
    501c:	9b e2       	ldi	r25, 0x2B	; 43
    501e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
    5022:	89 e1       	ldi	r24, 0x19	; 25
    5024:	90 e0       	ldi	r25, 0x00	; 0
    5026:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
DISPLAY_DIGIT2():
    502a:	82 e2       	ldi	r24, 0x22	; 34
    502c:	90 e0       	ldi	r25, 0x00	; 0
    502e:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5032:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5036:	00 93 e9 28 	sts	0x28E9, r16	; 0x8028e9 <digits2+0x2>
    503a:	10 93 ea 28 	sts	0x28EA, r17	; 0x8028ea <digits2+0x3>
    503e:	00 93 eb 28 	sts	0x28EB, r16	; 0x8028eb <digits2+0x4>
    5042:	10 93 ec 28 	sts	0x28EC, r17	; 0x8028ec <digits2+0x5>
    5046:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x6>
    504a:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    504e:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5052:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5056:	84 e0       	ldi	r24, 0x04	; 4
    5058:	90 e0       	ldi	r25, 0x00	; 0
    505a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    505e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5062:	10 92 f3 28 	sts	0x28F3, r1	; 0x8028f3 <digits1+0x4>
    5066:	10 92 f4 28 	sts	0x28F4, r1	; 0x8028f4 <digits1+0x5>
    506a:	81 e0       	ldi	r24, 0x01	; 1
    506c:	90 e0       	ldi	r25, 0x00	; 0
    506e:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5072:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
loop():
    5076:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
main():
    507a:	0e 94 ba 06 	call	0xd74	; 0xd74 <serialEventRun()>
    507e:	c3 cf       	rjmp	.-122    	; 0x5006 <main+0x6b8>
stop():
    5080:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <VersionDisplay>
    5084:	10 92 ad 2b 	sts	0x2BAD, r1	; 0x802bad <VersionDisplay+0xb>
    5088:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <VersionDisplay+0xc>
    508c:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <VersionDisplay+0xd>
    5090:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <VersionDisplay+0xe>
    5094:	10 92 b1 2b 	sts	0x2BB1, r1	; 0x802bb1 <VersionDisplay+0xf>
    5098:	10 92 b2 2b 	sts	0x2BB2, r1	; 0x802bb2 <VersionDisplay+0x10>
loop():
    509c:	20 e0       	ldi	r18, 0x00	; 0
    509e:	30 e0       	ldi	r19, 0x00	; 0
    50a0:	40 ef       	ldi	r20, 0xF0	; 240
    50a2:	52 e4       	ldi	r21, 0x42	; 66
    50a4:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    50a8:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    50ac:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    50b0:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    50b4:	0e 94 0d 38 	call	0x701a	; 0x701a <__gesf2>
    50b8:	87 fd       	sbrc	r24, 7
    50ba:	8c c0       	rjmp	.+280    	; 0x51d4 <main+0x886>
Probe_Error():
    50bc:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT2_0>
    50c0:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT2_2>
    50c4:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    50c8:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_2>
    50cc:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    50d0:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    50d4:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    50d8:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    50dc:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    50e0:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    50e4:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    50e8:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    50ec:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
digitalWrite():
    50f0:	60 e0       	ldi	r22, 0x00	; 0
    50f2:	8c e0       	ldi	r24, 0x0C	; 12
    50f4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    50f8:	60 e0       	ldi	r22, 0x00	; 0
    50fa:	8d e0       	ldi	r24, 0x0D	; 13
    50fc:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5100:	8b e0       	ldi	r24, 0x0B	; 11
    5102:	90 e0       	ldi	r25, 0x00	; 0
    5104:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5108:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    510c:	81 e1       	ldi	r24, 0x11	; 17
    510e:	90 e0       	ldi	r25, 0x00	; 0
    5110:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5114:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5118:	27 e1       	ldi	r18, 0x17	; 23
    511a:	30 e0       	ldi	r19, 0x00	; 0
    511c:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    5120:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    5124:	4e e0       	ldi	r20, 0x0E	; 14
    5126:	50 e0       	ldi	r21, 0x00	; 0
    5128:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    512c:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5130:	4f e0       	ldi	r20, 0x0F	; 15
    5132:	50 e0       	ldi	r21, 0x00	; 0
    5134:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits1>
    5138:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits1+0x1>
    513c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5140:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5144:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    5148:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    514c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5150:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
interval():
    5154:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    5158:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    515c:	89 2b       	or	r24, r25
    515e:	81 f1       	breq	.+96     	; 0x51c0 <main+0x872>
    5160:	88 ee       	ldi	r24, 0xE8	; 232
    5162:	93 e0       	ldi	r25, 0x03	; 3
    5164:	a0 e0       	ldi	r26, 0x00	; 0
    5166:	b0 e0       	ldi	r27, 0x00	; 0
    5168:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    516c:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    5170:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    5174:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    5178:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    517c:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    5180:	89 2b       	or	r24, r25
    5182:	19 f1       	breq	.+70     	; 0x51ca <main+0x87c>
    5184:	80 ed       	ldi	r24, 0xD0	; 208
    5186:	97 e0       	ldi	r25, 0x07	; 7
    5188:	a0 e0       	ldi	r26, 0x00	; 0
    518a:	b0 e0       	ldi	r27, 0x00	; 0
    518c:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    5190:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    5194:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    5198:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
Probe_Error():
    519c:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    51a0:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    51a4:	89 2b       	or	r24, r25
    51a6:	09 f0       	breq	.+2      	; 0x51aa <main+0x85c>
    51a8:	68 cf       	rjmp	.-304    	; 0x507a <main+0x72c>
BUZZ_TICK_START():
    51aa:	8c e6       	ldi	r24, 0x6C	; 108
    51ac:	9b e2       	ldi	r25, 0x2B	; 43
    51ae:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
Probe_Error():
    51b2:	81 e0       	ldi	r24, 0x01	; 1
    51b4:	90 e0       	ldi	r25, 0x00	; 0
    51b6:	80 93 b0 28 	sts	0x28B0, r24	; 0x8028b0 <REP>
    51ba:	90 93 b1 28 	sts	0x28B1, r25	; 0x8028b1 <REP+0x1>
    51be:	5d cf       	rjmp	.-326    	; 0x507a <main+0x72c>
main():
    51c0:	80 e4       	ldi	r24, 0x40	; 64
    51c2:	92 e4       	ldi	r25, 0x42	; 66
    51c4:	af e0       	ldi	r26, 0x0F	; 15
    51c6:	b0 e0       	ldi	r27, 0x00	; 0
    51c8:	cf cf       	rjmp	.-98     	; 0x5168 <main+0x81a>
    51ca:	80 e8       	ldi	r24, 0x80	; 128
    51cc:	94 e8       	ldi	r25, 0x84	; 132
    51ce:	ae e1       	ldi	r26, 0x1E	; 30
    51d0:	b0 e0       	ldi	r27, 0x00	; 0
    51d2:	dc cf       	rjmp	.-72     	; 0x518c <main+0x83e>
digitalRead():
    51d4:	85 e2       	ldi	r24, 0x25	; 37
    51d6:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
    51da:	d0 90 4f 28 	lds	r13, 0x284F	; 0x80284f <but1>
but_check():
    51de:	81 11       	cpse	r24, r1
    51e0:	42 c0       	rjmp	.+132    	; 0x5266 <main+0x918>
digitalRead():
    51e2:	84 e2       	ldi	r24, 0x24	; 36
    51e4:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    51e8:	81 11       	cpse	r24, r1
    51ea:	3d c0       	rjmp	.+122    	; 0x5266 <main+0x918>
    51ec:	d1 10       	cpse	r13, r1
    51ee:	3b c0       	rjmp	.+118    	; 0x5266 <main+0x918>
    51f0:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    51f4:	60 93 4b 28 	sts	0x284B, r22	; 0x80284b <start_tt>
    51f8:	70 93 4c 28 	sts	0x284C, r23	; 0x80284c <start_tt+0x1>
    51fc:	80 93 4d 28 	sts	0x284D, r24	; 0x80284d <start_tt+0x2>
    5200:	90 93 4e 28 	sts	0x284E, r25	; 0x80284e <start_tt+0x3>
    5204:	81 e0       	ldi	r24, 0x01	; 1
    5206:	80 93 4f 28 	sts	0x284F, r24	; 0x80284f <but1>
loop():
    520a:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
    520e:	88 23       	and	r24, r24
    5210:	11 f4       	brne	.+4      	; 0x5216 <main+0x8c8>
    5212:	0c 94 55 36 	jmp	0x6caa	; 0x6caa <main+0x235c>
digitalWrite():
    5216:	60 e0       	ldi	r22, 0x00	; 0
    5218:	8c e0       	ldi	r24, 0x0C	; 12
    521a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    521e:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    5222:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    5226:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    522a:	88 23       	and	r24, r24
    522c:	09 f4       	brne	.+2      	; 0x5230 <main+0x8e2>
    522e:	1f c7       	rjmp	.+3646   	; 0x606e <main+0x1720>
    5230:	e3 31       	cpi	r30, 0x13	; 19
    5232:	f1 05       	cpc	r31, r1
    5234:	08 f0       	brcs	.+2      	; 0x5238 <main+0x8ea>
    5236:	21 cf       	rjmp	.-446    	; 0x507a <main+0x72c>
    5238:	e0 5e       	subi	r30, 0xE0	; 224
    523a:	f6 4d       	sbci	r31, 0xD6	; 214
    523c:	0c 94 c5 38 	jmp	0x718a	; 0x718a <__tablejump2__>
    5240:	87 29       	or	r24, r7
    5242:	e0 29       	or	r30, r0
    5244:	1e 2a       	or	r1, r30
    5246:	89 2a       	or	r8, r25
    5248:	f5 2a       	or	r15, r21
    524a:	43 2b       	or	r20, r19
    524c:	92 2b       	or	r25, r18
    524e:	d3 2b       	or	r29, r19
    5250:	00 2c       	mov	r0, r0
    5252:	4d 2c       	mov	r4, r13
    5254:	9c 2c       	mov	r9, r12
    5256:	e1 2c       	mov	r14, r1
    5258:	23 2d       	mov	r18, r3
    525a:	9c 2d       	mov	r25, r12
    525c:	ce 2d       	mov	r28, r14
    525e:	46 2e       	mov	r4, r22
    5260:	4b 2e       	mov	r4, r27
    5262:	78 2e       	mov	r7, r24
    5264:	ab 2e       	mov	r10, r27
digitalRead():
    5266:	85 e2       	ldi	r24, 0x25	; 37
    5268:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    526c:	88 23       	and	r24, r24
    526e:	61 f0       	breq	.+24     	; 0x5288 <main+0x93a>
    5270:	dd 20       	and	r13, r13
    5272:	09 f4       	brne	.+2      	; 0x5276 <main+0x928>
    5274:	ca cf       	rjmp	.-108    	; 0x520a <main+0x8bc>
digitalRead():
    5276:	85 e2       	ldi	r24, 0x25	; 37
    5278:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    527c:	81 30       	cpi	r24, 0x01	; 1
    527e:	09 f0       	breq	.+2      	; 0x5282 <main+0x934>
    5280:	3f c0       	rjmp	.+126    	; 0x5300 <main+0x9b2>
    5282:	10 92 4f 28 	sts	0x284F, r1	; 0x80284f <but1>
    5286:	c1 cf       	rjmp	.-126    	; 0x520a <main+0x8bc>
    5288:	c0 90 4d 29 	lds	r12, 0x294D	; 0x80294d <LONG_PRESS>
digitalRead():
    528c:	84 e2       	ldi	r24, 0x24	; 36
    528e:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    5292:	81 11       	cpse	r24, r1
    5294:	ed cf       	rjmp	.-38     	; 0x5270 <main+0x922>
    5296:	dd 20       	and	r13, r13
    5298:	09 f4       	brne	.+2      	; 0x529c <main+0x94e>
    529a:	b7 cf       	rjmp	.-146    	; 0x520a <main+0x8bc>
    529c:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    52a0:	80 90 4b 28 	lds	r8, 0x284B	; 0x80284b <start_tt>
    52a4:	90 90 4c 28 	lds	r9, 0x284C	; 0x80284c <start_tt+0x1>
    52a8:	a0 90 4d 28 	lds	r10, 0x284D	; 0x80284d <start_tt+0x2>
    52ac:	b0 90 4e 28 	lds	r11, 0x284E	; 0x80284e <start_tt+0x3>
    52b0:	68 19       	sub	r22, r8
    52b2:	79 09       	sbc	r23, r9
    52b4:	8a 09       	sbc	r24, r10
    52b6:	9b 09       	sbc	r25, r11
    52b8:	68 3b       	cpi	r22, 0xB8	; 184
    52ba:	7b 40       	sbci	r23, 0x0B	; 11
    52bc:	81 05       	cpc	r24, r1
    52be:	91 05       	cpc	r25, r1
    52c0:	08 f4       	brcc	.+2      	; 0x52c4 <main+0x976>
    52c2:	a3 cf       	rjmp	.-186    	; 0x520a <main+0x8bc>
    52c4:	84 ef       	ldi	r24, 0xF4	; 244
    52c6:	91 e0       	ldi	r25, 0x01	; 1
    52c8:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    52cc:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    52d0:	81 11       	cpse	r24, r1
    52d2:	9b cf       	rjmp	.-202    	; 0x520a <main+0x8bc>
    52d4:	c1 10       	cpse	r12, r1
    52d6:	9f cf       	rjmp	.-194    	; 0x5216 <main+0x8c8>
    52d8:	8e e5       	ldi	r24, 0x5E	; 94
    52da:	91 e0       	ldi	r25, 0x01	; 1
    52dc:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    52e0:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    52e4:	81 e0       	ldi	r24, 0x01	; 1
    52e6:	80 93 4d 29 	sts	0x294D, r24	; 0x80294d <LONG_PRESS>
    52ea:	80 93 4a 28 	sts	0x284A, r24	; 0x80284a <RST_BUTT>
    52ee:	80 93 49 28 	sts	0x2849, r24	; 0x802849 <Service_Menu>
    52f2:	85 e0       	ldi	r24, 0x05	; 5
    52f4:	90 e0       	ldi	r25, 0x00	; 0
    52f6:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    52fa:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    52fe:	85 cf       	rjmp	.-246    	; 0x520a <main+0x8bc>
digitalRead():
    5300:	84 e2       	ldi	r24, 0x24	; 36
    5302:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    5306:	81 30       	cpi	r24, 0x01	; 1
    5308:	09 f0       	breq	.+2      	; 0x530c <main+0x9be>
    530a:	7f cf       	rjmp	.-258    	; 0x520a <main+0x8bc>
    530c:	ba cf       	rjmp	.-140    	; 0x5282 <main+0x934>
SET_LONG_PRESS_FUNCTION():
    530e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5312:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5316:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    531a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    531e:	8c e0       	ldi	r24, 0x0C	; 12
    5320:	90 e0       	ldi	r25, 0x00	; 0
    5322:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5326:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    532a:	80 e1       	ldi	r24, 0x10	; 16
    532c:	90 e0       	ldi	r25, 0x00	; 0
    532e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5332:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5336:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    533a:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    533e:	81 e1       	ldi	r24, 0x11	; 17
    5340:	90 e0       	ldi	r25, 0x00	; 0
    5342:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5346:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    534a:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    534e:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5352:	89 31       	cpi	r24, 0x19	; 25
    5354:	91 05       	cpc	r25, r1
    5356:	4c f4       	brge	.+18     	; 0x536a <main+0xa1c>
DISPLAY_DIGIT1():
    5358:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    535c:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5360:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5364:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5368:	03 c7       	rjmp	.+3590   	; 0x6170 <main+0x1822>
SET_LONG_PRESS_FUNCTION():
    536a:	20 91 1a 29 	lds	r18, 0x291A	; 0x80291a <SET_LONG_VALUE>
    536e:	30 91 1b 29 	lds	r19, 0x291B	; 0x80291b <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    5372:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    5376:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    537a:	23 2b       	or	r18, r19
    537c:	b1 f4       	brne	.+44     	; 0x53aa <main+0xa5c>
DISPLAY_DIGIT1():
    537e:	25 e1       	ldi	r18, 0x15	; 21
    5380:	30 e0       	ldi	r19, 0x00	; 0
    5382:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    5386:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    538a:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    538e:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    5392:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    5396:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    539a:	c3 97       	sbiw	r24, 0x33	; 51
    539c:	0c f4       	brge	.+2      	; 0x53a0 <main+0xa52>
    539e:	6d ce       	rjmp	.-806    	; 0x507a <main+0x72c>
    53a0:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    53a4:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    53a8:	68 ce       	rjmp	.-816    	; 0x507a <main+0x72c>
DISPLAY_DIGIT1():
    53aa:	24 e1       	ldi	r18, 0x14	; 20
    53ac:	30 e0       	ldi	r19, 0x00	; 0
    53ae:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    53b2:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    53b6:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    53ba:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    53be:	e9 cf       	rjmp	.-46     	; 0x5392 <main+0xa44>
SET_LONG_PRESS_FUNCTION():
    53c0:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    53c4:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    53c8:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    53cc:	8c e1       	ldi	r24, 0x1C	; 28
    53ce:	90 e0       	ldi	r25, 0x00	; 0
    53d0:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    53d4:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    53d8:	84 e1       	ldi	r24, 0x14	; 20
    53da:	90 e0       	ldi	r25, 0x00	; 0
    53dc:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    53e0:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    53e4:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    53e8:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    53ec:	80 e1       	ldi	r24, 0x10	; 16
    53ee:	90 e0       	ldi	r25, 0x00	; 0
    53f0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    53f4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    53f8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    53fc:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5400:	89 31       	cpi	r24, 0x19	; 25
    5402:	91 05       	cpc	r25, r1
    5404:	0c f4       	brge	.+2      	; 0x5408 <main+0xaba>
    5406:	a8 cf       	rjmp	.-176    	; 0x5358 <main+0xa0a>
    5408:	20 91 1c 29 	lds	r18, 0x291C	; 0x80291c <SET_LONG_VALUE+0x2>
    540c:	30 91 1d 29 	lds	r19, 0x291D	; 0x80291d <SET_LONG_VALUE+0x3>
    5410:	23 2b       	or	r18, r19
    5412:	59 f4       	brne	.+22     	; 0x542a <main+0xadc>
DISPLAY_DIGIT1():
    5414:	2d e1       	ldi	r18, 0x1D	; 29
    5416:	30 e0       	ldi	r19, 0x00	; 0
    5418:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    541c:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5420:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1+0x2>
    5424:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x3>
    5428:	c6 cf       	rjmp	.-116    	; 0x53b6 <main+0xa68>
    542a:	2d e1       	ldi	r18, 0x1D	; 29
    542c:	30 e0       	ldi	r19, 0x00	; 0
    542e:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    5432:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5436:	25 e1       	ldi	r18, 0x15	; 21
    5438:	30 e0       	ldi	r19, 0x00	; 0
    543a:	b9 cf       	rjmp	.-142    	; 0x53ae <main+0xa60>
SET_LONG_PRESS_FUNCTION():
    543c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5440:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
DISPLAY_DIGIT2():
    5444:	8c e0       	ldi	r24, 0x0C	; 12
    5446:	90 e0       	ldi	r25, 0x00	; 0
    5448:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    544c:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5450:	8d e0       	ldi	r24, 0x0D	; 13
    5452:	90 e0       	ldi	r25, 0x00	; 0
    5454:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5458:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    545c:	85 e1       	ldi	r24, 0x15	; 21
    545e:	90 e0       	ldi	r25, 0x00	; 0
    5460:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5464:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5468:	8f e0       	ldi	r24, 0x0F	; 15
    546a:	90 e0       	ldi	r25, 0x00	; 0
    546c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5470:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    5474:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    5478:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    547c:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    5480:	29 31       	cpi	r18, 0x19	; 25
    5482:	31 05       	cpc	r19, r1
    5484:	d4 f4       	brge	.+52     	; 0x54ba <main+0xb6c>
    5486:	90 91 9d 28 	lds	r25, 0x289D	; 0x80289d <BLINK_STATS>
    548a:	91 11       	cpse	r25, r1
    548c:	11 c0       	rjmp	.+34     	; 0x54b0 <main+0xb62>
DISPLAY_DIGIT1():
    548e:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5492:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5496:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    549a:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    549e:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    54a2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    54a6:	88 23       	and	r24, r24
    54a8:	f1 f0       	breq	.+60     	; 0x54e6 <main+0xb98>
    54aa:	85 e1       	ldi	r24, 0x15	; 21
    54ac:	90 e0       	ldi	r25, 0x00	; 0
    54ae:	81 c0       	rjmp	.+258    	; 0x55b2 <main+0xc64>
    54b0:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    54b4:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    54b8:	f6 cf       	rjmp	.-20     	; 0x54a6 <main+0xb58>
    54ba:	81 11       	cpse	r24, r1
    54bc:	19 c0       	rjmp	.+50     	; 0x54f0 <main+0xba2>
    54be:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_LONG_VALUE+0x4>
    54c2:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_LONG_VALUE+0x5>
    54c6:	2a e0       	ldi	r18, 0x0A	; 10
    54c8:	28 9f       	mul	r18, r24
    54ca:	b0 01       	movw	r22, r0
    54cc:	29 9f       	mul	r18, r25
    54ce:	70 0d       	add	r23, r0
    54d0:	11 24       	eor	r1, r1
    54d2:	07 2e       	mov	r0, r23
    54d4:	00 0c       	add	r0, r0
    54d6:	88 0b       	sbc	r24, r24
    54d8:	99 0b       	sbc	r25, r25
    54da:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    54de:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    54e2:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    54e6:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    54ea:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    54ee:	65 c0       	rjmp	.+202    	; 0x55ba <main+0xc6c>
    54f0:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
    54f4:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
    54f8:	2a e0       	ldi	r18, 0x0A	; 10
    54fa:	28 9f       	mul	r18, r24
    54fc:	b0 01       	movw	r22, r0
    54fe:	29 9f       	mul	r18, r25
    5500:	70 0d       	add	r23, r0
    5502:	11 24       	eor	r1, r1
    5504:	07 2e       	mov	r0, r23
    5506:	00 0c       	add	r0, r0
    5508:	88 0b       	sbc	r24, r24
    550a:	99 0b       	sbc	r25, r25
    550c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5510:	cc cf       	rjmp	.-104    	; 0x54aa <main+0xb5c>
    5512:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5516:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    551a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    551e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5522:	80 e1       	ldi	r24, 0x10	; 16
    5524:	90 e0       	ldi	r25, 0x00	; 0
    5526:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    552a:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    552e:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    5532:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    5536:	22 e1       	ldi	r18, 0x12	; 18
    5538:	30 e0       	ldi	r19, 0x00	; 0
    553a:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    553e:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    5542:	2f e0       	ldi	r18, 0x0F	; 15
    5544:	30 e0       	ldi	r19, 0x00	; 0
    5546:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    554a:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    554e:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    5552:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    5556:	29 31       	cpi	r18, 0x19	; 25
    5558:	31 05       	cpc	r19, r1
    555a:	ac f4       	brge	.+42     	; 0x5586 <main+0xc38>
    555c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5560:	81 11       	cpse	r24, r1
    5562:	5d c2       	rjmp	.+1210   	; 0x5a1e <main+0x10d0>
DISPLAY_DIGIT1():
    5564:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5568:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    556c:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5570:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5574:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5578:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    557c:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    5580:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
    5584:	1a c0       	rjmp	.+52     	; 0x55ba <main+0xc6c>
SET_LONG_PRESS_FUNCTION():
    5586:	20 91 20 29 	lds	r18, 0x2920	; 0x802920 <SET_LONG_VALUE+0x6>
    558a:	30 91 21 29 	lds	r19, 0x2921	; 0x802921 <SET_LONG_VALUE+0x7>
    558e:	23 2b       	or	r18, r19
    5590:	c9 f4       	brne	.+50     	; 0x55c4 <main+0xc76>
DISPLAY_DIGIT1():
    5592:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5596:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    559a:	27 e1       	ldi	r18, 0x17	; 23
    559c:	30 e0       	ldi	r19, 0x00	; 0
    559e:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    55a2:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    55a6:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    55aa:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    55ae:	8f e1       	ldi	r24, 0x1F	; 31
    55b0:	90 e0       	ldi	r25, 0x00	; 0
    55b2:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    55b6:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    55ba:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    55be:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    55c2:	eb ce       	rjmp	.-554    	; 0x539a <main+0xa4c>
DISPLAY_DIGIT1():
    55c4:	8c e0       	ldi	r24, 0x0C	; 12
    55c6:	90 e0       	ldi	r25, 0x00	; 0
    55c8:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    55cc:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    55d0:	87 e1       	ldi	r24, 0x17	; 23
    55d2:	90 e0       	ldi	r25, 0x00	; 0
    55d4:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    55d8:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    55dc:	8d e0       	ldi	r24, 0x0D	; 13
    55de:	90 e0       	ldi	r25, 0x00	; 0
    55e0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    55e4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    55e8:	7e cf       	rjmp	.-260    	; 0x54e6 <main+0xb98>
SET_LONG_PRESS_FUNCTION():
    55ea:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    55ee:	8b e0       	ldi	r24, 0x0B	; 11
    55f0:	90 e0       	ldi	r25, 0x00	; 0
    55f2:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    55f6:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    55fa:	81 e1       	ldi	r24, 0x11	; 17
    55fc:	90 e0       	ldi	r25, 0x00	; 0
    55fe:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5602:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5606:	87 e1       	ldi	r24, 0x17	; 23
    5608:	90 e0       	ldi	r25, 0x00	; 0
    560a:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    560e:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5612:	8c e0       	ldi	r24, 0x0C	; 12
    5614:	90 e0       	ldi	r25, 0x00	; 0
    5616:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    561a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    561e:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    5622:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    5626:	29 31       	cpi	r18, 0x19	; 25
    5628:	31 05       	cpc	r19, r1
    562a:	0c f4       	brge	.+2      	; 0x562e <main+0xce0>
    562c:	97 cf       	rjmp	.-210    	; 0x555c <main+0xc0e>
    562e:	20 91 22 29 	lds	r18, 0x2922	; 0x802922 <SET_LONG_VALUE+0x8>
    5632:	30 91 23 29 	lds	r19, 0x2923	; 0x802923 <SET_LONG_VALUE+0x9>
    5636:	23 2b       	or	r18, r19
    5638:	89 f4       	brne	.+34     	; 0x565c <main+0xd0e>
DISPLAY_DIGIT1():
    563a:	20 e2       	ldi	r18, 0x20	; 32
    563c:	30 e0       	ldi	r19, 0x00	; 0
    563e:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    5642:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5646:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits1+0x2>
    564a:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits1+0x3>
    564e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5652:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5656:	8e e0       	ldi	r24, 0x0E	; 14
    5658:	90 e0       	ldi	r25, 0x00	; 0
    565a:	ab cf       	rjmp	.-170    	; 0x55b2 <main+0xc64>
    565c:	8f e0       	ldi	r24, 0x0F	; 15
    565e:	90 e0       	ldi	r25, 0x00	; 0
    5660:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5664:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5668:	84 e1       	ldi	r24, 0x14	; 20
    566a:	90 e0       	ldi	r25, 0x00	; 0
    566c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5670:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5674:	8e e0       	ldi	r24, 0x0E	; 14
    5676:	90 e0       	ldi	r25, 0x00	; 0
    5678:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    567c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5680:	8a e1       	ldi	r24, 0x1A	; 26
    5682:	90 e0       	ldi	r25, 0x00	; 0
    5684:	96 cf       	rjmp	.-212    	; 0x55b2 <main+0xc64>
SET_LONG_PRESS_FUNCTION():
    5686:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    568a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    568e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5692:	8b e0       	ldi	r24, 0x0B	; 11
    5694:	90 e0       	ldi	r25, 0x00	; 0
    5696:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    569a:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    569e:	81 e1       	ldi	r24, 0x11	; 17
    56a0:	90 e0       	ldi	r25, 0x00	; 0
    56a2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    56a6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    56aa:	80 e2       	ldi	r24, 0x20	; 32
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    56b2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    56b6:	80 e1       	ldi	r24, 0x10	; 16
    56b8:	90 e0       	ldi	r25, 0x00	; 0
    56ba:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    56be:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    56c2:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    56c6:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    56ca:	49 97       	sbiw	r24, 0x19	; 25
    56cc:	0c f4       	brge	.+2      	; 0x56d0 <main+0xd82>
    56ce:	46 cf       	rjmp	.-372    	; 0x555c <main+0xc0e>
    56d0:	80 91 24 29 	lds	r24, 0x2924	; 0x802924 <SET_LONG_VALUE+0xa>
    56d4:	90 91 25 29 	lds	r25, 0x2925	; 0x802925 <SET_LONG_VALUE+0xb>
    56d8:	89 2b       	or	r24, r25
    56da:	99 f0       	breq	.+38     	; 0x5702 <main+0xdb4>
DISPLAY_DIGIT1():
    56dc:	84 e2       	ldi	r24, 0x24	; 36
    56de:	90 e0       	ldi	r25, 0x00	; 0
    56e0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    56e4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    56e8:	8a e1       	ldi	r24, 0x1A	; 26
    56ea:	90 e0       	ldi	r25, 0x00	; 0
    56ec:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    56f0:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    56f4:	8c e0       	ldi	r24, 0x0C	; 12
    56f6:	90 e0       	ldi	r25, 0x00	; 0
    56f8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    56fc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5700:	3d cf       	rjmp	.-390    	; 0x557c <main+0xc2e>
    5702:	84 e2       	ldi	r24, 0x24	; 36
    5704:	90 e0       	ldi	r25, 0x00	; 0
    5706:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    570a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    570e:	8a e1       	ldi	r24, 0x1A	; 26
    5710:	90 e0       	ldi	r25, 0x00	; 0
    5712:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5716:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    571a:	e0 92 f3 28 	sts	0x28F3, r14	; 0x8028f3 <digits1+0x4>
    571e:	f0 92 f4 28 	sts	0x28F4, r15	; 0x8028f4 <digits1+0x5>
    5722:	2c cf       	rjmp	.-424    	; 0x557c <main+0xc2e>
SET_LONG_PRESS_FUNCTION():
    5724:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5728:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    572c:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    5730:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    5734:	2d e0       	ldi	r18, 0x0D	; 13
    5736:	30 e0       	ldi	r19, 0x00	; 0
    5738:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    573c:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    5740:	8a e1       	ldi	r24, 0x1A	; 26
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5748:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    574c:	4e e0       	ldi	r20, 0x0E	; 14
    574e:	50 e0       	ldi	r21, 0x00	; 0
    5750:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    5754:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5758:	40 91 9f 28 	lds	r20, 0x289F	; 0x80289f <i>
    575c:	50 91 a0 28 	lds	r21, 0x28A0	; 0x8028a0 <i+0x1>
    5760:	49 31       	cpi	r20, 0x19	; 25
    5762:	51 05       	cpc	r21, r1
    5764:	0c f4       	brge	.+2      	; 0x5768 <main+0xe1a>
    5766:	f8 cd       	rjmp	.-1040   	; 0x5358 <main+0xa0a>
    5768:	60 91 26 29 	lds	r22, 0x2926	; 0x802926 <SET_LONG_VALUE+0xc>
    576c:	70 91 27 29 	lds	r23, 0x2927	; 0x802927 <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    5770:	e0 92 ef 28 	sts	0x28EF, r14	; 0x8028ef <digits1>
    5774:	f0 92 f0 28 	sts	0x28F0, r15	; 0x8028f0 <digits1+0x1>
    5778:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    577c:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    5780:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5784:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5788:	82 e0       	ldi	r24, 0x02	; 2
    578a:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    578c:	67 2b       	or	r22, r23
    578e:	11 f4       	brne	.+4      	; 0x5794 <main+0xe46>
DISPLAY_DIGIT1():
    5790:	81 e0       	ldi	r24, 0x01	; 1
    5792:	90 e0       	ldi	r25, 0x00	; 0
    5794:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5798:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    579c:	43 33       	cpi	r20, 0x33	; 51
    579e:	51 05       	cpc	r21, r1
    57a0:	0c f0       	brlt	.+2      	; 0x57a4 <main+0xe56>
    57a2:	fe cd       	rjmp	.-1028   	; 0x53a0 <main+0xa52>
    57a4:	6a cc       	rjmp	.-1836   	; 0x507a <main+0x72c>
    57a6:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    57aa:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    57ae:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    57b2:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    57b6:	8d e0       	ldi	r24, 0x0D	; 13
    57b8:	90 e0       	ldi	r25, 0x00	; 0
    57ba:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    57be:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    57c2:	8a e1       	ldi	r24, 0x1A	; 26
    57c4:	90 e0       	ldi	r25, 0x00	; 0
    57c6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    57ca:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    57ce:	81 e0       	ldi	r24, 0x01	; 1
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    57d6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    57da:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    57de:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    57e2:	49 97       	sbiw	r24, 0x19	; 25
    57e4:	04 f5       	brge	.+64     	; 0x5826 <main+0xed8>
    57e6:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    57ea:	81 11       	cpse	r24, r1
    57ec:	d2 c1       	rjmp	.+932    	; 0x5b92 <main+0x1244>
    57ee:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    57f2:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    57f6:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    57fa:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    57fe:	73 ce       	rjmp	.-794    	; 0x54e6 <main+0xb98>
    5800:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5804:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5808:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    580c:	21 11       	cpse	r18, r1
    580e:	28 c0       	rjmp	.+80     	; 0x5860 <main+0xf12>
    5810:	49 97       	sbiw	r24, 0x19	; 25
    5812:	4c f4       	brge	.+18     	; 0x5826 <main+0xed8>
    5814:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5818:	81 11       	cpse	r24, r1
    581a:	bb c1       	rjmp	.+886    	; 0x5b92 <main+0x1244>
    581c:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5820:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5824:	60 ce       	rjmp	.-832    	; 0x54e6 <main+0xb98>
    5826:	80 91 28 29 	lds	r24, 0x2928	; 0x802928 <SET_LONG_VALUE+0xe>
    582a:	90 91 29 29 	lds	r25, 0x2929	; 0x802929 <SET_LONG_VALUE+0xf>
    582e:	24 e6       	ldi	r18, 0x64	; 100
    5830:	28 9f       	mul	r18, r24
    5832:	b0 01       	movw	r22, r0
    5834:	29 9f       	mul	r18, r25
    5836:	70 0d       	add	r23, r0
    5838:	11 24       	eor	r1, r1
    583a:	20 91 2a 29 	lds	r18, 0x292A	; 0x80292a <SET_LONG_VALUE+0x10>
    583e:	30 91 2b 29 	lds	r19, 0x292B	; 0x80292b <SET_LONG_VALUE+0x11>
    5842:	4a e0       	ldi	r20, 0x0A	; 10
    5844:	42 9f       	mul	r20, r18
    5846:	c0 01       	movw	r24, r0
    5848:	43 9f       	mul	r20, r19
    584a:	90 0d       	add	r25, r0
    584c:	11 24       	eor	r1, r1
    584e:	68 0f       	add	r22, r24
    5850:	79 1f       	adc	r23, r25
    5852:	07 2e       	mov	r0, r23
    5854:	00 0c       	add	r0, r0
    5856:	88 0b       	sbc	r24, r24
    5858:	99 0b       	sbc	r25, r25
    585a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    585e:	43 ce       	rjmp	.-890    	; 0x54e6 <main+0xb98>
    5860:	49 97       	sbiw	r24, 0x19	; 25
    5862:	b4 f4       	brge	.+44     	; 0x5890 <main+0xf42>
    5864:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5868:	81 11       	cpse	r24, r1
    586a:	0d c0       	rjmp	.+26     	; 0x5886 <main+0xf38>
DISPLAY_DIGIT1():
    586c:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5870:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5874:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5878:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    587c:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5880:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5884:	12 ce       	rjmp	.-988    	; 0x54aa <main+0xb5c>
SET_LONG_PRESS_FUNCTION():
    5886:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    588a:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    588e:	0d ce       	rjmp	.-998    	; 0x54aa <main+0xb5c>
    5890:	80 91 42 29 	lds	r24, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
    5894:	90 91 43 29 	lds	r25, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
    5898:	2f ce       	rjmp	.-930    	; 0x54f8 <main+0xbaa>
    589a:	dd 24       	eor	r13, r13
    589c:	d3 94       	inc	r13
    589e:	d0 92 ba 28 	sts	0x28BA, r13	; 0x8028ba <DOT1_0>
    58a2:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    58a6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    58aa:	d0 92 ae 28 	sts	0x28AE, r13	; 0x8028ae <CAL2_START>
DISPLAY_DIGIT2():
    58ae:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    58b2:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    58b6:	8d e0       	ldi	r24, 0x0D	; 13
    58b8:	90 e0       	ldi	r25, 0x00	; 0
    58ba:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    58be:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    58c2:	8a e1       	ldi	r24, 0x1A	; 26
    58c4:	90 e0       	ldi	r25, 0x00	; 0
    58c6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    58ca:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    58ce:	82 e0       	ldi	r24, 0x02	; 2
    58d0:	90 e0       	ldi	r25, 0x00	; 0
    58d2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    58d6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    58da:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    58de:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    58e2:	49 97       	sbiw	r24, 0x19	; 25
    58e4:	c4 f4       	brge	.+48     	; 0x5916 <main+0xfc8>
    58e6:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    58ea:	81 11       	cpse	r24, r1
    58ec:	0f c0       	rjmp	.+30     	; 0x590c <main+0xfbe>
DISPLAY_DIGIT1():
    58ee:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    58f2:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    58f6:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    58fa:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    58fe:	8a e1       	ldi	r24, 0x1A	; 26
    5900:	90 e0       	ldi	r25, 0x00	; 0
    5902:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5906:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    590a:	ed cd       	rjmp	.-1062   	; 0x54e6 <main+0xb98>
    590c:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5910:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5914:	f4 cf       	rjmp	.-24     	; 0x58fe <main+0xfb0>
    5916:	80 91 2c 29 	lds	r24, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    591a:	90 91 2d 29 	lds	r25, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    591e:	2a e0       	ldi	r18, 0x0A	; 10
    5920:	28 9f       	mul	r18, r24
    5922:	b0 01       	movw	r22, r0
    5924:	29 9f       	mul	r18, r25
    5926:	70 0d       	add	r23, r0
    5928:	11 24       	eor	r1, r1
    592a:	07 2e       	mov	r0, r23
    592c:	00 0c       	add	r0, r0
    592e:	88 0b       	sbc	r24, r24
    5930:	99 0b       	sbc	r25, r25
    5932:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5936:	e3 cf       	rjmp	.-58     	; 0x58fe <main+0xfb0>
    5938:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    593c:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    5940:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    5944:	8d e0       	ldi	r24, 0x0D	; 13
    5946:	90 e0       	ldi	r25, 0x00	; 0
    5948:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    594c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5950:	8a e1       	ldi	r24, 0x1A	; 26
    5952:	90 e0       	ldi	r25, 0x00	; 0
    5954:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5958:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    595c:	82 e0       	ldi	r24, 0x02	; 2
    595e:	90 e0       	ldi	r25, 0x00	; 0
    5960:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5964:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5968:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    596c:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5970:	49 97       	sbiw	r24, 0x19	; 25
    5972:	b4 f4       	brge	.+44     	; 0x59a0 <main+0x1052>
    5974:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5978:	81 11       	cpse	r24, r1
    597a:	0d c0       	rjmp	.+26     	; 0x5996 <main+0x1048>
DISPLAY_DIGIT1():
    597c:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5980:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5984:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5988:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    598c:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    5990:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    5994:	a8 cd       	rjmp	.-1200   	; 0x54e6 <main+0xb98>
    5996:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    599a:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    599e:	f6 cf       	rjmp	.-20     	; 0x598c <main+0x103e>
    59a0:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    59a4:	90 91 2f 29 	lds	r25, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    59a8:	2a e0       	ldi	r18, 0x0A	; 10
    59aa:	28 9f       	mul	r18, r24
    59ac:	b0 01       	movw	r22, r0
    59ae:	29 9f       	mul	r18, r25
    59b0:	70 0d       	add	r23, r0
    59b2:	11 24       	eor	r1, r1
    59b4:	07 2e       	mov	r0, r23
    59b6:	00 0c       	add	r0, r0
    59b8:	88 0b       	sbc	r24, r24
    59ba:	99 0b       	sbc	r25, r25
    59bc:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    59c0:	e5 cf       	rjmp	.-54     	; 0x598c <main+0x103e>
    59c2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    59c6:	81 e0       	ldi	r24, 0x01	; 1
    59c8:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    59cc:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    59d0:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    59d4:	07 2e       	mov	r0, r23
    59d6:	00 0c       	add	r0, r0
    59d8:	88 0b       	sbc	r24, r24
    59da:	99 0b       	sbc	r25, r25
    59dc:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    59e0:	8a e1       	ldi	r24, 0x1A	; 26
    59e2:	90 e0       	ldi	r25, 0x00	; 0
    59e4:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    59e8:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    59ec:	87 e1       	ldi	r24, 0x17	; 23
    59ee:	90 e0       	ldi	r25, 0x00	; 0
    59f0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    59f4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    59f8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    59fc:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5a00:	49 97       	sbiw	r24, 0x19	; 25
    5a02:	94 f4       	brge	.+36     	; 0x5a28 <main+0x10da>
    5a04:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5a08:	81 11       	cpse	r24, r1
    5a0a:	09 c0       	rjmp	.+18     	; 0x5a1e <main+0x10d0>
    5a0c:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5a10:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5a14:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5a18:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5a1c:	ce cd       	rjmp	.-1124   	; 0x55ba <main+0xc6c>
    5a1e:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5a22:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5a26:	c9 cd       	rjmp	.-1134   	; 0x55ba <main+0xc6c>
    5a28:	80 91 30 29 	lds	r24, 0x2930	; 0x802930 <SET_LONG_VALUE+0x16>
    5a2c:	90 91 31 29 	lds	r25, 0x2931	; 0x802931 <SET_LONG_VALUE+0x17>
    5a30:	24 e6       	ldi	r18, 0x64	; 100
    5a32:	28 9f       	mul	r18, r24
    5a34:	b0 01       	movw	r22, r0
    5a36:	29 9f       	mul	r18, r25
    5a38:	70 0d       	add	r23, r0
    5a3a:	11 24       	eor	r1, r1
    5a3c:	20 91 32 29 	lds	r18, 0x2932	; 0x802932 <SET_LONG_VALUE+0x18>
    5a40:	30 91 33 29 	lds	r19, 0x2933	; 0x802933 <SET_LONG_VALUE+0x19>
    5a44:	fe ce       	rjmp	.-516    	; 0x5842 <main+0xef4>
    5a46:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5a4a:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5a4e:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5a52:	07 2e       	mov	r0, r23
    5a54:	00 0c       	add	r0, r0
    5a56:	88 0b       	sbc	r24, r24
    5a58:	99 0b       	sbc	r25, r25
    5a5a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5a5e:	8a e1       	ldi	r24, 0x1A	; 26
    5a60:	90 e0       	ldi	r25, 0x00	; 0
    5a62:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5a66:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5a6a:	87 e1       	ldi	r24, 0x17	; 23
    5a6c:	90 e0       	ldi	r25, 0x00	; 0
    5a6e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5a72:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5a76:	c0 90 30 29 	lds	r12, 0x2930	; 0x802930 <SET_LONG_VALUE+0x16>
    5a7a:	d0 90 31 29 	lds	r13, 0x2931	; 0x802931 <SET_LONG_VALUE+0x17>
    5a7e:	a0 90 32 29 	lds	r10, 0x2932	; 0x802932 <SET_LONG_VALUE+0x18>
    5a82:	b0 90 33 29 	lds	r11, 0x2933	; 0x802933 <SET_LONG_VALUE+0x19>
    5a86:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5a8a:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5a8e:	49 97       	sbiw	r24, 0x19	; 25
    5a90:	f4 f5       	brge	.+124    	; 0x5b0e <main+0x11c0>
    5a92:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5a96:	81 11       	cpse	r24, r1
    5a98:	35 c0       	rjmp	.+106    	; 0x5b04 <main+0x11b6>
    5a9a:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5a9e:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5aa2:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    5aa6:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    5aaa:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5aae:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5ab2:	c3 97       	sbiw	r24, 0x33	; 51
    5ab4:	24 f0       	brlt	.+8      	; 0x5abe <main+0x1170>
    5ab6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    5aba:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    5abe:	b5 01       	movw	r22, r10
    5ac0:	bb 0c       	add	r11, r11
    5ac2:	88 0b       	sbc	r24, r24
    5ac4:	99 0b       	sbc	r25, r25
    5ac6:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    5aca:	20 e0       	ldi	r18, 0x00	; 0
    5acc:	30 e0       	ldi	r19, 0x00	; 0
    5ace:	40 e2       	ldi	r20, 0x20	; 32
    5ad0:	51 e4       	ldi	r21, 0x41	; 65
    5ad2:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    5ad6:	4b 01       	movw	r8, r22
    5ad8:	5c 01       	movw	r10, r24
    5ada:	b6 01       	movw	r22, r12
    5adc:	dd 0c       	add	r13, r13
    5ade:	88 0b       	sbc	r24, r24
    5ae0:	99 0b       	sbc	r25, r25
    5ae2:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    5ae6:	9b 01       	movw	r18, r22
    5ae8:	ac 01       	movw	r20, r24
    5aea:	c5 01       	movw	r24, r10
    5aec:	b4 01       	movw	r22, r8
    5aee:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    5af2:	60 93 45 28 	sts	0x2845, r22	; 0x802845 <CAL2_CALCULATED_LOW_CAL_VALUE>
    5af6:	70 93 46 28 	sts	0x2846, r23	; 0x802846 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    5afa:	80 93 47 28 	sts	0x2847, r24	; 0x802847 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    5afe:	90 93 48 28 	sts	0x2848, r25	; 0x802848 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    5b02:	bb ca       	rjmp	.-2698   	; 0x507a <main+0x72c>
    5b04:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5b08:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5b0c:	ca cf       	rjmp	.-108    	; 0x5aa2 <main+0x1154>
    5b0e:	84 e6       	ldi	r24, 0x64	; 100
    5b10:	8c 9d       	mul	r24, r12
    5b12:	b0 01       	movw	r22, r0
    5b14:	8d 9d       	mul	r24, r13
    5b16:	70 0d       	add	r23, r0
    5b18:	11 24       	eor	r1, r1
    5b1a:	2a e0       	ldi	r18, 0x0A	; 10
    5b1c:	2a 9d       	mul	r18, r10
    5b1e:	c0 01       	movw	r24, r0
    5b20:	2b 9d       	mul	r18, r11
    5b22:	90 0d       	add	r25, r0
    5b24:	11 24       	eor	r1, r1
    5b26:	68 0f       	add	r22, r24
    5b28:	79 1f       	adc	r23, r25
    5b2a:	07 2e       	mov	r0, r23
    5b2c:	00 0c       	add	r0, r0
    5b2e:	88 0b       	sbc	r24, r24
    5b30:	99 0b       	sbc	r25, r25
    5b32:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5b36:	b5 cf       	rjmp	.-150    	; 0x5aa2 <main+0x1154>
    5b38:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5b3c:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    5b40:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    5b44:	07 2e       	mov	r0, r23
    5b46:	00 0c       	add	r0, r0
    5b48:	88 0b       	sbc	r24, r24
    5b4a:	99 0b       	sbc	r25, r25
    5b4c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5b50:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    5b54:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    5b58:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    5b5c:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    5b60:	81 e0       	ldi	r24, 0x01	; 1
    5b62:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    5b66:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5b6a:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5b6e:	49 97       	sbiw	r24, 0x19	; 25
    5b70:	0c f4       	brge	.+2      	; 0x5b74 <main+0x1226>
    5b72:	39 ce       	rjmp	.-910    	; 0x57e6 <main+0xe98>
    5b74:	80 91 34 29 	lds	r24, 0x2934	; 0x802934 <SET_LONG_VALUE+0x1a>
    5b78:	90 91 35 29 	lds	r25, 0x2935	; 0x802935 <SET_LONG_VALUE+0x1b>
    5b7c:	24 e6       	ldi	r18, 0x64	; 100
    5b7e:	28 9f       	mul	r18, r24
    5b80:	b0 01       	movw	r22, r0
    5b82:	29 9f       	mul	r18, r25
    5b84:	70 0d       	add	r23, r0
    5b86:	11 24       	eor	r1, r1
    5b88:	20 91 36 29 	lds	r18, 0x2936	; 0x802936 <SET_LONG_VALUE+0x1c>
    5b8c:	30 91 37 29 	lds	r19, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1d>
    5b90:	58 ce       	rjmp	.-848    	; 0x5842 <main+0xef4>
    5b92:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5b96:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5b9a:	a5 cc       	rjmp	.-1718   	; 0x54e6 <main+0xb98>
    5b9c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5ba0:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    5ba4:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    5ba8:	07 2e       	mov	r0, r23
    5baa:	00 0c       	add	r0, r0
    5bac:	88 0b       	sbc	r24, r24
    5bae:	99 0b       	sbc	r25, r25
    5bb0:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5bb4:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    5bb8:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    5bbc:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    5bc0:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    5bc4:	81 e0       	ldi	r24, 0x01	; 1
    5bc6:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    5bca:	c0 90 34 29 	lds	r12, 0x2934	; 0x802934 <SET_LONG_VALUE+0x1a>
    5bce:	d0 90 35 29 	lds	r13, 0x2935	; 0x802935 <SET_LONG_VALUE+0x1b>
    5bd2:	a0 90 36 29 	lds	r10, 0x2936	; 0x802936 <SET_LONG_VALUE+0x1c>
    5bd6:	b0 90 37 29 	lds	r11, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1d>
    5bda:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5bde:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5be2:	49 97       	sbiw	r24, 0x19	; 25
    5be4:	f4 f5       	brge	.+124    	; 0x5c62 <main+0x1314>
    5be6:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5bea:	81 11       	cpse	r24, r1
    5bec:	35 c0       	rjmp	.+106    	; 0x5c58 <main+0x130a>
    5bee:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5bf2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5bf6:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    5bfa:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    5bfe:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5c02:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5c06:	c3 97       	sbiw	r24, 0x33	; 51
    5c08:	24 f0       	brlt	.+8      	; 0x5c12 <main+0x12c4>
    5c0a:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    5c0e:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    5c12:	b5 01       	movw	r22, r10
    5c14:	bb 0c       	add	r11, r11
    5c16:	88 0b       	sbc	r24, r24
    5c18:	99 0b       	sbc	r25, r25
    5c1a:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    5c1e:	20 e0       	ldi	r18, 0x00	; 0
    5c20:	30 e0       	ldi	r19, 0x00	; 0
    5c22:	40 e2       	ldi	r20, 0x20	; 32
    5c24:	51 e4       	ldi	r21, 0x41	; 65
    5c26:	0e 94 c2 36 	call	0x6d84	; 0x6d84 <__divsf3>
    5c2a:	4b 01       	movw	r8, r22
    5c2c:	5c 01       	movw	r10, r24
    5c2e:	b6 01       	movw	r22, r12
    5c30:	dd 0c       	add	r13, r13
    5c32:	88 0b       	sbc	r24, r24
    5c34:	99 0b       	sbc	r25, r25
    5c36:	0e 94 5d 37 	call	0x6eba	; 0x6eba <__floatsisf>
    5c3a:	9b 01       	movw	r18, r22
    5c3c:	ac 01       	movw	r20, r24
    5c3e:	c5 01       	movw	r24, r10
    5c40:	b4 01       	movw	r22, r8
    5c42:	0e 94 5a 36 	call	0x6cb4	; 0x6cb4 <__addsf3>
    5c46:	60 93 3f 28 	sts	0x283F, r22	; 0x80283f <CAL2_CALCULATED_HIGH_CAL_VALUE>
    5c4a:	70 93 40 28 	sts	0x2840, r23	; 0x802840 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    5c4e:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    5c52:	90 93 42 28 	sts	0x2842, r25	; 0x802842 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    5c56:	11 ca       	rjmp	.-3038   	; 0x507a <main+0x72c>
    5c58:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5c5c:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5c60:	ca cf       	rjmp	.-108    	; 0x5bf6 <main+0x12a8>
    5c62:	84 e6       	ldi	r24, 0x64	; 100
    5c64:	8c 9d       	mul	r24, r12
    5c66:	b0 01       	movw	r22, r0
    5c68:	8d 9d       	mul	r24, r13
    5c6a:	70 0d       	add	r23, r0
    5c6c:	11 24       	eor	r1, r1
    5c6e:	2a e0       	ldi	r18, 0x0A	; 10
    5c70:	2a 9d       	mul	r18, r10
    5c72:	c0 01       	movw	r24, r0
    5c74:	2b 9d       	mul	r18, r11
    5c76:	90 0d       	add	r25, r0
    5c78:	11 24       	eor	r1, r1
    5c7a:	68 0f       	add	r22, r24
    5c7c:	79 1f       	adc	r23, r25
    5c7e:	07 2e       	mov	r0, r23
    5c80:	00 0c       	add	r0, r0
    5c82:	88 0b       	sbc	r24, r24
    5c84:	99 0b       	sbc	r25, r25
    5c86:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5c8a:	b5 cf       	rjmp	.-150    	; 0x5bf6 <main+0x12a8>
    5c8c:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    5c90:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    5c94:	f2 c9       	rjmp	.-3100   	; 0x507a <main+0x72c>
    5c96:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5c9a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5c9e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5ca2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5ca6:	80 91 52 28 	lds	r24, 0x2852	; 0x802852 <processLog>
    5caa:	90 91 53 28 	lds	r25, 0x2853	; 0x802853 <processLog+0x1>
    5cae:	2a e0       	ldi	r18, 0x0A	; 10
    5cb0:	28 9f       	mul	r18, r24
    5cb2:	b0 01       	movw	r22, r0
    5cb4:	29 9f       	mul	r18, r25
    5cb6:	70 0d       	add	r23, r0
    5cb8:	11 24       	eor	r1, r1
    5cba:	90 e0       	ldi	r25, 0x00	; 0
    5cbc:	80 e0       	ldi	r24, 0x00	; 0
    5cbe:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5cc2:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2+0x6>
    5cc6:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x7>
    5cca:	60 91 50 28 	lds	r22, 0x2850	; 0x802850 <processLogNumberOfTimes>
    5cce:	70 91 51 28 	lds	r23, 0x2851	; 0x802851 <processLogNumberOfTimes+0x1>
    5cd2:	90 e0       	ldi	r25, 0x00	; 0
    5cd4:	80 e0       	ldi	r24, 0x00	; 0
    5cd6:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5cda:	8d e0       	ldi	r24, 0x0D	; 13
    5cdc:	90 e0       	ldi	r25, 0x00	; 0
    5cde:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5ce2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5ce6:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
    5cea:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
    5cee:	c5 c9       	rjmp	.-3190   	; 0x507a <main+0x72c>
    5cf0:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5cf4:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5cf8:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5cfc:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5d00:	8c e0       	ldi	r24, 0x0C	; 12
    5d02:	90 e0       	ldi	r25, 0x00	; 0
    5d04:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5d08:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5d0c:	2c e1       	ldi	r18, 0x1C	; 28
    5d0e:	30 e0       	ldi	r19, 0x00	; 0
    5d10:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    5d14:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    5d18:	41 e1       	ldi	r20, 0x11	; 17
    5d1a:	50 e0       	ldi	r21, 0x00	; 0
    5d1c:	40 93 eb 28 	sts	0x28EB, r20	; 0x8028eb <digits2+0x4>
    5d20:	50 93 ec 28 	sts	0x28EC, r21	; 0x8028ec <digits2+0x5>
    5d24:	2f e0       	ldi	r18, 0x0F	; 15
    5d26:	30 e0       	ldi	r19, 0x00	; 0
    5d28:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    5d2c:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5d30:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits1>
    5d34:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits1+0x1>
    5d38:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    5d3c:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    5d40:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5d44:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5d48:	80 e1       	ldi	r24, 0x10	; 16
    5d4a:	90 e0       	ldi	r25, 0x00	; 0
    5d4c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5d50:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    5d54:	c8 cf       	rjmp	.-112    	; 0x5ce6 <main+0x1398>
SET_LONG_PRESS_FUNCTION():
    5d56:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5d5a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5d5e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5d62:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5d66:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <currentMillis>
    5d6a:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <currentMillis+0x1>
    5d6e:	8f 31       	cpi	r24, 0x1F	; 31
    5d70:	91 05       	cpc	r25, r1
    5d72:	38 f5       	brcc	.+78     	; 0x5dc2 <main+0x1474>
digitalWrite():
    5d74:	61 e0       	ldi	r22, 0x01	; 1
    5d76:	85 e1       	ldi	r24, 0x15	; 21
    5d78:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5d7c:	86 e1       	ldi	r24, 0x16	; 22
    5d7e:	90 e0       	ldi	r25, 0x00	; 0
    5d80:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5d84:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5d88:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5d8c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5d90:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5d94:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5d98:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5d9c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5da0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5da4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5da8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5dac:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5db0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5db4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5db8:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5dbc:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    5dc0:	5c c9       	rjmp	.-3400   	; 0x507a <main+0x72c>
SET_LONG_PRESS_FUNCTION():
    5dc2:	9c 01       	movw	r18, r24
    5dc4:	29 52       	subi	r18, 0x29	; 41
    5dc6:	31 09       	sbc	r19, r1
    5dc8:	22 38       	cpi	r18, 0x82	; 130
    5dca:	31 05       	cpc	r19, r1
    5dcc:	78 f5       	brcc	.+94     	; 0x5e2c <main+0x14de>
digitalWrite():
    5dce:	60 e0       	ldi	r22, 0x00	; 0
    5dd0:	85 e1       	ldi	r24, 0x15	; 21
    5dd2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5dd6:	81 e1       	ldi	r24, 0x11	; 17
    5dd8:	90 e0       	ldi	r25, 0x00	; 0
    5dda:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5dde:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5de2:	8f e0       	ldi	r24, 0x0F	; 15
    5de4:	90 e0       	ldi	r25, 0x00	; 0
    5de6:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5dea:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5dee:	2c e0       	ldi	r18, 0x0C	; 12
    5df0:	30 e0       	ldi	r19, 0x00	; 0
    5df2:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    5df6:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    5dfa:	20 e1       	ldi	r18, 0x10	; 16
    5dfc:	30 e0       	ldi	r19, 0x00	; 0
    5dfe:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    5e02:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5e06:	20 e2       	ldi	r18, 0x20	; 32
    5e08:	30 e0       	ldi	r19, 0x00	; 0
    5e0a:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    5e0e:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5e12:	27 e1       	ldi	r18, 0x17	; 23
    5e14:	30 e0       	ldi	r19, 0x00	; 0
    5e16:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    5e1a:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    5e1e:	24 e1       	ldi	r18, 0x14	; 20
    5e20:	30 e0       	ldi	r19, 0x00	; 0
    5e22:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    5e26:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    5e2a:	c6 cf       	rjmp	.-116    	; 0x5db8 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    5e2c:	8b 3a       	cpi	r24, 0xAB	; 171
    5e2e:	91 05       	cpc	r25, r1
    5e30:	0c f4       	brge	.+2      	; 0x5e34 <main+0x14e6>
    5e32:	23 c9       	rjmp	.-3514   	; 0x507a <main+0x72c>
EEPROM_CLEAR():
    5e34:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <STIR_VALUE_SET>
    5e38:	10 92 4c 29 	sts	0x294C, r1	; 0x80294c <DEGREE_VALUE_SET>
    5e3c:	23 e6       	ldi	r18, 0x63	; 99
    5e3e:	30 e0       	ldi	r19, 0x00	; 0
    5e40:	20 93 0b 29 	sts	0x290B, r18	; 0x80290b <SAFE_VALUE_SET_DEG>
    5e44:	30 93 0c 29 	sts	0x290C, r19	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    5e48:	84 ed       	ldi	r24, 0xD4	; 212
    5e4a:	90 e0       	ldi	r25, 0x00	; 0
    5e4c:	80 93 09 29 	sts	0x2909, r24	; 0x802909 <SAFE_VALUE_SET_FAH>
    5e50:	90 93 0a 29 	sts	0x290A, r25	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    5e54:	10 92 d2 28 	sts	0x28D2, r1	; 0x8028d2 <CAL_SELECT_VALUE>
    5e58:	10 92 d3 28 	sts	0x28D3, r1	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    5e5c:	10 92 03 29 	sts	0x2903, r1	; 0x802903 <ERROR_CAL1>
    5e60:	10 92 04 29 	sts	0x2904, r1	; 0x802904 <ERROR_CAL1+0x1>
    5e64:	10 92 05 29 	sts	0x2905, r1	; 0x802905 <ERROR_CAL1+0x2>
    5e68:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <ERROR_CAL1+0x3>
    5e6c:	10 92 e6 28 	sts	0x28E6, r1	; 0x8028e6 <SIGN>
    5e70:	41 e0       	ldi	r20, 0x01	; 1
    5e72:	40 93 e1 28 	sts	0x28E1, r20	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    5e76:	10 92 dc 28 	sts	0x28DC, r1	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    5e7a:	4e e1       	ldi	r20, 0x1E	; 30
    5e7c:	50 e0       	ldi	r21, 0x00	; 0
    5e7e:	60 e0       	ldi	r22, 0x00	; 0
    5e80:	70 e0       	ldi	r23, 0x00	; 0
    5e82:	40 93 ca 28 	sts	0x28CA, r20	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
    5e86:	50 93 cb 28 	sts	0x28CB, r21	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
    5e8a:	60 93 cc 28 	sts	0x28CC, r22	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
    5e8e:	70 93 cd 28 	sts	0x28CD, r23	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
    5e92:	44 e5       	ldi	r20, 0x54	; 84
    5e94:	50 e0       	ldi	r21, 0x00	; 0
    5e96:	60 e0       	ldi	r22, 0x00	; 0
    5e98:	70 e0       	ldi	r23, 0x00	; 0
    5e9a:	40 93 c6 28 	sts	0x28C6, r20	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
    5e9e:	50 93 c7 28 	sts	0x28C7, r21	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    5ea2:	60 93 c8 28 	sts	0x28C8, r22	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    5ea6:	70 93 c9 28 	sts	0x28C9, r23	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    5eaa:	4c e1       	ldi	r20, 0x1C	; 28
    5eac:	50 e0       	ldi	r21, 0x00	; 0
    5eae:	60 e0       	ldi	r22, 0x00	; 0
    5eb0:	70 e0       	ldi	r23, 0x00	; 0
    5eb2:	40 93 c2 28 	sts	0x28C2, r20	; 0x8028c2 <MASTER_LOW_CONV>
    5eb6:	50 93 c3 28 	sts	0x28C3, r21	; 0x8028c3 <MASTER_LOW_CONV+0x1>
    5eba:	60 93 c4 28 	sts	0x28C4, r22	; 0x8028c4 <MASTER_LOW_CONV+0x2>
    5ebe:	70 93 c5 28 	sts	0x28C5, r23	; 0x8028c5 <MASTER_LOW_CONV+0x3>
    5ec2:	42 e5       	ldi	r20, 0x52	; 82
    5ec4:	50 e0       	ldi	r21, 0x00	; 0
    5ec6:	60 e0       	ldi	r22, 0x00	; 0
    5ec8:	70 e0       	ldi	r23, 0x00	; 0
    5eca:	40 93 be 28 	sts	0x28BE, r20	; 0x8028be <MASTER_HIGH_CONV>
    5ece:	50 93 bf 28 	sts	0x28BF, r21	; 0x8028bf <MASTER_HIGH_CONV+0x1>
    5ed2:	60 93 c0 28 	sts	0x28C0, r22	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
    5ed6:	70 93 c1 28 	sts	0x28C1, r23	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
    5eda:	10 92 63 28 	sts	0x2863, r1	; 0x802863 <TIME_SOCK_OR_TOTAL>
    5ede:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    5ee2:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <select_product_type>
    5ee6:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_LONG_VALUE>
    5eea:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_LONG_VALUE+0x1>
    5eee:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_LONG_VALUE+0x2>
    5ef2:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_LONG_VALUE+0x3>
    5ef6:	20 93 1e 29 	sts	0x291E, r18	; 0x80291e <SET_LONG_VALUE+0x4>
    5efa:	30 93 1f 29 	sts	0x291F, r19	; 0x80291f <SET_LONG_VALUE+0x5>
    5efe:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x26>
    5f02:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x27>
    5f06:	10 92 26 29 	sts	0x2926, r1	; 0x802926 <SET_LONG_VALUE+0xc>
    5f0a:	10 92 27 29 	sts	0x2927, r1	; 0x802927 <SET_LONG_VALUE+0xd>
    5f0e:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <SET_LONG_VALUE+0x6>
    5f12:	10 92 21 29 	sts	0x2921, r1	; 0x802921 <SET_LONG_VALUE+0x7>
    5f16:	10 92 22 29 	sts	0x2922, r1	; 0x802922 <SET_LONG_VALUE+0x8>
    5f1a:	10 92 23 29 	sts	0x2923, r1	; 0x802923 <SET_LONG_VALUE+0x9>
    5f1e:	10 92 24 29 	sts	0x2924, r1	; 0x802924 <SET_LONG_VALUE+0xa>
    5f22:	10 92 25 29 	sts	0x2925, r1	; 0x802925 <SET_LONG_VALUE+0xb>
    5f26:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <SET_HOUR>
    5f2a:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <SET_HOUR+0x1>
    5f2e:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <SET_MINUTE>
    5f32:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <SET_MINUTE+0x1>
    5f36:	85 e2       	ldi	r24, 0x25	; 37
    5f38:	90 e0       	ldi	r25, 0x00	; 0
    5f3a:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
    5f3e:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
    5f42:	10 92 11 29 	sts	0x2911, r1	; 0x802911 <SET_VALUE+0x4>
    5f46:	10 92 12 29 	sts	0x2912, r1	; 0x802912 <SET_VALUE+0x5>
    5f4a:	80 e2       	ldi	r24, 0x20	; 32
    5f4c:	90 e0       	ldi	r25, 0x00	; 0
    5f4e:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
    5f52:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
    5f56:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_VALUE+0x6>
    5f5a:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_VALUE+0x7>
    5f5e:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_VALUE+0x8>
    5f62:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x9>
    5f66:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Process_Interrupt_flag>
    5f6a:	60 e0       	ldi	r22, 0x00	; 0
    5f6c:	81 e0       	ldi	r24, 0x01	; 1
    5f6e:	90 e0       	ldi	r25, 0x00	; 0
    5f70:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5f74:	63 e6       	ldi	r22, 0x63	; 99
    5f76:	82 e0       	ldi	r24, 0x02	; 2
    5f78:	90 e0       	ldi	r25, 0x00	; 0
    5f7a:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5f7e:	69 e0       	ldi	r22, 0x09	; 9
    5f80:	79 e2       	ldi	r23, 0x29	; 41
    5f82:	83 e0       	ldi	r24, 0x03	; 3
    5f84:	90 e0       	ldi	r25, 0x00	; 0
    5f86:	0e 94 26 11 	call	0x224c	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    5f8a:	60 e0       	ldi	r22, 0x00	; 0
    5f8c:	85 e0       	ldi	r24, 0x05	; 5
    5f8e:	90 e0       	ldi	r25, 0x00	; 0
    5f90:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5f94:	60 e0       	ldi	r22, 0x00	; 0
    5f96:	8f e0       	ldi	r24, 0x0F	; 15
    5f98:	90 e0       	ldi	r25, 0x00	; 0
    5f9a:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5f9e:	0e 94 cd 10 	call	0x219a	; 0x219a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    5fa2:	60 e0       	ldi	r22, 0x00	; 0
    5fa4:	87 e0       	ldi	r24, 0x07	; 7
    5fa6:	90 e0       	ldi	r25, 0x00	; 0
    5fa8:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fac:	61 e0       	ldi	r22, 0x01	; 1
    5fae:	88 e0       	ldi	r24, 0x08	; 8
    5fb0:	90 e0       	ldi	r25, 0x00	; 0
    5fb2:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fb6:	60 e0       	ldi	r22, 0x00	; 0
    5fb8:	89 e0       	ldi	r24, 0x09	; 9
    5fba:	90 e0       	ldi	r25, 0x00	; 0
    5fbc:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fc0:	6a ec       	ldi	r22, 0xCA	; 202
    5fc2:	78 e2       	ldi	r23, 0x28	; 40
    5fc4:	80 e5       	ldi	r24, 0x50	; 80
    5fc6:	90 e0       	ldi	r25, 0x00	; 0
    5fc8:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5fcc:	66 ec       	ldi	r22, 0xC6	; 198
    5fce:	78 e2       	ldi	r23, 0x28	; 40
    5fd0:	8a e5       	ldi	r24, 0x5A	; 90
    5fd2:	90 e0       	ldi	r25, 0x00	; 0
    5fd4:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5fd8:	62 ec       	ldi	r22, 0xC2	; 194
    5fda:	78 e2       	ldi	r23, 0x28	; 40
    5fdc:	84 e6       	ldi	r24, 0x64	; 100
    5fde:	90 e0       	ldi	r25, 0x00	; 0
    5fe0:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5fe4:	6e eb       	ldi	r22, 0xBE	; 190
    5fe6:	78 e2       	ldi	r23, 0x28	; 40
    5fe8:	8e e6       	ldi	r24, 0x6E	; 110
    5fea:	90 e0       	ldi	r25, 0x00	; 0
    5fec:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    5ff0:	81 e4       	ldi	r24, 0x41	; 65
    5ff2:	90 e0       	ldi	r25, 0x00	; 0
    5ff4:	89 83       	std	Y+1, r24	; 0x01
    5ff6:	9a 83       	std	Y+2, r25	; 0x02
    5ff8:	60 91 63 28 	lds	r22, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    5ffc:	ce 01       	movw	r24, r28
    5ffe:	01 96       	adiw	r24, 0x01	; 1
    6000:	0e 94 bc 10 	call	0x2178	; 0x2178 <EERef::update(unsigned char)>
EEPROM_CLEAR():
    6004:	60 91 0f 29 	lds	r22, 0x290F	; 0x80290f <SET_VALUE+0x2>
    6008:	83 e7       	ldi	r24, 0x73	; 115
    600a:	90 e0       	ldi	r25, 0x00	; 0
    600c:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6010:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    6014:	85 e7       	ldi	r24, 0x75	; 117
    6016:	90 e0       	ldi	r25, 0x00	; 0
    6018:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    601c:	69 e3       	ldi	r22, 0x39	; 57
    601e:	79 e2       	ldi	r23, 0x29	; 41
    6020:	88 e7       	ldi	r24, 0x78	; 120
    6022:	90 e0       	ldi	r25, 0x00	; 0
    6024:	0e 94 26 11 	call	0x224c	; 0x224c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    6028:	60 e0       	ldi	r22, 0x00	; 0
    602a:	8d e7       	ldi	r24, 0x7D	; 125
    602c:	90 e0       	ldi	r25, 0x00	; 0
    602e:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6032:	60 e0       	ldi	r22, 0x00	; 0
    6034:	82 e8       	ldi	r24, 0x82	; 130
    6036:	90 e0       	ldi	r25, 0x00	; 0
    6038:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    603c:	60 e0       	ldi	r22, 0x00	; 0
    603e:	87 e8       	ldi	r24, 0x87	; 135
    6040:	90 e0       	ldi	r25, 0x00	; 0
    6042:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6046:	60 e0       	ldi	r22, 0x00	; 0
    6048:	86 e9       	ldi	r24, 0x96	; 150
    604a:	90 e0       	ldi	r25, 0x00	; 0
    604c:	0e 94 bb 10 	call	0x2176	; 0x2176 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6050:	81 e0       	ldi	r24, 0x01	; 1
    6052:	90 e0       	ldi	r25, 0x00	; 0
    6054:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6058:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    605c:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    6060:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
    6064:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    6068:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    606c:	11 ce       	rjmp	.-990    	; 0x5c90 <main+0x1342>
    606e:	e2 31       	cpi	r30, 0x12	; 18
    6070:	f1 05       	cpc	r31, r1
    6072:	08 f0       	brcs	.+2      	; 0x6076 <main+0x1728>
    6074:	02 c8       	rjmp	.-4092   	; 0x507a <main+0x72c>
    6076:	e1 5c       	subi	r30, 0xC1	; 193
    6078:	ff 4c       	sbci	r31, 0xCF	; 207
    607a:	0c 94 c5 38 	jmp	0x718a	; 0x718a <__tablejump2__>
    607e:	51 30       	cpi	r21, 0x01	; 1
    6080:	8e 30       	cpi	r24, 0x0E	; 14
    6082:	c6 30       	cpi	r28, 0x06	; 6
    6084:	17 31       	cpi	r17, 0x17	; 23
    6086:	62 31       	cpi	r22, 0x12	; 18
    6088:	8f 31       	cpi	r24, 0x1F	; 31
    608a:	be 31       	cpi	r27, 0x1E	; 30
    608c:	f2 31       	cpi	r31, 0x12	; 18
    608e:	42 32       	cpi	r20, 0x22	; 34
    6090:	a6 32       	cpi	r26, 0x26	; 38
    6092:	d9 32       	cpi	r29, 0x29	; 41
    6094:	06 33       	cpi	r16, 0x36	; 54
    6096:	ab 33       	cpi	r26, 0x3B	; 59
    6098:	64 34       	cpi	r22, 0x44	; 68
    609a:	15 35       	cpi	r17, 0x55	; 85
    609c:	d7 35       	cpi	r29, 0x57	; 87
    609e:	08 36       	cpi	r16, 0x68	; 104
    60a0:	28 36       	cpi	r18, 0x68	; 104
    60a2:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    60a6:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    60aa:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    60ae:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    60b2:	8c e0       	ldi	r24, 0x0C	; 12
    60b4:	90 e0       	ldi	r25, 0x00	; 0
    60b6:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    60ba:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    60be:	80 e1       	ldi	r24, 0x10	; 16
    60c0:	90 e0       	ldi	r25, 0x00	; 0
    60c2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    60c6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    60ca:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    60ce:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    60d2:	81 e1       	ldi	r24, 0x11	; 17
    60d4:	90 e0       	ldi	r25, 0x00	; 0
    60d6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    60da:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    60de:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    60e2:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    60e6:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    60ea:	81 11       	cpse	r24, r1
    60ec:	10 c0       	rjmp	.+32     	; 0x610e <main+0x17c0>
DISPLAY_DIGIT1():
    60ee:	85 e1       	ldi	r24, 0x15	; 21
    60f0:	90 e0       	ldi	r25, 0x00	; 0
    60f2:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    60f6:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    60fa:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    60fe:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    6102:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    6106:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
    610a:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
    610e:	84 e1       	ldi	r24, 0x14	; 20
    6110:	90 e0       	ldi	r25, 0x00	; 0
    6112:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    6116:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    611a:	2a c0       	rjmp	.+84     	; 0x6170 <main+0x1822>
SET_LONG_PRESS_FUNCTION():
    611c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    6120:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6124:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    6128:	8c e1       	ldi	r24, 0x1C	; 28
    612a:	90 e0       	ldi	r25, 0x00	; 0
    612c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6130:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6134:	84 e1       	ldi	r24, 0x14	; 20
    6136:	90 e0       	ldi	r25, 0x00	; 0
    6138:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    613c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6140:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    6144:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    6148:	80 e1       	ldi	r24, 0x10	; 16
    614a:	90 e0       	ldi	r25, 0x00	; 0
    614c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6150:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6154:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    6158:	81 11       	cpse	r24, r1
    615a:	0f c0       	rjmp	.+30     	; 0x617a <main+0x182c>
DISPLAY_DIGIT1():
    615c:	8d e1       	ldi	r24, 0x1D	; 29
    615e:	90 e0       	ldi	r25, 0x00	; 0
    6160:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    6164:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    6168:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1+0x2>
    616c:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x3>
    6170:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    6174:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    6178:	c4 cf       	rjmp	.-120    	; 0x6102 <main+0x17b4>
    617a:	8d e1       	ldi	r24, 0x1D	; 29
    617c:	90 e0       	ldi	r25, 0x00	; 0
    617e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    6182:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    6186:	85 e1       	ldi	r24, 0x15	; 21
    6188:	90 e0       	ldi	r25, 0x00	; 0
    618a:	c3 cf       	rjmp	.-122    	; 0x6112 <main+0x17c4>
SET_LONG_PRESS_FUNCTION():
    618c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6190:	8c e0       	ldi	r24, 0x0C	; 12
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6198:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    619c:	8d e0       	ldi	r24, 0x0D	; 13
    619e:	90 e0       	ldi	r25, 0x00	; 0
    61a0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    61a4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    61a8:	75 e1       	ldi	r23, 0x15	; 21
    61aa:	c7 2e       	mov	r12, r23
    61ac:	d1 2c       	mov	r13, r1
    61ae:	c0 92 eb 28 	sts	0x28EB, r12	; 0x8028eb <digits2+0x4>
    61b2:	d0 92 ec 28 	sts	0x28EC, r13	; 0x8028ec <digits2+0x5>
    61b6:	8f e0       	ldi	r24, 0x0F	; 15
    61b8:	90 e0       	ldi	r25, 0x00	; 0
    61ba:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    61be:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    61c2:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    61c6:	81 11       	cpse	r24, r1
    61c8:	1a c0       	rjmp	.+52     	; 0x61fe <main+0x18b0>
    61ca:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
    61ce:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    61d2:	2a e0       	ldi	r18, 0x0A	; 10
    61d4:	28 9f       	mul	r18, r24
    61d6:	b0 01       	movw	r22, r0
    61d8:	29 9f       	mul	r18, r25
    61da:	70 0d       	add	r23, r0
    61dc:	11 24       	eor	r1, r1
    61de:	07 2e       	mov	r0, r23
    61e0:	00 0c       	add	r0, r0
    61e2:	88 0b       	sbc	r24, r24
    61e4:	99 0b       	sbc	r25, r25
    61e6:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    61ea:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    61ee:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    61f2:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    61f6:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    61fa:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
    61fe:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6202:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    6206:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    620a:	2a e0       	ldi	r18, 0x0A	; 10
    620c:	28 9f       	mul	r18, r24
    620e:	b0 01       	movw	r22, r0
    6210:	29 9f       	mul	r18, r25
    6212:	70 0d       	add	r23, r0
    6214:	11 24       	eor	r1, r1
    6216:	07 2e       	mov	r0, r23
    6218:	00 0c       	add	r0, r0
    621a:	88 0b       	sbc	r24, r24
    621c:	99 0b       	sbc	r25, r25
    621e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6222:	c0 92 f5 28 	sts	0x28F5, r12	; 0x8028f5 <digits1+0x6>
    6226:	d0 92 f6 28 	sts	0x28F6, r13	; 0x8028f6 <digits1+0x7>
    622a:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
    622e:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6232:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6236:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    623a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    623e:	80 e1       	ldi	r24, 0x10	; 16
    6240:	90 e0       	ldi	r25, 0x00	; 0
    6242:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6246:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    624a:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    624e:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    6252:	22 e1       	ldi	r18, 0x12	; 18
    6254:	30 e0       	ldi	r19, 0x00	; 0
    6256:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    625a:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    625e:	2f e0       	ldi	r18, 0x0F	; 15
    6260:	30 e0       	ldi	r19, 0x00	; 0
    6262:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    6266:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    626a:	20 91 63 28 	lds	r18, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    626e:	21 11       	cpse	r18, r1
    6270:	11 c0       	rjmp	.+34     	; 0x6294 <main+0x1946>
DISPLAY_DIGIT1():
    6272:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    6276:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    627a:	27 e1       	ldi	r18, 0x17	; 23
    627c:	30 e0       	ldi	r19, 0x00	; 0
    627e:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    6282:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6286:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    628a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    628e:	8f e1       	ldi	r24, 0x1F	; 31
    6290:	90 e0       	ldi	r25, 0x00	; 0
    6292:	92 cd       	rjmp	.-1244   	; 0x5db8 <main+0x146a>
    6294:	8c e0       	ldi	r24, 0x0C	; 12
    6296:	90 e0       	ldi	r25, 0x00	; 0
    6298:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    629c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    62a0:	87 e1       	ldi	r24, 0x17	; 23
    62a2:	90 e0       	ldi	r25, 0x00	; 0
    62a4:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    62a8:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    62ac:	8d e0       	ldi	r24, 0x0D	; 13
    62ae:	90 e0       	ldi	r25, 0x00	; 0
    62b0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    62b4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    62b8:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    62bc:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    62c0:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
    62c4:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    62c8:	8d e0       	ldi	r24, 0x0D	; 13
    62ca:	90 e0       	ldi	r25, 0x00	; 0
    62cc:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    62d0:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    62d4:	82 e2       	ldi	r24, 0x22	; 34
    62d6:	90 e0       	ldi	r25, 0x00	; 0
    62d8:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    62dc:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    62e0:	80 e1       	ldi	r24, 0x10	; 16
    62e2:	90 e0       	ldi	r25, 0x00	; 0
    62e4:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    62e8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    62ec:	87 e1       	ldi	r24, 0x17	; 23
    62ee:	90 e0       	ldi	r25, 0x00	; 0
    62f0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    62f4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    62f8:	2b e0       	ldi	r18, 0x0B	; 11
    62fa:	30 e0       	ldi	r19, 0x00	; 0
    62fc:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6300:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6304:	21 e1       	ldi	r18, 0x11	; 17
    6306:	30 e0       	ldi	r19, 0x00	; 0
    6308:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    630c:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6310:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    6314:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    6318:	8c e0       	ldi	r24, 0x0C	; 12
    631a:	90 e0       	ldi	r25, 0x00	; 0
    631c:	4d cd       	rjmp	.-1382   	; 0x5db8 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    631e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6322:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6326:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    632a:	8b e0       	ldi	r24, 0x0B	; 11
    632c:	90 e0       	ldi	r25, 0x00	; 0
    632e:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6332:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6336:	21 e1       	ldi	r18, 0x11	; 17
    6338:	30 e0       	ldi	r19, 0x00	; 0
    633a:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    633e:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    6342:	20 e2       	ldi	r18, 0x20	; 32
    6344:	30 e0       	ldi	r19, 0x00	; 0
    6346:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    634a:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    634e:	20 e1       	ldi	r18, 0x10	; 16
    6350:	30 e0       	ldi	r19, 0x00	; 0
    6352:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    6356:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    635a:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    635e:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6362:	23 e2       	ldi	r18, 0x23	; 35
    6364:	30 e0       	ldi	r19, 0x00	; 0
    6366:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    636a:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    636e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    6372:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    6376:	8f e0       	ldi	r24, 0x0F	; 15
    6378:	90 e0       	ldi	r25, 0x00	; 0
    637a:	1e cd       	rjmp	.-1476   	; 0x5db8 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    637c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6380:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6384:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6388:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    638c:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    6390:	2d e0       	ldi	r18, 0x0D	; 13
    6392:	30 e0       	ldi	r19, 0x00	; 0
    6394:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    6398:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    639c:	8a e1       	ldi	r24, 0x1A	; 26
    639e:	90 e0       	ldi	r25, 0x00	; 0
    63a0:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    63a4:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    63a8:	4e e0       	ldi	r20, 0x0E	; 14
    63aa:	50 e0       	ldi	r21, 0x00	; 0
    63ac:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    63b0:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    63b4:	40 91 d2 28 	lds	r20, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
    63b8:	50 91 d3 28 	lds	r21, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    63bc:	e0 92 ef 28 	sts	0x28EF, r14	; 0x8028ef <digits1>
    63c0:	f0 92 f0 28 	sts	0x28F0, r15	; 0x8028f0 <digits1+0x1>
    63c4:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    63c8:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    63cc:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    63d0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    63d4:	82 e0       	ldi	r24, 0x02	; 2
    63d6:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    63d8:	45 2b       	or	r20, r21
    63da:	09 f0       	breq	.+2      	; 0x63de <main+0x1a90>
    63dc:	ed cc       	rjmp	.-1574   	; 0x5db8 <main+0x146a>
DISPLAY_DIGIT1():
    63de:	81 e0       	ldi	r24, 0x01	; 1
    63e0:	90 e0       	ldi	r25, 0x00	; 0
    63e2:	ea cc       	rjmp	.-1580   	; 0x5db8 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    63e4:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    63e8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    63ec:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    63f0:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    63f4:	8d e0       	ldi	r24, 0x0D	; 13
    63f6:	90 e0       	ldi	r25, 0x00	; 0
    63f8:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    63fc:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6400:	8a e1       	ldi	r24, 0x1A	; 26
    6402:	90 e0       	ldi	r25, 0x00	; 0
    6404:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    6408:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    640c:	81 e0       	ldi	r24, 0x01	; 1
    640e:	90 e0       	ldi	r25, 0x00	; 0
    6410:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6414:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6418:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    641c:	81 11       	cpse	r24, r1
    641e:	81 c0       	rjmp	.+258    	; 0x6522 <main+0x1bd4>
    6420:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    6424:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    6428:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    642c:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    6430:	2d ec       	ldi	r18, 0xCD	; 205
    6432:	3c ec       	ldi	r19, 0xCC	; 204
    6434:	47 ec       	ldi	r20, 0xC7	; 199
    6436:	52 e4       	ldi	r21, 0x42	; 66
    6438:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    643c:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6440:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6444:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6448:	e8 d5       	rcall	.+3024   	; 0x701a <__gesf2>
    644a:	18 16       	cp	r1, r24
    644c:	6c f4       	brge	.+26     	; 0x6468 <main+0x1b1a>
    644e:	20 e0       	ldi	r18, 0x00	; 0
    6450:	30 e0       	ldi	r19, 0x00	; 0
    6452:	40 e2       	ldi	r20, 0x20	; 32
    6454:	51 e4       	ldi	r21, 0x41	; 65
    6456:	c5 01       	movw	r24, r10
    6458:	b4 01       	movw	r22, r8
    645a:	e3 d5       	rcall	.+3014   	; 0x7022 <__mulsf3>
    645c:	fb d4       	rcall	.+2550   	; 0x6e54 <__fixsfsi>
    645e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6462:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6466:	28 cf       	rjmp	.-432    	; 0x62b8 <main+0x196a>
    6468:	20 e0       	ldi	r18, 0x00	; 0
    646a:	30 e0       	ldi	r19, 0x00	; 0
    646c:	48 ec       	ldi	r20, 0xC8	; 200
    646e:	52 e4       	ldi	r21, 0x42	; 66
    6470:	c5 01       	movw	r24, r10
    6472:	b4 01       	movw	r22, r8
    6474:	d6 d5       	rcall	.+2988   	; 0x7022 <__mulsf3>
    6476:	ee d4       	rcall	.+2524   	; 0x6e54 <__fixsfsi>
    6478:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    647c:	81 e0       	ldi	r24, 0x01	; 1
    647e:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    6482:	1a cf       	rjmp	.-460    	; 0x62b8 <main+0x196a>
    6484:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6488:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    648c:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    6490:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    6494:	8d e0       	ldi	r24, 0x0D	; 13
    6496:	90 e0       	ldi	r25, 0x00	; 0
    6498:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    649c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    64a0:	8a e1       	ldi	r24, 0x1A	; 26
    64a2:	90 e0       	ldi	r25, 0x00	; 0
    64a4:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    64a8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    64ac:	81 e0       	ldi	r24, 0x01	; 1
    64ae:	90 e0       	ldi	r25, 0x00	; 0
    64b0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    64b4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    64b8:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    64bc:	81 11       	cpse	r24, r1
    64be:	31 c0       	rjmp	.+98     	; 0x6522 <main+0x1bd4>
    64c0:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    64c4:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    64c8:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    64cc:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    64d0:	6b 83       	std	Y+3, r22	; 0x03
    64d2:	7c 83       	std	Y+4, r23	; 0x04
    64d4:	8d 83       	std	Y+5, r24	; 0x05
    64d6:	9e 83       	std	Y+6, r25	; 0x06
    64d8:	20 e0       	ldi	r18, 0x00	; 0
    64da:	30 e0       	ldi	r19, 0x00	; 0
    64dc:	48 ec       	ldi	r20, 0xC8	; 200
    64de:	52 e4       	ldi	r21, 0x42	; 66
    64e0:	a0 d5       	rcall	.+2880   	; 0x7022 <__mulsf3>
    64e2:	b8 d4       	rcall	.+2416   	; 0x6e54 <__fixsfsi>
    64e4:	4b 01       	movw	r8, r22
    64e6:	5c 01       	movw	r10, r24
    64e8:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    64ec:	2d ec       	ldi	r18, 0xCD	; 205
    64ee:	3c ec       	ldi	r19, 0xCC	; 204
    64f0:	47 ec       	ldi	r20, 0xC7	; 199
    64f2:	52 e4       	ldi	r21, 0x42	; 66
    64f4:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    64f8:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    64fc:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6500:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6504:	8a d5       	rcall	.+2836   	; 0x701a <__gesf2>
    6506:	18 16       	cp	r1, r24
    6508:	4c f4       	brge	.+18     	; 0x651c <main+0x1bce>
    650a:	20 e0       	ldi	r18, 0x00	; 0
    650c:	30 e0       	ldi	r19, 0x00	; 0
    650e:	40 e2       	ldi	r20, 0x20	; 32
    6510:	51 e4       	ldi	r21, 0x41	; 65
    6512:	6b 81       	ldd	r22, Y+3	; 0x03
    6514:	7c 81       	ldd	r23, Y+4	; 0x04
    6516:	8d 81       	ldd	r24, Y+5	; 0x05
    6518:	9e 81       	ldd	r25, Y+6	; 0x06
    651a:	9f cf       	rjmp	.-194    	; 0x645a <main+0x1b0c>
    651c:	c5 01       	movw	r24, r10
    651e:	b4 01       	movw	r22, r8
    6520:	ab cf       	rjmp	.-170    	; 0x6478 <main+0x1b2a>
    6522:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6526:	20 e0       	ldi	r18, 0x00	; 0
    6528:	30 e0       	ldi	r19, 0x00	; 0
    652a:	40 e2       	ldi	r20, 0x20	; 32
    652c:	51 e4       	ldi	r21, 0x41	; 65
    652e:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
    6532:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    6536:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
    653a:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
    653e:	71 d5       	rcall	.+2786   	; 0x7022 <__mulsf3>
    6540:	89 d4       	rcall	.+2322   	; 0x6e54 <__fixsfsi>
    6542:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6546:	85 e1       	ldi	r24, 0x15	; 21
    6548:	90 e0       	ldi	r25, 0x00	; 0
    654a:	36 cc       	rjmp	.-1940   	; 0x5db8 <main+0x146a>
    654c:	81 e0       	ldi	r24, 0x01	; 1
    654e:	80 93 ba 28 	sts	0x28BA, r24	; 0x8028ba <DOT1_0>
    6552:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6556:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    655a:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    655e:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    6562:	8d e0       	ldi	r24, 0x0D	; 13
    6564:	90 e0       	ldi	r25, 0x00	; 0
    6566:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    656a:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    656e:	6a e1       	ldi	r22, 0x1A	; 26
    6570:	c6 2e       	mov	r12, r22
    6572:	d1 2c       	mov	r13, r1
    6574:	c0 92 eb 28 	sts	0x28EB, r12	; 0x8028eb <digits2+0x4>
    6578:	d0 92 ec 28 	sts	0x28EC, r13	; 0x8028ec <digits2+0x5>
    657c:	82 e0       	ldi	r24, 0x02	; 2
    657e:	90 e0       	ldi	r25, 0x00	; 0
    6580:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6584:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6588:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    658c:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6590:	2a e0       	ldi	r18, 0x0A	; 10
    6592:	28 9f       	mul	r18, r24
    6594:	b0 01       	movw	r22, r0
    6596:	29 9f       	mul	r18, r25
    6598:	70 0d       	add	r23, r0
    659a:	11 24       	eor	r1, r1
    659c:	07 2e       	mov	r0, r23
    659e:	00 0c       	add	r0, r0
    65a0:	88 0b       	sbc	r24, r24
    65a2:	99 0b       	sbc	r25, r25
    65a4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    65a8:	c0 92 ef 28 	sts	0x28EF, r12	; 0x8028ef <digits1>
    65ac:	d0 92 f0 28 	sts	0x28F0, r13	; 0x8028f0 <digits1+0x1>
    65b0:	83 ce       	rjmp	.-762    	; 0x62b8 <main+0x196a>
    65b2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    65b6:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    65ba:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    65be:	8d e0       	ldi	r24, 0x0D	; 13
    65c0:	90 e0       	ldi	r25, 0x00	; 0
    65c2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    65c6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    65ca:	8a e1       	ldi	r24, 0x1A	; 26
    65cc:	90 e0       	ldi	r25, 0x00	; 0
    65ce:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    65d2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    65d6:	82 e0       	ldi	r24, 0x02	; 2
    65d8:	90 e0       	ldi	r25, 0x00	; 0
    65da:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    65de:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    65e2:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    65e6:	90 91 44 28 	lds	r25, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    65ea:	2a e0       	ldi	r18, 0x0A	; 10
    65ec:	28 9f       	mul	r18, r24
    65ee:	b0 01       	movw	r22, r0
    65f0:	29 9f       	mul	r18, r25
    65f2:	70 0d       	add	r23, r0
    65f4:	11 24       	eor	r1, r1
    65f6:	07 2e       	mov	r0, r23
    65f8:	00 0c       	add	r0, r0
    65fa:	88 0b       	sbc	r24, r24
    65fc:	99 0b       	sbc	r25, r25
    65fe:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6602:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    6606:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    660a:	56 ce       	rjmp	.-852    	; 0x62b8 <main+0x196a>
    660c:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6610:	81 e0       	ldi	r24, 0x01	; 1
    6612:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    6616:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    661a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
PID_Start():
    661e:	8f ea       	ldi	r24, 0xAF	; 175
    6620:	9a e2       	ldi	r25, 0x2A	; 42
    6622:	0e 94 ce 0a 	call	0x159c	; 0x159c <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    6626:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    662a:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    662e:	07 2e       	mov	r0, r23
    6630:	00 0c       	add	r0, r0
    6632:	88 0b       	sbc	r24, r24
    6634:	99 0b       	sbc	r25, r25
    6636:	41 d4       	rcall	.+2178   	; 0x6eba <__floatsisf>
    6638:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    663c:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6640:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    6644:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
digitalWrite():
    6648:	61 e0       	ldi	r22, 0x01	; 1
    664a:	81 e2       	ldi	r24, 0x21	; 33
    664c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6650:	3f e0       	ldi	r19, 0x0F	; 15
    6652:	83 2e       	mov	r8, r19
    6654:	91 2c       	mov	r9, r1
    6656:	4d e0       	ldi	r20, 0x0D	; 13
    6658:	a4 2e       	mov	r10, r20
    665a:	b1 2c       	mov	r11, r1
    665c:	50 e1       	ldi	r21, 0x10	; 16
    665e:	c5 2e       	mov	r12, r21
    6660:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    6662:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
    6666:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    666a:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    666e:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    6672:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    6676:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    667a:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    667e:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    6682:	7c d3       	rcall	.+1784   	; 0x6d7c <__cmpsf2>
    6684:	87 ff       	sbrs	r24, 7
    6686:	bb c1       	rjmp	.+886    	; 0x69fe <main+0x20b0>
    6688:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    668c:	88 23       	and	r24, r24
    668e:	09 f4       	brne	.+2      	; 0x6692 <main+0x1d44>
    6690:	b6 c1       	rjmp	.+876    	; 0x69fe <main+0x20b0>
    6692:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6696:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    669a:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    669e:	07 2e       	mov	r0, r23
    66a0:	00 0c       	add	r0, r0
    66a2:	88 0b       	sbc	r24, r24
    66a4:	99 0b       	sbc	r25, r25
    66a6:	09 d4       	rcall	.+2066   	; 0x6eba <__floatsisf>
    66a8:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    66ac:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    66b0:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    66b4:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    66b8:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    66bc:	60 e0       	ldi	r22, 0x00	; 0
    66be:	8b e1       	ldi	r24, 0x1B	; 27
    66c0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISP_UPDATE():
    66c4:	8d eb       	ldi	r24, 0xBD	; 189
    66c6:	9b e2       	ldi	r25, 0x2B	; 43
    66c8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    66cc:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    66d0:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    66d4:	89 31       	cpi	r24, 0x19	; 25
    66d6:	91 05       	cpc	r25, r1
    66d8:	3c f5       	brge	.+78     	; 0x6728 <main+0x1dda>
DISPLAY_DIGIT1():
    66da:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    66de:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    66e2:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    66e6:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    66ea:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    66ee:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    66f2:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    66f6:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    66fa:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    66fe:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6702:	07 2e       	mov	r0, r23
    6704:	00 0c       	add	r0, r0
    6706:	88 0b       	sbc	r24, r24
    6708:	99 0b       	sbc	r25, r25
    670a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    670e:	8a e1       	ldi	r24, 0x1A	; 26
    6710:	90 e0       	ldi	r25, 0x00	; 0
    6712:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6716:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    671a:	a7 e1       	ldi	r26, 0x17	; 23
    671c:	b0 e0       	ldi	r27, 0x00	; 0
    671e:	a0 93 e9 28 	sts	0x28E9, r26	; 0x8028e9 <digits2+0x2>
    6722:	b0 93 ea 28 	sts	0x28EA, r27	; 0x8028ea <digits2+0x3>
    6726:	9d cf       	rjmp	.-198    	; 0x6662 <main+0x1d14>
DISPLAY_DIGIT1():
    6728:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    672c:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    6730:	80 92 f1 28 	sts	0x28F1, r8	; 0x8028f1 <digits1+0x2>
    6734:	90 92 f2 28 	sts	0x28F2, r9	; 0x8028f2 <digits1+0x3>
    6738:	a0 92 f3 28 	sts	0x28F3, r10	; 0x8028f3 <digits1+0x4>
    673c:	b0 92 f4 28 	sts	0x28F4, r11	; 0x8028f4 <digits1+0x5>
    6740:	c0 92 f5 28 	sts	0x28F5, r12	; 0x8028f5 <digits1+0x6>
    6744:	d0 92 f6 28 	sts	0x28F6, r13	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6748:	c3 97       	sbiw	r24, 0x33	; 51
    674a:	bc f2       	brlt	.-82     	; 0x66fa <main+0x1dac>
    674c:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    6750:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    6754:	d2 cf       	rjmp	.-92     	; 0x66fa <main+0x1dac>
digitalWrite():
    6756:	61 e0       	ldi	r22, 0x01	; 1
    6758:	81 e2       	ldi	r24, 0x21	; 33
    675a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    675e:	d0 90 62 28 	lds	r13, 0x2862	; 0x802862 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    6762:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    6766:	81 11       	cpse	r24, r1
    6768:	9d c0       	rjmp	.+314    	; 0x68a4 <main+0x1f56>
    676a:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    676e:	88 23       	and	r24, r24
    6770:	09 f4       	brne	.+2      	; 0x6774 <main+0x1e26>
    6772:	98 c0       	rjmp	.+304    	; 0x68a4 <main+0x1f56>
    6774:	dd 20       	and	r13, r13
    6776:	09 f4       	brne	.+2      	; 0x677a <main+0x1e2c>
    6778:	95 c0       	rjmp	.+298    	; 0x68a4 <main+0x1f56>
    677a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    677e:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    6782:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    6786:	07 2e       	mov	r0, r23
    6788:	00 0c       	add	r0, r0
    678a:	88 0b       	sbc	r24, r24
    678c:	99 0b       	sbc	r25, r25
    678e:	95 d3       	rcall	.+1834   	; 0x6eba <__floatsisf>
    6790:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6794:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6798:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    679c:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
DISP_UPDATE():
    67a0:	8d eb       	ldi	r24, 0xBD	; 189
    67a2:	9b e2       	ldi	r25, 0x2B	; 43
    67a4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    67a8:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    67ac:	60 e0       	ldi	r22, 0x00	; 0
    67ae:	8a e1       	ldi	r24, 0x1A	; 26
    67b0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    67b4:	61 e0       	ldi	r22, 0x01	; 1
    67b6:	8b e1       	ldi	r24, 0x1B	; 27
    67b8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    67bc:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    67c0:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    67c4:	07 2e       	mov	r0, r23
    67c6:	00 0c       	add	r0, r0
    67c8:	88 0b       	sbc	r24, r24
    67ca:	99 0b       	sbc	r25, r25
    67cc:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    67d0:	ea e1       	ldi	r30, 0x1A	; 26
    67d2:	f0 e0       	ldi	r31, 0x00	; 0
    67d4:	e0 93 e7 28 	sts	0x28E7, r30	; 0x8028e7 <digits2>
    67d8:	f0 93 e8 28 	sts	0x28E8, r31	; 0x8028e8 <digits2+0x1>
    67dc:	47 e1       	ldi	r20, 0x17	; 23
    67de:	50 e0       	ldi	r21, 0x00	; 0
    67e0:	40 93 e9 28 	sts	0x28E9, r20	; 0x8028e9 <digits2+0x2>
    67e4:	50 93 ea 28 	sts	0x28EA, r21	; 0x8028ea <digits2+0x3>
    67e8:	81 e0       	ldi	r24, 0x01	; 1
    67ea:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    67ee:	c0 90 9f 28 	lds	r12, 0x289F	; 0x80289f <i>
    67f2:	d0 90 a0 28 	lds	r13, 0x28A0	; 0x8028a0 <i+0x1>
    67f6:	59 e1       	ldi	r21, 0x19	; 25
    67f8:	c5 16       	cp	r12, r21
    67fa:	d1 04       	cpc	r13, r1
    67fc:	bc f4       	brge	.+46     	; 0x682c <main+0x1ede>
DISPLAY_DIGIT1():
    67fe:	20 92 ef 28 	sts	0x28EF, r2	; 0x8028ef <digits1>
    6802:	30 92 f0 28 	sts	0x28F0, r3	; 0x8028f0 <digits1+0x1>
    6806:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1+0x2>
    680a:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x3>
    680e:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x4>
    6812:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x5>
    6816:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x6>
    681a:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x7>
digitalWrite():
    681e:	60 e0       	ldi	r22, 0x00	; 0
    6820:	85 e1       	ldi	r24, 0x15	; 21
    6822:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6826:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    682a:	99 cf       	rjmp	.-206    	; 0x675e <main+0x1e10>
digitalWrite():
    682c:	61 e0       	ldi	r22, 0x01	; 1
    682e:	85 e1       	ldi	r24, 0x15	; 21
    6830:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6834:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    6838:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    683c:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    6840:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6844:	2d ec       	ldi	r18, 0xCD	; 205
    6846:	3c ec       	ldi	r19, 0xCC	; 204
    6848:	47 ec       	ldi	r20, 0xC7	; 199
    684a:	52 e4       	ldi	r21, 0x42	; 66
    684c:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6850:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6854:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6858:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    685c:	de d3       	rcall	.+1980   	; 0x701a <__gesf2>
    685e:	20 e0       	ldi	r18, 0x00	; 0
    6860:	30 e0       	ldi	r19, 0x00	; 0
    6862:	40 e2       	ldi	r20, 0x20	; 32
    6864:	51 e4       	ldi	r21, 0x41	; 65
    6866:	18 16       	cp	r1, r24
    6868:	24 f0       	brlt	.+8      	; 0x6872 <main+0x1f24>
    686a:	20 e0       	ldi	r18, 0x00	; 0
    686c:	30 e0       	ldi	r19, 0x00	; 0
    686e:	48 ec       	ldi	r20, 0xC8	; 200
    6870:	52 e4       	ldi	r21, 0x42	; 66
    6872:	c5 01       	movw	r24, r10
    6874:	b4 01       	movw	r22, r8
    6876:	d5 d3       	rcall	.+1962   	; 0x7022 <__mulsf3>
    6878:	ed d2       	rcall	.+1498   	; 0x6e54 <__fixsfsi>
    687a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    687e:	81 e0       	ldi	r24, 0x01	; 1
    6880:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    6884:	6a e0       	ldi	r22, 0x0A	; 10
    6886:	70 e0       	ldi	r23, 0x00	; 0
    6888:	60 93 f5 28 	sts	0x28F5, r22	; 0x8028f5 <digits1+0x6>
    688c:	70 93 f6 28 	sts	0x28F6, r23	; 0x8028f6 <digits1+0x7>
    6890:	73 e3       	ldi	r23, 0x33	; 51
    6892:	c7 16       	cp	r12, r23
    6894:	d1 04       	cpc	r13, r1
    6896:	0c f4       	brge	.+2      	; 0x689a <main+0x1f4c>
    6898:	62 cf       	rjmp	.-316    	; 0x675e <main+0x1e10>
    689a:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    689e:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    68a2:	5d cf       	rjmp	.-326    	; 0x675e <main+0x1e10>
digitalWrite():
    68a4:	60 e0       	ldi	r22, 0x00	; 0
    68a6:	81 e2       	ldi	r24, 0x21	; 33
    68a8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    68ac:	8b e0       	ldi	r24, 0x0B	; 11
    68ae:	90 e0       	ldi	r25, 0x00	; 0
    68b0:	d1 10       	cpse	r13, r1
    68b2:	b5 c0       	rjmp	.+362    	; 0x6a1e <main+0x20d0>
    68b4:	8d e0       	ldi	r24, 0x0D	; 13
    68b6:	90 e0       	ldi	r25, 0x00	; 0
    68b8:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    68bc:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    68c0:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    68c4:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
    68c8:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    68cc:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    68d0:	81 e0       	ldi	r24, 0x01	; 1
    68d2:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    68d6:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    68da:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    68de:	07 2e       	mov	r0, r23
    68e0:	00 0c       	add	r0, r0
    68e2:	88 0b       	sbc	r24, r24
    68e4:	99 0b       	sbc	r25, r25
    68e6:	e9 d2       	rcall	.+1490   	; 0x6eba <__floatsisf>
    68e8:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    68ec:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    68f0:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    68f4:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
digitalWrite():
    68f8:	61 e0       	ldi	r22, 0x01	; 1
    68fa:	81 e2       	ldi	r24, 0x21	; 33
    68fc:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6900:	8f e0       	ldi	r24, 0x0F	; 15
    6902:	c8 2e       	mov	r12, r24
    6904:	d1 2c       	mov	r13, r1
    6906:	9d e0       	ldi	r25, 0x0D	; 13
    6908:	a9 2e       	mov	r10, r25
    690a:	b1 2c       	mov	r11, r1
    690c:	20 e1       	ldi	r18, 0x10	; 16
    690e:	82 2e       	mov	r8, r18
    6910:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    6912:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
    6916:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    691a:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    691e:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    6922:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    6926:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    692a:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    692e:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    6932:	24 d2       	rcall	.+1096   	; 0x6d7c <__cmpsf2>
    6934:	87 ff       	sbrs	r24, 7
    6936:	63 c0       	rjmp	.+198    	; 0x69fe <main+0x20b0>
    6938:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    693c:	88 23       	and	r24, r24
    693e:	09 f4       	brne	.+2      	; 0x6942 <main+0x1ff4>
    6940:	5e c0       	rjmp	.+188    	; 0x69fe <main+0x20b0>
    6942:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6946:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    694a:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    694e:	07 2e       	mov	r0, r23
    6950:	00 0c       	add	r0, r0
    6952:	88 0b       	sbc	r24, r24
    6954:	99 0b       	sbc	r25, r25
    6956:	b1 d2       	rcall	.+1378   	; 0x6eba <__floatsisf>
    6958:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    695c:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6960:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    6964:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    6968:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    696c:	8d eb       	ldi	r24, 0xBD	; 189
    696e:	9b e2       	ldi	r25, 0x2B	; 43
    6970:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
digitalWrite():
    6974:	60 e0       	ldi	r22, 0x00	; 0
    6976:	8b e1       	ldi	r24, 0x1B	; 27
    6978:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    697c:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6980:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6984:	89 31       	cpi	r24, 0x19	; 25
    6986:	91 05       	cpc	r25, r1
    6988:	1c f5       	brge	.+70     	; 0x69d0 <main+0x2082>
DISPLAY_DIGIT1():
    698a:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    698e:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    6992:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    6996:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    699a:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    699e:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    69a2:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    69a6:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    69aa:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    69ae:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    69b2:	07 2e       	mov	r0, r23
    69b4:	00 0c       	add	r0, r0
    69b6:	88 0b       	sbc	r24, r24
    69b8:	99 0b       	sbc	r25, r25
    69ba:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    69be:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    69c2:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    69c6:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    69ca:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    69ce:	a1 cf       	rjmp	.-190    	; 0x6912 <main+0x1fc4>
DISPLAY_DIGIT1():
    69d0:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    69d4:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    69d8:	c0 92 f1 28 	sts	0x28F1, r12	; 0x8028f1 <digits1+0x2>
    69dc:	d0 92 f2 28 	sts	0x28F2, r13	; 0x8028f2 <digits1+0x3>
    69e0:	a0 92 f3 28 	sts	0x28F3, r10	; 0x8028f3 <digits1+0x4>
    69e4:	b0 92 f4 28 	sts	0x28F4, r11	; 0x8028f4 <digits1+0x5>
    69e8:	80 92 f5 28 	sts	0x28F5, r8	; 0x8028f5 <digits1+0x6>
    69ec:	90 92 f6 28 	sts	0x28F6, r9	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    69f0:	c3 97       	sbiw	r24, 0x33	; 51
    69f2:	dc f2       	brlt	.-74     	; 0x69aa <main+0x205c>
    69f4:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    69f8:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    69fc:	d6 cf       	rjmp	.-84     	; 0x69aa <main+0x205c>
digitalWrite():
    69fe:	60 e0       	ldi	r22, 0x00	; 0
    6a00:	81 e2       	ldi	r24, 0x21	; 33
    6a02:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6a06:	40 92 9a 28 	sts	0x289A, r4	; 0x80289a <SET_MIN>
    6a0a:	50 92 9b 28 	sts	0x289B, r5	; 0x80289b <SET_MIN+0x1>
    6a0e:	81 e0       	ldi	r24, 0x01	; 1
    6a10:	80 93 62 28 	sts	0x2862, r24	; 0x802862 <COUNTDOWN_START>
    6a14:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    6a18:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    6a1c:	01 96       	adiw	r24, 0x01	; 1
    6a1e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6a22:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6a26:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>
digitalWrite():
    6a2a:	61 e0       	ldi	r22, 0x01	; 1
    6a2c:	81 e2       	ldi	r24, 0x21	; 33
    6a2e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6a32:	d0 90 62 28 	lds	r13, 0x2862	; 0x802862 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    6a36:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    6a3a:	81 11       	cpse	r24, r1
    6a3c:	a4 c0       	rjmp	.+328    	; 0x6b86 <main+0x2238>
    6a3e:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    6a42:	88 23       	and	r24, r24
    6a44:	09 f4       	brne	.+2      	; 0x6a48 <main+0x20fa>
    6a46:	9f c0       	rjmp	.+318    	; 0x6b86 <main+0x2238>
    6a48:	dd 20       	and	r13, r13
    6a4a:	09 f4       	brne	.+2      	; 0x6a4e <main+0x2100>
    6a4c:	9c c0       	rjmp	.+312    	; 0x6b86 <main+0x2238>
    6a4e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6a52:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    6a56:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    6a5a:	07 2e       	mov	r0, r23
    6a5c:	00 0c       	add	r0, r0
    6a5e:	88 0b       	sbc	r24, r24
    6a60:	99 0b       	sbc	r25, r25
    6a62:	2b d2       	rcall	.+1110   	; 0x6eba <__floatsisf>
    6a64:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6a68:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6a6c:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    6a70:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    6a74:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    6a78:	8d eb       	ldi	r24, 0xBD	; 189
    6a7a:	9b e2       	ldi	r25, 0x2B	; 43
    6a7c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <Ticker::update()>
digitalWrite():
    6a80:	60 e0       	ldi	r22, 0x00	; 0
    6a82:	8a e1       	ldi	r24, 0x1A	; 26
    6a84:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6a88:	61 e0       	ldi	r22, 0x01	; 1
    6a8a:	8b e1       	ldi	r24, 0x1B	; 27
    6a8c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6a90:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    6a94:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    6a98:	07 2e       	mov	r0, r23
    6a9a:	00 0c       	add	r0, r0
    6a9c:	88 0b       	sbc	r24, r24
    6a9e:	99 0b       	sbc	r25, r25
    6aa0:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6aa4:	8e e1       	ldi	r24, 0x1E	; 30
    6aa6:	90 e0       	ldi	r25, 0x00	; 0
    6aa8:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6aac:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6ab0:	a9 e1       	ldi	r26, 0x19	; 25
    6ab2:	b0 e0       	ldi	r27, 0x00	; 0
    6ab4:	a0 93 e9 28 	sts	0x28E9, r26	; 0x8028e9 <digits2+0x2>
    6ab8:	b0 93 ea 28 	sts	0x28EA, r27	; 0x8028ea <digits2+0x3>
    6abc:	dd 24       	eor	r13, r13
    6abe:	d3 94       	inc	r13
    6ac0:	d0 92 9e 28 	sts	0x289E, r13	; 0x80289e <DOT2_1>
    6ac4:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6ac8:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6acc:	49 97       	sbiw	r24, 0x19	; 25
    6ace:	04 f5       	brge	.+64     	; 0x6b10 <main+0x21c2>
DISPLAY_DIGIT1():
    6ad0:	20 92 ef 28 	sts	0x28EF, r2	; 0x8028ef <digits1>
    6ad4:	30 92 f0 28 	sts	0x28F0, r3	; 0x8028f0 <digits1+0x1>
    6ad8:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1+0x2>
    6adc:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x3>
    6ae0:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x4>
    6ae4:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x5>
    6ae8:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x6>
    6aec:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x7>
digitalWrite():
    6af0:	60 e0       	ldi	r22, 0x00	; 0
    6af2:	85 e1       	ldi	r24, 0x15	; 21
    6af4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6af8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6afc:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6b00:	c3 97       	sbiw	r24, 0x33	; 51
    6b02:	0c f4       	brge	.+2      	; 0x6b06 <main+0x21b8>
    6b04:	96 cf       	rjmp	.-212    	; 0x6a32 <main+0x20e4>
    6b06:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    6b0a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    6b0e:	91 cf       	rjmp	.-222    	; 0x6a32 <main+0x20e4>
digitalWrite():
    6b10:	61 e0       	ldi	r22, 0x01	; 1
    6b12:	85 e1       	ldi	r24, 0x15	; 21
    6b14:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6b18:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    6b1c:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    6b20:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    6b24:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6b28:	2d ec       	ldi	r18, 0xCD	; 205
    6b2a:	3c ec       	ldi	r19, 0xCC	; 204
    6b2c:	47 ec       	ldi	r20, 0xC7	; 199
    6b2e:	52 e4       	ldi	r21, 0x42	; 66
    6b30:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6b34:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6b38:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6b3c:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6b40:	6c d2       	rcall	.+1240   	; 0x701a <__gesf2>
    6b42:	18 16       	cp	r1, r24
    6b44:	9c f4       	brge	.+38     	; 0x6b6c <main+0x221e>
    6b46:	20 e0       	ldi	r18, 0x00	; 0
    6b48:	30 e0       	ldi	r19, 0x00	; 0
    6b4a:	40 e2       	ldi	r20, 0x20	; 32
    6b4c:	51 e4       	ldi	r21, 0x41	; 65
    6b4e:	c5 01       	movw	r24, r10
    6b50:	b4 01       	movw	r22, r8
    6b52:	67 d2       	rcall	.+1230   	; 0x7022 <__mulsf3>
    6b54:	7f d1       	rcall	.+766    	; 0x6e54 <__fixsfsi>
    6b56:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6b5a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6b5e:	ea e0       	ldi	r30, 0x0A	; 10
    6b60:	f0 e0       	ldi	r31, 0x00	; 0
    6b62:	e0 93 f5 28 	sts	0x28F5, r30	; 0x8028f5 <digits1+0x6>
    6b66:	f0 93 f6 28 	sts	0x28F6, r31	; 0x8028f6 <digits1+0x7>
    6b6a:	c6 cf       	rjmp	.-116    	; 0x6af8 <main+0x21aa>
    6b6c:	20 e0       	ldi	r18, 0x00	; 0
    6b6e:	30 e0       	ldi	r19, 0x00	; 0
    6b70:	48 ec       	ldi	r20, 0xC8	; 200
    6b72:	52 e4       	ldi	r21, 0x42	; 66
    6b74:	c5 01       	movw	r24, r10
    6b76:	b4 01       	movw	r22, r8
    6b78:	54 d2       	rcall	.+1192   	; 0x7022 <__mulsf3>
    6b7a:	6c d1       	rcall	.+728    	; 0x6e54 <__fixsfsi>
    6b7c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6b80:	d0 92 b9 28 	sts	0x28B9, r13	; 0x8028b9 <DOT1_1>
    6b84:	ec cf       	rjmp	.-40     	; 0x6b5e <main+0x2210>
digitalWrite():
    6b86:	60 e0       	ldi	r22, 0x00	; 0
    6b88:	81 e2       	ldi	r24, 0x21	; 33
    6b8a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6b8e:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    6b92:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    6b96:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    6b9a:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    6b9e:	dd 20       	and	r13, r13
    6ba0:	19 f0       	breq	.+6      	; 0x6ba8 <main+0x225a>
    6ba2:	8d e0       	ldi	r24, 0x0D	; 13
    6ba4:	90 e0       	ldi	r25, 0x00	; 0
    6ba6:	3b cf       	rjmp	.-394    	; 0x6a1e <main+0x20d0>
    6ba8:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    6bac:	89 ce       	rjmp	.-750    	; 0x68c0 <main+0x1f72>
    6bae:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6bb2:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6bb6:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6bba:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6bbe:	88 3c       	cpi	r24, 0xC8	; 200
    6bc0:	91 05       	cpc	r25, r1
    6bc2:	1c f5       	brge	.+70     	; 0x6c0a <main+0x22bc>
DISPLAY_DIGIT2():
    6bc4:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    6bc8:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    6bcc:	8d e0       	ldi	r24, 0x0D	; 13
    6bce:	90 e0       	ldi	r25, 0x00	; 0
    6bd0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6bd4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6bd8:	2a e1       	ldi	r18, 0x1A	; 26
    6bda:	30 e0       	ldi	r19, 0x00	; 0
    6bdc:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    6be0:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    6be4:	2e e0       	ldi	r18, 0x0E	; 14
    6be6:	30 e0       	ldi	r19, 0x00	; 0
    6be8:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    6bec:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6bf0:	2c e0       	ldi	r18, 0x0C	; 12
    6bf2:	30 e0       	ldi	r19, 0x00	; 0
    6bf4:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6bf8:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6bfc:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    6c00:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    6c04:	8c e1       	ldi	r24, 0x1C	; 28
    6c06:	90 e0       	ldi	r25, 0x00	; 0
    6c08:	b2 cb       	rjmp	.-2204   	; 0x636e <main+0x1a20>
SET_LONG_PRESS_FUNCTION():
    6c0a:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    6c0e:	2c ca       	rjmp	.-2984   	; 0x6068 <main+0x171a>
    6c10:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6c14:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6c18:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6c1c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6c20:	8a e1       	ldi	r24, 0x1A	; 26
    6c22:	90 e0       	ldi	r25, 0x00	; 0
    6c24:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6c28:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6c2c:	87 e1       	ldi	r24, 0x17	; 23
    6c2e:	90 e0       	ldi	r25, 0x00	; 0
    6c30:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6c34:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6c38:	8b e1       	ldi	r24, 0x1B	; 27
    6c3a:	90 e0       	ldi	r25, 0x00	; 0
    6c3c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    6c40:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    6c44:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x6>
    6c48:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x7>
    6c4c:	0c 94 ac 29 	jmp	0x5358	; 0x5358 <main+0xa0a>
SET_LONG_PRESS_FUNCTION():
    6c50:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6c54:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6c58:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6c5c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6c60:	85 e1       	ldi	r24, 0x15	; 21
    6c62:	90 e0       	ldi	r25, 0x00	; 0
    6c64:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6c68:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6c6c:	8d e0       	ldi	r24, 0x0D	; 13
    6c6e:	90 e0       	ldi	r25, 0x00	; 0
    6c70:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6c74:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6c78:	e0 92 eb 28 	sts	0x28EB, r14	; 0x8028eb <digits2+0x4>
    6c7c:	f0 92 ec 28 	sts	0x28EC, r15	; 0x8028ec <digits2+0x5>
    6c80:	80 e1       	ldi	r24, 0x10	; 16
    6c82:	90 e0       	ldi	r25, 0x00	; 0
    6c84:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6c88:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6c8c:	21 e1       	ldi	r18, 0x11	; 17
    6c8e:	30 e0       	ldi	r19, 0x00	; 0
    6c90:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6c94:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6c98:	2f e0       	ldi	r18, 0x0F	; 15
    6c9a:	30 e0       	ldi	r19, 0x00	; 0
    6c9c:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    6ca0:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6ca4:	2c e0       	ldi	r18, 0x0C	; 12
    6ca6:	30 e0       	ldi	r19, 0x00	; 0
    6ca8:	bc c8       	rjmp	.-3720   	; 0x5e22 <main+0x14d4>
loop():
    6caa:	0e 94 f7 14 	call	0x29ee	; 0x29ee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]>
    6cae:	0c 94 3d 28 	jmp	0x507a	; 0x507a <main+0x72c>

00006cb2 <__subsf3>:
__subsf3():
    6cb2:	50 58       	subi	r21, 0x80	; 128

00006cb4 <__addsf3>:
    6cb4:	bb 27       	eor	r27, r27
    6cb6:	aa 27       	eor	r26, r26
    6cb8:	0e d0       	rcall	.+28     	; 0x6cd6 <__addsf3x>
    6cba:	75 c1       	rjmp	.+746    	; 0x6fa6 <__fp_round>
__addsf3():
    6cbc:	66 d1       	rcall	.+716    	; 0x6f8a <__fp_pscA>
    6cbe:	30 f0       	brcs	.+12     	; 0x6ccc <__addsf3+0x18>
    6cc0:	6b d1       	rcall	.+726    	; 0x6f98 <__fp_pscB>
    6cc2:	20 f0       	brcs	.+8      	; 0x6ccc <__addsf3+0x18>
    6cc4:	31 f4       	brne	.+12     	; 0x6cd2 <__addsf3+0x1e>
    6cc6:	9f 3f       	cpi	r25, 0xFF	; 255
    6cc8:	11 f4       	brne	.+4      	; 0x6cce <__addsf3+0x1a>
    6cca:	1e f4       	brtc	.+6      	; 0x6cd2 <__addsf3+0x1e>
    6ccc:	5b c1       	rjmp	.+694    	; 0x6f84 <__fp_nan>
    6cce:	0e f4       	brtc	.+2      	; 0x6cd2 <__addsf3+0x1e>
    6cd0:	e0 95       	com	r30
    6cd2:	e7 fb       	bst	r30, 7
    6cd4:	51 c1       	rjmp	.+674    	; 0x6f78 <__fp_inf>

00006cd6 <__addsf3x>:
__addsf3x():
    6cd6:	e9 2f       	mov	r30, r25
    6cd8:	77 d1       	rcall	.+750    	; 0x6fc8 <__fp_split3>
    6cda:	80 f3       	brcs	.-32     	; 0x6cbc <__addsf3+0x8>
    6cdc:	ba 17       	cp	r27, r26
    6cde:	62 07       	cpc	r22, r18
    6ce0:	73 07       	cpc	r23, r19
    6ce2:	84 07       	cpc	r24, r20
    6ce4:	95 07       	cpc	r25, r21
    6ce6:	18 f0       	brcs	.+6      	; 0x6cee <__addsf3x+0x18>
    6ce8:	71 f4       	brne	.+28     	; 0x6d06 <__addsf3x+0x30>
    6cea:	9e f5       	brtc	.+102    	; 0x6d52 <__addsf3x+0x7c>
    6cec:	8f c1       	rjmp	.+798    	; 0x700c <__fp_zero>
    6cee:	0e f4       	brtc	.+2      	; 0x6cf2 <__addsf3x+0x1c>
    6cf0:	e0 95       	com	r30
    6cf2:	0b 2e       	mov	r0, r27
    6cf4:	ba 2f       	mov	r27, r26
    6cf6:	a0 2d       	mov	r26, r0
    6cf8:	0b 01       	movw	r0, r22
    6cfa:	b9 01       	movw	r22, r18
    6cfc:	90 01       	movw	r18, r0
    6cfe:	0c 01       	movw	r0, r24
    6d00:	ca 01       	movw	r24, r20
    6d02:	a0 01       	movw	r20, r0
    6d04:	11 24       	eor	r1, r1
    6d06:	ff 27       	eor	r31, r31
    6d08:	59 1b       	sub	r21, r25
    6d0a:	99 f0       	breq	.+38     	; 0x6d32 <__addsf3x+0x5c>
    6d0c:	59 3f       	cpi	r21, 0xF9	; 249
    6d0e:	50 f4       	brcc	.+20     	; 0x6d24 <__addsf3x+0x4e>
    6d10:	50 3e       	cpi	r21, 0xE0	; 224
    6d12:	68 f1       	brcs	.+90     	; 0x6d6e <__addsf3x+0x98>
    6d14:	1a 16       	cp	r1, r26
    6d16:	f0 40       	sbci	r31, 0x00	; 0
    6d18:	a2 2f       	mov	r26, r18
    6d1a:	23 2f       	mov	r18, r19
    6d1c:	34 2f       	mov	r19, r20
    6d1e:	44 27       	eor	r20, r20
    6d20:	58 5f       	subi	r21, 0xF8	; 248
    6d22:	f3 cf       	rjmp	.-26     	; 0x6d0a <__addsf3x+0x34>
    6d24:	46 95       	lsr	r20
    6d26:	37 95       	ror	r19
    6d28:	27 95       	ror	r18
    6d2a:	a7 95       	ror	r26
    6d2c:	f0 40       	sbci	r31, 0x00	; 0
    6d2e:	53 95       	inc	r21
    6d30:	c9 f7       	brne	.-14     	; 0x6d24 <__addsf3x+0x4e>
    6d32:	7e f4       	brtc	.+30     	; 0x6d52 <__addsf3x+0x7c>
    6d34:	1f 16       	cp	r1, r31
    6d36:	ba 0b       	sbc	r27, r26
    6d38:	62 0b       	sbc	r22, r18
    6d3a:	73 0b       	sbc	r23, r19
    6d3c:	84 0b       	sbc	r24, r20
    6d3e:	ba f0       	brmi	.+46     	; 0x6d6e <__addsf3x+0x98>
    6d40:	91 50       	subi	r25, 0x01	; 1
    6d42:	a1 f0       	breq	.+40     	; 0x6d6c <__addsf3x+0x96>
    6d44:	ff 0f       	add	r31, r31
    6d46:	bb 1f       	adc	r27, r27
    6d48:	66 1f       	adc	r22, r22
    6d4a:	77 1f       	adc	r23, r23
    6d4c:	88 1f       	adc	r24, r24
    6d4e:	c2 f7       	brpl	.-16     	; 0x6d40 <__addsf3x+0x6a>
    6d50:	0e c0       	rjmp	.+28     	; 0x6d6e <__addsf3x+0x98>
    6d52:	ba 0f       	add	r27, r26
    6d54:	62 1f       	adc	r22, r18
    6d56:	73 1f       	adc	r23, r19
    6d58:	84 1f       	adc	r24, r20
    6d5a:	48 f4       	brcc	.+18     	; 0x6d6e <__addsf3x+0x98>
    6d5c:	87 95       	ror	r24
    6d5e:	77 95       	ror	r23
    6d60:	67 95       	ror	r22
    6d62:	b7 95       	ror	r27
    6d64:	f7 95       	ror	r31
    6d66:	9e 3f       	cpi	r25, 0xFE	; 254
    6d68:	08 f0       	brcs	.+2      	; 0x6d6c <__addsf3x+0x96>
    6d6a:	b3 cf       	rjmp	.-154    	; 0x6cd2 <__addsf3+0x1e>
    6d6c:	93 95       	inc	r25
    6d6e:	88 0f       	add	r24, r24
    6d70:	08 f0       	brcs	.+2      	; 0x6d74 <__addsf3x+0x9e>
    6d72:	99 27       	eor	r25, r25
    6d74:	ee 0f       	add	r30, r30
    6d76:	97 95       	ror	r25
    6d78:	87 95       	ror	r24
    6d7a:	08 95       	ret

00006d7c <__cmpsf2>:
    6d7c:	d9 d0       	rcall	.+434    	; 0x6f30 <__fp_cmp>
    6d7e:	08 f4       	brcc	.+2      	; 0x6d82 <__cmpsf2+0x6>
    6d80:	81 e0       	ldi	r24, 0x01	; 1
    6d82:	08 95       	ret

00006d84 <__divsf3>:
    6d84:	0c d0       	rcall	.+24     	; 0x6d9e <__divsf3x>
    6d86:	0f c1       	rjmp	.+542    	; 0x6fa6 <__fp_round>
    6d88:	07 d1       	rcall	.+526    	; 0x6f98 <__fp_pscB>
    6d8a:	40 f0       	brcs	.+16     	; 0x6d9c <__divsf3+0x18>
    6d8c:	fe d0       	rcall	.+508    	; 0x6f8a <__fp_pscA>
    6d8e:	30 f0       	brcs	.+12     	; 0x6d9c <__divsf3+0x18>
    6d90:	21 f4       	brne	.+8      	; 0x6d9a <__divsf3+0x16>
    6d92:	5f 3f       	cpi	r21, 0xFF	; 255
    6d94:	19 f0       	breq	.+6      	; 0x6d9c <__divsf3+0x18>
    6d96:	f0 c0       	rjmp	.+480    	; 0x6f78 <__fp_inf>
    6d98:	51 11       	cpse	r21, r1
    6d9a:	39 c1       	rjmp	.+626    	; 0x700e <__fp_szero>
    6d9c:	f3 c0       	rjmp	.+486    	; 0x6f84 <__fp_nan>

00006d9e <__divsf3x>:
    6d9e:	14 d1       	rcall	.+552    	; 0x6fc8 <__fp_split3>
    6da0:	98 f3       	brcs	.-26     	; 0x6d88 <__divsf3+0x4>

00006da2 <__divsf3_pse>:
__divsf3_pse():
    6da2:	99 23       	and	r25, r25
    6da4:	c9 f3       	breq	.-14     	; 0x6d98 <__divsf3+0x14>
    6da6:	55 23       	and	r21, r21
    6da8:	b1 f3       	breq	.-20     	; 0x6d96 <__divsf3+0x12>
    6daa:	95 1b       	sub	r25, r21
    6dac:	55 0b       	sbc	r21, r21
    6dae:	bb 27       	eor	r27, r27
    6db0:	aa 27       	eor	r26, r26
    6db2:	62 17       	cp	r22, r18
    6db4:	73 07       	cpc	r23, r19
    6db6:	84 07       	cpc	r24, r20
    6db8:	38 f0       	brcs	.+14     	; 0x6dc8 <__divsf3_pse+0x26>
    6dba:	9f 5f       	subi	r25, 0xFF	; 255
    6dbc:	5f 4f       	sbci	r21, 0xFF	; 255
    6dbe:	22 0f       	add	r18, r18
    6dc0:	33 1f       	adc	r19, r19
    6dc2:	44 1f       	adc	r20, r20
    6dc4:	aa 1f       	adc	r26, r26
    6dc6:	a9 f3       	breq	.-22     	; 0x6db2 <__divsf3_pse+0x10>
    6dc8:	33 d0       	rcall	.+102    	; 0x6e30 <__divsf3_pse+0x8e>
    6dca:	0e 2e       	mov	r0, r30
    6dcc:	3a f0       	brmi	.+14     	; 0x6ddc <__divsf3_pse+0x3a>
    6dce:	e0 e8       	ldi	r30, 0x80	; 128
    6dd0:	30 d0       	rcall	.+96     	; 0x6e32 <__divsf3_pse+0x90>
    6dd2:	91 50       	subi	r25, 0x01	; 1
    6dd4:	50 40       	sbci	r21, 0x00	; 0
    6dd6:	e6 95       	lsr	r30
    6dd8:	00 1c       	adc	r0, r0
    6dda:	ca f7       	brpl	.-14     	; 0x6dce <__divsf3_pse+0x2c>
    6ddc:	29 d0       	rcall	.+82     	; 0x6e30 <__divsf3_pse+0x8e>
    6dde:	fe 2f       	mov	r31, r30
    6de0:	27 d0       	rcall	.+78     	; 0x6e30 <__divsf3_pse+0x8e>
    6de2:	66 0f       	add	r22, r22
    6de4:	77 1f       	adc	r23, r23
    6de6:	88 1f       	adc	r24, r24
    6de8:	bb 1f       	adc	r27, r27
    6dea:	26 17       	cp	r18, r22
    6dec:	37 07       	cpc	r19, r23
    6dee:	48 07       	cpc	r20, r24
    6df0:	ab 07       	cpc	r26, r27
    6df2:	b0 e8       	ldi	r27, 0x80	; 128
    6df4:	09 f0       	breq	.+2      	; 0x6df8 <__divsf3_pse+0x56>
    6df6:	bb 0b       	sbc	r27, r27
    6df8:	80 2d       	mov	r24, r0
    6dfa:	bf 01       	movw	r22, r30
    6dfc:	ff 27       	eor	r31, r31
    6dfe:	93 58       	subi	r25, 0x83	; 131
    6e00:	5f 4f       	sbci	r21, 0xFF	; 255
    6e02:	2a f0       	brmi	.+10     	; 0x6e0e <__divsf3_pse+0x6c>
    6e04:	9e 3f       	cpi	r25, 0xFE	; 254
    6e06:	51 05       	cpc	r21, r1
    6e08:	68 f0       	brcs	.+26     	; 0x6e24 <__divsf3_pse+0x82>
    6e0a:	b6 c0       	rjmp	.+364    	; 0x6f78 <__fp_inf>
    6e0c:	00 c1       	rjmp	.+512    	; 0x700e <__fp_szero>
    6e0e:	5f 3f       	cpi	r21, 0xFF	; 255
    6e10:	ec f3       	brlt	.-6      	; 0x6e0c <__divsf3_pse+0x6a>
    6e12:	98 3e       	cpi	r25, 0xE8	; 232
    6e14:	dc f3       	brlt	.-10     	; 0x6e0c <__divsf3_pse+0x6a>
    6e16:	86 95       	lsr	r24
    6e18:	77 95       	ror	r23
    6e1a:	67 95       	ror	r22
    6e1c:	b7 95       	ror	r27
    6e1e:	f7 95       	ror	r31
    6e20:	9f 5f       	subi	r25, 0xFF	; 255
    6e22:	c9 f7       	brne	.-14     	; 0x6e16 <__divsf3_pse+0x74>
    6e24:	88 0f       	add	r24, r24
    6e26:	91 1d       	adc	r25, r1
    6e28:	96 95       	lsr	r25
    6e2a:	87 95       	ror	r24
    6e2c:	97 f9       	bld	r25, 7
    6e2e:	08 95       	ret
    6e30:	e1 e0       	ldi	r30, 0x01	; 1
    6e32:	66 0f       	add	r22, r22
    6e34:	77 1f       	adc	r23, r23
    6e36:	88 1f       	adc	r24, r24
    6e38:	bb 1f       	adc	r27, r27
    6e3a:	62 17       	cp	r22, r18
    6e3c:	73 07       	cpc	r23, r19
    6e3e:	84 07       	cpc	r24, r20
    6e40:	ba 07       	cpc	r27, r26
    6e42:	20 f0       	brcs	.+8      	; 0x6e4c <__divsf3_pse+0xaa>
    6e44:	62 1b       	sub	r22, r18
    6e46:	73 0b       	sbc	r23, r19
    6e48:	84 0b       	sbc	r24, r20
    6e4a:	ba 0b       	sbc	r27, r26
    6e4c:	ee 1f       	adc	r30, r30
    6e4e:	88 f7       	brcc	.-30     	; 0x6e32 <__divsf3_pse+0x90>
    6e50:	e0 95       	com	r30
    6e52:	08 95       	ret

00006e54 <__fixsfsi>:
__fixsfsi():
    6e54:	04 d0       	rcall	.+8      	; 0x6e5e <__fixunssfsi>
    6e56:	68 94       	set
    6e58:	b1 11       	cpse	r27, r1
    6e5a:	d9 c0       	rjmp	.+434    	; 0x700e <__fp_szero>
    6e5c:	08 95       	ret

00006e5e <__fixunssfsi>:
__fixunssfsi():
    6e5e:	bc d0       	rcall	.+376    	; 0x6fd8 <__fp_splitA>
    6e60:	88 f0       	brcs	.+34     	; 0x6e84 <__fixunssfsi+0x26>
    6e62:	9f 57       	subi	r25, 0x7F	; 127
    6e64:	90 f0       	brcs	.+36     	; 0x6e8a <__fixunssfsi+0x2c>
    6e66:	b9 2f       	mov	r27, r25
    6e68:	99 27       	eor	r25, r25
    6e6a:	b7 51       	subi	r27, 0x17	; 23
    6e6c:	a0 f0       	brcs	.+40     	; 0x6e96 <__fixunssfsi+0x38>
    6e6e:	d1 f0       	breq	.+52     	; 0x6ea4 <__fixunssfsi+0x46>
    6e70:	66 0f       	add	r22, r22
    6e72:	77 1f       	adc	r23, r23
    6e74:	88 1f       	adc	r24, r24
    6e76:	99 1f       	adc	r25, r25
    6e78:	1a f0       	brmi	.+6      	; 0x6e80 <__fixunssfsi+0x22>
    6e7a:	ba 95       	dec	r27
    6e7c:	c9 f7       	brne	.-14     	; 0x6e70 <__fixunssfsi+0x12>
    6e7e:	12 c0       	rjmp	.+36     	; 0x6ea4 <__fixunssfsi+0x46>
    6e80:	b1 30       	cpi	r27, 0x01	; 1
    6e82:	81 f0       	breq	.+32     	; 0x6ea4 <__fixunssfsi+0x46>
    6e84:	c3 d0       	rcall	.+390    	; 0x700c <__fp_zero>
    6e86:	b1 e0       	ldi	r27, 0x01	; 1
    6e88:	08 95       	ret
    6e8a:	c0 c0       	rjmp	.+384    	; 0x700c <__fp_zero>
    6e8c:	67 2f       	mov	r22, r23
    6e8e:	78 2f       	mov	r23, r24
    6e90:	88 27       	eor	r24, r24
    6e92:	b8 5f       	subi	r27, 0xF8	; 248
    6e94:	39 f0       	breq	.+14     	; 0x6ea4 <__fixunssfsi+0x46>
    6e96:	b9 3f       	cpi	r27, 0xF9	; 249
    6e98:	cc f3       	brlt	.-14     	; 0x6e8c <__fixunssfsi+0x2e>
    6e9a:	86 95       	lsr	r24
    6e9c:	77 95       	ror	r23
    6e9e:	67 95       	ror	r22
    6ea0:	b3 95       	inc	r27
    6ea2:	d9 f7       	brne	.-10     	; 0x6e9a <__fixunssfsi+0x3c>
    6ea4:	3e f4       	brtc	.+14     	; 0x6eb4 <__fixunssfsi+0x56>
    6ea6:	90 95       	com	r25
    6ea8:	80 95       	com	r24
    6eaa:	70 95       	com	r23
    6eac:	61 95       	neg	r22
    6eae:	7f 4f       	sbci	r23, 0xFF	; 255
    6eb0:	8f 4f       	sbci	r24, 0xFF	; 255
    6eb2:	9f 4f       	sbci	r25, 0xFF	; 255
    6eb4:	08 95       	ret

00006eb6 <__floatunsisf>:
__floatunsisf():
    6eb6:	e8 94       	clt
    6eb8:	09 c0       	rjmp	.+18     	; 0x6ecc <__floatsisf+0x12>

00006eba <__floatsisf>:
    6eba:	97 fb       	bst	r25, 7
    6ebc:	3e f4       	brtc	.+14     	; 0x6ecc <__floatsisf+0x12>
    6ebe:	90 95       	com	r25
    6ec0:	80 95       	com	r24
    6ec2:	70 95       	com	r23
    6ec4:	61 95       	neg	r22
    6ec6:	7f 4f       	sbci	r23, 0xFF	; 255
    6ec8:	8f 4f       	sbci	r24, 0xFF	; 255
    6eca:	9f 4f       	sbci	r25, 0xFF	; 255
    6ecc:	99 23       	and	r25, r25
    6ece:	a9 f0       	breq	.+42     	; 0x6efa <__floatsisf+0x40>
    6ed0:	f9 2f       	mov	r31, r25
    6ed2:	96 e9       	ldi	r25, 0x96	; 150
    6ed4:	bb 27       	eor	r27, r27
    6ed6:	93 95       	inc	r25
    6ed8:	f6 95       	lsr	r31
    6eda:	87 95       	ror	r24
    6edc:	77 95       	ror	r23
    6ede:	67 95       	ror	r22
    6ee0:	b7 95       	ror	r27
    6ee2:	f1 11       	cpse	r31, r1
    6ee4:	f8 cf       	rjmp	.-16     	; 0x6ed6 <__floatsisf+0x1c>
    6ee6:	fa f4       	brpl	.+62     	; 0x6f26 <__floatsisf+0x6c>
    6ee8:	bb 0f       	add	r27, r27
    6eea:	11 f4       	brne	.+4      	; 0x6ef0 <__floatsisf+0x36>
    6eec:	60 ff       	sbrs	r22, 0
    6eee:	1b c0       	rjmp	.+54     	; 0x6f26 <__floatsisf+0x6c>
    6ef0:	6f 5f       	subi	r22, 0xFF	; 255
    6ef2:	7f 4f       	sbci	r23, 0xFF	; 255
    6ef4:	8f 4f       	sbci	r24, 0xFF	; 255
    6ef6:	9f 4f       	sbci	r25, 0xFF	; 255
    6ef8:	16 c0       	rjmp	.+44     	; 0x6f26 <__floatsisf+0x6c>
    6efa:	88 23       	and	r24, r24
    6efc:	11 f0       	breq	.+4      	; 0x6f02 <__floatsisf+0x48>
    6efe:	96 e9       	ldi	r25, 0x96	; 150
    6f00:	11 c0       	rjmp	.+34     	; 0x6f24 <__floatsisf+0x6a>
    6f02:	77 23       	and	r23, r23
    6f04:	21 f0       	breq	.+8      	; 0x6f0e <__floatsisf+0x54>
    6f06:	9e e8       	ldi	r25, 0x8E	; 142
    6f08:	87 2f       	mov	r24, r23
    6f0a:	76 2f       	mov	r23, r22
    6f0c:	05 c0       	rjmp	.+10     	; 0x6f18 <__floatsisf+0x5e>
    6f0e:	66 23       	and	r22, r22
    6f10:	71 f0       	breq	.+28     	; 0x6f2e <__floatsisf+0x74>
    6f12:	96 e8       	ldi	r25, 0x86	; 134
    6f14:	86 2f       	mov	r24, r22
    6f16:	70 e0       	ldi	r23, 0x00	; 0
    6f18:	60 e0       	ldi	r22, 0x00	; 0
    6f1a:	2a f0       	brmi	.+10     	; 0x6f26 <__floatsisf+0x6c>
    6f1c:	9a 95       	dec	r25
    6f1e:	66 0f       	add	r22, r22
    6f20:	77 1f       	adc	r23, r23
    6f22:	88 1f       	adc	r24, r24
    6f24:	da f7       	brpl	.-10     	; 0x6f1c <__floatsisf+0x62>
    6f26:	88 0f       	add	r24, r24
    6f28:	96 95       	lsr	r25
    6f2a:	87 95       	ror	r24
    6f2c:	97 f9       	bld	r25, 7
    6f2e:	08 95       	ret

00006f30 <__fp_cmp>:
__fp_cmp():
    6f30:	99 0f       	add	r25, r25
    6f32:	00 08       	sbc	r0, r0
    6f34:	55 0f       	add	r21, r21
    6f36:	aa 0b       	sbc	r26, r26
    6f38:	e0 e8       	ldi	r30, 0x80	; 128
    6f3a:	fe ef       	ldi	r31, 0xFE	; 254
    6f3c:	16 16       	cp	r1, r22
    6f3e:	17 06       	cpc	r1, r23
    6f40:	e8 07       	cpc	r30, r24
    6f42:	f9 07       	cpc	r31, r25
    6f44:	c0 f0       	brcs	.+48     	; 0x6f76 <__fp_cmp+0x46>
    6f46:	12 16       	cp	r1, r18
    6f48:	13 06       	cpc	r1, r19
    6f4a:	e4 07       	cpc	r30, r20
    6f4c:	f5 07       	cpc	r31, r21
    6f4e:	98 f0       	brcs	.+38     	; 0x6f76 <__fp_cmp+0x46>
    6f50:	62 1b       	sub	r22, r18
    6f52:	73 0b       	sbc	r23, r19
    6f54:	84 0b       	sbc	r24, r20
    6f56:	95 0b       	sbc	r25, r21
    6f58:	39 f4       	brne	.+14     	; 0x6f68 <__fp_cmp+0x38>
    6f5a:	0a 26       	eor	r0, r26
    6f5c:	61 f0       	breq	.+24     	; 0x6f76 <__fp_cmp+0x46>
    6f5e:	23 2b       	or	r18, r19
    6f60:	24 2b       	or	r18, r20
    6f62:	25 2b       	or	r18, r21
    6f64:	21 f4       	brne	.+8      	; 0x6f6e <__fp_cmp+0x3e>
    6f66:	08 95       	ret
    6f68:	0a 26       	eor	r0, r26
    6f6a:	09 f4       	brne	.+2      	; 0x6f6e <__fp_cmp+0x3e>
    6f6c:	a1 40       	sbci	r26, 0x01	; 1
    6f6e:	a6 95       	lsr	r26
    6f70:	8f ef       	ldi	r24, 0xFF	; 255
    6f72:	81 1d       	adc	r24, r1
    6f74:	81 1d       	adc	r24, r1
    6f76:	08 95       	ret

00006f78 <__fp_inf>:
__fp_inf():
    6f78:	97 f9       	bld	r25, 7
    6f7a:	9f 67       	ori	r25, 0x7F	; 127
    6f7c:	80 e8       	ldi	r24, 0x80	; 128
    6f7e:	70 e0       	ldi	r23, 0x00	; 0
    6f80:	60 e0       	ldi	r22, 0x00	; 0
    6f82:	08 95       	ret

00006f84 <__fp_nan>:
__fp_nan():
    6f84:	9f ef       	ldi	r25, 0xFF	; 255
    6f86:	80 ec       	ldi	r24, 0xC0	; 192
    6f88:	08 95       	ret

00006f8a <__fp_pscA>:
__fp_pscA():
    6f8a:	00 24       	eor	r0, r0
    6f8c:	0a 94       	dec	r0
    6f8e:	16 16       	cp	r1, r22
    6f90:	17 06       	cpc	r1, r23
    6f92:	18 06       	cpc	r1, r24
    6f94:	09 06       	cpc	r0, r25
    6f96:	08 95       	ret

00006f98 <__fp_pscB>:
__fp_pscB():
    6f98:	00 24       	eor	r0, r0
    6f9a:	0a 94       	dec	r0
    6f9c:	12 16       	cp	r1, r18
    6f9e:	13 06       	cpc	r1, r19
    6fa0:	14 06       	cpc	r1, r20
    6fa2:	05 06       	cpc	r0, r21
    6fa4:	08 95       	ret

00006fa6 <__fp_round>:
__fp_round():
    6fa6:	09 2e       	mov	r0, r25
    6fa8:	03 94       	inc	r0
    6faa:	00 0c       	add	r0, r0
    6fac:	11 f4       	brne	.+4      	; 0x6fb2 <__fp_round+0xc>
    6fae:	88 23       	and	r24, r24
    6fb0:	52 f0       	brmi	.+20     	; 0x6fc6 <__fp_round+0x20>
    6fb2:	bb 0f       	add	r27, r27
    6fb4:	40 f4       	brcc	.+16     	; 0x6fc6 <__fp_round+0x20>
    6fb6:	bf 2b       	or	r27, r31
    6fb8:	11 f4       	brne	.+4      	; 0x6fbe <__fp_round+0x18>
    6fba:	60 ff       	sbrs	r22, 0
    6fbc:	04 c0       	rjmp	.+8      	; 0x6fc6 <__fp_round+0x20>
    6fbe:	6f 5f       	subi	r22, 0xFF	; 255
    6fc0:	7f 4f       	sbci	r23, 0xFF	; 255
    6fc2:	8f 4f       	sbci	r24, 0xFF	; 255
    6fc4:	9f 4f       	sbci	r25, 0xFF	; 255
    6fc6:	08 95       	ret

00006fc8 <__fp_split3>:
__fp_split3():
    6fc8:	57 fd       	sbrc	r21, 7
    6fca:	90 58       	subi	r25, 0x80	; 128
    6fcc:	44 0f       	add	r20, r20
    6fce:	55 1f       	adc	r21, r21
    6fd0:	59 f0       	breq	.+22     	; 0x6fe8 <__fp_splitA+0x10>
    6fd2:	5f 3f       	cpi	r21, 0xFF	; 255
    6fd4:	71 f0       	breq	.+28     	; 0x6ff2 <__fp_splitA+0x1a>
    6fd6:	47 95       	ror	r20

00006fd8 <__fp_splitA>:
    6fd8:	88 0f       	add	r24, r24
    6fda:	97 fb       	bst	r25, 7
    6fdc:	99 1f       	adc	r25, r25
    6fde:	61 f0       	breq	.+24     	; 0x6ff8 <__fp_splitA+0x20>
    6fe0:	9f 3f       	cpi	r25, 0xFF	; 255
    6fe2:	79 f0       	breq	.+30     	; 0x7002 <__fp_splitA+0x2a>
    6fe4:	87 95       	ror	r24
    6fe6:	08 95       	ret
    6fe8:	12 16       	cp	r1, r18
    6fea:	13 06       	cpc	r1, r19
    6fec:	14 06       	cpc	r1, r20
    6fee:	55 1f       	adc	r21, r21
    6ff0:	f2 cf       	rjmp	.-28     	; 0x6fd6 <__fp_split3+0xe>
    6ff2:	46 95       	lsr	r20
    6ff4:	f1 df       	rcall	.-30     	; 0x6fd8 <__fp_splitA>
    6ff6:	08 c0       	rjmp	.+16     	; 0x7008 <__fp_splitA+0x30>
    6ff8:	16 16       	cp	r1, r22
    6ffa:	17 06       	cpc	r1, r23
    6ffc:	18 06       	cpc	r1, r24
    6ffe:	99 1f       	adc	r25, r25
    7000:	f1 cf       	rjmp	.-30     	; 0x6fe4 <__fp_splitA+0xc>
    7002:	86 95       	lsr	r24
    7004:	71 05       	cpc	r23, r1
    7006:	61 05       	cpc	r22, r1
    7008:	08 94       	sec
    700a:	08 95       	ret

0000700c <__fp_zero>:
__fp_zero():
    700c:	e8 94       	clt

0000700e <__fp_szero>:
    700e:	bb 27       	eor	r27, r27
    7010:	66 27       	eor	r22, r22
    7012:	77 27       	eor	r23, r23
    7014:	cb 01       	movw	r24, r22
    7016:	97 f9       	bld	r25, 7
    7018:	08 95       	ret

0000701a <__gesf2>:
__gesf2():
    701a:	8a df       	rcall	.-236    	; 0x6f30 <__fp_cmp>
    701c:	08 f4       	brcc	.+2      	; 0x7020 <__gesf2+0x6>
    701e:	8f ef       	ldi	r24, 0xFF	; 255
    7020:	08 95       	ret

00007022 <__mulsf3>:
__mulsf3():
    7022:	0b d0       	rcall	.+22     	; 0x703a <__mulsf3x>
    7024:	c0 cf       	rjmp	.-128    	; 0x6fa6 <__fp_round>
    7026:	b1 df       	rcall	.-158    	; 0x6f8a <__fp_pscA>
    7028:	28 f0       	brcs	.+10     	; 0x7034 <__mulsf3+0x12>
    702a:	b6 df       	rcall	.-148    	; 0x6f98 <__fp_pscB>
    702c:	18 f0       	brcs	.+6      	; 0x7034 <__mulsf3+0x12>
    702e:	95 23       	and	r25, r21
    7030:	09 f0       	breq	.+2      	; 0x7034 <__mulsf3+0x12>
    7032:	a2 cf       	rjmp	.-188    	; 0x6f78 <__fp_inf>
    7034:	a7 cf       	rjmp	.-178    	; 0x6f84 <__fp_nan>
    7036:	11 24       	eor	r1, r1
    7038:	ea cf       	rjmp	.-44     	; 0x700e <__fp_szero>

0000703a <__mulsf3x>:
__mulsf3x():
    703a:	c6 df       	rcall	.-116    	; 0x6fc8 <__fp_split3>
    703c:	a0 f3       	brcs	.-24     	; 0x7026 <__mulsf3+0x4>

0000703e <__mulsf3_pse>:
    703e:	95 9f       	mul	r25, r21
    7040:	d1 f3       	breq	.-12     	; 0x7036 <__mulsf3+0x14>
    7042:	95 0f       	add	r25, r21
    7044:	50 e0       	ldi	r21, 0x00	; 0
    7046:	55 1f       	adc	r21, r21
    7048:	62 9f       	mul	r22, r18
    704a:	f0 01       	movw	r30, r0
    704c:	72 9f       	mul	r23, r18
    704e:	bb 27       	eor	r27, r27
    7050:	f0 0d       	add	r31, r0
    7052:	b1 1d       	adc	r27, r1
    7054:	63 9f       	mul	r22, r19
    7056:	aa 27       	eor	r26, r26
    7058:	f0 0d       	add	r31, r0
    705a:	b1 1d       	adc	r27, r1
    705c:	aa 1f       	adc	r26, r26
    705e:	64 9f       	mul	r22, r20
    7060:	66 27       	eor	r22, r22
    7062:	b0 0d       	add	r27, r0
    7064:	a1 1d       	adc	r26, r1
    7066:	66 1f       	adc	r22, r22
    7068:	82 9f       	mul	r24, r18
    706a:	22 27       	eor	r18, r18
    706c:	b0 0d       	add	r27, r0
    706e:	a1 1d       	adc	r26, r1
    7070:	62 1f       	adc	r22, r18
    7072:	73 9f       	mul	r23, r19
    7074:	b0 0d       	add	r27, r0
    7076:	a1 1d       	adc	r26, r1
    7078:	62 1f       	adc	r22, r18
    707a:	83 9f       	mul	r24, r19
    707c:	a0 0d       	add	r26, r0
    707e:	61 1d       	adc	r22, r1
    7080:	22 1f       	adc	r18, r18
    7082:	74 9f       	mul	r23, r20
    7084:	33 27       	eor	r19, r19
    7086:	a0 0d       	add	r26, r0
    7088:	61 1d       	adc	r22, r1
    708a:	23 1f       	adc	r18, r19
    708c:	84 9f       	mul	r24, r20
    708e:	60 0d       	add	r22, r0
    7090:	21 1d       	adc	r18, r1
    7092:	82 2f       	mov	r24, r18
    7094:	76 2f       	mov	r23, r22
    7096:	6a 2f       	mov	r22, r26
    7098:	11 24       	eor	r1, r1
    709a:	9f 57       	subi	r25, 0x7F	; 127
    709c:	50 40       	sbci	r21, 0x00	; 0
    709e:	8a f0       	brmi	.+34     	; 0x70c2 <__mulsf3_pse+0x84>
    70a0:	e1 f0       	breq	.+56     	; 0x70da <__mulsf3_pse+0x9c>
    70a2:	88 23       	and	r24, r24
    70a4:	4a f0       	brmi	.+18     	; 0x70b8 <__mulsf3_pse+0x7a>
    70a6:	ee 0f       	add	r30, r30
    70a8:	ff 1f       	adc	r31, r31
    70aa:	bb 1f       	adc	r27, r27
    70ac:	66 1f       	adc	r22, r22
    70ae:	77 1f       	adc	r23, r23
    70b0:	88 1f       	adc	r24, r24
    70b2:	91 50       	subi	r25, 0x01	; 1
    70b4:	50 40       	sbci	r21, 0x00	; 0
    70b6:	a9 f7       	brne	.-22     	; 0x70a2 <__mulsf3_pse+0x64>
    70b8:	9e 3f       	cpi	r25, 0xFE	; 254
    70ba:	51 05       	cpc	r21, r1
    70bc:	70 f0       	brcs	.+28     	; 0x70da <__mulsf3_pse+0x9c>
    70be:	5c cf       	rjmp	.-328    	; 0x6f78 <__fp_inf>
    70c0:	a6 cf       	rjmp	.-180    	; 0x700e <__fp_szero>
    70c2:	5f 3f       	cpi	r21, 0xFF	; 255
    70c4:	ec f3       	brlt	.-6      	; 0x70c0 <__mulsf3_pse+0x82>
    70c6:	98 3e       	cpi	r25, 0xE8	; 232
    70c8:	dc f3       	brlt	.-10     	; 0x70c0 <__mulsf3_pse+0x82>
    70ca:	86 95       	lsr	r24
    70cc:	77 95       	ror	r23
    70ce:	67 95       	ror	r22
    70d0:	b7 95       	ror	r27
    70d2:	f7 95       	ror	r31
    70d4:	e7 95       	ror	r30
    70d6:	9f 5f       	subi	r25, 0xFF	; 255
    70d8:	c1 f7       	brne	.-16     	; 0x70ca <__mulsf3_pse+0x8c>
    70da:	fe 2b       	or	r31, r30
    70dc:	88 0f       	add	r24, r24
    70de:	91 1d       	adc	r25, r1
    70e0:	96 95       	lsr	r25
    70e2:	87 95       	ror	r24
    70e4:	97 f9       	bld	r25, 7
    70e6:	08 95       	ret

000070e8 <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    70e8:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    70ea:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    70ec:	16 f4       	brtc	.+4      	; 0x70f2 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    70ee:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    70f0:	06 d0       	rcall	.+12     	; 0x70fe <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    70f2:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    70f4:	08 d0       	rcall	.+16     	; 0x7106 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    70f6:	65 d0       	rcall	.+202    	; 0x71c2 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    70f8:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    70fa:	05 d0       	rcall	.+10     	; 0x7106 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    70fc:	3e f4       	brtc	.+14     	; 0x710c <__divmodhi4_exit>

000070fe <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    70fe:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    7100:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    7102:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    7104:	08 95       	ret

00007106 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    7106:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    7108:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    710a:	7f 4f       	sbci	r23, 0xFF	; 255

0000710c <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    710c:	08 95       	ret

0000710e <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    710e:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    7110:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    7112:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    7114:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    7116:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    7118:	0d c0       	rjmp	.+26     	; 0x7134 <__udivmodsi4_ep>

0000711a <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    711a:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    711c:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    711e:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    7120:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    7122:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    7124:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    7126:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    7128:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    712a:	20 f0       	brcs	.+8      	; 0x7134 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    712c:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    712e:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7130:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    7132:	f5 0b       	sbc	r31, r21

00007134 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    7134:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    7136:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    7138:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    713a:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    713c:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    713e:	69 f7       	brne	.-38     	; 0x711a <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    7140:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    7142:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    7144:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    7146:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    7148:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    714a:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    714c:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    714e:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    7150:	08 95       	ret

00007152 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    7152:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    7154:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    7156:	16 f4       	brtc	.+4      	; 0x715c <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    7158:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    715a:	0f d0       	rcall	.+30     	; 0x717a <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    715c:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    715e:	05 d0       	rcall	.+10     	; 0x716a <__divmodsi4_neg2>
    7160:	d6 df       	rcall	.-84     	; 0x710e <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    7162:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    7164:	02 d0       	rcall	.+4      	; 0x716a <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    7166:	46 f4       	brtc	.+16     	; 0x7178 <__divmodsi4_exit>
    7168:	08 c0       	rjmp	.+16     	; 0x717a <__negsi2>

0000716a <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    716a:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    716c:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    716e:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    7170:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    7172:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    7174:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    7176:	5f 4f       	sbci	r21, 0xFF	; 255

00007178 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    7178:	08 95       	ret

0000717a <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    717a:	90 95       	com	r25
    717c:	80 95       	com	r24
    717e:	70 95       	com	r23
    7180:	61 95       	neg	r22
    7182:	7f 4f       	sbci	r23, 0xFF	; 255
    7184:	8f 4f       	sbci	r24, 0xFF	; 255
    7186:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    7188:	08 95       	ret

0000718a <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    718a:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    718c:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    718e:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    7190:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    7192:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    7194:	09 94       	ijmp

00007196 <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    7196:	29 d0       	rcall	.+82     	; 0x71ea <__umulhisi3>

00007198 <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    7198:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    719a:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    719c:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    719e:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    71a0:	08 95       	ret

000071a2 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    71a2:	23 d0       	rcall	.+70     	; 0x71ea <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    71a4:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    71a6:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    71a8:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    71aa:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    71ac:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    71ae:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    71b0:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    71b2:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    71b4:	08 95       	ret

000071b6 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    71b6:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    71b8:	f4 cf       	rjmp	.-24     	; 0x71a2 <__muluhisi3>

000071ba <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    71ba:	f3 df       	rcall	.-26     	; 0x71a2 <__muluhisi3>
    71bc:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    71be:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    71c0:	08 95       	ret

000071c2 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    71c2:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    71c4:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    71c6:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    71c8:	07 c0       	rjmp	.+14     	; 0x71d8 <__udivmodhi4_ep>

000071ca <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    71ca:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    71cc:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    71ce:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    71d0:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    71d2:	10 f0       	brcs	.+4      	; 0x71d8 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    71d4:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    71d6:	b7 0b       	sbc	r27, r23

000071d8 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    71d8:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    71da:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    71dc:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    71de:	a9 f7       	brne	.-22     	; 0x71ca <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    71e0:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    71e2:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    71e4:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    71e6:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    71e8:	08 95       	ret

000071ea <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    71ea:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    71ec:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    71ee:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    71f0:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    71f2:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    71f4:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    71f6:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    71f8:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    71fa:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    71fc:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    71fe:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    7200:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    7202:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    7204:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    7206:	08 95       	ret

00007208 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    7208:	f8 94       	cli

0000720a <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    720a:	ff cf       	rjmp	.-2      	; 0x720a <__stop_program>

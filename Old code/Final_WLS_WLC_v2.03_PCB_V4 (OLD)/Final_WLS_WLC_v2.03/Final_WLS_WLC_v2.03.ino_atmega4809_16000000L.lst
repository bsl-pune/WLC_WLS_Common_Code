
C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_625990/Final_WLS_WLC_v2.03.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 43 1d 	jmp	0x3a86	; 0x3a86 <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 1b 1d 	jmp	0x3a36	; 0x3a36 <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	3a c0       	rjmp	.+116    	; 0x2f2 <__bad_interrupt>
     27e:	00 00       	nop
../../../../crt1/gcrt1.S:98
     280:	38 c0       	rjmp	.+112    	; 0x2f2 <__bad_interrupt>
     282:	00 00       	nop
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	d4 1d       	adc	r29, r4

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	e0 e1       	ldi	r30, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	fb e6       	ldi	r31, 0x6B	; 107
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a0 31       	cpi	r26, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a0 e1       	ldi	r26, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	a1 31       	cpi	r26, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 a0 34 	call	0x6940	; 0x6940 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 b8 20 	call	0x4170	; 0x4170 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 d9 34 	jmp	0x69b2	; 0x69b2 <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:94
  } 
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     2f4:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:95
}
     2f8:	08 95       	ret

000002fa <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:64
bool Alternate_Display_Flag=0;
bool select_product_type=0;

void Alternate_Display()
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     2fa:	80 91 74 28 	lds	r24, 0x2874	; 0x802874 <Alternate_Display_Flag>
     2fe:	88 23       	and	r24, r24
     300:	19 f0       	breq	.+6      	; 0x308 <Alternate_Display()+0xe>
     302:	10 92 74 28 	sts	0x2874, r1	; 0x802874 <Alternate_Display_Flag>
     306:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:65
  else                       Alternate_Display_Flag=1;
     308:	81 e0       	ldi	r24, 0x01	; 1
     30a:	80 93 74 28 	sts	0x2874, r24	; 0x802874 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:66
}
     30e:	08 95       	ret

00000310 <Bclass::SET_CHANGE_UP() [clone .constprop.66]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:63
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     310:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
     314:	88 23       	and	r24, r24
     316:	09 f4       	brne	.+2      	; 0x31a <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0xa>
     318:	5e c0       	rjmp	.+188    	; 0x3d6 <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:65
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     31a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     31e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	91 05       	cpc	r25, r1
     326:	71 f4       	brne	.+28     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x34>
     328:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
     32c:	22 23       	and	r18, r18
     32e:	51 f0       	breq	.+20     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x34>
     330:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
     334:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
     338:	2f 5f       	subi	r18, 0xFF	; 255
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x26>
     340:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x27>
     344:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
     348:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
     34c:	25 3d       	cpi	r18, 0xD5	; 213
     34e:	31 05       	cpc	r19, r1
     350:	a4 f0       	brlt	.+40     	; 0x37a <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x6a>
     352:	24 ed       	ldi	r18, 0xD4	; 212
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x26>
     35a:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:66
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     35e:	20 91 2b 29 	lds	r18, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
     362:	30 91 2c 29 	lds	r19, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
     366:	25 3d       	cpi	r18, 0xD5	; 213
     368:	31 05       	cpc	r19, r1
     36a:	cc f0       	brlt	.+50     	; 0x39e <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x8e>
     36c:	84 ed       	ldi	r24, 0xD4	; 212
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0x28>
     374:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0x29>
     378:	08 95       	ret
     37a:	88 30       	cpi	r24, 0x08	; 8
     37c:	91 05       	cpc	r25, r1
     37e:	79 f7       	brne	.-34     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x4e>
     380:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
     384:	22 23       	and	r18, r18
     386:	59 f3       	breq	.-42     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x4e>
     388:	20 91 2b 29 	lds	r18, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
     38c:	30 91 2c 29 	lds	r19, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	20 93 2b 29 	sts	0x292B, r18	; 0x80292b <SET_LONG_VALUE+0x28>
     398:	30 93 2c 29 	sts	0x292C, r19	; 0x80292c <SET_LONG_VALUE+0x29>
     39c:	e0 cf       	rjmp	.-64     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:69
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	fc 01       	movw	r30, r24
     3a4:	ed 5f       	subi	r30, 0xFD	; 253
     3a6:	f6 4d       	sbci	r31, 0xD6	; 214
     3a8:	20 81       	ld	r18, Z
     3aa:	31 81       	ldd	r19, Z+1	; 0x01
     3ac:	2f 5f       	subi	r18, 0xFF	; 255
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	20 83       	st	Z, r18
     3b2:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:70
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3b4:	dc 01       	movw	r26, r24
     3b6:	aa 51       	subi	r26, 0x1A	; 26
     3b8:	b5 45       	sbci	r27, 0x55	; 85
     3ba:	4d 91       	ld	r20, X+
     3bc:	5c 91       	ld	r21, X
     3be:	42 17       	cp	r20, r18
     3c0:	53 07       	cpc	r21, r19
     3c2:	0c f0       	brlt	.+2      	; 0x3c6 <Bclass::SET_CHANGE_UP() [clone .constprop.66]+0xb6>
     3c4:	8e c0       	rjmp	.+284    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     3c6:	80 54       	subi	r24, 0x40	; 64
     3c8:	95 45       	sbci	r25, 0x55	; 85
     3ca:	dc 01       	movw	r26, r24
     3cc:	8d 91       	ld	r24, X+
     3ce:	9c 91       	ld	r25, X
     3d0:	80 83       	st	Z, r24
     3d2:	91 83       	std	Z+1, r25	; 0x01
     3d4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:75
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3d6:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
     3da:	81 30       	cpi	r24, 0x01	; 1
     3dc:	b1 f4       	brne	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:77
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3de:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
     3e2:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <SET_VALUE+0x2>
     3ec:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <SET_VALUE+0x3>
     3f0:	20 91 f4 28 	lds	r18, 0x28F4	; 0x8028f4 <SAFE_VALUE_SET_DEG>
     3f4:	30 91 f5 28 	lds	r19, 0x28F5	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
     3f8:	28 17       	cp	r18, r24
     3fa:	39 07       	cpc	r19, r25
     3fc:	0c f0       	brlt	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	71 c0       	rjmp	.+226    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     400:	10 92 f8 28 	sts	0x28F8, r1	; 0x8028f8 <SET_VALUE+0x2>
     404:	10 92 f9 28 	sts	0x28F9, r1	; 0x8028f9 <SET_VALUE+0x3>
     408:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:79
               }
                else if( ENTER_BUT == 2 )   
     40a:	82 30       	cpi	r24, 0x02	; 2
     40c:	39 f5       	brne	.+78     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:81
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     40e:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
     412:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
     416:	01 96       	adiw	r24, 0x01	; 1
     418:	8a 30       	cpi	r24, 0x0A	; 10
     41a:	91 05       	cpc	r25, r1
     41c:	e4 f4       	brge	.+56     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     41e:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SET_VALUE+0x4>
     422:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:82
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     426:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
     42a:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x1f>
     434:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x20>
     438:	20 91 f2 28 	lds	r18, 0x28F2	; 0x8028f2 <SAFE_VALUE_SET_FAH>
     43c:	30 91 f3 28 	lds	r19, 0x28F3	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
     440:	28 17       	cp	r18, r24
     442:	39 07       	cpc	r19, r25
     444:	0c f0       	brlt	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	4d c0       	rjmp	.+154    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     448:	80 e2       	ldi	r24, 0x20	; 32
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x1f>
     450:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x20>
     454:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:81
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     456:	89 e0       	ldi	r24, 0x09	; 9
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	e1 cf       	rjmp	.-62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:84
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     45c:	83 30       	cpi	r24, 0x03	; 3
     45e:	91 f4       	brne	.+36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:86
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     460:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
     464:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	84 36       	cpi	r24, 0x64	; 100
     46c:	91 05       	cpc	r25, r1
     46e:	2c f4       	brge	.+10     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     470:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <SET_VALUE+0x6>
     474:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <SET_VALUE+0x7>
     478:	08 95       	ret
     47a:	10 92 fc 28 	sts	0x28FC, r1	; 0x8028fc <SET_VALUE+0x6>
     47e:	10 92 fd 28 	sts	0x28FD, r1	; 0x8028fd <SET_VALUE+0x7>
     482:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:88
               }
               else if( ENTER_BUT == 4 )   
     484:	84 30       	cpi	r24, 0x04	; 4
     486:	91 f4       	brne	.+36     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:90
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     488:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
     48c:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	8c 33       	cpi	r24, 0x3C	; 60
     494:	91 05       	cpc	r25, r1
     496:	2c f4       	brge	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     498:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <SET_VALUE+0x8>
     49c:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <SET_VALUE+0x9>
     4a0:	08 95       	ret
     4a2:	10 92 fe 28 	sts	0x28FE, r1	; 0x8028fe <SET_VALUE+0x8>
     4a6:	10 92 ff 28 	sts	0x28FF, r1	; 0x8028ff <SET_VALUE+0x9>
     4aa:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:92
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4ac:	85 30       	cpi	r24, 0x05	; 5
     4ae:	c9 f4       	brne	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b0:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <PUMP_FLAG>
     4b4:	88 23       	and	r24, r24
     4b6:	a9 f0       	breq	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b8:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
     4bc:	88 23       	and	r24, r24
     4be:	89 f0       	breq	.+34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:94
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4c0:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0xa>
     4c4:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0xb>
     4c8:	01 96       	adiw	r24, 0x01	; 1
     4ca:	82 30       	cpi	r24, 0x02	; 2
     4cc:	91 05       	cpc	r25, r1
     4ce:	2c f4       	brge	.+10     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d0:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0xa>
     4d4:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0xb>
     4d8:	08 95       	ret
     4da:	10 92 00 29 	sts	0x2900, r1	; 0x802900 <SET_VALUE+0xa>
     4de:	10 92 01 29 	sts	0x2901, r1	; 0x802901 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:97
               }
  }
}
     4e2:	08 95       	ret

000004e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:101

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4e4:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
     4e8:	88 23       	and	r24, r24
     4ea:	09 f4       	brne	.+2      	; 0x4ee <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0xa>
     4ec:	57 c0       	rjmp	.+174    	; 0x59c <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:103
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     4ee:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     4f2:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	91 05       	cpc	r25, r1
     4fa:	71 f4       	brne	.+28     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x34>
     4fc:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
     500:	22 23       	and	r18, r18
     502:	51 f0       	breq	.+20     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x34>
     504:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
     508:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
     50c:	21 50       	subi	r18, 0x01	; 1
     50e:	31 09       	sbc	r19, r1
     510:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x26>
     514:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x27>
     518:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
     51c:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
     520:	20 32       	cpi	r18, 0x20	; 32
     522:	31 05       	cpc	r19, r1
     524:	a4 f4       	brge	.+40     	; 0x54e <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x6a>
     526:	20 e2       	ldi	r18, 0x20	; 32
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x26>
     52e:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:104
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     532:	20 91 2b 29 	lds	r18, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
     536:	30 91 2c 29 	lds	r19, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
     53a:	20 32       	cpi	r18, 0x20	; 32
     53c:	31 05       	cpc	r19, r1
     53e:	cc f4       	brge	.+50     	; 0x572 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x8e>
     540:	80 e2       	ldi	r24, 0x20	; 32
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0x28>
     548:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0x29>
     54c:	08 95       	ret
     54e:	88 30       	cpi	r24, 0x08	; 8
     550:	91 05       	cpc	r25, r1
     552:	79 f7       	brne	.-34     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x4e>
     554:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
     558:	22 23       	and	r18, r18
     55a:	59 f3       	breq	.-42     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x4e>
     55c:	20 91 2b 29 	lds	r18, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
     560:	30 91 2c 29 	lds	r19, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
     564:	21 50       	subi	r18, 0x01	; 1
     566:	31 09       	sbc	r19, r1
     568:	20 93 2b 29 	sts	0x292B, r18	; 0x80292b <SET_LONG_VALUE+0x28>
     56c:	30 93 2c 29 	sts	0x292C, r19	; 0x80292c <SET_LONG_VALUE+0x29>
     570:	e0 cf       	rjmp	.-64     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:107
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     572:	88 0f       	add	r24, r24
     574:	99 1f       	adc	r25, r25
     576:	fc 01       	movw	r30, r24
     578:	ed 5f       	subi	r30, 0xFD	; 253
     57a:	f6 4d       	sbci	r31, 0xD6	; 214
     57c:	20 81       	ld	r18, Z
     57e:	31 81       	ldd	r19, Z+1	; 0x01
     580:	21 50       	subi	r18, 0x01	; 1
     582:	31 09       	sbc	r19, r1
     584:	20 83       	st	Z, r18
     586:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:108
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     588:	37 ff       	sbrs	r19, 7
     58a:	8c c0       	rjmp	.+280    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
     58c:	8a 56       	subi	r24, 0x6A	; 106
     58e:	95 45       	sbci	r25, 0x55	; 85
     590:	dc 01       	movw	r26, r24
     592:	8d 91       	ld	r24, X+
     594:	9c 91       	ld	r25, X
     596:	80 83       	st	Z, r24
     598:	91 83       	std	Z+1, r25	; 0x01
     59a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:113
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     59c:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	a1 f4       	brne	.+40     	; 0x5cc <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:115
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5a4:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
     5a8:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <SET_VALUE+0x2>
     5b2:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <SET_VALUE+0x3>
     5b6:	97 ff       	sbrs	r25, 7
     5b8:	75 c0       	rjmp	.+234    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
     5ba:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <SAFE_VALUE_SET_DEG>
     5be:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
     5c2:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <SET_VALUE+0x2>
     5c6:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <SET_VALUE+0x3>
     5ca:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:117
    }
    else if( ENTER_BUT == 2 )   
     5cc:	82 30       	cpi	r24, 0x02	; 2
     5ce:	99 f5       	brne	.+102    	; 0x636 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:119
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5d0:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
     5d4:	81 11       	cpse	r24, r1
     5d6:	09 c0       	rjmp	.+18     	; 0x5ea <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x106>
     5d8:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
     5dc:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SET_VALUE+0x4>
     5e6:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SET_VALUE+0x5>
     5ea:	80 91 fa 28 	lds	r24, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
     5ee:	90 91 fb 28 	lds	r25, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
     5f2:	97 ff       	sbrs	r25, 7
     5f4:	16 c0       	rjmp	.+44     	; 0x622 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x13e>
     5f6:	89 e0       	ldi	r24, 0x09	; 9
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SET_VALUE+0x4>
     5fe:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:120
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     602:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
     606:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
     60a:	80 97       	sbiw	r24, 0x20	; 32
     60c:	0c f0       	brlt	.+2      	; 0x610 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x12c>
     60e:	4a c0       	rjmp	.+148    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
     610:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <SAFE_VALUE_SET_FAH>
     614:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
     618:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x1f>
     61c:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x20>
     620:	08 95       	ret
     622:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
     626:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x1f>
     630:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x20>
     634:	e6 cf       	rjmp	.-52     	; 0x602 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:122
    }
    else if( ENTER_BUT == 3 )   
     636:	83 30       	cpi	r24, 0x03	; 3
     638:	79 f4       	brne	.+30     	; 0x658 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:124
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     63a:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
     63e:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	97 fd       	sbrc	r25, 7
     646:	05 c0       	rjmp	.+10     	; 0x652 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x16e>
     648:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <SET_VALUE+0x6>
     64c:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <SET_VALUE+0x7>
     650:	08 95       	ret
     652:	83 e6       	ldi	r24, 0x63	; 99
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	f8 cf       	rjmp	.-16     	; 0x648 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:126
    }
    else if( ENTER_BUT == 4 )   
     658:	84 30       	cpi	r24, 0x04	; 4
     65a:	79 f4       	brne	.+30     	; 0x67a <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:128
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     65c:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
     660:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	97 fd       	sbrc	r25, 7
     668:	05 c0       	rjmp	.+10     	; 0x674 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x190>
     66a:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <SET_VALUE+0x8>
     66e:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <SET_VALUE+0x9>
     672:	08 95       	ret
     674:	8b e3       	ldi	r24, 0x3B	; 59
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	f8 cf       	rjmp	.-16     	; 0x66a <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:130
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     67a:	85 30       	cpi	r24, 0x05	; 5
     67c:	99 f4       	brne	.+38     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
     67e:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <PUMP_FLAG>
     682:	88 23       	and	r24, r24
     684:	79 f0       	breq	.+30     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
     686:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
     68a:	88 23       	and	r24, r24
     68c:	59 f0       	breq	.+22     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:132
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     68e:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0xa>
     692:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0xb>
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	97 fd       	sbrc	r25, 7
     69a:	05 c0       	rjmp	.+10     	; 0x6a6 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1c2>
     69c:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0xa>
     6a0:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:135
    }
  }
}
     6a4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Butn.cpp:132
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	f8 cf       	rjmp	.-16     	; 0x69c <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]+0x1b8>

000006ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:201
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_4, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:203
{ 
    first_digit = num / 1000;
     6b6:	28 ee       	ldi	r18, 0xE8	; 232
     6b8:	33 e0       	ldi	r19, 0x03	; 3
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	0e 94 84 34 	call	0x6908	; 0x6908 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:204
    digits1[0] = first_digit;
     6c2:	e4 ee       	ldi	r30, 0xE4	; 228
     6c4:	f8 e2       	ldi	r31, 0x28	; 40
     6c6:	20 83       	st	Z, r18
     6c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:205
    int first_left = num - (first_digit * 1000);
     6ca:	68 ee       	ldi	r22, 0xE8	; 232
     6cc:	73 e0       	ldi	r23, 0x03	; 3
     6ce:	62 9f       	mul	r22, r18
     6d0:	c0 01       	movw	r24, r0
     6d2:	63 9f       	mul	r22, r19
     6d4:	90 0d       	add	r25, r0
     6d6:	72 9f       	mul	r23, r18
     6d8:	90 0d       	add	r25, r0
     6da:	11 24       	eor	r1, r1
     6dc:	c8 1a       	sub	r12, r24
     6de:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:206
    second_digit = first_left / 100;
     6e0:	c6 01       	movw	r24, r12
     6e2:	64 e6       	ldi	r22, 0x64	; 100
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:207
    digits1[1] = second_digit;
     6ea:	62 83       	std	Z+2, r22	; 0x02
     6ec:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:208
    int second_left = first_left - (second_digit * 100);
     6ee:	2c e9       	ldi	r18, 0x9C	; 156
     6f0:	26 03       	mulsu	r18, r22
     6f2:	c0 01       	movw	r24, r0
     6f4:	27 9f       	mul	r18, r23
     6f6:	90 0d       	add	r25, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	c8 0e       	add	r12, r24
     6fc:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:209
    third_digit = second_left / 10;
     6fe:	c6 01       	movw	r24, r12
     700:	6a e0       	ldi	r22, 0x0A	; 10
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:210
    digits1[2] = third_digit;
     708:	64 83       	std	Z+4, r22	; 0x04
     70a:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:211
    fourth_digit = second_left - (third_digit * 10);
     70c:	26 ef       	ldi	r18, 0xF6	; 246
     70e:	26 03       	mulsu	r18, r22
     710:	c0 01       	movw	r24, r0
     712:	27 9f       	mul	r18, r23
     714:	90 0d       	add	r25, r0
     716:	11 24       	eor	r1, r1
     718:	c8 0e       	add	r12, r24
     71a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:212
    digits1[3] = fourth_digit;
     71c:	c6 82       	std	Z+6, r12	; 0x06
     71e:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:213
}
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:215

void Eclass:: BREAK_NUMBER2(long num2) 
     72a:	cf 92       	push	r12
     72c:	df 92       	push	r13
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:217
{ 
    first_digit2 = num2 / 1000;
     734:	28 ee       	ldi	r18, 0xE8	; 232
     736:	33 e0       	ldi	r19, 0x03	; 3
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	0e 94 84 34 	call	0x6908	; 0x6908 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:218
    digits2[0] = first_digit2;
     740:	ec ed       	ldi	r30, 0xDC	; 220
     742:	f8 e2       	ldi	r31, 0x28	; 40
     744:	20 83       	st	Z, r18
     746:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:219
    int first_left2 = num2 - (first_digit2 * 1000);
     748:	68 ee       	ldi	r22, 0xE8	; 232
     74a:	73 e0       	ldi	r23, 0x03	; 3
     74c:	62 9f       	mul	r22, r18
     74e:	c0 01       	movw	r24, r0
     750:	63 9f       	mul	r22, r19
     752:	90 0d       	add	r25, r0
     754:	72 9f       	mul	r23, r18
     756:	90 0d       	add	r25, r0
     758:	11 24       	eor	r1, r1
     75a:	c8 1a       	sub	r12, r24
     75c:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:220
    second_digit2 = first_left2 / 100;
     75e:	c6 01       	movw	r24, r12
     760:	64 e6       	ldi	r22, 0x64	; 100
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:221
    digits2[1] = second_digit2;
     768:	62 83       	std	Z+2, r22	; 0x02
     76a:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:222
    int second_left2 = first_left2 - (second_digit2 * 100);
     76c:	2c e9       	ldi	r18, 0x9C	; 156
     76e:	26 03       	mulsu	r18, r22
     770:	c0 01       	movw	r24, r0
     772:	27 9f       	mul	r18, r23
     774:	90 0d       	add	r25, r0
     776:	11 24       	eor	r1, r1
     778:	c8 0e       	add	r12, r24
     77a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:223
    third_digit2 = second_left2 / 10;
     77c:	c6 01       	movw	r24, r12
     77e:	6a e0       	ldi	r22, 0x0A	; 10
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:224
    digits2[2] = third_digit2;
     786:	64 83       	std	Z+4, r22	; 0x04
     788:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:225
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     78a:	26 ef       	ldi	r18, 0xF6	; 246
     78c:	26 03       	mulsu	r18, r22
     78e:	c0 01       	movw	r24, r0
     790:	27 9f       	mul	r18, r23
     792:	90 0d       	add	r25, r0
     794:	11 24       	eor	r1, r1
     796:	c8 0e       	add	r12, r24
     798:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:226
    digits2[3] = fourth_digit2;
     79a:	c6 82       	std	Z+6, r12	; 0x06
     79c:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:227
}
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	08 95       	ret

000007a8 <PID::SetTunings(double, double, double) [clone .constprop.30]>:
SetTunings():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:127
}

/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
     7a8:	4f 92       	push	r4
     7aa:	5f 92       	push	r5
     7ac:	6f 92       	push	r6
     7ae:	7f 92       	push	r7
     7b0:	8f 92       	push	r8
     7b2:	9f 92       	push	r9
     7b4:	af 92       	push	r10
     7b6:	bf 92       	push	r11
     7b8:	cf 92       	push	r12
     7ba:	df 92       	push	r13
     7bc:	ef 92       	push	r14
     7be:	ff 92       	push	r15
     7c0:	0f 93       	push	r16
     7c2:	1f 93       	push	r17
     7c4:	cf 93       	push	r28
     7c6:	df 93       	push	r29
     7c8:	00 d0       	rcall	.+0      	; 0x7ca <PID::SetTunings(double, double, double) [clone .constprop.30]+0x22>
     7ca:	00 d0       	rcall	.+0      	; 0x7cc <PID::SetTunings(double, double, double) [clone .constprop.30]+0x24>
     7cc:	cd b7       	in	r28, 0x3d	; 61
     7ce:	de b7       	in	r29, 0x3e	; 62
     7d0:	4b 01       	movw	r8, r22
     7d2:	5c 01       	movw	r10, r24
     7d4:	29 01       	movw	r4, r18
     7d6:	3a 01       	movw	r6, r20
     7d8:	67 01       	movw	r12, r14
     7da:	78 01       	movw	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:104
 * it's called automatically from the constructor, but tunings can also
 * be adjusted on the fly during normal operation
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	a9 01       	movw	r20, r18
     7e2:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
     7e6:	87 fd       	sbrc	r24, 7
     7e8:	a6 c0       	rjmp	.+332    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.30]+0x18e>
     7ea:	20 e0       	ldi	r18, 0x00	; 0
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	a9 01       	movw	r20, r18
     7f0:	c3 01       	movw	r24, r6
     7f2:	b2 01       	movw	r22, r4
     7f4:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
     7f8:	87 fd       	sbrc	r24, 7
     7fa:	9d c0       	rjmp	.+314    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.30]+0x18e>
     7fc:	20 e0       	ldi	r18, 0x00	; 0
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	a9 01       	movw	r20, r18
     802:	c8 01       	movw	r24, r16
     804:	b6 01       	movw	r22, r12
     806:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
     80a:	87 fd       	sbrc	r24, 7
     80c:	94 c0       	rjmp	.+296    	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.30]+0x18e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107

   pOn = POn;
   pOnE = POn == P_ON_E;
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	20 91 5d 29 	lds	r18, 0x295D	; 0x80295d <myPID+0x1a>
     814:	30 91 5e 29 	lds	r19, 0x295E	; 0x80295e <myPID+0x1b>
     818:	21 30       	cpi	r18, 0x01	; 1
     81a:	31 05       	cpc	r19, r1
     81c:	09 f0       	breq	.+2      	; 0x820 <PID::SetTunings(double, double, double) [clone .constprop.30]+0x78>
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	80 93 7e 29 	sts	0x297E, r24	; 0x80297e <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
     824:	80 92 43 29 	sts	0x2943, r8	; 0x802943 <myPID>
     828:	90 92 44 29 	sts	0x2944, r9	; 0x802944 <myPID+0x1>
     82c:	a0 92 45 29 	sts	0x2945, r10	; 0x802945 <myPID+0x2>
     830:	b0 92 46 29 	sts	0x2946, r11	; 0x802946 <myPID+0x3>
     834:	40 92 47 29 	sts	0x2947, r4	; 0x802947 <myPID+0x4>
     838:	50 92 48 29 	sts	0x2948, r5	; 0x802948 <myPID+0x5>
     83c:	60 92 49 29 	sts	0x2949, r6	; 0x802949 <myPID+0x6>
     840:	70 92 4a 29 	sts	0x294A, r7	; 0x80294a <myPID+0x7>
     844:	c0 92 4b 29 	sts	0x294B, r12	; 0x80294b <myPID+0x8>
     848:	d0 92 4c 29 	sts	0x294C, r13	; 0x80294c <myPID+0x9>
     84c:	e0 92 4d 29 	sts	0x294D, r14	; 0x80294d <myPID+0xa>
     850:	f0 92 4e 29 	sts	0x294E, r15	; 0x80294e <myPID+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:111

   double SampleTimeInSec = ((double)SampleTime)/1000;
     854:	60 91 71 29 	lds	r22, 0x2971	; 0x802971 <myPID+0x2e>
     858:	70 91 72 29 	lds	r23, 0x2972	; 0x802972 <myPID+0x2f>
     85c:	80 91 73 29 	lds	r24, 0x2973	; 0x802973 <myPID+0x30>
     860:	90 91 74 29 	lds	r25, 0x2974	; 0x802974 <myPID+0x31>
     864:	0e 94 36 33 	call	0x666c	; 0x666c <__floatunsisf>
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	4a e7       	ldi	r20, 0x7A	; 122
     86e:	54 e4       	ldi	r21, 0x44	; 68
     870:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     874:	69 83       	std	Y+1, r22	; 0x01
     876:	7a 83       	std	Y+2, r23	; 0x02
     878:	8b 83       	std	Y+3, r24	; 0x03
     87a:	9c 83       	std	Y+4, r25	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112
   kp = Kp;
     87c:	80 92 4f 29 	sts	0x294F, r8	; 0x80294f <myPID+0xc>
     880:	90 92 50 29 	sts	0x2950, r9	; 0x802950 <myPID+0xd>
     884:	a0 92 51 29 	sts	0x2951, r10	; 0x802951 <myPID+0xe>
     888:	b0 92 52 29 	sts	0x2952, r11	; 0x802952 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
     88c:	9b 01       	movw	r18, r22
     88e:	ac 01       	movw	r20, r24
     890:	c3 01       	movw	r24, r6
     892:	b2 01       	movw	r22, r4
     894:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
     898:	2b 01       	movw	r4, r22
     89a:	3c 01       	movw	r6, r24
     89c:	40 92 53 29 	sts	0x2953, r4	; 0x802953 <myPID+0x10>
     8a0:	50 92 54 29 	sts	0x2954, r5	; 0x802954 <myPID+0x11>
     8a4:	60 92 55 29 	sts	0x2955, r6	; 0x802955 <myPID+0x12>
     8a8:	70 92 56 29 	sts	0x2956, r7	; 0x802956 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
     8ac:	29 81       	ldd	r18, Y+1	; 0x01
     8ae:	3a 81       	ldd	r19, Y+2	; 0x02
     8b0:	4b 81       	ldd	r20, Y+3	; 0x03
     8b2:	5c 81       	ldd	r21, Y+4	; 0x04
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     8bc:	6b 01       	movw	r12, r22
     8be:	7c 01       	movw	r14, r24
     8c0:	c0 92 57 29 	sts	0x2957, r12	; 0x802957 <myPID+0x14>
     8c4:	d0 92 58 29 	sts	0x2958, r13	; 0x802958 <myPID+0x15>
     8c8:	e0 92 59 29 	sts	0x2959, r14	; 0x802959 <myPID+0x16>
     8cc:	f0 92 5a 29 	sts	0x295A, r15	; 0x80295a <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
     8d0:	80 91 5b 29 	lds	r24, 0x295B	; 0x80295b <myPID+0x18>
     8d4:	90 91 5c 29 	lds	r25, 0x295C	; 0x80295c <myPID+0x19>
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	69 f5       	brne	.+90     	; 0x936 <PID::SetTunings(double, double, double) [clone .constprop.30]+0x18e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
     8dc:	a5 01       	movw	r20, r10
     8de:	94 01       	movw	r18, r8
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	cb 01       	movw	r24, r22
     8e6:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     8ea:	60 93 4f 29 	sts	0x294F, r22	; 0x80294f <myPID+0xc>
     8ee:	70 93 50 29 	sts	0x2950, r23	; 0x802950 <myPID+0xd>
     8f2:	80 93 51 29 	sts	0x2951, r24	; 0x802951 <myPID+0xe>
     8f6:	90 93 52 29 	sts	0x2952, r25	; 0x802952 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
     8fa:	a3 01       	movw	r20, r6
     8fc:	92 01       	movw	r18, r4
     8fe:	60 e0       	ldi	r22, 0x00	; 0
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	cb 01       	movw	r24, r22
     904:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     908:	60 93 53 29 	sts	0x2953, r22	; 0x802953 <myPID+0x10>
     90c:	70 93 54 29 	sts	0x2954, r23	; 0x802954 <myPID+0x11>
     910:	80 93 55 29 	sts	0x2955, r24	; 0x802955 <myPID+0x12>
     914:	90 93 56 29 	sts	0x2956, r25	; 0x802956 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
     918:	a7 01       	movw	r20, r14
     91a:	96 01       	movw	r18, r12
     91c:	60 e0       	ldi	r22, 0x00	; 0
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	cb 01       	movw	r24, r22
     922:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     926:	60 93 57 29 	sts	0x2957, r22	; 0x802957 <myPID+0x14>
     92a:	70 93 58 29 	sts	0x2958, r23	; 0x802958 <myPID+0x15>
     92e:	80 93 59 29 	sts	0x2959, r24	; 0x802959 <myPID+0x16>
     932:	90 93 5a 29 	sts	0x295A, r25	; 0x80295a <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:129
/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
    SetTunings(Kp, Ki, Kd, pOn); 
}
     936:	24 96       	adiw	r28, 0x04	; 4
     938:	cd bf       	out	0x3d, r28	; 61
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	ef 90       	pop	r14
     948:	df 90       	pop	r13
     94a:	cf 90       	pop	r12
     94c:	bf 90       	pop	r11
     94e:	af 90       	pop	r10
     950:	9f 90       	pop	r9
     952:	8f 90       	pop	r8
     954:	7f 90       	pop	r7
     956:	6f 90       	pop	r6
     958:	5f 90       	pop	r5
     95a:	4f 90       	pop	r4
     95c:	08 95       	ret

0000095e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:56
      sample = 0;   AvgVout = 0;   
    }
   avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     95e:	4f 92       	push	r4
     960:	5f 92       	push	r5
     962:	6f 92       	push	r6
     964:	7f 92       	push	r7
     966:	8f 92       	push	r8
     968:	9f 92       	push	r9
     96a:	af 92       	push	r10
     96c:	bf 92       	push	r11
     96e:	cf 92       	push	r12
     970:	df 92       	push	r13
     972:	ef 92       	push	r14
     974:	ff 92       	push	r15
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e2       	ldi	r20, 0x20	; 32
     97c:	51 e4       	ldi	r21, 0x41	; 65
     97e:	60 91 ec 28 	lds	r22, 0x28EC	; 0x8028ec <ERROR_CAL1>
     982:	70 91 ed 28 	lds	r23, 0x28ED	; 0x8028ed <ERROR_CAL1+0x1>
     986:	80 91 ee 28 	lds	r24, 0x28EE	; 0x8028ee <ERROR_CAL1+0x2>
     98a:	90 91 ef 28 	lds	r25, 0x28EF	; 0x8028ef <ERROR_CAL1+0x3>
     98e:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:58
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     992:	20 91 cf 28 	lds	r18, 0x28CF	; 0x8028cf <SIGN>
     996:	21 11       	cpse	r18, r1
     998:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:59
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     99a:	60 93 cb 28 	sts	0x28CB, r22	; 0x8028cb <ERROR_CAL>
     99e:	70 93 cc 28 	sts	0x28CC, r23	; 0x8028cc <ERROR_CAL+0x1>
     9a2:	80 93 cd 28 	sts	0x28CD, r24	; 0x8028cd <ERROR_CAL+0x2>
     9a6:	90 93 ce 28 	sts	0x28CE, r25	; 0x8028ce <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:61
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     9aa:	f0 90 ca 28 	lds	r15, 0x28CA	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
     9ae:	ff 20       	and	r15, r15
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x56>
     9b2:	55 c0       	rjmp	.+170    	; 0xa5e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x100>
     9b4:	20 91 cb 28 	lds	r18, 0x28CB	; 0x8028cb <ERROR_CAL>
     9b8:	30 91 cc 28 	lds	r19, 0x28CC	; 0x8028cc <ERROR_CAL+0x1>
     9bc:	40 91 cd 28 	lds	r20, 0x28CD	; 0x8028cd <ERROR_CAL+0x2>
     9c0:	50 91 ce 28 	lds	r21, 0x28CE	; 0x8028ce <ERROR_CAL+0x3>
     9c4:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
     9c8:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
     9cc:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
     9d0:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
     9d4:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
     9d8:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <TEMP_DEG_RAW2>
     9dc:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <TEMP_DEG_RAW2+0x1>
     9e0:	80 93 c8 28 	sts	0x28C8, r24	; 0x8028c8 <TEMP_DEG_RAW2+0x2>
     9e4:	90 93 c9 28 	sts	0x28C9, r25	; 0x8028c9 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:64
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
    
    if (!CAL_SELECT_VALUE)
     9e8:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <CAL_SELECT_VALUE>
     9ec:	90 91 bc 28 	lds	r25, 0x28BC	; 0x8028bc <CAL_SELECT_VALUE+0x1>
     9f0:	89 2b       	or	r24, r25
     9f2:	09 f0       	breq	.+2      	; 0x9f6 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x98>
     9f4:	7e c0       	rjmp	.+252    	; 0xaf2 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:67
    {
//      if (!DEGREE_VALUE_SET){
        if(ERROR_SET_IN_DEG_FLAG)                         
     9f6:	ff 20       	and	r15, r15
     9f8:	09 f4       	brne	.+2      	; 0x9fc <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x9e>
     9fa:	50 c0       	rjmp	.+160    	; 0xa9c <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:69
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     9fc:	60 91 c6 28 	lds	r22, 0x28C6	; 0x8028c6 <TEMP_DEG_RAW2>
     a00:	70 91 c7 28 	lds	r23, 0x28C7	; 0x8028c7 <TEMP_DEG_RAW2+0x1>
     a04:	80 91 c8 28 	lds	r24, 0x28C8	; 0x8028c8 <TEMP_DEG_RAW2+0x2>
     a08:	90 91 c9 28 	lds	r25, 0x28C9	; 0x8028c9 <TEMP_DEG_RAW2+0x3>
     a0c:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <TEMP_DEG>
     a10:	70 93 d9 28 	sts	0x28D9, r23	; 0x8028d9 <TEMP_DEG+0x1>
     a14:	80 93 da 28 	sts	0x28DA, r24	; 0x8028da <TEMP_DEG+0x2>
     a18:	90 93 db 28 	sts	0x28DB, r25	; 0x8028db <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:70
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     a1c:	26 e6       	ldi	r18, 0x66	; 102
     a1e:	36 e6       	ldi	r19, 0x66	; 102
     a20:	46 ee       	ldi	r20, 0xE6	; 230
     a22:	5f e3       	ldi	r21, 0x3F	; 63
     a24:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 e0       	ldi	r20, 0x00	; 0
     a2e:	52 e4       	ldi	r21, 0x42	; 66
     a30:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
     a34:	60 93 b7 28 	sts	0x28B7, r22	; 0x8028b7 <TEMP_FAH>
     a38:	70 93 b8 28 	sts	0x28B8, r23	; 0x8028b8 <TEMP_FAH+0x1>
     a3c:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <TEMP_FAH+0x2>
     a40:	90 93 ba 28 	sts	0x28BA, r25	; 0x8028ba <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:88
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW,  MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9;
   }
}
     a44:	ff 90       	pop	r15
     a46:	ef 90       	pop	r14
     a48:	df 90       	pop	r13
     a4a:	cf 90       	pop	r12
     a4c:	bf 90       	pop	r11
     a4e:	af 90       	pop	r10
     a50:	9f 90       	pop	r9
     a52:	8f 90       	pop	r8
     a54:	7f 90       	pop	r7
     a56:	6f 90       	pop	r6
     a58:	5f 90       	pop	r5
     a5a:	4f 90       	pop	r4
     a5c:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:62
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
     a5e:	80 91 c5 28 	lds	r24, 0x28C5	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
     a62:	88 23       	and	r24, r24
     a64:	09 f2       	breq	.-126    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x8a>
     a66:	20 91 cb 28 	lds	r18, 0x28CB	; 0x8028cb <ERROR_CAL>
     a6a:	30 91 cc 28 	lds	r19, 0x28CC	; 0x8028cc <ERROR_CAL+0x1>
     a6e:	40 91 cd 28 	lds	r20, 0x28CD	; 0x8028cd <ERROR_CAL+0x2>
     a72:	50 91 ce 28 	lds	r21, 0x28CE	; 0x8028ce <ERROR_CAL+0x3>
     a76:	60 91 c1 28 	lds	r22, 0x28C1	; 0x8028c1 <TEMP_FAH_RAW>
     a7a:	70 91 c2 28 	lds	r23, 0x28C2	; 0x8028c2 <TEMP_FAH_RAW+0x1>
     a7e:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <TEMP_FAH_RAW+0x2>
     a82:	90 91 c4 28 	lds	r25, 0x28C4	; 0x8028c4 <TEMP_FAH_RAW+0x3>
     a86:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
     a8a:	60 93 bd 28 	sts	0x28BD, r22	; 0x8028bd <TEMP_FAH_RAW2>
     a8e:	70 93 be 28 	sts	0x28BE, r23	; 0x8028be <TEMP_FAH_RAW2+0x1>
     a92:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <TEMP_FAH_RAW2+0x2>
     a96:	90 93 c0 28 	sts	0x28C0, r25	; 0x8028c0 <TEMP_FAH_RAW2+0x3>
     a9a:	a6 cf       	rjmp	.-180    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:72
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     a9c:	80 91 c5 28 	lds	r24, 0x28C5	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
     aa0:	88 23       	and	r24, r24
     aa2:	81 f2       	breq	.-96     	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:74
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     aa4:	c0 90 bd 28 	lds	r12, 0x28BD	; 0x8028bd <TEMP_FAH_RAW2>
     aa8:	d0 90 be 28 	lds	r13, 0x28BE	; 0x8028be <TEMP_FAH_RAW2+0x1>
     aac:	e0 90 bf 28 	lds	r14, 0x28BF	; 0x8028bf <TEMP_FAH_RAW2+0x2>
     ab0:	f0 90 c0 28 	lds	r15, 0x28C0	; 0x8028c0 <TEMP_FAH_RAW2+0x3>
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	40 e0       	ldi	r20, 0x00	; 0
     aba:	52 e4       	ldi	r21, 0x42	; 66
     abc:	c7 01       	movw	r24, r14
     abe:	b6 01       	movw	r22, r12
     ac0:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     ac4:	26 e6       	ldi	r18, 0x66	; 102
     ac6:	36 e6       	ldi	r19, 0x66	; 102
     ac8:	46 ee       	ldi	r20, 0xE6	; 230
     aca:	5f e3       	ldi	r21, 0x3F	; 63
     acc:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     ad0:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <TEMP_DEG>
     ad4:	70 93 d9 28 	sts	0x28D9, r23	; 0x8028d9 <TEMP_DEG+0x1>
     ad8:	80 93 da 28 	sts	0x28DA, r24	; 0x8028da <TEMP_DEG+0x2>
     adc:	90 93 db 28 	sts	0x28DB, r25	; 0x8028db <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:75
          TEMP_FAH  =  TEMP_FAH_RAW2;
     ae0:	c0 92 b7 28 	sts	0x28B7, r12	; 0x8028b7 <TEMP_FAH>
     ae4:	d0 92 b8 28 	sts	0x28B8, r13	; 0x8028b8 <TEMP_FAH+0x1>
     ae8:	e0 92 b9 28 	sts	0x28B9, r14	; 0x8028b9 <TEMP_FAH+0x2>
     aec:	f0 92 ba 28 	sts	0x28BA, r15	; 0x8028ba <TEMP_FAH+0x3>
     af0:	a9 cf       	rjmp	.-174    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:80
        }      
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     af2:	60 91 b3 28 	lds	r22, 0x28B3	; 0x8028b3 <CAL2_RAW_LOW_VALUE_CONV>
     af6:	70 91 b4 28 	lds	r23, 0x28B4	; 0x8028b4 <CAL2_RAW_LOW_VALUE_CONV+0x1>
     afa:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <CAL2_RAW_LOW_VALUE_CONV+0x2>
     afe:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <CAL2_RAW_LOW_VALUE_CONV+0x3>
     b02:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	40 e2       	ldi	r20, 0x20	; 32
     b0c:	51 e4       	ldi	r21, 0x41	; 65
     b0e:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     b12:	4b 01       	movw	r8, r22
     b14:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:82
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     b16:	60 91 ab 28 	lds	r22, 0x28AB	; 0x8028ab <MASTER_LOW_CONV>
     b1a:	70 91 ac 28 	lds	r23, 0x28AC	; 0x8028ac <MASTER_LOW_CONV+0x1>
     b1e:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <MASTER_LOW_CONV+0x2>
     b22:	90 91 ae 28 	lds	r25, 0x28AE	; 0x8028ae <MASTER_LOW_CONV+0x3>
     b26:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	40 e2       	ldi	r20, 0x20	; 32
     b30:	51 e4       	ldi	r21, 0x41	; 65
     b32:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     b36:	6b 01       	movw	r12, r22
     b38:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:83
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     b3a:	60 91 a7 28 	lds	r22, 0x28A7	; 0x8028a7 <MASTER_HIGH_CONV>
     b3e:	70 91 a8 28 	lds	r23, 0x28A8	; 0x8028a8 <MASTER_HIGH_CONV+0x1>
     b42:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <MASTER_HIGH_CONV+0x2>
     b46:	90 91 aa 28 	lds	r25, 0x28AA	; 0x8028aa <MASTER_HIGH_CONV+0x3>
     b4a:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e2       	ldi	r20, 0x20	; 32
     b54:	51 e4       	ldi	r21, 0x41	; 65
     b56:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     b5a:	a7 01       	movw	r20, r14
     b5c:	96 01       	movw	r18, r12
     b5e:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     b62:	2b 01       	movw	r4, r22
     b64:	3c 01       	movw	r6, r24
     b66:	a5 01       	movw	r20, r10
     b68:	94 01       	movw	r18, r8
     b6a:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
     b6e:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
     b72:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
     b76:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
     b7a:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     b7e:	9b 01       	movw	r18, r22
     b80:	ac 01       	movw	r20, r24
     b82:	c3 01       	movw	r24, r6
     b84:	b2 01       	movw	r22, r4
     b86:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
     b8a:	2b 01       	movw	r4, r22
     b8c:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:81
        }      
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     b8e:	60 91 af 28 	lds	r22, 0x28AF	; 0x8028af <CAL2_RAW_HIGH_VALUE_CONV>
     b92:	70 91 b0 28 	lds	r23, 0x28B0	; 0x8028b0 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     b96:	80 91 b1 28 	lds	r24, 0x28B1	; 0x8028b1 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     b9a:	90 91 b2 28 	lds	r25, 0x28B2	; 0x8028b2 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     b9e:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 e2       	ldi	r20, 0x20	; 32
     ba8:	51 e4       	ldi	r21, 0x41	; 65
     baa:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     bae:	a5 01       	movw	r20, r10
     bb0:	94 01       	movw	r18, r8
     bb2:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
     bb6:	9b 01       	movw	r18, r22
     bb8:	ac 01       	movw	r20, r24
     bba:	c3 01       	movw	r24, r6
     bbc:	b2 01       	movw	r22, r4
     bbe:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
     bc2:	a7 01       	movw	r20, r14
     bc4:	96 01       	movw	r18, r12
     bc6:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
     bca:	6b 01       	movw	r12, r22
     bcc:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:84
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW,  MASTER_HIGH);
     bce:	c0 92 d8 28 	sts	0x28D8, r12	; 0x8028d8 <TEMP_DEG>
     bd2:	d0 92 d9 28 	sts	0x28D9, r13	; 0x8028d9 <TEMP_DEG+0x1>
     bd6:	e0 92 da 28 	sts	0x28DA, r14	; 0x8028da <TEMP_DEG+0x2>
     bda:	f0 92 db 28 	sts	0x28DB, r15	; 0x8028db <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:85
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     bde:	26 e6       	ldi	r18, 0x66	; 102
     be0:	36 e6       	ldi	r19, 0x66	; 102
     be2:	46 ee       	ldi	r20, 0xE6	; 230
     be4:	5f e3       	ldi	r21, 0x3F	; 63
     be6:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e0       	ldi	r20, 0x00	; 0
     bf0:	52 e4       	ldi	r21, 0x42	; 66
     bf2:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
     bf6:	60 93 b7 28 	sts	0x28B7, r22	; 0x8028b7 <TEMP_FAH>
     bfa:	70 93 b8 28 	sts	0x28B8, r23	; 0x8028b8 <TEMP_FAH+0x1>
     bfe:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <TEMP_FAH+0x2>
     c02:	90 93 ba 28 	sts	0x28BA, r25	; 0x8028ba <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:86
        if(TEMP_DEG>=100) TEMP_DEG = 99.9;
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	48 ec       	ldi	r20, 0xC8	; 200
     c0c:	52 e4       	ldi	r21, 0x42	; 66
     c0e:	c7 01       	movw	r24, r14
     c10:	b6 01       	movw	r22, r12
     c12:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
     c16:	87 fd       	sbrc	r24, 7
     c18:	15 cf       	rjmp	.-470    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0xe6>
     c1a:	8d ec       	ldi	r24, 0xCD	; 205
     c1c:	9c ec       	ldi	r25, 0xCC	; 204
     c1e:	a7 ec       	ldi	r26, 0xC7	; 199
     c20:	b2 e4       	ldi	r27, 0x42	; 66
     c22:	80 93 d8 28 	sts	0x28D8, r24	; 0x8028d8 <TEMP_DEG>
     c26:	90 93 d9 28 	sts	0x28D9, r25	; 0x8028d9 <TEMP_DEG+0x1>
     c2a:	a0 93 da 28 	sts	0x28DA, r26	; 0x8028da <TEMP_DEG+0x2>
     c2e:	b0 93 db 28 	sts	0x28DB, r27	; 0x8028db <TEMP_DEG+0x3>
     c32:	08 cf       	rjmp	.-496    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.28]+0xe6>

00000c34 <INC_CLICK()>:
INC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:341
  button4.tick();  
}

void INC_CLICK()
{
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
     c34:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
     c38:	88 23       	and	r24, r24
     c3a:	09 f4       	brne	.+2      	; 0xc3e <INC_CLICK()+0xa>
     c3c:	3f c0       	rjmp	.+126    	; 0xcbc <INC_CLICK()+0x88>
     c3e:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
     c42:	81 11       	cpse	r24, r1
     c44:	3b c0       	rjmp	.+118    	; 0xcbc <INC_CLICK()+0x88>
     c46:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     c4a:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:343
  {    
    if(!Service_Menu)
     c4e:	20 91 3b 28 	lds	r18, 0x283B	; 0x80283b <Service_Menu>
     c52:	21 11       	cpse	r18, r1
     c54:	16 c0       	rjmp	.+44     	; 0xc82 <INC_CLICK()+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:345
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     c5c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:346
      if(select_product_type )
     c60:	20 91 f0 28 	lds	r18, 0x28F0	; 0x8028f0 <select_product_type>
     c64:	22 23       	and	r18, r18
     c66:	49 f0       	breq	.+18     	; 0xc7a <INC_CLICK()+0x46>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:348
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
     c68:	97 ff       	sbrs	r25, 7
     c6a:	0a c0       	rjmp	.+20     	; 0xc80 <INC_CLICK()+0x4c>
     c6c:	84 e0       	ldi	r24, 0x04	; 4
     c6e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:358
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
     c70:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     c74:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
     c78:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:352
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
     c7a:	18 16       	cp	r1, r24
     c7c:	19 06       	cpc	r1, r25
     c7e:	b4 f7       	brge	.-20     	; 0xc6c <INC_CLICK()+0x38>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:372
      else                      SELECTION_PARAMETER--;      
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
     c80:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:357
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
     c82:	88 30       	cpi	r24, 0x08	; 8
     c84:	91 05       	cpc	r25, r1
     c86:	19 f4       	brne	.+6      	; 0xc8e <INC_CLICK()+0x5a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:358
                              SELECTION_PARAMETER = Calibration_Selection;
     c88:	86 e0       	ldi	r24, 0x06	; 6
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	f1 cf       	rjmp	.-30     	; 0xc70 <INC_CLICK()+0x3c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:359
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
     c8e:	8b 30       	cpi	r24, 0x0B	; 11
     c90:	91 05       	cpc	r25, r1
     c92:	19 f4       	brne	.+6      	; 0xc9a <INC_CLICK()+0x66>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:360
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
     c94:	89 e0       	ldi	r24, 0x09	; 9
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	eb cf       	rjmp	.-42     	; 0xc70 <INC_CLICK()+0x3c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:361
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
     c9a:	81 31       	cpi	r24, 0x11	; 17
     c9c:	91 05       	cpc	r25, r1
     c9e:	19 f4       	brne	.+6      	; 0xca6 <INC_CLICK()+0x72>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:362
                                SELECTION_PARAMETER = Log;
     ca0:	80 e1       	ldi	r24, 0x10	; 16
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	e5 cf       	rjmp	.-54     	; 0xc70 <INC_CLICK()+0x3c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:363
      else if(SELECTION_PARAMETER == Log)   
     ca6:	80 31       	cpi	r24, 0x10	; 16
     ca8:	91 05       	cpc	r25, r1
     caa:	a1 f3       	breq	.-24     	; 0xc94 <INC_CLICK()+0x60>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:365
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;                                
      else if (SELECTION_PARAMETER < Calibration_Selection)
     cac:	86 30       	cpi	r24, 0x06	; 6
     cae:	91 05       	cpc	r25, r1
     cb0:	1c f4       	brge	.+6      	; 0xcb8 <INC_CLICK()+0x84>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:366
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
     cb2:	81 e1       	ldi	r24, 0x11	; 17
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	dc cf       	rjmp	.-72     	; 0xc70 <INC_CLICK()+0x3c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:367
      else                      SELECTION_PARAMETER--;      
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	da cf       	rjmp	.-76     	; 0xc70 <INC_CLICK()+0x3c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:371
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
     cbc:	29 cb       	rjmp	.-2478   	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.66]>

00000cbe <DEC_CLICK()>:
DEC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:395
  BLINK_STATS=0;  
}

void DEC_CLICK()
{
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
     cbe:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
     cc2:	88 23       	and	r24, r24
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <DEC_CLICK()+0xa>
     cc6:	4d c0       	rjmp	.+154    	; 0xd62 <DEC_CLICK()+0xa4>
     cc8:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
     ccc:	81 11       	cpse	r24, r1
     cce:	49 c0       	rjmp	.+146    	; 0xd62 <DEC_CLICK()+0xa4>
     cd0:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     cd4:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:397
  {
    if(!Service_Menu){
     cd8:	20 91 3b 28 	lds	r18, 0x283B	; 0x80283b <Service_Menu>
     cdc:	21 11       	cpse	r18, r1
     cde:	19 c0       	rjmp	.+50     	; 0xd12 <DEC_CLICK()+0x54>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:398
        SELECTION_PARAMETER++;
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     ce6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:400
        
      if(select_product_type )
     cea:	20 91 f0 28 	lds	r18, 0x28F0	; 0x8028f0 <select_product_type>
     cee:	22 23       	and	r18, r18
     cf0:	39 f0       	breq	.+14     	; 0xd00 <DEC_CLICK()+0x42>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:402
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
     cf2:	05 97       	sbiw	r24, 0x05	; 5
     cf4:	bc f1       	brlt	.+110    	; 0xd64 <DEC_CLICK()+0xa6>
     cf6:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
     cfa:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
     cfe:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:406
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
     d00:	05 97       	sbiw	r24, 0x05	; 5
     d02:	84 f1       	brlt	.+96     	; 0xd64 <DEC_CLICK()+0xa6>
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:412
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
     d08:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
     d0c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
     d10:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:411
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
     d12:	86 30       	cpi	r24, 0x06	; 6
     d14:	91 05       	cpc	r25, r1
     d16:	19 f4       	brne	.+6      	; 0xd1e <DEC_CLICK()+0x60>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:412
                   SELECTION_PARAMETER = Cal1_Point;
     d18:	88 e0       	ldi	r24, 0x08	; 8
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	f5 cf       	rjmp	.-22     	; 0xd08 <DEC_CLICK()+0x4a>
     d1e:	20 91 97 28 	lds	r18, 0x2897	; 0x802897 <CAL2_START>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:413
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
     d22:	89 30       	cpi	r24, 0x09	; 9
     d24:	91 05       	cpc	r25, r1
     d26:	39 f4       	brne	.+14     	; 0xd36 <DEC_CLICK()+0x78>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:414
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
     d28:	8b e0       	ldi	r24, 0x0B	; 11
     d2a:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:413
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
     d2c:	21 11       	cpse	r18, r1
     d2e:	ec cf       	rjmp	.-40     	; 0xd08 <DEC_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:416
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Log; 
     d30:	80 e1       	ldi	r24, 0x10	; 16
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	e9 cf       	rjmp	.-46     	; 0xd08 <DEC_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:415
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
     d36:	21 11       	cpse	r18, r1
     d38:	06 c0       	rjmp	.+12     	; 0xd46 <DEC_CLICK()+0x88>
     d3a:	89 30       	cpi	r24, 0x09	; 9
     d3c:	91 05       	cpc	r25, r1
     d3e:	4c f0       	brlt	.+18     	; 0xd52 <DEC_CLICK()+0x94>
     d40:	80 31       	cpi	r24, 0x10	; 16
     d42:	91 05       	cpc	r25, r1
     d44:	ac f3       	brlt	.-22     	; 0xd30 <DEC_CLICK()+0x72>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:417
                       SELECTION_PARAMETER = Log; 
      else if(SELECTION_PARAMETER ==  Log)            
     d46:	80 31       	cpi	r24, 0x10	; 16
     d48:	91 05       	cpc	r25, r1
     d4a:	19 f4       	brne	.+6      	; 0xd52 <DEC_CLICK()+0x94>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:418
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
     d4c:	81 e1       	ldi	r24, 0x11	; 17
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	db cf       	rjmp	.-74     	; 0xd08 <DEC_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:419
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
     d52:	81 31       	cpi	r24, 0x11	; 17
     d54:	91 05       	cpc	r25, r1
     d56:	1c f0       	brlt	.+6      	; 0xd5e <DEC_CLICK()+0xa0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:420
              SELECTION_PARAMETER = Product_Selection_Parameter; //0; 
     d58:	85 e0       	ldi	r24, 0x05	; 5
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	d5 cf       	rjmp	.-86     	; 0xd08 <DEC_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:422
      else                                                 
             SELECTION_PARAMETER++;
     d5e:	01 96       	adiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:425
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
     d60:	d3 cf       	rjmp	.-90     	; 0xd08 <DEC_CLICK()+0x4a>
     d62:	c0 cb       	rjmp	.-2176   	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:426
}
     d64:	08 95       	ret

00000d66 <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:444
  }
}

void DEC_LONGPRESS_STOP()
{
  BLINK_STATS=0;
     d66:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:445
}
     d6a:	08 95       	ret

00000d6c <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	fc 01       	movw	r30, r24
     d74:	e3 59       	subi	r30, 0x93	; 147
     d76:	f5 45       	sbci	r31, 0x55	; 85
     d78:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     d7a:	2f 3f       	cpi	r18, 0xFF	; 255
     d7c:	69 f0       	breq	.+26     	; 0xd98 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     d7e:	fc 01       	movw	r30, r24
     d80:	ec 5b       	subi	r30, 0xBC	; 188
     d82:	f5 45       	sbci	r31, 0x55	; 85
     d84:	a0 81       	ld	r26, Z
     d86:	30 e2       	ldi	r19, 0x20	; 32
     d88:	a3 9f       	mul	r26, r19
     d8a:	d0 01       	movw	r26, r0
     d8c:	11 24       	eor	r1, r1
     d8e:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     d90:	61 30       	cpi	r22, 0x01	; 1
     d92:	29 f4       	brne	.+10     	; 0xd9e <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     d94:	11 96       	adiw	r26, 0x01	; 1
     d96:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     d9e:	85 5e       	subi	r24, 0xE5	; 229
     da0:	95 45       	sbci	r25, 0x55	; 85
     da2:	ec 01       	movw	r28, r24
     da4:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     da6:	ef 3f       	cpi	r30, 0xFF	; 255
     da8:	81 f0       	breq	.+32     	; 0xdca <pinMode.part.1+0x5e>
     daa:	cd 01       	movw	r24, r26
     dac:	40 96       	adiw	r24, 0x10	; 16
     dae:	e8 0f       	add	r30, r24
     db0:	f9 2f       	mov	r31, r25
     db2:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     db4:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     db6:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     db8:	12 96       	adiw	r26, 0x02	; 2
     dba:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     dbc:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     dbe:	62 30       	cpi	r22, 0x02	; 2
     dc0:	39 f4       	brne	.+14     	; 0xdd0 <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     dc2:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     dc4:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     dc6:	9f bf       	out	0x3f, r25	; 63
     dc8:	e7 cf       	rjmp	.-50     	; 0xd98 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	e0 e0       	ldi	r30, 0x00	; 0
     dce:	f2 cf       	rjmp	.-28     	; 0xdb4 <pinMode.part.1+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     dd0:	87 7f       	andi	r24, 0xF7	; 247
     dd2:	f8 cf       	rjmp	.-16     	; 0xdc4 <pinMode.part.1+0x58>

00000dd4 <pinMode>:
pinMode():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     dd4:	89 32       	cpi	r24, 0x29	; 41
     dd6:	08 f4       	brcc	.+2      	; 0xdda <pinMode+0x6>
     dd8:	c9 cf       	rjmp	.-110    	; 0xd6c <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     dda:	08 95       	ret

00000ddc <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	fc 01       	movw	r30, r24
     de0:	ee 50       	subi	r30, 0x0E	; 14
     de2:	f6 45       	sbci	r31, 0x56	; 86
     de4:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     de6:	ee 23       	and	r30, r30
     de8:	19 f1       	breq	.+70     	; 0xe30 <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     dea:	e1 30       	cpi	r30, 0x01	; 1
     dec:	21 f0       	breq	.+8      	; 0xdf6 <turnOffPWM.part.0+0x1a>
     dee:	00 f1       	brcs	.+64     	; 0xe30 <turnOffPWM.part.0+0x54>
     df0:	e6 30       	cpi	r30, 0x06	; 6
     df2:	a8 f0       	brcs	.+42     	; 0xe1e <turnOffPWM.part.0+0x42>
     df4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     df6:	85 5e       	subi	r24, 0xE5	; 229
     df8:	95 45       	sbci	r25, 0x55	; 85
     dfa:	fc 01       	movw	r30, r24
     dfc:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     dfe:	23 30       	cpi	r18, 0x03	; 3
     e00:	08 f0       	brcs	.+2      	; 0xe04 <turnOffPWM.part.0+0x28>
     e02:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     e04:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	01 c0       	rjmp	.+2      	; 0xe10 <turnOffPWM.part.0+0x34>
     e0e:	88 0f       	add	r24, r24
     e10:	2a 95       	dec	r18
     e12:	ea f7       	brpl	.-6      	; 0xe0e <turnOffPWM.part.0+0x32>
     e14:	80 95       	com	r24
     e16:	83 23       	and	r24, r19
     e18:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e1c:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
     e1e:	80 e1       	ldi	r24, 0x10	; 16
     e20:	e8 9f       	mul	r30, r24
     e22:	f0 01       	movw	r30, r0
     e24:	11 24       	eor	r1, r1
     e26:	e0 5a       	subi	r30, 0xA0	; 160
     e28:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
     e2a:	81 81       	ldd	r24, Z+1	; 0x01
     e2c:	8f 7e       	andi	r24, 0xEF	; 239
     e2e:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
     e30:	08 95       	ret

00000e32 <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
     e36:	cf 93       	push	r28
     e38:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     e3a:	c8 2f       	mov	r28, r24
     e3c:	d0 e0       	ldi	r29, 0x00	; 0
     e3e:	fe 01       	movw	r30, r28
     e40:	e3 59       	subi	r30, 0x93	; 147
     e42:	f5 45       	sbci	r31, 0x55	; 85
     e44:	00 81       	ld	r16, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
     e46:	0f 3f       	cpi	r16, 0xFF	; 255
     e48:	99 f0       	breq	.+38     	; 0xe70 <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     e4a:	16 2f       	mov	r17, r22
turnOffPWM():
     e4c:	89 32       	cpi	r24, 0x29	; 41
     e4e:	08 f4       	brcc	.+2      	; 0xe52 <digitalWrite.part.2+0x20>
     e50:	c5 df       	rcall	.-118    	; 0xddc <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
     e52:	fe 01       	movw	r30, r28
     e54:	ec 5b       	subi	r30, 0xBC	; 188
     e56:	f5 45       	sbci	r31, 0x55	; 85
     e58:	e0 81       	ld	r30, Z
     e5a:	80 e2       	ldi	r24, 0x20	; 32
     e5c:	e8 9f       	mul	r30, r24
     e5e:	f0 01       	movw	r30, r0
     e60:	11 24       	eor	r1, r1
     e62:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
     e64:	80 81       	ld	r24, Z
     e66:	80 23       	and	r24, r16
     e68:	51 f0       	breq	.+20     	; 0xe7e <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
     e6a:	11 11       	cpse	r17, r1
     e6c:	06 c0       	rjmp	.+12     	; 0xe7a <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
     e6e:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
     e7a:	05 83       	std	Z+5, r16	; 0x05
     e7c:	f9 cf       	rjmp	.-14     	; 0xe70 <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
     e7e:	c5 5e       	subi	r28, 0xE5	; 229
     e80:	d5 45       	sbci	r29, 0x55	; 85
     e82:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     e84:	30 97       	sbiw	r30, 0x00	; 0
     e86:	71 f0       	breq	.+28     	; 0xea4 <digitalWrite.part.2+0x72>
     e88:	8f 3f       	cpi	r24, 0xFF	; 255
     e8a:	61 f0       	breq	.+24     	; 0xea4 <digitalWrite.part.2+0x72>
     e8c:	70 96       	adiw	r30, 0x10	; 16
     e8e:	e8 0f       	add	r30, r24
     e90:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
     e92:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
     e94:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     e96:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
     e98:	11 11       	cpse	r17, r1
     e9a:	07 c0       	rjmp	.+14     	; 0xeaa <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     e9c:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     e9e:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
     ea0:	9f bf       	out	0x3f, r25	; 63
     ea2:	e6 cf       	rjmp	.-52     	; 0xe70 <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     ea4:	f0 e0       	ldi	r31, 0x00	; 0
     ea6:	e0 e0       	ldi	r30, 0x00	; 0
     ea8:	f4 cf       	rjmp	.-24     	; 0xe92 <digitalWrite.part.2+0x60>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     eaa:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     eac:	f8 cf       	rjmp	.-16     	; 0xe9e <digitalWrite.part.2+0x6c>

00000eae <digitalWrite>:
digitalWrite():
     eae:	89 32       	cpi	r24, 0x29	; 41
     eb0:	08 f4       	brcc	.+2      	; 0xeb4 <digitalWrite+0x6>
     eb2:	bf cf       	rjmp	.-130    	; 0xe32 <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     eb4:	08 95       	ret

00000eb6 <OneButton::OneButton(int, int) [clone .constprop.53]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
     eb6:	0f 93       	push	r16
     eb8:	1f 93       	push	r17
     eba:	cf 93       	push	r28
     ebc:	df 93       	push	r29
     ebe:	ec 01       	movw	r28, r24
     ec0:	16 2f       	mov	r17, r22
     ec2:	07 2f       	mov	r16, r23
     ec4:	82 e3       	ldi	r24, 0x32	; 50
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
     eca:	9f 83       	std	Y+7, r25	; 0x07
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	81 2f       	mov	r24, r17
     ed0:	81 df       	rcall	.-254    	; 0xdd4 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
     ed2:	18 83       	st	Y, r17
     ed4:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
     ed6:	88 e5       	ldi	r24, 0x58	; 88
     ed8:	92 e0       	ldi	r25, 0x02	; 2
     eda:	8a 83       	std	Y+2, r24	; 0x02
     edc:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
     ede:	88 ee       	ldi	r24, 0xE8	; 232
     ee0:	93 e0       	ldi	r25, 0x03	; 3
     ee2:	8c 83       	std	Y+4, r24	; 0x04
     ee4:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
     ee6:	19 8e       	std	Y+25, r1	; 0x19
     ee8:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
     eea:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
     ef2:	99 87       	std	Y+9, r25	; 0x09
     ef4:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
     ef6:	1b 86       	std	Y+11, r1	; 0x0b
     ef8:	61 e0       	ldi	r22, 0x01	; 1
     efa:	81 2f       	mov	r24, r17
     efc:	d8 df       	rcall	.-80     	; 0xeae <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
     efe:	1f 86       	std	Y+15, r1	; 0x0f
     f00:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
     f02:	19 8a       	std	Y+17, r1	; 0x11
     f04:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
     f06:	1b 8a       	std	Y+19, r1	; 0x13
     f08:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
     f0a:	1d 8a       	std	Y+21, r1	; 0x15
     f0c:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
     f0e:	1f 8a       	std	Y+23, r1	; 0x17
     f10:	18 8e       	std	Y+24, r1	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:1141
      }      
  }
  
}

void Pclass :: ALL_LED_OFF()
     f18:	0f 91       	pop	r16
     f1a:	08 95       	ret

00000f1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>:
digitalWrite():
     f1c:	61 e0       	ldi	r22, 0x01	; 1
     f1e:	8a e1       	ldi	r24, 0x1A	; 26
     f20:	88 df       	rcall	.-240    	; 0xe32 <digitalWrite.part.2>
     f22:	61 e0       	ldi	r22, 0x01	; 1
     f24:	8d e1       	ldi	r24, 0x1D	; 29
     f26:	85 df       	rcall	.-246    	; 0xe32 <digitalWrite.part.2>
     f28:	61 e0       	ldi	r22, 0x01	; 1
     f2a:	8c e1       	ldi	r24, 0x1C	; 28
     f2c:	82 df       	rcall	.-252    	; 0xe32 <digitalWrite.part.2>
     f2e:	61 e0       	ldi	r22, 0x01	; 1
     f30:	8b e1       	ldi	r24, 0x1B	; 27
     f32:	7f cf       	rjmp	.-258    	; 0xe32 <digitalWrite.part.2>

00000f34 <digitalRead.part.3>:
digitalRead.part.3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
     f34:	0f 93       	push	r16
     f36:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f38:	cf 93       	push	r28
     f3a:	08 2f       	mov	r16, r24
     f3c:	10 e0       	ldi	r17, 0x00	; 0
     f3e:	f8 01       	movw	r30, r16
     f40:	e3 59       	subi	r30, 0x93	; 147
     f42:	f5 45       	sbci	r31, 0x55	; 85
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
     f44:	c0 81       	ld	r28, Z
     f46:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     f48:	81 f0       	breq	.+32     	; 0xf6a <digitalRead.part.3+0x36>
turnOffPWM():
     f4a:	89 32       	cpi	r24, 0x29	; 41
     f4c:	08 f4       	brcc	.+2      	; 0xf50 <digitalRead.part.3+0x1c>
     f4e:	46 df       	rcall	.-372    	; 0xddc <turnOffPWM.part.0>
digitalRead.part.3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
     f50:	f8 01       	movw	r30, r16
     f52:	ec 5b       	subi	r30, 0xBC	; 188
     f54:	f5 45       	sbci	r31, 0x55	; 85
     f56:	e0 81       	ld	r30, Z
     f58:	80 e2       	ldi	r24, 0x20	; 32
     f5a:	e8 9f       	mul	r30, r24
     f5c:	f0 01       	movw	r30, r0
     f5e:	11 24       	eor	r1, r1
     f60:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
     f62:	80 85       	ldd	r24, Z+8	; 0x08
     f64:	c8 23       	and	r28, r24
     f66:	81 e0       	ldi	r24, 0x01	; 1
     f68:	09 f4       	brne	.+2      	; 0xf6c <digitalRead.part.3+0x38>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
     f6a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
     f6c:	cf 91       	pop	r28
     f6e:	1f 91       	pop	r17
     f70:	0f 91       	pop	r16
     f72:	08 95       	ret

00000f74 <micros>:
micros():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
     f74:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:104
  cli();
     f76:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
     f78:	20 91 2b 28 	lds	r18, 0x282B	; 0x80282b <timer_millis>
     f7c:	30 91 2c 28 	lds	r19, 0x282C	; 0x80282c <timer_millis+0x1>
     f80:	40 91 2d 28 	lds	r20, 0x282D	; 0x80282d <timer_millis+0x2>
     f84:	50 91 2e 28 	lds	r21, 0x282E	; 0x80282e <timer_millis+0x3>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
     f88:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
     f8c:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
     f90:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
     f94:	90 ff       	sbrs	r25, 0
     f96:	08 c0       	rjmp	.+16     	; 0xfa8 <micros+0x34>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
     f98:	2f 5f       	subi	r18, 0xFF	; 255
     f9a:	3f 4f       	sbci	r19, 0xFF	; 255
     f9c:	4f 4f       	sbci	r20, 0xFF	; 255
     f9e:	5f 4f       	sbci	r21, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
     fa0:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
     fa4:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
     fa8:	8f bf       	out	0x3f, r24	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
     faa:	a8 ee       	ldi	r26, 0xE8	; 232
     fac:	b3 e0       	ldi	r27, 0x03	; 3
     fae:	0e 94 ac 34 	call	0x6958	; 0x6958 <__muluhisi3>
     fb2:	24 e0       	ldi	r18, 0x04	; 4
     fb4:	f6 95       	lsr	r31
     fb6:	e7 95       	ror	r30
     fb8:	2a 95       	dec	r18
     fba:	e1 f7       	brne	.-8      	; 0xfb4 <micros+0x40>
     fbc:	6e 0f       	add	r22, r30
     fbe:	7f 1f       	adc	r23, r31
     fc0:	81 1d       	adc	r24, r1
     fc2:	91 1d       	adc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
     fc4:	08 95       	ret

00000fc6 <millis>:
millis():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
     fc6:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:88
  cli();
     fc8:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90

  m = timer_millis;
     fca:	60 91 2b 28 	lds	r22, 0x282B	; 0x80282b <timer_millis>
     fce:	70 91 2c 28 	lds	r23, 0x282C	; 0x80282c <timer_millis+0x1>
     fd2:	80 91 2d 28 	lds	r24, 0x282D	; 0x80282d <timer_millis+0x2>
     fd6:	90 91 2e 28 	lds	r25, 0x282E	; 0x80282e <timer_millis+0x3>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
     fda:	2f bf       	out	0x3f, r18	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
     fdc:	08 95       	ret

00000fde <Lclass::PID_callingg() [clone .constprop.29]>:
PID_callingg():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:31
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
     fde:	cf 92       	push	r12
     fe0:	df 92       	push	r13
     fe2:	ef 92       	push	r14
     fe4:	ff 92       	push	r15
     fe6:	0f 93       	push	r16
     fe8:	1f 93       	push	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:33
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
     fea:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
     fee:	81 11       	cpse	r24, r1
     ff0:	98 c0       	rjmp	.+304    	; 0x1122 <Lclass::PID_callingg() [clone .constprop.29]+0x144>
     ff2:	80 91 d8 28 	lds	r24, 0x28D8	; 0x8028d8 <TEMP_DEG>
     ff6:	90 91 d9 28 	lds	r25, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
     ffa:	a0 91 da 28 	lds	r26, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
     ffe:	b0 91 db 28 	lds	r27, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:34
  else               PID_INPUT = TEMP_DEG_RAW;
    1002:	80 93 3f 29 	sts	0x293F, r24	; 0x80293f <PID_INPUT>
    1006:	90 93 40 29 	sts	0x2940, r25	; 0x802940 <PID_INPUT+0x1>
    100a:	a0 93 41 29 	sts	0x2941, r26	; 0x802941 <PID_INPUT+0x2>
    100e:	b0 93 42 29 	sts	0x2942, r27	; 0x802942 <PID_INPUT+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:36

  if(PID_SETPOINT < 45)
    1012:	c0 90 37 29 	lds	r12, 0x2937	; 0x802937 <PID_SETPOINT>
    1016:	d0 90 38 29 	lds	r13, 0x2938	; 0x802938 <PID_SETPOINT+0x1>
    101a:	e0 90 39 29 	lds	r14, 0x2939	; 0x802939 <PID_SETPOINT+0x2>
    101e:	f0 90 3a 29 	lds	r15, 0x293A	; 0x80293a <PID_SETPOINT+0x3>
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	44 e3       	ldi	r20, 0x34	; 52
    1028:	52 e4       	ldi	r21, 0x42	; 66
    102a:	c7 01       	movw	r24, r14
    102c:	b6 01       	movw	r22, r12
    102e:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    1032:	87 ff       	sbrs	r24, 7
    1034:	7f c0       	rjmp	.+254    	; 0x1134 <Lclass::PID_callingg() [clone .constprop.29]+0x156>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:38
  {
        Kp= 30; Ki=0.020; Kd=550;  //14-02-2023
    1036:	80 e0       	ldi	r24, 0x00	; 0
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	a0 ef       	ldi	r26, 0xF0	; 240
    103c:	b1 e4       	ldi	r27, 0x41	; 65
    103e:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    1042:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1046:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    104a:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    104e:	8a e0       	ldi	r24, 0x0A	; 10
    1050:	97 ed       	ldi	r25, 0xD7	; 215
    1052:	a3 ea       	ldi	r26, 0xA3	; 163
    1054:	bc e3       	ldi	r27, 0x3C	; 60
    1056:	80 93 7f 29 	sts	0x297F, r24	; 0x80297f <Ki>
    105a:	90 93 80 29 	sts	0x2980, r25	; 0x802980 <Ki+0x1>
    105e:	a0 93 81 29 	sts	0x2981, r26	; 0x802981 <Ki+0x2>
    1062:	b0 93 82 29 	sts	0x2982, r27	; 0x802982 <Ki+0x3>
    1066:	80 e0       	ldi	r24, 0x00	; 0
    1068:	90 e8       	ldi	r25, 0x80	; 128
    106a:	a9 e0       	ldi	r26, 0x09	; 9
    106c:	b4 e4       	ldi	r27, 0x44	; 68
    106e:	80 93 83 29 	sts	0x2983, r24	; 0x802983 <Kd>
    1072:	90 93 84 29 	sts	0x2984, r25	; 0x802984 <Kd+0x1>
    1076:	a0 93 85 29 	sts	0x2985, r26	; 0x802985 <Kd+0x2>
    107a:	b0 93 86 29 	sts	0x2986, r27	; 0x802986 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:40
    
         myPID.SetTunings(Kp, Ki, Kd);    
    107e:	7c 01       	movw	r14, r24
    1080:	8d 01       	movw	r16, r26
    1082:	2a e0       	ldi	r18, 0x0A	; 10
    1084:	37 ed       	ldi	r19, 0xD7	; 215
    1086:	43 ea       	ldi	r20, 0xA3	; 163
    1088:	5c e3       	ldi	r21, 0x3C	; 60
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	80 ef       	ldi	r24, 0xF0	; 240
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:50
    {
       Kp=150, Ki=0, Kd=0,
       myPID.SetTunings(Kp, Ki, Kd);
    }                    
    else
     myPID.SetTunings(consKp, consKi, consKd); 
    1090:	91 e4       	ldi	r25, 0x41	; 65
    1092:	8a db       	rcall	.-2284   	; 0x7a8 <PID::SetTunings(double, double, double) [clone .constprop.30]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:52
  }   
  if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1094:	98 df       	rcall	.-208    	; 0xfc6 <millis>
    1096:	c0 90 d0 28 	lds	r12, 0x28D0	; 0x8028d0 <WINDOW_START_TIME>
    109a:	d0 90 d1 28 	lds	r13, 0x28D1	; 0x8028d1 <WINDOW_START_TIME+0x1>
    109e:	e0 90 d2 28 	lds	r14, 0x28D2	; 0x8028d2 <WINDOW_START_TIME+0x2>
    10a2:	f0 90 d3 28 	lds	r15, 0x28D3	; 0x8028d3 <WINDOW_START_TIME+0x3>
    10a6:	ab 01       	movw	r20, r22
    10a8:	bc 01       	movw	r22, r24
    10aa:	4c 19       	sub	r20, r12
    10ac:	5d 09       	sbc	r21, r13
    10ae:	6e 09       	sbc	r22, r14
    10b0:	7f 09       	sbc	r23, r15
    10b2:	49 3e       	cpi	r20, 0xE9	; 233
    10b4:	53 40       	sbci	r21, 0x03	; 3
    10b6:	61 05       	cpc	r22, r1
    10b8:	71 05       	cpc	r23, r1
    10ba:	70 f0       	brcs	.+28     	; 0x10d8 <Lclass::PID_callingg() [clone .constprop.29]+0xfa>
    10bc:	d7 01       	movw	r26, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:53
          WINDOW_START_TIME += WINDOW_SIZE;
    10be:	c6 01       	movw	r24, r12
    10c0:	88 51       	subi	r24, 0x18	; 24
    10c2:	9c 4f       	sbci	r25, 0xFC	; 252
    10c4:	af 4f       	sbci	r26, 0xFF	; 255
    10c6:	bf 4f       	sbci	r27, 0xFF	; 255
    10c8:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <WINDOW_START_TIME>
    10cc:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <WINDOW_START_TIME+0x1>
    10d0:	a0 93 d2 28 	sts	0x28D2, r26	; 0x8028d2 <WINDOW_START_TIME+0x2>
    10d4:	b0 93 d3 28 	sts	0x28D3, r27	; 0x8028d3 <WINDOW_START_TIME+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:55
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)      digitalWrite(HEATER, LOW);
    10d8:	76 df       	rcall	.-276    	; 0xfc6 <millis>
    10da:	c0 90 d0 28 	lds	r12, 0x28D0	; 0x8028d0 <WINDOW_START_TIME>
    10de:	d0 90 d1 28 	lds	r13, 0x28D1	; 0x8028d1 <WINDOW_START_TIME+0x1>
    10e2:	e0 90 d2 28 	lds	r14, 0x28D2	; 0x8028d2 <WINDOW_START_TIME+0x2>
    10e6:	f0 90 d3 28 	lds	r15, 0x28D3	; 0x8028d3 <WINDOW_START_TIME+0x3>
    10ea:	6c 19       	sub	r22, r12
    10ec:	7d 09       	sbc	r23, r13
    10ee:	8e 09       	sbc	r24, r14
    10f0:	9f 09       	sbc	r25, r15
    10f2:	0e 94 36 33 	call	0x666c	; 0x666c <__floatunsisf>
    10f6:	20 91 3b 29 	lds	r18, 0x293B	; 0x80293b <PID_OUTPUT>
    10fa:	30 91 3c 29 	lds	r19, 0x293C	; 0x80293c <PID_OUTPUT+0x1>
    10fe:	40 91 3d 29 	lds	r20, 0x293D	; 0x80293d <PID_OUTPUT+0x2>
    1102:	50 91 3e 29 	lds	r21, 0x293E	; 0x80293e <PID_OUTPUT+0x3>
    1106:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    110a:	18 16       	cp	r1, r24
    110c:	0c f0       	brlt	.+2      	; 0x1110 <Lclass::PID_callingg() [clone .constprop.29]+0x132>
    110e:	57 c0       	rjmp	.+174    	; 0x11be <Lclass::PID_callingg() [clone .constprop.29]+0x1e0>
digitalWrite():
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:61
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT))) /* + 0.1)) */    digitalWrite(HEATER, LOW);
    else                                                    digitalWrite(HEATER, HIGH);
  }
}
    1114:	1f 91       	pop	r17
    1116:	0f 91       	pop	r16
    1118:	ff 90       	pop	r15
    111a:	ef 90       	pop	r14
    111c:	df 90       	pop	r13
    111e:	cf 90       	pop	r12
digitalWrite():
    1120:	88 ce       	rjmp	.-752    	; 0xe32 <digitalWrite.part.2>
PID_callingg():
    1122:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:34
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    1126:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    112a:	a0 91 d6 28 	lds	r26, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    112e:	b0 91 d7 28 	lds	r27, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    1132:	67 cf       	rjmp	.-306    	; 0x1002 <Lclass::PID_callingg() [clone .constprop.29]+0x24>
    1134:	20 91 3f 29 	lds	r18, 0x293F	; 0x80293f <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:44
    
         myPID.SetTunings(Kp, Ki, Kd);    
  }
  else
  {
    if((PID_SETPOINT - PID_INPUT) > 5)   
    1138:	30 91 40 29 	lds	r19, 0x2940	; 0x802940 <PID_INPUT+0x1>
    113c:	40 91 41 29 	lds	r20, 0x2941	; 0x802941 <PID_INPUT+0x2>
    1140:	50 91 42 29 	lds	r21, 0x2942	; 0x802942 <PID_INPUT+0x3>
    1144:	c7 01       	movw	r24, r14
    1146:	b6 01       	movw	r22, r12
    1148:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	40 ea       	ldi	r20, 0xA0	; 160
    1152:	50 e4       	ldi	r21, 0x40	; 64
    1154:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    1158:	18 16       	cp	r1, r24
    115a:	24 f5       	brge	.+72     	; 0x11a4 <Lclass::PID_callingg() [clone .constprop.29]+0x1c6>
    115c:	80 e0       	ldi	r24, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:46
    {
       Kp=150, Ki=0, Kd=0,
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	a6 e1       	ldi	r26, 0x16	; 22
    1162:	b3 e4       	ldi	r27, 0x43	; 67
    1164:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    1168:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    116c:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1170:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    1174:	10 92 7f 29 	sts	0x297F, r1	; 0x80297f <Ki>
    1178:	10 92 80 29 	sts	0x2980, r1	; 0x802980 <Ki+0x1>
    117c:	10 92 81 29 	sts	0x2981, r1	; 0x802981 <Ki+0x2>
    1180:	10 92 82 29 	sts	0x2982, r1	; 0x802982 <Ki+0x3>
    1184:	10 92 83 29 	sts	0x2983, r1	; 0x802983 <Kd>
    1188:	10 92 84 29 	sts	0x2984, r1	; 0x802984 <Kd+0x1>
    118c:	10 92 85 29 	sts	0x2985, r1	; 0x802985 <Kd+0x2>
    1190:	10 92 86 29 	sts	0x2986, r1	; 0x802986 <Kd+0x3>
    1194:	e1 2c       	mov	r14, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:47
       myPID.SetTunings(Kp, Ki, Kd);
    1196:	f1 2c       	mov	r15, r1
    1198:	87 01       	movw	r16, r14
    119a:	a8 01       	movw	r20, r16
    119c:	97 01       	movw	r18, r14
    119e:	bc 01       	movw	r22, r24
    11a0:	cd 01       	movw	r24, r26
    11a2:	77 cf       	rjmp	.-274    	; 0x1092 <Lclass::PID_callingg() [clone .constprop.29]+0xb4>
    11a4:	e1 2c       	mov	r14, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:50
    }                    
    else
     myPID.SetTunings(consKp, consKi, consKd); 
    11a6:	f1 2c       	mov	r15, r1
    11a8:	08 ec       	ldi	r16, 0xC8	; 200
    11aa:	13 e4       	ldi	r17, 0x43	; 67
    11ac:	20 e0       	ldi	r18, 0x00	; 0
    11ae:	30 e0       	ldi	r19, 0x00	; 0
    11b0:	40 e0       	ldi	r20, 0x00	; 0
    11b2:	5f e3       	ldi	r21, 0x3F	; 63
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	70 e0       	ldi	r23, 0x00	; 0
    11b8:	86 e1       	ldi	r24, 0x16	; 22
    11ba:	93 e4       	ldi	r25, 0x43	; 67
    11bc:	6a cf       	rjmp	.-300    	; 0x1092 <Lclass::PID_callingg() [clone .constprop.29]+0xb4>
    11be:	20 91 37 29 	lds	r18, 0x2937	; 0x802937 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:58
          WINDOW_START_TIME += WINDOW_SIZE;
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)      digitalWrite(HEATER, LOW);
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT))) /* + 0.1)) */    digitalWrite(HEATER, LOW);
    11c2:	30 91 38 29 	lds	r19, 0x2938	; 0x802938 <PID_SETPOINT+0x1>
    11c6:	40 91 39 29 	lds	r20, 0x2939	; 0x802939 <PID_SETPOINT+0x2>
    11ca:	50 91 3a 29 	lds	r21, 0x293A	; 0x80293a <PID_SETPOINT+0x3>
    11ce:	60 91 3f 29 	lds	r22, 0x293F	; 0x80293f <PID_INPUT>
    11d2:	70 91 40 29 	lds	r23, 0x2940	; 0x802940 <PID_INPUT+0x1>
    11d6:	80 91 41 29 	lds	r24, 0x2941	; 0x802941 <PID_INPUT+0x2>
    11da:	90 91 42 29 	lds	r25, 0x2942	; 0x802942 <PID_INPUT+0x3>
    11de:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    11e2:	87 ff       	sbrs	r24, 7
    11e4:	95 cf       	rjmp	.-214    	; 0x1110 <Lclass::PID_callingg() [clone .constprop.29]+0x132>
digitalWrite():
    11e6:	61 e0       	ldi	r22, 0x01	; 1
    11e8:	94 cf       	rjmp	.-216    	; 0x1112 <Lclass::PID_callingg() [clone .constprop.29]+0x134>

000011ea <Ticker::update()>:
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    11ea:	0f 93       	push	r16
    11ec:	1f 93       	push	r17
    11ee:	cf 93       	push	r28
    11f0:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    11f2:	fc 01       	movw	r30, r24
    11f4:	20 81       	ld	r18, Z
    11f6:	22 23       	and	r18, r18
    11f8:	09 f4       	brne	.+2      	; 0x11fc <Ticker::update()+0x12>
    11fa:	50 c0       	rjmp	.+160    	; 0x129c <Ticker::update()+0xb2>
    11fc:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    11fe:	81 85       	ldd	r24, Z+9	; 0x09
    1200:	92 85       	ldd	r25, Z+10	; 0x0a
    1202:	01 97       	sbiw	r24, 0x01	; 1
    1204:	b9 f5       	brne	.+110    	; 0x1274 <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    1206:	df de       	rcall	.-578    	; 0xfc6 <millis>
    1208:	0b 89       	ldd	r16, Y+19	; 0x13
    120a:	1c 89       	ldd	r17, Y+20	; 0x14
    120c:	2d 89       	ldd	r18, Y+21	; 0x15
    120e:	3e 89       	ldd	r19, Y+22	; 0x16
    1210:	60 1b       	sub	r22, r16
    1212:	71 0b       	sbc	r23, r17
    1214:	82 0b       	sbc	r24, r18
    1216:	93 0b       	sbc	r25, r19
    1218:	09 81       	ldd	r16, Y+1	; 0x01
    121a:	1a 81       	ldd	r17, Y+2	; 0x02
    121c:	2b 81       	ldd	r18, Y+3	; 0x03
    121e:	3c 81       	ldd	r19, Y+4	; 0x04
    1220:	60 17       	cp	r22, r16
    1222:	71 07       	cpc	r23, r17
    1224:	82 07       	cpc	r24, r18
    1226:	93 07       	cpc	r25, r19
    1228:	c8 f1       	brcs	.+114    	; 0x129c <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    122a:	cd de       	rcall	.-614    	; 0xfc6 <millis>
    122c:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    122e:	7c 8b       	std	Y+20, r23	; 0x14
    1230:	8d 8b       	std	Y+21, r24	; 0x15
    1232:	9e 8b       	std	Y+22, r25	; 0x16
    1234:	8b 85       	ldd	r24, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    1236:	9c 85       	ldd	r25, Y+12	; 0x0c
    1238:	ad 85       	ldd	r26, Y+13	; 0x0d
    123a:	be 85       	ldd	r27, Y+14	; 0x0e
    123c:	4d 81       	ldd	r20, Y+5	; 0x05
    123e:	5e 81       	ldd	r21, Y+6	; 0x06
    1240:	6f 81       	ldd	r22, Y+7	; 0x07
    1242:	78 85       	ldd	r23, Y+8	; 0x08
    1244:	48 1b       	sub	r20, r24
    1246:	59 0b       	sbc	r21, r25
    1248:	6a 0b       	sbc	r22, r26
    124a:	7b 0b       	sbc	r23, r27
    124c:	41 30       	cpi	r20, 0x01	; 1
    124e:	51 05       	cpc	r21, r1
    1250:	61 05       	cpc	r22, r1
    1252:	71 05       	cpc	r23, r1
    1254:	09 f4       	brne	.+2      	; 0x1258 <Ticker::update()+0x6e>
    1256:	18 82       	st	Y, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    1258:	01 96       	adiw	r24, 0x01	; 1
    125a:	a1 1d       	adc	r26, r1
    125c:	b1 1d       	adc	r27, r1
    125e:	8b 87       	std	Y+11, r24	; 0x0b
    1260:	9c 87       	std	Y+12, r25	; 0x0c
    1262:	ad 87       	std	Y+13, r26	; 0x0d
    1264:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1266:	e9 89       	ldd	r30, Y+17	; 0x11
    1268:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    126a:	df 91       	pop	r29
    126c:	cf 91       	pop	r28
    126e:	1f 91       	pop	r17
    1270:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1272:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    1274:	7f de       	rcall	.-770    	; 0xf74 <micros>
    1276:	0b 89       	ldd	r16, Y+19	; 0x13
    1278:	1c 89       	ldd	r17, Y+20	; 0x14
    127a:	2d 89       	ldd	r18, Y+21	; 0x15
    127c:	3e 89       	ldd	r19, Y+22	; 0x16
    127e:	60 1b       	sub	r22, r16
    1280:	71 0b       	sbc	r23, r17
    1282:	82 0b       	sbc	r24, r18
    1284:	93 0b       	sbc	r25, r19
    1286:	09 81       	ldd	r16, Y+1	; 0x01
    1288:	1a 81       	ldd	r17, Y+2	; 0x02
    128a:	2b 81       	ldd	r18, Y+3	; 0x03
    128c:	3c 81       	ldd	r19, Y+4	; 0x04
    128e:	60 17       	cp	r22, r16
    1290:	71 07       	cpc	r23, r17
    1292:	82 07       	cpc	r24, r18
    1294:	93 07       	cpc	r25, r19
    1296:	10 f0       	brcs	.+4      	; 0x129c <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    1298:	6d de       	rcall	.-806    	; 0xf74 <micros>
    129a:	c8 cf       	rjmp	.-112    	; 0x122c <Ticker::update()+0x42>
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    129c:	df 91       	pop	r29
    129e:	cf 91       	pop	r28
    12a0:	1f 91       	pop	r17
    12a2:	0f 91       	pop	r16
    12a4:	08 95       	ret

000012a6 <Ticker::start()>:
start():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    12aa:	fc 01       	movw	r30, r24
    12ac:	21 89       	ldd	r18, Z+17	; 0x11
    12ae:	32 89       	ldd	r19, Z+18	; 0x12
    12b0:	23 2b       	or	r18, r19
    12b2:	a1 f0       	breq	.+40     	; 0x12dc <Ticker::start()+0x36>
    12b4:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    12b6:	81 85       	ldd	r24, Z+9	; 0x09
    12b8:	92 85       	ldd	r25, Z+10	; 0x0a
    12ba:	01 97       	sbiw	r24, 0x01	; 1
    12bc:	91 f4       	brne	.+36     	; 0x12e2 <Ticker::start()+0x3c>
    12be:	83 de       	rcall	.-762    	; 0xfc6 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    12c0:	6b 8b       	std	Y+19, r22	; 0x13
    12c2:	7c 8b       	std	Y+20, r23	; 0x14
    12c4:	8d 8b       	std	Y+21, r24	; 0x15
    12c6:	9e 8b       	std	Y+22, r25	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	88 83       	st	Y, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    12cc:	1b 86       	std	Y+11, r1	; 0x0b
    12ce:	1c 86       	std	Y+12, r1	; 0x0c
    12d0:	1d 86       	std	Y+13, r1	; 0x0d
    12d2:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	8f 87       	std	Y+15, r24	; 0x0f
    12da:	98 8b       	std	Y+16, r25	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    12dc:	df 91       	pop	r29
    12de:	cf 91       	pop	r28
    12e0:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    12e2:	48 de       	rcall	.-880    	; 0xf74 <micros>
    12e4:	ed cf       	rjmp	.-38     	; 0x12c0 <Ticker::start()+0x1a>

000012e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>:
BUZZ_INTERVAL():
    12e6:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:60
{
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
    12e8:	bc 01       	movw	r22, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:62
{
  BUZZ.interval(i);
    12ea:	99 0f       	add	r25, r25
    12ec:	88 0b       	sbc	r24, r24
    12ee:	99 0b       	sbc	r25, r25
interval():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    12f0:	20 91 e4 2a 	lds	r18, 0x2AE4	; 0x802ae4 <BUZZ+0x9>
    12f4:	30 91 e5 2a 	lds	r19, 0x2AE5	; 0x802ae5 <BUZZ+0xa>
    12f8:	23 2b       	or	r18, r19
    12fa:	21 f4       	brne	.+8      	; 0x1304 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]+0x1e>
    12fc:	28 ee       	ldi	r18, 0xE8	; 232
    12fe:	33 e0       	ldi	r19, 0x03	; 3
    1300:	0e 94 a6 34 	call	0x694c	; 0x694c <__usmulhisi3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    1304:	60 93 dc 2a 	sts	0x2ADC, r22	; 0x802adc <BUZZ+0x1>
    1308:	70 93 dd 2a 	sts	0x2ADD, r23	; 0x802add <BUZZ+0x2>
    130c:	80 93 de 2a 	sts	0x2ADE, r24	; 0x802ade <BUZZ+0x3>
    1310:	90 93 df 2a 	sts	0x2ADF, r25	; 0x802adf <BUZZ+0x4>
digitalWrite():
    1314:	61 e0       	ldi	r22, 0x01	; 1
    1316:	80 e1       	ldi	r24, 0x10	; 16
    1318:	8c dd       	rcall	.-1256   	; 0xe32 <digitalWrite.part.2>
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    131a:	8b ed       	ldi	r24, 0xDB	; 219
    131c:	9a e2       	ldi	r25, 0x2A	; 42
    131e:	c3 cf       	rjmp	.-122    	; 0x12a6 <Ticker::start()>

00001320 <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
    1320:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:317
   else                           Tick.BUZZ_INTERVAL(50);               //short pree
}

void MODE_LONG_PRESS_START()
{
  if (!ENTER_BUT)
    1324:	81 11       	cpse	r24, r1
    1326:	17 c0       	rjmp	.+46     	; 0x1356 <MODE_LONG_PRESS_START()+0x36>
    1328:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:319
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    132c:	81 11       	cpse	r24, r1
    132e:	13 c0       	rjmp	.+38     	; 0x1356 <MODE_LONG_PRESS_START()+0x36>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:321
    {
      i = 350;
    1330:	8e e5       	ldi	r24, 0x5E	; 94
    1332:	91 e0       	ldi	r25, 0x01	; 1
    1334:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    1338:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:322
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    133c:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
    1340:	88 23       	and	r24, r24
    1342:	61 f0       	breq	.+24     	; 0x135c <MODE_LONG_PRESS_START()+0x3c>
    1344:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1348:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:324
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	80 93 36 29 	sts	0x2936, r24	; 0x802936 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:325
      RST_BUTT = 1;
    1352:	80 93 3c 28 	sts	0x283C, r24	; 0x80283c <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:328
    }    
  }
 Tick.BUZZ_INTERVAL(200); 
    1356:	88 ec       	ldi	r24, 0xC8	; 200
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	c5 cf       	rjmp	.-118    	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    135c:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:323
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1364:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1368:	f1 cf       	rjmp	.-30     	; 0x134c <MODE_LONG_PRESS_START()+0x2c>

0000136a <RESET_CLICK()>:
RESET_CLICK():
    136a:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:481
  }
}

void RESET_CLICK()
{
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    136e:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1372:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1376:	21 11       	cpse	r18, r1
    1378:	03 c0       	rjmp	.+6      	; 0x1380 <RESET_CLICK()+0x16>
    137a:	88 30       	cpi	r24, 0x08	; 8
    137c:	91 05       	cpc	r25, r1
    137e:	29 f0       	breq	.+10     	; 0x138a <RESET_CLICK()+0x20>
    1380:	ac 01       	movw	r20, r24
    1382:	4d 7f       	andi	r20, 0xFD	; 253
    1384:	4c 30       	cpi	r20, 0x0C	; 12
    1386:	51 05       	cpc	r21, r1
    1388:	b9 f5       	brne	.+110    	; 0x13f8 <RESET_CLICK()+0x8e>
    138a:	01 97       	sbiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:484
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    138c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1390:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1394:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:495
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    1398:	81 11       	cpse	r24, r1
    139a:	2b c0       	rjmp	.+86     	; 0x13f2 <RESET_CLICK()+0x88>
    139c:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
    13a0:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:497
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    13a2:	d9 f1       	breq	.+118    	; 0x141a <RESET_CLICK()+0xb0>
    13a4:	82 30       	cpi	r24, 0x02	; 2
    13a6:	c9 f5       	brne	.+114    	; 0x141a <RESET_CLICK()+0xb0>
    13a8:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <ENTER_BUT>
    13ac:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:499
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    13b0:	85 30       	cpi	r24, 0x05	; 5
    13b2:	f9 f4       	brne	.+62     	; 0x13f2 <RESET_CLICK()+0x88>
    13b4:	20 e0       	ldi	r18, 0x00	; 0
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	40 e8       	ldi	r20, 0x80	; 128
    13ba:	5f e3       	ldi	r21, 0x3F	; 63
    13bc:	60 91 93 28 	lds	r22, 0x2893	; 0x802893 <RATE_OF_HEATING>
    13c0:	70 91 94 28 	lds	r23, 0x2894	; 0x802894 <RATE_OF_HEATING+0x1>
    13c4:	80 91 95 28 	lds	r24, 0x2895	; 0x802895 <RATE_OF_HEATING+0x2>
    13c8:	90 91 96 28 	lds	r25, 0x2896	; 0x802896 <RATE_OF_HEATING+0x3>
    13cc:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    13d0:	87 fd       	sbrc	r24, 7
    13d2:	0f c0       	rjmp	.+30     	; 0x13f2 <RESET_CLICK()+0x88>
    13d4:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <CHECK_RATE_OF_HEATING>
    13d8:	88 23       	and	r24, r24
    13da:	59 f0       	breq	.+22     	; 0x13f2 <RESET_CLICK()+0x88>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:501
   {
     RATE_OF_HEATING =0;
    13dc:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <RATE_OF_HEATING>
    13e0:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <RATE_OF_HEATING+0x1>
    13e4:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <RATE_OF_HEATING+0x2>
    13e8:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <RATE_OF_HEATING+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:502
     CHECK_RATE_OF_HEATING =1;
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:505
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    13f2:	82 e3       	ldi	r24, 0x32	; 50
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	77 cf       	rjmp	.-274    	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    13f8:	8b 30       	cpi	r24, 0x0B	; 11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:487
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    13fa:	91 05       	cpc	r25, r1
    13fc:	11 f0       	breq	.+4      	; 0x1402 <RESET_CLICK()+0x98>
    13fe:	0d 97       	sbiw	r24, 0x0d	; 13
    1400:	21 f4       	brne	.+8      	; 0x140a <RESET_CLICK()+0xa0>
    1402:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:489
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat ) //|| SELECTION_PARAMETER == Product_Selection_Parameter )   
          Mode_Button_Single_Press_In_Settings =1;
    1404:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    1408:	c5 cf       	rjmp	.-118    	; 0x1394 <RESET_CLICK()+0x2a>
    140a:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:492
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    140e:	88 23       	and	r24, r24
    1410:	09 f4       	brne	.+2      	; 0x1414 <RESET_CLICK()+0xaa>
    1412:	c0 cf       	rjmp	.-128    	; 0x1394 <RESET_CLICK()+0x2a>
    1414:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    1418:	bd cf       	rjmp	.-134    	; 0x1394 <RESET_CLICK()+0x2a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:498
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    141a:	81 50       	subi	r24, 0x01	; 1
    141c:	84 30       	cpi	r24, 0x04	; 4
    141e:	30 f6       	brcc	.-116    	; 0x13ac <RESET_CLICK()+0x42>
    1420:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <ENTER_BUT>
    1424:	c3 cf       	rjmp	.-122    	; 0x13ac <RESET_CLICK()+0x42>

00001426 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:510
   Tick.BUZZ_INTERVAL(50); 
}

void RESET_LONG_PRESS_START()
{
  if (!LONG_PRESS )   {
    1426:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
    142a:	81 11       	cpse	r24, r1
    142c:	16 c0       	rjmp	.+44     	; 0x145a <RESET_LONG_PRESS_START()+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:511
  if(!ENTER_BUT)
    142e:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
    1432:	81 11       	cpse	r24, r1
    1434:	0b c0       	rjmp	.+22     	; 0x144c <RESET_LONG_PRESS_START()+0x26>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:513
  {
    RST_BUTT = 0;    
    1436:	10 92 3c 28 	sts	0x283C, r1	; 0x80283c <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:515
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    143a:	81 e0       	ldi	r24, 0x01	; 1
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1442:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:528
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    1446:	88 ec       	ldi	r24, 0xC8	; 200
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	4d cf       	rjmp	.-358    	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    144c:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:520
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
      SET_MIN = 0;
    1450:	10 92 84 28 	sts	0x2884, r1	; 0x802884 <SET_MIN>
    1454:	10 92 85 28 	sts	0x2885, r1	; 0x802885 <SET_MIN+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:525
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    1458:	f6 cf       	rjmp	.-20     	; 0x1446 <RESET_LONG_PRESS_START()+0x20>
    145a:	80 91 3b 28 	lds	r24, 0x283B	; 0x80283b <Service_Menu>
    145e:	81 11       	cpse	r24, r1
    1460:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:526
    LONG_PRESS = 0;
    1464:	10 92 36 29 	sts	0x2936, r1	; 0x802936 <LONG_PRESS>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    1468:	ee cf       	rjmp	.-36     	; 0x1446 <RESET_LONG_PRESS_START()+0x20>

0000146a <OneButton::tick()>:
tick():
    146a:	cf 92       	push	r12
    146c:	df 92       	push	r13
    146e:	ef 92       	push	r14
    1470:	ff 92       	push	r15
    1472:	0f 93       	push	r16
    1474:	1f 93       	push	r17
    1476:	cf 93       	push	r28
    1478:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    147a:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    147c:	88 81       	ld	r24, Y
digitalRead():
    147e:	89 32       	cpi	r24, 0x29	; 41
    1480:	f8 f4       	brcc	.+62     	; 0x14c0 <OneButton::tick()+0x56>
    1482:	58 dd       	rcall	.-1360   	; 0xf34 <digitalRead.part.3>
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    1484:	08 2f       	mov	r16, r24
    1486:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    1488:	9e dd       	rcall	.-1220   	; 0xfc6 <millis>
    148a:	29 8d       	ldd	r18, Y+25	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    148c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    148e:	21 15       	cp	r18, r1
    1490:	31 05       	cpc	r19, r1
    1492:	c1 f4       	brne	.+48     	; 0x14c4 <OneButton::tick()+0x5a>
    1494:	2a 85       	ldd	r18, Y+10	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    1496:	3b 85       	ldd	r19, Y+11	; 0x0b
    1498:	20 17       	cp	r18, r16
    149a:	31 07       	cpc	r19, r17
    149c:	41 f4       	brne	.+16     	; 0x14ae <OneButton::tick()+0x44>
    149e:	21 e0       	ldi	r18, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	29 8f       	std	Y+25, r18	; 0x19
    14a4:	3a 8f       	std	Y+26, r19	; 0x1a
    14a6:	6b 8f       	std	Y+27, r22	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    14a8:	7c 8f       	std	Y+28, r23	; 0x1c
    14aa:	8d 8f       	std	Y+29, r24	; 0x1d
    14ac:	9e 8f       	std	Y+30, r25	; 0x1e
    14ae:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    14b0:	cf 91       	pop	r28
    14b2:	1f 91       	pop	r17
    14b4:	0f 91       	pop	r16
    14b6:	ff 90       	pop	r15
    14b8:	ef 90       	pop	r14
    14ba:	df 90       	pop	r13
    14bc:	cf 90       	pop	r12
    14be:	08 95       	ret
    14c0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    14c2:	e0 cf       	rjmp	.-64     	; 0x1484 <OneButton::tick()+0x1a>
    14c4:	21 30       	cpi	r18, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    14c6:	31 05       	cpc	r19, r1
    14c8:	09 f0       	breq	.+2      	; 0x14cc <OneButton::tick()+0x62>
    14ca:	51 c0       	rjmp	.+162    	; 0x156e <OneButton::tick()+0x104>
    14cc:	28 85       	ldd	r18, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    14ce:	39 85       	ldd	r19, Y+9	; 0x09
    14d0:	20 17       	cp	r18, r16
    14d2:	31 07       	cpc	r19, r17
    14d4:	e9 f4       	brne	.+58     	; 0x1510 <OneButton::tick()+0xa6>
    14d6:	0b 8d       	ldd	r16, Y+27	; 0x1b
    14d8:	1c 8d       	ldd	r17, Y+28	; 0x1c
    14da:	2d 8d       	ldd	r18, Y+29	; 0x1d
    14dc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    14de:	ab 01       	movw	r20, r22
    14e0:	bc 01       	movw	r22, r24
    14e2:	40 1b       	sub	r20, r16
    14e4:	51 0b       	sbc	r21, r17
    14e6:	62 0b       	sbc	r22, r18
    14e8:	73 0b       	sbc	r23, r19
    14ea:	8e 81       	ldd	r24, Y+6	; 0x06
    14ec:	9f 81       	ldd	r25, Y+7	; 0x07
    14ee:	09 2e       	mov	r0, r25
    14f0:	00 0c       	add	r0, r0
    14f2:	aa 0b       	sbc	r26, r26
    14f4:	bb 0b       	sbc	r27, r27
    14f6:	48 17       	cp	r20, r24
    14f8:	59 07       	cpc	r21, r25
    14fa:	6a 07       	cpc	r22, r26
    14fc:	7b 07       	cpc	r23, r27
    14fe:	18 f4       	brcc	.+6      	; 0x1506 <OneButton::tick()+0x9c>
    1500:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    1502:	1a 8e       	std	Y+26, r1	; 0x1a
    1504:	d4 cf       	rjmp	.-88     	; 0x14ae <OneButton::tick()+0x44>
    1506:	82 e0       	ldi	r24, 0x02	; 2
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	89 8f       	std	Y+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    150c:	9a 8f       	std	Y+26, r25	; 0x1a
    150e:	cf cf       	rjmp	.-98     	; 0x14ae <OneButton::tick()+0x44>
    1510:	2a 85       	ldd	r18, Y+10	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    1512:	3b 85       	ldd	r19, Y+11	; 0x0b
    1514:	20 17       	cp	r18, r16
    1516:	31 07       	cpc	r19, r17
    1518:	51 f6       	brne	.-108    	; 0x14ae <OneButton::tick()+0x44>
    151a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    151c:	1c 8d       	ldd	r17, Y+28	; 0x1c
    151e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1520:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1522:	ab 01       	movw	r20, r22
    1524:	bc 01       	movw	r22, r24
    1526:	40 1b       	sub	r20, r16
    1528:	51 0b       	sbc	r21, r17
    152a:	62 0b       	sbc	r22, r18
    152c:	73 0b       	sbc	r23, r19
    152e:	8c 81       	ldd	r24, Y+4	; 0x04
    1530:	9d 81       	ldd	r25, Y+5	; 0x05
    1532:	09 2e       	mov	r0, r25
    1534:	00 0c       	add	r0, r0
    1536:	aa 0b       	sbc	r26, r26
    1538:	bb 0b       	sbc	r27, r27
    153a:	84 17       	cp	r24, r20
    153c:	95 07       	cpc	r25, r21
    153e:	a6 07       	cpc	r26, r22
    1540:	b7 07       	cpc	r27, r23
    1542:	08 f0       	brcs	.+2      	; 0x1546 <OneButton::tick()+0xdc>
    1544:	b4 cf       	rjmp	.-152    	; 0x14ae <OneButton::tick()+0x44>
    1546:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    1548:	8c 87       	std	Y+12, r24	; 0x0c
    154a:	e9 89       	ldd	r30, Y+17	; 0x11
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    154c:	fa 89       	ldd	r31, Y+18	; 0x12
    154e:	30 97       	sbiw	r30, 0x00	; 0
    1550:	09 f0       	breq	.+2      	; 0x1554 <OneButton::tick()+0xea>
    1552:	09 95       	icall
    1554:	eb 89       	ldd	r30, Y+19	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    1556:	fc 89       	ldd	r31, Y+20	; 0x14
    1558:	30 97       	sbiw	r30, 0x00	; 0
    155a:	09 f0       	breq	.+2      	; 0x155e <OneButton::tick()+0xf4>
    155c:	09 95       	icall
    155e:	ef 89       	ldd	r30, Y+23	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1560:	f8 8d       	ldd	r31, Y+24	; 0x18
    1562:	30 97       	sbiw	r30, 0x00	; 0
    1564:	09 f0       	breq	.+2      	; 0x1568 <OneButton::tick()+0xfe>
    1566:	09 95       	icall
    1568:	86 e0       	ldi	r24, 0x06	; 6
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	ce cf       	rjmp	.-100    	; 0x150a <OneButton::tick()+0xa0>
    156e:	22 30       	cpi	r18, 0x02	; 2
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    1570:	31 05       	cpc	r19, r1
    1572:	19 f5       	brne	.+70     	; 0x15ba <OneButton::tick()+0x150>
    1574:	cb 8c       	ldd	r12, Y+27	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    1576:	dc 8c       	ldd	r13, Y+28	; 0x1c
    1578:	ed 8c       	ldd	r14, Y+29	; 0x1d
    157a:	fe 8c       	ldd	r15, Y+30	; 0x1e
    157c:	6c 19       	sub	r22, r12
    157e:	7d 09       	sbc	r23, r13
    1580:	8e 09       	sbc	r24, r14
    1582:	9f 09       	sbc	r25, r15
    1584:	ca 80       	ldd	r12, Y+2	; 0x02
    1586:	db 80       	ldd	r13, Y+3	; 0x03
    1588:	0d 2c       	mov	r0, r13
    158a:	00 0c       	add	r0, r0
    158c:	ee 08       	sbc	r14, r14
    158e:	ff 08       	sbc	r15, r15
    1590:	c6 16       	cp	r12, r22
    1592:	d7 06       	cpc	r13, r23
    1594:	e8 06       	cpc	r14, r24
    1596:	f9 06       	cpc	r15, r25
    1598:	38 f4       	brcc	.+14     	; 0x15a8 <OneButton::tick()+0x13e>
    159a:	ed 85       	ldd	r30, Y+13	; 0x0d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    159c:	fe 85       	ldd	r31, Y+14	; 0x0e
    159e:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    15a0:	09 f4       	brne	.+2      	; 0x15a4 <OneButton::tick()+0x13a>
    15a2:	ae cf       	rjmp	.-164    	; 0x1500 <OneButton::tick()+0x96>
    15a4:	09 95       	icall
    15a6:	ac cf       	rjmp	.-168    	; 0x1500 <OneButton::tick()+0x96>
    15a8:	8a 85       	ldd	r24, Y+10	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    15aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    15ac:	80 17       	cp	r24, r16
    15ae:	91 07       	cpc	r25, r17
    15b0:	09 f0       	breq	.+2      	; 0x15b4 <OneButton::tick()+0x14a>
    15b2:	7d cf       	rjmp	.-262    	; 0x14ae <OneButton::tick()+0x44>
    15b4:	83 e0       	ldi	r24, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    15b6:	90 e0       	ldi	r25, 0x00	; 0
    15b8:	a8 cf       	rjmp	.-176    	; 0x150a <OneButton::tick()+0xa0>
    15ba:	23 30       	cpi	r18, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    15bc:	31 05       	cpc	r19, r1
    15be:	49 f4       	brne	.+18     	; 0x15d2 <OneButton::tick()+0x168>
    15c0:	88 85       	ldd	r24, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    15c2:	99 85       	ldd	r25, Y+9	; 0x09
    15c4:	80 17       	cp	r24, r16
    15c6:	91 07       	cpc	r25, r17
    15c8:	09 f0       	breq	.+2      	; 0x15cc <OneButton::tick()+0x162>
    15ca:	71 cf       	rjmp	.-286    	; 0x14ae <OneButton::tick()+0x44>
    15cc:	ef 85       	ldd	r30, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    15ce:	f8 89       	ldd	r31, Y+16	; 0x10
    15d0:	e6 cf       	rjmp	.-52     	; 0x159e <OneButton::tick()+0x134>
    15d2:	26 30       	cpi	r18, 0x06	; 6
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    15d4:	31 05       	cpc	r19, r1
    15d6:	09 f0       	breq	.+2      	; 0x15da <OneButton::tick()+0x170>
    15d8:	6a cf       	rjmp	.-300    	; 0x14ae <OneButton::tick()+0x44>
    15da:	88 85       	ldd	r24, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    15dc:	99 85       	ldd	r25, Y+9	; 0x09
    15de:	80 17       	cp	r24, r16
    15e0:	91 07       	cpc	r25, r17
    15e2:	21 f4       	brne	.+8      	; 0x15ec <OneButton::tick()+0x182>
    15e4:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    15e6:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    15e8:	fe 89       	ldd	r31, Y+22	; 0x16
    15ea:	d9 cf       	rjmp	.-78     	; 0x159e <OneButton::tick()+0x134>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    15ec:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    15ee:	8c 87       	std	Y+12, r24	; 0x0c
    15f0:	ef 89       	ldd	r30, Y+23	; 0x17
    15f2:	f8 8d       	ldd	r31, Y+24	; 0x18
    15f4:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    15f6:	09 f4       	brne	.+2      	; 0x15fa <OneButton::tick()+0x190>
    15f8:	5a cf       	rjmp	.-332    	; 0x14ae <OneButton::tick()+0x44>
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	ff 90       	pop	r15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if(_longPressStopFunc) _longPressStopFunc();
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1604:	ef 90       	pop	r14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1606:	df 90       	pop	r13
    1608:	cf 90       	pop	r12
    160a:	09 94       	ijmp

0000160c <STOP_BUZZER()>:
stop():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    160c:	eb ed       	ldi	r30, 0xDB	; 219
    160e:	fa e2       	ldi	r31, 0x2A	; 42
    1610:	10 82       	st	Z, r1
    1612:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1614:	14 86       	std	Z+12, r1	; 0x0c
    1616:	15 86       	std	Z+13, r1	; 0x0d
    1618:	16 86       	std	Z+14, r1	; 0x0e
    161a:	17 86       	std	Z+15, r1	; 0x0f
    161c:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
    161e:	60 e0       	ldi	r22, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1620:	80 e1       	ldi	r24, 0x10	; 16
    1622:	07 cc       	rjmp	.-2034   	; 0xe32 <digitalWrite.part.2>

00001624 <STOP_BUZZER1()>:
STOP_BUZZER1():
    1624:	85 ea       	ldi	r24, 0xA5	; 165
    1626:	9a e2       	ldi	r25, 0x2A	; 42
    1628:	3e de       	rcall	.-900    	; 0x12a6 <Ticker::start()>
digitalWrite():
    162a:	61 e0       	ldi	r22, 0x01	; 1
    162c:	80 e1       	ldi	r24, 0x10	; 16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    162e:	01 cc       	rjmp	.-2046   	; 0xe32 <digitalWrite.part.2>

00001630 <STOP_BUZZER2()>:
    1630:	60 e0       	ldi	r22, 0x00	; 0
    1632:	80 e1       	ldi	r24, 0x10	; 16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1634:	fe db       	rcall	.-2052   	; 0xe32 <digitalWrite.part.2>
STOP_BUZZER2():
    1636:	80 91 91 28 	lds	r24, 0x2891	; 0x802891 <REPETATION_FLAG>
    163a:	88 23       	and	r24, r24
    163c:	49 f0       	breq	.+18     	; 0x1650 <STOP_BUZZER2()+0x20>
    163e:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <FOR_REP>
    1642:	90 91 9f 28 	lds	r25, 0x289F	; 0x80289f <FOR_REP+0x1>
    1646:	01 96       	adiw	r24, 0x01	; 1
    1648:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <FOR_REP>
    164c:	90 93 9f 28 	sts	0x289F, r25	; 0x80289f <FOR_REP+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:71
   FOR_REP2++;
    1650:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <FOR_REP2>
    1654:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <FOR_REP2+0x1>
    1658:	01 96       	adiw	r24, 0x01	; 1
    165a:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <FOR_REP2>
    165e:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <FOR_REP2+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:55
 digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1662:	08 95       	ret

00001664 <LED_off()>:
digitalWrite():
    1664:	60 e0       	ldi	r22, 0x00	; 0
    1666:	8a e1       	ldi	r24, 0x1A	; 26
    1668:	e4 db       	rcall	.-2104   	; 0xe32 <digitalWrite.part.2>
LED_off():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    166a:	8a e8       	ldi	r24, 0x8A	; 138
    166c:	9a e2       	ldi	r25, 0x2A	; 42
    166e:	1b ce       	rjmp	.-970    	; 0x12a6 <Ticker::start()>

00001670 <LED_on()>:
digitalWrite():
    1670:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1672:	8a e1       	ldi	r24, 0x1A	; 26
    1674:	de db       	rcall	.-2116   	; 0xe32 <digitalWrite.part.2>
LED_on():
    1676:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Blinking_Freq>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:51
 digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    167a:	8f 5f       	subi	r24, 0xFF	; 255
    167c:	80 93 98 28 	sts	0x2898, r24	; 0x802898 <Blinking_Freq>
    1680:	08 95       	ret

00001682 <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    1682:	8f 92       	push	r8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:52
}
    1684:	9f 92       	push	r9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:39
{  
  TEMP_UPDATE.start();
}

void RTD_TEMP_CAL()
{
    1686:	af 92       	push	r10
    1688:	bf 92       	push	r11
    168a:	cf 92       	push	r12
    168c:	df 92       	push	r13
    168e:	ef 92       	push	r14
    1690:	ff 92       	push	r15
    1692:	cf 93       	push	r28
    1694:	df 93       	push	r29
    1696:	c0 91 25 28 	lds	r28, 0x2825	; 0x802825 <sample>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:40
    sample++;
    169a:	d0 91 26 28 	lds	r29, 0x2826	; 0x802826 <sample+0x1>
    169e:	21 96       	adiw	r28, 0x01	; 1
    16a0:	c0 93 25 28 	sts	0x2825, r28	; 0x802825 <sample>
    16a4:	d0 93 26 28 	sts	0x2826, r29	; 0x802826 <sample+0x1>
analogRead():
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    16ae:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    16b2:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    16b6:	80 ff       	sbrs	r24, 0
    16b8:	fc cf       	rjmp	.-8      	; 0x16b2 <RTD_TEMP_CAL()+0x30>
    16ba:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    16be:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
    16c2:	07 2e       	mov	r0, r23
    16c4:	00 0c       	add	r0, r0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:41
    AvgVout = analogRead(A1);
    16c6:	88 0b       	sbc	r24, r24
    16c8:	99 0b       	sbc	r25, r25
    16ca:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    16ce:	20 91 21 28 	lds	r18, 0x2821	; 0x802821 <TotalVout>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:42
    TotalVout  += AvgVout ;  // Vout;
    16d2:	30 91 22 28 	lds	r19, 0x2822	; 0x802822 <TotalVout+0x1>
    16d6:	40 91 23 28 	lds	r20, 0x2823	; 0x802823 <TotalVout+0x2>
    16da:	50 91 24 28 	lds	r21, 0x2824	; 0x802824 <TotalVout+0x3>
    16de:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    16e2:	6b 01       	movw	r12, r22
    16e4:	7c 01       	movw	r14, r24
    16e6:	c0 92 21 28 	sts	0x2821, r12	; 0x802821 <TotalVout>
    16ea:	d0 92 22 28 	sts	0x2822, r13	; 0x802822 <TotalVout+0x1>
    16ee:	e0 92 23 28 	sts	0x2823, r14	; 0x802823 <TotalVout+0x2>
    16f2:	f0 92 24 28 	sts	0x2824, r15	; 0x802824 <TotalVout+0x3>
    16f6:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:43
    if(sample >= avrage_val)
    16fa:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    16fe:	c6 17       	cp	r28, r22
    1700:	d7 07       	cpc	r29, r23
    1702:	0c f4       	brge	.+2      	; 0x1706 <RTD_TEMP_CAL()+0x84>
    1704:	76 c0       	rjmp	.+236    	; 0x17f2 <RTD_TEMP_CAL()+0x170>
    1706:	07 2e       	mov	r0, r23
    1708:	00 0c       	add	r0, r0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:45
    {
      TotalVout /= avrage_val;
    170a:	88 0b       	sbc	r24, r24
    170c:	99 0b       	sbc	r25, r25
    170e:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    1712:	9b 01       	movw	r18, r22
    1714:	ac 01       	movw	r20, r24
    1716:	c7 01       	movw	r24, r14
    1718:	b6 01       	movw	r22, r12
    171a:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    171e:	60 93 21 28 	sts	0x2821, r22	; 0x802821 <TotalVout>
    1722:	70 93 22 28 	sts	0x2822, r23	; 0x802822 <TotalVout+0x1>
    1726:	80 93 23 28 	sts	0x2823, r24	; 0x802823 <TotalVout+0x2>
    172a:	90 93 24 28 	sts	0x2824, r25	; 0x802824 <TotalVout+0x3>
    172e:	20 e0       	ldi	r18, 0x00	; 0
    1730:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:46
      float Vout = ((TotalVout * Vs) / 1023.0);                                      // Voltage conversion
    1732:	40 ea       	ldi	r20, 0xA0	; 160
    1734:	50 e4       	ldi	r21, 0x40	; 64
    1736:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 ec       	ldi	r19, 0xC0	; 192
    173e:	4f e7       	ldi	r20, 0x7F	; 127
    1740:	54 e4       	ldi	r21, 0x44	; 68
    1742:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    1746:	20 e0       	ldi	r18, 0x00	; 0
    1748:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:47
      Vin = Vout / 10;                                                               // Gain
    174a:	40 e2       	ldi	r20, 0x20	; 32
    174c:	51 e4       	ldi	r21, 0x41	; 65
    174e:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    1752:	28 eb       	ldi	r18, 0xB8	; 184
    1754:	3f e8       	ldi	r19, 0x8F	; 143
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:48
      Rt = ((Vb + Vin) * Rc) / (Vs - (Vb + Vin));   //   Va = Vb + Vin 
    1756:	40 e6       	ldi	r20, 0x60	; 96
    1758:	5f e3       	ldi	r21, 0x3F	; 63
    175a:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    175e:	6b 01       	movw	r12, r22
    1760:	7c 01       	movw	r14, r24
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	4b ee       	ldi	r20, 0xEB	; 235
    1768:	53 e4       	ldi	r21, 0x43	; 67
    176a:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    176e:	4b 01       	movw	r8, r22
    1770:	5c 01       	movw	r10, r24
    1772:	a7 01       	movw	r20, r14
    1774:	96 01       	movw	r18, r12
    1776:	60 e0       	ldi	r22, 0x00	; 0
    1778:	70 e0       	ldi	r23, 0x00	; 0
    177a:	80 ea       	ldi	r24, 0xA0	; 160
    177c:	90 e4       	ldi	r25, 0x40	; 64
    177e:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    1782:	9b 01       	movw	r18, r22
    1784:	ac 01       	movw	r20, r24
    1786:	c5 01       	movw	r24, r10
    1788:	b4 01       	movw	r22, r8
    178a:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:49
      TEMP_DEG_RAW = ((Rt / Rb) - 1) / (Alpha);         // alpha is temp coefficient for paltinum
    1792:	48 ec       	ldi	r20, 0xC8	; 200
    1794:	52 e4       	ldi	r21, 0x42	; 66
    1796:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	40 e8       	ldi	r20, 0x80	; 128
    17a0:	5f e3       	ldi	r21, 0x3F	; 63
    17a2:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    17a6:	28 e4       	ldi	r18, 0x48	; 72
    17a8:	30 e5       	ldi	r19, 0x50	; 80
    17aa:	4c e7       	ldi	r20, 0x7C	; 124
    17ac:	5b e3       	ldi	r21, 0x3B	; 59
    17ae:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    17b2:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_DEG_RAW>
    17b6:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    17ba:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    17be:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    17c2:	26 e6       	ldi	r18, 0x66	; 102
    17c4:	36 e6       	ldi	r19, 0x66	; 102
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:50
      TEMP_FAH_RAW = (( TEMP_DEG_RAW * 1.8 ) + 32);
    17c6:	46 ee       	ldi	r20, 0xE6	; 230
    17c8:	5f e3       	ldi	r21, 0x3F	; 63
    17ca:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	40 e0       	ldi	r20, 0x00	; 0
    17d4:	52 e4       	ldi	r21, 0x42	; 66
    17d6:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    17da:	60 93 c1 28 	sts	0x28C1, r22	; 0x8028c1 <TEMP_FAH_RAW>
    17de:	70 93 c2 28 	sts	0x28C2, r23	; 0x8028c2 <TEMP_FAH_RAW+0x1>
    17e2:	80 93 c3 28 	sts	0x28C3, r24	; 0x8028c3 <TEMP_FAH_RAW+0x2>
    17e6:	90 93 c4 28 	sts	0x28C4, r25	; 0x8028c4 <TEMP_FAH_RAW+0x3>
    17ea:	10 92 25 28 	sts	0x2825, r1	; 0x802825 <sample>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:51
      sample = 0;   AvgVout = 0;   
    17ee:	10 92 26 28 	sts	0x2826, r1	; 0x802826 <sample+0x1>
    17f2:	82 e3       	ldi	r24, 0x32	; 50
    17f4:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:53
    }
   avrage_val = 50;
    17f6:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
    17fa:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    17fe:	df 91       	pop	r29
    1800:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Temp.cpp:54
}
    1802:	ff 90       	pop	r15
    1804:	ef 90       	pop	r14
    1806:	df 90       	pop	r13
    1808:	cf 90       	pop	r12
    180a:	bf 90       	pop	r11
    180c:	af 90       	pop	r10
    180e:	9f 90       	pop	r9
    1810:	8f 90       	pop	r8
    1812:	08 95       	ret

00001814 <PID_RUN()>:
PID_RUN():
    1814:	3f 92       	push	r3
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:27
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1816:	4f 92       	push	r4
    1818:	5f 92       	push	r5
    181a:	6f 92       	push	r6
    181c:	7f 92       	push	r7
    181e:	8f 92       	push	r8
    1820:	9f 92       	push	r9
    1822:	af 92       	push	r10
    1824:	bf 92       	push	r11
    1826:	cf 92       	push	r12
    1828:	df 92       	push	r13
    182a:	ef 92       	push	r14
    182c:	ff 92       	push	r15
    182e:	0f 93       	push	r16
    1830:	1f 93       	push	r17
    1832:	cf 93       	push	r28
    1834:	df 93       	push	r29
    1836:	cd b7       	in	r28, 0x3d	; 61
    1838:	de b7       	in	r29, 0x3e	; 62
    183a:	2e 97       	sbiw	r28, 0x0e	; 14
    183c:	cd bf       	out	0x3d, r28	; 61
    183e:	de bf       	out	0x3e, r29	; 62
Compute():
    1840:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <myPID+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1844:	88 23       	and	r24, r24
    1846:	09 f4       	brne	.+2      	; 0x184a <PID_RUN()+0x36>
    1848:	29 c1       	rjmp	.+594    	; 0x1a9c <PID_RUN()+0x288>
    184a:	bd db       	rcall	.-2182   	; 0xfc6 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    184c:	6d 83       	std	Y+5, r22	; 0x05
    184e:	7e 83       	std	Y+6, r23	; 0x06
    1850:	8f 83       	std	Y+7, r24	; 0x07
    1852:	98 87       	std	Y+8, r25	; 0x08
    1854:	80 91 65 29 	lds	r24, 0x2965	; 0x802965 <myPID+0x22>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1858:	90 91 66 29 	lds	r25, 0x2966	; 0x802966 <myPID+0x23>
    185c:	a0 91 67 29 	lds	r26, 0x2967	; 0x802967 <myPID+0x24>
    1860:	b0 91 68 29 	lds	r27, 0x2968	; 0x802968 <myPID+0x25>
    1864:	4d 81       	ldd	r20, Y+5	; 0x05
    1866:	5e 81       	ldd	r21, Y+6	; 0x06
    1868:	6f 81       	ldd	r22, Y+7	; 0x07
    186a:	78 85       	ldd	r23, Y+8	; 0x08
    186c:	48 1b       	sub	r20, r24
    186e:	59 0b       	sbc	r21, r25
    1870:	6a 0b       	sbc	r22, r26
    1872:	7b 0b       	sbc	r23, r27
    1874:	80 91 71 29 	lds	r24, 0x2971	; 0x802971 <myPID+0x2e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1878:	90 91 72 29 	lds	r25, 0x2972	; 0x802972 <myPID+0x2f>
    187c:	a0 91 73 29 	lds	r26, 0x2973	; 0x802973 <myPID+0x30>
    1880:	b0 91 74 29 	lds	r27, 0x2974	; 0x802974 <myPID+0x31>
    1884:	48 17       	cp	r20, r24
    1886:	59 07       	cpc	r21, r25
    1888:	6a 07       	cpc	r22, r26
    188a:	7b 07       	cpc	r23, r27
    188c:	08 f4       	brcc	.+2      	; 0x1890 <PID_RUN()+0x7c>
    188e:	06 c1       	rjmp	.+524    	; 0x1a9c <PID_RUN()+0x288>
    1890:	e0 91 5f 29 	lds	r30, 0x295F	; 0x80295f <myPID+0x1c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1894:	f0 91 60 29 	lds	r31, 0x2960	; 0x802960 <myPID+0x1d>
    1898:	80 81       	ld	r24, Z
    189a:	91 81       	ldd	r25, Z+1	; 0x01
    189c:	a2 81       	ldd	r26, Z+2	; 0x02
    189e:	b3 81       	ldd	r27, Z+3	; 0x03
    18a0:	89 83       	std	Y+1, r24	; 0x01
    18a2:	9a 83       	std	Y+2, r25	; 0x02
    18a4:	ab 83       	std	Y+3, r26	; 0x03
    18a6:	bc 83       	std	Y+4, r27	; 0x04
    18a8:	e0 91 63 29 	lds	r30, 0x2963	; 0x802963 <myPID+0x20>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    18ac:	f0 91 64 29 	lds	r31, 0x2964	; 0x802964 <myPID+0x21>
    18b0:	9c 01       	movw	r18, r24
    18b2:	ad 01       	movw	r20, r26
    18b4:	60 81       	ld	r22, Z
    18b6:	71 81       	ldd	r23, Z+1	; 0x01
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    18c0:	4b 01       	movw	r8, r22
    18c2:	5c 01       	movw	r10, r24
    18c4:	20 91 6d 29 	lds	r18, 0x296D	; 0x80296d <myPID+0x2a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    18c8:	30 91 6e 29 	lds	r19, 0x296E	; 0x80296e <myPID+0x2b>
    18cc:	40 91 6f 29 	lds	r20, 0x296F	; 0x80296f <myPID+0x2c>
    18d0:	50 91 70 29 	lds	r21, 0x2970	; 0x802970 <myPID+0x2d>
    18d4:	69 81       	ldd	r22, Y+1	; 0x01
    18d6:	7a 81       	ldd	r23, Y+2	; 0x02
    18d8:	8b 81       	ldd	r24, Y+3	; 0x03
    18da:	9c 81       	ldd	r25, Y+4	; 0x04
    18dc:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    18e0:	6b 01       	movw	r12, r22
    18e2:	7c 01       	movw	r14, r24
    18e4:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <myPID+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    18e8:	30 91 54 29 	lds	r19, 0x2954	; 0x802954 <myPID+0x11>
    18ec:	40 91 55 29 	lds	r20, 0x2955	; 0x802955 <myPID+0x12>
    18f0:	50 91 56 29 	lds	r21, 0x2956	; 0x802956 <myPID+0x13>
    18f4:	c5 01       	movw	r24, r10
    18f6:	b4 01       	movw	r22, r8
    18f8:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    18fc:	20 91 69 29 	lds	r18, 0x2969	; 0x802969 <myPID+0x26>
    1900:	30 91 6a 29 	lds	r19, 0x296A	; 0x80296a <myPID+0x27>
    1904:	40 91 6b 29 	lds	r20, 0x296B	; 0x80296b <myPID+0x28>
    1908:	50 91 6c 29 	lds	r21, 0x296C	; 0x80296c <myPID+0x29>
    190c:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    1910:	2b 01       	movw	r4, r22
    1912:	3c 01       	movw	r6, r24
    1914:	40 92 69 29 	sts	0x2969, r4	; 0x802969 <myPID+0x26>
    1918:	50 92 6a 29 	sts	0x296A, r5	; 0x80296a <myPID+0x27>
    191c:	60 92 6b 29 	sts	0x296B, r6	; 0x80296b <myPID+0x28>
    1920:	70 92 6c 29 	sts	0x296C, r7	; 0x80296c <myPID+0x29>
    1924:	30 90 7e 29 	lds	r3, 0x297E	; 0x80297e <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1928:	31 10       	cpse	r3, r1
    192a:	1a c0       	rjmp	.+52     	; 0x1960 <PID_RUN()+0x14c>
    192c:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <myPID+0xc>
    1930:	30 91 50 29 	lds	r19, 0x2950	; 0x802950 <myPID+0xd>
    1934:	40 91 51 29 	lds	r20, 0x2951	; 0x802951 <myPID+0xe>
    1938:	50 91 52 29 	lds	r21, 0x2952	; 0x802952 <myPID+0xf>
    193c:	c7 01       	movw	r24, r14
    193e:	b6 01       	movw	r22, r12
    1940:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    1944:	9b 01       	movw	r18, r22
    1946:	ac 01       	movw	r20, r24
    1948:	c3 01       	movw	r24, r6
    194a:	b2 01       	movw	r22, r4
    194c:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    1950:	60 93 69 29 	sts	0x2969, r22	; 0x802969 <myPID+0x26>
    1954:	70 93 6a 29 	sts	0x296A, r23	; 0x80296a <myPID+0x27>
    1958:	80 93 6b 29 	sts	0x296B, r24	; 0x80296b <myPID+0x28>
    195c:	90 93 6c 29 	sts	0x296C, r25	; 0x80296c <myPID+0x29>
    1960:	40 90 69 29 	lds	r4, 0x2969	; 0x802969 <myPID+0x26>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1964:	50 90 6a 29 	lds	r5, 0x296A	; 0x80296a <myPID+0x27>
    1968:	60 90 6b 29 	lds	r6, 0x296B	; 0x80296b <myPID+0x28>
    196c:	70 90 6c 29 	lds	r7, 0x296C	; 0x80296c <myPID+0x29>
    1970:	10 91 79 29 	lds	r17, 0x2979	; 0x802979 <myPID+0x36>
    1974:	90 91 7a 29 	lds	r25, 0x297A	; 0x80297a <myPID+0x37>
    1978:	9e 87       	std	Y+14, r25	; 0x0e
    197a:	a0 91 7b 29 	lds	r26, 0x297B	; 0x80297b <myPID+0x38>
    197e:	ad 87       	std	Y+13, r26	; 0x0d
    1980:	00 91 7c 29 	lds	r16, 0x297C	; 0x80297c <myPID+0x39>
    1984:	21 2f       	mov	r18, r17
    1986:	39 2f       	mov	r19, r25
    1988:	4a 2f       	mov	r20, r26
    198a:	50 2f       	mov	r21, r16
    198c:	c3 01       	movw	r24, r6
    198e:	b2 01       	movw	r22, r4
    1990:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    1994:	18 16       	cp	r1, r24
    1996:	0c f0       	brlt	.+2      	; 0x199a <PID_RUN()+0x186>
    1998:	96 c0       	rjmp	.+300    	; 0x1ac6 <PID_RUN()+0x2b2>
    199a:	81 2f       	mov	r24, r17
    199c:	9e 85       	ldd	r25, Y+14	; 0x0e
    199e:	ad 85       	ldd	r26, Y+13	; 0x0d
    19a0:	b0 2f       	mov	r27, r16
    19a2:	80 93 69 29 	sts	0x2969, r24	; 0x802969 <myPID+0x26>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    19a6:	90 93 6a 29 	sts	0x296A, r25	; 0x80296a <myPID+0x27>
    19aa:	a0 93 6b 29 	sts	0x296B, r26	; 0x80296b <myPID+0x28>
    19ae:	b0 93 6c 29 	sts	0x296C, r27	; 0x80296c <myPID+0x29>
    19b2:	33 20       	and	r3, r3
    19b4:	09 f4       	brne	.+2      	; 0x19b8 <PID_RUN()+0x1a4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    19b6:	a0 c0       	rjmp	.+320    	; 0x1af8 <PID_RUN()+0x2e4>
    19b8:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <myPID+0xc>
    19bc:	30 91 50 29 	lds	r19, 0x2950	; 0x802950 <myPID+0xd>
    19c0:	40 91 51 29 	lds	r20, 0x2951	; 0x802951 <myPID+0xe>
    19c4:	50 91 52 29 	lds	r21, 0x2952	; 0x802952 <myPID+0xf>
    19c8:	c5 01       	movw	r24, r10
    19ca:	b4 01       	movw	r22, r8
    19cc:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    19d0:	4b 01       	movw	r8, r22
    19d2:	5c 01       	movw	r10, r24
    19d4:	20 91 57 29 	lds	r18, 0x2957	; 0x802957 <myPID+0x14>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    19d8:	30 91 58 29 	lds	r19, 0x2958	; 0x802958 <myPID+0x15>
    19dc:	40 91 59 29 	lds	r20, 0x2959	; 0x802959 <myPID+0x16>
    19e0:	50 91 5a 29 	lds	r21, 0x295A	; 0x80295a <myPID+0x17>
    19e4:	c7 01       	movw	r24, r14
    19e6:	b6 01       	movw	r22, r12
    19e8:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    19ec:	9b 01       	movw	r18, r22
    19ee:	ac 01       	movw	r20, r24
    19f0:	60 91 69 29 	lds	r22, 0x2969	; 0x802969 <myPID+0x26>
    19f4:	70 91 6a 29 	lds	r23, 0x296A	; 0x80296a <myPID+0x27>
    19f8:	80 91 6b 29 	lds	r24, 0x296B	; 0x80296b <myPID+0x28>
    19fc:	90 91 6c 29 	lds	r25, 0x296C	; 0x80296c <myPID+0x29>
    1a00:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    1a04:	a5 01       	movw	r20, r10
    1a06:	94 01       	movw	r18, r8
    1a08:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    1a0c:	6b 01       	movw	r12, r22
    1a0e:	7c 01       	movw	r14, r24
    1a10:	9b 01       	movw	r18, r22
    1a12:	ac 01       	movw	r20, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1a14:	61 2f       	mov	r22, r17
    1a16:	7e 85       	ldd	r23, Y+14	; 0x0e
    1a18:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a1a:	90 2f       	mov	r25, r16
    1a1c:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    1a20:	87 fd       	sbrc	r24, 7
    1a22:	18 c0       	rjmp	.+48     	; 0x1a54 <PID_RUN()+0x240>
    1a24:	10 91 75 29 	lds	r17, 0x2975	; 0x802975 <myPID+0x32>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1a28:	90 91 76 29 	lds	r25, 0x2976	; 0x802976 <myPID+0x33>
    1a2c:	9e 87       	std	Y+14, r25	; 0x0e
    1a2e:	a0 91 77 29 	lds	r26, 0x2977	; 0x802977 <myPID+0x34>
    1a32:	ad 87       	std	Y+13, r26	; 0x0d
    1a34:	00 91 78 29 	lds	r16, 0x2978	; 0x802978 <myPID+0x35>
    1a38:	21 2f       	mov	r18, r17
    1a3a:	39 2f       	mov	r19, r25
    1a3c:	4a 2f       	mov	r20, r26
    1a3e:	50 2f       	mov	r21, r16
    1a40:	b6 01       	movw	r22, r12
    1a42:	c7 01       	movw	r24, r14
    1a44:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    1a48:	87 fd       	sbrc	r24, 7
    1a4a:	04 c0       	rjmp	.+8      	; 0x1a54 <PID_RUN()+0x240>
PID_RUN():
    1a4c:	1c 2d       	mov	r17, r12
    1a4e:	de 86       	std	Y+14, r13	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1a50:	ed 86       	std	Y+13, r14	; 0x0d
    1a52:	0f 2d       	mov	r16, r15
Compute():
    1a54:	e0 91 61 29 	lds	r30, 0x2961	; 0x802961 <myPID+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1a58:	f0 91 62 29 	lds	r31, 0x2962	; 0x802962 <myPID+0x1f>
    1a5c:	81 2f       	mov	r24, r17
    1a5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a60:	ad 85       	ldd	r26, Y+13	; 0x0d
    1a62:	b0 2f       	mov	r27, r16
    1a64:	80 83       	st	Z, r24
    1a66:	91 83       	std	Z+1, r25	; 0x01
    1a68:	a2 83       	std	Z+2, r26	; 0x02
    1a6a:	b3 83       	std	Z+3, r27	; 0x03
    1a6c:	89 81       	ldd	r24, Y+1	; 0x01
    1a6e:	9a 81       	ldd	r25, Y+2	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1a70:	ab 81       	ldd	r26, Y+3	; 0x03
    1a72:	bc 81       	ldd	r27, Y+4	; 0x04
    1a74:	80 93 6d 29 	sts	0x296D, r24	; 0x80296d <myPID+0x2a>
    1a78:	90 93 6e 29 	sts	0x296E, r25	; 0x80296e <myPID+0x2b>
    1a7c:	a0 93 6f 29 	sts	0x296F, r26	; 0x80296f <myPID+0x2c>
    1a80:	b0 93 70 29 	sts	0x2970, r27	; 0x802970 <myPID+0x2d>
    1a84:	8d 81       	ldd	r24, Y+5	; 0x05
    1a86:	9e 81       	ldd	r25, Y+6	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    1a88:	af 81       	ldd	r26, Y+7	; 0x07
    1a8a:	b8 85       	ldd	r27, Y+8	; 0x08
    1a8c:	80 93 65 29 	sts	0x2965, r24	; 0x802965 <myPID+0x22>
    1a90:	90 93 66 29 	sts	0x2966, r25	; 0x802966 <myPID+0x23>
    1a94:	a0 93 67 29 	sts	0x2967, r26	; 0x802967 <myPID+0x24>
    1a98:	b0 93 68 29 	sts	0x2968, r27	; 0x802968 <myPID+0x25>
PID_RUN():
    1a9c:	2e 96       	adiw	r28, 0x0e	; 14
    1a9e:	cd bf       	out	0x3d, r28	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:29
   myPID.Compute();  
}
    1aa0:	de bf       	out	0x3e, r29	; 62
    1aa2:	df 91       	pop	r29
    1aa4:	cf 91       	pop	r28
    1aa6:	1f 91       	pop	r17
    1aa8:	0f 91       	pop	r16
    1aaa:	ff 90       	pop	r15
    1aac:	ef 90       	pop	r14
    1aae:	df 90       	pop	r13
    1ab0:	cf 90       	pop	r12
    1ab2:	bf 90       	pop	r11
    1ab4:	af 90       	pop	r10
    1ab6:	9f 90       	pop	r9
    1ab8:	8f 90       	pop	r8
    1aba:	7f 90       	pop	r7
    1abc:	6f 90       	pop	r6
    1abe:	5f 90       	pop	r5
    1ac0:	4f 90       	pop	r4
    1ac2:	3f 90       	pop	r3
    1ac4:	08 95       	ret
Compute():
    1ac6:	80 91 75 29 	lds	r24, 0x2975	; 0x802975 <myPID+0x32>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    1aca:	90 91 76 29 	lds	r25, 0x2976	; 0x802976 <myPID+0x33>
    1ace:	a0 91 77 29 	lds	r26, 0x2977	; 0x802977 <myPID+0x34>
    1ad2:	b0 91 78 29 	lds	r27, 0x2978	; 0x802978 <myPID+0x35>
    1ad6:	89 87       	std	Y+9, r24	; 0x09
    1ad8:	9a 87       	std	Y+10, r25	; 0x0a
    1ada:	ab 87       	std	Y+11, r26	; 0x0b
    1adc:	bc 87       	std	Y+12, r27	; 0x0c
    1ade:	9c 01       	movw	r18, r24
    1ae0:	ad 01       	movw	r20, r26
    1ae2:	c3 01       	movw	r24, r6
    1ae4:	b2 01       	movw	r22, r4
    1ae6:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    1aea:	87 ff       	sbrs	r24, 7
    1aec:	62 cf       	rjmp	.-316    	; 0x19b2 <PID_RUN()+0x19e>
    1aee:	89 85       	ldd	r24, Y+9	; 0x09
    1af0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af2:	ab 85       	ldd	r26, Y+11	; 0x0b
    1af4:	bc 85       	ldd	r27, Y+12	; 0x0c
    1af6:	55 cf       	rjmp	.-342    	; 0x19a2 <PID_RUN()+0x18e>
PID_RUN():
    1af8:	81 2c       	mov	r8, r1
    1afa:	91 2c       	mov	r9, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    1afc:	54 01       	movw	r10, r8
    1afe:	6a cf       	rjmp	.-300    	; 0x19d4 <PID_RUN()+0x1c0>

00001b00 <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    1b00:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:430
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
}

void DEC_LONGPRESS()
{ 
  if(!but1)
    1b04:	81 11       	cpse	r24, r1
    1b06:	0e c0       	rjmp	.+28     	; 0x1b24 <DEC_LONGPRESS()+0x24>
    1b08:	81 e0       	ldi	r24, 0x01	; 1
    1b0a:	80 93 87 28 	sts	0x2887, r24	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:432
  {
    BLINK_STATS=1;
    1b0e:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:433
    INC5++;
    1b12:	8f 5f       	subi	r24, 0xFF	; 255
    1b14:	80 93 20 28 	sts	0x2820, r24	; 0x802820 <INC5>
    1b18:	89 31       	cpi	r24, 0x19	; 25
    1b1a:	24 f0       	brlt	.+8      	; 0x1b24 <DEC_LONGPRESS()+0x24>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:434
    if (INC5 >= 25)
    1b1c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.65]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:436
    {
      Butn.SET_CHANGE_DOWN();
    1b20:	10 92 20 28 	sts	0x2820, r1	; 0x802820 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:437
      INC5 = 0;
    1b24:	08 95       	ret

00001b26 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
    1b26:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:440
    }
  }
}
    1b2a:	08 95       	ret

00001b2c <INC_LONGPRESS()>:
INC_LONGPRESS():
    1b2c:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:376
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}

void INC_LONGPRESS()
{
  if(!but1)
    1b30:	81 11       	cpse	r24, r1
    1b32:	0e c0       	rjmp	.+28     	; 0x1b50 <INC_LONGPRESS()+0x24>
    1b34:	81 e0       	ldi	r24, 0x01	; 1
    1b36:	80 93 87 28 	sts	0x2887, r24	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:378
  {
    BLINK_STATS=1;
    1b3a:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:379
    INC5++;
    1b3e:	8f 5f       	subi	r24, 0xFF	; 255
    1b40:	80 93 20 28 	sts	0x2820, r24	; 0x802820 <INC5>
    1b44:	89 31       	cpi	r24, 0x19	; 25
    1b46:	24 f0       	brlt	.+8      	; 0x1b50 <INC_LONGPRESS()+0x24>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:380
    if (INC5 >= 25)
    1b48:	0e 94 88 01 	call	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.66]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:382
    {
      Butn.SET_CHANGE_UP();
    1b4c:	10 92 20 28 	sts	0x2820, r1	; 0x802820 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:383
      INC5 = 0;
    1b50:	08 95       	ret

00001b52 <EERef::operator*() const>:
operator*():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:386
    }
  }
}
    1b52:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    1b54:	80 81       	ld	r24, Z
    1b56:	91 81       	ldd	r25, Z+1	; 0x01
    1b58:	fc 01       	movw	r30, r24
    1b5a:	ff 27       	eor	r31, r31
    1b5c:	90 fd       	sbrc	r25, 0
    1b5e:	06 c0       	rjmp	.+12     	; 0x1b6c <EERef::operator*() const+0x1a>
    1b60:	80 e0       	ldi	r24, 0x00	; 0
    1b62:	94 e1       	ldi	r25, 0x14	; 20
    1b64:	e8 2b       	or	r30, r24
    1b66:	f9 2b       	or	r31, r25
    1b68:	80 81       	ld	r24, Z
    1b6a:	08 95       	ret
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	93 e1       	ldi	r25, 0x13	; 19
    1b70:	f9 cf       	rjmp	.-14     	; 0x1b64 <EERef::operator*() const+0x12>

00001b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    1b72:	ef 92       	push	r14
    1b74:	ff 92       	push	r15
    1b76:	0f 93       	push	r16
    1b78:	1f 93       	push	r17
    1b7a:	cf 93       	push	r28
    1b7c:	df 93       	push	r29
    1b7e:	00 d0       	rcall	.+0      	; 0x1b80 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	8c 01       	movw	r16, r24
    1b86:	7b 01       	movw	r14, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    1b8c:	ce 01       	movw	r24, r28
    1b8e:	01 96       	adiw	r24, 0x01	; 1
    1b90:	e0 df       	rcall	.-64     	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    1b92:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1b94:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
    1b96:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    1b98:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    1b9a:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1b9c:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    1b9e:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    1ba0:	01 96       	adiw	r24, 0x01	; 1
    1ba2:	d7 df       	rcall	.-82     	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    1ba4:	f7 01       	movw	r30, r14
    1ba6:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1ba8:	c7 01       	movw	r24, r14
    1baa:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    1bac:	0f 90       	pop	r0
    1bae:	df 91       	pop	r29
    1bb0:	cf 91       	pop	r28
    1bb2:	1f 91       	pop	r17
    1bb4:	0f 91       	pop	r16
    1bb6:	ff 90       	pop	r15
    1bb8:	ef 90       	pop	r14
    1bba:	08 95       	ret

00001bbc <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    1bbc:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    1bbe:	bf 92       	push	r11
    1bc0:	cf 92       	push	r12
    1bc2:	df 92       	push	r13
    1bc4:	ef 92       	push	r14
    1bc6:	ff 92       	push	r15
    1bc8:	0f 93       	push	r16
    1bca:	1f 93       	push	r17
    1bcc:	cf 93       	push	r28
    1bce:	df 93       	push	r29
    1bd0:	00 d0       	rcall	.+0      	; 0x1bd2 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    1bd2:	cd b7       	in	r28, 0x3d	; 61
    1bd4:	de b7       	in	r29, 0x3e	; 62
    1bd6:	8b 01       	movw	r16, r22
    1bd8:	6b 01       	movw	r12, r22
    1bda:	24 e0       	ldi	r18, 0x04	; 4
    1bdc:	c2 0e       	add	r12, r18
    1bde:	d1 1c       	adc	r13, r1
    1be0:	7b 01       	movw	r14, r22
    1be2:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1be4:	a6 1a       	sub	r10, r22
    1be6:	b7 0a       	sbc	r11, r23
    1be8:	c5 01       	movw	r24, r10
    1bea:	8e 0d       	add	r24, r14
    1bec:	9f 1d       	adc	r25, r15
    1bee:	89 83       	std	Y+1, r24	; 0x01
    1bf0:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    1bf2:	ce 01       	movw	r24, r28
    1bf4:	01 96       	adiw	r24, 0x01	; 1
    1bf6:	ad df       	rcall	.-166    	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    1bf8:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    1bfa:	81 93       	st	Z+, r24
    1bfc:	7f 01       	movw	r14, r30
    1bfe:	ec 15       	cp	r30, r12
    1c00:	fd 05       	cpc	r31, r13
    1c02:	91 f7       	brne	.-28     	; 0x1be8 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    1c04:	c8 01       	movw	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    1c06:	0f 90       	pop	r0
    1c08:	0f 90       	pop	r0
    1c0a:	df 91       	pop	r29
    1c0c:	cf 91       	pop	r28
    1c0e:	1f 91       	pop	r17
    1c10:	0f 91       	pop	r16
    1c12:	ff 90       	pop	r15
    1c14:	ef 90       	pop	r14
    1c16:	df 90       	pop	r13
    1c18:	cf 90       	pop	r12
    1c1a:	bf 90       	pop	r11
    1c1c:	af 90       	pop	r10
    1c1e:	08 95       	ret

00001c20 <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
    1c20:	cf 93       	push	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    1c22:	df 93       	push	r29
    1c24:	00 d0       	rcall	.+0      	; 0x1c26 <EEPROMClass::read(int) [clone .isra.0]+0x6>
    1c26:	cd b7       	in	r28, 0x3d	; 61
    1c28:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    1c2a:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    1c2c:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    1c2e:	ce 01       	movw	r24, r28
    1c30:	01 96       	adiw	r24, 0x01	; 1
    1c32:	8f df       	rcall	.-226    	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    1c34:	0f 90       	pop	r0
    1c36:	0f 90       	pop	r0
    1c38:	df 91       	pop	r29
    1c3a:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    1c3c:	08 95       	ret

00001c3e <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    1c3e:	fc 01       	movw	r30, r24
    1c40:	ff 27       	eor	r31, r31
    1c42:	90 fd       	sbrc	r25, 0
    1c44:	12 c0       	rjmp	.+36     	; 0x1c6a <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    1c46:	80 e0       	ldi	r24, 0x00	; 0
    1c48:	94 e1       	ldi	r25, 0x14	; 20
    1c4a:	e8 2b       	or	r30, r24
    1c4c:	f9 2b       	or	r31, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    1c4e:	60 83       	st	Z, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:39
  cli();
    1c50:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    1c52:	f8 94       	cli
    1c54:	9d e9       	ldi	r25, 0x9D	; 157
    1c56:	23 e0       	ldi	r18, 0x03	; 3
    1c58:	94 bf       	out	0x34, r25	; 52
    1c5a:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  SREG = oldSREG;
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    1c5e:	8f bf       	out	0x3f, r24	; 63
    1c60:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    1c64:	81 fd       	sbrc	r24, 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    1c66:	fc cf       	rjmp	.-8      	; 0x1c60 <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    1c68:	08 95       	ret
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    1c6c:	93 e1       	ldi	r25, 0x13	; 19
    1c6e:	ed cf       	rjmp	.-38     	; 0x1c4a <nvm_write_byte(unsigned int, unsigned char)+0xc>

00001c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>:
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    1c70:	e6 cf       	rjmp	.-52     	; 0x1c3e <nvm_write_byte(unsigned int, unsigned char)>

00001c72 <EERef::update(unsigned char)>:
update():
    1c72:	1f 93       	push	r17
    1c74:	cf 93       	push	r28
    1c76:	df 93       	push	r29
    1c78:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    1c7a:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    1c7c:	6a df       	rcall	.-300    	; 0x1b52 <EERef::operator*() const>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    1c7e:	81 17       	cp	r24, r17
    1c80:	21 f0       	breq	.+8      	; 0x1c8a <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    1c82:	61 2f       	mov	r22, r17
    1c84:	88 81       	ld	r24, Y
    1c86:	99 81       	ldd	r25, Y+1	; 0x01
    1c88:	da df       	rcall	.-76     	; 0x1c3e <nvm_write_byte(unsigned int, unsigned char)>
update():
    1c8a:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	1f 91       	pop	r17
    1c92:	08 95       	ret

00001c94 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.62]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    1c94:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    1c96:	ff 92       	push	r15
    1c98:	0f 93       	push	r16
    1c9a:	1f 93       	push	r17
    1c9c:	cf 93       	push	r28
    1c9e:	df 93       	push	r29
    1ca0:	00 d0       	rcall	.+0      	; 0x1ca2 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.62]+0xe>
    1ca2:	cd b7       	in	r28, 0x3d	; 61
    1ca4:	de b7       	in	r29, 0x3e	; 62
    1ca6:	8c ee       	ldi	r24, 0xEC	; 236
    1ca8:	e8 2e       	mov	r14, r24
    1caa:	88 e2       	ldi	r24, 0x28	; 40
    1cac:	f8 2e       	mov	r15, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    1cae:	06 e4       	ldi	r16, 0x46	; 70
    1cb0:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    1cb2:	09 83       	std	Y+1, r16	; 0x01
    1cb4:	1a 83       	std	Y+2, r17	; 0x02
    1cb6:	f7 01       	movw	r30, r14
    1cb8:	61 91       	ld	r22, Z+
    1cba:	7f 01       	movw	r14, r30
    1cbc:	ce 01       	movw	r24, r28
    1cbe:	01 96       	adiw	r24, 0x01	; 1
    1cc0:	d8 df       	rcall	.-80     	; 0x1c72 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    1cc2:	0f 5f       	subi	r16, 0xFF	; 255
    1cc4:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    1cc6:	0a 34       	cpi	r16, 0x4A	; 74
    1cc8:	11 05       	cpc	r17, r1
    1cca:	99 f7       	brne	.-26     	; 0x1cb2 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.62]+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    1ccc:	8c ee       	ldi	r24, 0xEC	; 236
    1cce:	98 e2       	ldi	r25, 0x28	; 40
    1cd0:	0f 90       	pop	r0
    1cd2:	0f 90       	pop	r0
    1cd4:	df 91       	pop	r29
    1cd6:	cf 91       	pop	r28
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	ff 90       	pop	r15
    1cde:	ef 90       	pop	r14
    1ce0:	08 95       	ret

00001ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    1ce2:	ef 92       	push	r14
    1ce4:	ff 92       	push	r15
    1ce6:	0f 93       	push	r16
    1ce8:	1f 93       	push	r17
    1cea:	cf 93       	push	r28
    1cec:	df 93       	push	r29
    1cee:	00 d0       	rcall	.+0      	; 0x1cf0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]+0xe>
    1cf0:	cd b7       	in	r28, 0x3d	; 61
    1cf2:	de b7       	in	r29, 0x3e	; 62
    1cf4:	8c 01       	movw	r16, r24
    1cf6:	7b 01       	movw	r14, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    1cf8:	89 83       	std	Y+1, r24	; 0x01
    1cfa:	9a 83       	std	Y+2, r25	; 0x02
    1cfc:	fb 01       	movw	r30, r22
    1cfe:	60 81       	ld	r22, Z
    1d00:	ce 01       	movw	r24, r28
    1d02:	01 96       	adiw	r24, 0x01	; 1
    1d04:	b6 df       	rcall	.-148    	; 0x1c72 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    1d06:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    1d08:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    1d0a:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    1d0c:	1a 83       	std	Y+2, r17	; 0x02
    1d0e:	f7 01       	movw	r30, r14
    1d10:	61 81       	ldd	r22, Z+1	; 0x01
    1d12:	ce 01       	movw	r24, r28
    1d14:	01 96       	adiw	r24, 0x01	; 1
    1d16:	ad df       	rcall	.-166    	; 0x1c72 <EERef::update(unsigned char)>
    1d18:	c7 01       	movw	r24, r14
    1d1a:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    1d1c:	0f 90       	pop	r0
    1d1e:	df 91       	pop	r29
    1d20:	cf 91       	pop	r28
    1d22:	1f 91       	pop	r17
    1d24:	0f 91       	pop	r16
    1d26:	ff 90       	pop	r15
    1d28:	ef 90       	pop	r14
    1d2a:	08 95       	ret

00001d2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]>:
SET_SHORT_PRESS_FUNCTION():
    1d2c:	2f 92       	push	r2
    1d2e:	3f 92       	push	r3
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:87
  pinMode(ALARM_LED, OUTPUT);
  
   ALL_LED_OFF();  
}

void Pclass :: SET_SHORT_PRESS_FUNCTION()
    1d30:	4f 92       	push	r4
    1d32:	5f 92       	push	r5
    1d34:	6f 92       	push	r6
    1d36:	7f 92       	push	r7
    1d38:	8f 92       	push	r8
    1d3a:	9f 92       	push	r9
    1d3c:	af 92       	push	r10
    1d3e:	bf 92       	push	r11
    1d40:	cf 92       	push	r12
    1d42:	df 92       	push	r13
    1d44:	ef 92       	push	r14
    1d46:	ff 92       	push	r15
    1d48:	0f 93       	push	r16
    1d4a:	1f 93       	push	r17
    1d4c:	cf 93       	push	r28
    1d4e:	df 93       	push	r29
    1d50:	00 d0       	rcall	.+0      	; 0x1d52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x26>
    1d52:	00 d0       	rcall	.+0      	; 0x1d54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x28>
    1d54:	cd b7       	in	r28, 0x3d	; 61
    1d56:	de b7       	in	r29, 0x3e	; 62
    1d58:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:89
{
  switch (ENTER_BUT)
    1d5c:	29 83       	std	Y+1, r18	; 0x01
    1d5e:	22 30       	cpi	r18, 0x02	; 2
    1d60:	09 f4       	brne	.+2      	; 0x1d64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x38>
    1d62:	23 c5       	rjmp	.+2630   	; 0x27aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa7e>
    1d64:	e4 f4       	brge	.+56     	; 0x1d9e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x72>
    1d66:	22 23       	and	r18, r18
    1d68:	09 f4       	brne	.+2      	; 0x1d6c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x40>
    1d6a:	23 c3       	rjmp	.+1606   	; 0x23b2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x686>
    1d6c:	21 30       	cpi	r18, 0x01	; 1
    1d6e:	09 f4       	brne	.+2      	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>
    1d70:	99 c4       	rjmp	.+2354   	; 0x26a4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x978>
    1d72:	24 96       	adiw	r28, 0x04	; 4
    1d74:	cd bf       	out	0x3d, r28	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:503
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    1d76:	de bf       	out	0x3e, r29	; 62
    1d78:	df 91       	pop	r29
    1d7a:	cf 91       	pop	r28
    1d7c:	1f 91       	pop	r17
    1d7e:	0f 91       	pop	r16
    1d80:	ff 90       	pop	r15
    1d82:	ef 90       	pop	r14
    1d84:	df 90       	pop	r13
    1d86:	cf 90       	pop	r12
    1d88:	bf 90       	pop	r11
    1d8a:	af 90       	pop	r10
    1d8c:	9f 90       	pop	r9
    1d8e:	8f 90       	pop	r8
    1d90:	7f 90       	pop	r7
    1d92:	6f 90       	pop	r6
    1d94:	5f 90       	pop	r5
    1d96:	4f 90       	pop	r4
    1d98:	3f 90       	pop	r3
    1d9a:	2f 90       	pop	r2
    1d9c:	08 95       	ret
    1d9e:	39 81       	ldd	r19, Y+1	; 0x01
    1da0:	34 30       	cpi	r19, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:89
   ALL_LED_OFF();  
}

void Pclass :: SET_SHORT_PRESS_FUNCTION()
{
  switch (ENTER_BUT)
    1da2:	09 f4       	brne	.+2      	; 0x1da6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x7a>
    1da4:	11 c6       	rjmp	.+3106   	; 0x29c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc9c>
    1da6:	0c f4       	brge	.+2      	; 0x1daa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x7e>
    1da8:	8b c5       	rjmp	.+2838   	; 0x28c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb94>
    1daa:	35 30       	cpi	r19, 0x05	; 5
    1dac:	11 f7       	brne	.-60     	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>
    1dae:	80 90 f8 28 	lds	r8, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:246
          SET_VALUE[5] = STIR_VALUE_SET;
          PUMP_FLAG =1;                       
          SET_MIN = (SET_VALUE[3]*60) + SET_VALUE[4];              
          break;
    case 5: 
          SET_TEMP_DEG =(SET_VALUE[1] + (SET_VALUE[2] / 10.0)); 
    1db2:	90 90 f9 28 	lds	r9, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
    1db6:	60 91 fa 28 	lds	r22, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    1dba:	70 91 fb 28 	lds	r23, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
    1dbe:	07 2e       	mov	r0, r23
    1dc0:	00 0c       	add	r0, r0
    1dc2:	88 0b       	sbc	r24, r24
    1dc4:	99 0b       	sbc	r25, r25
    1dc6:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	40 e2       	ldi	r20, 0x20	; 32
    1dd0:	51 e4       	ldi	r21, 0x41	; 65
    1dd2:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    1dd6:	6b 01       	movw	r12, r22
    1dd8:	7c 01       	movw	r14, r24
    1dda:	b4 01       	movw	r22, r8
    1ddc:	99 0c       	add	r9, r9
    1dde:	88 0b       	sbc	r24, r24
    1de0:	99 0b       	sbc	r25, r25
    1de2:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    1de6:	9b 01       	movw	r18, r22
    1de8:	ac 01       	movw	r20, r24
    1dea:	c7 01       	movw	r24, r14
    1dec:	b6 01       	movw	r22, r12
    1dee:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    1df2:	6b 01       	movw	r12, r22
    1df4:	7c 01       	movw	r14, r24
    1df6:	c0 92 80 28 	sts	0x2880, r12	; 0x802880 <SET_TEMP_DEG>
    1dfa:	d0 92 81 28 	sts	0x2881, r13	; 0x802881 <SET_TEMP_DEG+0x1>
    1dfe:	e0 92 82 28 	sts	0x2882, r14	; 0x802882 <SET_TEMP_DEG+0x2>
    1e02:	f0 92 83 28 	sts	0x2883, r15	; 0x802883 <SET_TEMP_DEG+0x3>
    1e06:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:247
          SET_TEMP_FAH =  SET_VALUE[22];   
    1e0a:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
    1e0e:	89 83       	std	Y+1, r24	; 0x01
    1e10:	9a 83       	std	Y+2, r25	; 0x02
    1e12:	80 93 7e 28 	sts	0x287E, r24	; 0x80287e <SET_TEMP_FAH>
    1e16:	90 93 7f 28 	sts	0x287F, r25	; 0x80287f <SET_TEMP_FAH+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:248
          SET_HOUR=SET_VALUE[3];   
    1e1a:	a0 90 fc 28 	lds	r10, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
    1e1e:	b0 90 fd 28 	lds	r11, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
    1e22:	a0 92 7c 28 	sts	0x287C, r10	; 0x80287c <SET_HOUR>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:249
          SET_MINUTE= SET_VALUE[4];                       
    1e26:	b0 92 7d 28 	sts	0x287D, r11	; 0x80287d <SET_HOUR+0x1>
    1e2a:	00 91 fe 28 	lds	r16, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
    1e2e:	10 91 ff 28 	lds	r17, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:250
          SET_MIN = (SET_HOUR*60) + SET_MINUTE;  
    1e32:	00 93 7a 28 	sts	0x287A, r16	; 0x80287a <SET_MINUTE>
    1e36:	10 93 7b 28 	sts	0x287B, r17	; 0x80287b <SET_MINUTE+0x1>
    1e3a:	2c e3       	ldi	r18, 0x3C	; 60
    1e3c:	2a 9d       	mul	r18, r10
    1e3e:	c0 01       	movw	r24, r0
    1e40:	2b 9d       	mul	r18, r11
    1e42:	90 0d       	add	r25, r0
    1e44:	11 24       	eor	r1, r1
    1e46:	80 0f       	add	r24, r16
    1e48:	91 1f       	adc	r25, r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:252
          
          Process_Interrupt_flag=1;
    1e4a:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <SET_MIN>
    1e4e:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <SET_MIN+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:55
  EEPROM.write(135, Process_Interrupt_flag );
}

void Rclass :: Process_Set_Values_Store_On_Eeprom()
{
  EEPROM.write(115, SET_VALUE[1]);
    1e52:	bb 24       	eor	r11, r11
    1e54:	b3 94       	inc	r11
    1e56:	b0 92 8e 28 	sts	0x288E, r11	; 0x80288e <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    1e5a:	68 2d       	mov	r22, r8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:56
  EEPROM.write(117, SET_VALUE[2]);
    1e5c:	83 e7       	ldi	r24, 0x73	; 115
    1e5e:	90 e0       	ldi	r25, 0x00	; 0
    1e60:	07 df       	rcall	.-498    	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    1e62:	60 91 fa 28 	lds	r22, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    1e66:	85 e7       	ldi	r24, 0x75	; 117
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:57
  EEPROM.put(120, SET_VALUE[22]); 
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	02 df       	rcall	.-508    	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    1e6c:	62 e2       	ldi	r22, 0x22	; 34
    1e6e:	79 e2       	ldi	r23, 0x29	; 41
    1e70:	88 e7       	ldi	r24, 0x78	; 120
    1e72:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:58
  EEPROM.write(125, SET_HOUR );  
    1e74:	36 df       	rcall	.-404    	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    1e76:	6a 2d       	mov	r22, r10
    1e78:	8d e7       	ldi	r24, 0x7D	; 125
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	f9 de       	rcall	.-526    	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:59
  EEPROM.write(130, SET_MINUTE ); 
    1e7e:	60 2f       	mov	r22, r16
    1e80:	82 e8       	ldi	r24, 0x82	; 130
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	f5 de       	rcall	.-534    	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
Process_Time_Set_On_Eeprom():
    1e86:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:50
  Process_Interrupt_flag =  EEPROM.read(135);  
}

void Rclass ::  Process_Time_Set_On_Eeprom()
{  
  EEPROM.write(135, Process_Interrupt_flag );
    1e88:	87 e8       	ldi	r24, 0x87	; 135
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	f1 de       	rcall	.-542    	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    1e8e:	10 91 35 29 	lds	r17, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    1e92:	80 91 79 28 	lds	r24, 0x2879	; 0x802879 <FILL_BATH_ERROR_NOT_CLEAR>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:256
          Eeprom.Process_Set_Values_Store_On_Eeprom();          
          Eeprom.Process_Time_Set_On_Eeprom();

          if(!FILL_BATH_ERROR_NOT_CLEAR)
    1e96:	81 11       	cpse	r24, r1
    1e98:	7e c6       	rjmp	.+3324   	; 0x2b96 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe6a>
    1e9a:	11 11       	cpse	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:259
          {
            
            if( (!DEGREE_VALUE_SET &&  SET_TEMP_DEG >= (TEMP_DEG + 10)) || (DEGREE_VALUE_SET && SET_TEMP_FAH>= (TEMP_FAH +15)) ) { FILL_BATH_ERROR_NOT_CLEAR=0; }
    1e9c:	37 c6       	rjmp	.+3182   	; 0x2b0c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xde0>
    1e9e:	20 e0       	ldi	r18, 0x00	; 0
    1ea0:	30 e0       	ldi	r19, 0x00	; 0
    1ea2:	40 e2       	ldi	r20, 0x20	; 32
    1ea4:	51 e4       	ldi	r21, 0x41	; 65
    1ea6:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_DEG>
    1eaa:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    1eae:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    1eb2:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    1eb6:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    1eba:	9b 01       	movw	r18, r22
    1ebc:	ac 01       	movw	r20, r24
    1ebe:	c7 01       	movw	r24, r14
    1ec0:	b6 01       	movw	r22, r12
    1ec2:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    1ec6:	87 ff       	sbrs	r24, 7
    1ec8:	05 c0       	rjmp	.+10     	; 0x1ed4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1a8>
    1eca:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:260
            else                                                                                                                 { FILL_BATH_ERROR_NOT_CLEAR=1; }
    1ecc:	80 93 79 28 	sts	0x2879, r24	; 0x802879 <FILL_BATH_ERROR_NOT_CLEAR>
    1ed0:	11 11       	cpse	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:276
            CHECK_RATE_OF_HEATING=0;
            digitalWrite(HEATER, HIGH);
            TEMP_VALUE_INITIAL = TEMP_DEG_RAW;
            START_COUNT_VALUE = millis();
          } 
          if(!DEGREE_VALUE_SET)    
    1ed2:	3c c6       	rjmp	.+3192   	; 0x2b4c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe20>
    1ed4:	c0 92 75 28 	sts	0x2875, r12	; 0x802875 <PID_SETPOINT_To_Show>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:278
          {
               PID_SETPOINT_To_Show = SET_TEMP_DEG;  
    1ed8:	d0 92 76 28 	sts	0x2876, r13	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    1edc:	e0 92 77 28 	sts	0x2877, r14	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    1ee0:	f0 92 78 28 	sts	0x2878, r15	; 0x802878 <PID_SETPOINT_To_Show+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:279
               PID_SETPOINT = SET_TEMP_DEG;              
    1ee4:	c0 92 37 29 	sts	0x2937, r12	; 0x802937 <PID_SETPOINT>
    1ee8:	d0 92 38 29 	sts	0x2938, r13	; 0x802938 <PID_SETPOINT+0x1>
    1eec:	e0 92 39 29 	sts	0x2939, r14	; 0x802939 <PID_SETPOINT+0x2>
    1ef0:	f0 92 3a 29 	sts	0x293A, r15	; 0x80293a <PID_SETPOINT+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:286
          else                 
          {
              PID_SETPOINT_To_Show = SET_TEMP_FAH;  
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
          }
          Alter_Disp.start();
    1ef4:	89 e3       	ldi	r24, 0x39	; 57
    1ef6:	9a e2       	ldi	r25, 0x2A	; 42
    1ef8:	d6 d9       	rcall	.-3156   	; 0x12a6 <Ticker::start()>
    1efa:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:287
          Alternate_Display_Flag =1; 
    1efc:	80 93 74 28 	sts	0x2874, r24	; 0x802874 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:325
                     if(COOLING_RATE <= - COOLOING_RATE_COMP_VAL) 
                    {
                      if(COOLING_CYCLE_COUNT < 1) 
                      {
                        COOLING_CYCLE_COUNT++;
                        COOLOING_RATE_COMP_VAL = 0.01;
    1f00:	8a e0       	ldi	r24, 0x0A	; 10
    1f02:	88 2e       	mov	r8, r24
    1f04:	87 ed       	ldi	r24, 0xD7	; 215
    1f06:	98 2e       	mov	r9, r24
    1f08:	83 e2       	ldi	r24, 0x23	; 35
    1f0a:	a8 2e       	mov	r10, r24
    1f0c:	8c e3       	ldi	r24, 0x3C	; 60
    1f0e:	b8 2e       	mov	r11, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:378
                   Tick.BUZZ_INTERVAL1(800);                     
                    if(REP == 0)  
                    {
                      REPETATION_FLAG=1;
                      Tick.BUZZ_TICK_START();
                      REP++;
    1f10:	01 e0       	ldi	r16, 0x01	; 1
    1f12:	10 e0       	ldi	r17, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:386
                    {
                      Tick.BUZZ_TICK_STOP();
                      REPETATION_FLAG=0;  
                    }
               }                  
               SET_HOUR = SET_MIN/60;
    1f14:	9c e3       	ldi	r25, 0x3C	; 60
    1f16:	29 2e       	mov	r2, r25
    1f18:	31 2c       	mov	r3, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:289
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
          }
          Alter_Disp.start();
          Alternate_Display_Flag =1; 
                 
          while(SET_MIN >0  ) 
    1f1a:	80 91 84 28 	lds	r24, 0x2884	; 0x802884 <SET_MIN>
    1f1e:	90 91 85 28 	lds	r25, 0x2885	; 0x802885 <SET_MIN+0x1>
    1f22:	18 16       	cp	r1, r24
    1f24:	19 06       	cpc	r1, r25
    1f26:	14 f0       	brlt	.+4      	; 0x1f2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x200>
    1f28:	0c 94 9b 17 	jmp	0x2f36	; 0x2f36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x120a>
digitalWrite():
    1f2c:	61 e0       	ldi	r22, 0x01	; 1
    1f2e:	8d e1       	ldi	r24, 0x1D	; 29
    1f30:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    1f34:	60 e0       	ldi	r22, 0x00	; 0
    1f36:	8b e1       	ldi	r24, 0x1B	; 27
    1f38:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:293
          {
               digitalWrite(SET_PARA_LED, HIGH);
               digitalWrite(HEATER_STATUS_LED, LOW);               
               Temp.RTD_TEMP_CONV();
    1f3c:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
DISP_UPDATE():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:98
  
}

void Eclass :: DISP_UPDATE()
{
  DISP.update();
    1f40:	86 ef       	ldi	r24, 0xF6	; 246
    1f42:	9a e2       	ldi	r25, 0x2A	; 42
    1f44:	52 d9       	rcall	.-3420   	; 0x11ea <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    1f46:	80 91 86 28 	lds	r24, 0x2886	; 0x802886 <STIR_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:296
               led.DISP_UPDATE();
              // Eeprom.Save_Pump_Data();  //Siddhesh
               if(STIR_VALUE_SET && select_product_type)  digitalWrite(PUMP, HIGH); //Siddhesh
    1f4a:	88 23       	and	r24, r24
    1f4c:	29 f0       	breq	.+10     	; 0x1f58 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x22c>
    1f4e:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
digitalWrite():
    1f52:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    1f54:	81 11       	cpse	r24, r1
    1f56:	01 c0       	rjmp	.+2      	; 0x1f5a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x22e>
digitalWrite():
    1f58:	60 e0       	ldi	r22, 0x00	; 0
    1f5a:	89 e1       	ldi	r24, 0x19	; 25
    1f5c:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    1f60:	f0 90 8f 28 	lds	r15, 0x288F	; 0x80288f <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:298
               else                                        digitalWrite(PUMP, LOW);
               if( !CHECK_RATE_OF_HEATING )  STOP_COUNT_VALUE = millis();
    1f64:	f1 10       	cpse	r15, r1
    1f66:	09 c0       	rjmp	.+18     	; 0x1f7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x24e>
    1f68:	2e d8       	rcall	.-4004   	; 0xfc6 <millis>
    1f6a:	60 93 70 28 	sts	0x2870, r22	; 0x802870 <STOP_COUNT_VALUE>
    1f6e:	70 93 71 28 	sts	0x2871, r23	; 0x802871 <STOP_COUNT_VALUE+0x1>
    1f72:	80 93 72 28 	sts	0x2872, r24	; 0x802872 <STOP_COUNT_VALUE+0x2>
    1f76:	90 93 73 28 	sts	0x2873, r25	; 0x802873 <STOP_COUNT_VALUE+0x3>
    1f7a:	60 91 70 28 	lds	r22, 0x2870	; 0x802870 <STOP_COUNT_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:300
               
               if(((STOP_COUNT_VALUE - START_COUNT_VALUE) >= 210000) && !CHECK_RATE_OF_HEATING )       //---------------------------Rate of heating  
    1f7e:	70 91 71 28 	lds	r23, 0x2871	; 0x802871 <STOP_COUNT_VALUE+0x1>
    1f82:	80 91 72 28 	lds	r24, 0x2872	; 0x802872 <STOP_COUNT_VALUE+0x2>
    1f86:	90 91 73 28 	lds	r25, 0x2873	; 0x802873 <STOP_COUNT_VALUE+0x3>
    1f8a:	60 35       	cpi	r22, 0x50	; 80
    1f8c:	34 e3       	ldi	r19, 0x34	; 52
    1f8e:	73 07       	cpc	r23, r19
    1f90:	33 e0       	ldi	r19, 0x03	; 3
    1f92:	83 07       	cpc	r24, r19
    1f94:	91 05       	cpc	r25, r1
    1f96:	08 f4       	brcc	.+2      	; 0x1f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x26e>
    1f98:	41 c0       	rjmp	.+130    	; 0x201c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2f0>
    1f9a:	f1 10       	cpse	r15, r1
    1f9c:	3f c0       	rjmp	.+126    	; 0x201c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2f0>
    1f9e:	c0 90 d4 28 	lds	r12, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:302
               {
                 TEMP_VALUE_FINAL = TEMP_DEG_RAW;
    1fa2:	d0 90 d5 28 	lds	r13, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    1fa6:	e0 90 d6 28 	lds	r14, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    1faa:	f0 90 d7 28 	lds	r15, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    1fae:	20 e6       	ldi	r18, 0x60	; 96
    1fb0:	3a ee       	ldi	r19, 0xEA	; 234
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:303
                 RATE_OF_HEATING  = (TEMP_VALUE_FINAL - TEMP_VALUE_INITIAL)/((STOP_COUNT_VALUE - START_COUNT_VALUE) / 60000);    
    1fb2:	40 e0       	ldi	r20, 0x00	; 0
    1fb4:	50 e0       	ldi	r21, 0x00	; 0
    1fb6:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodsi4>
    1fba:	ca 01       	movw	r24, r20
    1fbc:	b9 01       	movw	r22, r18
    1fbe:	0e 94 36 33 	call	0x666c	; 0x666c <__floatunsisf>
    1fc2:	9b 01       	movw	r18, r22
    1fc4:	ac 01       	movw	r20, r24
    1fc6:	c7 01       	movw	r24, r14
    1fc8:	b6 01       	movw	r22, r12
    1fca:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    1fce:	60 93 93 28 	sts	0x2893, r22	; 0x802893 <RATE_OF_HEATING>
    1fd2:	70 93 94 28 	sts	0x2894, r23	; 0x802894 <RATE_OF_HEATING+0x1>
    1fd6:	80 93 95 28 	sts	0x2895, r24	; 0x802895 <RATE_OF_HEATING+0x2>
    1fda:	90 93 96 28 	sts	0x2896, r25	; 0x802896 <RATE_OF_HEATING+0x3>
    1fde:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:304
                 PREVIOUS_COOLING_RATE_TIME = millis();                                              //-----------------------------To check cooling Rate 
    1fe2:	60 93 6c 28 	sts	0x286C, r22	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
    1fe6:	70 93 6d 28 	sts	0x286D, r23	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    1fea:	80 93 6e 28 	sts	0x286E, r24	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
    1fee:	90 93 6f 28 	sts	0x286F, r25	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
    1ff2:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:305
                 CAL_OF_10_MIN=millis();                                                            
    1ff6:	60 93 68 28 	sts	0x2868, r22	; 0x802868 <CAL_OF_10_MIN>
    1ffa:	70 93 69 28 	sts	0x2869, r23	; 0x802869 <CAL_OF_10_MIN+0x1>
    1ffe:	80 93 6a 28 	sts	0x286A, r24	; 0x80286a <CAL_OF_10_MIN+0x2>
    2002:	90 93 6b 28 	sts	0x286B, r25	; 0x80286b <CAL_OF_10_MIN+0x3>
    2006:	c0 92 64 28 	sts	0x2864, r12	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:306
                 PREVIOUS_TEMP_COOLING_RATE = TEMP_DEG_RAW;
    200a:	d0 92 65 28 	sts	0x2865, r13	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    200e:	e0 92 66 28 	sts	0x2866, r14	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2012:	f0 92 67 28 	sts	0x2867, r15	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2016:	81 e0       	ldi	r24, 0x01	; 1
    2018:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:307
                 CHECK_RATE_OF_HEATING =1;                                                          //------------------------------Heating rate is checked                             
    201c:	c0 90 93 28 	lds	r12, 0x2893	; 0x802893 <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:310
               } 
               
               if(RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING )                                 //------------------------------- If water leve is less
    2020:	d0 90 94 28 	lds	r13, 0x2894	; 0x802894 <RATE_OF_HEATING+0x1>
    2024:	e0 90 95 28 	lds	r14, 0x2895	; 0x802895 <RATE_OF_HEATING+0x2>
    2028:	f0 90 96 28 	lds	r15, 0x2896	; 0x802896 <RATE_OF_HEATING+0x3>
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	40 e8       	ldi	r20, 0x80	; 128
    2032:	5f e3       	ldi	r21, 0x3F	; 63
    2034:	c7 01       	movw	r24, r14
    2036:	b6 01       	movw	r22, r12
    2038:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    203c:	87 fd       	sbrc	r24, 7
    203e:	fb c5       	rjmp	.+3062   	; 0x2c36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf0a>
    2040:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <CHECK_RATE_OF_HEATING>
    2044:	88 23       	and	r24, r24
    2046:	09 f4       	brne	.+2      	; 0x204a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x31e>
    2048:	9e c0       	rjmp	.+316    	; 0x2186 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x45a>
digitalWrite():
    204a:	60 e0       	ldi	r22, 0x00	; 0
    204c:	88 e1       	ldi	r24, 0x18	; 24
    204e:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
stop():
    2052:	10 92 1e 2a 	sts	0x2A1E, r1	; 0x802a1e <PID_EXE>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2056:	10 92 29 2a 	sts	0x2A29, r1	; 0x802a29 <PID_EXE+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    205a:	10 92 2a 2a 	sts	0x2A2A, r1	; 0x802a2a <PID_EXE+0xc>
    205e:	10 92 2b 2a 	sts	0x2A2B, r1	; 0x802a2b <PID_EXE+0xd>
    2062:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <PID_EXE+0xe>
    2066:	10 92 2d 2a 	sts	0x2A2D, r1	; 0x802a2d <PID_EXE+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    206a:	10 92 2e 2a 	sts	0x2A2E, r1	; 0x802a2e <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    206e:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:314
               {                    
                  digitalWrite(HEATER, LOW);
                  Pid.PID_Stop();                                                                  //-------------------------------stop pid 
                  CURRENT_COOLING_RATE_TIME = millis();
    2072:	6b 01       	movw	r12, r22
    2074:	7c 01       	movw	r14, r24
    2076:	c0 92 60 28 	sts	0x2860, r12	; 0x802860 <CURRENT_COOLING_RATE_TIME>
    207a:	d0 92 61 28 	sts	0x2861, r13	; 0x802861 <CURRENT_COOLING_RATE_TIME+0x1>
    207e:	e0 92 62 28 	sts	0x2862, r14	; 0x802862 <CURRENT_COOLING_RATE_TIME+0x2>
    2082:	f0 92 63 28 	sts	0x2863, r15	; 0x802863 <CURRENT_COOLING_RATE_TIME+0x3>
    2086:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <EXECUTE_PID_LOOP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:315
                  EXECUTE_PID_LOOP =0;             
    208a:	40 90 d4 28 	lds	r4, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:316
                  CURRENT_TEMP_COOLING_RATE= TEMP_DEG_RAW;      
    208e:	50 90 d5 28 	lds	r5, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    2092:	60 90 d6 28 	lds	r6, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    2096:	70 90 d7 28 	lds	r7, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    209a:	40 92 5c 28 	sts	0x285C, r4	; 0x80285c <CURRENT_TEMP_COOLING_RATE>
    209e:	50 92 5d 28 	sts	0x285D, r5	; 0x80285d <CURRENT_TEMP_COOLING_RATE+0x1>
    20a2:	60 92 5e 28 	sts	0x285E, r6	; 0x80285e <CURRENT_TEMP_COOLING_RATE+0x2>
    20a6:	70 92 5f 28 	sts	0x285F, r7	; 0x80285f <CURRENT_TEMP_COOLING_RATE+0x3>
    20aa:	80 91 6c 28 	lds	r24, 0x286C	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:317
                if((CURRENT_COOLING_RATE_TIME - PREVIOUS_COOLING_RATE_TIME) == 60000)              //--------------------------------check wAater is pour or not after every 1min
    20ae:	90 91 6d 28 	lds	r25, 0x286D	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    20b2:	a0 91 6e 28 	lds	r26, 0x286E	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
    20b6:	b0 91 6f 28 	lds	r27, 0x286F	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
    20ba:	a7 01       	movw	r20, r14
    20bc:	96 01       	movw	r18, r12
    20be:	28 1b       	sub	r18, r24
    20c0:	39 0b       	sbc	r19, r25
    20c2:	4a 0b       	sbc	r20, r26
    20c4:	5b 0b       	sbc	r21, r27
    20c6:	da 01       	movw	r26, r20
    20c8:	c9 01       	movw	r24, r18
    20ca:	80 36       	cpi	r24, 0x60	; 96
    20cc:	9a 4e       	sbci	r25, 0xEA	; 234
    20ce:	a1 05       	cpc	r26, r1
    20d0:	b1 05       	cpc	r27, r1
    20d2:	09 f0       	breq	.+2      	; 0x20d6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3aa>
    20d4:	58 c0       	rjmp	.+176    	; 0x2186 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x45a>
    20d6:	20 91 64 28 	lds	r18, 0x2864	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:319
                {
                     COOLING_RATE =((CURRENT_TEMP_COOLING_RATE - PREVIOUS_TEMP_COOLING_RATE) /(( CURRENT_COOLING_RATE_TIME - PREVIOUS_COOLING_RATE_TIME)/60000));
    20da:	30 91 65 28 	lds	r19, 0x2865	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    20de:	40 91 66 28 	lds	r20, 0x2866	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    20e2:	50 91 67 28 	lds	r21, 0x2867	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    20e6:	c3 01       	movw	r24, r6
    20e8:	b2 01       	movw	r22, r4
    20ea:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    20ee:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:320
                     if(COOLING_RATE <= - COOLOING_RATE_COMP_VAL) 
    20f2:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    20f6:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    20fa:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    20fe:	50 58       	subi	r21, 0x80	; 128
    2100:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    2104:	18 16       	cp	r1, r24
    2106:	0c f4       	brge	.+2      	; 0x210a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3de>
    2108:	72 c5       	rjmp	.+2788   	; 0x2bee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xec2>
    210a:	60 91 5a 28 	lds	r22, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT>
    210e:	70 91 5b 28 	lds	r23, 0x285B	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    2112:	16 16       	cp	r1, r22
    2114:	17 06       	cpc	r1, r23
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:322
                    {
                      if(COOLING_CYCLE_COUNT < 1) 
    2116:	0c f4       	brge	.+2      	; 0x211a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3ee>
    2118:	4b c5       	rjmp	.+2710   	; 0x2bb0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe84>
    211a:	cb 01       	movw	r24, r22
    211c:	01 96       	adiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:324
                      {
                        COOLING_CYCLE_COUNT++;
    211e:	80 93 5a 28 	sts	0x285A, r24	; 0x80285a <COOLING_CYCLE_COUNT>
    2122:	90 93 5b 28 	sts	0x285B, r25	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    2126:	80 92 05 28 	sts	0x2805, r8	; 0x802805 <COOLOING_RATE_COMP_VAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:325
                        COOLOING_RATE_COMP_VAL = 0.01;
    212a:	90 92 06 28 	sts	0x2806, r9	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    212e:	a0 92 07 28 	sts	0x2807, r10	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2132:	b0 92 08 28 	sts	0x2808, r11	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2136:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:326
                        TO_CHECK_REPETATION_WITHIN_TIME = millis(); 
    213a:	60 93 56 28 	sts	0x2856, r22	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME>
    213e:	70 93 57 28 	sts	0x2857, r23	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2142:	80 93 58 28 	sts	0x2858, r24	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2146:	90 93 59 28 	sts	0x2859, r25	; 0x802859 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    214a:	80 91 5a 28 	lds	r24, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:345
                      STOP_PROCESS=1;
                      digitalWrite(BUZZER,LOW);
                      ENTER_BUT=0;
                      SET_MIN =0;
                    }
                    if(COOLING_CYCLE_COUNT==2) RATE_OF_HEATING=0;  
    214e:	90 91 5b 28 	lds	r25, 0x285B	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    2152:	02 97       	sbiw	r24, 0x02	; 2
    2154:	41 f4       	brne	.+16     	; 0x2166 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x43a>
    2156:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <RATE_OF_HEATING>
    215a:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <RATE_OF_HEATING+0x1>
    215e:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <RATE_OF_HEATING+0x2>
    2162:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <RATE_OF_HEATING+0x3>
    2166:	c0 92 6c 28 	sts	0x286C, r12	; 0x80286c <PREVIOUS_COOLING_RATE_TIME>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:346
                    PREVIOUS_COOLING_RATE_TIME = CURRENT_COOLING_RATE_TIME;                 
    216a:	d0 92 6d 28 	sts	0x286D, r13	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x1>
    216e:	e0 92 6e 28 	sts	0x286E, r14	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x2>
    2172:	f0 92 6f 28 	sts	0x286F, r15	; 0x80286f <PREVIOUS_COOLING_RATE_TIME+0x3>
    2176:	40 92 64 28 	sts	0x2864, r4	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:347
                    PREVIOUS_TEMP_COOLING_RATE = CURRENT_TEMP_COOLING_RATE;
    217a:	50 92 65 28 	sts	0x2865, r5	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    217e:	60 92 66 28 	sts	0x2866, r6	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2182:	70 92 67 28 	sts	0x2867, r7	; 0x802867 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2186:	40 90 d8 28 	lds	r4, 0x28D8	; 0x8028d8 <TEMP_DEG>
    218a:	50 90 d9 28 	lds	r5, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    218e:	60 90 da 28 	lds	r6, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    2192:	70 90 db 28 	lds	r7, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    2196:	c0 90 75 28 	lds	r12, 0x2875	; 0x802875 <PID_SETPOINT_To_Show>
    219a:	d0 90 76 28 	lds	r13, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    219e:	e0 90 77 28 	lds	r14, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    21a2:	f0 90 78 28 	lds	r15, 0x2878	; 0x802878 <PID_SETPOINT_To_Show+0x3>
    21a6:	80 91 55 28 	lds	r24, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:356
               {
                  if(!EXECUTE_PID_LOOP) { Pid.PID_Start(); EXECUTE_PID_LOOP=1;}
                  Pid.PID_callingg(); 
               } 
                            
               if(!TIME_SOCK_OR_TOTAL)                     COUNTDOWN_START=1; 
    21aa:	81 11       	cpse	r24, r1
    21ac:	61 c5       	rjmp	.+2754   	; 0x2c70 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf44>
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	80 93 54 28 	sts	0x2854, r24	; 0x802854 <COUNTDOWN_START>
    21b4:	a3 01       	movw	r20, r6
    21b6:	92 01       	movw	r18, r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:370
                 {
                     if( TEMP_FAH >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
                     else                                          COUNTDOWN_START=0; 
                 }
               }                 
               if(TEMP_DEG >= PID_SETPOINT_To_Show )
    21b8:	c7 01       	movw	r24, r14
    21ba:	b6 01       	movw	r22, r12
    21bc:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    21c0:	18 16       	cp	r1, r24
    21c2:	0c f4       	brge	.+2      	; 0x21c6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x49a>
    21c4:	4c c0       	rjmp	.+152    	; 0x225e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x532>
interval():
    21c6:	80 91 ae 2a 	lds	r24, 0x2AAE	; 0x802aae <BUZZ_TICK2+0x9>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    21ca:	90 91 af 2a 	lds	r25, 0x2AAF	; 0x802aaf <BUZZ_TICK2+0xa>
    21ce:	89 2b       	or	r24, r25
    21d0:	09 f4       	brne	.+2      	; 0x21d4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4a8>
    21d2:	6d c5       	rjmp	.+2778   	; 0x2cae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf82>
    21d4:	80 e9       	ldi	r24, 0x90	; 144
    21d6:	91 e0       	ldi	r25, 0x01	; 1
    21d8:	a0 e0       	ldi	r26, 0x00	; 0
    21da:	b0 e0       	ldi	r27, 0x00	; 0
    21dc:	80 93 a6 2a 	sts	0x2AA6, r24	; 0x802aa6 <BUZZ_TICK2+0x1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    21e0:	90 93 a7 2a 	sts	0x2AA7, r25	; 0x802aa7 <BUZZ_TICK2+0x2>
    21e4:	a0 93 a8 2a 	sts	0x2AA8, r26	; 0x802aa8 <BUZZ_TICK2+0x3>
    21e8:	b0 93 a9 2a 	sts	0x2AA9, r27	; 0x802aa9 <BUZZ_TICK2+0x4>
    21ec:	80 91 c9 2a 	lds	r24, 0x2AC9	; 0x802ac9 <BUZZ_TICK1+0x9>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    21f0:	90 91 ca 2a 	lds	r25, 0x2ACA	; 0x802aca <BUZZ_TICK1+0xa>
    21f4:	89 2b       	or	r24, r25
    21f6:	09 f4       	brne	.+2      	; 0x21fa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4ce>
    21f8:	5f c5       	rjmp	.+2750   	; 0x2cb8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf8c>
    21fa:	80 e2       	ldi	r24, 0x20	; 32
    21fc:	93 e0       	ldi	r25, 0x03	; 3
    21fe:	a0 e0       	ldi	r26, 0x00	; 0
    2200:	b0 e0       	ldi	r27, 0x00	; 0
    2202:	80 93 c1 2a 	sts	0x2AC1, r24	; 0x802ac1 <BUZZ_TICK1+0x1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    2206:	90 93 c2 2a 	sts	0x2AC2, r25	; 0x802ac2 <BUZZ_TICK1+0x2>
    220a:	a0 93 c3 2a 	sts	0x2AC3, r26	; 0x802ac3 <BUZZ_TICK1+0x3>
    220e:	b0 93 c4 2a 	sts	0x2AC4, r27	; 0x802ac4 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    2212:	80 91 99 28 	lds	r24, 0x2899	; 0x802899 <REP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:374
               {                                       
                   Tick.BUZZ_INTERVAL2(400); 
                   Tick.BUZZ_INTERVAL1(800);                     
                    if(REP == 0)  
    2216:	90 91 9a 28 	lds	r25, 0x289A	; 0x80289a <REP+0x1>
    221a:	89 2b       	or	r24, r25
    221c:	51 f4       	brne	.+20     	; 0x2232 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x506>
    221e:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:376
                    {
                      REPETATION_FLAG=1;
    2220:	80 93 91 28 	sts	0x2891, r24	; 0x802891 <REPETATION_FLAG>
BUZZ_TICK_START():
    2224:	80 ec       	ldi	r24, 0xC0	; 192
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:81
  BUZZ_TICK1.stop();
}

void Tclass :: BUZZ_TICK_START()
{
  BUZZ_TICK1.start();
    2226:	9a e2       	ldi	r25, 0x2A	; 42
    2228:	3e d8       	rcall	.-3972   	; 0x12a6 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    222a:	00 93 99 28 	sts	0x2899, r16	; 0x802899 <REP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:378
                      Tick.BUZZ_TICK_START();
                      REP++;
    222e:	10 93 9a 28 	sts	0x289A, r17	; 0x80289a <REP+0x1>
    2232:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <FOR_REP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:380
                    }                    
                    if(FOR_REP==2) 
    2236:	90 91 9f 28 	lds	r25, 0x289F	; 0x80289f <FOR_REP+0x1>
    223a:	02 97       	sbiw	r24, 0x02	; 2
    223c:	81 f4       	brne	.+32     	; 0x225e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x532>
stop():
    223e:	10 92 c0 2a 	sts	0x2AC0, r1	; 0x802ac0 <BUZZ_TICK1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2242:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <BUZZ_TICK1+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2246:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <BUZZ_TICK1+0xc>
    224a:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <BUZZ_TICK1+0xd>
    224e:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <BUZZ_TICK1+0xe>
    2252:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <BUZZ_TICK1+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2256:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    225a:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <REPETATION_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:383
                    {
                      Tick.BUZZ_TICK_STOP();
                      REPETATION_FLAG=0;  
    225e:	80 91 84 28 	lds	r24, 0x2884	; 0x802884 <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:386
                    }
               }                  
               SET_HOUR = SET_MIN/60;
    2262:	90 91 85 28 	lds	r25, 0x2885	; 0x802885 <SET_MIN+0x1>
    2266:	b1 01       	movw	r22, r2
    2268:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
    226c:	6b 01       	movw	r12, r22
    226e:	7c 01       	movw	r14, r24
    2270:	60 93 7c 28 	sts	0x287C, r22	; 0x80287c <SET_HOUR>
    2274:	70 93 7d 28 	sts	0x287D, r23	; 0x80287d <SET_HOUR+0x1>
    2278:	80 93 52 28 	sts	0x2852, r24	; 0x802852 <REMAIN_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:387
               REMAIN_MIN = SET_MIN % 60 ;
    227c:	90 93 53 28 	sts	0x2853, r25	; 0x802853 <REMAIN_MIN+0x1>
    2280:	20 e0       	ldi	r18, 0x00	; 0
    2282:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:388
               DISP_INC++;
    2284:	40 e8       	ldi	r20, 0x80	; 128
    2286:	5f e3       	ldi	r21, 0x3F	; 63
    2288:	60 91 4e 28 	lds	r22, 0x284E	; 0x80284e <DISP_INC>
    228c:	70 91 4f 28 	lds	r23, 0x284F	; 0x80284f <DISP_INC+0x1>
    2290:	80 91 50 28 	lds	r24, 0x2850	; 0x802850 <DISP_INC+0x2>
    2294:	90 91 51 28 	lds	r25, 0x2851	; 0x802851 <DISP_INC+0x3>
    2298:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    229c:	60 93 4e 28 	sts	0x284E, r22	; 0x80284e <DISP_INC>
    22a0:	70 93 4f 28 	sts	0x284F, r23	; 0x80284f <DISP_INC+0x1>
    22a4:	80 93 50 28 	sts	0x2850, r24	; 0x802850 <DISP_INC+0x2>
    22a8:	90 93 51 28 	sts	0x2851, r25	; 0x802851 <DISP_INC+0x3>
    22ac:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:390
//               TIMER_LED_BLINK++;
               DOT1_1=0; 
    22b0:	20 e0       	ldi	r18, 0x00	; 0
    22b2:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:392
                        
               if(RATE_OF_HEATING >= 1 ) 
    22b4:	40 e8       	ldi	r20, 0x80	; 128
    22b6:	5f e3       	ldi	r21, 0x3F	; 63
    22b8:	60 91 93 28 	lds	r22, 0x2893	; 0x802893 <RATE_OF_HEATING>
    22bc:	70 91 94 28 	lds	r23, 0x2894	; 0x802894 <RATE_OF_HEATING+0x1>
    22c0:	80 91 95 28 	lds	r24, 0x2895	; 0x802895 <RATE_OF_HEATING+0x2>
    22c4:	90 91 96 28 	lds	r25, 0x2896	; 0x802896 <RATE_OF_HEATING+0x3>
    22c8:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    22cc:	87 fd       	sbrc	r24, 7
    22ce:	03 c5       	rjmp	.+2566   	; 0x2cd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfaa>
    22d0:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:395
               {
                 DOT1_1=0;
                 DOT2_1=0;
    22d4:	81 e0       	ldi	r24, 0x01	; 1
    22d6:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <IN_ERROR>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:396
                 IN_ERROR=1;
    22da:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <REPETATION_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:397
                 REPETATION_FLAG=0;  
    22de:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:398
                 ALL_LED_OFF();
    22e2:	60 e0       	ldi	r22, 0x00	; 0
    22e4:	8d e0       	ldi	r24, 0x0D	; 13
    22e6:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    22ea:	45 e1       	ldi	r20, 0x15	; 21
    22ec:	50 e0       	ldi	r21, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:179
    digits1[3] = DIG1_4;
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    22ee:	40 93 dc 28 	sts	0x28DC, r20	; 0x8028dc <digits2>
    22f2:	50 93 dd 28 	sts	0x28DD, r21	; 0x8028dd <digits2+0x1>
    22f6:	89 e1       	ldi	r24, 0x19	; 25
    22f8:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:180
    digits2[1] = DIG2_2;
    22fa:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    22fe:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    2302:	8a e1       	ldi	r24, 0x1A	; 26
    2304:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:181
    digits2[2] = DIG2_3;
    2306:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    230a:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    230e:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:182
    digits2[3] = DIG2_4;
    2312:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    2316:	8e e0       	ldi	r24, 0x0E	; 14
    2318:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:171
     }
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    231a:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    231e:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    2322:	8d e0       	ldi	r24, 0x0D	; 13
    2324:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:172
    digits1[1] = DIG1_2;
    2326:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    232a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    232e:	80 e1       	ldi	r24, 0x10	; 16
    2330:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:173
    digits1[2] = DIG1_3;
    2332:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    2336:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    233a:	8e e1       	ldi	r24, 0x1E	; 30
    233c:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:174
    digits1[3] = DIG1_4;
    233e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    2342:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
interval():
    2346:	80 91 ae 2a 	lds	r24, 0x2AAE	; 0x802aae <BUZZ_TICK2+0x9>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    234a:	90 91 af 2a 	lds	r25, 0x2AAF	; 0x802aaf <BUZZ_TICK2+0xa>
    234e:	89 2b       	or	r24, r25
    2350:	09 f4       	brne	.+2      	; 0x2354 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x628>
    2352:	b7 c4       	rjmp	.+2414   	; 0x2cc2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf96>
    2354:	88 ee       	ldi	r24, 0xE8	; 232
    2356:	93 e0       	ldi	r25, 0x03	; 3
    2358:	a0 e0       	ldi	r26, 0x00	; 0
    235a:	b0 e0       	ldi	r27, 0x00	; 0
    235c:	80 93 a6 2a 	sts	0x2AA6, r24	; 0x802aa6 <BUZZ_TICK2+0x1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    2360:	90 93 a7 2a 	sts	0x2AA7, r25	; 0x802aa7 <BUZZ_TICK2+0x2>
    2364:	a0 93 a8 2a 	sts	0x2AA8, r26	; 0x802aa8 <BUZZ_TICK2+0x3>
    2368:	b0 93 a9 2a 	sts	0x2AA9, r27	; 0x802aa9 <BUZZ_TICK2+0x4>
    236c:	80 91 c9 2a 	lds	r24, 0x2AC9	; 0x802ac9 <BUZZ_TICK1+0x9>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    2370:	90 91 ca 2a 	lds	r25, 0x2ACA	; 0x802aca <BUZZ_TICK1+0xa>
    2374:	89 2b       	or	r24, r25
    2376:	09 f4       	brne	.+2      	; 0x237a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x64e>
    2378:	a9 c4       	rjmp	.+2386   	; 0x2ccc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfa0>
    237a:	80 ed       	ldi	r24, 0xD0	; 208
    237c:	97 e0       	ldi	r25, 0x07	; 7
    237e:	a0 e0       	ldi	r26, 0x00	; 0
    2380:	b0 e0       	ldi	r27, 0x00	; 0
    2382:	80 93 c1 2a 	sts	0x2AC1, r24	; 0x802ac1 <BUZZ_TICK1+0x1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    2386:	90 93 c2 2a 	sts	0x2AC2, r25	; 0x802ac2 <BUZZ_TICK1+0x2>
    238a:	a0 93 c3 2a 	sts	0x2AC3, r26	; 0x802ac3 <BUZZ_TICK1+0x3>
    238e:	b0 93 c4 2a 	sts	0x2AC4, r27	; 0x802ac4 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    2392:	80 91 99 28 	lds	r24, 0x2899	; 0x802899 <REP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:404
                 digitalWrite(TIMER_LED2, LOW); 
                 led.DISPLAY_DIGIT2(21, 25, 26, 26) ;
                 led.DISPLAY_DIGIT1(14, 13, 16, 30) ;               
                 Tick.BUZZ_INTERVAL2(1000); 
                 Tick.BUZZ_INTERVAL1(2000); 
                 if(REP == 0)  
    2396:	90 91 9a 28 	lds	r25, 0x289A	; 0x80289a <REP+0x1>
    239a:	89 2b       	or	r24, r25
    239c:	09 f0       	breq	.+2      	; 0x23a0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x674>
    239e:	bd cd       	rjmp	.-1158   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
BUZZ_TICK_START():
    23a0:	80 ec       	ldi	r24, 0xC0	; 192
    23a2:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:81
    23a4:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    23a8:	00 93 99 28 	sts	0x2899, r16	; 0x802899 <REP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:407
                 {
                      Tick.BUZZ_TICK_START();
                      REP++;
    23ac:	10 93 9a 28 	sts	0x289A, r17	; 0x80289a <REP+0x1>
    23b0:	b4 cd       	rjmp	.-1176   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
    23b2:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <DOT2_0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:92
void Pclass :: SET_SHORT_PRESS_FUNCTION()
{
  switch (ENTER_BUT)
  {
    case 0 :
          DOT1_1 =  DOT1_0 = DOT1_2 = DOT2_2 = DOT2_0 =0;
    23b6:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <DOT2_2>
    23ba:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <DOT1_2>
    23be:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    23c2:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    23c6:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <FOR_REP2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:93
          REP= REP1= IN_ERROR= FOR_REP= FOR_REP2=0;
    23ca:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <FOR_REP2+0x1>
    23ce:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <FOR_REP>
    23d2:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <FOR_REP+0x1>
    23d6:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <IN_ERROR>
    23da:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <REP1>
    23de:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <REP1+0x1>
    23e2:	10 92 99 28 	sts	0x2899, r1	; 0x802899 <REP>
    23e6:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <REP+0x1>
    23ea:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <Blinking_Freq>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:94
          PUMP_FLAG = CAL2_START= Blinking_Freq=0;
    23ee:	10 92 97 28 	sts	0x2897, r1	; 0x802897 <CAL2_START>
    23f2:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <PUMP_FLAG>
    23f6:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:95
          PID_SETPOINT= STOP_PROCESS= EXECUTE_PID_LOOP = RATE_OF_HEATING=0;
    23fa:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <RATE_OF_HEATING+0x1>
    23fe:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <RATE_OF_HEATING+0x2>
    2402:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <RATE_OF_HEATING+0x3>
    2406:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <EXECUTE_PID_LOOP>
    240a:	10 92 37 29 	sts	0x2937, r1	; 0x802937 <PID_SETPOINT>
    240e:	10 92 38 29 	sts	0x2938, r1	; 0x802938 <PID_SETPOINT+0x1>
    2412:	10 92 39 29 	sts	0x2939, r1	; 0x802939 <PID_SETPOINT+0x2>
    2416:	10 92 3a 29 	sts	0x293A, r1	; 0x80293a <PID_SETPOINT+0x3>
    241a:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <REPETATION_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:96
          Mode_Button_Single_Press_In_Settings =REPETATION_FLAG =0; 
    241e:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    2422:	81 e0       	ldi	r24, 0x01	; 1
    2424:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <CHECK_RATE_OF_HEATING>
stop():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:97
          CHECK_RATE_OF_HEATING=1;
    2428:	10 92 c0 2a 	sts	0x2AC0, r1	; 0x802ac0 <BUZZ_TICK1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    242c:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <BUZZ_TICK1+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2430:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <BUZZ_TICK1+0xc>
    2434:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <BUZZ_TICK1+0xd>
    2438:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <BUZZ_TICK1+0xe>
    243c:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <BUZZ_TICK1+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2440:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <BUZZ_TICK1+0x10>
digitalWrite():
    2444:	60 e0       	ldi	r22, 0x00	; 0
    2446:	89 e1       	ldi	r24, 0x19	; 25
    2448:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
stop():
    244c:	10 92 8a 2a 	sts	0x2A8A, r1	; 0x802a8a <Blink_LED_ON>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2450:	10 92 95 2a 	sts	0x2A95, r1	; 0x802a95 <Blink_LED_ON+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2454:	10 92 96 2a 	sts	0x2A96, r1	; 0x802a96 <Blink_LED_ON+0xc>
    2458:	10 92 97 2a 	sts	0x2A97, r1	; 0x802a97 <Blink_LED_ON+0xd>
    245c:	10 92 98 2a 	sts	0x2A98, r1	; 0x802a98 <Blink_LED_ON+0xe>
    2460:	10 92 99 2a 	sts	0x2A99, r1	; 0x802a99 <Blink_LED_ON+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2464:	10 92 9a 2a 	sts	0x2A9A, r1	; 0x802a9a <Blink_LED_ON+0x10>
    2468:	10 92 6f 2a 	sts	0x2A6F, r1	; 0x802a6f <Blink_LED_OFF>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    246c:	10 92 7a 2a 	sts	0x2A7A, r1	; 0x802a7a <Blink_LED_OFF+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2470:	10 92 7b 2a 	sts	0x2A7B, r1	; 0x802a7b <Blink_LED_OFF+0xc>
    2474:	10 92 7c 2a 	sts	0x2A7C, r1	; 0x802a7c <Blink_LED_OFF+0xd>
    2478:	10 92 7d 2a 	sts	0x2A7D, r1	; 0x802a7d <Blink_LED_OFF+0xe>
    247c:	10 92 7e 2a 	sts	0x2A7E, r1	; 0x802a7e <Blink_LED_OFF+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2480:	10 92 7f 2a 	sts	0x2A7F, r1	; 0x802a7f <Blink_LED_OFF+0x10>
digitalWrite():
    2484:	60 e0       	ldi	r22, 0x00	; 0
    2486:	88 e1       	ldi	r24, 0x18	; 24
    2488:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
stop():
    248c:	10 92 1e 2a 	sts	0x2A1E, r1	; 0x802a1e <PID_EXE>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2490:	10 92 29 2a 	sts	0x2A29, r1	; 0x802a29 <PID_EXE+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2494:	10 92 2a 2a 	sts	0x2A2A, r1	; 0x802a2a <PID_EXE+0xc>
    2498:	10 92 2b 2a 	sts	0x2A2B, r1	; 0x802a2b <PID_EXE+0xd>
    249c:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <PID_EXE+0xe>
    24a0:	10 92 2d 2a 	sts	0x2A2D, r1	; 0x802a2d <PID_EXE+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    24a4:	10 92 2e 2a 	sts	0x2A2E, r1	; 0x802a2e <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    24a8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:103
          Tick.BUZZ_TICK_STOP();
          digitalWrite(PUMP, LOW); 
          Tick.LED_Off_Call();     
          digitalWrite(HEATER, LOW);             
          Pid.PID_Stop();
          ALL_LED_OFF();        
    24ac:	80 91 8e 28 	lds	r24, 0x288E	; 0x80288e <Process_Interrupt_flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:104
          if(Process_Interrupt_flag && Proceess_Resume_Enable_Flag) 
    24b0:	88 23       	and	r24, r24
    24b2:	09 f4       	brne	.+2      	; 0x24b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x78a>
    24b4:	9b c0       	rjmp	.+310    	; 0x25ec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8c0>
    24b6:	80 91 8d 28 	lds	r24, 0x288D	; 0x80288d <Proceess_Resume_Enable_Flag>
    24ba:	88 23       	and	r24, r24
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x794>
    24be:	96 c0       	rjmp	.+300    	; 0x25ec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8c0>
    24c0:	80 91 8b 28 	lds	r24, 0x288B	; 0x80288b <z>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:106
          { 
             if(z<3)
    24c4:	90 91 8c 28 	lds	r25, 0x288C	; 0x80288c <z+0x1>
    24c8:	03 97       	sbiw	r24, 0x03	; 3
    24ca:	0c f0       	brlt	.+2      	; 0x24ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x7a2>
    24cc:	8b c0       	rjmp	.+278    	; 0x25e4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8b8>
    24ce:	40 91 89 28 	lds	r20, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:108
             {
               if(i<VALUE_FOR_BLINK+50) 
    24d2:	50 91 8a 28 	lds	r21, 0x288A	; 0x80288a <i+0x1>
    24d6:	49 83       	std	Y+1, r20	; 0x01
    24d8:	5a 83       	std	Y+2, r21	; 0x02
    24da:	4b 34       	cpi	r20, 0x4B	; 75
    24dc:	51 05       	cpc	r21, r1
    24de:	0c f0       	brlt	.+2      	; 0x24e2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x7b6>
    24e0:	3f c0       	rjmp	.+126    	; 0x2560 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x834>
digitalWrite():
    24e2:	61 e0       	ldi	r22, 0x01	; 1
    24e4:	80 e1       	ldi	r24, 0x10	; 16
    24e6:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    24ea:	88 e1       	ldi	r24, 0x18	; 24
    24ec:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:171
     }
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    24ee:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    24f2:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    24f6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:172
    digits1[1] = DIG1_2;
    24fa:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    24fe:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:173
    digits1[2] = DIG1_3;
    2502:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    2506:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:174
    digits1[3] = DIG1_4;
    250a:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
DISPLAY_DIGIT2():
    250e:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:179
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    2512:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    2516:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:180
    digits2[1] = DIG2_2;
    251a:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    251e:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:181
    digits2[2] = DIG2_3;
    2522:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    2526:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:182
    digits2[3] = DIG2_4;
    252a:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
digitalWrite():
    252e:	60 e0       	ldi	r22, 0x00	; 0
    2530:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    2532:	24 96       	adiw	r28, 0x04	; 4
    2534:	cd bf       	out	0x3d, r28	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:503
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    2536:	de bf       	out	0x3e, r29	; 62
    2538:	df 91       	pop	r29
    253a:	cf 91       	pop	r28
    253c:	1f 91       	pop	r17
    253e:	0f 91       	pop	r16
    2540:	ff 90       	pop	r15
    2542:	ef 90       	pop	r14
    2544:	df 90       	pop	r13
    2546:	cf 90       	pop	r12
    2548:	bf 90       	pop	r11
    254a:	af 90       	pop	r10
    254c:	9f 90       	pop	r9
    254e:	8f 90       	pop	r8
    2550:	7f 90       	pop	r7
    2552:	6f 90       	pop	r6
    2554:	5f 90       	pop	r5
    2556:	4f 90       	pop	r4
    2558:	3f 90       	pop	r3
    255a:	2f 90       	pop	r2
digitalWrite():
    255c:	0c 94 19 07 	jmp	0xe32	; 0xe32 <digitalWrite.part.2>
    2560:	60 e0       	ldi	r22, 0x00	; 0
    2562:	80 e1       	ldi	r24, 0x10	; 16
    2564:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    2568:	8b e0       	ldi	r24, 0x0B	; 11
    256a:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:179
    digits1[3] = DIG1_4;
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    256c:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    2570:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    2574:	21 e1       	ldi	r18, 0x11	; 17
    2576:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:180
    digits2[1] = DIG2_2;
    2578:	20 93 de 28 	sts	0x28DE, r18	; 0x8028de <digits2+0x2>
    257c:	30 93 df 28 	sts	0x28DF, r19	; 0x8028df <digits2+0x3>
    2580:	87 e1       	ldi	r24, 0x17	; 23
    2582:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:181
    digits2[2] = DIG2_3;
    2584:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    2588:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    258c:	8c e0       	ldi	r24, 0x0C	; 12
    258e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:182
    digits2[3] = DIG2_4;
    2590:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2594:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    2598:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:171
     }
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    259c:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    25a0:	80 e1       	ldi	r24, 0x10	; 16
    25a2:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:172
    digits1[1] = DIG1_2;
    25a4:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    25a8:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    25ac:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits1+0x4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:173
    digits1[2] = DIG1_3;
    25b0:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits1+0x5>
    25b4:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:174
    digits1[3] = DIG1_4;
    25b8:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    25bc:	89 81       	ldd	r24, Y+1	; 0x01
    25be:	9a 81       	ldd	r25, Y+2	; 0x02
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:120
               {        
                 digitalWrite(BUZZER, LOW);
                 led.DISPLAY_DIGIT2(11, 17, 23, 12);
                 led.DISPLAY_DIGIT1(12, 16, 17, 16);
               }
               if(i>TOTAL_VALUE_FOR_BLINK+100) {z ++; i=0; }
    25c0:	87 39       	cpi	r24, 0x97	; 151
    25c2:	91 05       	cpc	r25, r1
    25c4:	0c f4       	brge	.+2      	; 0x25c8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x89c>
    25c6:	b3 cf       	rjmp	.-154    	; 0x252e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x802>
    25c8:	80 91 8b 28 	lds	r24, 0x288B	; 0x80288b <z>
    25cc:	90 91 8c 28 	lds	r25, 0x288C	; 0x80288c <z+0x1>
    25d0:	01 96       	adiw	r24, 0x01	; 1
    25d2:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <z>
    25d6:	90 93 8c 28 	sts	0x288C, r25	; 0x80288c <z+0x1>
    25da:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    25de:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    25e2:	a5 cf       	rjmp	.-182    	; 0x252e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x802>
    25e4:	85 e0       	ldi	r24, 0x05	; 5
    25e6:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:122
             }
             else  ENTER_BUT=5;
    25ea:	a1 cf       	rjmp	.-190    	; 0x252e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x802>
    25ec:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:127
             digitalWrite(TIMER_LED1, LOW); 
          }
          else
          { 
            if(!DEGREE_VALUE_SET)  
    25f0:	81 11       	cpse	r24, r1
    25f2:	3d c0       	rjmp	.+122    	; 0x266e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x942>
    25f4:	c0 90 d8 28 	lds	r12, 0x28D8	; 0x8028d8 <TEMP_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:129
            {
                if(TEMP_DEG>99.9)  { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0; }
    25f8:	d0 90 d9 28 	lds	r13, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    25fc:	e0 90 da 28 	lds	r14, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    2600:	f0 90 db 28 	lds	r15, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    2604:	2d ec       	ldi	r18, 0xCD	; 205
    2606:	3c ec       	ldi	r19, 0xCC	; 204
    2608:	47 ec       	ldi	r20, 0xC7	; 199
    260a:	52 e4       	ldi	r21, 0x42	; 66
    260c:	c7 01       	movw	r24, r14
    260e:	b6 01       	movw	r22, r12
    2610:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    2614:	18 16       	cp	r1, r24
    2616:	dc f4       	brge	.+54     	; 0x264e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x922>
    2618:	20 e0       	ldi	r18, 0x00	; 0
    261a:	30 e0       	ldi	r19, 0x00	; 0
    261c:	40 e2       	ldi	r20, 0x20	; 32
    261e:	51 e4       	ldi	r21, 0x41	; 65
    2620:	c7 01       	movw	r24, r14
    2622:	b6 01       	movw	r22, r12
    2624:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2628:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    262c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2630:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    2634:	8a e0       	ldi	r24, 0x0A	; 10
    2636:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:131
                else               { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1; }
                digits2[3] = 10;
    2638:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    263c:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2640:	60 e0       	ldi	r22, 0x00	; 0
    2642:	70 e0       	ldi	r23, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:139
            {
               led.BREAK_NUMBER2(TEMP_FAH*10);
               digits2[3] = 21;   
               DOT2_1=0;          
            }
            led.BREAK_NUMBER1(0000);    
    2644:	cb 01       	movw	r24, r22
    2646:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
digitalWrite():
    264a:	61 e0       	ldi	r22, 0x01	; 1
    264c:	71 cf       	rjmp	.-286    	; 0x2530 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x804>
SET_SHORT_PRESS_FUNCTION():
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:130
          else
          { 
            if(!DEGREE_VALUE_SET)  
            {
                if(TEMP_DEG>99.9)  { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0; }
                else               { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1; }
    2652:	48 ec       	ldi	r20, 0xC8	; 200
    2654:	52 e4       	ldi	r21, 0x42	; 66
    2656:	c7 01       	movw	r24, r14
    2658:	b6 01       	movw	r22, r12
    265a:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    265e:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2662:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2666:	81 e0       	ldi	r24, 0x01	; 1
    2668:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
    266c:	e3 cf       	rjmp	.-58     	; 0x2634 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x908>
    266e:	20 e0       	ldi	r18, 0x00	; 0
    2670:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:135
                digits2[3] = 10;
            }
            else
            {
               led.BREAK_NUMBER2(TEMP_FAH*10);
    2672:	40 e2       	ldi	r20, 0x20	; 32
    2674:	51 e4       	ldi	r21, 0x41	; 65
    2676:	60 91 b7 28 	lds	r22, 0x28B7	; 0x8028b7 <TEMP_FAH>
    267a:	70 91 b8 28 	lds	r23, 0x28B8	; 0x8028b8 <TEMP_FAH+0x1>
    267e:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <TEMP_FAH+0x2>
    2682:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <TEMP_FAH+0x3>
    2686:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    268a:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    268e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2692:	85 e1       	ldi	r24, 0x15	; 21
    2694:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:136
               digits2[3] = 21;   
    2696:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    269a:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    269e:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:137
               DOT2_1=0;          
    26a2:	ce cf       	rjmp	.-100    	; 0x2640 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x914>
    26a4:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:145
            digitalWrite(TIMER_LED1, HIGH);          
          } 
          
          break;
    case 1 :
          DOT1_1=0;
    26a8:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:146
          DOT2_1=0;             
    26ac:	60 e0       	ldi	r22, 0x00	; 0
    26ae:	8d e1       	ldi	r24, 0x1D	; 29
    26b0:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    26b4:	61 e0       	ldi	r22, 0x01	; 1
    26b6:	8c e0       	ldi	r24, 0x0C	; 12
    26b8:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    26bc:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:149
          digitalWrite(SET_PARA_LED, LOW);          
          digitalWrite(TIMER_LED1, HIGH);  
          if(i<VALUE_FOR_BLINK) 
    26c0:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    26c4:	49 97       	sbiw	r24, 0x19	; 25
    26c6:	0c f0       	brlt	.+2      	; 0x26ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x99e>
    26c8:	50 c0       	rjmp	.+160    	; 0x276a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa3e>
    26ca:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:151
          {
              if(!BLINK_STATS) { digits2[0] = 24; digits2[1] = 24;  DOT2_1=0; }
    26ce:	81 11       	cpse	r24, r1
    26d0:	45 c0       	rjmp	.+138    	; 0x275c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa30>
    26d2:	88 e1       	ldi	r24, 0x18	; 24
    26d4:	90 e0       	ldi	r25, 0x00	; 0
    26d6:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    26da:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    26de:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    26e2:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    26e6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:159
          else     
          {
            DOT2_1=1; 
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    26ea:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    26ee:	c3 97       	sbiw	r24, 0x33	; 51
    26f0:	24 f0       	brlt	.+8      	; 0x26fa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9ce>
    26f2:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    26f6:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    26fa:	8a e0       	ldi	r24, 0x0A	; 10
    26fc:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:160
          digits2[3] = 10;
    26fe:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2702:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2706:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:161
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
    270a:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
    270e:	24 e6       	ldi	r18, 0x64	; 100
    2710:	28 9f       	mul	r18, r24
    2712:	b0 01       	movw	r22, r0
    2714:	29 9f       	mul	r18, r25
    2716:	70 0d       	add	r23, r0
    2718:	11 24       	eor	r1, r1
    271a:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
    271e:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
    2722:	68 0f       	add	r22, r24
    2724:	79 1f       	adc	r23, r25
    2726:	07 2e       	mov	r0, r23
    2728:	00 0c       	add	r0, r0
    272a:	88 0b       	sbc	r24, r24
    272c:	99 0b       	sbc	r25, r25
    272e:	24 96       	adiw	r28, 0x04	; 4
    2730:	cd bf       	out	0x3d, r28	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:503
              ENTER_BUT=0;                    
           break;
    default:
           break;
  }
}
    2732:	de bf       	out	0x3e, r29	; 62
    2734:	df 91       	pop	r29
    2736:	cf 91       	pop	r28
    2738:	1f 91       	pop	r17
    273a:	0f 91       	pop	r16
    273c:	ff 90       	pop	r15
    273e:	ef 90       	pop	r14
    2740:	df 90       	pop	r13
    2742:	cf 90       	pop	r12
    2744:	bf 90       	pop	r11
    2746:	af 90       	pop	r10
    2748:	9f 90       	pop	r9
    274a:	8f 90       	pop	r8
    274c:	7f 90       	pop	r7
    274e:	6f 90       	pop	r6
    2750:	5f 90       	pop	r5
    2752:	4f 90       	pop	r4
    2754:	3f 90       	pop	r3
    2756:	2f 90       	pop	r2
    2758:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:161
            DOT2_1=1; 
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          digits2[3] = 10;
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
    275c:	89 e1       	ldi	r24, 0x19	; 25
    275e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:152
          digitalWrite(SET_PARA_LED, LOW);          
          digitalWrite(TIMER_LED1, HIGH);  
          if(i<VALUE_FOR_BLINK) 
          {
              if(!BLINK_STATS) { digits2[0] = 24; digits2[1] = 24;  DOT2_1=0; }
              else i=VALUE_FOR_BLINK;
    2760:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    2764:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
    2768:	be cf       	rjmp	.-132    	; 0x26e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9ba>
    276a:	99 81       	ldd	r25, Y+1	; 0x01
    276c:	90 93 88 28 	sts	0x2888, r25	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:156
          }  
          else     
          {
            DOT2_1=1; 
    2770:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:157
            led.BREAK_NUMBER2((SET_VALUE[ENTER_BUT] * 100) + (SET_VALUE[ENTER_BUT +1]*10));
    2774:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
    2778:	24 e6       	ldi	r18, 0x64	; 100
    277a:	28 9f       	mul	r18, r24
    277c:	b0 01       	movw	r22, r0
    277e:	29 9f       	mul	r18, r25
    2780:	70 0d       	add	r23, r0
    2782:	11 24       	eor	r1, r1
    2784:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    2788:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
    278c:	4a e0       	ldi	r20, 0x0A	; 10
    278e:	42 9f       	mul	r20, r18
    2790:	c0 01       	movw	r24, r0
    2792:	43 9f       	mul	r20, r19
    2794:	90 0d       	add	r25, r0
    2796:	11 24       	eor	r1, r1
    2798:	68 0f       	add	r22, r24
    279a:	79 1f       	adc	r23, r25
    279c:	07 2e       	mov	r0, r23
    279e:	00 0c       	add	r0, r0
    27a0:	88 0b       	sbc	r24, r24
    27a2:	99 0b       	sbc	r25, r25
    27a4:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    27a8:	9e cf       	rjmp	.-196    	; 0x26e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9ba>
    27aa:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:164
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          digits2[3] = 10;
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+2] *100) + SET_VALUE[ENTER_BUT+3]);
          break;
    case 2 :
          led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT+1] *100) + SET_VALUE[ENTER_BUT+2]);
    27ae:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
    27b2:	14 e6       	ldi	r17, 0x64	; 100
    27b4:	18 9f       	mul	r17, r24
    27b6:	b0 01       	movw	r22, r0
    27b8:	19 9f       	mul	r17, r25
    27ba:	70 0d       	add	r23, r0
    27bc:	11 24       	eor	r1, r1
    27be:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
    27c2:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
    27c6:	68 0f       	add	r22, r24
    27c8:	79 1f       	adc	r23, r25
    27ca:	07 2e       	mov	r0, r23
    27cc:	00 0c       	add	r0, r0
    27ce:	88 0b       	sbc	r24, r24
    27d0:	99 0b       	sbc	r25, r25
    27d2:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    27d6:	a0 91 89 28 	lds	r26, 0x2889	; 0x802889 <i>
    27da:	b0 91 8a 28 	lds	r27, 0x288A	; 0x80288a <i+0x1>
    27de:	a9 83       	std	Y+1, r26	; 0x01
    27e0:	ba 83       	std	Y+2, r27	; 0x02
    27e2:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:165
          if(!DEGREE_VALUE_SET)  
    27e6:	81 11       	cpse	r24, r1
    27e8:	3f c0       	rjmp	.+126    	; 0x2868 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb3c>
    27ea:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:167
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[ENTER_BUT]*10));
    27ee:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
    27f2:	18 9f       	mul	r17, r24
    27f4:	b0 01       	movw	r22, r0
    27f6:	19 9f       	mul	r17, r25
    27f8:	70 0d       	add	r23, r0
    27fa:	11 24       	eor	r1, r1
    27fc:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    2800:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
    2804:	4a e0       	ldi	r20, 0x0A	; 10
    2806:	42 9f       	mul	r20, r18
    2808:	c0 01       	movw	r24, r0
    280a:	43 9f       	mul	r20, r19
    280c:	90 0d       	add	r25, r0
    280e:	11 24       	eor	r1, r1
    2810:	68 0f       	add	r22, r24
    2812:	79 1f       	adc	r23, r25
    2814:	07 2e       	mov	r0, r23
    2816:	00 0c       	add	r0, r0
    2818:	88 0b       	sbc	r24, r24
    281a:	99 0b       	sbc	r25, r25
    281c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2820:	8a e0       	ldi	r24, 0x0A	; 10
    2822:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:168
            digits2[3] = 10;
    2824:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2828:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    282c:	81 e0       	ldi	r24, 0x01	; 1
    282e:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:169
            DOT2_1=1; 
    2832:	29 81       	ldd	r18, Y+1	; 0x01
    2834:	3a 81       	ldd	r19, Y+2	; 0x02
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:170
            if(i<VALUE_FOR_BLINK) 
    2836:	29 31       	cpi	r18, 0x19	; 25
    2838:	31 05       	cpc	r19, r1
    283a:	54 f4       	brge	.+20     	; 0x2850 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb24>
    283c:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:172
            {
             if(!BLINK_STATS) digits2[2] = 24;
    2840:	81 11       	cpse	r24, r1
    2842:	97 c0       	rjmp	.+302    	; 0x2972 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc46>
    2844:	88 e1       	ldi	r24, 0x18	; 24
    2846:	90 e0       	ldi	r25, 0x00	; 0
    2848:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:183
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
            digits2[3] = 21;   
            DOT2_1=0; 
            if(i<VALUE_FOR_BLINK) 
            {
              if(!BLINK_STATS  ){digits2[0] = 24; digits2[1] = 24;  digits2[2] = 24;}  
    284c:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    2850:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:187
              else i=VALUE_FOR_BLINK;  
            }     
          }                               
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    2854:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    2858:	c3 97       	sbiw	r24, 0x33	; 51
    285a:	0c f4       	brge	.+2      	; 0x285e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb32>
    285c:	8a ca       	rjmp	.-2796   	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>
    285e:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    2862:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    2866:	85 ca       	rjmp	.-2806   	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>
    2868:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:178
              else i=VALUE_FOR_BLINK;  
            }
          }
          else
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    286c:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
    2870:	2a e0       	ldi	r18, 0x0A	; 10
    2872:	28 9f       	mul	r18, r24
    2874:	b0 01       	movw	r22, r0
    2876:	29 9f       	mul	r18, r25
    2878:	70 0d       	add	r23, r0
    287a:	11 24       	eor	r1, r1
    287c:	07 2e       	mov	r0, r23
    287e:	00 0c       	add	r0, r0
    2880:	88 0b       	sbc	r24, r24
    2882:	99 0b       	sbc	r25, r25
    2884:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2888:	85 e1       	ldi	r24, 0x15	; 21
    288a:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:179
            digits2[3] = 21;   
    288c:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2890:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2894:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:180
            DOT2_1=0; 
    2898:	49 81       	ldd	r20, Y+1	; 0x01
    289a:	5a 81       	ldd	r21, Y+2	; 0x02
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:181
            if(i<VALUE_FOR_BLINK) 
    289c:	49 31       	cpi	r20, 0x19	; 25
    289e:	51 05       	cpc	r21, r1
    28a0:	bc f6       	brge	.-82     	; 0x2850 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb24>
    28a2:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:183
            {
              if(!BLINK_STATS  ){digits2[0] = 24; digits2[1] = 24;  digits2[2] = 24;}  
    28a6:	81 11       	cpse	r24, r1
    28a8:	64 c0       	rjmp	.+200    	; 0x2972 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc46>
    28aa:	88 e1       	ldi	r24, 0x18	; 24
    28ac:	90 e0       	ldi	r25, 0x00	; 0
    28ae:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    28b2:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    28b6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    28ba:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    28be:	c4 cf       	rjmp	.-120    	; 0x2848 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb1c>
    28c0:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:190
            }     
          }                               
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          break;     
    case 3 :
          if(!DEGREE_VALUE_SET)  
    28c4:	81 11       	cpse	r24, r1
    28c6:	3c c0       	rjmp	.+120    	; 0x2940 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc14>
    28c8:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:192
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[2]*10));
    28cc:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
    28d0:	24 e6       	ldi	r18, 0x64	; 100
    28d2:	28 9f       	mul	r18, r24
    28d4:	b0 01       	movw	r22, r0
    28d6:	29 9f       	mul	r18, r25
    28d8:	70 0d       	add	r23, r0
    28da:	11 24       	eor	r1, r1
    28dc:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    28e0:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
    28e4:	4a e0       	ldi	r20, 0x0A	; 10
    28e6:	42 9f       	mul	r20, r18
    28e8:	c0 01       	movw	r24, r0
    28ea:	43 9f       	mul	r20, r19
    28ec:	90 0d       	add	r25, r0
    28ee:	11 24       	eor	r1, r1
    28f0:	68 0f       	add	r22, r24
    28f2:	79 1f       	adc	r23, r25
    28f4:	07 2e       	mov	r0, r23
    28f6:	00 0c       	add	r0, r0
    28f8:	88 0b       	sbc	r24, r24
    28fa:	99 0b       	sbc	r25, r25
    28fc:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2900:	8a e0       	ldi	r24, 0x0A	; 10
    2902:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:193
            digits2[3] = 10;
    2904:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2908:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    290c:	81 e0       	ldi	r24, 0x01	; 1
    290e:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:194
            DOT2_1=1; 
    2912:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:206
            digits2[3] = 21;   
            DOT2_1=0;                
          }   
          
          //i++;
          if(i<VALUE_FOR_BLINK)
    2916:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    291a:	49 97       	sbiw	r24, 0x19	; 25
    291c:	8c f5       	brge	.+98     	; 0x2980 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc54>
    291e:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:208
          {
             if(!BLINK_STATS)    { digits1[0] = 24; digits1[1] = 24; DOT1_1=0;}
    2922:	81 11       	cpse	r24, r1
    2924:	26 c0       	rjmp	.+76     	; 0x2972 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc46>
    2926:	88 e1       	ldi	r24, 0x18	; 24
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    292e:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    2932:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    2936:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    293a:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    293e:	88 cf       	rjmp	.-240    	; 0x2850 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb24>
    2940:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:200
//            SET_TEMP_DEG =(SET_VALUE[1] + (SET_VALUE[2] / 10.0)); 
          }
          else
          {
//            SET_TEMP_FAH =  SET_VALUE[22];   
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    2944:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
    2948:	2a e0       	ldi	r18, 0x0A	; 10
    294a:	28 9f       	mul	r18, r24
    294c:	b0 01       	movw	r22, r0
    294e:	29 9f       	mul	r18, r25
    2950:	70 0d       	add	r23, r0
    2952:	11 24       	eor	r1, r1
    2954:	07 2e       	mov	r0, r23
    2956:	00 0c       	add	r0, r0
    2958:	88 0b       	sbc	r24, r24
    295a:	99 0b       	sbc	r25, r25
    295c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2960:	85 e1       	ldi	r24, 0x15	; 21
    2962:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:201
            digits2[3] = 21;   
    2964:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2968:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    296c:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:202
            DOT2_1=0;                
    2970:	d0 cf       	rjmp	.-96     	; 0x2912 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xbe6>
    2972:	89 e1       	ldi	r24, 0x19	; 25
    2974:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:209
          
          //i++;
          if(i<VALUE_FOR_BLINK)
          {
             if(!BLINK_STATS)    { digits1[0] = 24; digits1[1] = 24; DOT1_1=0;}
             else i=VALUE_FOR_BLINK;  
    2976:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    297a:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
    297e:	68 cf       	rjmp	.-304    	; 0x2850 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb24>
    2980:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:213
          }
          else 
          {
            DOT1_1=0;
    2984:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:214
            led.BREAK_NUMBER1((SET_VALUE[ENTER_BUT] *100) + SET_VALUE[ENTER_BUT+1]);
    2988:	08 2e       	mov	r0, r24
    298a:	00 0c       	add	r0, r0
    298c:	99 0b       	sbc	r25, r25
    298e:	fc 01       	movw	r30, r24
    2990:	ee 0f       	add	r30, r30
    2992:	ff 1f       	adc	r31, r31
    2994:	ea 50       	subi	r30, 0x0A	; 10
    2996:	f7 4d       	sbci	r31, 0xD7	; 215
    2998:	20 81       	ld	r18, Z
    299a:	31 81       	ldd	r19, Z+1	; 0x01
    299c:	44 e6       	ldi	r20, 0x64	; 100
    299e:	42 9f       	mul	r20, r18
    29a0:	b0 01       	movw	r22, r0
    29a2:	43 9f       	mul	r20, r19
    29a4:	70 0d       	add	r23, r0
    29a6:	11 24       	eor	r1, r1
    29a8:	88 0f       	add	r24, r24
    29aa:	99 1f       	adc	r25, r25
    29ac:	fc 01       	movw	r30, r24
    29ae:	e8 50       	subi	r30, 0x08	; 8
    29b0:	f7 4d       	sbci	r31, 0xD7	; 215
    29b2:	80 81       	ld	r24, Z
    29b4:	91 81       	ldd	r25, Z+1	; 0x01
    29b6:	68 0f       	add	r22, r24
    29b8:	79 1f       	adc	r23, r25
    29ba:	07 2e       	mov	r0, r23
    29bc:	00 0c       	add	r0, r0
    29be:	88 0b       	sbc	r24, r24
    29c0:	99 0b       	sbc	r25, r25
    29c2:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    29c6:	44 cf       	rjmp	.-376    	; 0x2850 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb24>
    29c8:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:219
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
          break;
    case 4 :
          DOT1_1=0;
    29cc:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:221
//          SET_HOUR=SET_VALUE[3];
          if(!DEGREE_VALUE_SET)  
    29d0:	81 11       	cpse	r24, r1
    29d2:	7c c0       	rjmp	.+248    	; 0x2acc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xda0>
    29d4:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:223
          {
            led.BREAK_NUMBER2((SET_VALUE[1] * 100) + (SET_VALUE[2]*10));
    29d8:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <SET_VALUE+0x3>
    29dc:	24 e6       	ldi	r18, 0x64	; 100
    29de:	28 9f       	mul	r18, r24
    29e0:	b0 01       	movw	r22, r0
    29e2:	29 9f       	mul	r18, r25
    29e4:	70 0d       	add	r23, r0
    29e6:	11 24       	eor	r1, r1
    29e8:	20 91 fa 28 	lds	r18, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    29ec:	30 91 fb 28 	lds	r19, 0x28FB	; 0x8028fb <SET_VALUE+0x5>
    29f0:	4a e0       	ldi	r20, 0x0A	; 10
    29f2:	42 9f       	mul	r20, r18
    29f4:	c0 01       	movw	r24, r0
    29f6:	43 9f       	mul	r20, r19
    29f8:	90 0d       	add	r25, r0
    29fa:	11 24       	eor	r1, r1
    29fc:	68 0f       	add	r22, r24
    29fe:	79 1f       	adc	r23, r25
    2a00:	07 2e       	mov	r0, r23
    2a02:	00 0c       	add	r0, r0
    2a04:	88 0b       	sbc	r24, r24
    2a06:	99 0b       	sbc	r25, r25
    2a08:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2a0c:	8a e0       	ldi	r24, 0x0A	; 10
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:224
            digits2[3] = 10;
    2a10:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2a14:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2a18:	81 e0       	ldi	r24, 0x01	; 1
    2a1a:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:225
            DOT2_1=1; 
    2a1e:	80 91 fc 28 	lds	r24, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:233
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
            digits2[3] = 21;   
            DOT2_1=0;                
          }   
          led.BREAK_NUMBER1( (SET_VALUE[ENTER_BUT-1] *100) + SET_VALUE[ENTER_BUT] );
    2a22:	90 91 fd 28 	lds	r25, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
    2a26:	24 e6       	ldi	r18, 0x64	; 100
    2a28:	28 9f       	mul	r18, r24
    2a2a:	b0 01       	movw	r22, r0
    2a2c:	29 9f       	mul	r18, r25
    2a2e:	70 0d       	add	r23, r0
    2a30:	11 24       	eor	r1, r1
    2a32:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
    2a36:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
    2a3a:	68 0f       	add	r22, r24
    2a3c:	79 1f       	adc	r23, r25
    2a3e:	07 2e       	mov	r0, r23
    2a40:	00 0c       	add	r0, r0
    2a42:	88 0b       	sbc	r24, r24
    2a44:	99 0b       	sbc	r25, r25
    2a46:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    2a4a:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:234
          if(i<VALUE_FOR_BLINK)
    2a4e:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    2a52:	49 97       	sbiw	r24, 0x19	; 25
    2a54:	74 f4       	brge	.+28     	; 0x2a72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd46>
    2a56:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:236
          {
             if(!BLINK_STATS)    { digits1[2] = 24; digits1[3] = 24;}
    2a5a:	81 11       	cpse	r24, r1
    2a5c:	50 c0       	rjmp	.+160    	; 0x2afe <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xdd2>
    2a5e:	88 e1       	ldi	r24, 0x18	; 24
    2a60:	90 e0       	ldi	r25, 0x00	; 0
    2a62:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    2a66:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    2a6a:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    2a6e:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
    2a72:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:239
             else i=VALUE_FOR_BLINK;         
          }
          if(i>TOTAL_VALUE_FOR_BLINK)   i=0;
    2a76:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    2a7a:	c3 97       	sbiw	r24, 0x33	; 51
    2a7c:	24 f0       	brlt	.+8      	; 0x2a86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd5a>
    2a7e:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    2a82:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    2a86:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <REP1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:240
          REP1=0;               
    2a8a:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <REP1+0x1>
    2a8e:	80 91 86 28 	lds	r24, 0x2886	; 0x802886 <STIR_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:241
          SET_VALUE[5] = STIR_VALUE_SET;
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <SET_VALUE+0xa>
    2a98:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <SET_VALUE+0xb>
    2a9c:	81 e0       	ldi	r24, 0x01	; 1
    2a9e:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:242
          PUMP_FLAG =1;                       
    2aa2:	20 91 fc 28 	lds	r18, 0x28FC	; 0x8028fc <SET_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:243
          SET_MIN = (SET_VALUE[3]*60) + SET_VALUE[4];              
    2aa6:	30 91 fd 28 	lds	r19, 0x28FD	; 0x8028fd <SET_VALUE+0x7>
    2aaa:	4c e3       	ldi	r20, 0x3C	; 60
    2aac:	42 9f       	mul	r20, r18
    2aae:	c0 01       	movw	r24, r0
    2ab0:	43 9f       	mul	r20, r19
    2ab2:	90 0d       	add	r25, r0
    2ab4:	11 24       	eor	r1, r1
    2ab6:	20 91 fe 28 	lds	r18, 0x28FE	; 0x8028fe <SET_VALUE+0x8>
    2aba:	30 91 ff 28 	lds	r19, 0x28FF	; 0x8028ff <SET_VALUE+0x9>
    2abe:	82 0f       	add	r24, r18
    2ac0:	93 1f       	adc	r25, r19
    2ac2:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <SET_MIN>
    2ac6:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <SET_MIN+0x1>
    2aca:	53 c9       	rjmp	.-3418   	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>
    2acc:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1f>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:229
            digits2[3] = 10;
            DOT2_1=1; 
          }
          else
          {
            led.BREAK_NUMBER2(SET_VALUE[22]*10);
    2ad0:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x20>
    2ad4:	2a e0       	ldi	r18, 0x0A	; 10
    2ad6:	28 9f       	mul	r18, r24
    2ad8:	b0 01       	movw	r22, r0
    2ada:	29 9f       	mul	r18, r25
    2adc:	70 0d       	add	r23, r0
    2ade:	11 24       	eor	r1, r1
    2ae0:	07 2e       	mov	r0, r23
    2ae2:	00 0c       	add	r0, r0
    2ae4:	88 0b       	sbc	r24, r24
    2ae6:	99 0b       	sbc	r25, r25
    2ae8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2aec:	85 e1       	ldi	r24, 0x15	; 21
    2aee:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:230
            digits2[3] = 21;   
    2af0:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2af4:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2af8:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:231
            DOT2_1=0;                
    2afc:	90 cf       	rjmp	.-224    	; 0x2a1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xcf2>
    2afe:	89 e1       	ldi	r24, 0x19	; 25
    2b00:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:237
          }   
          led.BREAK_NUMBER1( (SET_VALUE[ENTER_BUT-1] *100) + SET_VALUE[ENTER_BUT] );
          if(i<VALUE_FOR_BLINK)
          {
             if(!BLINK_STATS)    { digits1[2] = 24; digits1[3] = 24;}
             else i=VALUE_FOR_BLINK;         
    2b02:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    2b06:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
    2b0a:	b3 cf       	rjmp	.-154    	; 0x2a72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd46>
    2b0c:	a9 81       	ldd	r26, Y+1	; 0x01
    2b0e:	ba 81       	ldd	r27, Y+2	; 0x02
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:259
          Eeprom.Process_Time_Set_On_Eeprom();

          if(!FILL_BATH_ERROR_NOT_CLEAR)
          {
            
            if( (!DEGREE_VALUE_SET &&  SET_TEMP_DEG >= (TEMP_DEG + 10)) || (DEGREE_VALUE_SET && SET_TEMP_FAH>= (TEMP_FAH +15)) ) { FILL_BATH_ERROR_NOT_CLEAR=0; }
    2b10:	bd 01       	movw	r22, r26
    2b12:	bb 0f       	add	r27, r27
    2b14:	88 0b       	sbc	r24, r24
    2b16:	99 0b       	sbc	r25, r25
    2b18:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    2b1c:	4b 01       	movw	r8, r22
    2b1e:	5c 01       	movw	r10, r24
    2b20:	20 e0       	ldi	r18, 0x00	; 0
    2b22:	30 e0       	ldi	r19, 0x00	; 0
    2b24:	40 e7       	ldi	r20, 0x70	; 112
    2b26:	51 e4       	ldi	r21, 0x41	; 65
    2b28:	60 91 b7 28 	lds	r22, 0x28B7	; 0x8028b7 <TEMP_FAH>
    2b2c:	70 91 b8 28 	lds	r23, 0x28B8	; 0x8028b8 <TEMP_FAH+0x1>
    2b30:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <TEMP_FAH+0x2>
    2b34:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <TEMP_FAH+0x3>
    2b38:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    2b3c:	9b 01       	movw	r18, r22
    2b3e:	ac 01       	movw	r20, r24
    2b40:	c5 01       	movw	r24, r10
    2b42:	b4 01       	movw	r22, r8
    2b44:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    2b48:	87 fd       	sbrc	r24, 7
    2b4a:	bf c9       	rjmp	.-3202   	; 0x1eca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x19e>
    2b4c:	29 81       	ldd	r18, Y+1	; 0x01
    2b4e:	3a 81       	ldd	r19, Y+2	; 0x02
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:283
               PID_SETPOINT_To_Show = SET_TEMP_DEG;  
               PID_SETPOINT = SET_TEMP_DEG;              
          }
          else                 
          {
              PID_SETPOINT_To_Show = SET_TEMP_FAH;  
    2b50:	b9 01       	movw	r22, r18
    2b52:	33 0f       	add	r19, r19
    2b54:	88 0b       	sbc	r24, r24
    2b56:	99 0b       	sbc	r25, r25
    2b58:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    2b5c:	60 93 75 28 	sts	0x2875, r22	; 0x802875 <PID_SETPOINT_To_Show>
    2b60:	70 93 76 28 	sts	0x2876, r23	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    2b64:	80 93 77 28 	sts	0x2877, r24	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    2b68:	90 93 78 28 	sts	0x2878, r25	; 0x802878 <PID_SETPOINT_To_Show+0x3>
    2b6c:	20 e0       	ldi	r18, 0x00	; 0
    2b6e:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:284
              PID_SETPOINT = (PID_SETPOINT_To_Show - 32) / 1.8;    //-------------------------------------------convert setpoint in degree
    2b70:	40 e0       	ldi	r20, 0x00	; 0
    2b72:	52 e4       	ldi	r21, 0x42	; 66
    2b74:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    2b78:	26 e6       	ldi	r18, 0x66	; 102
    2b7a:	36 e6       	ldi	r19, 0x66	; 102
    2b7c:	46 ee       	ldi	r20, 0xE6	; 230
    2b7e:	5f e3       	ldi	r21, 0x3F	; 63
    2b80:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    2b84:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    2b88:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    2b8c:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    2b90:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
    2b94:	af c9       	rjmp	.-3234   	; 0x1ef4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1c8>
    2b96:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:265
            else                                                                                                                 { FILL_BATH_ERROR_NOT_CLEAR=1; }
          }  
          else     
          if(FILL_BATH_ERROR_NOT_CLEAR)
          {
            RATE_OF_HEATING =0;
    2b9a:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <RATE_OF_HEATING+0x1>
    2b9e:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <RATE_OF_HEATING+0x2>
    2ba2:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <RATE_OF_HEATING+0x3>
    2ba6:	b0 92 8f 28 	sts	0x288F, r11	; 0x80288f <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:266
            CHECK_RATE_OF_HEATING=1; //1
    2baa:	10 92 79 28 	sts	0x2879, r1	; 0x802879 <FILL_BATH_ERROR_NOT_CLEAR>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:267
            FILL_BATH_ERROR_NOT_CLEAR=0;
    2bae:	90 c9       	rjmp	.-3296   	; 0x1ed0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1a4>
    2bb0:	80 91 56 28 	lds	r24, 0x2856	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:330
                        COOLOING_RATE_COMP_VAL = 0.01;
                        TO_CHECK_REPETATION_WITHIN_TIME = millis(); 
                      }
                      else
                      {
                        if((CURRENT_COOLING_RATE_TIME - TO_CHECK_REPETATION_WITHIN_TIME ) < 90000)
    2bb4:	90 91 57 28 	lds	r25, 0x2857	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2bb8:	a0 91 58 28 	lds	r26, 0x2858	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2bbc:	b0 91 59 28 	lds	r27, 0x2859	; 0x802859 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2bc0:	a7 01       	movw	r20, r14
    2bc2:	96 01       	movw	r18, r12
    2bc4:	28 1b       	sub	r18, r24
    2bc6:	39 0b       	sbc	r19, r25
    2bc8:	4a 0b       	sbc	r20, r26
    2bca:	5b 0b       	sbc	r21, r27
    2bcc:	20 39       	cpi	r18, 0x90	; 144
    2bce:	3f 45       	sbci	r19, 0x5F	; 95
    2bd0:	41 40       	sbci	r20, 0x01	; 1
    2bd2:	51 05       	cpc	r21, r1
    2bd4:	38 f4       	brcc	.+14     	; 0x2be4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xeb8>
    2bd6:	cb 01       	movw	r24, r22
    2bd8:	01 96       	adiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:331
                           COOLING_CYCLE_COUNT++;  
    2bda:	80 93 5a 28 	sts	0x285A, r24	; 0x80285a <COOLING_CYCLE_COUNT>
    2bde:	90 93 5b 28 	sts	0x285B, r25	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    2be2:	b3 ca       	rjmp	.-2714   	; 0x214a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x41e>
    2be4:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <COOLING_CYCLE_COUNT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:333
                        else   
                          COOLING_CYCLE_COUNT = 0;                           
    2be8:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <COOLING_CYCLE_COUNT+0x1>
    2bec:	ae ca       	rjmp	.-2724   	; 0x214a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x41e>
    2bee:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <CAL_OF_10_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:337
                      }
                      
                    }
                    else if(( CURRENT_COOLING_RATE_TIME - CAL_OF_10_MIN )> 420000)
    2bf2:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <CAL_OF_10_MIN+0x1>
    2bf6:	a0 91 6a 28 	lds	r26, 0x286A	; 0x80286a <CAL_OF_10_MIN+0x2>
    2bfa:	b0 91 6b 28 	lds	r27, 0x286B	; 0x80286b <CAL_OF_10_MIN+0x3>
    2bfe:	a7 01       	movw	r20, r14
    2c00:	96 01       	movw	r18, r12
    2c02:	28 1b       	sub	r18, r24
    2c04:	39 0b       	sbc	r19, r25
    2c06:	4a 0b       	sbc	r20, r26
    2c08:	5b 0b       	sbc	r21, r27
    2c0a:	da 01       	movw	r26, r20
    2c0c:	c9 01       	movw	r24, r18
    2c0e:	81 3a       	cpi	r24, 0xA1	; 161
    2c10:	98 46       	sbci	r25, 0x68	; 104
    2c12:	a6 40       	sbci	r26, 0x06	; 6
    2c14:	b1 05       	cpc	r27, r1
    2c16:	08 f4       	brcc	.+2      	; 0x2c1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xeee>
    2c18:	98 ca       	rjmp	.-2768   	; 0x214a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x41e>
    2c1a:	81 e0       	ldi	r24, 0x01	; 1
    2c1c:	80 93 79 28 	sts	0x2879, r24	; 0x802879 <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:339
                    {
                      FILL_BATH_ERROR_NOT_CLEAR=1;
    2c20:	60 e0       	ldi	r22, 0x00	; 0
    2c22:	80 e1       	ldi	r24, 0x10	; 16
    2c24:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c28:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:342
                      STOP_PROCESS=1;
                      digitalWrite(BUZZER,LOW);
                      ENTER_BUT=0;
    2c2c:	10 92 84 28 	sts	0x2884, r1	; 0x802884 <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:343
                      SET_MIN =0;
    2c30:	10 92 85 28 	sts	0x2885, r1	; 0x802885 <SET_MIN+0x1>
    2c34:	8a ca       	rjmp	.-2796   	; 0x214a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x41e>
    2c36:	20 e0       	ldi	r18, 0x00	; 0
    2c38:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:350
                    if(COOLING_CYCLE_COUNT==2) RATE_OF_HEATING=0;  
                    PREVIOUS_COOLING_RATE_TIME = CURRENT_COOLING_RATE_TIME;                 
                    PREVIOUS_TEMP_COOLING_RATE = CURRENT_TEMP_COOLING_RATE;
                  }    
               }
               else if(RATE_OF_HEATING < 1 && CHECK_RATE_OF_HEATING)    
    2c3a:	40 e8       	ldi	r20, 0x80	; 128
    2c3c:	5f e3       	ldi	r21, 0x3F	; 63
    2c3e:	c7 01       	movw	r24, r14
    2c40:	b6 01       	movw	r22, r12
    2c42:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    2c46:	87 ff       	sbrs	r24, 7
    2c48:	9e ca       	rjmp	.-2756   	; 0x2186 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x45a>
    2c4a:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <CHECK_RATE_OF_HEATING>
    2c4e:	88 23       	and	r24, r24
    2c50:	09 f4       	brne	.+2      	; 0x2c54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf28>
    2c52:	99 ca       	rjmp	.-2766   	; 0x2186 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x45a>
    2c54:	80 91 92 28 	lds	r24, 0x2892	; 0x802892 <EXECUTE_PID_LOOP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:352
               {
                  if(!EXECUTE_PID_LOOP) { Pid.PID_Start(); EXECUTE_PID_LOOP=1;}
    2c58:	81 11       	cpse	r24, r1
    2c5a:	07 c0       	rjmp	.+14     	; 0x2c6a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf3e>
PID_Start():
    2c5c:	8e e1       	ldi	r24, 0x1E	; 30
    2c5e:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Pid.cpp:65
  }
}

void Lclass :: PID_Start()
{
   PID_EXE.start(); 
    2c60:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    2c64:	81 e0       	ldi	r24, 0x01	; 1
    2c66:	80 93 92 28 	sts	0x2892, r24	; 0x802892 <EXECUTE_PID_LOOP>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:352
    2c6a:	0e 94 ef 07 	call	0xfde	; 0xfde <Lclass::PID_callingg() [clone .constprop.29]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:353
                  Pid.PID_callingg(); 
    2c6e:	8b ca       	rjmp	.-2794   	; 0x2186 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x45a>
    2c70:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:359
               } 
                            
               if(!TIME_SOCK_OR_TOTAL)                     COUNTDOWN_START=1; 
               else
               {
                 if(!DEGREE_VALUE_SET)  
    2c74:	81 11       	cpse	r24, r1
    2c76:	0c c0       	rjmp	.+24     	; 0x2c90 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf64>
    2c78:	a3 01       	movw	r20, r6
    2c7a:	92 01       	movw	r18, r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:361
                 {
                     if( TEMP_DEG >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
    2c7c:	c7 01       	movw	r24, r14
    2c7e:	b6 01       	movw	r22, r12
    2c80:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    2c84:	18 16       	cp	r1, r24
    2c86:	0c f0       	brlt	.+2      	; 0x2c8a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf5e>
    2c88:	92 ca       	rjmp	.-2780   	; 0x21ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x482>
    2c8a:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <COUNTDOWN_START>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:362
                     else                                          COUNTDOWN_START=0; 
    2c8e:	92 ca       	rjmp	.-2780   	; 0x21b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x488>
    2c90:	a7 01       	movw	r20, r14
    2c92:	96 01       	movw	r18, r12
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:366
                 }
                 else  
                 {
                     if( TEMP_FAH >= PID_SETPOINT_To_Show )        COUNTDOWN_START=1; 
    2c94:	60 91 b7 28 	lds	r22, 0x28B7	; 0x8028b7 <TEMP_FAH>
    2c98:	70 91 b8 28 	lds	r23, 0x28B8	; 0x8028b8 <TEMP_FAH+0x1>
    2c9c:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <TEMP_FAH+0x2>
    2ca0:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <TEMP_FAH+0x3>
    2ca4:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    2ca8:	87 ff       	sbrs	r24, 7
    2caa:	81 ca       	rjmp	.-2814   	; 0x21ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x482>
    2cac:	ee cf       	rjmp	.-36     	; 0x2c8a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf5e>
    2cae:	80 e8       	ldi	r24, 0x80	; 128
    2cb0:	9a e1       	ldi	r25, 0x1A	; 26
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    2cb2:	a6 e0       	ldi	r26, 0x06	; 6
    2cb4:	b0 e0       	ldi	r27, 0x00	; 0
    2cb6:	92 ca       	rjmp	.-2780   	; 0x21dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4b0>
    2cb8:	80 e0       	ldi	r24, 0x00	; 0
    2cba:	95 e3       	ldi	r25, 0x35	; 53
    2cbc:	ac e0       	ldi	r26, 0x0C	; 12
    2cbe:	b0 e0       	ldi	r27, 0x00	; 0
    2cc0:	a0 ca       	rjmp	.-2752   	; 0x2202 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4d6>
    2cc2:	80 e4       	ldi	r24, 0x40	; 64
    2cc4:	92 e4       	ldi	r25, 0x42	; 66
    2cc6:	af e0       	ldi	r26, 0x0F	; 15
    2cc8:	b0 e0       	ldi	r27, 0x00	; 0
    2cca:	48 cb       	rjmp	.-2416   	; 0x235c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x630>
    2ccc:	80 e8       	ldi	r24, 0x80	; 128
    2cce:	94 e8       	ldi	r25, 0x84	; 132
    2cd0:	ae e1       	ldi	r26, 0x1E	; 30
    2cd2:	b0 e0       	ldi	r27, 0x00	; 0
    2cd4:	56 cb       	rjmp	.-2388   	; 0x2382 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x656>
    2cd6:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:412
                      REP++;
                 }
               } 
               else
               {
                 if(PUMP_FLAG && select_product_type)
    2cda:	88 23       	and	r24, r24
    2cdc:	09 f4       	brne	.+2      	; 0x2ce0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfb4>
    2cde:	4f c0       	rjmp	.+158    	; 0x2d7e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1052>
    2ce0:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
    2ce4:	88 23       	and	r24, r24
    2ce6:	09 f4       	brne	.+2      	; 0x2cea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfbe>
    2ce8:	4a c0       	rjmp	.+148    	; 0x2d7e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1052>
    2cea:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:415
                  {
                    DOT1_1=0;
                    DOT2_1=0; 
    2cee:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:416
                    DOT1_0=0;
    2cf2:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:417
                    ALL_LED_OFF();    
    2cf6:	60 e0       	ldi	r22, 0x00	; 0
    2cf8:	8c e0       	ldi	r24, 0x0C	; 12
    2cfa:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    2cfe:	8c e0       	ldi	r24, 0x0C	; 12
    2d00:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:179
}

void Eclass::DISPLAY_DIGIT2(int DIG2_1, int DIG2_2, int DIG2_3, int DIG2_4)
{
    digits2[0] = DIG2_1;
    2d02:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    2d06:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    2d0a:	80 e1       	ldi	r24, 0x10	; 16
    2d0c:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:180
    digits2[1] = DIG2_2;
    2d0e:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    2d12:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    2d16:	89 e1       	ldi	r24, 0x19	; 25
    2d18:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:181
    digits2[2] = DIG2_3;
    2d1a:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    2d1e:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    2d22:	81 e1       	ldi	r24, 0x11	; 17
    2d24:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:182
    digits2[3] = DIG2_4;
    2d26:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2d2a:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    2d2e:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:420
                    digitalWrite(TIMER_LED1, LOW);      
                    led.DISPLAY_DIGIT2(12, 16, 25, 17) ;  
                    if(!SET_VALUE[5])     led.DISPLAY_DIGIT1(0, 21, 21, 24);
    2d32:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    2d36:	10 92 e4 28 	sts	0x28E4, r1	; 0x8028e4 <digits1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:171
     }
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    2d3a:	10 92 e5 28 	sts	0x28E5, r1	; 0x8028e5 <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    2d3e:	89 2b       	or	r24, r25
    2d40:	89 f4       	brne	.+34     	; 0x2d64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1038>
DISPLAY_DIGIT1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:420
    2d42:	85 e1       	ldi	r24, 0x15	; 21
    2d44:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:172
    digits1[1] = DIG1_2;
    2d46:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    2d4a:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    2d4e:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:173
    digits1[2] = DIG1_3;
    2d52:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    2d56:	88 e1       	ldi	r24, 0x18	; 24
    2d58:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:174
    digits1[3] = DIG1_4;
    2d5a:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    2d5e:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
    2d62:	db c8       	rjmp	.-3658   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
    2d64:	84 e1       	ldi	r24, 0x14	; 20
    2d66:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:172
}

void Eclass::DISPLAY_DIGIT1(int DIG1_1, int DIG1_2, int DIG1_3, int DIG1_4)
{
    digits1[0] = DIG1_1;
    digits1[1] = DIG1_2;
    2d68:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    2d6c:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    2d70:	88 e1       	ldi	r24, 0x18	; 24
    2d72:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:173
    digits1[2] = DIG1_3;
    2d74:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    2d78:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    2d7c:	ee cf       	rjmp	.-36     	; 0x2d5a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x102e>
SET_SHORT_PRESS_FUNCTION():
    2d7e:	80 91 4c 28 	lds	r24, 0x284C	; 0x80284c <TIMER_LED_BLINK>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:425
                    else                  led.DISPLAY_DIGIT1(0, 20, 24, 24);
                  }
                 else
                 {
                   TIMER_LED_BLINK++;
    2d82:	90 91 4d 28 	lds	r25, 0x284D	; 0x80284d <TIMER_LED_BLINK+0x1>
    2d86:	9c 01       	movw	r18, r24
    2d88:	2f 5f       	subi	r18, 0xFF	; 255
    2d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    2d8c:	20 93 4c 28 	sts	0x284C, r18	; 0x80284c <TIMER_LED_BLINK>
    2d90:	30 93 4d 28 	sts	0x284D, r19	; 0x80284d <TIMER_LED_BLINK+0x1>
digitalWrite():
    2d94:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    2d96:	28 39       	cpi	r18, 0x98	; 152
    2d98:	38 40       	sbci	r19, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:426
                   if(TIMER_LED_BLINK >=0 && TIMER_LED_BLINK<2200)                    digitalWrite(TIMER_LED1, HIGH); 
    2d9a:	38 f0       	brcs	.+14     	; 0x2daa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x107e>
    2d9c:	87 59       	subi	r24, 0x97	; 151
    2d9e:	98 40       	sbci	r25, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:427
                   else  if(TIMER_LED_BLINK>=2200 && TIMER_LED_BLINK<4400)            digitalWrite(TIMER_LED1, LOW); 
    2da0:	88 39       	cpi	r24, 0x98	; 152
    2da2:	98 40       	sbci	r25, 0x08	; 8
    2da4:	08 f0       	brcs	.+2      	; 0x2da8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x107c>
    2da6:	54 c0       	rjmp	.+168    	; 0x2e50 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1124>
digitalWrite():
    2da8:	60 e0       	ldi	r22, 0x00	; 0
    2daa:	8c e0       	ldi	r24, 0x0C	; 12
    2dac:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2db0:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <IN_ERROR>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:430
                   else                                                                TIMER_LED_BLINK=0;
                      
                   if(IN_ERROR)  Tick.BUZZ_TICK_STOP();
    2db4:	88 23       	and	r24, r24
    2db6:	71 f0       	breq	.+28     	; 0x2dd4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x10a8>
stop():
    2db8:	10 92 c0 2a 	sts	0x2AC0, r1	; 0x802ac0 <BUZZ_TICK1>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2dbc:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <BUZZ_TICK1+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2dc0:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <BUZZ_TICK1+0xc>
    2dc4:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <BUZZ_TICK1+0xd>
    2dc8:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <BUZZ_TICK1+0xe>
    2dcc:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <BUZZ_TICK1+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2dd0:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    2dd4:	84 e6       	ldi	r24, 0x64	; 100
    2dd6:	8c 9d       	mul	r24, r12
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:432
                                     
                   led.BREAK_NUMBER1( (SET_HOUR *100) + REMAIN_MIN );             
    2dd8:	b0 01       	movw	r22, r0
    2dda:	8d 9d       	mul	r24, r13
    2ddc:	70 0d       	add	r23, r0
    2dde:	11 24       	eor	r1, r1
    2de0:	6e 0d       	add	r22, r14
    2de2:	7f 1d       	adc	r23, r15
    2de4:	07 2e       	mov	r0, r23
    2de6:	00 0c       	add	r0, r0
    2de8:	88 0b       	sbc	r24, r24
    2dea:	99 0b       	sbc	r25, r25
    2dec:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    2df0:	89 e3       	ldi	r24, 0x39	; 57
    2df2:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:434
                   //digitalWrite(TIMER_LED1, HIGH); //Siddhesh 08082023
                   Alter_Disp.update();
    2df4:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    2df8:	80 91 74 28 	lds	r24, 0x2874	; 0x802874 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:436
  
                   if( Alternate_Display_Flag) //                      DISP_INC>0 && DISP_INC<=12000)
    2dfc:	88 23       	and	r24, r24
    2dfe:	f1 f1       	breq	.+124    	; 0x2e7c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1150>
digitalWrite():
    2e00:	61 e0       	ldi	r22, 0x01	; 1
    2e02:	8c e1       	ldi	r24, 0x1C	; 28
    2e04:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    2e08:	60 e0       	ldi	r22, 0x00	; 0
    2e0a:	8d e1       	ldi	r24, 0x1D	; 29
    2e0c:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    2e10:	60 91 75 28 	lds	r22, 0x2875	; 0x802875 <PID_SETPOINT_To_Show>
    2e14:	70 91 76 28 	lds	r23, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x1>
    2e18:	80 91 77 28 	lds	r24, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x2>
    2e1c:	90 91 78 28 	lds	r25, 0x2878	; 0x802878 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    2e20:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:440
                     {
                        digitalWrite(CURRENT_PARA_LED, HIGH); 
                        digitalWrite(SET_PARA_LED, LOW);
                        if(!DEGREE_VALUE_SET)  
    2e24:	21 11       	cpse	r18, r1
    2e26:	19 c0       	rjmp	.+50     	; 0x2e5a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x112e>
    2e28:	20 e0       	ldi	r18, 0x00	; 0
    2e2a:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:442
                        {
                          led.BREAK_NUMBER2(PID_SETPOINT_To_Show*100);  //(SET_TEMP_DEG*100);
    2e2c:	48 ec       	ldi	r20, 0xC8	; 200
    2e2e:	52 e4       	ldi	r21, 0x42	; 66
    2e30:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2e34:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2e38:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2e3c:	8a e0       	ldi	r24, 0x0A	; 10
    2e3e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:443
                          digits2[3] = 10;
    2e40:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2e44:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2e48:	81 e0       	ldi	r24, 0x01	; 1
    2e4a:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:444
                          DOT2_1=1;
    2e4e:	65 c8       	rjmp	.-3894   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
    2e50:	10 92 4c 28 	sts	0x284C, r1	; 0x80284c <TIMER_LED_BLINK>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:428
                 else
                 {
                   TIMER_LED_BLINK++;
                   if(TIMER_LED_BLINK >=0 && TIMER_LED_BLINK<2200)                    digitalWrite(TIMER_LED1, HIGH); 
                   else  if(TIMER_LED_BLINK>=2200 && TIMER_LED_BLINK<4400)            digitalWrite(TIMER_LED1, LOW); 
                   else                                                                TIMER_LED_BLINK=0;
    2e54:	10 92 4d 28 	sts	0x284D, r1	; 0x80284d <TIMER_LED_BLINK+0x1>
    2e58:	ab cf       	rjmp	.-170    	; 0x2db0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1084>
    2e5a:	20 e0       	ldi	r18, 0x00	; 0
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:448
                          digits2[3] = 10;
                          DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(PID_SETPOINT_To_Show*10);
    2e5e:	40 e2       	ldi	r20, 0x20	; 32
    2e60:	51 e4       	ldi	r21, 0x41	; 65
    2e62:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2e66:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2e6a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2e6e:	25 e1       	ldi	r18, 0x15	; 21
    2e70:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:449
                          digits2[3] = 21;            
    2e72:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    2e76:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
    2e7a:	4f c8       	rjmp	.-3938   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
digitalWrite():
    2e7c:	60 e0       	ldi	r22, 0x00	; 0
    2e7e:	8c e1       	ldi	r24, 0x1C	; 28
    2e80:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    2e84:	61 e0       	ldi	r22, 0x01	; 1
    2e86:	8d e1       	ldi	r24, 0x1D	; 29
    2e88:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2e8c:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:456
                     }
                     else   //if(DISP_INC>12000 && DISP_INC<=24000)
                     {
                        digitalWrite(CURRENT_PARA_LED, LOW);
                        digitalWrite(SET_PARA_LED, HIGH);
                        if(!DEGREE_VALUE_SET)  
    2e90:	81 11       	cpse	r24, r1
    2e92:	37 c0       	rjmp	.+110    	; 0x2f02 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11d6>
    2e94:	c0 90 d8 28 	lds	r12, 0x28D8	; 0x8028d8 <TEMP_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:458
                        {
                          if(TEMP_DEG>99.9) { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0;}
    2e98:	d0 90 d9 28 	lds	r13, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    2e9c:	e0 90 da 28 	lds	r14, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    2ea0:	f0 90 db 28 	lds	r15, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    2ea4:	2d ec       	ldi	r18, 0xCD	; 205
    2ea6:	3c ec       	ldi	r19, 0xCC	; 204
    2ea8:	47 ec       	ldi	r20, 0xC7	; 199
    2eaa:	52 e4       	ldi	r21, 0x42	; 66
    2eac:	c7 01       	movw	r24, r14
    2eae:	b6 01       	movw	r22, r12
    2eb0:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    2eb4:	18 16       	cp	r1, r24
    2eb6:	ac f4       	brge	.+42     	; 0x2ee2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11b6>
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	40 e2       	ldi	r20, 0x20	; 32
    2ebe:	51 e4       	ldi	r21, 0x41	; 65
    2ec0:	c7 01       	movw	r24, r14
    2ec2:	b6 01       	movw	r22, r12
    2ec4:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2ec8:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2ecc:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2ed0:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    2ed4:	8a e0       	ldi	r24, 0x0A	; 10
    2ed6:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:460
                          else              { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1;}
                          digits2[3] = 10;
    2ed8:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    2edc:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    2ee0:	1c c8       	rjmp	.-4040   	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
    2ee2:	20 e0       	ldi	r18, 0x00	; 0
    2ee4:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:459
                        digitalWrite(CURRENT_PARA_LED, LOW);
                        digitalWrite(SET_PARA_LED, HIGH);
                        if(!DEGREE_VALUE_SET)  
                        {
                          if(TEMP_DEG>99.9) { led.BREAK_NUMBER2(TEMP_DEG*10);  DOT2_1=0;}
                          else              { led.BREAK_NUMBER2(TEMP_DEG*100); DOT2_1=1;}
    2ee6:	48 ec       	ldi	r20, 0xC8	; 200
    2ee8:	52 e4       	ldi	r21, 0x42	; 66
    2eea:	c7 01       	movw	r24, r14
    2eec:	b6 01       	movw	r22, r12
    2eee:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2ef2:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2ef6:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2efa:	81 e0       	ldi	r24, 0x01	; 1
    2efc:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
    2f00:	e9 cf       	rjmp	.-46     	; 0x2ed4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11a8>
    2f02:	20 e0       	ldi	r18, 0x00	; 0
    2f04:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:465
                          digits2[3] = 10;
    //                      DOT2_1=1;
                        }
                        else
                        {
                          led.BREAK_NUMBER2(TEMP_FAH*10);
    2f06:	40 e2       	ldi	r20, 0x20	; 32
    2f08:	51 e4       	ldi	r21, 0x41	; 65
    2f0a:	60 91 b7 28 	lds	r22, 0x28B7	; 0x8028b7 <TEMP_FAH>
    2f0e:	70 91 b8 28 	lds	r23, 0x28B8	; 0x8028b8 <TEMP_FAH+0x1>
    2f12:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <TEMP_FAH+0x2>
    2f16:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <TEMP_FAH+0x3>
    2f1a:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    2f1e:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    2f22:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    2f26:	45 e1       	ldi	r20, 0x15	; 21
    2f28:	50 e0       	ldi	r21, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:466
                          digits2[3] = 21;            
    2f2a:	40 93 e2 28 	sts	0x28E2, r20	; 0x8028e2 <digits2+0x6>
    2f2e:	50 93 e3 28 	sts	0x28E3, r21	; 0x8028e3 <digits2+0x7>
    2f32:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1ee>
    2f36:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
LED_On_Call():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:472
                        }
                     }
                    } 
                  }
             }  
             ALL_LED_OFF();    
    2f3a:	8f e6       	ldi	r24, 0x6F	; 111
    2f3c:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Tick.cpp:39
  Blink_LED_OFF.update();  
}

void Tclass :: LED_On_Call()
{
  Blink_LED_OFF.start(); 
    2f3e:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    2f42:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:474
             Tick.LED_On_Call();   
             Process_Interrupt_flag=0;            
    2f46:	60 e0       	ldi	r22, 0x00	; 0
    2f48:	87 e8       	ldi	r24, 0x87	; 135
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:50
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
SET_SHORT_PRESS_FUNCTION():
    2f50:	60 91 48 28 	lds	r22, 0x2848	; 0x802848 <actualRunMin>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:477
             Eeprom.Process_Time_Set_On_Eeprom();
              
             actualRunHours = (actualRunMin/60);
    2f54:	70 91 49 28 	lds	r23, 0x2849	; 0x802849 <actualRunMin+0x1>
    2f58:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <actualRunMin+0x2>
    2f5c:	90 91 4b 28 	lds	r25, 0x284B	; 0x80284b <actualRunMin+0x3>
    2f60:	2c e3       	ldi	r18, 0x3C	; 60
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	40 e0       	ldi	r20, 0x00	; 0
    2f66:	50 e0       	ldi	r21, 0x00	; 0
    2f68:	0e 94 62 34 	call	0x68c4	; 0x68c4 <__udivmodsi4>
    2f6c:	69 01       	movw	r12, r18
    2f6e:	20 93 46 28 	sts	0x2846, r18	; 0x802846 <actualRunHours>
    2f72:	30 93 47 28 	sts	0x2847, r19	; 0x802847 <actualRunHours+0x1>
    2f76:	64 e4       	ldi	r22, 0x44	; 68
    2f78:	78 e2       	ldi	r23, 0x28	; 40
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:478
             EEPROM.get(152,processLog );
    2f7a:	88 e9       	ldi	r24, 0x98	; 152
    2f7c:	90 e0       	ldi	r25, 0x00	; 0
    2f7e:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    2f82:	20 91 44 28 	lds	r18, 0x2844	; 0x802844 <processLog>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:479
             processLog = processLog + actualRunHours ; //Hours;
    2f86:	30 91 45 28 	lds	r19, 0x2845	; 0x802845 <processLog+0x1>
    2f8a:	2c 0d       	add	r18, r12
    2f8c:	3d 1d       	adc	r19, r13
    2f8e:	20 93 44 28 	sts	0x2844, r18	; 0x802844 <processLog>
    2f92:	30 93 45 28 	sts	0x2845, r19	; 0x802845 <processLog+0x1>
    2f96:	2f 30       	cpi	r18, 0x0F	; 15
    2f98:	37 42       	sbci	r19, 0x27	; 39
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:480
             if(processLog >= 9999) 
    2f9a:	68 f0       	brcs	.+26     	; 0x2fb6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x128a>
    2f9c:	80 91 42 28 	lds	r24, 0x2842	; 0x802842 <processLogNumberOfTimes>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:482
             {
              processLogNumberOfTimes = processLogNumberOfTimes+1;
    2fa0:	90 91 43 28 	lds	r25, 0x2843	; 0x802843 <processLogNumberOfTimes+0x1>
    2fa4:	01 96       	adiw	r24, 0x01	; 1
    2fa6:	80 93 42 28 	sts	0x2842, r24	; 0x802842 <processLogNumberOfTimes>
    2faa:	90 93 43 28 	sts	0x2843, r25	; 0x802843 <processLogNumberOfTimes+0x1>
    2fae:	10 92 44 28 	sts	0x2844, r1	; 0x802844 <processLog>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:483
              processLog =0;        
    2fb2:	10 92 45 28 	sts	0x2845, r1	; 0x802845 <processLog+0x1>
    2fb6:	64 e4       	ldi	r22, 0x44	; 68
    2fb8:	78 e2       	ldi	r23, 0x28	; 40
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:485
             }      
              EEPROM.put(152,processLog );
    2fba:	88 e9       	ldi	r24, 0x98	; 152
    2fbc:	90 e0       	ldi	r25, 0x00	; 0
    2fbe:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    2fc2:	62 e4       	ldi	r22, 0x42	; 66
    2fc4:	78 e2       	ldi	r23, 0x28	; 40
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:486
              EEPROM.put(154, processLogNumberOfTimes);
    2fc6:	8a e9       	ldi	r24, 0x9A	; 154
    2fc8:	90 e0       	ldi	r25, 0x00	; 0
    2fca:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    2fce:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <actualRunHours>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:488
              
             actualRunHours = 0;
    2fd2:	10 92 47 28 	sts	0x2847, r1	; 0x802847 <actualRunHours+0x1>
    2fd6:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <actualRunMin>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:489
             actualRunMin    =0;
    2fda:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <actualRunMin+0x1>
    2fde:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <actualRunMin+0x2>
    2fe2:	10 92 4b 28 	sts	0x284B, r1	; 0x80284b <actualRunMin+0x3>
stop():
    2fe6:	10 92 39 2a 	sts	0x2A39, r1	; 0x802a39 <Alter_Disp>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    2fea:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <Alter_Disp+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    2fee:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <Alter_Disp+0xc>
    2ff2:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <Alter_Disp+0xd>
    2ff6:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <Alter_Disp+0xe>
    2ffa:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <Alter_Disp+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    2ffe:	10 92 49 2a 	sts	0x2A49, r1	; 0x802a49 <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    3002:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <Blinking_Freq>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:492
             
              Alter_Disp.stop();
              while(Blinking_Freq<3)
    3006:	83 30       	cpi	r24, 0x03	; 3
    3008:	b8 f4       	brcc	.+46     	; 0x3038 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x130c>
    300a:	84 ef       	ldi	r24, 0xF4	; 244
    300c:	91 e0       	ldi	r25, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:494
              {  
                 Tick.BUZZ_INTERVAL(500);  
    300e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
stop():
    3012:	10 92 1e 2a 	sts	0x2A1E, r1	; 0x802a1e <PID_EXE>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    3016:	10 92 29 2a 	sts	0x2A29, r1	; 0x802a29 <PID_EXE+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    301a:	10 92 2a 2a 	sts	0x2A2A, r1	; 0x802a2a <PID_EXE+0xc>
    301e:	10 92 2b 2a 	sts	0x2A2B, r1	; 0x802a2b <PID_EXE+0xd>
    3022:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <PID_EXE+0xe>
    3026:	10 92 2d 2a 	sts	0x2A2D, r1	; 0x802a2d <PID_EXE+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    302a:	10 92 2e 2a 	sts	0x2A2E, r1	; 0x802a2e <PID_EXE+0x10>
DISP_UPDATE():
    302e:	86 ef       	ldi	r24, 0xF6	; 246
    3030:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/led.cpp:98
  
}

void Eclass :: DISP_UPDATE()
{
  DISP.update();
    3032:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    3036:	e5 cf       	rjmp	.-54     	; 0x3002 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12d6>
SET_SHORT_PRESS_FUNCTION():
    3038:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Procss.cpp:498
                 Pid.PID_Stop();
                 led.DISP_UPDATE();      
              }             
              ENTER_BUT=0;                    
    303c:	0c 94 b9 0e 	jmp	0x1d72	; 0x1d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x46>

00003040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    3040:	af 92       	push	r10
    3042:	bf 92       	push	r11
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    3044:	cf 92       	push	r12
    3046:	df 92       	push	r13
    3048:	ef 92       	push	r14
    304a:	ff 92       	push	r15
    304c:	0f 93       	push	r16
    304e:	1f 93       	push	r17
    3050:	cf 93       	push	r28
    3052:	df 93       	push	r29
    3054:	00 d0       	rcall	.+0      	; 0x3056 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x16>
    3056:	cd b7       	in	r28, 0x3d	; 61
    3058:	de b7       	in	r29, 0x3e	; 62
    305a:	8b 01       	movw	r16, r22
    305c:	6b 01       	movw	r12, r22
    305e:	24 e0       	ldi	r18, 0x04	; 4
    3060:	c2 0e       	add	r12, r18
    3062:	d1 1c       	adc	r13, r1
    3064:	7b 01       	movw	r14, r22
    3066:	5c 01       	movw	r10, r24
    3068:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    306a:	b7 0a       	sbc	r11, r23
    306c:	c5 01       	movw	r24, r10
    306e:	8e 0d       	add	r24, r14
    3070:	9f 1d       	adc	r25, r15
    3072:	89 83       	std	Y+1, r24	; 0x01
    3074:	9a 83       	std	Y+2, r25	; 0x02
    3076:	f7 01       	movw	r30, r14
    3078:	61 91       	ld	r22, Z+
    307a:	7f 01       	movw	r14, r30
    307c:	ce 01       	movw	r24, r28
    307e:	01 96       	adiw	r24, 0x01	; 1
    3080:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <EERef::update(unsigned char)>
    3084:	ec 14       	cp	r14, r12
    3086:	fd 04       	cpc	r15, r13
    3088:	89 f7       	brne	.-30     	; 0x306c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x2c>
    308a:	c8 01       	movw	r24, r16
    308c:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    308e:	0f 90       	pop	r0
    3090:	df 91       	pop	r29
    3092:	cf 91       	pop	r28
    3094:	1f 91       	pop	r17
    3096:	0f 91       	pop	r16
    3098:	ff 90       	pop	r15
    309a:	ef 90       	pop	r14
    309c:	df 90       	pop	r13
    309e:	cf 90       	pop	r12
    30a0:	bf 90       	pop	r11
    30a2:	af 90       	pop	r10
    30a4:	08 95       	ret

000030a6 <MODE_CLICK()>:
MODE_CLICK():
    30a6:	2f 92       	push	r2
    30a8:	3f 92       	push	r3
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:115
     REP++;
    }
}

void MODE_CLICK()
{
    30aa:	4f 92       	push	r4
    30ac:	5f 92       	push	r5
    30ae:	6f 92       	push	r6
    30b0:	7f 92       	push	r7
    30b2:	8f 92       	push	r8
    30b4:	9f 92       	push	r9
    30b6:	af 92       	push	r10
    30b8:	bf 92       	push	r11
    30ba:	cf 92       	push	r12
    30bc:	df 92       	push	r13
    30be:	ef 92       	push	r14
    30c0:	ff 92       	push	r15
    30c2:	0f 93       	push	r16
    30c4:	1f 93       	push	r17
    30c6:	cf 93       	push	r28
    30c8:	df 93       	push	r29
    30ca:	00 d0       	rcall	.+0      	; 0x30cc <MODE_CLICK()+0x26>
    30cc:	1f 92       	push	r1
    30ce:	cd b7       	in	r28, 0x3d	; 61
    30d0:	de b7       	in	r29, 0x3e	; 62
    30d2:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:116
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    30d6:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:117
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    30da:	81 11       	cpse	r24, r1
    30dc:	6c c0       	rjmp	.+216    	; 0x31b6 <MODE_CLICK()+0x110>
    30de:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:119
  {
    i = 0;
    30e2:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    30e6:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:125
//    if(!ENTER_BUT && !DEGREE_VALUE_SET)                               //-----------------------at home page and selection of parameter in degree
//    {    
//       int CONV3 = (TEMP_DEG * 10);
//       MIN_SET_TEMP =((TEMP_DEG + ((CONV3 % 10) / 10.0)) +10); //7    //-----------------------Level sensing start minimu limit of temp
//    }         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    30ea:	84 30       	cpi	r24, 0x04	; 4
    30ec:	31 f4       	brne	.+12     	; 0x30fa <MODE_CLICK()+0x54>
    30ee:	20 91 84 28 	lds	r18, 0x2884	; 0x802884 <SET_MIN>
    30f2:	30 91 85 28 	lds	r19, 0x2885	; 0x802885 <SET_MIN+0x1>
    30f6:	23 2b       	or	r18, r19
    30f8:	51 f0       	breq	.+20     	; 0x310e <MODE_CLICK()+0x68>
    30fa:	90 91 35 29 	lds	r25, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:126
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    30fe:	99 23       	and	r25, r25
    3100:	09 f4       	brne	.+2      	; 0x3104 <MODE_CLICK()+0x5e>
    3102:	57 c0       	rjmp	.+174    	; 0x31b2 <MODE_CLICK()+0x10c>
    3104:	81 11       	cpse	r24, r1
    3106:	55 c0       	rjmp	.+170    	; 0x31b2 <MODE_CLICK()+0x10c>
    3108:	82 e0       	ldi	r24, 0x02	; 2
    310a:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:131
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    310e:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:303
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    3112:	85 30       	cpi	r24, 0x05	; 5
    3114:	0c f4       	brge	.+2      	; 0x3118 <MODE_CLICK()+0x72>
    3116:	73 c3       	rjmp	.+1766   	; 0x37fe <MODE_CLICK()+0x758>
    3118:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
    311c:	88 23       	and	r24, r24
    311e:	09 f1       	breq	.+66     	; 0x3162 <MODE_CLICK()+0xbc>
    3120:	85 e0       	ldi	r24, 0x05	; 5
    3122:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:305
   {
      ENTER_BUT = 5;  
    3126:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:306
      if(PUMP_FLAG)   PUMP_FLAG=0;
    312a:	88 23       	and	r24, r24
    312c:	09 f4       	brne	.+2      	; 0x3130 <MODE_CLICK()+0x8a>
    312e:	63 c3       	rjmp	.+1734   	; 0x37f6 <MODE_CLICK()+0x750>
    3130:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <PUMP_FLAG>
Save_Pump_Data():
    3134:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:64
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    3138:	81 11       	cpse	r24, r1
    313a:	13 c0       	rjmp	.+38     	; 0x3162 <MODE_CLICK()+0xbc>
    313c:	61 e0       	ldi	r22, 0x01	; 1
    313e:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:66
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    3142:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <SET_VALUE+0xb>
    3146:	89 2b       	or	r24, r25
    3148:	09 f4       	brne	.+2      	; 0x314c <MODE_CLICK()+0xa6>
    314a:	60 e0       	ldi	r22, 0x00	; 0
    314c:	60 93 86 28 	sts	0x2886, r22	; 0x802886 <STIR_VALUE_SET>
    3150:	90 e0       	ldi	r25, 0x00	; 0
    3152:	80 e0       	ldi	r24, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Eeprom.cpp:67
      EEPROM.write(0, STIR_VALUE_SET);
    3154:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
MODE_CLICK():
    3158:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:311
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); //Siddhesh
   }

   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    315c:	85 30       	cpi	r24, 0x05	; 5
    315e:	0c f4       	brge	.+2      	; 0x3162 <MODE_CLICK()+0xbc>
    3160:	4e c3       	rjmp	.+1692   	; 0x37fe <MODE_CLICK()+0x758>
    3162:	00 91 9b 28 	lds	r16, 0x289B	; 0x80289b <REP1>
    3166:	10 91 9c 28 	lds	r17, 0x289C	; 0x80289c <REP1+0x1>
    316a:	10 16       	cp	r1, r16
    316c:	11 06       	cpc	r1, r17
    316e:	0c f4       	brge	.+2      	; 0x3172 <MODE_CLICK()+0xcc>
    3170:	46 c3       	rjmp	.+1676   	; 0x37fe <MODE_CLICK()+0x758>
    3172:	88 ee       	ldi	r24, 0xE8	; 232
    3174:	93 e0       	ldi	r25, 0x03	; 3
    3176:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    317a:	0f 5f       	subi	r16, 0xFF	; 255
    317c:	1f 4f       	sbci	r17, 0xFF	; 255
    317e:	00 93 9b 28 	sts	0x289B, r16	; 0x80289b <REP1>
    3182:	10 93 9c 28 	sts	0x289C, r17	; 0x80289c <REP1+0x1>
    3186:	23 96       	adiw	r28, 0x03	; 3
    3188:	cd bf       	out	0x3d, r28	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:313
   else                           Tick.BUZZ_INTERVAL(50);               //short pree
}
    318a:	de bf       	out	0x3e, r29	; 62
    318c:	df 91       	pop	r29
    318e:	cf 91       	pop	r28
    3190:	1f 91       	pop	r17
    3192:	0f 91       	pop	r16
    3194:	ff 90       	pop	r15
    3196:	ef 90       	pop	r14
    3198:	df 90       	pop	r13
    319a:	cf 90       	pop	r12
    319c:	bf 90       	pop	r11
    319e:	af 90       	pop	r10
    31a0:	9f 90       	pop	r9
    31a2:	8f 90       	pop	r8
    31a4:	7f 90       	pop	r7
    31a6:	6f 90       	pop	r6
    31a8:	5f 90       	pop	r5
    31aa:	4f 90       	pop	r4
    31ac:	3f 90       	pop	r3
    31ae:	2f 90       	pop	r2
    31b0:	08 95       	ret
    31b2:	8f 5f       	subi	r24, 0xFF	; 255
    31b4:	aa cf       	rjmp	.-172    	; 0x310a <MODE_CLICK()+0x64>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:131
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    31b6:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    31ba:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    31be:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:136
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    31c2:	81 11       	cpse	r24, r1
    31c4:	02 c1       	rjmp	.+516    	; 0x33ca <MODE_CLICK()+0x324>
    31c6:	80 91 86 28 	lds	r24, 0x2886	; 0x802886 <STIR_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:138
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; //
    31ca:	90 e0       	ldi	r25, 0x00	; 0
    31cc:	80 93 03 29 	sts	0x2903, r24	; 0x802903 <SET_LONG_VALUE>
    31d0:	90 93 04 29 	sts	0x2904, r25	; 0x802904 <SET_LONG_VALUE+0x1>
    31d4:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:139
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    31d8:	2b 83       	std	Y+3, r18	; 0x03
    31da:	82 2f       	mov	r24, r18
    31dc:	90 e0       	ldi	r25, 0x00	; 0
    31de:	80 93 05 29 	sts	0x2905, r24	; 0x802905 <SET_LONG_VALUE+0x2>
    31e2:	90 93 06 29 	sts	0x2906, r25	; 0x802906 <SET_LONG_VALUE+0x3>
    31e6:	80 91 8d 28 	lds	r24, 0x288D	; 0x80288d <Proceess_Resume_Enable_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:140
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <SET_LONG_VALUE+0x8>
    31f0:	90 93 0c 29 	sts	0x290C, r25	; 0x80290c <SET_LONG_VALUE+0x9>
    31f4:	80 91 f0 28 	lds	r24, 0x28F0	; 0x8028f0 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:142
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type;//Siddhesh
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	80 93 0d 29 	sts	0x290D, r24	; 0x80290d <SET_LONG_VALUE+0xa>
    31fe:	90 93 0e 29 	sts	0x290E, r25	; 0x80290e <SET_LONG_VALUE+0xb>
    3202:	21 11       	cpse	r18, r1
    3204:	99 c0       	rjmp	.+306    	; 0x3338 <MODE_CLICK()+0x292>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:144
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    3206:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <SAFE_VALUE_SET_DEG>
    320a:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
    320e:	80 93 07 29 	sts	0x2907, r24	; 0x802907 <SET_LONG_VALUE+0x4>
    3212:	90 93 08 29 	sts	0x2908, r25	; 0x802908 <SET_LONG_VALUE+0x5>
    3216:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <CAL_SELECT_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:147
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    321a:	90 91 bc 28 	lds	r25, 0x28BC	; 0x8028bc <CAL_SELECT_VALUE+0x1>
    321e:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_LONG_VALUE+0xc>
    3222:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_LONG_VALUE+0xd>
    3226:	c0 90 d4 28 	lds	r12, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    322a:	d0 90 d5 28 	lds	r13, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    322e:	e0 90 d6 28 	lds	r14, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    3232:	f0 90 d7 28 	lds	r15, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    3236:	c7 01       	movw	r24, r14
    3238:	b6 01       	movw	r22, r12
    323a:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    323e:	4b 01       	movw	r8, r22
    3240:	20 e0       	ldi	r18, 0x00	; 0
    3242:	30 e0       	ldi	r19, 0x00	; 0
    3244:	40 e2       	ldi	r20, 0x20	; 32
    3246:	51 e4       	ldi	r21, 0x41	; 65
    3248:	c7 01       	movw	r24, r14
    324a:	b6 01       	movw	r22, r12
    324c:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    3250:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    3254:	2b 01       	movw	r4, r22
    3256:	cb 01       	movw	r24, r22
    3258:	6a e0       	ldi	r22, 0x0A	; 10
    325a:	70 e0       	ldi	r23, 0x00	; 0
    325c:	0e 94 4f 34 	call	0x689e	; 0x689e <__divmodhi4>
    3260:	1c 01       	movw	r2, r24
    3262:	8b 81       	ldd	r24, Y+3	; 0x03
    3264:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:148
      if (!DEGREE_VALUE_SET)
    3266:	7e c0       	rjmp	.+252    	; 0x3364 <MODE_CLICK()+0x2be>
    3268:	20 e0       	ldi	r18, 0x00	; 0
    326a:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:150
      {
        if(TEMP_DEG_RAW<100)
    326c:	48 ec       	ldi	r20, 0xC8	; 200
    326e:	52 e4       	ldi	r21, 0x42	; 66
    3270:	c7 01       	movw	r24, r14
    3272:	b6 01       	movw	r22, r12
    3274:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    3278:	87 ff       	sbrs	r24, 7
    327a:	67 c0       	rjmp	.+206    	; 0x334a <MODE_CLICK()+0x2a4>
    327c:	80 92 11 29 	sts	0x2911, r8	; 0x802911 <SET_LONG_VALUE+0xe>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:152
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    3280:	90 92 12 29 	sts	0x2912, r9	; 0x802912 <SET_LONG_VALUE+0xf>
    3284:	40 92 1e 28 	sts	0x281E, r4	; 0x80281e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:153
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    3288:	50 92 1f 28 	sts	0x281F, r5	; 0x80281f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    328c:	20 92 13 29 	sts	0x2913, r2	; 0x802913 <SET_LONG_VALUE+0x10>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:155
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    3290:	30 92 14 29 	sts	0x2914, r3	; 0x802914 <SET_LONG_VALUE+0x11>
    3294:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:168
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    3298:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    329c:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_LONG_VALUE+0x12>
    32a0:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_LONG_VALUE+0x13>
    32a4:	80 92 19 29 	sts	0x2919, r8	; 0x802919 <SET_LONG_VALUE+0x16>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:169
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    32a8:	90 92 1a 29 	sts	0x291A, r9	; 0x80291a <SET_LONG_VALUE+0x17>
    32ac:	20 92 1b 29 	sts	0x291B, r2	; 0x80291b <SET_LONG_VALUE+0x18>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:172
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    32b0:	30 92 1c 29 	sts	0x291C, r3	; 0x80291c <SET_LONG_VALUE+0x19>
    32b4:	0c 30       	cpi	r16, 0x0C	; 12
    32b6:	11 05       	cpc	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:174
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    32b8:	09 f0       	breq	.+2      	; 0x32bc <MODE_CLICK()+0x216>
    32ba:	6d c0       	rjmp	.+218    	; 0x3396 <MODE_CLICK()+0x2f0>
    32bc:	c0 92 16 28 	sts	0x2816, r12	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    32c0:	d0 92 17 28 	sts	0x2817, r13	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    32c4:	e0 92 18 28 	sts	0x2818, r14	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    32c8:	f0 92 19 28 	sts	0x2819, r15	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    32cc:	20 e0       	ldi	r18, 0x00	; 0
    32ce:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:177
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    32d0:	48 ec       	ldi	r20, 0xC8	; 200
    32d2:	52 e4       	ldi	r21, 0x42	; 66
    32d4:	c7 01       	movw	r24, r14
    32d6:	b6 01       	movw	r22, r12
    32d8:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    32dc:	87 ff       	sbrs	r24, 7
    32de:	68 c0       	rjmp	.+208    	; 0x33b0 <MODE_CLICK()+0x30a>
    32e0:	80 92 1d 29 	sts	0x291D, r8	; 0x80291d <SET_LONG_VALUE+0x1a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:179
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    32e4:	90 92 1e 29 	sts	0x291E, r9	; 0x80291e <SET_LONG_VALUE+0x1b>
    32e8:	20 92 1f 29 	sts	0x291F, r2	; 0x80291f <SET_LONG_VALUE+0x1c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:181
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    32ec:	30 92 20 29 	sts	0x2920, r3	; 0x802920 <SET_LONG_VALUE+0x1d>
    32f0:	80 91 55 28 	lds	r24, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:189
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	80 93 09 29 	sts	0x2909, r24	; 0x802909 <SET_LONG_VALUE+0x6>
    32fa:	90 93 0a 29 	sts	0x290A, r25	; 0x80290a <SET_LONG_VALUE+0x7>
    32fe:	01 31       	cpi	r16, 0x11	; 17
    3300:	11 05       	cpc	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:190
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    3302:	21 f4       	brne	.+8      	; 0x330c <MODE_CLICK()+0x266>
    3304:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    3308:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
    330c:	2b 81       	ldd	r18, Y+3	; 0x03
    330e:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:192
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    3310:	09 c0       	rjmp	.+18     	; 0x3324 <MODE_CLICK()+0x27e>
    3312:	08 30       	cpi	r16, 0x08	; 8
    3314:	11 05       	cpc	r17, r1
    3316:	31 f4       	brne	.+12     	; 0x3324 <MODE_CLICK()+0x27e>
    3318:	87 e0       	ldi	r24, 0x07	; 7
    331a:	90 e0       	ldi	r25, 0x00	; 0
    331c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    3320:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    3324:	81 e0       	ldi	r24, 0x01	; 1
    3326:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:194
      
      Mode_Button_Single_Press_In_Settings = 1;
    332a:	8a e1       	ldi	r24, 0x1A	; 26
    332c:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:301
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    332e:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    3332:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
    3336:	eb ce       	rjmp	.-554    	; 0x310e <MODE_CLICK()+0x68>
    3338:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <SAFE_VALUE_SET_FAH>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:145
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type;//Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    333c:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
    3340:	80 93 29 29 	sts	0x2929, r24	; 0x802929 <SET_LONG_VALUE+0x26>
    3344:	90 93 2a 29 	sts	0x292A, r25	; 0x80292a <SET_LONG_VALUE+0x27>
    3348:	66 cf       	rjmp	.-308    	; 0x3216 <MODE_CLICK()+0x170>
    334a:	83 e6       	ldi	r24, 0x63	; 99
    334c:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:159
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    334e:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_LONG_VALUE+0xe>
    3352:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_LONG_VALUE+0xf>
    3356:	89 e0       	ldi	r24, 0x09	; 9
    3358:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:160
          SET_LONG_VALUE[Cal1_Point] = 9;
    335a:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_LONG_VALUE+0x10>
    335e:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_LONG_VALUE+0x11>
    3362:	98 cf       	rjmp	.-208    	; 0x3294 <MODE_CLICK()+0x1ee>
    3364:	40 90 c1 28 	lds	r4, 0x28C1	; 0x8028c1 <TEMP_FAH_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS Common Code\Final_WLS_WLC_v2.03/Final_WLS_WLC_v2.03.ino:165
        }
      }
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
    3368:	50 90 c2 28 	lds	r5, 0x28C2	; 0x8028c2 <TEMP_FAH_RAW+0x1>
    336c:	60 90 c3 28 	lds	r6, 0x28C3	; 0x8028c3 <TEMP_FAH_RAW+0x2>
    3370:	70 90 c4 28 	lds	r7, 0x28C4	; 0x8028c4 <TEMP_FAH_RAW+0x3>
    3374:	c3 01       	movw	r24, r6
    3376:	b2 01       	movw	r22, r4
    3378:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    337c:	60 93 2b 29 	sts	0x292B, r22	; 0x80292b <SET_LONG_VALUE+0x28>
    3380:	70 93 2c 29 	sts	0x292C, r23	; 0x80292c <SET_LONG_VALUE+0x29>
    3384:	40 92 1a 28 	sts	0x281A, r4	; 0x80281a <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    3388:	50 92 1b 28 	sts	0x281B, r5	; 0x80281b <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    338c:	60 92 1c 28 	sts	0x281C, r6	; 0x80281c <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    3390:	70 92 1d 28 	sts	0x281D, r7	; 0x80281d <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    3394:	7f cf       	rjmp	.-258    	; 0x3294 <MODE_CLICK()+0x1ee>
    3396:	0e 30       	cpi	r16, 0x0E	; 14
    3398:	11 05       	cpc	r17, r1
    339a:	09 f0       	breq	.+2      	; 0x339e <MODE_CLICK()+0x2f8>
    339c:	97 cf       	rjmp	.-210    	; 0x32cc <MODE_CLICK()+0x226>
    339e:	c0 92 12 28 	sts	0x2812, r12	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    33a2:	d0 92 13 28 	sts	0x2813, r13	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    33a6:	e0 92 14 28 	sts	0x2814, r14	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    33aa:	f0 92 15 28 	sts	0x2815, r15	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    33ae:	8e cf       	rjmp	.-228    	; 0x32cc <MODE_CLICK()+0x226>
    33b0:	83 e6       	ldi	r24, 0x63	; 99
    33b2:	90 e0       	ldi	r25, 0x00	; 0
    33b4:	80 93 1d 29 	sts	0x291D, r24	; 0x80291d <SET_LONG_VALUE+0x1a>
    33b8:	90 93 1e 29 	sts	0x291E, r25	; 0x80291e <SET_LONG_VALUE+0x1b>
    33bc:	89 e0       	ldi	r24, 0x09	; 9
    33be:	90 e0       	ldi	r25, 0x00	; 0
    33c0:	80 93 1f 29 	sts	0x291F, r24	; 0x80291f <SET_LONG_VALUE+0x1c>
    33c4:	90 93 20 29 	sts	0x2920, r25	; 0x802920 <SET_LONG_VALUE+0x1d>
    33c8:	93 cf       	rjmp	.-218    	; 0x32f0 <MODE_CLICK()+0x24a>
    33ca:	0f 30       	cpi	r16, 0x0F	; 15
    33cc:	11 05       	cpc	r17, r1
    33ce:	10 f5       	brcc	.+68     	; 0x3414 <MODE_CLICK()+0x36e>
    33d0:	f8 01       	movw	r30, r16
    33d2:	e3 51       	subi	r30, 0x13	; 19
    33d4:	f6 4e       	sbci	r31, 0xE6	; 230
    33d6:	0c 94 a0 34 	jmp	0x6940	; 0x6940 <__tablejump2__>
    33da:	fc 19       	sub	r31, r12
    33dc:	2a 1a       	sub	r2, r26
    33de:	37 1a       	sub	r3, r23
    33e0:	db 1b       	sub	r29, r27
    33e2:	55 1a       	sub	r5, r21
    33e4:	63 1a       	sub	r6, r19
    33e6:	70 1a       	sub	r7, r16
    33e8:	0a 1a       	sub	r0, r26
    33ea:	7b 1a       	sub	r7, r27
    33ec:	2e 1b       	sub	r18, r30
    33ee:	3c 1b       	sub	r19, r28
    33f0:	0a 1a       	sub	r0, r26
    33f2:	55 1b       	sub	r21, r21
    33f4:	0a 1a       	sub	r0, r26
    33f6:	66 1b       	sub	r22, r22
    33f8:	61 e0       	ldi	r22, 0x01	; 1
    33fa:	80 91 03 29 	lds	r24, 0x2903	; 0x802903 <SET_LONG_VALUE>
    33fe:	90 91 04 29 	lds	r25, 0x2904	; 0x802904 <SET_LONG_VALUE+0x1>
    3402:	89 2b       	or	r24, r25
    3404:	09 f4       	brne	.+2      	; 0x3408 <MODE_CLICK()+0x362>
    3406:	60 e0       	ldi	r22, 0x00	; 0
    3408:	60 93 86 28 	sts	0x2886, r22	; 0x802886 <STIR_VALUE_SET>
    340c:	90 e0       	ldi	r25, 0x00	; 0
    340e:	80 e0       	ldi	r24, 0x00	; 0
    3410:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    3414:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    3418:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    341c:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    3420:	21 11       	cpse	r18, r1
    3422:	03 c0       	rjmp	.+6      	; 0x342a <MODE_CLICK()+0x384>
    3424:	87 30       	cpi	r24, 0x07	; 7
    3426:	91 05       	cpc	r25, r1
    3428:	61 f0       	breq	.+24     	; 0x3442 <MODE_CLICK()+0x39c>
    342a:	9c 01       	movw	r18, r24
    342c:	2d 7f       	andi	r18, 0xFD	; 253
    342e:	29 30       	cpi	r18, 0x09	; 9
    3430:	31 05       	cpc	r19, r1
    3432:	39 f0       	breq	.+14     	; 0x3442 <MODE_CLICK()+0x39c>
    3434:	8d 30       	cpi	r24, 0x0D	; 13
    3436:	91 05       	cpc	r25, r1
    3438:	21 f0       	breq	.+8      	; 0x3442 <MODE_CLICK()+0x39c>
    343a:	81 31       	cpi	r24, 0x11	; 17
    343c:	91 05       	cpc	r25, r1
    343e:	09 f0       	breq	.+2      	; 0x3442 <MODE_CLICK()+0x39c>
    3440:	cd c1       	rjmp	.+922    	; 0x37dc <MODE_CLICK()+0x736>
    3442:	21 e0       	ldi	r18, 0x01	; 1
    3444:	20 93 90 28 	sts	0x2890, r18	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    3448:	01 96       	adiw	r24, 0x01	; 1
    344a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    344e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    3452:	6b cf       	rjmp	.-298    	; 0x332a <MODE_CLICK()+0x284>
    3454:	61 e0       	ldi	r22, 0x01	; 1
    3456:	80 91 05 29 	lds	r24, 0x2905	; 0x802905 <SET_LONG_VALUE+0x2>
    345a:	90 91 06 29 	lds	r25, 0x2906	; 0x802906 <SET_LONG_VALUE+0x3>
    345e:	89 2b       	or	r24, r25
    3460:	09 f4       	brne	.+2      	; 0x3464 <MODE_CLICK()+0x3be>
    3462:	60 e0       	ldi	r22, 0x00	; 0
    3464:	60 93 35 29 	sts	0x2935, r22	; 0x802935 <DEGREE_VALUE_SET>
    3468:	81 e0       	ldi	r24, 0x01	; 1
    346a:	90 e0       	ldi	r25, 0x00	; 0
    346c:	d1 cf       	rjmp	.-94     	; 0x3410 <MODE_CLICK()+0x36a>
    346e:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    3472:	81 11       	cpse	r24, r1
    3474:	0b c0       	rjmp	.+22     	; 0x348c <MODE_CLICK()+0x3e6>
    3476:	60 91 07 29 	lds	r22, 0x2907	; 0x802907 <SET_LONG_VALUE+0x4>
    347a:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <SET_LONG_VALUE+0x5>
    347e:	60 93 f4 28 	sts	0x28F4, r22	; 0x8028f4 <SAFE_VALUE_SET_DEG>
    3482:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
    3486:	82 e0       	ldi	r24, 0x02	; 2
    3488:	90 e0       	ldi	r25, 0x00	; 0
    348a:	c2 cf       	rjmp	.-124    	; 0x3410 <MODE_CLICK()+0x36a>
    348c:	80 91 29 29 	lds	r24, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
    3490:	90 91 2a 29 	lds	r25, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
    3494:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <SAFE_VALUE_SET_FAH>
    3498:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
    349c:	62 ef       	ldi	r22, 0xF2	; 242
    349e:	78 e2       	ldi	r23, 0x28	; 40
    34a0:	83 e0       	ldi	r24, 0x03	; 3
    34a2:	90 e0       	ldi	r25, 0x00	; 0
    34a4:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    34a8:	b5 cf       	rjmp	.-150    	; 0x3414 <MODE_CLICK()+0x36e>
    34aa:	61 e0       	ldi	r22, 0x01	; 1
    34ac:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SET_LONG_VALUE+0x8>
    34b0:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SET_LONG_VALUE+0x9>
    34b4:	89 2b       	or	r24, r25
    34b6:	09 f4       	brne	.+2      	; 0x34ba <MODE_CLICK()+0x414>
    34b8:	60 e0       	ldi	r22, 0x00	; 0
    34ba:	60 93 8d 28 	sts	0x288D, r22	; 0x80288d <Proceess_Resume_Enable_Flag>
    34be:	8f e0       	ldi	r24, 0x0F	; 15
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    34c6:	61 e0       	ldi	r22, 0x01	; 1
    34c8:	80 91 0d 29 	lds	r24, 0x290D	; 0x80290d <SET_LONG_VALUE+0xa>
    34cc:	90 91 0e 29 	lds	r25, 0x290E	; 0x80290e <SET_LONG_VALUE+0xb>
    34d0:	89 2b       	or	r24, r25
    34d2:	09 f4       	brne	.+2      	; 0x34d6 <MODE_CLICK()+0x430>
    34d4:	60 e0       	ldi	r22, 0x00	; 0
    34d6:	60 93 f0 28 	sts	0x28F0, r22	; 0x8028f0 <select_product_type>
    34da:	86 e9       	ldi	r24, 0x96	; 150
    34dc:	90 e0       	ldi	r25, 0x00	; 0
    34de:	98 cf       	rjmp	.-208    	; 0x3410 <MODE_CLICK()+0x36a>
    34e0:	60 91 0f 29 	lds	r22, 0x290F	; 0x80290f <SET_LONG_VALUE+0xc>
    34e4:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SET_LONG_VALUE+0xd>
    34e8:	60 93 bb 28 	sts	0x28BB, r22	; 0x8028bb <CAL_SELECT_VALUE>
    34ec:	80 93 bc 28 	sts	0x28BC, r24	; 0x8028bc <CAL_SELECT_VALUE+0x1>
    34f0:	85 e0       	ldi	r24, 0x05	; 5
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	8d cf       	rjmp	.-230    	; 0x3410 <MODE_CLICK()+0x36a>
    34f6:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    34fa:	81 11       	cpse	r24, r1
    34fc:	8a c0       	rjmp	.+276    	; 0x3612 <MODE_CLICK()+0x56c>
    34fe:	60 91 13 29 	lds	r22, 0x2913	; 0x802913 <SET_LONG_VALUE+0x10>
    3502:	70 91 14 29 	lds	r23, 0x2914	; 0x802914 <SET_LONG_VALUE+0x11>
    3506:	07 2e       	mov	r0, r23
    3508:	00 0c       	add	r0, r0
    350a:	88 0b       	sbc	r24, r24
    350c:	99 0b       	sbc	r25, r25
    350e:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    3512:	20 e0       	ldi	r18, 0x00	; 0
    3514:	30 e0       	ldi	r19, 0x00	; 0
    3516:	40 e2       	ldi	r20, 0x20	; 32
    3518:	51 e4       	ldi	r21, 0x41	; 65
    351a:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    351e:	6b 01       	movw	r12, r22
    3520:	7c 01       	movw	r14, r24
    3522:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_LONG_VALUE+0xe>
    3526:	70 91 12 29 	lds	r23, 0x2912	; 0x802912 <SET_LONG_VALUE+0xf>
    352a:	07 2e       	mov	r0, r23
    352c:	00 0c       	add	r0, r0
    352e:	88 0b       	sbc	r24, r24
    3530:	99 0b       	sbc	r25, r25
    3532:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    3536:	9b 01       	movw	r18, r22
    3538:	ac 01       	movw	r20, r24
    353a:	c7 01       	movw	r24, r14
    353c:	b6 01       	movw	r22, r12
    353e:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    3542:	20 e0       	ldi	r18, 0x00	; 0
    3544:	30 e0       	ldi	r19, 0x00	; 0
    3546:	40 e2       	ldi	r20, 0x20	; 32
    3548:	51 e4       	ldi	r21, 0x41	; 65
    354a:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    354e:	6b 01       	movw	r12, r22
    3550:	7c 01       	movw	r14, r24
    3552:	60 91 1e 28 	lds	r22, 0x281E	; 0x80281e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    3556:	70 91 1f 28 	lds	r23, 0x281F	; 0x80281f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    355a:	07 2e       	mov	r0, r23
    355c:	00 0c       	add	r0, r0
    355e:	88 0b       	sbc	r24, r24
    3560:	99 0b       	sbc	r25, r25
    3562:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    3566:	9b 01       	movw	r18, r22
    3568:	ac 01       	movw	r20, r24
    356a:	c7 01       	movw	r24, r14
    356c:	b6 01       	movw	r22, r12
    356e:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    3572:	20 e0       	ldi	r18, 0x00	; 0
    3574:	30 e0       	ldi	r19, 0x00	; 0
    3576:	40 e2       	ldi	r20, 0x20	; 32
    3578:	51 e4       	ldi	r21, 0x41	; 65
    357a:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    357e:	60 93 cb 28 	sts	0x28CB, r22	; 0x8028cb <ERROR_CAL>
    3582:	70 93 cc 28 	sts	0x28CC, r23	; 0x8028cc <ERROR_CAL+0x1>
    3586:	80 93 cd 28 	sts	0x28CD, r24	; 0x8028cd <ERROR_CAL+0x2>
    358a:	90 93 ce 28 	sts	0x28CE, r25	; 0x8028ce <ERROR_CAL+0x3>
    358e:	81 e0       	ldi	r24, 0x01	; 1
    3590:	80 93 ca 28 	sts	0x28CA, r24	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
    3594:	10 92 c5 28 	sts	0x28C5, r1	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
    3598:	80 90 cb 28 	lds	r8, 0x28CB	; 0x8028cb <ERROR_CAL>
    359c:	90 90 cc 28 	lds	r9, 0x28CC	; 0x8028cc <ERROR_CAL+0x1>
    35a0:	a0 90 cd 28 	lds	r10, 0x28CD	; 0x8028cd <ERROR_CAL+0x2>
    35a4:	b0 90 ce 28 	lds	r11, 0x28CE	; 0x8028ce <ERROR_CAL+0x3>
    35a8:	20 e0       	ldi	r18, 0x00	; 0
    35aa:	30 e0       	ldi	r19, 0x00	; 0
    35ac:	40 e2       	ldi	r20, 0x20	; 32
    35ae:	51 e4       	ldi	r21, 0x41	; 65
    35b0:	c5 01       	movw	r24, r10
    35b2:	b4 01       	movw	r22, r8
    35b4:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    35b8:	6b 01       	movw	r12, r22
    35ba:	7c 01       	movw	r14, r24
    35bc:	20 e0       	ldi	r18, 0x00	; 0
    35be:	30 e0       	ldi	r19, 0x00	; 0
    35c0:	a9 01       	movw	r20, r18
    35c2:	c5 01       	movw	r24, r10
    35c4:	b4 01       	movw	r22, r8
    35c6:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    35ca:	87 ff       	sbrs	r24, 7
    35cc:	44 c0       	rjmp	.+136    	; 0x3656 <MODE_CLICK()+0x5b0>
    35ce:	81 e0       	ldi	r24, 0x01	; 1
    35d0:	80 93 cf 28 	sts	0x28CF, r24	; 0x8028cf <SIGN>
    35d4:	f7 fa       	bst	r15, 7
    35d6:	f0 94       	com	r15
    35d8:	f7 f8       	bld	r15, 7
    35da:	f0 94       	com	r15
    35dc:	c0 92 ec 28 	sts	0x28EC, r12	; 0x8028ec <ERROR_CAL1>
    35e0:	d0 92 ed 28 	sts	0x28ED, r13	; 0x8028ed <ERROR_CAL1+0x1>
    35e4:	e0 92 ee 28 	sts	0x28EE, r14	; 0x8028ee <ERROR_CAL1+0x2>
    35e8:	f0 92 ef 28 	sts	0x28EF, r15	; 0x8028ef <ERROR_CAL1+0x3>
    35ec:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.62]>
    35f0:	60 91 cf 28 	lds	r22, 0x28CF	; 0x8028cf <SIGN>
    35f4:	87 e0       	ldi	r24, 0x07	; 7
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    35fc:	60 91 ca 28 	lds	r22, 0x28CA	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
    3600:	88 e0       	ldi	r24, 0x08	; 8
    3602:	90 e0       	ldi	r25, 0x00	; 0
    3604:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    3608:	60 91 c5 28 	lds	r22, 0x28C5	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
    360c:	89 e0       	ldi	r24, 0x09	; 9
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	ff ce       	rjmp	.-514    	; 0x3410 <MODE_CLICK()+0x36a>
    3612:	60 91 2b 29 	lds	r22, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
    3616:	70 91 2c 29 	lds	r23, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
    361a:	07 2e       	mov	r0, r23
    361c:	00 0c       	add	r0, r0
    361e:	88 0b       	sbc	r24, r24
    3620:	99 0b       	sbc	r25, r25
    3622:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    3626:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    362a:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    362e:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    3632:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    3636:	0e 94 34 32 	call	0x6468	; 0x6468 <__subsf3>
    363a:	60 93 cb 28 	sts	0x28CB, r22	; 0x8028cb <ERROR_CAL>
    363e:	70 93 cc 28 	sts	0x28CC, r23	; 0x8028cc <ERROR_CAL+0x1>
    3642:	80 93 cd 28 	sts	0x28CD, r24	; 0x8028cd <ERROR_CAL+0x2>
    3646:	90 93 ce 28 	sts	0x28CE, r25	; 0x8028ce <ERROR_CAL+0x3>
    364a:	10 92 ca 28 	sts	0x28CA, r1	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
    364e:	81 e0       	ldi	r24, 0x01	; 1
    3650:	80 93 c5 28 	sts	0x28C5, r24	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
    3654:	a1 cf       	rjmp	.-190    	; 0x3598 <MODE_CLICK()+0x4f2>
    3656:	10 92 cf 28 	sts	0x28CF, r1	; 0x8028cf <SIGN>
    365a:	c0 cf       	rjmp	.-128    	; 0x35dc <MODE_CLICK()+0x536>
    365c:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_LONG_VALUE+0x12>
    3660:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_LONG_VALUE+0x13>
    3664:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    3668:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    366c:	0a 96       	adiw	r24, 0x0a	; 10
    366e:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_LONG_VALUE+0x14>
    3672:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_LONG_VALUE+0x15>
    3676:	ce ce       	rjmp	.-612    	; 0x3414 <MODE_CLICK()+0x36e>
    3678:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_LONG_VALUE+0x14>
    367c:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_LONG_VALUE+0x15>
    3680:	80 93 35 28 	sts	0x2835, r24	; 0x802835 <HIGH_CAL_VALUE_SET>
    3684:	90 93 36 28 	sts	0x2836, r25	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    3688:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    368c:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    3690:	a0 91 d6 28 	lds	r26, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    3694:	b0 91 d7 28 	lds	r27, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    3698:	80 93 16 28 	sts	0x2816, r24	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    369c:	90 93 17 28 	sts	0x2817, r25	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    36a0:	a0 93 18 28 	sts	0x2818, r26	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    36a4:	b0 93 19 28 	sts	0x2819, r27	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    36a8:	b5 ce       	rjmp	.-662    	; 0x3414 <MODE_CLICK()+0x36e>
    36aa:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    36ae:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    36b2:	a0 91 d6 28 	lds	r26, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    36b6:	b0 91 d7 28 	lds	r27, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    36ba:	80 93 12 28 	sts	0x2812, r24	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    36be:	90 93 13 28 	sts	0x2813, r25	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    36c2:	a0 93 14 28 	sts	0x2814, r26	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    36c6:	b0 93 15 28 	sts	0x2815, r27	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    36ca:	a4 ce       	rjmp	.-696    	; 0x3414 <MODE_CLICK()+0x36e>
    36cc:	20 e0       	ldi	r18, 0x00	; 0
    36ce:	30 e0       	ldi	r19, 0x00	; 0
    36d0:	40 e2       	ldi	r20, 0x20	; 32
    36d2:	51 e4       	ldi	r21, 0x41	; 65
    36d4:	60 91 16 28 	lds	r22, 0x2816	; 0x802816 <TEMP_CAL2_RAW_LOW_VALUE>
    36d8:	70 91 17 28 	lds	r23, 0x2817	; 0x802817 <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    36dc:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    36e0:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    36e4:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    36e8:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    36ec:	60 93 b3 28 	sts	0x28B3, r22	; 0x8028b3 <CAL2_RAW_LOW_VALUE_CONV>
    36f0:	70 93 b4 28 	sts	0x28B4, r23	; 0x8028b4 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    36f4:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    36f8:	90 93 b6 28 	sts	0x28B6, r25	; 0x8028b6 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    36fc:	20 e0       	ldi	r18, 0x00	; 0
    36fe:	30 e0       	ldi	r19, 0x00	; 0
    3700:	40 e2       	ldi	r20, 0x20	; 32
    3702:	51 e4       	ldi	r21, 0x41	; 65
    3704:	60 91 12 28 	lds	r22, 0x2812	; 0x802812 <TEMP_CAL2_RAW_HIGH_VALUE>
    3708:	70 91 13 28 	lds	r23, 0x2813	; 0x802813 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    370c:	80 91 14 28 	lds	r24, 0x2814	; 0x802814 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    3710:	90 91 15 28 	lds	r25, 0x2815	; 0x802815 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    3714:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    3718:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    371c:	60 93 af 28 	sts	0x28AF, r22	; 0x8028af <CAL2_RAW_HIGH_VALUE_CONV>
    3720:	70 93 b0 28 	sts	0x28B0, r23	; 0x8028b0 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    3724:	80 93 b1 28 	sts	0x28B1, r24	; 0x8028b1 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    3728:	90 93 b2 28 	sts	0x28B2, r25	; 0x8028b2 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    372c:	63 eb       	ldi	r22, 0xB3	; 179
    372e:	78 e2       	ldi	r23, 0x28	; 40
    3730:	80 e5       	ldi	r24, 0x50	; 80
    3732:	90 e0       	ldi	r25, 0x00	; 0
    3734:	85 dc       	rcall	.-1782   	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3736:	6f ea       	ldi	r22, 0xAF	; 175
    3738:	78 e2       	ldi	r23, 0x28	; 40
    373a:	8a e5       	ldi	r24, 0x5A	; 90
    373c:	90 e0       	ldi	r25, 0x00	; 0
    373e:	80 dc       	rcall	.-1792   	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    3740:	20 e0       	ldi	r18, 0x00	; 0
    3742:	30 e0       	ldi	r19, 0x00	; 0
    3744:	40 e2       	ldi	r20, 0x20	; 32
    3746:	51 e4       	ldi	r21, 0x41	; 65
    3748:	60 91 37 28 	lds	r22, 0x2837	; 0x802837 <CAL2_CALCULATED_LOW_CAL_VALUE>
    374c:	70 91 38 28 	lds	r23, 0x2838	; 0x802838 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    3750:	80 91 39 28 	lds	r24, 0x2839	; 0x802839 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    3754:	90 91 3a 28 	lds	r25, 0x283A	; 0x80283a <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    3758:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    375c:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    3760:	60 93 ab 28 	sts	0x28AB, r22	; 0x8028ab <MASTER_LOW_CONV>
    3764:	70 93 ac 28 	sts	0x28AC, r23	; 0x8028ac <MASTER_LOW_CONV+0x1>
    3768:	80 93 ad 28 	sts	0x28AD, r24	; 0x8028ad <MASTER_LOW_CONV+0x2>
    376c:	90 93 ae 28 	sts	0x28AE, r25	; 0x8028ae <MASTER_LOW_CONV+0x3>
    3770:	20 e0       	ldi	r18, 0x00	; 0
    3772:	30 e0       	ldi	r19, 0x00	; 0
    3774:	40 e2       	ldi	r20, 0x20	; 32
    3776:	51 e4       	ldi	r21, 0x41	; 65
    3778:	60 91 31 28 	lds	r22, 0x2831	; 0x802831 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    377c:	70 91 32 28 	lds	r23, 0x2832	; 0x802832 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    3780:	80 91 33 28 	lds	r24, 0x2833	; 0x802833 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    3784:	90 91 34 28 	lds	r25, 0x2834	; 0x802834 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    3788:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    378c:	0e 94 05 33 	call	0x660a	; 0x660a <__fixsfsi>
    3790:	60 93 a7 28 	sts	0x28A7, r22	; 0x8028a7 <MASTER_HIGH_CONV>
    3794:	70 93 a8 28 	sts	0x28A8, r23	; 0x8028a8 <MASTER_HIGH_CONV+0x1>
    3798:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <MASTER_HIGH_CONV+0x2>
    379c:	90 93 aa 28 	sts	0x28AA, r25	; 0x8028aa <MASTER_HIGH_CONV+0x3>
    37a0:	6b ea       	ldi	r22, 0xAB	; 171
    37a2:	78 e2       	ldi	r23, 0x28	; 40
    37a4:	84 e6       	ldi	r24, 0x64	; 100
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	4b dc       	rcall	.-1898   	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    37aa:	67 ea       	ldi	r22, 0xA7	; 167
    37ac:	78 e2       	ldi	r23, 0x28	; 40
    37ae:	8e e6       	ldi	r24, 0x6E	; 110
    37b0:	90 e0       	ldi	r25, 0x00	; 0
    37b2:	46 dc       	rcall	.-1908   	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    37b4:	2f ce       	rjmp	.-930    	; 0x3414 <MODE_CLICK()+0x36e>
    37b6:	61 e0       	ldi	r22, 0x01	; 1
    37b8:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SET_LONG_VALUE+0x6>
    37bc:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SET_LONG_VALUE+0x7>
    37c0:	89 2b       	or	r24, r25
    37c2:	09 f4       	brne	.+2      	; 0x37c6 <MODE_CLICK()+0x720>
    37c4:	60 e0       	ldi	r22, 0x00	; 0
    37c6:	60 93 55 28 	sts	0x2855, r22	; 0x802855 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    37ca:	81 e4       	ldi	r24, 0x41	; 65
    37cc:	90 e0       	ldi	r25, 0x00	; 0
    37ce:	89 83       	std	Y+1, r24	; 0x01
    37d0:	9a 83       	std	Y+2, r25	; 0x02
    37d2:	ce 01       	movw	r24, r28
    37d4:	01 96       	adiw	r24, 0x01	; 1
    37d6:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <EERef::update(unsigned char)>
    37da:	1c ce       	rjmp	.-968    	; 0x3414 <MODE_CLICK()+0x36e>
MODE_CLICK():
    37dc:	9c 01       	movw	r18, r24
    37de:	2b 7f       	andi	r18, 0xFB	; 251
    37e0:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    37e4:	2a 30       	cpi	r18, 0x0A	; 10
    37e6:	31 05       	cpc	r19, r1
    37e8:	09 f4       	brne	.+2      	; 0x37ec <MODE_CLICK()+0x746>
    37ea:	2e ce       	rjmp	.-932    	; 0x3448 <MODE_CLICK()+0x3a2>
    37ec:	8c 30       	cpi	r24, 0x0C	; 12
    37ee:	91 05       	cpc	r25, r1
    37f0:	09 f0       	breq	.+2      	; 0x37f4 <MODE_CLICK()+0x74e>
    37f2:	9b cd       	rjmp	.-1226   	; 0x332a <MODE_CLICK()+0x284>
    37f4:	29 ce       	rjmp	.-942    	; 0x3448 <MODE_CLICK()+0x3a2>
    37f6:	81 e0       	ldi	r24, 0x01	; 1
    37f8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <PUMP_FLAG>
    37fc:	9b cc       	rjmp	.-1738   	; 0x3134 <MODE_CLICK()+0x8e>
    37fe:	82 e3       	ldi	r24, 0x32	; 50
    3800:	90 e0       	ldi	r25, 0x00	; 0
    3802:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    3806:	bf cc       	rjmp	.-1666   	; 0x3186 <MODE_CLICK()+0xe0>

00003808 <shiftOut.constprop.5>:
shiftOut():
    3808:	ef 92       	push	r14
    380a:	ff 92       	push	r15
    380c:	0f 93       	push	r16
    380e:	1f 93       	push	r17
    3810:	cf 93       	push	r28
    3812:	df 93       	push	r29
    3814:	e8 2e       	mov	r14, r24
    3816:	f6 2e       	mov	r15, r22
    3818:	d0 e0       	ldi	r29, 0x00	; 0
    381a:	c0 e0       	ldi	r28, 0x00	; 0
    381c:	04 2f       	mov	r16, r20
    381e:	10 e0       	ldi	r17, 0x00	; 0
    3820:	b8 01       	movw	r22, r16
    3822:	0c 2e       	mov	r0, r28
    3824:	02 c0       	rjmp	.+4      	; 0x382a <shiftOut.constprop.5+0x22>
    3826:	75 95       	asr	r23
    3828:	67 95       	ror	r22
    382a:	0a 94       	dec	r0
    382c:	e2 f7       	brpl	.-8      	; 0x3826 <shiftOut.constprop.5+0x1e>
    382e:	61 70       	andi	r22, 0x01	; 1
    3830:	8e 2d       	mov	r24, r14
    3832:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3836:	61 e0       	ldi	r22, 0x01	; 1
    3838:	8f 2d       	mov	r24, r15
    383a:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    383e:	60 e0       	ldi	r22, 0x00	; 0
    3840:	8f 2d       	mov	r24, r15
    3842:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3846:	21 96       	adiw	r28, 0x01	; 1
    3848:	c8 30       	cpi	r28, 0x08	; 8
    384a:	d1 05       	cpc	r29, r1
    384c:	49 f7       	brne	.-46     	; 0x3820 <shiftOut.constprop.5+0x18>
    384e:	df 91       	pop	r29
    3850:	cf 91       	pop	r28
    3852:	1f 91       	pop	r17
    3854:	0f 91       	pop	r16
    3856:	ff 90       	pop	r15
    3858:	ef 90       	pop	r14
    385a:	08 95       	ret

0000385c <DISP_REFRESH()>:
DISP_REFRESH():
    385c:	0f 93       	push	r16
    385e:	1f 93       	push	r17
    3860:	cf 93       	push	r28
    3862:	df 93       	push	r29
Button_Tick_Update():
    3864:	84 ee       	ldi	r24, 0xE4	; 228
    3866:	99 e2       	ldi	r25, 0x29	; 41
    3868:	0e 94 35 0a 	call	0x146a	; 0x146a <OneButton::tick()>
    386c:	85 ec       	ldi	r24, 0xC5	; 197
    386e:	99 e2       	ldi	r25, 0x29	; 41
    3870:	0e 94 35 0a 	call	0x146a	; 0x146a <OneButton::tick()>
    3874:	86 ea       	ldi	r24, 0xA6	; 166
    3876:	99 e2       	ldi	r25, 0x29	; 41
    3878:	0e 94 35 0a 	call	0x146a	; 0x146a <OneButton::tick()>
    387c:	87 e8       	ldi	r24, 0x87	; 135
    387e:	99 e2       	ldi	r25, 0x29	; 41
    3880:	0e 94 35 0a 	call	0x146a	; 0x146a <OneButton::tick()>
cathode_high1():
    3884:	61 e0       	ldi	r22, 0x01	; 1
    3886:	84 e0       	ldi	r24, 0x04	; 4
    3888:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    388c:	61 e0       	ldi	r22, 0x01	; 1
    388e:	85 e0       	ldi	r24, 0x05	; 5
    3890:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3894:	61 e0       	ldi	r22, 0x01	; 1
    3896:	86 e0       	ldi	r24, 0x06	; 6
    3898:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    389c:	61 e0       	ldi	r22, 0x01	; 1
    389e:	87 e0       	ldi	r24, 0x07	; 7
    38a0:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
DISPLAY_NUMBER1():
    38a4:	60 e0       	ldi	r22, 0x00	; 0
    38a6:	83 e1       	ldi	r24, 0x13	; 19
    38a8:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    38ac:	20 91 a3 28 	lds	r18, 0x28A3	; 0x8028a3 <DOT1_0>
    38b0:	80 91 27 28 	lds	r24, 0x2827	; 0x802827 <count1>
    38b4:	90 91 28 28 	lds	r25, 0x2828	; 0x802828 <count1+0x1>
    38b8:	22 23       	and	r18, r18
    38ba:	31 f0       	breq	.+12     	; 0x38c8 <DISP_REFRESH()+0x6c>
    38bc:	e0 91 e4 28 	lds	r30, 0x28E4	; 0x8028e4 <digits1>
    38c0:	f0 91 e5 28 	lds	r31, 0x28E5	; 0x8028e5 <digits1+0x1>
    38c4:	00 97       	sbiw	r24, 0x00	; 0
    38c6:	c1 f0       	breq	.+48     	; 0x38f8 <DISP_REFRESH()+0x9c>
    38c8:	20 91 a2 28 	lds	r18, 0x28A2	; 0x8028a2 <DOT1_1>
    38cc:	22 23       	and	r18, r18
    38ce:	39 f0       	breq	.+14     	; 0x38de <DISP_REFRESH()+0x82>
    38d0:	e0 91 e6 28 	lds	r30, 0x28E6	; 0x8028e6 <digits1+0x2>
    38d4:	f0 91 e7 28 	lds	r31, 0x28E7	; 0x8028e7 <digits1+0x3>
    38d8:	81 30       	cpi	r24, 0x01	; 1
    38da:	91 05       	cpc	r25, r1
    38dc:	69 f0       	breq	.+26     	; 0x38f8 <DISP_REFRESH()+0x9c>
    38de:	20 91 a4 28 	lds	r18, 0x28A4	; 0x8028a4 <DOT1_2>
    38e2:	22 23       	and	r18, r18
    38e4:	09 f4       	brne	.+2      	; 0x38e8 <DISP_REFRESH()+0x8c>
    38e6:	83 c0       	rjmp	.+262    	; 0x39ee <DISP_REFRESH()+0x192>
    38e8:	82 30       	cpi	r24, 0x02	; 2
    38ea:	91 05       	cpc	r25, r1
    38ec:	09 f0       	breq	.+2      	; 0x38f0 <DISP_REFRESH()+0x94>
    38ee:	7f c0       	rjmp	.+254    	; 0x39ee <DISP_REFRESH()+0x192>
    38f0:	e0 91 e8 28 	lds	r30, 0x28E8	; 0x8028e8 <digits1+0x4>
    38f4:	f0 91 e9 28 	lds	r31, 0x28E9	; 0x8028e9 <digits1+0x5>
    38f8:	e6 53       	subi	r30, 0x36	; 54
    38fa:	f6 45       	sbci	r31, 0x56	; 86
    38fc:	40 81       	ld	r20, Z
    38fe:	41 60       	ori	r20, 0x01	; 1
    3900:	64 e1       	ldi	r22, 0x14	; 20
    3902:	82 e1       	ldi	r24, 0x12	; 18
    3904:	81 df       	rcall	.-254    	; 0x3808 <shiftOut.constprop.5>
    3906:	c0 91 27 28 	lds	r28, 0x2827	; 0x802827 <count1>
    390a:	d0 91 28 28 	lds	r29, 0x2828	; 0x802828 <count1+0x1>
    390e:	fe 01       	movw	r30, r28
    3910:	ee 0f       	add	r30, r30
    3912:	ff 1f       	adc	r31, r31
    3914:	ea 54       	subi	r30, 0x4A	; 74
    3916:	f6 45       	sbci	r31, 0x56	; 86
    3918:	60 e0       	ldi	r22, 0x00	; 0
    391a:	80 81       	ld	r24, Z
    391c:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3920:	61 e0       	ldi	r22, 0x01	; 1
    3922:	83 e1       	ldi	r24, 0x13	; 19
    3924:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3928:	21 96       	adiw	r28, 0x01	; 1
    392a:	c5 30       	cpi	r28, 0x05	; 5
    392c:	d1 05       	cpc	r29, r1
    392e:	0c f0       	brlt	.+2      	; 0x3932 <DISP_REFRESH()+0xd6>
    3930:	6a c0       	rjmp	.+212    	; 0x3a06 <DISP_REFRESH()+0x1aa>
    3932:	c0 93 27 28 	sts	0x2827, r28	; 0x802827 <count1>
    3936:	d0 93 28 28 	sts	0x2828, r29	; 0x802828 <count1+0x1>
cathode_high2():
    393a:	61 e0       	ldi	r22, 0x01	; 1
    393c:	88 e0       	ldi	r24, 0x08	; 8
    393e:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3942:	61 e0       	ldi	r22, 0x01	; 1
    3944:	89 e0       	ldi	r24, 0x09	; 9
    3946:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    394a:	61 e0       	ldi	r22, 0x01	; 1
    394c:	8a e0       	ldi	r24, 0x0A	; 10
    394e:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3952:	61 e0       	ldi	r22, 0x01	; 1
    3954:	8b e0       	ldi	r24, 0x0B	; 11
    3956:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
DISPLAY_NUMBER2():
    395a:	60 e0       	ldi	r22, 0x00	; 0
    395c:	80 e2       	ldi	r24, 0x20	; 32
    395e:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    3962:	c0 91 29 28 	lds	r28, 0x2829	; 0x802829 <count2>
    3966:	d0 91 2a 28 	lds	r29, 0x282A	; 0x80282a <count2+0x1>
    396a:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <DOT2_0>
    396e:	8e 01       	movw	r16, r28
    3970:	00 0f       	add	r16, r16
    3972:	11 1f       	adc	r17, r17
    3974:	88 23       	and	r24, r24
    3976:	31 f0       	breq	.+12     	; 0x3984 <DISP_REFRESH()+0x128>
    3978:	e0 91 dc 28 	lds	r30, 0x28DC	; 0x8028dc <digits2>
    397c:	f0 91 dd 28 	lds	r31, 0x28DD	; 0x8028dd <digits2+0x1>
    3980:	20 97       	sbiw	r28, 0x00	; 0
    3982:	b1 f0       	breq	.+44     	; 0x39b0 <DISP_REFRESH()+0x154>
    3984:	80 91 88 28 	lds	r24, 0x2888	; 0x802888 <DOT2_1>
    3988:	88 23       	and	r24, r24
    398a:	39 f0       	breq	.+14     	; 0x399a <DISP_REFRESH()+0x13e>
    398c:	e0 91 de 28 	lds	r30, 0x28DE	; 0x8028de <digits2+0x2>
    3990:	f0 91 df 28 	lds	r31, 0x28DF	; 0x8028df <digits2+0x3>
    3994:	c1 30       	cpi	r28, 0x01	; 1
    3996:	d1 05       	cpc	r29, r1
    3998:	59 f0       	breq	.+22     	; 0x39b0 <DISP_REFRESH()+0x154>
    399a:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <DOT2_2>
    399e:	88 23       	and	r24, r24
    39a0:	b9 f1       	breq	.+110    	; 0x3a10 <DISP_REFRESH()+0x1b4>
    39a2:	c2 30       	cpi	r28, 0x02	; 2
    39a4:	d1 05       	cpc	r29, r1
    39a6:	a1 f5       	brne	.+104    	; 0x3a10 <DISP_REFRESH()+0x1b4>
    39a8:	e0 91 e0 28 	lds	r30, 0x28E0	; 0x8028e0 <digits2+0x4>
    39ac:	f0 91 e1 28 	lds	r31, 0x28E1	; 0x8028e1 <digits2+0x5>
    39b0:	e6 53       	subi	r30, 0x36	; 54
    39b2:	f6 45       	sbci	r31, 0x56	; 86
    39b4:	40 81       	ld	r20, Z
    39b6:	41 60       	ori	r20, 0x01	; 1
    39b8:	6e e1       	ldi	r22, 0x1E	; 30
    39ba:	8f e1       	ldi	r24, 0x1F	; 31
    39bc:	25 df       	rcall	.-438    	; 0x3808 <shiftOut.constprop.5>
    39be:	f8 01       	movw	r30, r16
    39c0:	e0 54       	subi	r30, 0x40	; 64
    39c2:	f6 45       	sbci	r31, 0x56	; 86
    39c4:	60 e0       	ldi	r22, 0x00	; 0
    39c6:	80 81       	ld	r24, Z
    39c8:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    39cc:	61 e0       	ldi	r22, 0x01	; 1
    39ce:	80 e2       	ldi	r24, 0x20	; 32
    39d0:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    39d4:	21 96       	adiw	r28, 0x01	; 1
    39d6:	c5 30       	cpi	r28, 0x05	; 5
    39d8:	d1 05       	cpc	r29, r1
    39da:	24 f5       	brge	.+72     	; 0x3a24 <DISP_REFRESH()+0x1c8>
    39dc:	c0 93 29 28 	sts	0x2829, r28	; 0x802829 <count2>
    39e0:	d0 93 2a 28 	sts	0x282A, r29	; 0x80282a <count2+0x1>
DISP_REFRESH():
    39e4:	df 91       	pop	r29
    39e6:	cf 91       	pop	r28
    39e8:	1f 91       	pop	r17
    39ea:	0f 91       	pop	r16
    39ec:	08 95       	ret
DISPLAY_NUMBER1():
    39ee:	88 0f       	add	r24, r24
    39f0:	99 1f       	adc	r25, r25
    39f2:	fc 01       	movw	r30, r24
    39f4:	ec 51       	subi	r30, 0x1C	; 28
    39f6:	f7 4d       	sbci	r31, 0xD7	; 215
    39f8:	01 90       	ld	r0, Z+
    39fa:	f0 81       	ld	r31, Z
    39fc:	e0 2d       	mov	r30, r0
    39fe:	e6 53       	subi	r30, 0x36	; 54
    3a00:	f6 45       	sbci	r31, 0x56	; 86
    3a02:	40 81       	ld	r20, Z
    3a04:	7d cf       	rjmp	.-262    	; 0x3900 <DISP_REFRESH()+0xa4>
    3a06:	10 92 27 28 	sts	0x2827, r1	; 0x802827 <count1>
    3a0a:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <count1+0x1>
    3a0e:	95 cf       	rjmp	.-214    	; 0x393a <DISP_REFRESH()+0xde>
DISPLAY_NUMBER2():
    3a10:	f8 01       	movw	r30, r16
    3a12:	e4 52       	subi	r30, 0x24	; 36
    3a14:	f7 4d       	sbci	r31, 0xD7	; 215
    3a16:	01 90       	ld	r0, Z+
    3a18:	f0 81       	ld	r31, Z
    3a1a:	e0 2d       	mov	r30, r0
    3a1c:	e6 53       	subi	r30, 0x36	; 54
    3a1e:	f6 45       	sbci	r31, 0x56	; 86
    3a20:	40 81       	ld	r20, Z
    3a22:	ca cf       	rjmp	.-108    	; 0x39b8 <DISP_REFRESH()+0x15c>
    3a24:	10 92 29 28 	sts	0x2829, r1	; 0x802829 <count2>
    3a28:	10 92 2a 28 	sts	0x282A, r1	; 0x80282a <count2+0x1>
    3a2c:	10 92 27 28 	sts	0x2827, r1	; 0x802827 <count1>
    3a30:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <count1+0x1>
    3a34:	d7 cf       	rjmp	.-82     	; 0x39e4 <DISP_REFRESH()+0x188>

00003a36 <__vector_25>:
__vector_25():
    3a36:	1f 92       	push	r1
    3a38:	0f 92       	push	r0
    3a3a:	0f b6       	in	r0, 0x3f	; 63
    3a3c:	0f 92       	push	r0
    3a3e:	11 24       	eor	r1, r1
    3a40:	8f 93       	push	r24
    3a42:	9f 93       	push	r25
    3a44:	af 93       	push	r26
    3a46:	bf 93       	push	r27
    3a48:	80 91 2b 28 	lds	r24, 0x282B	; 0x80282b <timer_millis>
    3a4c:	90 91 2c 28 	lds	r25, 0x282C	; 0x80282c <timer_millis+0x1>
    3a50:	a0 91 2d 28 	lds	r26, 0x282D	; 0x80282d <timer_millis+0x2>
    3a54:	b0 91 2e 28 	lds	r27, 0x282E	; 0x80282e <timer_millis+0x3>
    3a58:	01 96       	adiw	r24, 0x01	; 1
    3a5a:	a1 1d       	adc	r26, r1
    3a5c:	b1 1d       	adc	r27, r1
    3a5e:	80 93 2b 28 	sts	0x282B, r24	; 0x80282b <timer_millis>
    3a62:	90 93 2c 28 	sts	0x282C, r25	; 0x80282c <timer_millis+0x1>
    3a66:	a0 93 2d 28 	sts	0x282D, r26	; 0x80282d <timer_millis+0x2>
    3a6a:	b0 93 2e 28 	sts	0x282E, r27	; 0x80282e <timer_millis+0x3>
    3a6e:	81 e0       	ldi	r24, 0x01	; 1
    3a70:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    3a74:	bf 91       	pop	r27
    3a76:	af 91       	pop	r26
    3a78:	9f 91       	pop	r25
    3a7a:	8f 91       	pop	r24
    3a7c:	0f 90       	pop	r0
    3a7e:	0f be       	out	0x3f, r0	; 63
    3a80:	0f 90       	pop	r0
    3a82:	1f 90       	pop	r1
    3a84:	18 95       	reti

00003a86 <__vector_7>:
__vector_7():
    3a86:	1f 92       	push	r1
    3a88:	0f 92       	push	r0
    3a8a:	0f b6       	in	r0, 0x3f	; 63
    3a8c:	0f 92       	push	r0
    3a8e:	11 24       	eor	r1, r1
    3a90:	2f 93       	push	r18
    3a92:	3f 93       	push	r19
    3a94:	4f 93       	push	r20
    3a96:	5f 93       	push	r21
    3a98:	6f 93       	push	r22
    3a9a:	7f 93       	push	r23
    3a9c:	8f 93       	push	r24
    3a9e:	9f 93       	push	r25
    3aa0:	af 93       	push	r26
    3aa2:	bf 93       	push	r27
    3aa4:	ef 93       	push	r30
    3aa6:	ff 93       	push	r31
TICKER_UPDATE():
    3aa8:	8b ed       	ldi	r24, 0xDB	; 219
    3aaa:	9a e2       	ldi	r25, 0x2A	; 42
    3aac:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
PID_Tick_Update():
    3ab0:	8e e1       	ldi	r24, 0x1E	; 30
    3ab2:	9a e2       	ldi	r25, 0x2A	; 42
    3ab4:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
Rtd_Temp_Update():
    3ab8:	84 e5       	ldi	r24, 0x54	; 84
    3aba:	9a e2       	ldi	r25, 0x2A	; 42
    3abc:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
TICKER_UPDATE():
    3ac0:	80 ec       	ldi	r24, 0xC0	; 192
    3ac2:	9a e2       	ldi	r25, 0x2A	; 42
    3ac4:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    3ac8:	85 ea       	ldi	r24, 0xA5	; 165
    3aca:	9a e2       	ldi	r25, 0x2A	; 42
    3acc:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    3ad0:	8a e8       	ldi	r24, 0x8A	; 138
    3ad2:	9a e2       	ldi	r25, 0x2A	; 42
    3ad4:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    3ad8:	8f e6       	ldi	r24, 0x6F	; 111
    3ada:	9a e2       	ldi	r25, 0x2A	; 42
    3adc:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
__vector_7():
    3ae0:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    3ae4:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    3ae8:	01 96       	adiw	r24, 0x01	; 1
    3aea:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    3aee:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
TIME_CAL():
    3af2:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    3af6:	88 23       	and	r24, r24
    3af8:	81 f1       	breq	.+96     	; 0x3b5a <__vector_7+0xd4>
    3afa:	80 91 10 28 	lds	r24, 0x2810	; 0x802810 <__data_end>
    3afe:	90 91 11 28 	lds	r25, 0x2811	; 0x802811 <__data_end+0x1>
    3b02:	01 96       	adiw	r24, 0x01	; 1
    3b04:	80 93 10 28 	sts	0x2810, r24	; 0x802810 <__data_end>
    3b08:	90 93 11 28 	sts	0x2811, r25	; 0x802811 <__data_end+0x1>
    3b0c:	80 3b       	cpi	r24, 0xB0	; 176
    3b0e:	9e 40       	sbci	r25, 0x0E	; 14
    3b10:	21 f5       	brne	.+72     	; 0x3b5a <__vector_7+0xd4>
    3b12:	80 91 48 28 	lds	r24, 0x2848	; 0x802848 <actualRunMin>
    3b16:	90 91 49 28 	lds	r25, 0x2849	; 0x802849 <actualRunMin+0x1>
    3b1a:	a0 91 4a 28 	lds	r26, 0x284A	; 0x80284a <actualRunMin+0x2>
    3b1e:	b0 91 4b 28 	lds	r27, 0x284B	; 0x80284b <actualRunMin+0x3>
    3b22:	01 96       	adiw	r24, 0x01	; 1
    3b24:	a1 1d       	adc	r26, r1
    3b26:	b1 1d       	adc	r27, r1
    3b28:	80 93 48 28 	sts	0x2848, r24	; 0x802848 <actualRunMin>
    3b2c:	90 93 49 28 	sts	0x2849, r25	; 0x802849 <actualRunMin+0x1>
    3b30:	a0 93 4a 28 	sts	0x284A, r26	; 0x80284a <actualRunMin+0x2>
    3b34:	b0 93 4b 28 	sts	0x284B, r27	; 0x80284b <actualRunMin+0x3>
    3b38:	80 91 84 28 	lds	r24, 0x2884	; 0x802884 <SET_MIN>
    3b3c:	90 91 85 28 	lds	r25, 0x2885	; 0x802885 <SET_MIN+0x1>
    3b40:	01 97       	sbiw	r24, 0x01	; 1
    3b42:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <SET_MIN>
    3b46:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <SET_MIN+0x1>
    3b4a:	10 92 10 28 	sts	0x2810, r1	; 0x802810 <__data_end>
    3b4e:	10 92 11 28 	sts	0x2811, r1	; 0x802811 <__data_end+0x1>
    3b52:	89 2b       	or	r24, r25
    3b54:	11 f4       	brne	.+4      	; 0x3b5a <__vector_7+0xd4>
    3b56:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <COUNTDOWN_START>
__vector_7():
    3b5a:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    3b5e:	88 23       	and	r24, r24
    3b60:	79 f0       	breq	.+30     	; 0x3b80 <__vector_7+0xfa>
    3b62:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    3b66:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    3b6a:	42 97       	sbiw	r24, 0x12	; 18
    3b6c:	49 f4       	brne	.+18     	; 0x3b80 <__vector_7+0xfa>
    3b6e:	80 91 2f 28 	lds	r24, 0x282F	; 0x80282f <currentMillis>
    3b72:	90 91 30 28 	lds	r25, 0x2830	; 0x802830 <currentMillis+0x1>
    3b76:	01 96       	adiw	r24, 0x01	; 1
    3b78:	80 93 2f 28 	sts	0x282F, r24	; 0x80282f <currentMillis>
    3b7c:	90 93 30 28 	sts	0x2830, r25	; 0x802830 <currentMillis+0x1>
    3b80:	81 e0       	ldi	r24, 0x01	; 1
    3b82:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    3b86:	ff 91       	pop	r31
    3b88:	ef 91       	pop	r30
    3b8a:	bf 91       	pop	r27
    3b8c:	af 91       	pop	r26
    3b8e:	9f 91       	pop	r25
    3b90:	8f 91       	pop	r24
    3b92:	7f 91       	pop	r23
    3b94:	6f 91       	pop	r22
    3b96:	5f 91       	pop	r21
    3b98:	4f 91       	pop	r20
    3b9a:	3f 91       	pop	r19
    3b9c:	2f 91       	pop	r18
    3b9e:	0f 90       	pop	r0
    3ba0:	0f be       	out	0x3f, r0	; 63
    3ba2:	0f 90       	pop	r0
    3ba4:	1f 90       	pop	r1
    3ba6:	18 95       	reti

00003ba8 <global constructors keyed to 65535_0_Butn.cpp.o.3707>:
_GLOBAL__I_65535_0_Butn.cpp.o.3707():
    3ba8:	4f 92       	push	r4
    3baa:	5f 92       	push	r5
    3bac:	6f 92       	push	r6
    3bae:	7f 92       	push	r7
    3bb0:	8f 92       	push	r8
    3bb2:	9f 92       	push	r9
    3bb4:	af 92       	push	r10
    3bb6:	bf 92       	push	r11
    3bb8:	cf 92       	push	r12
    3bba:	df 92       	push	r13
    3bbc:	ef 92       	push	r14
    3bbe:	ff 92       	push	r15
    3bc0:	82 e0       	ldi	r24, 0x02	; 2
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	80 93 ff 2a 	sts	0x2AFF, r24	; 0x802aff <DISP+0x9>
    3bc8:	90 93 00 2b 	sts	0x2B00, r25	; 0x802b00 <DISP+0xa>
    3bcc:	80 e8       	ldi	r24, 0x80	; 128
    3bce:	9c e0       	ldi	r25, 0x0C	; 12
    3bd0:	a0 e0       	ldi	r26, 0x00	; 0
    3bd2:	b0 e0       	ldi	r27, 0x00	; 0
    3bd4:	80 93 f7 2a 	sts	0x2AF7, r24	; 0x802af7 <DISP+0x1>
    3bd8:	90 93 f8 2a 	sts	0x2AF8, r25	; 0x802af8 <DISP+0x2>
    3bdc:	a0 93 f9 2a 	sts	0x2AF9, r26	; 0x802af9 <DISP+0x3>
    3be0:	b0 93 fa 2a 	sts	0x2AFA, r27	; 0x802afa <DISP+0x4>
    3be4:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <DISP+0x5>
    3be8:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <DISP+0x6>
    3bec:	10 92 fd 2a 	sts	0x2AFD, r1	; 0x802afd <DISP+0x7>
    3bf0:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <DISP+0x8>
    3bf4:	8e e2       	ldi	r24, 0x2E	; 46
    3bf6:	9c e1       	ldi	r25, 0x1C	; 28
    3bf8:	80 93 07 2b 	sts	0x2B07, r24	; 0x802b07 <DISP+0x11>
    3bfc:	90 93 08 2b 	sts	0x2B08, r25	; 0x802b08 <DISP+0x12>
    3c00:	10 92 f6 2a 	sts	0x2AF6, r1	; 0x802af6 <DISP>
    3c04:	10 92 09 2b 	sts	0x2B09, r1	; 0x802b09 <DISP+0x13>
    3c08:	10 92 0a 2b 	sts	0x2B0A, r1	; 0x802b0a <DISP+0x14>
    3c0c:	10 92 0b 2b 	sts	0x2B0B, r1	; 0x802b0b <DISP+0x15>
    3c10:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <DISP+0x16>
    3c14:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <DISP+0xb>
    3c18:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <DISP+0xc>
    3c1c:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <DISP+0xd>
    3c20:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <DISP+0xe>
    3c24:	10 92 e4 2a 	sts	0x2AE4, r1	; 0x802ae4 <BUZZ+0x9>
    3c28:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <BUZZ+0xa>
    3c2c:	40 ea       	ldi	r20, 0xA0	; 160
    3c2e:	56 e8       	ldi	r21, 0x86	; 134
    3c30:	61 e0       	ldi	r22, 0x01	; 1
    3c32:	70 e0       	ldi	r23, 0x00	; 0
    3c34:	40 93 dc 2a 	sts	0x2ADC, r20	; 0x802adc <BUZZ+0x1>
    3c38:	50 93 dd 2a 	sts	0x2ADD, r21	; 0x802add <BUZZ+0x2>
    3c3c:	60 93 de 2a 	sts	0x2ADE, r22	; 0x802ade <BUZZ+0x3>
    3c40:	70 93 df 2a 	sts	0x2ADF, r23	; 0x802adf <BUZZ+0x4>
    3c44:	c1 2c       	mov	r12, r1
    3c46:	d1 2c       	mov	r13, r1
    3c48:	76 01       	movw	r14, r12
    3c4a:	c3 94       	inc	r12
    3c4c:	c0 92 e0 2a 	sts	0x2AE0, r12	; 0x802ae0 <BUZZ+0x5>
    3c50:	d0 92 e1 2a 	sts	0x2AE1, r13	; 0x802ae1 <BUZZ+0x6>
    3c54:	e0 92 e2 2a 	sts	0x2AE2, r14	; 0x802ae2 <BUZZ+0x7>
    3c58:	f0 92 e3 2a 	sts	0x2AE3, r15	; 0x802ae3 <BUZZ+0x8>
    3c5c:	86 e0       	ldi	r24, 0x06	; 6
    3c5e:	9b e0       	ldi	r25, 0x0B	; 11
    3c60:	80 93 ec 2a 	sts	0x2AEC, r24	; 0x802aec <BUZZ+0x11>
    3c64:	90 93 ed 2a 	sts	0x2AED, r25	; 0x802aed <BUZZ+0x12>
    3c68:	10 92 db 2a 	sts	0x2ADB, r1	; 0x802adb <BUZZ>
    3c6c:	10 92 ee 2a 	sts	0x2AEE, r1	; 0x802aee <BUZZ+0x13>
    3c70:	10 92 ef 2a 	sts	0x2AEF, r1	; 0x802aef <BUZZ+0x14>
    3c74:	10 92 f0 2a 	sts	0x2AF0, r1	; 0x802af0 <BUZZ+0x15>
    3c78:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <BUZZ+0x16>
    3c7c:	10 92 e6 2a 	sts	0x2AE6, r1	; 0x802ae6 <BUZZ+0xb>
    3c80:	10 92 e7 2a 	sts	0x2AE7, r1	; 0x802ae7 <BUZZ+0xc>
    3c84:	10 92 e8 2a 	sts	0x2AE8, r1	; 0x802ae8 <BUZZ+0xd>
    3c88:	10 92 e9 2a 	sts	0x2AE9, r1	; 0x802ae9 <BUZZ+0xe>
    3c8c:	10 92 c9 2a 	sts	0x2AC9, r1	; 0x802ac9 <BUZZ_TICK1+0x9>
    3c90:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <BUZZ_TICK1+0xa>
    3c94:	80 e8       	ldi	r24, 0x80	; 128
    3c96:	94 e8       	ldi	r25, 0x84	; 132
    3c98:	ae e1       	ldi	r26, 0x1E	; 30
    3c9a:	b0 e0       	ldi	r27, 0x00	; 0
    3c9c:	80 93 c1 2a 	sts	0x2AC1, r24	; 0x802ac1 <BUZZ_TICK1+0x1>
    3ca0:	90 93 c2 2a 	sts	0x2AC2, r25	; 0x802ac2 <BUZZ_TICK1+0x2>
    3ca4:	a0 93 c3 2a 	sts	0x2AC3, r26	; 0x802ac3 <BUZZ_TICK1+0x3>
    3ca8:	b0 93 c4 2a 	sts	0x2AC4, r27	; 0x802ac4 <BUZZ_TICK1+0x4>
    3cac:	10 92 c5 2a 	sts	0x2AC5, r1	; 0x802ac5 <BUZZ_TICK1+0x5>
    3cb0:	10 92 c6 2a 	sts	0x2AC6, r1	; 0x802ac6 <BUZZ_TICK1+0x6>
    3cb4:	10 92 c7 2a 	sts	0x2AC7, r1	; 0x802ac7 <BUZZ_TICK1+0x7>
    3cb8:	10 92 c8 2a 	sts	0x2AC8, r1	; 0x802ac8 <BUZZ_TICK1+0x8>
    3cbc:	22 e1       	ldi	r18, 0x12	; 18
    3cbe:	3b e0       	ldi	r19, 0x0B	; 11
    3cc0:	20 93 d1 2a 	sts	0x2AD1, r18	; 0x802ad1 <BUZZ_TICK1+0x11>
    3cc4:	30 93 d2 2a 	sts	0x2AD2, r19	; 0x802ad2 <BUZZ_TICK1+0x12>
    3cc8:	10 92 c0 2a 	sts	0x2AC0, r1	; 0x802ac0 <BUZZ_TICK1>
    3ccc:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <BUZZ_TICK1+0x13>
    3cd0:	10 92 d4 2a 	sts	0x2AD4, r1	; 0x802ad4 <BUZZ_TICK1+0x14>
    3cd4:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <BUZZ_TICK1+0x15>
    3cd8:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <BUZZ_TICK1+0x16>
    3cdc:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <BUZZ_TICK1+0xb>
    3ce0:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <BUZZ_TICK1+0xc>
    3ce4:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <BUZZ_TICK1+0xd>
    3ce8:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <BUZZ_TICK1+0xe>
    3cec:	10 92 ae 2a 	sts	0x2AAE, r1	; 0x802aae <BUZZ_TICK2+0x9>
    3cf0:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <BUZZ_TICK2+0xa>
    3cf4:	20 e4       	ldi	r18, 0x40	; 64
    3cf6:	82 2e       	mov	r8, r18
    3cf8:	22 e4       	ldi	r18, 0x42	; 66
    3cfa:	92 2e       	mov	r9, r18
    3cfc:	2f e0       	ldi	r18, 0x0F	; 15
    3cfe:	a2 2e       	mov	r10, r18
    3d00:	b1 2c       	mov	r11, r1
    3d02:	80 92 a6 2a 	sts	0x2AA6, r8	; 0x802aa6 <BUZZ_TICK2+0x1>
    3d06:	90 92 a7 2a 	sts	0x2AA7, r9	; 0x802aa7 <BUZZ_TICK2+0x2>
    3d0a:	a0 92 a8 2a 	sts	0x2AA8, r10	; 0x802aa8 <BUZZ_TICK2+0x3>
    3d0e:	b0 92 a9 2a 	sts	0x2AA9, r11	; 0x802aa9 <BUZZ_TICK2+0x4>
    3d12:	c0 92 aa 2a 	sts	0x2AAA, r12	; 0x802aaa <BUZZ_TICK2+0x5>
    3d16:	d0 92 ab 2a 	sts	0x2AAB, r13	; 0x802aab <BUZZ_TICK2+0x6>
    3d1a:	e0 92 ac 2a 	sts	0x2AAC, r14	; 0x802aac <BUZZ_TICK2+0x7>
    3d1e:	f0 92 ad 2a 	sts	0x2AAD, r15	; 0x802aad <BUZZ_TICK2+0x8>
    3d22:	28 e1       	ldi	r18, 0x18	; 24
    3d24:	3b e0       	ldi	r19, 0x0B	; 11
    3d26:	20 93 b6 2a 	sts	0x2AB6, r18	; 0x802ab6 <BUZZ_TICK2+0x11>
    3d2a:	30 93 b7 2a 	sts	0x2AB7, r19	; 0x802ab7 <BUZZ_TICK2+0x12>
    3d2e:	10 92 a5 2a 	sts	0x2AA5, r1	; 0x802aa5 <BUZZ_TICK2>
    3d32:	10 92 b8 2a 	sts	0x2AB8, r1	; 0x802ab8 <BUZZ_TICK2+0x13>
    3d36:	10 92 b9 2a 	sts	0x2AB9, r1	; 0x802ab9 <BUZZ_TICK2+0x14>
    3d3a:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <BUZZ_TICK2+0x15>
    3d3e:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <BUZZ_TICK2+0x16>
    3d42:	10 92 b0 2a 	sts	0x2AB0, r1	; 0x802ab0 <BUZZ_TICK2+0xb>
    3d46:	10 92 b1 2a 	sts	0x2AB1, r1	; 0x802ab1 <BUZZ_TICK2+0xc>
    3d4a:	10 92 b2 2a 	sts	0x2AB2, r1	; 0x802ab2 <BUZZ_TICK2+0xd>
    3d4e:	10 92 b3 2a 	sts	0x2AB3, r1	; 0x802ab3 <BUZZ_TICK2+0xe>
    3d52:	10 92 93 2a 	sts	0x2A93, r1	; 0x802a93 <Blink_LED_ON+0x9>
    3d56:	10 92 94 2a 	sts	0x2A94, r1	; 0x802a94 <Blink_LED_ON+0xa>
    3d5a:	30 ee       	ldi	r19, 0xE0	; 224
    3d5c:	c3 2e       	mov	r12, r19
    3d5e:	33 e9       	ldi	r19, 0x93	; 147
    3d60:	d3 2e       	mov	r13, r19
    3d62:	34 e0       	ldi	r19, 0x04	; 4
    3d64:	e3 2e       	mov	r14, r19
    3d66:	f1 2c       	mov	r15, r1
    3d68:	c0 92 8b 2a 	sts	0x2A8B, r12	; 0x802a8b <Blink_LED_ON+0x1>
    3d6c:	d0 92 8c 2a 	sts	0x2A8C, r13	; 0x802a8c <Blink_LED_ON+0x2>
    3d70:	e0 92 8d 2a 	sts	0x2A8D, r14	; 0x802a8d <Blink_LED_ON+0x3>
    3d74:	f0 92 8e 2a 	sts	0x2A8E, r15	; 0x802a8e <Blink_LED_ON+0x4>
    3d78:	10 92 8f 2a 	sts	0x2A8F, r1	; 0x802a8f <Blink_LED_ON+0x5>
    3d7c:	10 92 90 2a 	sts	0x2A90, r1	; 0x802a90 <Blink_LED_ON+0x6>
    3d80:	10 92 91 2a 	sts	0x2A91, r1	; 0x802a91 <Blink_LED_ON+0x7>
    3d84:	10 92 92 2a 	sts	0x2A92, r1	; 0x802a92 <Blink_LED_ON+0x8>
    3d88:	28 e3       	ldi	r18, 0x38	; 56
    3d8a:	3b e0       	ldi	r19, 0x0B	; 11
    3d8c:	20 93 9b 2a 	sts	0x2A9B, r18	; 0x802a9b <Blink_LED_ON+0x11>
    3d90:	30 93 9c 2a 	sts	0x2A9C, r19	; 0x802a9c <Blink_LED_ON+0x12>
    3d94:	10 92 8a 2a 	sts	0x2A8A, r1	; 0x802a8a <Blink_LED_ON>
    3d98:	10 92 9d 2a 	sts	0x2A9D, r1	; 0x802a9d <Blink_LED_ON+0x13>
    3d9c:	10 92 9e 2a 	sts	0x2A9E, r1	; 0x802a9e <Blink_LED_ON+0x14>
    3da0:	10 92 9f 2a 	sts	0x2A9F, r1	; 0x802a9f <Blink_LED_ON+0x15>
    3da4:	10 92 a0 2a 	sts	0x2AA0, r1	; 0x802aa0 <Blink_LED_ON+0x16>
    3da8:	10 92 95 2a 	sts	0x2A95, r1	; 0x802a95 <Blink_LED_ON+0xb>
    3dac:	10 92 96 2a 	sts	0x2A96, r1	; 0x802a96 <Blink_LED_ON+0xc>
    3db0:	10 92 97 2a 	sts	0x2A97, r1	; 0x802a97 <Blink_LED_ON+0xd>
    3db4:	10 92 98 2a 	sts	0x2A98, r1	; 0x802a98 <Blink_LED_ON+0xe>
    3db8:	10 92 78 2a 	sts	0x2A78, r1	; 0x802a78 <Blink_LED_OFF+0x9>
    3dbc:	10 92 79 2a 	sts	0x2A79, r1	; 0x802a79 <Blink_LED_OFF+0xa>
    3dc0:	e0 ec       	ldi	r30, 0xC0	; 192
    3dc2:	ce 2e       	mov	r12, r30
    3dc4:	e7 e2       	ldi	r30, 0x27	; 39
    3dc6:	de 2e       	mov	r13, r30
    3dc8:	e9 e0       	ldi	r30, 0x09	; 9
    3dca:	ee 2e       	mov	r14, r30
    3dcc:	f1 2c       	mov	r15, r1
    3dce:	c0 92 70 2a 	sts	0x2A70, r12	; 0x802a70 <Blink_LED_OFF+0x1>
    3dd2:	d0 92 71 2a 	sts	0x2A71, r13	; 0x802a71 <Blink_LED_OFF+0x2>
    3dd6:	e0 92 72 2a 	sts	0x2A72, r14	; 0x802a72 <Blink_LED_OFF+0x3>
    3dda:	f0 92 73 2a 	sts	0x2A73, r15	; 0x802a73 <Blink_LED_OFF+0x4>
    3dde:	10 92 74 2a 	sts	0x2A74, r1	; 0x802a74 <Blink_LED_OFF+0x5>
    3de2:	10 92 75 2a 	sts	0x2A75, r1	; 0x802a75 <Blink_LED_OFF+0x6>
    3de6:	10 92 76 2a 	sts	0x2A76, r1	; 0x802a76 <Blink_LED_OFF+0x7>
    3dea:	10 92 77 2a 	sts	0x2A77, r1	; 0x802a77 <Blink_LED_OFF+0x8>
    3dee:	22 e3       	ldi	r18, 0x32	; 50
    3df0:	3b e0       	ldi	r19, 0x0B	; 11
    3df2:	20 93 80 2a 	sts	0x2A80, r18	; 0x802a80 <Blink_LED_OFF+0x11>
    3df6:	30 93 81 2a 	sts	0x2A81, r19	; 0x802a81 <Blink_LED_OFF+0x12>
    3dfa:	10 92 6f 2a 	sts	0x2A6F, r1	; 0x802a6f <Blink_LED_OFF>
    3dfe:	10 92 82 2a 	sts	0x2A82, r1	; 0x802a82 <Blink_LED_OFF+0x13>
    3e02:	10 92 83 2a 	sts	0x2A83, r1	; 0x802a83 <Blink_LED_OFF+0x14>
    3e06:	10 92 84 2a 	sts	0x2A84, r1	; 0x802a84 <Blink_LED_OFF+0x15>
    3e0a:	10 92 85 2a 	sts	0x2A85, r1	; 0x802a85 <Blink_LED_OFF+0x16>
    3e0e:	10 92 7a 2a 	sts	0x2A7A, r1	; 0x802a7a <Blink_LED_OFF+0xb>
    3e12:	10 92 7b 2a 	sts	0x2A7B, r1	; 0x802a7b <Blink_LED_OFF+0xc>
    3e16:	10 92 7c 2a 	sts	0x2A7C, r1	; 0x802a7c <Blink_LED_OFF+0xd>
    3e1a:	10 92 7d 2a 	sts	0x2A7D, r1	; 0x802a7d <Blink_LED_OFF+0xe>
    3e1e:	10 92 5d 2a 	sts	0x2A5D, r1	; 0x802a5d <TEMP_UPDATE+0x9>
    3e22:	10 92 5e 2a 	sts	0x2A5E, r1	; 0x802a5e <TEMP_UPDATE+0xa>
    3e26:	40 93 55 2a 	sts	0x2A55, r20	; 0x802a55 <TEMP_UPDATE+0x1>
    3e2a:	50 93 56 2a 	sts	0x2A56, r21	; 0x802a56 <TEMP_UPDATE+0x2>
    3e2e:	60 93 57 2a 	sts	0x2A57, r22	; 0x802a57 <TEMP_UPDATE+0x3>
    3e32:	70 93 58 2a 	sts	0x2A58, r23	; 0x802a58 <TEMP_UPDATE+0x4>
    3e36:	10 92 59 2a 	sts	0x2A59, r1	; 0x802a59 <TEMP_UPDATE+0x5>
    3e3a:	10 92 5a 2a 	sts	0x2A5A, r1	; 0x802a5a <TEMP_UPDATE+0x6>
    3e3e:	10 92 5b 2a 	sts	0x2A5B, r1	; 0x802a5b <TEMP_UPDATE+0x7>
    3e42:	10 92 5c 2a 	sts	0x2A5C, r1	; 0x802a5c <TEMP_UPDATE+0x8>
    3e46:	21 e4       	ldi	r18, 0x41	; 65
    3e48:	3b e0       	ldi	r19, 0x0B	; 11
    3e4a:	20 93 65 2a 	sts	0x2A65, r18	; 0x802a65 <TEMP_UPDATE+0x11>
    3e4e:	30 93 66 2a 	sts	0x2A66, r19	; 0x802a66 <TEMP_UPDATE+0x12>
    3e52:	10 92 54 2a 	sts	0x2A54, r1	; 0x802a54 <TEMP_UPDATE>
    3e56:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <TEMP_UPDATE+0x13>
    3e5a:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <TEMP_UPDATE+0x14>
    3e5e:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <TEMP_UPDATE+0x15>
    3e62:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <TEMP_UPDATE+0x16>
    3e66:	10 92 5f 2a 	sts	0x2A5F, r1	; 0x802a5f <TEMP_UPDATE+0xb>
    3e6a:	10 92 60 2a 	sts	0x2A60, r1	; 0x802a60 <TEMP_UPDATE+0xc>
    3e6e:	10 92 61 2a 	sts	0x2A61, r1	; 0x802a61 <TEMP_UPDATE+0xd>
    3e72:	10 92 62 2a 	sts	0x2A62, r1	; 0x802a62 <TEMP_UPDATE+0xe>
    3e76:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <Alter_Disp+0x9>
    3e7a:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <Alter_Disp+0xa>
    3e7e:	80 93 3a 2a 	sts	0x2A3A, r24	; 0x802a3a <Alter_Disp+0x1>
    3e82:	90 93 3b 2a 	sts	0x2A3B, r25	; 0x802a3b <Alter_Disp+0x2>
    3e86:	a0 93 3c 2a 	sts	0x2A3C, r26	; 0x802a3c <Alter_Disp+0x3>
    3e8a:	b0 93 3d 2a 	sts	0x2A3D, r27	; 0x802a3d <Alter_Disp+0x4>
    3e8e:	10 92 3e 2a 	sts	0x2A3E, r1	; 0x802a3e <Alter_Disp+0x5>
    3e92:	10 92 3f 2a 	sts	0x2A3F, r1	; 0x802a3f <Alter_Disp+0x6>
    3e96:	10 92 40 2a 	sts	0x2A40, r1	; 0x802a40 <Alter_Disp+0x7>
    3e9a:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <Alter_Disp+0x8>
    3e9e:	8d e7       	ldi	r24, 0x7D	; 125
    3ea0:	91 e0       	ldi	r25, 0x01	; 1
    3ea2:	80 93 4a 2a 	sts	0x2A4A, r24	; 0x802a4a <Alter_Disp+0x11>
    3ea6:	90 93 4b 2a 	sts	0x2A4B, r25	; 0x802a4b <Alter_Disp+0x12>
    3eaa:	10 92 39 2a 	sts	0x2A39, r1	; 0x802a39 <Alter_Disp>
    3eae:	10 92 4c 2a 	sts	0x2A4C, r1	; 0x802a4c <Alter_Disp+0x13>
    3eb2:	10 92 4d 2a 	sts	0x2A4D, r1	; 0x802a4d <Alter_Disp+0x14>
    3eb6:	10 92 4e 2a 	sts	0x2A4E, r1	; 0x802a4e <Alter_Disp+0x15>
    3eba:	10 92 4f 2a 	sts	0x2A4F, r1	; 0x802a4f <Alter_Disp+0x16>
    3ebe:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <Alter_Disp+0xb>
    3ec2:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <Alter_Disp+0xc>
    3ec6:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <Alter_Disp+0xd>
    3eca:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <Alter_Disp+0xe>
    3ece:	10 92 27 2a 	sts	0x2A27, r1	; 0x802a27 <PID_EXE+0x9>
    3ed2:	10 92 28 2a 	sts	0x2A28, r1	; 0x802a28 <PID_EXE+0xa>
    3ed6:	80 e8       	ldi	r24, 0x80	; 128
    3ed8:	9a e1       	ldi	r25, 0x1A	; 26
    3eda:	a6 e0       	ldi	r26, 0x06	; 6
    3edc:	b0 e0       	ldi	r27, 0x00	; 0
    3ede:	80 93 1f 2a 	sts	0x2A1F, r24	; 0x802a1f <PID_EXE+0x1>
    3ee2:	90 93 20 2a 	sts	0x2A20, r25	; 0x802a20 <PID_EXE+0x2>
    3ee6:	a0 93 21 2a 	sts	0x2A21, r26	; 0x802a21 <PID_EXE+0x3>
    3eea:	b0 93 22 2a 	sts	0x2A22, r27	; 0x802a22 <PID_EXE+0x4>
    3eee:	10 92 23 2a 	sts	0x2A23, r1	; 0x802a23 <PID_EXE+0x5>
    3ef2:	10 92 24 2a 	sts	0x2A24, r1	; 0x802a24 <PID_EXE+0x6>
    3ef6:	10 92 25 2a 	sts	0x2A25, r1	; 0x802a25 <PID_EXE+0x7>
    3efa:	10 92 26 2a 	sts	0x2A26, r1	; 0x802a26 <PID_EXE+0x8>
    3efe:	8a e0       	ldi	r24, 0x0A	; 10
    3f00:	9c e0       	ldi	r25, 0x0C	; 12
    3f02:	80 93 2f 2a 	sts	0x2A2F, r24	; 0x802a2f <PID_EXE+0x11>
    3f06:	90 93 30 2a 	sts	0x2A30, r25	; 0x802a30 <PID_EXE+0x12>
    3f0a:	10 92 1e 2a 	sts	0x2A1E, r1	; 0x802a1e <PID_EXE>
    3f0e:	10 92 31 2a 	sts	0x2A31, r1	; 0x802a31 <PID_EXE+0x13>
    3f12:	10 92 32 2a 	sts	0x2A32, r1	; 0x802a32 <PID_EXE+0x14>
    3f16:	10 92 33 2a 	sts	0x2A33, r1	; 0x802a33 <PID_EXE+0x15>
    3f1a:	10 92 34 2a 	sts	0x2A34, r1	; 0x802a34 <PID_EXE+0x16>
    3f1e:	10 92 29 2a 	sts	0x2A29, r1	; 0x802a29 <PID_EXE+0xb>
    3f22:	10 92 2a 2a 	sts	0x2A2A, r1	; 0x802a2a <PID_EXE+0xc>
    3f26:	10 92 2b 2a 	sts	0x2A2B, r1	; 0x802a2b <PID_EXE+0xd>
    3f2a:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <PID_EXE+0xe>
    3f2e:	c0 90 83 29 	lds	r12, 0x2983	; 0x802983 <Kd>
    3f32:	d0 90 84 29 	lds	r13, 0x2984	; 0x802984 <Kd+0x1>
    3f36:	e0 90 85 29 	lds	r14, 0x2985	; 0x802985 <Kd+0x2>
    3f3a:	f0 90 86 29 	lds	r15, 0x2986	; 0x802986 <Kd+0x3>
    3f3e:	80 90 7f 29 	lds	r8, 0x297F	; 0x80297f <Ki>
    3f42:	90 90 80 29 	lds	r9, 0x2980	; 0x802980 <Ki+0x1>
    3f46:	a0 90 81 29 	lds	r10, 0x2981	; 0x802981 <Ki+0x2>
    3f4a:	b0 90 82 29 	lds	r11, 0x2982	; 0x802982 <Ki+0x3>
    3f4e:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    3f52:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    3f56:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    3f5a:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    3f5e:	8b e3       	ldi	r24, 0x3B	; 59
    3f60:	99 e2       	ldi	r25, 0x29	; 41
    3f62:	80 93 61 29 	sts	0x2961, r24	; 0x802961 <myPID+0x1e>
    3f66:	90 93 62 29 	sts	0x2962, r25	; 0x802962 <myPID+0x1f>
    3f6a:	8f e3       	ldi	r24, 0x3F	; 63
    3f6c:	99 e2       	ldi	r25, 0x29	; 41
    3f6e:	80 93 5f 29 	sts	0x295F, r24	; 0x80295f <myPID+0x1c>
    3f72:	90 93 60 29 	sts	0x2960, r25	; 0x802960 <myPID+0x1d>
    3f76:	87 e3       	ldi	r24, 0x37	; 55
    3f78:	99 e2       	ldi	r25, 0x29	; 41
    3f7a:	80 93 63 29 	sts	0x2963, r24	; 0x802963 <myPID+0x20>
    3f7e:	90 93 64 29 	sts	0x2964, r25	; 0x802964 <myPID+0x21>
    3f82:	10 92 7d 29 	sts	0x297D, r1	; 0x80297d <myPID+0x3a>
    3f86:	10 92 75 29 	sts	0x2975, r1	; 0x802975 <myPID+0x32>
    3f8a:	10 92 76 29 	sts	0x2976, r1	; 0x802976 <myPID+0x33>
    3f8e:	10 92 77 29 	sts	0x2977, r1	; 0x802977 <myPID+0x34>
    3f92:	10 92 78 29 	sts	0x2978, r1	; 0x802978 <myPID+0x35>
    3f96:	80 e0       	ldi	r24, 0x00	; 0
    3f98:	90 e0       	ldi	r25, 0x00	; 0
    3f9a:	af e7       	ldi	r26, 0x7F	; 127
    3f9c:	b3 e4       	ldi	r27, 0x43	; 67
    3f9e:	80 93 79 29 	sts	0x2979, r24	; 0x802979 <myPID+0x36>
    3fa2:	90 93 7a 29 	sts	0x297A, r25	; 0x80297a <myPID+0x37>
    3fa6:	a0 93 7b 29 	sts	0x297B, r26	; 0x80297b <myPID+0x38>
    3faa:	b0 93 7c 29 	sts	0x297C, r27	; 0x80297c <myPID+0x39>
    3fae:	84 e6       	ldi	r24, 0x64	; 100
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	a0 e0       	ldi	r26, 0x00	; 0
    3fb4:	b0 e0       	ldi	r27, 0x00	; 0
    3fb6:	80 93 71 29 	sts	0x2971, r24	; 0x802971 <myPID+0x2e>
    3fba:	90 93 72 29 	sts	0x2972, r25	; 0x802972 <myPID+0x2f>
    3fbe:	a0 93 73 29 	sts	0x2973, r26	; 0x802973 <myPID+0x30>
    3fc2:	b0 93 74 29 	sts	0x2974, r27	; 0x802974 <myPID+0x31>
    3fc6:	10 92 5b 29 	sts	0x295B, r1	; 0x80295b <myPID+0x18>
    3fca:	10 92 5c 29 	sts	0x295C, r1	; 0x80295c <myPID+0x19>
    3fce:	20 e0       	ldi	r18, 0x00	; 0
    3fd0:	30 e0       	ldi	r19, 0x00	; 0
    3fd2:	a9 01       	movw	r20, r18
    3fd4:	c3 01       	movw	r24, r6
    3fd6:	b2 01       	movw	r22, r4
    3fd8:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    3fdc:	87 fd       	sbrc	r24, 7
    3fde:	5a c0       	rjmp	.+180    	; 0x4094 <__RODATA_PM_OFFSET__+0x94>
    3fe0:	20 e0       	ldi	r18, 0x00	; 0
    3fe2:	30 e0       	ldi	r19, 0x00	; 0
    3fe4:	a9 01       	movw	r20, r18
    3fe6:	c5 01       	movw	r24, r10
    3fe8:	b4 01       	movw	r22, r8
    3fea:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    3fee:	87 fd       	sbrc	r24, 7
    3ff0:	51 c0       	rjmp	.+162    	; 0x4094 <__RODATA_PM_OFFSET__+0x94>
    3ff2:	20 e0       	ldi	r18, 0x00	; 0
    3ff4:	30 e0       	ldi	r19, 0x00	; 0
    3ff6:	a9 01       	movw	r20, r18
    3ff8:	c7 01       	movw	r24, r14
    3ffa:	b6 01       	movw	r22, r12
    3ffc:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    4000:	87 fd       	sbrc	r24, 7
    4002:	48 c0       	rjmp	.+144    	; 0x4094 <__RODATA_PM_OFFSET__+0x94>
    4004:	81 e0       	ldi	r24, 0x01	; 1
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	80 93 5d 29 	sts	0x295D, r24	; 0x80295d <myPID+0x1a>
    400c:	90 93 5e 29 	sts	0x295E, r25	; 0x80295e <myPID+0x1b>
    4010:	80 93 7e 29 	sts	0x297E, r24	; 0x80297e <myPID+0x3b>
    4014:	40 92 43 29 	sts	0x2943, r4	; 0x802943 <myPID>
    4018:	50 92 44 29 	sts	0x2944, r5	; 0x802944 <myPID+0x1>
    401c:	60 92 45 29 	sts	0x2945, r6	; 0x802945 <myPID+0x2>
    4020:	70 92 46 29 	sts	0x2946, r7	; 0x802946 <myPID+0x3>
    4024:	80 92 47 29 	sts	0x2947, r8	; 0x802947 <myPID+0x4>
    4028:	90 92 48 29 	sts	0x2948, r9	; 0x802948 <myPID+0x5>
    402c:	a0 92 49 29 	sts	0x2949, r10	; 0x802949 <myPID+0x6>
    4030:	b0 92 4a 29 	sts	0x294A, r11	; 0x80294a <myPID+0x7>
    4034:	c0 92 4b 29 	sts	0x294B, r12	; 0x80294b <myPID+0x8>
    4038:	d0 92 4c 29 	sts	0x294C, r13	; 0x80294c <myPID+0x9>
    403c:	e0 92 4d 29 	sts	0x294D, r14	; 0x80294d <myPID+0xa>
    4040:	f0 92 4e 29 	sts	0x294E, r15	; 0x80294e <myPID+0xb>
    4044:	40 92 4f 29 	sts	0x294F, r4	; 0x80294f <myPID+0xc>
    4048:	50 92 50 29 	sts	0x2950, r5	; 0x802950 <myPID+0xd>
    404c:	60 92 51 29 	sts	0x2951, r6	; 0x802951 <myPID+0xe>
    4050:	70 92 52 29 	sts	0x2952, r7	; 0x802952 <myPID+0xf>
    4054:	2d ec       	ldi	r18, 0xCD	; 205
    4056:	3c ec       	ldi	r19, 0xCC	; 204
    4058:	4c ec       	ldi	r20, 0xCC	; 204
    405a:	5d e3       	ldi	r21, 0x3D	; 61
    405c:	c5 01       	movw	r24, r10
    405e:	b4 01       	movw	r22, r8
    4060:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <__mulsf3>
    4064:	60 93 53 29 	sts	0x2953, r22	; 0x802953 <myPID+0x10>
    4068:	70 93 54 29 	sts	0x2954, r23	; 0x802954 <myPID+0x11>
    406c:	80 93 55 29 	sts	0x2955, r24	; 0x802955 <myPID+0x12>
    4070:	90 93 56 29 	sts	0x2956, r25	; 0x802956 <myPID+0x13>
    4074:	2d ec       	ldi	r18, 0xCD	; 205
    4076:	3c ec       	ldi	r19, 0xCC	; 204
    4078:	4c ec       	ldi	r20, 0xCC	; 204
    407a:	5d e3       	ldi	r21, 0x3D	; 61
    407c:	c7 01       	movw	r24, r14
    407e:	b6 01       	movw	r22, r12
    4080:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    4084:	60 93 57 29 	sts	0x2957, r22	; 0x802957 <myPID+0x14>
    4088:	70 93 58 29 	sts	0x2958, r23	; 0x802958 <myPID+0x15>
    408c:	80 93 59 29 	sts	0x2959, r24	; 0x802959 <myPID+0x16>
    4090:	90 93 5a 29 	sts	0x295A, r25	; 0x80295a <myPID+0x17>
    4094:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
    4098:	c0 90 71 29 	lds	r12, 0x2971	; 0x802971 <myPID+0x2e>
    409c:	d0 90 72 29 	lds	r13, 0x2972	; 0x802972 <myPID+0x2f>
    40a0:	e0 90 73 29 	lds	r14, 0x2973	; 0x802973 <myPID+0x30>
    40a4:	f0 90 74 29 	lds	r15, 0x2974	; 0x802974 <myPID+0x31>
    40a8:	6c 19       	sub	r22, r12
    40aa:	7d 09       	sbc	r23, r13
    40ac:	8e 09       	sbc	r24, r14
    40ae:	9f 09       	sbc	r25, r15
    40b0:	60 93 65 29 	sts	0x2965, r22	; 0x802965 <myPID+0x22>
    40b4:	70 93 66 29 	sts	0x2966, r23	; 0x802966 <myPID+0x23>
    40b8:	80 93 67 29 	sts	0x2967, r24	; 0x802967 <myPID+0x24>
    40bc:	90 93 68 29 	sts	0x2968, r25	; 0x802968 <myPID+0x25>
    40c0:	10 92 0c 2a 	sts	0x2A0C, r1	; 0x802a0c <VersionDisplay+0x9>
    40c4:	10 92 0d 2a 	sts	0x2A0D, r1	; 0x802a0d <VersionDisplay+0xa>
    40c8:	80 e4       	ldi	r24, 0x40	; 64
    40ca:	92 e4       	ldi	r25, 0x42	; 66
    40cc:	af e0       	ldi	r26, 0x0F	; 15
    40ce:	b0 e0       	ldi	r27, 0x00	; 0
    40d0:	80 93 04 2a 	sts	0x2A04, r24	; 0x802a04 <VersionDisplay+0x1>
    40d4:	90 93 05 2a 	sts	0x2A05, r25	; 0x802a05 <VersionDisplay+0x2>
    40d8:	a0 93 06 2a 	sts	0x2A06, r26	; 0x802a06 <VersionDisplay+0x3>
    40dc:	b0 93 07 2a 	sts	0x2A07, r27	; 0x802a07 <VersionDisplay+0x4>
    40e0:	81 e0       	ldi	r24, 0x01	; 1
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	a0 e0       	ldi	r26, 0x00	; 0
    40e6:	b0 e0       	ldi	r27, 0x00	; 0
    40e8:	80 93 08 2a 	sts	0x2A08, r24	; 0x802a08 <VersionDisplay+0x5>
    40ec:	90 93 09 2a 	sts	0x2A09, r25	; 0x802a09 <VersionDisplay+0x6>
    40f0:	a0 93 0a 2a 	sts	0x2A0A, r26	; 0x802a0a <VersionDisplay+0x7>
    40f4:	b0 93 0b 2a 	sts	0x2A0B, r27	; 0x802a0b <VersionDisplay+0x8>
    40f8:	8a e7       	ldi	r24, 0x7A	; 122
    40fa:	91 e0       	ldi	r25, 0x01	; 1
    40fc:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <VersionDisplay+0x11>
    4100:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <VersionDisplay+0x12>
    4104:	10 92 03 2a 	sts	0x2A03, r1	; 0x802a03 <VersionDisplay>
    4108:	10 92 16 2a 	sts	0x2A16, r1	; 0x802a16 <VersionDisplay+0x13>
    410c:	10 92 17 2a 	sts	0x2A17, r1	; 0x802a17 <VersionDisplay+0x14>
    4110:	10 92 18 2a 	sts	0x2A18, r1	; 0x802a18 <VersionDisplay+0x15>
    4114:	10 92 19 2a 	sts	0x2A19, r1	; 0x802a19 <VersionDisplay+0x16>
    4118:	10 92 0e 2a 	sts	0x2A0E, r1	; 0x802a0e <VersionDisplay+0xb>
    411c:	10 92 0f 2a 	sts	0x2A0F, r1	; 0x802a0f <VersionDisplay+0xc>
    4120:	10 92 10 2a 	sts	0x2A10, r1	; 0x802a10 <VersionDisplay+0xd>
    4124:	10 92 11 2a 	sts	0x2A11, r1	; 0x802a11 <VersionDisplay+0xe>
    4128:	63 e2       	ldi	r22, 0x23	; 35
    412a:	70 e0       	ldi	r23, 0x00	; 0
    412c:	84 ee       	ldi	r24, 0xE4	; 228
    412e:	99 e2       	ldi	r25, 0x29	; 41
    4130:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <OneButton::OneButton(int, int) [clone .constprop.53]>
    4134:	65 e2       	ldi	r22, 0x25	; 37
    4136:	70 e0       	ldi	r23, 0x00	; 0
    4138:	85 ec       	ldi	r24, 0xC5	; 197
    413a:	99 e2       	ldi	r25, 0x29	; 41
    413c:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <OneButton::OneButton(int, int) [clone .constprop.53]>
    4140:	64 e2       	ldi	r22, 0x24	; 36
    4142:	70 e0       	ldi	r23, 0x00	; 0
    4144:	86 ea       	ldi	r24, 0xA6	; 166
    4146:	99 e2       	ldi	r25, 0x29	; 41
    4148:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <OneButton::OneButton(int, int) [clone .constprop.53]>
    414c:	62 e2       	ldi	r22, 0x22	; 34
    414e:	70 e0       	ldi	r23, 0x00	; 0
    4150:	87 e8       	ldi	r24, 0x87	; 135
    4152:	99 e2       	ldi	r25, 0x29	; 41
    4154:	ff 90       	pop	r15
    4156:	ef 90       	pop	r14
    4158:	df 90       	pop	r13
    415a:	cf 90       	pop	r12
    415c:	bf 90       	pop	r11
    415e:	af 90       	pop	r10
    4160:	9f 90       	pop	r9
    4162:	8f 90       	pop	r8
    4164:	7f 90       	pop	r7
    4166:	6f 90       	pop	r6
    4168:	5f 90       	pop	r5
    416a:	4f 90       	pop	r4
    416c:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <OneButton::OneButton(int, int) [clone .constprop.53]>

00004170 <main>:
main():
    4170:	cf 93       	push	r28
    4172:	df 93       	push	r29
    4174:	cd b7       	in	r28, 0x3d	; 61
    4176:	de b7       	in	r29, 0x3e	; 62
    4178:	26 97       	sbiw	r28, 0x06	; 6
    417a:	cd bf       	out	0x3d, r28	; 61
    417c:	de bf       	out	0x3e, r29	; 62
init():
    417e:	88 ed       	ldi	r24, 0xD8	; 216
    4180:	90 e0       	ldi	r25, 0x00	; 0
    4182:	84 bf       	out	0x34, r24	; 52
    4184:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    4188:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    418c:	86 60       	ori	r24, 0x06	; 6
    418e:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4192:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    4196:	81 60       	ori	r24, 0x01	; 1
    4198:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    419c:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    41a0:	8f 7c       	andi	r24, 0xCF	; 207
    41a2:	80 65       	ori	r24, 0x50	; 80
    41a4:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    41a8:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    41ac:	82 e0       	ldi	r24, 0x02	; 2
    41ae:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    41b2:	81 e0       	ldi	r24, 0x01	; 1
    41b4:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    41b8:	8e ef       	ldi	r24, 0xFE	; 254
    41ba:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    41be:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    41c2:	80 e8       	ldi	r24, 0x80	; 128
    41c4:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    41c8:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    41cc:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    41d0:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    41d4:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    41d8:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    41dc:	8b e0       	ldi	r24, 0x0B	; 11
    41de:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    41e2:	87 e0       	ldi	r24, 0x07	; 7
    41e4:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    41e8:	e0 e8       	ldi	r30, 0x80	; 128
    41ea:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    41ec:	37 e0       	ldi	r19, 0x07	; 7
    41ee:	2e ef       	ldi	r18, 0xFE	; 254
    41f0:	90 e8       	ldi	r25, 0x80	; 128
    41f2:	85 e0       	ldi	r24, 0x05	; 5
    41f4:	31 83       	std	Z+1, r19	; 0x01
    41f6:	24 87       	std	Z+12, r18	; 0x0c
    41f8:	95 87       	std	Z+13, r25	; 0x0d
    41fa:	80 83       	st	Z, r24
    41fc:	70 96       	adiw	r30, 0x10	; 16
    41fe:	e0 3c       	cpi	r30, 0xC0	; 192
    4200:	4a e0       	ldi	r20, 0x0A	; 10
    4202:	f4 07       	cpc	r31, r20
    4204:	b9 f7       	brne	.-18     	; 0x41f4 <main+0x84>
init():
    4206:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    420a:	8f e7       	ldi	r24, 0x7F	; 127
    420c:	9e e3       	ldi	r25, 0x3E	; 62
    420e:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    4212:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    4216:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    421a:	81 60       	ori	r24, 0x01	; 1
    421c:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4220:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4224:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4228:	81 60       	ori	r24, 0x01	; 1
    422a:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    422e:	78 94       	sei
SETUP():
    4230:	f8 94       	cli
    4232:	81 e0       	ldi	r24, 0x01	; 1
    4234:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    4238:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    423c:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4240:	8e 7f       	andi	r24, 0xFE	; 254
    4242:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4246:	8a ef       	ldi	r24, 0xFA	; 250
    4248:	90 e0       	ldi	r25, 0x00	; 0
    424a:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    424e:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4252:	8f e0       	ldi	r24, 0x0F	; 15
    4254:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4258:	78 94       	sei
    425a:	61 e0       	ldi	r22, 0x01	; 1
    425c:	84 e0       	ldi	r24, 0x04	; 4
    425e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    4262:	61 e0       	ldi	r22, 0x01	; 1
    4264:	85 e0       	ldi	r24, 0x05	; 5
    4266:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    426a:	61 e0       	ldi	r22, 0x01	; 1
    426c:	86 e0       	ldi	r24, 0x06	; 6
    426e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    4272:	61 e0       	ldi	r22, 0x01	; 1
    4274:	87 e0       	ldi	r24, 0x07	; 7
    4276:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    427a:	61 e0       	ldi	r22, 0x01	; 1
    427c:	88 e0       	ldi	r24, 0x08	; 8
    427e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    4282:	61 e0       	ldi	r22, 0x01	; 1
    4284:	89 e0       	ldi	r24, 0x09	; 9
    4286:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    428a:	61 e0       	ldi	r22, 0x01	; 1
    428c:	8a e0       	ldi	r24, 0x0A	; 10
    428e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    4292:	61 e0       	ldi	r22, 0x01	; 1
    4294:	8b e0       	ldi	r24, 0x0B	; 11
    4296:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    429a:	61 e0       	ldi	r22, 0x01	; 1
    429c:	84 e1       	ldi	r24, 0x14	; 20
    429e:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42a2:	61 e0       	ldi	r22, 0x01	; 1
    42a4:	83 e1       	ldi	r24, 0x13	; 19
    42a6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42aa:	61 e0       	ldi	r22, 0x01	; 1
    42ac:	82 e1       	ldi	r24, 0x12	; 18
    42ae:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42b2:	61 e0       	ldi	r22, 0x01	; 1
    42b4:	8e e1       	ldi	r24, 0x1E	; 30
    42b6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42ba:	61 e0       	ldi	r22, 0x01	; 1
    42bc:	80 e2       	ldi	r24, 0x20	; 32
    42be:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42c2:	61 e0       	ldi	r22, 0x01	; 1
    42c4:	8f e1       	ldi	r24, 0x1F	; 31
    42c6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <pinMode>
    42ca:	61 e0       	ldi	r22, 0x01	; 1
    42cc:	84 e0       	ldi	r24, 0x04	; 4
    42ce:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42d2:	61 e0       	ldi	r22, 0x01	; 1
    42d4:	85 e0       	ldi	r24, 0x05	; 5
    42d6:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42da:	61 e0       	ldi	r22, 0x01	; 1
    42dc:	86 e0       	ldi	r24, 0x06	; 6
    42de:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42e2:	61 e0       	ldi	r22, 0x01	; 1
    42e4:	87 e0       	ldi	r24, 0x07	; 7
    42e6:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42ea:	61 e0       	ldi	r22, 0x01	; 1
    42ec:	88 e0       	ldi	r24, 0x08	; 8
    42ee:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42f2:	61 e0       	ldi	r22, 0x01	; 1
    42f4:	89 e0       	ldi	r24, 0x09	; 9
    42f6:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    42fa:	61 e0       	ldi	r22, 0x01	; 1
    42fc:	8a e0       	ldi	r24, 0x0A	; 10
    42fe:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
    4302:	61 e0       	ldi	r22, 0x01	; 1
    4304:	8b e0       	ldi	r24, 0x0B	; 11
    4306:	0e 94 57 07 	call	0xeae	; 0xeae <digitalWrite>
pinMode():
    430a:	61 e0       	ldi	r22, 0x01	; 1
    430c:	8c e0       	ldi	r24, 0x0C	; 12
    430e:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4312:	61 e0       	ldi	r22, 0x01	; 1
    4314:	8d e0       	ldi	r24, 0x0D	; 13
    4316:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
digitalWrite():
    431a:	60 e0       	ldi	r22, 0x00	; 0
    431c:	8c e0       	ldi	r24, 0x0C	; 12
    431e:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    4322:	60 e0       	ldi	r22, 0x00	; 0
    4324:	8d e0       	ldi	r24, 0x0D	; 13
    4326:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SETUP():
    432a:	86 ef       	ldi	r24, 0xF6	; 246
    432c:	9a e2       	ldi	r25, 0x2A	; 42
    432e:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SetOutputLimits():
    4332:	10 92 75 29 	sts	0x2975, r1	; 0x802975 <myPID+0x32>
    4336:	10 92 76 29 	sts	0x2976, r1	; 0x802976 <myPID+0x33>
    433a:	10 92 77 29 	sts	0x2977, r1	; 0x802977 <myPID+0x34>
    433e:	10 92 78 29 	sts	0x2978, r1	; 0x802978 <myPID+0x35>
    4342:	81 2c       	mov	r8, r1
    4344:	91 2c       	mov	r9, r1
    4346:	9a e7       	ldi	r25, 0x7A	; 122
    4348:	a9 2e       	mov	r10, r25
    434a:	94 e4       	ldi	r25, 0x44	; 68
    434c:	b9 2e       	mov	r11, r25
    434e:	80 92 79 29 	sts	0x2979, r8	; 0x802979 <myPID+0x36>
    4352:	90 92 7a 29 	sts	0x297A, r9	; 0x80297a <myPID+0x37>
    4356:	a0 92 7b 29 	sts	0x297B, r10	; 0x80297b <myPID+0x38>
    435a:	b0 92 7c 29 	sts	0x297C, r11	; 0x80297c <myPID+0x39>
    435e:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <myPID+0x3a>
    4362:	88 23       	and	r24, r24
    4364:	09 f4       	brne	.+2      	; 0x4368 <main+0x1f8>
    4366:	57 c0       	rjmp	.+174    	; 0x4416 <main+0x2a6>
    4368:	00 91 61 29 	lds	r16, 0x2961	; 0x802961 <myPID+0x1e>
    436c:	10 91 62 29 	lds	r17, 0x2962	; 0x802962 <myPID+0x1f>
    4370:	d8 01       	movw	r26, r16
    4372:	cd 90       	ld	r12, X+
    4374:	dd 90       	ld	r13, X+
    4376:	ed 90       	ld	r14, X+
    4378:	fc 90       	ld	r15, X
    437a:	a5 01       	movw	r20, r10
    437c:	94 01       	movw	r18, r8
    437e:	c7 01       	movw	r24, r14
    4380:	b6 01       	movw	r22, r12
    4382:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    4386:	18 16       	cp	r1, r24
    4388:	34 f5       	brge	.+76     	; 0x43d6 <main+0x266>
    438a:	f8 01       	movw	r30, r16
    438c:	80 82       	st	Z, r8
    438e:	91 82       	std	Z+1, r9	; 0x01
    4390:	a2 82       	std	Z+2, r10	; 0x02
    4392:	b3 82       	std	Z+3, r11	; 0x03
    4394:	80 90 69 29 	lds	r8, 0x2969	; 0x802969 <myPID+0x26>
    4398:	90 90 6a 29 	lds	r9, 0x296A	; 0x80296a <myPID+0x27>
    439c:	a0 90 6b 29 	lds	r10, 0x296B	; 0x80296b <myPID+0x28>
    43a0:	b0 90 6c 29 	lds	r11, 0x296C	; 0x80296c <myPID+0x29>
    43a4:	c0 90 79 29 	lds	r12, 0x2979	; 0x802979 <myPID+0x36>
    43a8:	d0 90 7a 29 	lds	r13, 0x297A	; 0x80297a <myPID+0x37>
    43ac:	e0 90 7b 29 	lds	r14, 0x297B	; 0x80297b <myPID+0x38>
    43b0:	f0 90 7c 29 	lds	r15, 0x297C	; 0x80297c <myPID+0x39>
    43b4:	a7 01       	movw	r20, r14
    43b6:	96 01       	movw	r18, r12
    43b8:	c5 01       	movw	r24, r10
    43ba:	b4 01       	movw	r22, r8
    43bc:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    43c0:	18 16       	cp	r1, r24
    43c2:	cc f4       	brge	.+50     	; 0x43f6 <main+0x286>
    43c4:	c0 92 69 29 	sts	0x2969, r12	; 0x802969 <myPID+0x26>
    43c8:	d0 92 6a 29 	sts	0x296A, r13	; 0x80296a <myPID+0x27>
    43cc:	e0 92 6b 29 	sts	0x296B, r14	; 0x80296b <myPID+0x28>
    43d0:	f0 92 6c 29 	sts	0x296C, r15	; 0x80296c <myPID+0x29>
    43d4:	20 c0       	rjmp	.+64     	; 0x4416 <main+0x2a6>
    43d6:	20 e0       	ldi	r18, 0x00	; 0
    43d8:	30 e0       	ldi	r19, 0x00	; 0
    43da:	a9 01       	movw	r20, r18
    43dc:	c7 01       	movw	r24, r14
    43de:	b6 01       	movw	r22, r12
    43e0:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    43e4:	87 ff       	sbrs	r24, 7
    43e6:	d6 cf       	rjmp	.-84     	; 0x4394 <main+0x224>
    43e8:	d8 01       	movw	r26, r16
    43ea:	1d 92       	st	X+, r1
    43ec:	1d 92       	st	X+, r1
    43ee:	1d 92       	st	X+, r1
    43f0:	1c 92       	st	X, r1
    43f2:	13 97       	sbiw	r26, 0x03	; 3
    43f4:	cf cf       	rjmp	.-98     	; 0x4394 <main+0x224>
    43f6:	c0 90 75 29 	lds	r12, 0x2975	; 0x802975 <myPID+0x32>
    43fa:	d0 90 76 29 	lds	r13, 0x2976	; 0x802976 <myPID+0x33>
    43fe:	e0 90 77 29 	lds	r14, 0x2977	; 0x802977 <myPID+0x34>
    4402:	f0 90 78 29 	lds	r15, 0x2978	; 0x802978 <myPID+0x35>
    4406:	a7 01       	movw	r20, r14
    4408:	96 01       	movw	r18, r12
    440a:	c5 01       	movw	r24, r10
    440c:	b4 01       	movw	r22, r8
    440e:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    4412:	87 fd       	sbrc	r24, 7
    4414:	d7 cf       	rjmp	.-82     	; 0x43c4 <main+0x254>
Setup():
    4416:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
    441a:	60 93 d0 28 	sts	0x28D0, r22	; 0x8028d0 <WINDOW_START_TIME>
    441e:	70 93 d1 28 	sts	0x28D1, r23	; 0x8028d1 <WINDOW_START_TIME+0x1>
    4422:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <WINDOW_START_TIME+0x2>
    4426:	90 93 d3 28 	sts	0x28D3, r25	; 0x8028d3 <WINDOW_START_TIME+0x3>
SetMode():
    442a:	80 91 7d 29 	lds	r24, 0x297D	; 0x80297d <myPID+0x3a>
    442e:	81 11       	cpse	r24, r1
    4430:	49 c0       	rjmp	.+146    	; 0x44c4 <main+0x354>
Initialize():
    4432:	e0 91 61 29 	lds	r30, 0x2961	; 0x802961 <myPID+0x1e>
    4436:	f0 91 62 29 	lds	r31, 0x2962	; 0x802962 <myPID+0x1f>
    443a:	c0 80       	ld	r12, Z
    443c:	d1 80       	ldd	r13, Z+1	; 0x01
    443e:	e2 80       	ldd	r14, Z+2	; 0x02
    4440:	f3 80       	ldd	r15, Z+3	; 0x03
    4442:	c0 92 69 29 	sts	0x2969, r12	; 0x802969 <myPID+0x26>
    4446:	d0 92 6a 29 	sts	0x296A, r13	; 0x80296a <myPID+0x27>
    444a:	e0 92 6b 29 	sts	0x296B, r14	; 0x80296b <myPID+0x28>
    444e:	f0 92 6c 29 	sts	0x296C, r15	; 0x80296c <myPID+0x29>
    4452:	e0 91 5f 29 	lds	r30, 0x295F	; 0x80295f <myPID+0x1c>
    4456:	f0 91 60 29 	lds	r31, 0x2960	; 0x802960 <myPID+0x1d>
    445a:	80 81       	ld	r24, Z
    445c:	91 81       	ldd	r25, Z+1	; 0x01
    445e:	a2 81       	ldd	r26, Z+2	; 0x02
    4460:	b3 81       	ldd	r27, Z+3	; 0x03
    4462:	80 93 6d 29 	sts	0x296D, r24	; 0x80296d <myPID+0x2a>
    4466:	90 93 6e 29 	sts	0x296E, r25	; 0x80296e <myPID+0x2b>
    446a:	a0 93 6f 29 	sts	0x296F, r26	; 0x80296f <myPID+0x2c>
    446e:	b0 93 70 29 	sts	0x2970, r27	; 0x802970 <myPID+0x2d>
    4472:	80 90 79 29 	lds	r8, 0x2979	; 0x802979 <myPID+0x36>
    4476:	90 90 7a 29 	lds	r9, 0x297A	; 0x80297a <myPID+0x37>
    447a:	a0 90 7b 29 	lds	r10, 0x297B	; 0x80297b <myPID+0x38>
    447e:	b0 90 7c 29 	lds	r11, 0x297C	; 0x80297c <myPID+0x39>
    4482:	a5 01       	movw	r20, r10
    4484:	94 01       	movw	r18, r8
    4486:	c7 01       	movw	r24, r14
    4488:	b6 01       	movw	r22, r12
    448a:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    448e:	18 16       	cp	r1, r24
    4490:	4c f4       	brge	.+18     	; 0x44a4 <main+0x334>
    4492:	80 92 69 29 	sts	0x2969, r8	; 0x802969 <myPID+0x26>
    4496:	90 92 6a 29 	sts	0x296A, r9	; 0x80296a <myPID+0x27>
    449a:	a0 92 6b 29 	sts	0x296B, r10	; 0x80296b <myPID+0x28>
    449e:	b0 92 6c 29 	sts	0x296C, r11	; 0x80296c <myPID+0x29>
    44a2:	10 c0       	rjmp	.+32     	; 0x44c4 <main+0x354>
    44a4:	80 90 75 29 	lds	r8, 0x2975	; 0x802975 <myPID+0x32>
    44a8:	90 90 76 29 	lds	r9, 0x2976	; 0x802976 <myPID+0x33>
    44ac:	a0 90 77 29 	lds	r10, 0x2977	; 0x802977 <myPID+0x34>
    44b0:	b0 90 78 29 	lds	r11, 0x2978	; 0x802978 <myPID+0x35>
    44b4:	a5 01       	movw	r20, r10
    44b6:	94 01       	movw	r18, r8
    44b8:	c7 01       	movw	r24, r14
    44ba:	b6 01       	movw	r22, r12
    44bc:	0e 94 99 32 	call	0x6532	; 0x6532 <__cmpsf2>
    44c0:	87 fd       	sbrc	r24, 7
    44c2:	e7 cf       	rjmp	.-50     	; 0x4492 <main+0x322>
SetMode():
    44c4:	81 e0       	ldi	r24, 0x01	; 1
    44c6:	80 93 7d 29 	sts	0x297D, r24	; 0x80297d <myPID+0x3a>
pinMode():
    44ca:	61 e0       	ldi	r22, 0x01	; 1
    44cc:	80 e1       	ldi	r24, 0x10	; 16
    44ce:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    44d2:	61 e0       	ldi	r22, 0x01	; 1
    44d4:	88 e1       	ldi	r24, 0x18	; 24
    44d6:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    44da:	61 e0       	ldi	r22, 0x01	; 1
    44dc:	89 e1       	ldi	r24, 0x19	; 25
    44de:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
digitalWrite():
    44e2:	60 e0       	ldi	r22, 0x00	; 0
    44e4:	89 e1       	ldi	r24, 0x19	; 25
    44e6:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    44ea:	60 e0       	ldi	r22, 0x00	; 0
    44ec:	80 e1       	ldi	r24, 0x10	; 16
    44ee:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    44f2:	60 e0       	ldi	r22, 0x00	; 0
    44f4:	88 e1       	ldi	r24, 0x18	; 24
    44f6:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
pinMode():
    44fa:	61 e0       	ldi	r22, 0x01	; 1
    44fc:	8b e1       	ldi	r24, 0x1B	; 27
    44fe:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4502:	61 e0       	ldi	r22, 0x01	; 1
    4504:	8c e1       	ldi	r24, 0x1C	; 28
    4506:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    450a:	61 e0       	ldi	r22, 0x01	; 1
    450c:	8d e1       	ldi	r24, 0x1D	; 29
    450e:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4512:	61 e0       	ldi	r22, 0x01	; 1
    4514:	8a e1       	ldi	r24, 0x1A	; 26
    4516:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
Setup():
    451a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    451e:	84 e5       	ldi	r24, 0x54	; 84
    4520:	9a e2       	ldi	r25, 0x2A	; 42
    4522:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
    4526:	90 e0       	ldi	r25, 0x00	; 0
    4528:	80 e0       	ldi	r24, 0x00	; 0
    452a:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    452e:	bb 24       	eor	r11, r11
    4530:	b3 94       	inc	r11
    4532:	81 11       	cpse	r24, r1
    4534:	01 c0       	rjmp	.+2      	; 0x4538 <main+0x3c8>
    4536:	b1 2c       	mov	r11, r1
    4538:	b0 92 86 28 	sts	0x2886, r11	; 0x802886 <STIR_VALUE_SET>
    453c:	81 e0       	ldi	r24, 0x01	; 1
    453e:	90 e0       	ldi	r25, 0x00	; 0
    4540:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4544:	01 e0       	ldi	r16, 0x01	; 1
    4546:	81 11       	cpse	r24, r1
    4548:	01 c0       	rjmp	.+2      	; 0x454c <main+0x3dc>
    454a:	00 e0       	ldi	r16, 0x00	; 0
    454c:	00 93 35 29 	sts	0x2935, r16	; 0x802935 <DEGREE_VALUE_SET>
    4550:	82 e0       	ldi	r24, 0x02	; 2
    4552:	90 e0       	ldi	r25, 0x00	; 0
    4554:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4558:	c8 2e       	mov	r12, r24
    455a:	d1 2c       	mov	r13, r1
    455c:	c0 92 f4 28 	sts	0x28F4, r12	; 0x8028f4 <SAFE_VALUE_SET_DEG>
    4560:	d0 92 f5 28 	sts	0x28F5, r13	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
    4564:	62 ef       	ldi	r22, 0xF2	; 242
    4566:	78 e2       	ldi	r23, 0x28	; 40
    4568:	83 e0       	ldi	r24, 0x03	; 3
    456a:	90 e0       	ldi	r25, 0x00	; 0
    456c:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4570:	85 e0       	ldi	r24, 0x05	; 5
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4578:	e8 2e       	mov	r14, r24
    457a:	f1 2c       	mov	r15, r1
    457c:	e0 92 bb 28 	sts	0x28BB, r14	; 0x8028bb <CAL_SELECT_VALUE>
    4580:	f0 92 bc 28 	sts	0x28BC, r15	; 0x8028bc <CAL_SELECT_VALUE+0x1>
    4584:	1c ee       	ldi	r17, 0xEC	; 236
    4586:	61 2e       	mov	r6, r17
    4588:	18 e2       	ldi	r17, 0x28	; 40
    458a:	71 2e       	mov	r7, r17
main():
    458c:	86 e4       	ldi	r24, 0x46	; 70
    458e:	88 2e       	mov	r8, r24
    4590:	91 2c       	mov	r9, r1
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4592:	89 82       	std	Y+1, r8	; 0x01
    4594:	9a 82       	std	Y+2, r9	; 0x02
_ZNK5EERefcvhEv():
    4596:	ce 01       	movw	r24, r28
    4598:	01 96       	adiw	r24, 0x01	; 1
    459a:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    459e:	f3 01       	movw	r30, r6
    45a0:	81 93       	st	Z+, r24
    45a2:	3f 01       	movw	r6, r30
_ZN5EEPtrppEv():
    45a4:	ff ef       	ldi	r31, 0xFF	; 255
    45a6:	8f 1a       	sub	r8, r31
    45a8:	9f 0a       	sbc	r9, r31
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    45aa:	2a e4       	ldi	r18, 0x4A	; 74
    45ac:	82 16       	cp	r8, r18
    45ae:	91 04       	cpc	r9, r1
    45b0:	81 f7       	brne	.-32     	; 0x4592 <main+0x422>
Setup():
    45b2:	87 e0       	ldi	r24, 0x07	; 7
    45b4:	90 e0       	ldi	r25, 0x00	; 0
    45b6:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    45ba:	91 e0       	ldi	r25, 0x01	; 1
    45bc:	81 11       	cpse	r24, r1
    45be:	01 c0       	rjmp	.+2      	; 0x45c2 <main+0x452>
    45c0:	90 e0       	ldi	r25, 0x00	; 0
    45c2:	90 93 cf 28 	sts	0x28CF, r25	; 0x8028cf <SIGN>
    45c6:	88 e0       	ldi	r24, 0x08	; 8
    45c8:	90 e0       	ldi	r25, 0x00	; 0
    45ca:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    45ce:	91 e0       	ldi	r25, 0x01	; 1
    45d0:	81 11       	cpse	r24, r1
    45d2:	01 c0       	rjmp	.+2      	; 0x45d6 <main+0x466>
    45d4:	90 e0       	ldi	r25, 0x00	; 0
    45d6:	90 93 ca 28 	sts	0x28CA, r25	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
    45da:	89 e0       	ldi	r24, 0x09	; 9
    45dc:	90 e0       	ldi	r25, 0x00	; 0
    45de:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    45e2:	91 e0       	ldi	r25, 0x01	; 1
    45e4:	81 11       	cpse	r24, r1
    45e6:	01 c0       	rjmp	.+2      	; 0x45ea <main+0x47a>
    45e8:	90 e0       	ldi	r25, 0x00	; 0
    45ea:	90 93 c5 28 	sts	0x28C5, r25	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
    45ee:	63 eb       	ldi	r22, 0xB3	; 179
    45f0:	78 e2       	ldi	r23, 0x28	; 40
    45f2:	80 e5       	ldi	r24, 0x50	; 80
    45f4:	90 e0       	ldi	r25, 0x00	; 0
    45f6:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    45fa:	6f ea       	ldi	r22, 0xAF	; 175
    45fc:	78 e2       	ldi	r23, 0x28	; 40
    45fe:	8a e5       	ldi	r24, 0x5A	; 90
    4600:	90 e0       	ldi	r25, 0x00	; 0
    4602:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4606:	6b ea       	ldi	r22, 0xAB	; 171
    4608:	78 e2       	ldi	r23, 0x28	; 40
    460a:	84 e6       	ldi	r24, 0x64	; 100
    460c:	90 e0       	ldi	r25, 0x00	; 0
    460e:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4612:	67 ea       	ldi	r22, 0xA7	; 167
    4614:	78 e2       	ldi	r23, 0x28	; 40
    4616:	8e e6       	ldi	r24, 0x6E	; 110
    4618:	90 e0       	ldi	r25, 0x00	; 0
    461a:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    461e:	81 e4       	ldi	r24, 0x41	; 65
    4620:	90 e0       	ldi	r25, 0x00	; 0
    4622:	89 83       	std	Y+1, r24	; 0x01
    4624:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    4626:	ce 01       	movw	r24, r28
    4628:	01 96       	adiw	r24, 0x01	; 1
    462a:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    462e:	80 93 55 28 	sts	0x2855, r24	; 0x802855 <TIME_SOCK_OR_TOTAL>
Setup():
    4632:	64 e4       	ldi	r22, 0x44	; 68
    4634:	78 e2       	ldi	r23, 0x28	; 40
    4636:	88 e9       	ldi	r24, 0x98	; 152
    4638:	90 e0       	ldi	r25, 0x00	; 0
    463a:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    463e:	62 e4       	ldi	r22, 0x42	; 66
    4640:	78 e2       	ldi	r23, 0x28	; 40
    4642:	8a e9       	ldi	r24, 0x9A	; 154
    4644:	90 e0       	ldi	r25, 0x00	; 0
    4646:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    464a:	8f e0       	ldi	r24, 0x0F	; 15
    464c:	90 e0       	ldi	r25, 0x00	; 0
    464e:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4652:	11 e0       	ldi	r17, 0x01	; 1
    4654:	81 11       	cpse	r24, r1
    4656:	01 c0       	rjmp	.+2      	; 0x465a <main+0x4ea>
    4658:	10 e0       	ldi	r17, 0x00	; 0
    465a:	10 93 8d 28 	sts	0x288D, r17	; 0x80288d <Proceess_Resume_Enable_Flag>
    465e:	86 e9       	ldi	r24, 0x96	; 150
    4660:	90 e0       	ldi	r25, 0x00	; 0
    4662:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4666:	91 e0       	ldi	r25, 0x01	; 1
    4668:	81 11       	cpse	r24, r1
    466a:	01 c0       	rjmp	.+2      	; 0x466e <main+0x4fe>
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <select_product_type>
    4672:	2b 2d       	mov	r18, r11
    4674:	30 e0       	ldi	r19, 0x00	; 0
    4676:	20 93 03 29 	sts	0x2903, r18	; 0x802903 <SET_LONG_VALUE>
    467a:	30 93 04 29 	sts	0x2904, r19	; 0x802904 <SET_LONG_VALUE+0x1>
    467e:	20 2f       	mov	r18, r16
    4680:	30 e0       	ldi	r19, 0x00	; 0
    4682:	20 93 05 29 	sts	0x2905, r18	; 0x802905 <SET_LONG_VALUE+0x2>
    4686:	30 93 06 29 	sts	0x2906, r19	; 0x802906 <SET_LONG_VALUE+0x3>
    468a:	c0 92 07 29 	sts	0x2907, r12	; 0x802907 <SET_LONG_VALUE+0x4>
    468e:	d0 92 08 29 	sts	0x2908, r13	; 0x802908 <SET_LONG_VALUE+0x5>
    4692:	20 91 f2 28 	lds	r18, 0x28F2	; 0x8028f2 <SAFE_VALUE_SET_FAH>
    4696:	30 91 f3 28 	lds	r19, 0x28F3	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
    469a:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x26>
    469e:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x27>
    46a2:	e0 92 0f 29 	sts	0x290F, r14	; 0x80290f <SET_LONG_VALUE+0xc>
    46a6:	f0 92 10 29 	sts	0x2910, r15	; 0x802910 <SET_LONG_VALUE+0xd>
    46aa:	20 91 55 28 	lds	r18, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    46ae:	30 e0       	ldi	r19, 0x00	; 0
    46b0:	20 93 09 29 	sts	0x2909, r18	; 0x802909 <SET_LONG_VALUE+0x6>
    46b4:	30 93 0a 29 	sts	0x290A, r19	; 0x80290a <SET_LONG_VALUE+0x7>
    46b8:	21 2f       	mov	r18, r17
    46ba:	30 e0       	ldi	r19, 0x00	; 0
    46bc:	20 93 0b 29 	sts	0x290B, r18	; 0x80290b <SET_LONG_VALUE+0x8>
    46c0:	30 93 0c 29 	sts	0x290C, r19	; 0x80290c <SET_LONG_VALUE+0x9>
    46c4:	89 2f       	mov	r24, r25
    46c6:	90 e0       	ldi	r25, 0x00	; 0
    46c8:	80 93 0d 29 	sts	0x290D, r24	; 0x80290d <SET_LONG_VALUE+0xa>
    46cc:	90 93 0e 29 	sts	0x290E, r25	; 0x80290e <SET_LONG_VALUE+0xb>
    46d0:	62 e2       	ldi	r22, 0x22	; 34
    46d2:	79 e2       	ldi	r23, 0x29	; 41
    46d4:	88 e7       	ldi	r24, 0x78	; 120
    46d6:	90 e0       	ldi	r25, 0x00	; 0
    46d8:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    46dc:	83 e7       	ldi	r24, 0x73	; 115
    46de:	90 e0       	ldi	r25, 0x00	; 0
    46e0:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    46e4:	90 e0       	ldi	r25, 0x00	; 0
    46e6:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <SET_VALUE+0x2>
    46ea:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <SET_VALUE+0x3>
    46ee:	85 e7       	ldi	r24, 0x75	; 117
    46f0:	90 e0       	ldi	r25, 0x00	; 0
    46f2:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    46f6:	90 e0       	ldi	r25, 0x00	; 0
    46f8:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <SET_VALUE+0x4>
    46fc:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <SET_VALUE+0x5>
    4700:	8d e7       	ldi	r24, 0x7D	; 125
    4702:	90 e0       	ldi	r25, 0x00	; 0
    4704:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    4708:	90 e0       	ldi	r25, 0x00	; 0
    470a:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <SET_VALUE+0x6>
    470e:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <SET_VALUE+0x7>
    4712:	82 e8       	ldi	r24, 0x82	; 130
    4714:	90 e0       	ldi	r25, 0x00	; 0
    4716:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    471a:	90 e0       	ldi	r25, 0x00	; 0
    471c:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <SET_VALUE+0x8>
    4720:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <SET_VALUE+0x9>
    4724:	87 e8       	ldi	r24, 0x87	; 135
    4726:	90 e0       	ldi	r25, 0x00	; 0
    4728:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <EEPROMClass::read(int) [clone .isra.0]>
    472c:	91 e0       	ldi	r25, 0x01	; 1
    472e:	81 11       	cpse	r24, r1
    4730:	01 c0       	rjmp	.+2      	; 0x4734 <main+0x5c4>
    4732:	90 e0       	ldi	r25, 0x00	; 0
    4734:	90 93 8e 28 	sts	0x288E, r25	; 0x80288e <Process_Interrupt_flag>
pinMode():
    4738:	62 e0       	ldi	r22, 0x02	; 2
    473a:	83 e2       	ldi	r24, 0x23	; 35
    473c:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4740:	62 e0       	ldi	r22, 0x02	; 2
    4742:	85 e2       	ldi	r24, 0x25	; 37
    4744:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4748:	62 e0       	ldi	r22, 0x02	; 2
    474a:	84 e2       	ldi	r24, 0x24	; 36
    474c:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
    4750:	62 e0       	ldi	r22, 0x02	; 2
    4752:	82 e2       	ldi	r24, 0x22	; 34
    4754:	0e 94 b6 06 	call	0xd6c	; 0xd6c <pinMode.part.1>
attachClick():
    4758:	83 e5       	ldi	r24, 0x53	; 83
    475a:	98 e1       	ldi	r25, 0x18	; 24
    475c:	80 93 f1 29 	sts	0x29F1, r24	; 0x8029f1 <button1+0xd>
    4760:	90 93 f2 29 	sts	0x29F2, r25	; 0x8029f2 <button1+0xe>
attachLongPressStart():
    4764:	80 e9       	ldi	r24, 0x90	; 144
    4766:	99 e0       	ldi	r25, 0x09	; 9
    4768:	80 93 f7 29 	sts	0x29F7, r24	; 0x8029f7 <button1+0x13>
    476c:	90 93 f8 29 	sts	0x29F8, r25	; 0x8029f8 <button1+0x14>
attachClick():
    4770:	8a e1       	ldi	r24, 0x1A	; 26
    4772:	96 e0       	ldi	r25, 0x06	; 6
    4774:	80 93 d2 29 	sts	0x29D2, r24	; 0x8029d2 <button2+0xd>
    4778:	90 93 d3 29 	sts	0x29D3, r25	; 0x8029d3 <button2+0xe>
attachDuringLongPress():
    477c:	86 e9       	ldi	r24, 0x96	; 150
    477e:	9d e0       	ldi	r25, 0x0D	; 13
    4780:	80 93 dc 29 	sts	0x29DC, r24	; 0x8029dc <button2+0x17>
    4784:	90 93 dd 29 	sts	0x29DD, r25	; 0x8029dd <button2+0x18>
attachClick():
    4788:	8f e5       	ldi	r24, 0x5F	; 95
    478a:	96 e0       	ldi	r25, 0x06	; 6
    478c:	80 93 b3 29 	sts	0x29B3, r24	; 0x8029b3 <button3+0xd>
    4790:	90 93 b4 29 	sts	0x29B4, r25	; 0x8029b4 <button3+0xe>
attachDuringLongPress():
    4794:	80 e8       	ldi	r24, 0x80	; 128
    4796:	9d e0       	ldi	r25, 0x0D	; 13
    4798:	80 93 bd 29 	sts	0x29BD, r24	; 0x8029bd <button3+0x17>
    479c:	90 93 be 29 	sts	0x29BE, r25	; 0x8029be <button3+0x18>
attachLongPressStop():
    47a0:	83 eb       	ldi	r24, 0xB3	; 179
    47a2:	96 e0       	ldi	r25, 0x06	; 6
    47a4:	80 93 bb 29 	sts	0x29BB, r24	; 0x8029bb <button3+0x15>
    47a8:	90 93 bc 29 	sts	0x29BC, r25	; 0x8029bc <button3+0x16>
attachClick():
    47ac:	85 eb       	ldi	r24, 0xB5	; 181
    47ae:	99 e0       	ldi	r25, 0x09	; 9
    47b0:	80 93 94 29 	sts	0x2994, r24	; 0x802994 <button4+0xd>
    47b4:	90 93 95 29 	sts	0x2995, r25	; 0x802995 <button4+0xe>
attachLongPressStart():
    47b8:	83 e1       	ldi	r24, 0x13	; 19
    47ba:	9a e0       	ldi	r25, 0x0A	; 10
    47bc:	80 93 9a 29 	sts	0x299A, r24	; 0x80299a <button4+0x13>
    47c0:	90 93 9b 29 	sts	0x299B, r25	; 0x80299b <button4+0x14>
setup():
    47c4:	83 e0       	ldi	r24, 0x03	; 3
    47c6:	9a e2       	ldi	r25, 0x2A	; 42
    47c8:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    47cc:	fe e1       	ldi	r31, 0x1E	; 30
    47ce:	4f 2e       	mov	r4, r31
    47d0:	51 2c       	mov	r5, r1
    47d2:	a9 e1       	ldi	r26, 0x19	; 25
    47d4:	6a 2e       	mov	r6, r26
    47d6:	71 2c       	mov	r7, r1
    47d8:	ba e0       	ldi	r27, 0x0A	; 10
    47da:	eb 2e       	mov	r14, r27
    47dc:	f1 2c       	mov	r15, r1
DISPLAY_DIGIT1():
    47de:	08 e1       	ldi	r16, 0x18	; 24
    47e0:	10 e0       	ldi	r17, 0x00	; 0
    47e2:	e8 e1       	ldi	r30, 0x18	; 24
    47e4:	2e 2e       	mov	r2, r30
    47e6:	31 2c       	mov	r3, r1
DISP_UPDATE():
    47e8:	86 ef       	ldi	r24, 0xF6	; 246
    47ea:	9a e2       	ldi	r25, 0x2A	; 42
    47ec:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
loop():
    47f0:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
    47f4:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    47f8:	88 23       	and	r24, r24
    47fa:	c1 f1       	breq	.+112    	; 0x486c <main+0x6fc>
    47fc:	83 e0       	ldi	r24, 0x03	; 3
    47fe:	9a e2       	ldi	r25, 0x2A	; 42
    4800:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
    4804:	89 e1       	ldi	r24, 0x19	; 25
    4806:	90 e0       	ldi	r25, 0x00	; 0
    4808:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
DISPLAY_DIGIT2():
    480c:	82 e2       	ldi	r24, 0x22	; 34
    480e:	90 e0       	ldi	r25, 0x00	; 0
    4810:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4814:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4818:	00 93 de 28 	sts	0x28DE, r16	; 0x8028de <digits2+0x2>
    481c:	10 93 df 28 	sts	0x28DF, r17	; 0x8028df <digits2+0x3>
    4820:	00 93 e0 28 	sts	0x28E0, r16	; 0x8028e0 <digits2+0x4>
    4824:	10 93 e1 28 	sts	0x28E1, r17	; 0x8028e1 <digits2+0x5>
    4828:	00 93 e2 28 	sts	0x28E2, r16	; 0x8028e2 <digits2+0x6>
    482c:	10 93 e3 28 	sts	0x28E3, r17	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    4830:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4834:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4838:	82 e0       	ldi	r24, 0x02	; 2
    483a:	90 e0       	ldi	r25, 0x00	; 0
    483c:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    4840:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4844:	10 92 e8 28 	sts	0x28E8, r1	; 0x8028e8 <digits1+0x4>
    4848:	10 92 e9 28 	sts	0x28E9, r1	; 0x8028e9 <digits1+0x5>
    484c:	83 e0       	ldi	r24, 0x03	; 3
    484e:	90 e0       	ldi	r25, 0x00	; 0
    4850:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    4854:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
loop():
    4858:	81 e0       	ldi	r24, 0x01	; 1
    485a:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
main():
    485e:	80 e0       	ldi	r24, 0x00	; 0
    4860:	90 e0       	ldi	r25, 0x00	; 0
    4862:	89 2b       	or	r24, r25
    4864:	09 f2       	breq	.-126    	; 0x47e8 <main+0x678>
    4866:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
    486a:	b9 cf       	rjmp	.-142    	; 0x47de <main+0x66e>
stop():
    486c:	10 92 03 2a 	sts	0x2A03, r1	; 0x802a03 <VersionDisplay>
    4870:	10 92 0e 2a 	sts	0x2A0E, r1	; 0x802a0e <VersionDisplay+0xb>
    4874:	10 92 0f 2a 	sts	0x2A0F, r1	; 0x802a0f <VersionDisplay+0xc>
    4878:	10 92 10 2a 	sts	0x2A10, r1	; 0x802a10 <VersionDisplay+0xd>
    487c:	10 92 11 2a 	sts	0x2A11, r1	; 0x802a11 <VersionDisplay+0xe>
    4880:	10 92 12 2a 	sts	0x2A12, r1	; 0x802a12 <VersionDisplay+0xf>
    4884:	10 92 13 2a 	sts	0x2A13, r1	; 0x802a13 <VersionDisplay+0x10>
loop():
    4888:	20 e0       	ldi	r18, 0x00	; 0
    488a:	30 e0       	ldi	r19, 0x00	; 0
    488c:	42 ee       	ldi	r20, 0xE2	; 226
    488e:	52 e4       	ldi	r21, 0x42	; 66
    4890:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    4894:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    4898:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    489c:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    48a0:	0e 94 e8 33 	call	0x67d0	; 0x67d0 <__gesf2>
    48a4:	87 fd       	sbrc	r24, 7
    48a6:	8c c0       	rjmp	.+280    	; 0x49c0 <main+0x850>
Probe_Error():
    48a8:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <DOT2_0>
    48ac:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <DOT2_2>
    48b0:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    48b4:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <DOT1_2>
    48b8:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    48bc:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    48c0:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    48c4:	10 92 37 29 	sts	0x2937, r1	; 0x802937 <PID_SETPOINT>
    48c8:	10 92 38 29 	sts	0x2938, r1	; 0x802938 <PID_SETPOINT+0x1>
    48cc:	10 92 39 29 	sts	0x2939, r1	; 0x802939 <PID_SETPOINT+0x2>
    48d0:	10 92 3a 29 	sts	0x293A, r1	; 0x80293a <PID_SETPOINT+0x3>
    48d4:	10 92 36 29 	sts	0x2936, r1	; 0x802936 <LONG_PRESS>
    48d8:	10 92 02 29 	sts	0x2902, r1	; 0x802902 <ENTER_BUT>
digitalWrite():
    48dc:	60 e0       	ldi	r22, 0x00	; 0
    48de:	8c e0       	ldi	r24, 0x0C	; 12
    48e0:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    48e4:	60 e0       	ldi	r22, 0x00	; 0
    48e6:	8d e0       	ldi	r24, 0x0D	; 13
    48e8:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    48ec:	8b e0       	ldi	r24, 0x0B	; 11
    48ee:	90 e0       	ldi	r25, 0x00	; 0
    48f0:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    48f4:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    48f8:	81 e1       	ldi	r24, 0x11	; 17
    48fa:	90 e0       	ldi	r25, 0x00	; 0
    48fc:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4900:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4904:	27 e1       	ldi	r18, 0x17	; 23
    4906:	30 e0       	ldi	r19, 0x00	; 0
    4908:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    490c:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    4910:	4e e0       	ldi	r20, 0x0E	; 14
    4912:	50 e0       	ldi	r21, 0x00	; 0
    4914:	40 93 e2 28 	sts	0x28E2, r20	; 0x8028e2 <digits2+0x6>
    4918:	50 93 e3 28 	sts	0x28E3, r21	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    491c:	4f e0       	ldi	r20, 0x0F	; 15
    491e:	50 e0       	ldi	r21, 0x00	; 0
    4920:	40 93 e4 28 	sts	0x28E4, r20	; 0x8028e4 <digits1>
    4924:	50 93 e5 28 	sts	0x28E5, r21	; 0x8028e5 <digits1+0x1>
    4928:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    492c:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4930:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits1+0x4>
    4934:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits1+0x5>
    4938:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    493c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
interval():
    4940:	80 91 ae 2a 	lds	r24, 0x2AAE	; 0x802aae <BUZZ_TICK2+0x9>
    4944:	90 91 af 2a 	lds	r25, 0x2AAF	; 0x802aaf <BUZZ_TICK2+0xa>
    4948:	89 2b       	or	r24, r25
    494a:	81 f1       	breq	.+96     	; 0x49ac <main+0x83c>
    494c:	88 ee       	ldi	r24, 0xE8	; 232
    494e:	93 e0       	ldi	r25, 0x03	; 3
    4950:	a0 e0       	ldi	r26, 0x00	; 0
    4952:	b0 e0       	ldi	r27, 0x00	; 0
    4954:	80 93 a6 2a 	sts	0x2AA6, r24	; 0x802aa6 <BUZZ_TICK2+0x1>
    4958:	90 93 a7 2a 	sts	0x2AA7, r25	; 0x802aa7 <BUZZ_TICK2+0x2>
    495c:	a0 93 a8 2a 	sts	0x2AA8, r26	; 0x802aa8 <BUZZ_TICK2+0x3>
    4960:	b0 93 a9 2a 	sts	0x2AA9, r27	; 0x802aa9 <BUZZ_TICK2+0x4>
    4964:	80 91 c9 2a 	lds	r24, 0x2AC9	; 0x802ac9 <BUZZ_TICK1+0x9>
    4968:	90 91 ca 2a 	lds	r25, 0x2ACA	; 0x802aca <BUZZ_TICK1+0xa>
    496c:	89 2b       	or	r24, r25
    496e:	19 f1       	breq	.+70     	; 0x49b6 <main+0x846>
    4970:	80 ed       	ldi	r24, 0xD0	; 208
    4972:	97 e0       	ldi	r25, 0x07	; 7
    4974:	a0 e0       	ldi	r26, 0x00	; 0
    4976:	b0 e0       	ldi	r27, 0x00	; 0
    4978:	80 93 c1 2a 	sts	0x2AC1, r24	; 0x802ac1 <BUZZ_TICK1+0x1>
    497c:	90 93 c2 2a 	sts	0x2AC2, r25	; 0x802ac2 <BUZZ_TICK1+0x2>
    4980:	a0 93 c3 2a 	sts	0x2AC3, r26	; 0x802ac3 <BUZZ_TICK1+0x3>
    4984:	b0 93 c4 2a 	sts	0x2AC4, r27	; 0x802ac4 <BUZZ_TICK1+0x4>
Probe_Error():
    4988:	80 91 99 28 	lds	r24, 0x2899	; 0x802899 <REP>
    498c:	90 91 9a 28 	lds	r25, 0x289A	; 0x80289a <REP+0x1>
    4990:	89 2b       	or	r24, r25
    4992:	09 f0       	breq	.+2      	; 0x4996 <main+0x826>
    4994:	64 cf       	rjmp	.-312    	; 0x485e <main+0x6ee>
BUZZ_TICK_START():
    4996:	80 ec       	ldi	r24, 0xC0	; 192
    4998:	9a e2       	ldi	r25, 0x2A	; 42
    499a:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
Probe_Error():
    499e:	81 e0       	ldi	r24, 0x01	; 1
    49a0:	90 e0       	ldi	r25, 0x00	; 0
    49a2:	80 93 99 28 	sts	0x2899, r24	; 0x802899 <REP>
    49a6:	90 93 9a 28 	sts	0x289A, r25	; 0x80289a <REP+0x1>
    49aa:	59 cf       	rjmp	.-334    	; 0x485e <main+0x6ee>
main():
    49ac:	80 e4       	ldi	r24, 0x40	; 64
    49ae:	92 e4       	ldi	r25, 0x42	; 66
    49b0:	af e0       	ldi	r26, 0x0F	; 15
    49b2:	b0 e0       	ldi	r27, 0x00	; 0
    49b4:	cf cf       	rjmp	.-98     	; 0x4954 <main+0x7e4>
    49b6:	80 e8       	ldi	r24, 0x80	; 128
    49b8:	94 e8       	ldi	r25, 0x84	; 132
    49ba:	ae e1       	ldi	r26, 0x1E	; 30
    49bc:	b0 e0       	ldi	r27, 0x00	; 0
    49be:	dc cf       	rjmp	.-72     	; 0x4978 <main+0x808>
digitalRead():
    49c0:	85 e2       	ldi	r24, 0x25	; 37
    49c2:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
    49c6:	d0 90 41 28 	lds	r13, 0x2841	; 0x802841 <but1>
but_check():
    49ca:	81 11       	cpse	r24, r1
    49cc:	42 c0       	rjmp	.+132    	; 0x4a52 <main+0x8e2>
digitalRead():
    49ce:	84 e2       	ldi	r24, 0x24	; 36
    49d0:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
but_check():
    49d4:	81 11       	cpse	r24, r1
    49d6:	3d c0       	rjmp	.+122    	; 0x4a52 <main+0x8e2>
    49d8:	d1 10       	cpse	r13, r1
    49da:	3b c0       	rjmp	.+118    	; 0x4a52 <main+0x8e2>
    49dc:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
    49e0:	60 93 3d 28 	sts	0x283D, r22	; 0x80283d <start_tt>
    49e4:	70 93 3e 28 	sts	0x283E, r23	; 0x80283e <start_tt+0x1>
    49e8:	80 93 3f 28 	sts	0x283F, r24	; 0x80283f <start_tt+0x2>
    49ec:	90 93 40 28 	sts	0x2840, r25	; 0x802840 <start_tt+0x3>
    49f0:	81 e0       	ldi	r24, 0x01	; 1
    49f2:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <but1>
loop():
    49f6:	80 91 36 29 	lds	r24, 0x2936	; 0x802936 <LONG_PRESS>
    49fa:	88 23       	and	r24, r24
    49fc:	11 f4       	brne	.+4      	; 0x4a02 <main+0x892>
    49fe:	0c 94 30 32 	jmp	0x6460	; 0x6460 <main+0x22f0>
digitalWrite():
    4a02:	60 e0       	ldi	r22, 0x00	; 0
    4a04:	8c e0       	ldi	r24, 0x0C	; 12
    4a06:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    4a0a:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4a0e:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    4a12:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    4a16:	88 23       	and	r24, r24
    4a18:	09 f4       	brne	.+2      	; 0x4a1c <main+0x8ac>
    4a1a:	1f c7       	rjmp	.+3646   	; 0x585a <main+0x16ea>
    4a1c:	e3 31       	cpi	r30, 0x13	; 19
    4a1e:	f1 05       	cpc	r31, r1
    4a20:	08 f0       	brcs	.+2      	; 0x4a24 <main+0x8b4>
    4a22:	1d cf       	rjmp	.-454    	; 0x485e <main+0x6ee>
    4a24:	ea 5e       	subi	r30, 0xEA	; 234
    4a26:	fa 4d       	sbci	r31, 0xDA	; 218
    4a28:	0c 94 a0 34 	jmp	0x6940	; 0x6940 <__tablejump2__>
    4a2c:	7d 25       	eor	r23, r13
    4a2e:	d6 25       	eor	r29, r6
    4a30:	14 26       	eor	r1, r20
    4a32:	7f 26       	eor	r7, r31
    4a34:	eb 26       	eor	r14, r27
    4a36:	39 27       	eor	r19, r25
    4a38:	88 27       	eor	r24, r24
    4a3a:	c9 27       	eor	r28, r25
    4a3c:	f6 27       	eor	r31, r22
    4a3e:	43 28       	or	r4, r3
    4a40:	92 28       	or	r9, r2
    4a42:	d7 28       	or	r13, r7
    4a44:	19 29       	or	r17, r9
    4a46:	92 29       	or	r25, r2
    4a48:	c4 29       	or	r28, r4
    4a4a:	3c 2a       	or	r3, r28
    4a4c:	41 2a       	or	r4, r17
    4a4e:	6e 2a       	or	r6, r30
    4a50:	a1 2a       	or	r10, r17
digitalRead():
    4a52:	85 e2       	ldi	r24, 0x25	; 37
    4a54:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
but_check():
    4a58:	88 23       	and	r24, r24
    4a5a:	61 f0       	breq	.+24     	; 0x4a74 <main+0x904>
    4a5c:	dd 20       	and	r13, r13
    4a5e:	09 f4       	brne	.+2      	; 0x4a62 <main+0x8f2>
    4a60:	ca cf       	rjmp	.-108    	; 0x49f6 <main+0x886>
digitalRead():
    4a62:	85 e2       	ldi	r24, 0x25	; 37
    4a64:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
but_check():
    4a68:	81 30       	cpi	r24, 0x01	; 1
    4a6a:	09 f0       	breq	.+2      	; 0x4a6e <main+0x8fe>
    4a6c:	3f c0       	rjmp	.+126    	; 0x4aec <main+0x97c>
    4a6e:	10 92 41 28 	sts	0x2841, r1	; 0x802841 <but1>
    4a72:	c1 cf       	rjmp	.-126    	; 0x49f6 <main+0x886>
    4a74:	c0 90 36 29 	lds	r12, 0x2936	; 0x802936 <LONG_PRESS>
digitalRead():
    4a78:	84 e2       	ldi	r24, 0x24	; 36
    4a7a:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
but_check():
    4a7e:	81 11       	cpse	r24, r1
    4a80:	ed cf       	rjmp	.-38     	; 0x4a5c <main+0x8ec>
    4a82:	dd 20       	and	r13, r13
    4a84:	09 f4       	brne	.+2      	; 0x4a88 <main+0x918>
    4a86:	b7 cf       	rjmp	.-146    	; 0x49f6 <main+0x886>
    4a88:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <millis>
    4a8c:	80 90 3d 28 	lds	r8, 0x283D	; 0x80283d <start_tt>
    4a90:	90 90 3e 28 	lds	r9, 0x283E	; 0x80283e <start_tt+0x1>
    4a94:	a0 90 3f 28 	lds	r10, 0x283F	; 0x80283f <start_tt+0x2>
    4a98:	b0 90 40 28 	lds	r11, 0x2840	; 0x802840 <start_tt+0x3>
    4a9c:	68 19       	sub	r22, r8
    4a9e:	79 09       	sbc	r23, r9
    4aa0:	8a 09       	sbc	r24, r10
    4aa2:	9b 09       	sbc	r25, r11
    4aa4:	68 3b       	cpi	r22, 0xB8	; 184
    4aa6:	7b 40       	sbci	r23, 0x0B	; 11
    4aa8:	81 05       	cpc	r24, r1
    4aaa:	91 05       	cpc	r25, r1
    4aac:	08 f4       	brcc	.+2      	; 0x4ab0 <main+0x940>
    4aae:	a3 cf       	rjmp	.-186    	; 0x49f6 <main+0x886>
    4ab0:	84 ef       	ldi	r24, 0xF4	; 244
    4ab2:	91 e0       	ldi	r25, 0x01	; 1
    4ab4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.55]>
    4ab8:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <ENTER_BUT>
    4abc:	81 11       	cpse	r24, r1
    4abe:	9b cf       	rjmp	.-202    	; 0x49f6 <main+0x886>
    4ac0:	c1 10       	cpse	r12, r1
    4ac2:	9f cf       	rjmp	.-194    	; 0x4a02 <main+0x892>
    4ac4:	8e e5       	ldi	r24, 0x5E	; 94
    4ac6:	91 e0       	ldi	r25, 0x01	; 1
    4ac8:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <i>
    4acc:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <i+0x1>
    4ad0:	81 e0       	ldi	r24, 0x01	; 1
    4ad2:	80 93 36 29 	sts	0x2936, r24	; 0x802936 <LONG_PRESS>
    4ad6:	80 93 3c 28 	sts	0x283C, r24	; 0x80283c <RST_BUTT>
    4ada:	80 93 3b 28 	sts	0x283B, r24	; 0x80283b <Service_Menu>
    4ade:	85 e0       	ldi	r24, 0x05	; 5
    4ae0:	90 e0       	ldi	r25, 0x00	; 0
    4ae2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    4ae6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    4aea:	85 cf       	rjmp	.-246    	; 0x49f6 <main+0x886>
digitalRead():
    4aec:	84 e2       	ldi	r24, 0x24	; 36
    4aee:	0e 94 9a 07 	call	0xf34	; 0xf34 <digitalRead.part.3>
but_check():
    4af2:	81 30       	cpi	r24, 0x01	; 1
    4af4:	09 f0       	breq	.+2      	; 0x4af8 <main+0x988>
    4af6:	7f cf       	rjmp	.-258    	; 0x49f6 <main+0x886>
    4af8:	ba cf       	rjmp	.-140    	; 0x4a6e <main+0x8fe>
SET_LONG_PRESS_FUNCTION():
    4afa:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    4afe:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    4b02:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    4b06:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4b0a:	8c e0       	ldi	r24, 0x0C	; 12
    4b0c:	90 e0       	ldi	r25, 0x00	; 0
    4b0e:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4b12:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4b16:	80 e1       	ldi	r24, 0x10	; 16
    4b18:	90 e0       	ldi	r25, 0x00	; 0
    4b1a:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4b1e:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4b22:	60 92 e0 28 	sts	0x28E0, r6	; 0x8028e0 <digits2+0x4>
    4b26:	70 92 e1 28 	sts	0x28E1, r7	; 0x8028e1 <digits2+0x5>
    4b2a:	81 e1       	ldi	r24, 0x11	; 17
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4b32:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4b36:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4b3a:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4b3e:	89 31       	cpi	r24, 0x19	; 25
    4b40:	91 05       	cpc	r25, r1
    4b42:	4c f4       	brge	.+18     	; 0x4b56 <main+0x9e6>
DISPLAY_DIGIT1():
    4b44:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4b48:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4b4c:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    4b50:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    4b54:	04 c7       	rjmp	.+3592   	; 0x595e <main+0x17ee>
SET_LONG_PRESS_FUNCTION():
    4b56:	20 91 03 29 	lds	r18, 0x2903	; 0x802903 <SET_LONG_VALUE>
    4b5a:	30 91 04 29 	lds	r19, 0x2904	; 0x802904 <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    4b5e:	10 92 e4 28 	sts	0x28E4, r1	; 0x8028e4 <digits1>
    4b62:	10 92 e5 28 	sts	0x28E5, r1	; 0x8028e5 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    4b66:	23 2b       	or	r18, r19
    4b68:	b1 f4       	brne	.+44     	; 0x4b96 <main+0xa26>
DISPLAY_DIGIT1():
    4b6a:	25 e1       	ldi	r18, 0x15	; 21
    4b6c:	30 e0       	ldi	r19, 0x00	; 0
    4b6e:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    4b72:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    4b76:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits1+0x4>
    4b7a:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits1+0x5>
    4b7e:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits1+0x6>
    4b82:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    4b86:	c3 97       	sbiw	r24, 0x33	; 51
    4b88:	0c f4       	brge	.+2      	; 0x4b8c <main+0xa1c>
    4b8a:	69 ce       	rjmp	.-814    	; 0x485e <main+0x6ee>
    4b8c:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    4b90:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    4b94:	64 ce       	rjmp	.-824    	; 0x485e <main+0x6ee>
DISPLAY_DIGIT1():
    4b96:	24 e1       	ldi	r18, 0x14	; 20
    4b98:	30 e0       	ldi	r19, 0x00	; 0
    4b9a:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    4b9e:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    4ba2:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    4ba6:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    4baa:	e9 cf       	rjmp	.-46     	; 0x4b7e <main+0xa0e>
SET_LONG_PRESS_FUNCTION():
    4bac:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    4bb0:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    4bb4:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
DISPLAY_DIGIT2():
    4bb8:	8c e1       	ldi	r24, 0x1C	; 28
    4bba:	90 e0       	ldi	r25, 0x00	; 0
    4bbc:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4bc0:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4bc4:	84 e1       	ldi	r24, 0x14	; 20
    4bc6:	90 e0       	ldi	r25, 0x00	; 0
    4bc8:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4bcc:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4bd0:	60 92 e0 28 	sts	0x28E0, r6	; 0x8028e0 <digits2+0x4>
    4bd4:	70 92 e1 28 	sts	0x28E1, r7	; 0x8028e1 <digits2+0x5>
    4bd8:	80 e1       	ldi	r24, 0x10	; 16
    4bda:	90 e0       	ldi	r25, 0x00	; 0
    4bdc:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4be0:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4be4:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4be8:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4bec:	89 31       	cpi	r24, 0x19	; 25
    4bee:	91 05       	cpc	r25, r1
    4bf0:	0c f4       	brge	.+2      	; 0x4bf4 <main+0xa84>
    4bf2:	a8 cf       	rjmp	.-176    	; 0x4b44 <main+0x9d4>
    4bf4:	20 91 05 29 	lds	r18, 0x2905	; 0x802905 <SET_LONG_VALUE+0x2>
    4bf8:	30 91 06 29 	lds	r19, 0x2906	; 0x802906 <SET_LONG_VALUE+0x3>
    4bfc:	23 2b       	or	r18, r19
    4bfe:	59 f4       	brne	.+22     	; 0x4c16 <main+0xaa6>
DISPLAY_DIGIT1():
    4c00:	2d e1       	ldi	r18, 0x1D	; 29
    4c02:	30 e0       	ldi	r19, 0x00	; 0
    4c04:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    4c08:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    4c0c:	e0 92 e6 28 	sts	0x28E6, r14	; 0x8028e6 <digits1+0x2>
    4c10:	f0 92 e7 28 	sts	0x28E7, r15	; 0x8028e7 <digits1+0x3>
    4c14:	c6 cf       	rjmp	.-116    	; 0x4ba2 <main+0xa32>
    4c16:	2d e1       	ldi	r18, 0x1D	; 29
    4c18:	30 e0       	ldi	r19, 0x00	; 0
    4c1a:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    4c1e:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    4c22:	25 e1       	ldi	r18, 0x15	; 21
    4c24:	30 e0       	ldi	r19, 0x00	; 0
    4c26:	b9 cf       	rjmp	.-142    	; 0x4b9a <main+0xa2a>
SET_LONG_PRESS_FUNCTION():
    4c28:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    4c2c:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
DISPLAY_DIGIT2():
    4c30:	8c e0       	ldi	r24, 0x0C	; 12
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4c38:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4c3c:	8d e0       	ldi	r24, 0x0D	; 13
    4c3e:	90 e0       	ldi	r25, 0x00	; 0
    4c40:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4c44:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4c48:	85 e1       	ldi	r24, 0x15	; 21
    4c4a:	90 e0       	ldi	r25, 0x00	; 0
    4c4c:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    4c50:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    4c54:	8f e0       	ldi	r24, 0x0F	; 15
    4c56:	90 e0       	ldi	r25, 0x00	; 0
    4c58:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4c5c:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
    4c60:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    4c64:	20 91 89 28 	lds	r18, 0x2889	; 0x802889 <i>
    4c68:	30 91 8a 28 	lds	r19, 0x288A	; 0x80288a <i+0x1>
    4c6c:	29 31       	cpi	r18, 0x19	; 25
    4c6e:	31 05       	cpc	r19, r1
    4c70:	d4 f4       	brge	.+52     	; 0x4ca6 <main+0xb36>
    4c72:	90 91 87 28 	lds	r25, 0x2887	; 0x802887 <BLINK_STATS>
    4c76:	91 11       	cpse	r25, r1
    4c78:	11 c0       	rjmp	.+34     	; 0x4c9c <main+0xb2c>
DISPLAY_DIGIT1():
    4c7a:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4c7e:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4c82:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    4c86:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    4c8a:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    4c8e:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    4c92:	88 23       	and	r24, r24
    4c94:	f1 f0       	breq	.+60     	; 0x4cd2 <main+0xb62>
    4c96:	85 e1       	ldi	r24, 0x15	; 21
    4c98:	90 e0       	ldi	r25, 0x00	; 0
    4c9a:	81 c0       	rjmp	.+258    	; 0x4d9e <main+0xc2e>
    4c9c:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    4ca0:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    4ca4:	f6 cf       	rjmp	.-20     	; 0x4c92 <main+0xb22>
    4ca6:	81 11       	cpse	r24, r1
    4ca8:	19 c0       	rjmp	.+50     	; 0x4cdc <main+0xb6c>
    4caa:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <SET_LONG_VALUE+0x4>
    4cae:	90 91 08 29 	lds	r25, 0x2908	; 0x802908 <SET_LONG_VALUE+0x5>
    4cb2:	2a e0       	ldi	r18, 0x0A	; 10
    4cb4:	28 9f       	mul	r18, r24
    4cb6:	b0 01       	movw	r22, r0
    4cb8:	29 9f       	mul	r18, r25
    4cba:	70 0d       	add	r23, r0
    4cbc:	11 24       	eor	r1, r1
    4cbe:	07 2e       	mov	r0, r23
    4cc0:	00 0c       	add	r0, r0
    4cc2:	88 0b       	sbc	r24, r24
    4cc4:	99 0b       	sbc	r25, r25
    4cc6:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    4cca:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4cce:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4cd2:	e0 92 ea 28 	sts	0x28EA, r14	; 0x8028ea <digits1+0x6>
    4cd6:	f0 92 eb 28 	sts	0x28EB, r15	; 0x8028eb <digits1+0x7>
    4cda:	65 c0       	rjmp	.+202    	; 0x4da6 <main+0xc36>
    4cdc:	80 91 29 29 	lds	r24, 0x2929	; 0x802929 <SET_LONG_VALUE+0x26>
    4ce0:	90 91 2a 29 	lds	r25, 0x292A	; 0x80292a <SET_LONG_VALUE+0x27>
    4ce4:	2a e0       	ldi	r18, 0x0A	; 10
    4ce6:	28 9f       	mul	r18, r24
    4ce8:	b0 01       	movw	r22, r0
    4cea:	29 9f       	mul	r18, r25
    4cec:	70 0d       	add	r23, r0
    4cee:	11 24       	eor	r1, r1
    4cf0:	07 2e       	mov	r0, r23
    4cf2:	00 0c       	add	r0, r0
    4cf4:	88 0b       	sbc	r24, r24
    4cf6:	99 0b       	sbc	r25, r25
    4cf8:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    4cfc:	cc cf       	rjmp	.-104    	; 0x4c96 <main+0xb26>
    4cfe:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    4d02:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    4d06:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    4d0a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4d0e:	80 e1       	ldi	r24, 0x10	; 16
    4d10:	90 e0       	ldi	r25, 0x00	; 0
    4d12:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4d16:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4d1a:	60 92 de 28 	sts	0x28DE, r6	; 0x8028de <digits2+0x2>
    4d1e:	70 92 df 28 	sts	0x28DF, r7	; 0x8028df <digits2+0x3>
    4d22:	22 e1       	ldi	r18, 0x12	; 18
    4d24:	30 e0       	ldi	r19, 0x00	; 0
    4d26:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    4d2a:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    4d2e:	2f e0       	ldi	r18, 0x0F	; 15
    4d30:	30 e0       	ldi	r19, 0x00	; 0
    4d32:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    4d36:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4d3a:	20 91 89 28 	lds	r18, 0x2889	; 0x802889 <i>
    4d3e:	30 91 8a 28 	lds	r19, 0x288A	; 0x80288a <i+0x1>
    4d42:	29 31       	cpi	r18, 0x19	; 25
    4d44:	31 05       	cpc	r19, r1
    4d46:	ac f4       	brge	.+42     	; 0x4d72 <main+0xc02>
    4d48:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    4d4c:	81 11       	cpse	r24, r1
    4d4e:	5d c2       	rjmp	.+1210   	; 0x520a <main+0x109a>
DISPLAY_DIGIT1():
    4d50:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4d54:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4d58:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    4d5c:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    4d60:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    4d64:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    4d68:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits1+0x6>
    4d6c:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits1+0x7>
    4d70:	1a c0       	rjmp	.+52     	; 0x4da6 <main+0xc36>
SET_LONG_PRESS_FUNCTION():
    4d72:	20 91 09 29 	lds	r18, 0x2909	; 0x802909 <SET_LONG_VALUE+0x6>
    4d76:	30 91 0a 29 	lds	r19, 0x290A	; 0x80290a <SET_LONG_VALUE+0x7>
    4d7a:	23 2b       	or	r18, r19
    4d7c:	c9 f4       	brne	.+50     	; 0x4db0 <main+0xc40>
DISPLAY_DIGIT1():
    4d7e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    4d82:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    4d86:	27 e1       	ldi	r18, 0x17	; 23
    4d88:	30 e0       	ldi	r19, 0x00	; 0
    4d8a:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    4d8e:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    4d92:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4d96:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4d9a:	8f e1       	ldi	r24, 0x1F	; 31
    4d9c:	90 e0       	ldi	r25, 0x00	; 0
    4d9e:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    4da2:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    4da6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4daa:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4dae:	eb ce       	rjmp	.-554    	; 0x4b86 <main+0xa16>
DISPLAY_DIGIT1():
    4db0:	8c e0       	ldi	r24, 0x0C	; 12
    4db2:	90 e0       	ldi	r25, 0x00	; 0
    4db4:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    4db8:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    4dbc:	87 e1       	ldi	r24, 0x17	; 23
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    4dc4:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4dc8:	8d e0       	ldi	r24, 0x0D	; 13
    4dca:	90 e0       	ldi	r25, 0x00	; 0
    4dcc:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4dd0:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4dd4:	7e cf       	rjmp	.-260    	; 0x4cd2 <main+0xb62>
SET_LONG_PRESS_FUNCTION():
    4dd6:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4dda:	8b e0       	ldi	r24, 0x0B	; 11
    4ddc:	90 e0       	ldi	r25, 0x00	; 0
    4dde:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4de2:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4de6:	81 e1       	ldi	r24, 0x11	; 17
    4de8:	90 e0       	ldi	r25, 0x00	; 0
    4dea:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4dee:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4df2:	87 e1       	ldi	r24, 0x17	; 23
    4df4:	90 e0       	ldi	r25, 0x00	; 0
    4df6:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    4dfa:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    4dfe:	8c e0       	ldi	r24, 0x0C	; 12
    4e00:	90 e0       	ldi	r25, 0x00	; 0
    4e02:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4e06:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4e0a:	20 91 89 28 	lds	r18, 0x2889	; 0x802889 <i>
    4e0e:	30 91 8a 28 	lds	r19, 0x288A	; 0x80288a <i+0x1>
    4e12:	29 31       	cpi	r18, 0x19	; 25
    4e14:	31 05       	cpc	r19, r1
    4e16:	0c f4       	brge	.+2      	; 0x4e1a <main+0xcaa>
    4e18:	97 cf       	rjmp	.-210    	; 0x4d48 <main+0xbd8>
    4e1a:	20 91 0b 29 	lds	r18, 0x290B	; 0x80290b <SET_LONG_VALUE+0x8>
    4e1e:	30 91 0c 29 	lds	r19, 0x290C	; 0x80290c <SET_LONG_VALUE+0x9>
    4e22:	23 2b       	or	r18, r19
    4e24:	89 f4       	brne	.+34     	; 0x4e48 <main+0xcd8>
DISPLAY_DIGIT1():
    4e26:	20 e2       	ldi	r18, 0x20	; 32
    4e28:	30 e0       	ldi	r19, 0x00	; 0
    4e2a:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    4e2e:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    4e32:	60 92 e6 28 	sts	0x28E6, r6	; 0x8028e6 <digits1+0x2>
    4e36:	70 92 e7 28 	sts	0x28E7, r7	; 0x8028e7 <digits1+0x3>
    4e3a:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4e3e:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4e42:	8e e0       	ldi	r24, 0x0E	; 14
    4e44:	90 e0       	ldi	r25, 0x00	; 0
    4e46:	ab cf       	rjmp	.-170    	; 0x4d9e <main+0xc2e>
    4e48:	8f e0       	ldi	r24, 0x0F	; 15
    4e4a:	90 e0       	ldi	r25, 0x00	; 0
    4e4c:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    4e50:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    4e54:	84 e1       	ldi	r24, 0x14	; 20
    4e56:	90 e0       	ldi	r25, 0x00	; 0
    4e58:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    4e5c:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4e60:	8e e0       	ldi	r24, 0x0E	; 14
    4e62:	90 e0       	ldi	r25, 0x00	; 0
    4e64:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4e68:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4e6c:	8a e1       	ldi	r24, 0x1A	; 26
    4e6e:	90 e0       	ldi	r25, 0x00	; 0
    4e70:	96 cf       	rjmp	.-212    	; 0x4d9e <main+0xc2e>
SET_LONG_PRESS_FUNCTION():
    4e72:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    4e76:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    4e7a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4e7e:	8b e0       	ldi	r24, 0x0B	; 11
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    4e86:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    4e8a:	81 e1       	ldi	r24, 0x11	; 17
    4e8c:	90 e0       	ldi	r25, 0x00	; 0
    4e8e:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4e92:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4e96:	80 e2       	ldi	r24, 0x20	; 32
    4e98:	90 e0       	ldi	r25, 0x00	; 0
    4e9a:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    4e9e:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    4ea2:	80 e1       	ldi	r24, 0x10	; 16
    4ea4:	90 e0       	ldi	r25, 0x00	; 0
    4ea6:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4eaa:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4eae:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4eb2:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4eb6:	49 97       	sbiw	r24, 0x19	; 25
    4eb8:	0c f4       	brge	.+2      	; 0x4ebc <main+0xd4c>
    4eba:	46 cf       	rjmp	.-372    	; 0x4d48 <main+0xbd8>
    4ebc:	80 91 0d 29 	lds	r24, 0x290D	; 0x80290d <SET_LONG_VALUE+0xa>
    4ec0:	90 91 0e 29 	lds	r25, 0x290E	; 0x80290e <SET_LONG_VALUE+0xb>
    4ec4:	89 2b       	or	r24, r25
    4ec6:	99 f0       	breq	.+38     	; 0x4eee <main+0xd7e>
DISPLAY_DIGIT1():
    4ec8:	84 e2       	ldi	r24, 0x24	; 36
    4eca:	90 e0       	ldi	r25, 0x00	; 0
    4ecc:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    4ed0:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    4ed4:	8a e1       	ldi	r24, 0x1A	; 26
    4ed6:	90 e0       	ldi	r25, 0x00	; 0
    4ed8:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    4edc:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4ee0:	8c e0       	ldi	r24, 0x0C	; 12
    4ee2:	90 e0       	ldi	r25, 0x00	; 0
    4ee4:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4ee8:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4eec:	3d cf       	rjmp	.-390    	; 0x4d68 <main+0xbf8>
    4eee:	84 e2       	ldi	r24, 0x24	; 36
    4ef0:	90 e0       	ldi	r25, 0x00	; 0
    4ef2:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    4ef6:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    4efa:	8a e1       	ldi	r24, 0x1A	; 26
    4efc:	90 e0       	ldi	r25, 0x00	; 0
    4efe:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    4f02:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    4f06:	e0 92 e8 28 	sts	0x28E8, r14	; 0x8028e8 <digits1+0x4>
    4f0a:	f0 92 e9 28 	sts	0x28E9, r15	; 0x8028e9 <digits1+0x5>
    4f0e:	2c cf       	rjmp	.-424    	; 0x4d68 <main+0xbf8>
SET_LONG_PRESS_FUNCTION():
    4f10:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    4f14:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4f18:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    4f1c:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    4f20:	2d e0       	ldi	r18, 0x0D	; 13
    4f22:	30 e0       	ldi	r19, 0x00	; 0
    4f24:	20 93 de 28 	sts	0x28DE, r18	; 0x8028de <digits2+0x2>
    4f28:	30 93 df 28 	sts	0x28DF, r19	; 0x8028df <digits2+0x3>
    4f2c:	8a e1       	ldi	r24, 0x1A	; 26
    4f2e:	90 e0       	ldi	r25, 0x00	; 0
    4f30:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    4f34:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    4f38:	4e e0       	ldi	r20, 0x0E	; 14
    4f3a:	50 e0       	ldi	r21, 0x00	; 0
    4f3c:	40 93 e2 28 	sts	0x28E2, r20	; 0x8028e2 <digits2+0x6>
    4f40:	50 93 e3 28 	sts	0x28E3, r21	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4f44:	40 91 89 28 	lds	r20, 0x2889	; 0x802889 <i>
    4f48:	50 91 8a 28 	lds	r21, 0x288A	; 0x80288a <i+0x1>
    4f4c:	49 31       	cpi	r20, 0x19	; 25
    4f4e:	51 05       	cpc	r21, r1
    4f50:	0c f4       	brge	.+2      	; 0x4f54 <main+0xde4>
    4f52:	f8 cd       	rjmp	.-1040   	; 0x4b44 <main+0x9d4>
    4f54:	60 91 0f 29 	lds	r22, 0x290F	; 0x80290f <SET_LONG_VALUE+0xc>
    4f58:	70 91 10 29 	lds	r23, 0x2910	; 0x802910 <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    4f5c:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits1>
    4f60:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits1+0x1>
    4f64:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    4f68:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    4f6c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    4f70:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    4f74:	82 e0       	ldi	r24, 0x02	; 2
    4f76:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    4f78:	67 2b       	or	r22, r23
    4f7a:	11 f4       	brne	.+4      	; 0x4f80 <main+0xe10>
DISPLAY_DIGIT1():
    4f7c:	81 e0       	ldi	r24, 0x01	; 1
    4f7e:	90 e0       	ldi	r25, 0x00	; 0
    4f80:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    4f84:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    4f88:	43 33       	cpi	r20, 0x33	; 51
    4f8a:	51 05       	cpc	r21, r1
    4f8c:	0c f0       	brlt	.+2      	; 0x4f90 <main+0xe20>
    4f8e:	fe cd       	rjmp	.-1028   	; 0x4b8c <main+0xa1c>
    4f90:	66 cc       	rjmp	.-1844   	; 0x485e <main+0x6ee>
    4f92:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    4f96:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    4f9a:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    4f9e:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    4fa2:	8d e0       	ldi	r24, 0x0D	; 13
    4fa4:	90 e0       	ldi	r25, 0x00	; 0
    4fa6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    4faa:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    4fae:	8a e1       	ldi	r24, 0x1A	; 26
    4fb0:	90 e0       	ldi	r25, 0x00	; 0
    4fb2:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    4fb6:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    4fba:	81 e0       	ldi	r24, 0x01	; 1
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    4fc2:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    4fc6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4fca:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4fce:	49 97       	sbiw	r24, 0x19	; 25
    4fd0:	04 f5       	brge	.+64     	; 0x5012 <main+0xea2>
    4fd2:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    4fd6:	81 11       	cpse	r24, r1
    4fd8:	d2 c1       	rjmp	.+932    	; 0x537e <main+0x120e>
    4fda:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    4fde:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    4fe2:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    4fe6:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    4fea:	73 ce       	rjmp	.-794    	; 0x4cd2 <main+0xb62>
    4fec:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    4ff0:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    4ff4:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    4ff8:	21 11       	cpse	r18, r1
    4ffa:	28 c0       	rjmp	.+80     	; 0x504c <main+0xedc>
    4ffc:	49 97       	sbiw	r24, 0x19	; 25
    4ffe:	4c f4       	brge	.+18     	; 0x5012 <main+0xea2>
    5000:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    5004:	81 11       	cpse	r24, r1
    5006:	bb c1       	rjmp	.+886    	; 0x537e <main+0x120e>
    5008:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    500c:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    5010:	60 ce       	rjmp	.-832    	; 0x4cd2 <main+0xb62>
    5012:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_LONG_VALUE+0xe>
    5016:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_LONG_VALUE+0xf>
    501a:	24 e6       	ldi	r18, 0x64	; 100
    501c:	28 9f       	mul	r18, r24
    501e:	b0 01       	movw	r22, r0
    5020:	29 9f       	mul	r18, r25
    5022:	70 0d       	add	r23, r0
    5024:	11 24       	eor	r1, r1
    5026:	20 91 13 29 	lds	r18, 0x2913	; 0x802913 <SET_LONG_VALUE+0x10>
    502a:	30 91 14 29 	lds	r19, 0x2914	; 0x802914 <SET_LONG_VALUE+0x11>
    502e:	4a e0       	ldi	r20, 0x0A	; 10
    5030:	42 9f       	mul	r20, r18
    5032:	c0 01       	movw	r24, r0
    5034:	43 9f       	mul	r20, r19
    5036:	90 0d       	add	r25, r0
    5038:	11 24       	eor	r1, r1
    503a:	68 0f       	add	r22, r24
    503c:	79 1f       	adc	r23, r25
    503e:	07 2e       	mov	r0, r23
    5040:	00 0c       	add	r0, r0
    5042:	88 0b       	sbc	r24, r24
    5044:	99 0b       	sbc	r25, r25
    5046:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    504a:	43 ce       	rjmp	.-890    	; 0x4cd2 <main+0xb62>
    504c:	49 97       	sbiw	r24, 0x19	; 25
    504e:	b4 f4       	brge	.+44     	; 0x507c <main+0xf0c>
    5050:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    5054:	81 11       	cpse	r24, r1
    5056:	0d c0       	rjmp	.+26     	; 0x5072 <main+0xf02>
DISPLAY_DIGIT1():
    5058:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    505c:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    5060:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    5064:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    5068:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    506c:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    5070:	12 ce       	rjmp	.-988    	; 0x4c96 <main+0xb26>
SET_LONG_PRESS_FUNCTION():
    5072:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    5076:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    507a:	0d ce       	rjmp	.-998    	; 0x4c96 <main+0xb26>
    507c:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0x28>
    5080:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0x29>
    5084:	2f ce       	rjmp	.-930    	; 0x4ce4 <main+0xb74>
    5086:	dd 24       	eor	r13, r13
    5088:	d3 94       	inc	r13
    508a:	d0 92 a3 28 	sts	0x28A3, r13	; 0x8028a3 <DOT1_0>
    508e:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5092:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    5096:	d0 92 97 28 	sts	0x2897, r13	; 0x802897 <CAL2_START>
DISPLAY_DIGIT2():
    509a:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    509e:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    50a2:	8d e0       	ldi	r24, 0x0D	; 13
    50a4:	90 e0       	ldi	r25, 0x00	; 0
    50a6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    50aa:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    50ae:	8a e1       	ldi	r24, 0x1A	; 26
    50b0:	90 e0       	ldi	r25, 0x00	; 0
    50b2:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    50b6:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    50ba:	82 e0       	ldi	r24, 0x02	; 2
    50bc:	90 e0       	ldi	r25, 0x00	; 0
    50be:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    50c2:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    50c6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    50ca:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    50ce:	49 97       	sbiw	r24, 0x19	; 25
    50d0:	c4 f4       	brge	.+48     	; 0x5102 <main+0xf92>
    50d2:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    50d6:	81 11       	cpse	r24, r1
    50d8:	0f c0       	rjmp	.+30     	; 0x50f8 <main+0xf88>
DISPLAY_DIGIT1():
    50da:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    50de:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    50e2:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    50e6:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    50ea:	8a e1       	ldi	r24, 0x1A	; 26
    50ec:	90 e0       	ldi	r25, 0x00	; 0
    50ee:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    50f2:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    50f6:	ed cd       	rjmp	.-1062   	; 0x4cd2 <main+0xb62>
    50f8:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    50fc:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    5100:	f4 cf       	rjmp	.-24     	; 0x50ea <main+0xf7a>
    5102:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_LONG_VALUE+0x12>
    5106:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_LONG_VALUE+0x13>
    510a:	2a e0       	ldi	r18, 0x0A	; 10
    510c:	28 9f       	mul	r18, r24
    510e:	b0 01       	movw	r22, r0
    5110:	29 9f       	mul	r18, r25
    5112:	70 0d       	add	r23, r0
    5114:	11 24       	eor	r1, r1
    5116:	07 2e       	mov	r0, r23
    5118:	00 0c       	add	r0, r0
    511a:	88 0b       	sbc	r24, r24
    511c:	99 0b       	sbc	r25, r25
    511e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5122:	e3 cf       	rjmp	.-58     	; 0x50ea <main+0xf7a>
    5124:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5128:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    512c:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5130:	8d e0       	ldi	r24, 0x0D	; 13
    5132:	90 e0       	ldi	r25, 0x00	; 0
    5134:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5138:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    513c:	8a e1       	ldi	r24, 0x1A	; 26
    513e:	90 e0       	ldi	r25, 0x00	; 0
    5140:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5144:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5148:	82 e0       	ldi	r24, 0x02	; 2
    514a:	90 e0       	ldi	r25, 0x00	; 0
    514c:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5150:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5154:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    5158:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    515c:	49 97       	sbiw	r24, 0x19	; 25
    515e:	b4 f4       	brge	.+44     	; 0x518c <main+0x101c>
    5160:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    5164:	81 11       	cpse	r24, r1
    5166:	0d c0       	rjmp	.+26     	; 0x5182 <main+0x1012>
DISPLAY_DIGIT1():
    5168:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    516c:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    5170:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    5174:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5178:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits1>
    517c:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits1+0x1>
    5180:	a8 cd       	rjmp	.-1200   	; 0x4cd2 <main+0xb62>
    5182:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    5186:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    518a:	f6 cf       	rjmp	.-20     	; 0x5178 <main+0x1008>
    518c:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_LONG_VALUE+0x14>
    5190:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_LONG_VALUE+0x15>
    5194:	2a e0       	ldi	r18, 0x0A	; 10
    5196:	28 9f       	mul	r18, r24
    5198:	b0 01       	movw	r22, r0
    519a:	29 9f       	mul	r18, r25
    519c:	70 0d       	add	r23, r0
    519e:	11 24       	eor	r1, r1
    51a0:	07 2e       	mov	r0, r23
    51a2:	00 0c       	add	r0, r0
    51a4:	88 0b       	sbc	r24, r24
    51a6:	99 0b       	sbc	r25, r25
    51a8:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    51ac:	e5 cf       	rjmp	.-54     	; 0x5178 <main+0x1008>
    51ae:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    51b2:	81 e0       	ldi	r24, 0x01	; 1
    51b4:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
    51b8:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    51bc:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    51c0:	07 2e       	mov	r0, r23
    51c2:	00 0c       	add	r0, r0
    51c4:	88 0b       	sbc	r24, r24
    51c6:	99 0b       	sbc	r25, r25
    51c8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    51cc:	8a e1       	ldi	r24, 0x1A	; 26
    51ce:	90 e0       	ldi	r25, 0x00	; 0
    51d0:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    51d4:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    51d8:	87 e1       	ldi	r24, 0x17	; 23
    51da:	90 e0       	ldi	r25, 0x00	; 0
    51dc:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    51e0:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    51e4:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    51e8:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    51ec:	49 97       	sbiw	r24, 0x19	; 25
    51ee:	94 f4       	brge	.+36     	; 0x5214 <main+0x10a4>
    51f0:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    51f4:	81 11       	cpse	r24, r1
    51f6:	09 c0       	rjmp	.+18     	; 0x520a <main+0x109a>
    51f8:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    51fc:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    5200:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    5204:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    5208:	ce cd       	rjmp	.-1124   	; 0x4da6 <main+0xc36>
    520a:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    520e:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    5212:	c9 cd       	rjmp	.-1134   	; 0x4da6 <main+0xc36>
    5214:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <SET_LONG_VALUE+0x16>
    5218:	90 91 1a 29 	lds	r25, 0x291A	; 0x80291a <SET_LONG_VALUE+0x17>
    521c:	24 e6       	ldi	r18, 0x64	; 100
    521e:	28 9f       	mul	r18, r24
    5220:	b0 01       	movw	r22, r0
    5222:	29 9f       	mul	r18, r25
    5224:	70 0d       	add	r23, r0
    5226:	11 24       	eor	r1, r1
    5228:	20 91 1b 29 	lds	r18, 0x291B	; 0x80291b <SET_LONG_VALUE+0x18>
    522c:	30 91 1c 29 	lds	r19, 0x291C	; 0x80291c <SET_LONG_VALUE+0x19>
    5230:	fe ce       	rjmp	.-516    	; 0x502e <main+0xebe>
    5232:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    5236:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    523a:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    523e:	07 2e       	mov	r0, r23
    5240:	00 0c       	add	r0, r0
    5242:	88 0b       	sbc	r24, r24
    5244:	99 0b       	sbc	r25, r25
    5246:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    524a:	8a e1       	ldi	r24, 0x1A	; 26
    524c:	90 e0       	ldi	r25, 0x00	; 0
    524e:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5252:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5256:	87 e1       	ldi	r24, 0x17	; 23
    5258:	90 e0       	ldi	r25, 0x00	; 0
    525a:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    525e:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5262:	c0 90 19 29 	lds	r12, 0x2919	; 0x802919 <SET_LONG_VALUE+0x16>
    5266:	d0 90 1a 29 	lds	r13, 0x291A	; 0x80291a <SET_LONG_VALUE+0x17>
    526a:	a0 90 1b 29 	lds	r10, 0x291B	; 0x80291b <SET_LONG_VALUE+0x18>
    526e:	b0 90 1c 29 	lds	r11, 0x291C	; 0x80291c <SET_LONG_VALUE+0x19>
    5272:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    5276:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    527a:	49 97       	sbiw	r24, 0x19	; 25
    527c:	f4 f5       	brge	.+124    	; 0x52fa <main+0x118a>
    527e:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    5282:	81 11       	cpse	r24, r1
    5284:	35 c0       	rjmp	.+106    	; 0x52f0 <main+0x1180>
    5286:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    528a:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    528e:	e0 92 ea 28 	sts	0x28EA, r14	; 0x8028ea <digits1+0x6>
    5292:	f0 92 eb 28 	sts	0x28EB, r15	; 0x8028eb <digits1+0x7>
    5296:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    529a:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    529e:	c3 97       	sbiw	r24, 0x33	; 51
    52a0:	24 f0       	brlt	.+8      	; 0x52aa <main+0x113a>
    52a2:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    52a6:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    52aa:	b5 01       	movw	r22, r10
    52ac:	bb 0c       	add	r11, r11
    52ae:	88 0b       	sbc	r24, r24
    52b0:	99 0b       	sbc	r25, r25
    52b2:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    52b6:	20 e0       	ldi	r18, 0x00	; 0
    52b8:	30 e0       	ldi	r19, 0x00	; 0
    52ba:	40 e2       	ldi	r20, 0x20	; 32
    52bc:	51 e4       	ldi	r21, 0x41	; 65
    52be:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    52c2:	4b 01       	movw	r8, r22
    52c4:	5c 01       	movw	r10, r24
    52c6:	b6 01       	movw	r22, r12
    52c8:	dd 0c       	add	r13, r13
    52ca:	88 0b       	sbc	r24, r24
    52cc:	99 0b       	sbc	r25, r25
    52ce:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    52d2:	9b 01       	movw	r18, r22
    52d4:	ac 01       	movw	r20, r24
    52d6:	c5 01       	movw	r24, r10
    52d8:	b4 01       	movw	r22, r8
    52da:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    52de:	60 93 37 28 	sts	0x2837, r22	; 0x802837 <CAL2_CALCULATED_LOW_CAL_VALUE>
    52e2:	70 93 38 28 	sts	0x2838, r23	; 0x802838 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    52e6:	80 93 39 28 	sts	0x2839, r24	; 0x802839 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    52ea:	90 93 3a 28 	sts	0x283A, r25	; 0x80283a <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    52ee:	b7 ca       	rjmp	.-2706   	; 0x485e <main+0x6ee>
    52f0:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    52f4:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    52f8:	ca cf       	rjmp	.-108    	; 0x528e <main+0x111e>
    52fa:	84 e6       	ldi	r24, 0x64	; 100
    52fc:	8c 9d       	mul	r24, r12
    52fe:	b0 01       	movw	r22, r0
    5300:	8d 9d       	mul	r24, r13
    5302:	70 0d       	add	r23, r0
    5304:	11 24       	eor	r1, r1
    5306:	2a e0       	ldi	r18, 0x0A	; 10
    5308:	2a 9d       	mul	r18, r10
    530a:	c0 01       	movw	r24, r0
    530c:	2b 9d       	mul	r18, r11
    530e:	90 0d       	add	r25, r0
    5310:	11 24       	eor	r1, r1
    5312:	68 0f       	add	r22, r24
    5314:	79 1f       	adc	r23, r25
    5316:	07 2e       	mov	r0, r23
    5318:	00 0c       	add	r0, r0
    531a:	88 0b       	sbc	r24, r24
    531c:	99 0b       	sbc	r25, r25
    531e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5322:	b5 cf       	rjmp	.-150    	; 0x528e <main+0x111e>
    5324:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    5328:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    532c:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    5330:	07 2e       	mov	r0, r23
    5332:	00 0c       	add	r0, r0
    5334:	88 0b       	sbc	r24, r24
    5336:	99 0b       	sbc	r25, r25
    5338:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    533c:	40 92 dc 28 	sts	0x28DC, r4	; 0x8028dc <digits2>
    5340:	50 92 dd 28 	sts	0x28DD, r5	; 0x8028dd <digits2+0x1>
    5344:	60 92 de 28 	sts	0x28DE, r6	; 0x8028de <digits2+0x2>
    5348:	70 92 df 28 	sts	0x28DF, r7	; 0x8028df <digits2+0x3>
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
    5352:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    5356:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    535a:	49 97       	sbiw	r24, 0x19	; 25
    535c:	0c f4       	brge	.+2      	; 0x5360 <main+0x11f0>
    535e:	39 ce       	rjmp	.-910    	; 0x4fd2 <main+0xe62>
    5360:	80 91 1d 29 	lds	r24, 0x291D	; 0x80291d <SET_LONG_VALUE+0x1a>
    5364:	90 91 1e 29 	lds	r25, 0x291E	; 0x80291e <SET_LONG_VALUE+0x1b>
    5368:	24 e6       	ldi	r18, 0x64	; 100
    536a:	28 9f       	mul	r18, r24
    536c:	b0 01       	movw	r22, r0
    536e:	29 9f       	mul	r18, r25
    5370:	70 0d       	add	r23, r0
    5372:	11 24       	eor	r1, r1
    5374:	20 91 1f 29 	lds	r18, 0x291F	; 0x80291f <SET_LONG_VALUE+0x1c>
    5378:	30 91 20 29 	lds	r19, 0x2920	; 0x802920 <SET_LONG_VALUE+0x1d>
    537c:	58 ce       	rjmp	.-848    	; 0x502e <main+0xebe>
    537e:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    5382:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    5386:	a5 cc       	rjmp	.-1718   	; 0x4cd2 <main+0xb62>
    5388:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    538c:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    5390:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    5394:	07 2e       	mov	r0, r23
    5396:	00 0c       	add	r0, r0
    5398:	88 0b       	sbc	r24, r24
    539a:	99 0b       	sbc	r25, r25
    539c:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    53a0:	40 92 dc 28 	sts	0x28DC, r4	; 0x8028dc <digits2>
    53a4:	50 92 dd 28 	sts	0x28DD, r5	; 0x8028dd <digits2+0x1>
    53a8:	60 92 de 28 	sts	0x28DE, r6	; 0x8028de <digits2+0x2>
    53ac:	70 92 df 28 	sts	0x28DF, r7	; 0x8028df <digits2+0x3>
    53b0:	81 e0       	ldi	r24, 0x01	; 1
    53b2:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
    53b6:	c0 90 1d 29 	lds	r12, 0x291D	; 0x80291d <SET_LONG_VALUE+0x1a>
    53ba:	d0 90 1e 29 	lds	r13, 0x291E	; 0x80291e <SET_LONG_VALUE+0x1b>
    53be:	a0 90 1f 29 	lds	r10, 0x291F	; 0x80291f <SET_LONG_VALUE+0x1c>
    53c2:	b0 90 20 29 	lds	r11, 0x2920	; 0x802920 <SET_LONG_VALUE+0x1d>
    53c6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    53ca:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    53ce:	49 97       	sbiw	r24, 0x19	; 25
    53d0:	f4 f5       	brge	.+124    	; 0x544e <main+0x12de>
    53d2:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <BLINK_STATS>
    53d6:	81 11       	cpse	r24, r1
    53d8:	35 c0       	rjmp	.+106    	; 0x5444 <main+0x12d4>
    53da:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    53de:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    53e2:	e0 92 ea 28 	sts	0x28EA, r14	; 0x8028ea <digits1+0x6>
    53e6:	f0 92 eb 28 	sts	0x28EB, r15	; 0x8028eb <digits1+0x7>
    53ea:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    53ee:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    53f2:	c3 97       	sbiw	r24, 0x33	; 51
    53f4:	24 f0       	brlt	.+8      	; 0x53fe <main+0x128e>
    53f6:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    53fa:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    53fe:	b5 01       	movw	r22, r10
    5400:	bb 0c       	add	r11, r11
    5402:	88 0b       	sbc	r24, r24
    5404:	99 0b       	sbc	r25, r25
    5406:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    540a:	20 e0       	ldi	r18, 0x00	; 0
    540c:	30 e0       	ldi	r19, 0x00	; 0
    540e:	40 e2       	ldi	r20, 0x20	; 32
    5410:	51 e4       	ldi	r21, 0x41	; 65
    5412:	0e 94 9d 32 	call	0x653a	; 0x653a <__divsf3>
    5416:	4b 01       	movw	r8, r22
    5418:	5c 01       	movw	r10, r24
    541a:	b6 01       	movw	r22, r12
    541c:	dd 0c       	add	r13, r13
    541e:	88 0b       	sbc	r24, r24
    5420:	99 0b       	sbc	r25, r25
    5422:	0e 94 38 33 	call	0x6670	; 0x6670 <__floatsisf>
    5426:	9b 01       	movw	r18, r22
    5428:	ac 01       	movw	r20, r24
    542a:	c5 01       	movw	r24, r10
    542c:	b4 01       	movw	r22, r8
    542e:	0e 94 35 32 	call	0x646a	; 0x646a <__addsf3>
    5432:	60 93 31 28 	sts	0x2831, r22	; 0x802831 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    5436:	70 93 32 28 	sts	0x2832, r23	; 0x802832 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    543a:	80 93 33 28 	sts	0x2833, r24	; 0x802833 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    543e:	90 93 34 28 	sts	0x2834, r25	; 0x802834 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    5442:	0d ca       	rjmp	.-3046   	; 0x485e <main+0x6ee>
    5444:	60 92 89 28 	sts	0x2889, r6	; 0x802889 <i>
    5448:	70 92 8a 28 	sts	0x288A, r7	; 0x80288a <i+0x1>
    544c:	ca cf       	rjmp	.-108    	; 0x53e2 <main+0x1272>
    544e:	84 e6       	ldi	r24, 0x64	; 100
    5450:	8c 9d       	mul	r24, r12
    5452:	b0 01       	movw	r22, r0
    5454:	8d 9d       	mul	r24, r13
    5456:	70 0d       	add	r23, r0
    5458:	11 24       	eor	r1, r1
    545a:	2a e0       	ldi	r18, 0x0A	; 10
    545c:	2a 9d       	mul	r18, r10
    545e:	c0 01       	movw	r24, r0
    5460:	2b 9d       	mul	r18, r11
    5462:	90 0d       	add	r25, r0
    5464:	11 24       	eor	r1, r1
    5466:	68 0f       	add	r22, r24
    5468:	79 1f       	adc	r23, r25
    546a:	07 2e       	mov	r0, r23
    546c:	00 0c       	add	r0, r0
    546e:	88 0b       	sbc	r24, r24
    5470:	99 0b       	sbc	r25, r25
    5472:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5476:	b5 cf       	rjmp	.-150    	; 0x53e2 <main+0x1272>
    5478:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    547c:	10 92 36 29 	sts	0x2936, r1	; 0x802936 <LONG_PRESS>
    5480:	ee c9       	rjmp	.-3108   	; 0x485e <main+0x6ee>
    5482:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5486:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    548a:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    548e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    5492:	80 91 44 28 	lds	r24, 0x2844	; 0x802844 <processLog>
    5496:	90 91 45 28 	lds	r25, 0x2845	; 0x802845 <processLog+0x1>
    549a:	2a e0       	ldi	r18, 0x0A	; 10
    549c:	28 9f       	mul	r18, r24
    549e:	b0 01       	movw	r22, r0
    54a0:	29 9f       	mul	r18, r25
    54a2:	70 0d       	add	r23, r0
    54a4:	11 24       	eor	r1, r1
    54a6:	90 e0       	ldi	r25, 0x00	; 0
    54a8:	80 e0       	ldi	r24, 0x00	; 0
    54aa:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    54ae:	40 92 e2 28 	sts	0x28E2, r4	; 0x8028e2 <digits2+0x6>
    54b2:	50 92 e3 28 	sts	0x28E3, r5	; 0x8028e3 <digits2+0x7>
    54b6:	60 91 42 28 	lds	r22, 0x2842	; 0x802842 <processLogNumberOfTimes>
    54ba:	70 91 43 28 	lds	r23, 0x2843	; 0x802843 <processLogNumberOfTimes+0x1>
    54be:	90 e0       	ldi	r25, 0x00	; 0
    54c0:	80 e0       	ldi	r24, 0x00	; 0
    54c2:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    54c6:	8d e0       	ldi	r24, 0x0D	; 13
    54c8:	90 e0       	ldi	r25, 0x00	; 0
    54ca:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    54ce:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    54d2:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    54d6:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
    54da:	c1 c9       	rjmp	.-3198   	; 0x485e <main+0x6ee>
    54dc:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    54e0:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    54e4:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    54e8:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    54ec:	8c e0       	ldi	r24, 0x0C	; 12
    54ee:	90 e0       	ldi	r25, 0x00	; 0
    54f0:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    54f4:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    54f8:	2c e1       	ldi	r18, 0x1C	; 28
    54fa:	30 e0       	ldi	r19, 0x00	; 0
    54fc:	20 93 de 28 	sts	0x28DE, r18	; 0x8028de <digits2+0x2>
    5500:	30 93 df 28 	sts	0x28DF, r19	; 0x8028df <digits2+0x3>
    5504:	41 e1       	ldi	r20, 0x11	; 17
    5506:	50 e0       	ldi	r21, 0x00	; 0
    5508:	40 93 e0 28 	sts	0x28E0, r20	; 0x8028e0 <digits2+0x4>
    550c:	50 93 e1 28 	sts	0x28E1, r21	; 0x8028e1 <digits2+0x5>
    5510:	2f e0       	ldi	r18, 0x0F	; 15
    5512:	30 e0       	ldi	r19, 0x00	; 0
    5514:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    5518:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    551c:	40 93 e4 28 	sts	0x28E4, r20	; 0x8028e4 <digits1>
    5520:	50 93 e5 28 	sts	0x28E5, r21	; 0x8028e5 <digits1+0x1>
    5524:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5528:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    552c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5530:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    5534:	80 e1       	ldi	r24, 0x10	; 16
    5536:	90 e0       	ldi	r25, 0x00	; 0
    5538:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    553c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
    5540:	c8 cf       	rjmp	.-112    	; 0x54d2 <main+0x1362>
SET_LONG_PRESS_FUNCTION():
    5542:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5546:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    554a:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    554e:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    5552:	80 91 2f 28 	lds	r24, 0x282F	; 0x80282f <currentMillis>
    5556:	90 91 30 28 	lds	r25, 0x2830	; 0x802830 <currentMillis+0x1>
    555a:	8f 31       	cpi	r24, 0x1F	; 31
    555c:	91 05       	cpc	r25, r1
    555e:	38 f5       	brcc	.+78     	; 0x55ae <main+0x143e>
digitalWrite():
    5560:	61 e0       	ldi	r22, 0x01	; 1
    5562:	80 e1       	ldi	r24, 0x10	; 16
    5564:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5568:	86 e1       	ldi	r24, 0x16	; 22
    556a:	90 e0       	ldi	r25, 0x00	; 0
    556c:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5570:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5574:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5578:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    557c:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5580:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5584:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5588:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    558c:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    5590:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    5594:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    5598:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    559c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    55a0:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    55a4:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <digits1+0x6>
    55a8:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <digits1+0x7>
    55ac:	58 c9       	rjmp	.-3408   	; 0x485e <main+0x6ee>
SET_LONG_PRESS_FUNCTION():
    55ae:	9c 01       	movw	r18, r24
    55b0:	29 52       	subi	r18, 0x29	; 41
    55b2:	31 09       	sbc	r19, r1
    55b4:	22 38       	cpi	r18, 0x82	; 130
    55b6:	31 05       	cpc	r19, r1
    55b8:	78 f5       	brcc	.+94     	; 0x5618 <main+0x14a8>
digitalWrite():
    55ba:	60 e0       	ldi	r22, 0x00	; 0
    55bc:	80 e1       	ldi	r24, 0x10	; 16
    55be:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    55c2:	81 e1       	ldi	r24, 0x11	; 17
    55c4:	90 e0       	ldi	r25, 0x00	; 0
    55c6:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    55ca:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    55ce:	8f e0       	ldi	r24, 0x0F	; 15
    55d0:	90 e0       	ldi	r25, 0x00	; 0
    55d2:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    55d6:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    55da:	2c e0       	ldi	r18, 0x0C	; 12
    55dc:	30 e0       	ldi	r19, 0x00	; 0
    55de:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    55e2:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    55e6:	20 e1       	ldi	r18, 0x10	; 16
    55e8:	30 e0       	ldi	r19, 0x00	; 0
    55ea:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    55ee:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    55f2:	20 e2       	ldi	r18, 0x20	; 32
    55f4:	30 e0       	ldi	r19, 0x00	; 0
    55f6:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    55fa:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    55fe:	27 e1       	ldi	r18, 0x17	; 23
    5600:	30 e0       	ldi	r19, 0x00	; 0
    5602:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5606:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    560a:	24 e1       	ldi	r18, 0x14	; 20
    560c:	30 e0       	ldi	r19, 0x00	; 0
    560e:	20 93 e8 28 	sts	0x28E8, r18	; 0x8028e8 <digits1+0x4>
    5612:	30 93 e9 28 	sts	0x28E9, r19	; 0x8028e9 <digits1+0x5>
    5616:	c6 cf       	rjmp	.-116    	; 0x55a4 <main+0x1434>
SET_LONG_PRESS_FUNCTION():
    5618:	8b 3a       	cpi	r24, 0xAB	; 171
    561a:	91 05       	cpc	r25, r1
    561c:	0c f4       	brge	.+2      	; 0x5620 <main+0x14b0>
    561e:	1f c9       	rjmp	.-3522   	; 0x485e <main+0x6ee>
EEPROM_CLEAR():
    5620:	10 92 86 28 	sts	0x2886, r1	; 0x802886 <STIR_VALUE_SET>
    5624:	10 92 35 29 	sts	0x2935, r1	; 0x802935 <DEGREE_VALUE_SET>
    5628:	23 e6       	ldi	r18, 0x63	; 99
    562a:	30 e0       	ldi	r19, 0x00	; 0
    562c:	20 93 f4 28 	sts	0x28F4, r18	; 0x8028f4 <SAFE_VALUE_SET_DEG>
    5630:	30 93 f5 28 	sts	0x28F5, r19	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
    5634:	84 ed       	ldi	r24, 0xD4	; 212
    5636:	90 e0       	ldi	r25, 0x00	; 0
    5638:	80 93 f2 28 	sts	0x28F2, r24	; 0x8028f2 <SAFE_VALUE_SET_FAH>
    563c:	90 93 f3 28 	sts	0x28F3, r25	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
    5640:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <CAL_SELECT_VALUE>
    5644:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <CAL_SELECT_VALUE+0x1>
    5648:	10 92 cf 28 	sts	0x28CF, r1	; 0x8028cf <SIGN>
    564c:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <ERROR_CAL1>
    5650:	10 92 ed 28 	sts	0x28ED, r1	; 0x8028ed <ERROR_CAL1+0x1>
    5654:	10 92 ee 28 	sts	0x28EE, r1	; 0x8028ee <ERROR_CAL1+0x2>
    5658:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <ERROR_CAL1+0x3>
    565c:	41 e0       	ldi	r20, 0x01	; 1
    565e:	40 93 ca 28 	sts	0x28CA, r20	; 0x8028ca <ERROR_SET_IN_DEG_FLAG>
    5662:	10 92 c5 28 	sts	0x28C5, r1	; 0x8028c5 <ERROR_SET_IN_FAH_FLAG>
    5666:	4e e1       	ldi	r20, 0x1E	; 30
    5668:	50 e0       	ldi	r21, 0x00	; 0
    566a:	60 e0       	ldi	r22, 0x00	; 0
    566c:	70 e0       	ldi	r23, 0x00	; 0
    566e:	40 93 b3 28 	sts	0x28B3, r20	; 0x8028b3 <CAL2_RAW_LOW_VALUE_CONV>
    5672:	50 93 b4 28 	sts	0x28B4, r21	; 0x8028b4 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    5676:	60 93 b5 28 	sts	0x28B5, r22	; 0x8028b5 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    567a:	70 93 b6 28 	sts	0x28B6, r23	; 0x8028b6 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    567e:	44 e5       	ldi	r20, 0x54	; 84
    5680:	50 e0       	ldi	r21, 0x00	; 0
    5682:	60 e0       	ldi	r22, 0x00	; 0
    5684:	70 e0       	ldi	r23, 0x00	; 0
    5686:	40 93 af 28 	sts	0x28AF, r20	; 0x8028af <CAL2_RAW_HIGH_VALUE_CONV>
    568a:	50 93 b0 28 	sts	0x28B0, r21	; 0x8028b0 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    568e:	60 93 b1 28 	sts	0x28B1, r22	; 0x8028b1 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    5692:	70 93 b2 28 	sts	0x28B2, r23	; 0x8028b2 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    5696:	4c e1       	ldi	r20, 0x1C	; 28
    5698:	50 e0       	ldi	r21, 0x00	; 0
    569a:	60 e0       	ldi	r22, 0x00	; 0
    569c:	70 e0       	ldi	r23, 0x00	; 0
    569e:	40 93 ab 28 	sts	0x28AB, r20	; 0x8028ab <MASTER_LOW_CONV>
    56a2:	50 93 ac 28 	sts	0x28AC, r21	; 0x8028ac <MASTER_LOW_CONV+0x1>
    56a6:	60 93 ad 28 	sts	0x28AD, r22	; 0x8028ad <MASTER_LOW_CONV+0x2>
    56aa:	70 93 ae 28 	sts	0x28AE, r23	; 0x8028ae <MASTER_LOW_CONV+0x3>
    56ae:	42 e5       	ldi	r20, 0x52	; 82
    56b0:	50 e0       	ldi	r21, 0x00	; 0
    56b2:	60 e0       	ldi	r22, 0x00	; 0
    56b4:	70 e0       	ldi	r23, 0x00	; 0
    56b6:	40 93 a7 28 	sts	0x28A7, r20	; 0x8028a7 <MASTER_HIGH_CONV>
    56ba:	50 93 a8 28 	sts	0x28A8, r21	; 0x8028a8 <MASTER_HIGH_CONV+0x1>
    56be:	60 93 a9 28 	sts	0x28A9, r22	; 0x8028a9 <MASTER_HIGH_CONV+0x2>
    56c2:	70 93 aa 28 	sts	0x28AA, r23	; 0x8028aa <MASTER_HIGH_CONV+0x3>
    56c6:	10 92 55 28 	sts	0x2855, r1	; 0x802855 <TIME_SOCK_OR_TOTAL>
    56ca:	10 92 8d 28 	sts	0x288D, r1	; 0x80288d <Proceess_Resume_Enable_Flag>
    56ce:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <select_product_type>
    56d2:	10 92 03 29 	sts	0x2903, r1	; 0x802903 <SET_LONG_VALUE>
    56d6:	10 92 04 29 	sts	0x2904, r1	; 0x802904 <SET_LONG_VALUE+0x1>
    56da:	10 92 05 29 	sts	0x2905, r1	; 0x802905 <SET_LONG_VALUE+0x2>
    56de:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <SET_LONG_VALUE+0x3>
    56e2:	20 93 07 29 	sts	0x2907, r18	; 0x802907 <SET_LONG_VALUE+0x4>
    56e6:	30 93 08 29 	sts	0x2908, r19	; 0x802908 <SET_LONG_VALUE+0x5>
    56ea:	80 93 29 29 	sts	0x2929, r24	; 0x802929 <SET_LONG_VALUE+0x26>
    56ee:	90 93 2a 29 	sts	0x292A, r25	; 0x80292a <SET_LONG_VALUE+0x27>
    56f2:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <SET_LONG_VALUE+0xc>
    56f6:	10 92 10 29 	sts	0x2910, r1	; 0x802910 <SET_LONG_VALUE+0xd>
    56fa:	10 92 09 29 	sts	0x2909, r1	; 0x802909 <SET_LONG_VALUE+0x6>
    56fe:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <SET_LONG_VALUE+0x7>
    5702:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <SET_LONG_VALUE+0x8>
    5706:	10 92 0c 29 	sts	0x290C, r1	; 0x80290c <SET_LONG_VALUE+0x9>
    570a:	10 92 0d 29 	sts	0x290D, r1	; 0x80290d <SET_LONG_VALUE+0xa>
    570e:	10 92 0e 29 	sts	0x290E, r1	; 0x80290e <SET_LONG_VALUE+0xb>
    5712:	10 92 7c 28 	sts	0x287C, r1	; 0x80287c <SET_HOUR>
    5716:	10 92 7d 28 	sts	0x287D, r1	; 0x80287d <SET_HOUR+0x1>
    571a:	10 92 7a 28 	sts	0x287A, r1	; 0x80287a <SET_MINUTE>
    571e:	10 92 7b 28 	sts	0x287B, r1	; 0x80287b <SET_MINUTE+0x1>
    5722:	85 e2       	ldi	r24, 0x25	; 37
    5724:	90 e0       	ldi	r25, 0x00	; 0
    5726:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <SET_VALUE+0x2>
    572a:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <SET_VALUE+0x3>
    572e:	10 92 fa 28 	sts	0x28FA, r1	; 0x8028fa <SET_VALUE+0x4>
    5732:	10 92 fb 28 	sts	0x28FB, r1	; 0x8028fb <SET_VALUE+0x5>
    5736:	80 e2       	ldi	r24, 0x20	; 32
    5738:	90 e0       	ldi	r25, 0x00	; 0
    573a:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x1f>
    573e:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x20>
    5742:	10 92 fc 28 	sts	0x28FC, r1	; 0x8028fc <SET_VALUE+0x6>
    5746:	10 92 fd 28 	sts	0x28FD, r1	; 0x8028fd <SET_VALUE+0x7>
    574a:	10 92 fe 28 	sts	0x28FE, r1	; 0x8028fe <SET_VALUE+0x8>
    574e:	10 92 ff 28 	sts	0x28FF, r1	; 0x8028ff <SET_VALUE+0x9>
    5752:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <Process_Interrupt_flag>
    5756:	60 e0       	ldi	r22, 0x00	; 0
    5758:	81 e0       	ldi	r24, 0x01	; 1
    575a:	90 e0       	ldi	r25, 0x00	; 0
    575c:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5760:	63 e6       	ldi	r22, 0x63	; 99
    5762:	82 e0       	ldi	r24, 0x02	; 2
    5764:	90 e0       	ldi	r25, 0x00	; 0
    5766:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    576a:	62 ef       	ldi	r22, 0xF2	; 242
    576c:	78 e2       	ldi	r23, 0x28	; 40
    576e:	83 e0       	ldi	r24, 0x03	; 3
    5770:	90 e0       	ldi	r25, 0x00	; 0
    5772:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    5776:	60 e0       	ldi	r22, 0x00	; 0
    5778:	85 e0       	ldi	r24, 0x05	; 5
    577a:	90 e0       	ldi	r25, 0x00	; 0
    577c:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5780:	60 e0       	ldi	r22, 0x00	; 0
    5782:	8f e0       	ldi	r24, 0x0F	; 15
    5784:	90 e0       	ldi	r25, 0x00	; 0
    5786:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    578a:	0e 94 4a 0e 	call	0x1c94	; 0x1c94 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.62]>
    578e:	60 e0       	ldi	r22, 0x00	; 0
    5790:	87 e0       	ldi	r24, 0x07	; 7
    5792:	90 e0       	ldi	r25, 0x00	; 0
    5794:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5798:	61 e0       	ldi	r22, 0x01	; 1
    579a:	88 e0       	ldi	r24, 0x08	; 8
    579c:	90 e0       	ldi	r25, 0x00	; 0
    579e:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    57a2:	60 e0       	ldi	r22, 0x00	; 0
    57a4:	89 e0       	ldi	r24, 0x09	; 9
    57a6:	90 e0       	ldi	r25, 0x00	; 0
    57a8:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    57ac:	63 eb       	ldi	r22, 0xB3	; 179
    57ae:	78 e2       	ldi	r23, 0x28	; 40
    57b0:	80 e5       	ldi	r24, 0x50	; 80
    57b2:	90 e0       	ldi	r25, 0x00	; 0
    57b4:	0e 94 20 18 	call	0x3040	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    57b8:	6f ea       	ldi	r22, 0xAF	; 175
    57ba:	78 e2       	ldi	r23, 0x28	; 40
    57bc:	8a e5       	ldi	r24, 0x5A	; 90
    57be:	90 e0       	ldi	r25, 0x00	; 0
    57c0:	0e 94 20 18 	call	0x3040	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    57c4:	6b ea       	ldi	r22, 0xAB	; 171
    57c6:	78 e2       	ldi	r23, 0x28	; 40
    57c8:	84 e6       	ldi	r24, 0x64	; 100
    57ca:	90 e0       	ldi	r25, 0x00	; 0
    57cc:	0e 94 20 18 	call	0x3040	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    57d0:	67 ea       	ldi	r22, 0xA7	; 167
    57d2:	78 e2       	ldi	r23, 0x28	; 40
    57d4:	8e e6       	ldi	r24, 0x6E	; 110
    57d6:	90 e0       	ldi	r25, 0x00	; 0
    57d8:	0e 94 20 18 	call	0x3040	; 0x3040 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    57dc:	81 e4       	ldi	r24, 0x41	; 65
    57de:	90 e0       	ldi	r25, 0x00	; 0
    57e0:	89 83       	std	Y+1, r24	; 0x01
    57e2:	9a 83       	std	Y+2, r25	; 0x02
    57e4:	60 91 55 28 	lds	r22, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    57e8:	ce 01       	movw	r24, r28
    57ea:	01 96       	adiw	r24, 0x01	; 1
    57ec:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <EERef::update(unsigned char)>
EEPROM_CLEAR():
    57f0:	60 91 f8 28 	lds	r22, 0x28F8	; 0x8028f8 <SET_VALUE+0x2>
    57f4:	83 e7       	ldi	r24, 0x73	; 115
    57f6:	90 e0       	ldi	r25, 0x00	; 0
    57f8:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    57fc:	60 91 fa 28 	lds	r22, 0x28FA	; 0x8028fa <SET_VALUE+0x4>
    5800:	85 e7       	ldi	r24, 0x75	; 117
    5802:	90 e0       	ldi	r25, 0x00	; 0
    5804:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5808:	62 e2       	ldi	r22, 0x22	; 34
    580a:	79 e2       	ldi	r23, 0x29	; 41
    580c:	88 e7       	ldi	r24, 0x78	; 120
    580e:	90 e0       	ldi	r25, 0x00	; 0
    5810:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.5]>
    5814:	60 e0       	ldi	r22, 0x00	; 0
    5816:	8d e7       	ldi	r24, 0x7D	; 125
    5818:	90 e0       	ldi	r25, 0x00	; 0
    581a:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    581e:	60 e0       	ldi	r22, 0x00	; 0
    5820:	82 e8       	ldi	r24, 0x82	; 130
    5822:	90 e0       	ldi	r25, 0x00	; 0
    5824:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5828:	60 e0       	ldi	r22, 0x00	; 0
    582a:	87 e8       	ldi	r24, 0x87	; 135
    582c:	90 e0       	ldi	r25, 0x00	; 0
    582e:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    5832:	60 e0       	ldi	r22, 0x00	; 0
    5834:	86 e9       	ldi	r24, 0x96	; 150
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	0e 94 38 0e 	call	0x1c70	; 0x1c70 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    583c:	81 e0       	ldi	r24, 0x01	; 1
    583e:	90 e0       	ldi	r25, 0x00	; 0
    5840:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5844:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5848:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    584c:	10 92 2f 28 	sts	0x282F, r1	; 0x80282f <currentMillis>
    5850:	10 92 30 28 	sts	0x2830, r1	; 0x802830 <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    5854:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    5858:	11 ce       	rjmp	.-990    	; 0x547c <main+0x130c>
    585a:	e2 31       	cpi	r30, 0x12	; 18
    585c:	f1 05       	cpc	r31, r1
    585e:	10 f0       	brcs	.+4      	; 0x5864 <main+0x16f4>
    5860:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    5864:	ea 5c       	subi	r30, 0xCA	; 202
    5866:	f3 4d       	sbci	r31, 0xD3	; 211
    5868:	0c 94 a0 34 	jmp	0x6940	; 0x6940 <__tablejump2__>
    586c:	48 2c       	mov	r4, r8
    586e:	85 2c       	mov	r8, r5
    5870:	bd 2c       	mov	r11, r13
    5872:	0e 2d       	mov	r16, r14
    5874:	59 2d       	mov	r21, r9
    5876:	86 2d       	mov	r24, r6
    5878:	b5 2d       	mov	r27, r5
    587a:	e9 2d       	mov	r30, r9
    587c:	39 2e       	mov	r3, r25
    587e:	9d 2e       	mov	r9, r29
    5880:	d0 2e       	mov	r13, r16
    5882:	fd 2e       	mov	r15, r29
    5884:	d8 2f       	mov	r29, r24
    5886:	54 30       	cpi	r21, 0x04	; 4
    5888:	f8 30       	cpi	r31, 0x08	; 8
    588a:	b2 31       	cpi	r27, 0x12	; 18
    588c:	e3 31       	cpi	r30, 0x13	; 19
    588e:	03 32       	cpi	r16, 0x23	; 35
    5890:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5894:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    5898:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    589c:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    58a0:	8c e0       	ldi	r24, 0x0C	; 12
    58a2:	90 e0       	ldi	r25, 0x00	; 0
    58a4:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    58a8:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    58ac:	80 e1       	ldi	r24, 0x10	; 16
    58ae:	90 e0       	ldi	r25, 0x00	; 0
    58b0:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    58b4:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    58b8:	60 92 e0 28 	sts	0x28E0, r6	; 0x8028e0 <digits2+0x4>
    58bc:	70 92 e1 28 	sts	0x28E1, r7	; 0x8028e1 <digits2+0x5>
    58c0:	81 e1       	ldi	r24, 0x11	; 17
    58c2:	90 e0       	ldi	r25, 0x00	; 0
    58c4:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    58c8:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    58cc:	80 91 86 28 	lds	r24, 0x2886	; 0x802886 <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    58d0:	10 92 e4 28 	sts	0x28E4, r1	; 0x8028e4 <digits1>
    58d4:	10 92 e5 28 	sts	0x28E5, r1	; 0x8028e5 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    58d8:	81 11       	cpse	r24, r1
    58da:	10 c0       	rjmp	.+32     	; 0x58fc <main+0x178c>
DISPLAY_DIGIT1():
    58dc:	85 e1       	ldi	r24, 0x15	; 21
    58de:	90 e0       	ldi	r25, 0x00	; 0
    58e0:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    58e4:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    58e8:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    58ec:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    58f0:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits1+0x6>
    58f4:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits1+0x7>
    58f8:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    58fc:	84 e1       	ldi	r24, 0x14	; 20
    58fe:	90 e0       	ldi	r25, 0x00	; 0
    5900:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    5904:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    5908:	2a c0       	rjmp	.+84     	; 0x595e <main+0x17ee>
SET_LONG_PRESS_FUNCTION():
    590a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
    590e:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5912:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
DISPLAY_DIGIT2():
    5916:	8c e1       	ldi	r24, 0x1C	; 28
    5918:	90 e0       	ldi	r25, 0x00	; 0
    591a:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    591e:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5922:	84 e1       	ldi	r24, 0x14	; 20
    5924:	90 e0       	ldi	r25, 0x00	; 0
    5926:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    592a:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    592e:	60 92 e0 28 	sts	0x28E0, r6	; 0x8028e0 <digits2+0x4>
    5932:	70 92 e1 28 	sts	0x28E1, r7	; 0x8028e1 <digits2+0x5>
    5936:	80 e1       	ldi	r24, 0x10	; 16
    5938:	90 e0       	ldi	r25, 0x00	; 0
    593a:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    593e:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5942:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    5946:	81 11       	cpse	r24, r1
    5948:	0f c0       	rjmp	.+30     	; 0x5968 <main+0x17f8>
DISPLAY_DIGIT1():
    594a:	8d e1       	ldi	r24, 0x1D	; 29
    594c:	90 e0       	ldi	r25, 0x00	; 0
    594e:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    5952:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    5956:	e0 92 e6 28 	sts	0x28E6, r14	; 0x8028e6 <digits1+0x2>
    595a:	f0 92 e7 28 	sts	0x28E7, r15	; 0x8028e7 <digits1+0x3>
    595e:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    5962:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    5966:	c4 cf       	rjmp	.-120    	; 0x58f0 <main+0x1780>
    5968:	8d e1       	ldi	r24, 0x1D	; 29
    596a:	90 e0       	ldi	r25, 0x00	; 0
    596c:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    5970:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    5974:	85 e1       	ldi	r24, 0x15	; 21
    5976:	90 e0       	ldi	r25, 0x00	; 0
    5978:	c3 cf       	rjmp	.-122    	; 0x5900 <main+0x1790>
SET_LONG_PRESS_FUNCTION():
    597a:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    597e:	8c e0       	ldi	r24, 0x0C	; 12
    5980:	90 e0       	ldi	r25, 0x00	; 0
    5982:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5986:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    598a:	8d e0       	ldi	r24, 0x0D	; 13
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5992:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5996:	75 e1       	ldi	r23, 0x15	; 21
    5998:	c7 2e       	mov	r12, r23
    599a:	d1 2c       	mov	r13, r1
    599c:	c0 92 e0 28 	sts	0x28E0, r12	; 0x8028e0 <digits2+0x4>
    59a0:	d0 92 e1 28 	sts	0x28E1, r13	; 0x8028e1 <digits2+0x5>
    59a4:	8f e0       	ldi	r24, 0x0F	; 15
    59a6:	90 e0       	ldi	r25, 0x00	; 0
    59a8:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    59ac:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    59b0:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    59b4:	81 11       	cpse	r24, r1
    59b6:	1a c0       	rjmp	.+52     	; 0x59ec <main+0x187c>
    59b8:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <SAFE_VALUE_SET_DEG>
    59bc:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <SAFE_VALUE_SET_DEG+0x1>
    59c0:	2a e0       	ldi	r18, 0x0A	; 10
    59c2:	28 9f       	mul	r18, r24
    59c4:	b0 01       	movw	r22, r0
    59c6:	29 9f       	mul	r18, r25
    59c8:	70 0d       	add	r23, r0
    59ca:	11 24       	eor	r1, r1
    59cc:	07 2e       	mov	r0, r23
    59ce:	00 0c       	add	r0, r0
    59d0:	88 0b       	sbc	r24, r24
    59d2:	99 0b       	sbc	r25, r25
    59d4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    59d8:	e0 92 ea 28 	sts	0x28EA, r14	; 0x8028ea <digits1+0x6>
    59dc:	f0 92 eb 28 	sts	0x28EB, r15	; 0x8028eb <digits1+0x7>
    59e0:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    59e4:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    59e8:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    59ec:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    59f0:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <SAFE_VALUE_SET_FAH>
    59f4:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <SAFE_VALUE_SET_FAH+0x1>
    59f8:	2a e0       	ldi	r18, 0x0A	; 10
    59fa:	28 9f       	mul	r18, r24
    59fc:	b0 01       	movw	r22, r0
    59fe:	29 9f       	mul	r18, r25
    5a00:	70 0d       	add	r23, r0
    5a02:	11 24       	eor	r1, r1
    5a04:	07 2e       	mov	r0, r23
    5a06:	00 0c       	add	r0, r0
    5a08:	88 0b       	sbc	r24, r24
    5a0a:	99 0b       	sbc	r25, r25
    5a0c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5a10:	c0 92 ea 28 	sts	0x28EA, r12	; 0x8028ea <digits1+0x6>
    5a14:	d0 92 eb 28 	sts	0x28EB, r13	; 0x8028eb <digits1+0x7>
    5a18:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    5a1c:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5a20:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5a24:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    5a28:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5a2c:	80 e1       	ldi	r24, 0x10	; 16
    5a2e:	90 e0       	ldi	r25, 0x00	; 0
    5a30:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5a34:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5a38:	60 92 de 28 	sts	0x28DE, r6	; 0x8028de <digits2+0x2>
    5a3c:	70 92 df 28 	sts	0x28DF, r7	; 0x8028df <digits2+0x3>
    5a40:	22 e1       	ldi	r18, 0x12	; 18
    5a42:	30 e0       	ldi	r19, 0x00	; 0
    5a44:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    5a48:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    5a4c:	2f e0       	ldi	r18, 0x0F	; 15
    5a4e:	30 e0       	ldi	r19, 0x00	; 0
    5a50:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    5a54:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5a58:	20 91 55 28 	lds	r18, 0x2855	; 0x802855 <TIME_SOCK_OR_TOTAL>
    5a5c:	21 11       	cpse	r18, r1
    5a5e:	11 c0       	rjmp	.+34     	; 0x5a82 <main+0x1912>
DISPLAY_DIGIT1():
    5a60:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    5a64:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    5a68:	27 e1       	ldi	r18, 0x17	; 23
    5a6a:	30 e0       	ldi	r19, 0x00	; 0
    5a6c:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5a70:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    5a74:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5a78:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    5a7c:	8f e1       	ldi	r24, 0x1F	; 31
    5a7e:	90 e0       	ldi	r25, 0x00	; 0
    5a80:	91 cd       	rjmp	.-1246   	; 0x55a4 <main+0x1434>
    5a82:	8c e0       	ldi	r24, 0x0C	; 12
    5a84:	90 e0       	ldi	r25, 0x00	; 0
    5a86:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <digits1>
    5a8a:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <digits1+0x1>
    5a8e:	87 e1       	ldi	r24, 0x17	; 23
    5a90:	90 e0       	ldi	r25, 0x00	; 0
    5a92:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    5a96:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    5a9a:	8d e0       	ldi	r24, 0x0D	; 13
    5a9c:	90 e0       	ldi	r25, 0x00	; 0
    5a9e:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5aa2:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5aa6:	e0 92 ea 28 	sts	0x28EA, r14	; 0x8028ea <digits1+0x6>
    5aaa:	f0 92 eb 28 	sts	0x28EB, r15	; 0x8028eb <digits1+0x7>
    5aae:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    5ab2:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5ab6:	8d e0       	ldi	r24, 0x0D	; 13
    5ab8:	90 e0       	ldi	r25, 0x00	; 0
    5aba:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5abe:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5ac2:	82 e2       	ldi	r24, 0x22	; 34
    5ac4:	90 e0       	ldi	r25, 0x00	; 0
    5ac6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5aca:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5ace:	80 e1       	ldi	r24, 0x10	; 16
    5ad0:	90 e0       	ldi	r25, 0x00	; 0
    5ad2:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5ad6:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5ada:	87 e1       	ldi	r24, 0x17	; 23
    5adc:	90 e0       	ldi	r25, 0x00	; 0
    5ade:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5ae2:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    5ae6:	2b e0       	ldi	r18, 0x0B	; 11
    5ae8:	30 e0       	ldi	r19, 0x00	; 0
    5aea:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    5aee:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    5af2:	21 e1       	ldi	r18, 0x11	; 17
    5af4:	30 e0       	ldi	r19, 0x00	; 0
    5af6:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5afa:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    5afe:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5b02:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    5b06:	8c e0       	ldi	r24, 0x0C	; 12
    5b08:	90 e0       	ldi	r25, 0x00	; 0
    5b0a:	4c cd       	rjmp	.-1384   	; 0x55a4 <main+0x1434>
SET_LONG_PRESS_FUNCTION():
    5b0c:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5b10:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    5b14:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5b18:	8b e0       	ldi	r24, 0x0B	; 11
    5b1a:	90 e0       	ldi	r25, 0x00	; 0
    5b1c:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5b20:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5b24:	21 e1       	ldi	r18, 0x11	; 17
    5b26:	30 e0       	ldi	r19, 0x00	; 0
    5b28:	20 93 de 28 	sts	0x28DE, r18	; 0x8028de <digits2+0x2>
    5b2c:	30 93 df 28 	sts	0x28DF, r19	; 0x8028df <digits2+0x3>
    5b30:	20 e2       	ldi	r18, 0x20	; 32
    5b32:	30 e0       	ldi	r19, 0x00	; 0
    5b34:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    5b38:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    5b3c:	20 e1       	ldi	r18, 0x10	; 16
    5b3e:	30 e0       	ldi	r19, 0x00	; 0
    5b40:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    5b44:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    5b48:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    5b4c:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    5b50:	23 e2       	ldi	r18, 0x23	; 35
    5b52:	30 e0       	ldi	r19, 0x00	; 0
    5b54:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5b58:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    5b5c:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5b60:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    5b64:	8f e0       	ldi	r24, 0x0F	; 15
    5b66:	90 e0       	ldi	r25, 0x00	; 0
    5b68:	1d cd       	rjmp	.-1478   	; 0x55a4 <main+0x1434>
SET_LONG_PRESS_FUNCTION():
    5b6a:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5b6e:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    5b72:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5b76:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    5b7a:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5b7e:	2d e0       	ldi	r18, 0x0D	; 13
    5b80:	30 e0       	ldi	r19, 0x00	; 0
    5b82:	20 93 de 28 	sts	0x28DE, r18	; 0x8028de <digits2+0x2>
    5b86:	30 93 df 28 	sts	0x28DF, r19	; 0x8028df <digits2+0x3>
    5b8a:	8a e1       	ldi	r24, 0x1A	; 26
    5b8c:	90 e0       	ldi	r25, 0x00	; 0
    5b8e:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5b92:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5b96:	4e e0       	ldi	r20, 0x0E	; 14
    5b98:	50 e0       	ldi	r21, 0x00	; 0
    5b9a:	40 93 e2 28 	sts	0x28E2, r20	; 0x8028e2 <digits2+0x6>
    5b9e:	50 93 e3 28 	sts	0x28E3, r21	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5ba2:	40 91 bb 28 	lds	r20, 0x28BB	; 0x8028bb <CAL_SELECT_VALUE>
    5ba6:	50 91 bc 28 	lds	r21, 0x28BC	; 0x8028bc <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    5baa:	e0 92 e4 28 	sts	0x28E4, r14	; 0x8028e4 <digits1>
    5bae:	f0 92 e5 28 	sts	0x28E5, r15	; 0x8028e5 <digits1+0x1>
    5bb2:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    5bb6:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    5bba:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <digits1+0x4>
    5bbe:	90 93 e9 28 	sts	0x28E9, r25	; 0x8028e9 <digits1+0x5>
    5bc2:	82 e0       	ldi	r24, 0x02	; 2
    5bc4:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    5bc6:	45 2b       	or	r20, r21
    5bc8:	09 f0       	breq	.+2      	; 0x5bcc <main+0x1a5c>
    5bca:	ec cc       	rjmp	.-1576   	; 0x55a4 <main+0x1434>
DISPLAY_DIGIT1():
    5bcc:	81 e0       	ldi	r24, 0x01	; 1
    5bce:	90 e0       	ldi	r25, 0x00	; 0
    5bd0:	e9 cc       	rjmp	.-1582   	; 0x55a4 <main+0x1434>
SET_LONG_PRESS_FUNCTION():
    5bd2:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5bd6:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5bda:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    5bde:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5be2:	8d e0       	ldi	r24, 0x0D	; 13
    5be4:	90 e0       	ldi	r25, 0x00	; 0
    5be6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5bea:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5bee:	8a e1       	ldi	r24, 0x1A	; 26
    5bf0:	90 e0       	ldi	r25, 0x00	; 0
    5bf2:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5bf6:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5bfa:	81 e0       	ldi	r24, 0x01	; 1
    5bfc:	90 e0       	ldi	r25, 0x00	; 0
    5bfe:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5c02:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5c06:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    5c0a:	81 11       	cpse	r24, r1
    5c0c:	81 c0       	rjmp	.+258    	; 0x5d10 <main+0x1ba0>
    5c0e:	80 90 d4 28 	lds	r8, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    5c12:	90 90 d5 28 	lds	r9, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    5c16:	a0 90 d6 28 	lds	r10, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    5c1a:	b0 90 d7 28 	lds	r11, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    5c1e:	2d ec       	ldi	r18, 0xCD	; 205
    5c20:	3c ec       	ldi	r19, 0xCC	; 204
    5c22:	47 ec       	ldi	r20, 0xC7	; 199
    5c24:	52 e4       	ldi	r21, 0x42	; 66
    5c26:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_DEG>
    5c2a:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    5c2e:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    5c32:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    5c36:	cc d5       	rcall	.+2968   	; 0x67d0 <__gesf2>
    5c38:	18 16       	cp	r1, r24
    5c3a:	6c f4       	brge	.+26     	; 0x5c56 <main+0x1ae6>
    5c3c:	20 e0       	ldi	r18, 0x00	; 0
    5c3e:	30 e0       	ldi	r19, 0x00	; 0
    5c40:	40 e2       	ldi	r20, 0x20	; 32
    5c42:	51 e4       	ldi	r21, 0x41	; 65
    5c44:	c5 01       	movw	r24, r10
    5c46:	b4 01       	movw	r22, r8
    5c48:	c7 d5       	rcall	.+2958   	; 0x67d8 <__mulsf3>
    5c4a:	df d4       	rcall	.+2494   	; 0x660a <__fixsfsi>
    5c4c:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5c50:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5c54:	28 cf       	rjmp	.-432    	; 0x5aa6 <main+0x1936>
    5c56:	20 e0       	ldi	r18, 0x00	; 0
    5c58:	30 e0       	ldi	r19, 0x00	; 0
    5c5a:	48 ec       	ldi	r20, 0xC8	; 200
    5c5c:	52 e4       	ldi	r21, 0x42	; 66
    5c5e:	c5 01       	movw	r24, r10
    5c60:	b4 01       	movw	r22, r8
    5c62:	ba d5       	rcall	.+2932   	; 0x67d8 <__mulsf3>
    5c64:	d2 d4       	rcall	.+2468   	; 0x660a <__fixsfsi>
    5c66:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5c6a:	81 e0       	ldi	r24, 0x01	; 1
    5c6c:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
    5c70:	1a cf       	rjmp	.-460    	; 0x5aa6 <main+0x1936>
    5c72:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5c76:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5c7a:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    5c7e:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5c82:	8d e0       	ldi	r24, 0x0D	; 13
    5c84:	90 e0       	ldi	r25, 0x00	; 0
    5c86:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5c8a:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5c8e:	8a e1       	ldi	r24, 0x1A	; 26
    5c90:	90 e0       	ldi	r25, 0x00	; 0
    5c92:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5c96:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5c9a:	81 e0       	ldi	r24, 0x01	; 1
    5c9c:	90 e0       	ldi	r25, 0x00	; 0
    5c9e:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5ca2:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5ca6:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <DEGREE_VALUE_SET>
    5caa:	81 11       	cpse	r24, r1
    5cac:	31 c0       	rjmp	.+98     	; 0x5d10 <main+0x1ba0>
    5cae:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    5cb2:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    5cb6:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    5cba:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
    5cbe:	6b 83       	std	Y+3, r22	; 0x03
    5cc0:	7c 83       	std	Y+4, r23	; 0x04
    5cc2:	8d 83       	std	Y+5, r24	; 0x05
    5cc4:	9e 83       	std	Y+6, r25	; 0x06
    5cc6:	20 e0       	ldi	r18, 0x00	; 0
    5cc8:	30 e0       	ldi	r19, 0x00	; 0
    5cca:	48 ec       	ldi	r20, 0xC8	; 200
    5ccc:	52 e4       	ldi	r21, 0x42	; 66
    5cce:	84 d5       	rcall	.+2824   	; 0x67d8 <__mulsf3>
    5cd0:	9c d4       	rcall	.+2360   	; 0x660a <__fixsfsi>
    5cd2:	4b 01       	movw	r8, r22
    5cd4:	5c 01       	movw	r10, r24
    5cd6:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5cda:	2d ec       	ldi	r18, 0xCD	; 205
    5cdc:	3c ec       	ldi	r19, 0xCC	; 204
    5cde:	47 ec       	ldi	r20, 0xC7	; 199
    5ce0:	52 e4       	ldi	r21, 0x42	; 66
    5ce2:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_DEG>
    5ce6:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    5cea:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    5cee:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    5cf2:	6e d5       	rcall	.+2780   	; 0x67d0 <__gesf2>
    5cf4:	18 16       	cp	r1, r24
    5cf6:	4c f4       	brge	.+18     	; 0x5d0a <main+0x1b9a>
    5cf8:	20 e0       	ldi	r18, 0x00	; 0
    5cfa:	30 e0       	ldi	r19, 0x00	; 0
    5cfc:	40 e2       	ldi	r20, 0x20	; 32
    5cfe:	51 e4       	ldi	r21, 0x41	; 65
    5d00:	6b 81       	ldd	r22, Y+3	; 0x03
    5d02:	7c 81       	ldd	r23, Y+4	; 0x04
    5d04:	8d 81       	ldd	r24, Y+5	; 0x05
    5d06:	9e 81       	ldd	r25, Y+6	; 0x06
    5d08:	9f cf       	rjmp	.-194    	; 0x5c48 <main+0x1ad8>
    5d0a:	c5 01       	movw	r24, r10
    5d0c:	b4 01       	movw	r22, r8
    5d0e:	ab cf       	rjmp	.-170    	; 0x5c66 <main+0x1af6>
    5d10:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5d14:	20 e0       	ldi	r18, 0x00	; 0
    5d16:	30 e0       	ldi	r19, 0x00	; 0
    5d18:	40 e2       	ldi	r20, 0x20	; 32
    5d1a:	51 e4       	ldi	r21, 0x41	; 65
    5d1c:	60 91 c1 28 	lds	r22, 0x28C1	; 0x8028c1 <TEMP_FAH_RAW>
    5d20:	70 91 c2 28 	lds	r23, 0x28C2	; 0x8028c2 <TEMP_FAH_RAW+0x1>
    5d24:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <TEMP_FAH_RAW+0x2>
    5d28:	90 91 c4 28 	lds	r25, 0x28C4	; 0x8028c4 <TEMP_FAH_RAW+0x3>
    5d2c:	55 d5       	rcall	.+2730   	; 0x67d8 <__mulsf3>
    5d2e:	6d d4       	rcall	.+2266   	; 0x660a <__fixsfsi>
    5d30:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5d34:	85 e1       	ldi	r24, 0x15	; 21
    5d36:	90 e0       	ldi	r25, 0x00	; 0
    5d38:	35 cc       	rjmp	.-1942   	; 0x55a4 <main+0x1434>
    5d3a:	81 e0       	ldi	r24, 0x01	; 1
    5d3c:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT1_0>
    5d40:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5d44:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5d48:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    5d4c:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5d50:	8d e0       	ldi	r24, 0x0D	; 13
    5d52:	90 e0       	ldi	r25, 0x00	; 0
    5d54:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5d58:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5d5c:	6a e1       	ldi	r22, 0x1A	; 26
    5d5e:	c6 2e       	mov	r12, r22
    5d60:	d1 2c       	mov	r13, r1
    5d62:	c0 92 e0 28 	sts	0x28E0, r12	; 0x8028e0 <digits2+0x4>
    5d66:	d0 92 e1 28 	sts	0x28E1, r13	; 0x8028e1 <digits2+0x5>
    5d6a:	82 e0       	ldi	r24, 0x02	; 2
    5d6c:	90 e0       	ldi	r25, 0x00	; 0
    5d6e:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5d72:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5d76:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5d7a:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5d7e:	2a e0       	ldi	r18, 0x0A	; 10
    5d80:	28 9f       	mul	r18, r24
    5d82:	b0 01       	movw	r22, r0
    5d84:	29 9f       	mul	r18, r25
    5d86:	70 0d       	add	r23, r0
    5d88:	11 24       	eor	r1, r1
    5d8a:	07 2e       	mov	r0, r23
    5d8c:	00 0c       	add	r0, r0
    5d8e:	88 0b       	sbc	r24, r24
    5d90:	99 0b       	sbc	r25, r25
    5d92:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5d96:	c0 92 e4 28 	sts	0x28E4, r12	; 0x8028e4 <digits1>
    5d9a:	d0 92 e5 28 	sts	0x28E5, r13	; 0x8028e5 <digits1+0x1>
    5d9e:	83 ce       	rjmp	.-762    	; 0x5aa6 <main+0x1936>
    5da0:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    5da4:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    5da8:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    5dac:	8d e0       	ldi	r24, 0x0D	; 13
    5dae:	90 e0       	ldi	r25, 0x00	; 0
    5db0:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    5db4:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    5db8:	8a e1       	ldi	r24, 0x1A	; 26
    5dba:	90 e0       	ldi	r25, 0x00	; 0
    5dbc:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    5dc0:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    5dc4:	82 e0       	ldi	r24, 0x02	; 2
    5dc6:	90 e0       	ldi	r25, 0x00	; 0
    5dc8:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    5dcc:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5dd0:	80 91 35 28 	lds	r24, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    5dd4:	90 91 36 28 	lds	r25, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    5dd8:	2a e0       	ldi	r18, 0x0A	; 10
    5dda:	28 9f       	mul	r18, r24
    5ddc:	b0 01       	movw	r22, r0
    5dde:	29 9f       	mul	r18, r25
    5de0:	70 0d       	add	r23, r0
    5de2:	11 24       	eor	r1, r1
    5de4:	07 2e       	mov	r0, r23
    5de6:	00 0c       	add	r0, r0
    5de8:	88 0b       	sbc	r24, r24
    5dea:	99 0b       	sbc	r25, r25
    5dec:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5df0:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits1>
    5df4:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits1+0x1>
    5df8:	56 ce       	rjmp	.-852    	; 0x5aa6 <main+0x1936>
    5dfa:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    5dfe:	81 e0       	ldi	r24, 0x01	; 1
    5e00:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
    5e04:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    5e08:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
PID_Start():
    5e0c:	8e e1       	ldi	r24, 0x1E	; 30
    5e0e:	9a e2       	ldi	r25, 0x2A	; 42
    5e10:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    5e14:	60 91 15 29 	lds	r22, 0x2915	; 0x802915 <SET_LONG_VALUE+0x12>
    5e18:	70 91 16 29 	lds	r23, 0x2916	; 0x802916 <SET_LONG_VALUE+0x13>
    5e1c:	07 2e       	mov	r0, r23
    5e1e:	00 0c       	add	r0, r0
    5e20:	88 0b       	sbc	r24, r24
    5e22:	99 0b       	sbc	r25, r25
    5e24:	25 d4       	rcall	.+2122   	; 0x6670 <__floatsisf>
    5e26:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    5e2a:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    5e2e:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    5e32:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
DISPLAY_DIGIT1():
    5e36:	3f e0       	ldi	r19, 0x0F	; 15
    5e38:	83 2e       	mov	r8, r19
    5e3a:	91 2c       	mov	r9, r1
    5e3c:	4d e0       	ldi	r20, 0x0D	; 13
    5e3e:	a4 2e       	mov	r10, r20
    5e40:	b1 2c       	mov	r11, r1
    5e42:	50 e1       	ldi	r21, 0x10	; 16
    5e44:	c5 2e       	mov	r12, r21
    5e46:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    5e48:	20 91 37 29 	lds	r18, 0x2937	; 0x802937 <PID_SETPOINT>
    5e4c:	30 91 38 29 	lds	r19, 0x2938	; 0x802938 <PID_SETPOINT+0x1>
    5e50:	40 91 39 29 	lds	r20, 0x2939	; 0x802939 <PID_SETPOINT+0x2>
    5e54:	50 91 3a 29 	lds	r21, 0x293A	; 0x80293a <PID_SETPOINT+0x3>
    5e58:	60 91 3f 29 	lds	r22, 0x293F	; 0x80293f <PID_INPUT>
    5e5c:	70 91 40 29 	lds	r23, 0x2940	; 0x802940 <PID_INPUT+0x1>
    5e60:	80 91 41 29 	lds	r24, 0x2941	; 0x802941 <PID_INPUT+0x2>
    5e64:	90 91 42 29 	lds	r25, 0x2942	; 0x802942 <PID_INPUT+0x3>
    5e68:	64 d3       	rcall	.+1736   	; 0x6532 <__cmpsf2>
    5e6a:	87 ff       	sbrs	r24, 7
    5e6c:	b4 c1       	rjmp	.+872    	; 0x61d6 <main+0x2066>
    5e6e:	80 91 3c 28 	lds	r24, 0x283C	; 0x80283c <RST_BUTT>
    5e72:	88 23       	and	r24, r24
    5e74:	09 f4       	brne	.+2      	; 0x5e78 <main+0x1d08>
    5e76:	af c1       	rjmp	.+862    	; 0x61d6 <main+0x2066>
    5e78:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
    5e7c:	60 91 15 29 	lds	r22, 0x2915	; 0x802915 <SET_LONG_VALUE+0x12>
    5e80:	70 91 16 29 	lds	r23, 0x2916	; 0x802916 <SET_LONG_VALUE+0x13>
    5e84:	07 2e       	mov	r0, r23
    5e86:	00 0c       	add	r0, r0
    5e88:	88 0b       	sbc	r24, r24
    5e8a:	99 0b       	sbc	r25, r25
    5e8c:	f1 d3       	rcall	.+2018   	; 0x6670 <__floatsisf>
    5e8e:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    5e92:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    5e96:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    5e9a:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
    5e9e:	0e 94 ef 07 	call	0xfde	; 0xfde <Lclass::PID_callingg() [clone .constprop.29]>
digitalWrite():
    5ea2:	60 e0       	ldi	r22, 0x00	; 0
    5ea4:	8b e1       	ldi	r24, 0x1B	; 27
    5ea6:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
DISP_UPDATE():
    5eaa:	86 ef       	ldi	r24, 0xF6	; 246
    5eac:	9a e2       	ldi	r25, 0x2A	; 42
    5eae:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    5eb2:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    5eb6:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    5eba:	89 31       	cpi	r24, 0x19	; 25
    5ebc:	91 05       	cpc	r25, r1
    5ebe:	3c f5       	brge	.+78     	; 0x5f0e <main+0x1d9e>
DISPLAY_DIGIT1():
    5ec0:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    5ec4:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    5ec8:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    5ecc:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    5ed0:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    5ed4:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    5ed8:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits1+0x6>
    5edc:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5ee0:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5ee4:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5ee8:	07 2e       	mov	r0, r23
    5eea:	00 0c       	add	r0, r0
    5eec:	88 0b       	sbc	r24, r24
    5eee:	99 0b       	sbc	r25, r25
    5ef0:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    5ef4:	8a e1       	ldi	r24, 0x1A	; 26
    5ef6:	90 e0       	ldi	r25, 0x00	; 0
    5ef8:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    5efc:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    5f00:	a7 e1       	ldi	r26, 0x17	; 23
    5f02:	b0 e0       	ldi	r27, 0x00	; 0
    5f04:	a0 93 de 28 	sts	0x28DE, r26	; 0x8028de <digits2+0x2>
    5f08:	b0 93 df 28 	sts	0x28DF, r27	; 0x8028df <digits2+0x3>
    5f0c:	9d cf       	rjmp	.-198    	; 0x5e48 <main+0x1cd8>
DISPLAY_DIGIT1():
    5f0e:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits1>
    5f12:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits1+0x1>
    5f16:	80 92 e6 28 	sts	0x28E6, r8	; 0x8028e6 <digits1+0x2>
    5f1a:	90 92 e7 28 	sts	0x28E7, r9	; 0x8028e7 <digits1+0x3>
    5f1e:	a0 92 e8 28 	sts	0x28E8, r10	; 0x8028e8 <digits1+0x4>
    5f22:	b0 92 e9 28 	sts	0x28E9, r11	; 0x8028e9 <digits1+0x5>
    5f26:	c0 92 ea 28 	sts	0x28EA, r12	; 0x8028ea <digits1+0x6>
    5f2a:	d0 92 eb 28 	sts	0x28EB, r13	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5f2e:	c3 97       	sbiw	r24, 0x33	; 51
    5f30:	bc f2       	brlt	.-82     	; 0x5ee0 <main+0x1d70>
    5f32:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    5f36:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    5f3a:	d2 cf       	rjmp	.-92     	; 0x5ee0 <main+0x1d70>
digitalWrite():
    5f3c:	61 e0       	ldi	r22, 0x01	; 1
    5f3e:	80 e1       	ldi	r24, 0x10	; 16
    5f40:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    5f44:	80 90 d4 28 	lds	r8, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    5f48:	90 90 d5 28 	lds	r9, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    5f4c:	a0 90 d6 28 	lds	r10, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    5f50:	b0 90 d7 28 	lds	r11, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    5f54:	2d ec       	ldi	r18, 0xCD	; 205
    5f56:	3c ec       	ldi	r19, 0xCC	; 204
    5f58:	47 ec       	ldi	r20, 0xC7	; 199
    5f5a:	52 e4       	ldi	r21, 0x42	; 66
    5f5c:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_DEG>
    5f60:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    5f64:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    5f68:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    5f6c:	31 d4       	rcall	.+2146   	; 0x67d0 <__gesf2>
    5f6e:	20 e0       	ldi	r18, 0x00	; 0
    5f70:	30 e0       	ldi	r19, 0x00	; 0
    5f72:	40 e2       	ldi	r20, 0x20	; 32
    5f74:	51 e4       	ldi	r21, 0x41	; 65
    5f76:	18 16       	cp	r1, r24
    5f78:	24 f0       	brlt	.+8      	; 0x5f82 <main+0x1e12>
    5f7a:	20 e0       	ldi	r18, 0x00	; 0
    5f7c:	30 e0       	ldi	r19, 0x00	; 0
    5f7e:	48 ec       	ldi	r20, 0xC8	; 200
    5f80:	52 e4       	ldi	r21, 0x42	; 66
    5f82:	c5 01       	movw	r24, r10
    5f84:	b4 01       	movw	r22, r8
    5f86:	28 d4       	rcall	.+2128   	; 0x67d8 <__mulsf3>
    5f88:	40 d3       	rcall	.+1664   	; 0x660a <__fixsfsi>
    5f8a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    5f8e:	81 e0       	ldi	r24, 0x01	; 1
    5f90:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <DOT1_1>
    5f94:	6a e0       	ldi	r22, 0x0A	; 10
    5f96:	70 e0       	ldi	r23, 0x00	; 0
    5f98:	60 93 ea 28 	sts	0x28EA, r22	; 0x8028ea <digits1+0x6>
    5f9c:	70 93 eb 28 	sts	0x28EB, r23	; 0x8028eb <digits1+0x7>
    5fa0:	73 e3       	ldi	r23, 0x33	; 51
    5fa2:	c7 16       	cp	r12, r23
    5fa4:	d1 04       	cpc	r13, r1
    5fa6:	24 f0       	brlt	.+8      	; 0x5fb0 <main+0x1e40>
    5fa8:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    5fac:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    5fb0:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    5fb4:	90 91 90 28 	lds	r25, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    5fb8:	91 11       	cpse	r25, r1
    5fba:	62 c0       	rjmp	.+196    	; 0x6080 <main+0x1f10>
    5fbc:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <RST_BUTT>
    5fc0:	99 23       	and	r25, r25
    5fc2:	09 f4       	brne	.+2      	; 0x5fc6 <main+0x1e56>
    5fc4:	5d c0       	rjmp	.+186    	; 0x6080 <main+0x1f10>
    5fc6:	88 23       	and	r24, r24
    5fc8:	09 f4       	brne	.+2      	; 0x5fcc <main+0x1e5c>
    5fca:	64 c0       	rjmp	.+200    	; 0x6094 <main+0x1f24>
    5fcc:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
    5fd0:	60 91 15 29 	lds	r22, 0x2915	; 0x802915 <SET_LONG_VALUE+0x12>
    5fd4:	70 91 16 29 	lds	r23, 0x2916	; 0x802916 <SET_LONG_VALUE+0x13>
    5fd8:	07 2e       	mov	r0, r23
    5fda:	00 0c       	add	r0, r0
    5fdc:	88 0b       	sbc	r24, r24
    5fde:	99 0b       	sbc	r25, r25
    5fe0:	47 d3       	rcall	.+1678   	; 0x6670 <__floatsisf>
    5fe2:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    5fe6:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    5fea:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    5fee:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
DISP_UPDATE():
    5ff2:	86 ef       	ldi	r24, 0xF6	; 246
    5ff4:	9a e2       	ldi	r25, 0x2A	; 42
    5ff6:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    5ffa:	0e 94 ef 07 	call	0xfde	; 0xfde <Lclass::PID_callingg() [clone .constprop.29]>
digitalWrite():
    5ffe:	60 e0       	ldi	r22, 0x00	; 0
    6000:	8a e1       	ldi	r24, 0x1A	; 26
    6002:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    6006:	61 e0       	ldi	r22, 0x01	; 1
    6008:	8b e1       	ldi	r24, 0x1B	; 27
    600a:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    600e:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6012:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6016:	07 2e       	mov	r0, r23
    6018:	00 0c       	add	r0, r0
    601a:	88 0b       	sbc	r24, r24
    601c:	99 0b       	sbc	r25, r25
    601e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    6022:	ea e1       	ldi	r30, 0x1A	; 26
    6024:	f0 e0       	ldi	r31, 0x00	; 0
    6026:	e0 93 dc 28 	sts	0x28DC, r30	; 0x8028dc <digits2>
    602a:	f0 93 dd 28 	sts	0x28DD, r31	; 0x8028dd <digits2+0x1>
    602e:	47 e1       	ldi	r20, 0x17	; 23
    6030:	50 e0       	ldi	r21, 0x00	; 0
    6032:	40 93 de 28 	sts	0x28DE, r20	; 0x8028de <digits2+0x2>
    6036:	50 93 df 28 	sts	0x28DF, r21	; 0x8028df <digits2+0x3>
    603a:	81 e0       	ldi	r24, 0x01	; 1
    603c:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
    6040:	c0 90 89 28 	lds	r12, 0x2889	; 0x802889 <i>
    6044:	d0 90 8a 28 	lds	r13, 0x288A	; 0x80288a <i+0x1>
    6048:	59 e1       	ldi	r21, 0x19	; 25
    604a:	c5 16       	cp	r12, r21
    604c:	d1 04       	cpc	r13, r1
    604e:	0c f0       	brlt	.+2      	; 0x6052 <main+0x1ee2>
    6050:	75 cf       	rjmp	.-278    	; 0x5f3c <main+0x1dcc>
DISPLAY_DIGIT1():
    6052:	20 92 e4 28 	sts	0x28E4, r2	; 0x8028e4 <digits1>
    6056:	30 92 e5 28 	sts	0x28E5, r3	; 0x8028e5 <digits1+0x1>
    605a:	20 92 e6 28 	sts	0x28E6, r2	; 0x8028e6 <digits1+0x2>
    605e:	30 92 e7 28 	sts	0x28E7, r3	; 0x8028e7 <digits1+0x3>
    6062:	20 92 e8 28 	sts	0x28E8, r2	; 0x8028e8 <digits1+0x4>
    6066:	30 92 e9 28 	sts	0x28E9, r3	; 0x8028e9 <digits1+0x5>
    606a:	20 92 ea 28 	sts	0x28EA, r2	; 0x8028ea <digits1+0x6>
    606e:	30 92 eb 28 	sts	0x28EB, r3	; 0x8028eb <digits1+0x7>
digitalWrite():
    6072:	60 e0       	ldi	r22, 0x00	; 0
    6074:	80 e1       	ldi	r24, 0x10	; 16
    6076:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    607a:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    607e:	98 cf       	rjmp	.-208    	; 0x5fb0 <main+0x1e40>
    6080:	88 23       	and	r24, r24
    6082:	41 f0       	breq	.+16     	; 0x6094 <main+0x1f24>
    6084:	8b e0       	ldi	r24, 0x0B	; 11
    6086:	90 e0       	ldi	r25, 0x00	; 0
    6088:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    608c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6090:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    6094:	8d e0       	ldi	r24, 0x0D	; 13
    6096:	90 e0       	ldi	r25, 0x00	; 0
    6098:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    609c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    60a0:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    60a4:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>
    60a8:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    60ac:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    60b0:	81 e0       	ldi	r24, 0x01	; 1
    60b2:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <DOT2_1>
    60b6:	60 91 17 29 	lds	r22, 0x2917	; 0x802917 <SET_LONG_VALUE+0x14>
    60ba:	70 91 18 29 	lds	r23, 0x2918	; 0x802918 <SET_LONG_VALUE+0x15>
    60be:	07 2e       	mov	r0, r23
    60c0:	00 0c       	add	r0, r0
    60c2:	88 0b       	sbc	r24, r24
    60c4:	99 0b       	sbc	r25, r25
    60c6:	d4 d2       	rcall	.+1448   	; 0x6670 <__floatsisf>
    60c8:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    60cc:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    60d0:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    60d4:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
DISPLAY_DIGIT1():
    60d8:	8f e0       	ldi	r24, 0x0F	; 15
    60da:	c8 2e       	mov	r12, r24
    60dc:	d1 2c       	mov	r13, r1
    60de:	9d e0       	ldi	r25, 0x0D	; 13
    60e0:	a9 2e       	mov	r10, r25
    60e2:	b1 2c       	mov	r11, r1
    60e4:	20 e1       	ldi	r18, 0x10	; 16
    60e6:	82 2e       	mov	r8, r18
    60e8:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    60ea:	20 91 37 29 	lds	r18, 0x2937	; 0x802937 <PID_SETPOINT>
    60ee:	30 91 38 29 	lds	r19, 0x2938	; 0x802938 <PID_SETPOINT+0x1>
    60f2:	40 91 39 29 	lds	r20, 0x2939	; 0x802939 <PID_SETPOINT+0x2>
    60f6:	50 91 3a 29 	lds	r21, 0x293A	; 0x80293a <PID_SETPOINT+0x3>
    60fa:	60 91 3f 29 	lds	r22, 0x293F	; 0x80293f <PID_INPUT>
    60fe:	70 91 40 29 	lds	r23, 0x2940	; 0x802940 <PID_INPUT+0x1>
    6102:	80 91 41 29 	lds	r24, 0x2941	; 0x802941 <PID_INPUT+0x2>
    6106:	90 91 42 29 	lds	r25, 0x2942	; 0x802942 <PID_INPUT+0x3>
    610a:	13 d2       	rcall	.+1062   	; 0x6532 <__cmpsf2>
    610c:	87 ff       	sbrs	r24, 7
    610e:	63 c0       	rjmp	.+198    	; 0x61d6 <main+0x2066>
    6110:	80 91 3c 28 	lds	r24, 0x283C	; 0x80283c <RST_BUTT>
    6114:	88 23       	and	r24, r24
    6116:	09 f4       	brne	.+2      	; 0x611a <main+0x1faa>
    6118:	5e c0       	rjmp	.+188    	; 0x61d6 <main+0x2066>
    611a:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
    611e:	60 91 17 29 	lds	r22, 0x2917	; 0x802917 <SET_LONG_VALUE+0x14>
    6122:	70 91 18 29 	lds	r23, 0x2918	; 0x802918 <SET_LONG_VALUE+0x15>
    6126:	07 2e       	mov	r0, r23
    6128:	00 0c       	add	r0, r0
    612a:	88 0b       	sbc	r24, r24
    612c:	99 0b       	sbc	r25, r25
    612e:	a0 d2       	rcall	.+1344   	; 0x6670 <__floatsisf>
    6130:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    6134:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    6138:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    613c:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
    6140:	0e 94 ef 07 	call	0xfde	; 0xfde <Lclass::PID_callingg() [clone .constprop.29]>
DISP_UPDATE():
    6144:	86 ef       	ldi	r24, 0xF6	; 246
    6146:	9a e2       	ldi	r25, 0x2A	; 42
    6148:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
digitalWrite():
    614c:	60 e0       	ldi	r22, 0x00	; 0
    614e:	8b e1       	ldi	r24, 0x1B	; 27
    6150:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6154:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    6158:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    615c:	89 31       	cpi	r24, 0x19	; 25
    615e:	91 05       	cpc	r25, r1
    6160:	1c f5       	brge	.+70     	; 0x61a8 <main+0x2038>
DISPLAY_DIGIT1():
    6162:	00 93 e4 28 	sts	0x28E4, r16	; 0x8028e4 <digits1>
    6166:	10 93 e5 28 	sts	0x28E5, r17	; 0x8028e5 <digits1+0x1>
    616a:	00 93 e6 28 	sts	0x28E6, r16	; 0x8028e6 <digits1+0x2>
    616e:	10 93 e7 28 	sts	0x28E7, r17	; 0x8028e7 <digits1+0x3>
    6172:	00 93 e8 28 	sts	0x28E8, r16	; 0x8028e8 <digits1+0x4>
    6176:	10 93 e9 28 	sts	0x28E9, r17	; 0x8028e9 <digits1+0x5>
    617a:	00 93 ea 28 	sts	0x28EA, r16	; 0x8028ea <digits1+0x6>
    617e:	10 93 eb 28 	sts	0x28EB, r17	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6182:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    6186:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    618a:	07 2e       	mov	r0, r23
    618c:	00 0c       	add	r0, r0
    618e:	88 0b       	sbc	r24, r24
    6190:	99 0b       	sbc	r25, r25
    6192:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    6196:	40 92 dc 28 	sts	0x28DC, r4	; 0x8028dc <digits2>
    619a:	50 92 dd 28 	sts	0x28DD, r5	; 0x8028dd <digits2+0x1>
    619e:	60 92 de 28 	sts	0x28DE, r6	; 0x8028de <digits2+0x2>
    61a2:	70 92 df 28 	sts	0x28DF, r7	; 0x8028df <digits2+0x3>
    61a6:	a1 cf       	rjmp	.-190    	; 0x60ea <main+0x1f7a>
DISPLAY_DIGIT1():
    61a8:	40 92 e4 28 	sts	0x28E4, r4	; 0x8028e4 <digits1>
    61ac:	50 92 e5 28 	sts	0x28E5, r5	; 0x8028e5 <digits1+0x1>
    61b0:	c0 92 e6 28 	sts	0x28E6, r12	; 0x8028e6 <digits1+0x2>
    61b4:	d0 92 e7 28 	sts	0x28E7, r13	; 0x8028e7 <digits1+0x3>
    61b8:	a0 92 e8 28 	sts	0x28E8, r10	; 0x8028e8 <digits1+0x4>
    61bc:	b0 92 e9 28 	sts	0x28E9, r11	; 0x8028e9 <digits1+0x5>
    61c0:	80 92 ea 28 	sts	0x28EA, r8	; 0x8028ea <digits1+0x6>
    61c4:	90 92 eb 28 	sts	0x28EB, r9	; 0x8028eb <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    61c8:	c3 97       	sbiw	r24, 0x33	; 51
    61ca:	dc f2       	brlt	.-74     	; 0x6182 <main+0x2012>
    61cc:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    61d0:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    61d4:	d6 cf       	rjmp	.-84     	; 0x6182 <main+0x2012>
    61d6:	40 92 84 28 	sts	0x2884, r4	; 0x802884 <SET_MIN>
    61da:	50 92 85 28 	sts	0x2885, r5	; 0x802885 <SET_MIN+0x1>
    61de:	81 e0       	ldi	r24, 0x01	; 1
    61e0:	80 93 54 28 	sts	0x2854, r24	; 0x802854 <COUNTDOWN_START>
    61e4:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    61e8:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    61ec:	01 96       	adiw	r24, 0x01	; 1
    61ee:	4c cf       	rjmp	.-360    	; 0x6088 <main+0x1f18>
    61f0:	80 91 54 28 	lds	r24, 0x2854	; 0x802854 <COUNTDOWN_START>
    61f4:	90 91 90 28 	lds	r25, 0x2890	; 0x802890 <Mode_Button_Single_Press_In_Settings>
    61f8:	91 11       	cpse	r25, r1
    61fa:	a4 c0       	rjmp	.+328    	; 0x6344 <main+0x21d4>
    61fc:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <RST_BUTT>
    6200:	99 23       	and	r25, r25
    6202:	09 f4       	brne	.+2      	; 0x6206 <main+0x2096>
    6204:	9f c0       	rjmp	.+318    	; 0x6344 <main+0x21d4>
    6206:	88 23       	and	r24, r24
    6208:	09 f4       	brne	.+2      	; 0x620c <main+0x209c>
    620a:	9c c0       	rjmp	.+312    	; 0x6344 <main+0x21d4>
    620c:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.28]>
    6210:	60 91 17 29 	lds	r22, 0x2917	; 0x802917 <SET_LONG_VALUE+0x14>
    6214:	70 91 18 29 	lds	r23, 0x2918	; 0x802918 <SET_LONG_VALUE+0x15>
    6218:	07 2e       	mov	r0, r23
    621a:	00 0c       	add	r0, r0
    621c:	88 0b       	sbc	r24, r24
    621e:	99 0b       	sbc	r25, r25
    6220:	27 d2       	rcall	.+1102   	; 0x6670 <__floatsisf>
    6222:	60 93 37 29 	sts	0x2937, r22	; 0x802937 <PID_SETPOINT>
    6226:	70 93 38 29 	sts	0x2938, r23	; 0x802938 <PID_SETPOINT+0x1>
    622a:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <PID_SETPOINT+0x2>
    622e:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <PID_SETPOINT+0x3>
    6232:	0e 94 ef 07 	call	0xfde	; 0xfde <Lclass::PID_callingg() [clone .constprop.29]>
DISP_UPDATE():
    6236:	86 ef       	ldi	r24, 0xF6	; 246
    6238:	9a e2       	ldi	r25, 0x2A	; 42
    623a:	0e 94 f5 08 	call	0x11ea	; 0x11ea <Ticker::update()>
digitalWrite():
    623e:	60 e0       	ldi	r22, 0x00	; 0
    6240:	8a e1       	ldi	r24, 0x1A	; 26
    6242:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    6246:	61 e0       	ldi	r22, 0x01	; 1
    6248:	8b e1       	ldi	r24, 0x1B	; 27
    624a:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    624e:	60 91 35 28 	lds	r22, 0x2835	; 0x802835 <HIGH_CAL_VALUE_SET>
    6252:	70 91 36 28 	lds	r23, 0x2836	; 0x802836 <HIGH_CAL_VALUE_SET+0x1>
    6256:	07 2e       	mov	r0, r23
    6258:	00 0c       	add	r0, r0
    625a:	88 0b       	sbc	r24, r24
    625c:	99 0b       	sbc	r25, r25
    625e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.34]>
    6262:	8e e1       	ldi	r24, 0x1E	; 30
    6264:	90 e0       	ldi	r25, 0x00	; 0
    6266:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    626a:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    626e:	a9 e1       	ldi	r26, 0x19	; 25
    6270:	b0 e0       	ldi	r27, 0x00	; 0
    6272:	a0 93 de 28 	sts	0x28DE, r26	; 0x8028de <digits2+0x2>
    6276:	b0 93 df 28 	sts	0x28DF, r27	; 0x8028df <digits2+0x3>
    627a:	dd 24       	eor	r13, r13
    627c:	d3 94       	inc	r13
    627e:	d0 92 88 28 	sts	0x2888, r13	; 0x802888 <DOT2_1>
    6282:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    6286:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    628a:	49 97       	sbiw	r24, 0x19	; 25
    628c:	04 f5       	brge	.+64     	; 0x62ce <main+0x215e>
DISPLAY_DIGIT1():
    628e:	20 92 e4 28 	sts	0x28E4, r2	; 0x8028e4 <digits1>
    6292:	30 92 e5 28 	sts	0x28E5, r3	; 0x8028e5 <digits1+0x1>
    6296:	20 92 e6 28 	sts	0x28E6, r2	; 0x8028e6 <digits1+0x2>
    629a:	30 92 e7 28 	sts	0x28E7, r3	; 0x8028e7 <digits1+0x3>
    629e:	20 92 e8 28 	sts	0x28E8, r2	; 0x8028e8 <digits1+0x4>
    62a2:	30 92 e9 28 	sts	0x28E9, r3	; 0x8028e9 <digits1+0x5>
    62a6:	20 92 ea 28 	sts	0x28EA, r2	; 0x8028ea <digits1+0x6>
    62aa:	30 92 eb 28 	sts	0x28EB, r3	; 0x8028eb <digits1+0x7>
digitalWrite():
    62ae:	60 e0       	ldi	r22, 0x00	; 0
    62b0:	80 e1       	ldi	r24, 0x10	; 16
    62b2:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    62b6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    62ba:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    62be:	c3 97       	sbiw	r24, 0x33	; 51
    62c0:	0c f4       	brge	.+2      	; 0x62c4 <main+0x2154>
    62c2:	96 cf       	rjmp	.-212    	; 0x61f0 <main+0x2080>
    62c4:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <i>
    62c8:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <i+0x1>
    62cc:	91 cf       	rjmp	.-222    	; 0x61f0 <main+0x2080>
digitalWrite():
    62ce:	61 e0       	ldi	r22, 0x01	; 1
    62d0:	80 e1       	ldi	r24, 0x10	; 16
    62d2:	0e 94 19 07 	call	0xe32	; 0xe32 <digitalWrite.part.2>
    62d6:	80 90 d4 28 	lds	r8, 0x28D4	; 0x8028d4 <TEMP_DEG_RAW>
    62da:	90 90 d5 28 	lds	r9, 0x28D5	; 0x8028d5 <TEMP_DEG_RAW+0x1>
    62de:	a0 90 d6 28 	lds	r10, 0x28D6	; 0x8028d6 <TEMP_DEG_RAW+0x2>
    62e2:	b0 90 d7 28 	lds	r11, 0x28D7	; 0x8028d7 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    62e6:	2d ec       	ldi	r18, 0xCD	; 205
    62e8:	3c ec       	ldi	r19, 0xCC	; 204
    62ea:	47 ec       	ldi	r20, 0xC7	; 199
    62ec:	52 e4       	ldi	r21, 0x42	; 66
    62ee:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_DEG>
    62f2:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_DEG+0x1>
    62f6:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_DEG+0x2>
    62fa:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_DEG+0x3>
    62fe:	68 d2       	rcall	.+1232   	; 0x67d0 <__gesf2>
    6300:	18 16       	cp	r1, r24
    6302:	9c f4       	brge	.+38     	; 0x632a <main+0x21ba>
    6304:	20 e0       	ldi	r18, 0x00	; 0
    6306:	30 e0       	ldi	r19, 0x00	; 0
    6308:	40 e2       	ldi	r20, 0x20	; 32
    630a:	51 e4       	ldi	r21, 0x41	; 65
    630c:	c5 01       	movw	r24, r10
    630e:	b4 01       	movw	r22, r8
    6310:	63 d2       	rcall	.+1222   	; 0x67d8 <__mulsf3>
    6312:	7b d1       	rcall	.+758    	; 0x660a <__fixsfsi>
    6314:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    6318:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    631c:	ea e0       	ldi	r30, 0x0A	; 10
    631e:	f0 e0       	ldi	r31, 0x00	; 0
    6320:	e0 93 ea 28 	sts	0x28EA, r30	; 0x8028ea <digits1+0x6>
    6324:	f0 93 eb 28 	sts	0x28EB, r31	; 0x8028eb <digits1+0x7>
    6328:	c6 cf       	rjmp	.-116    	; 0x62b6 <main+0x2146>
    632a:	20 e0       	ldi	r18, 0x00	; 0
    632c:	30 e0       	ldi	r19, 0x00	; 0
    632e:	48 ec       	ldi	r20, 0xC8	; 200
    6330:	52 e4       	ldi	r21, 0x42	; 66
    6332:	c5 01       	movw	r24, r10
    6334:	b4 01       	movw	r22, r8
    6336:	50 d2       	rcall	.+1184   	; 0x67d8 <__mulsf3>
    6338:	68 d1       	rcall	.+720    	; 0x660a <__fixsfsi>
    633a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.35]>
    633e:	d0 92 a2 28 	sts	0x28A2, r13	; 0x8028a2 <DOT1_1>
    6342:	ec cf       	rjmp	.-40     	; 0x631c <main+0x21ac>
    6344:	10 92 37 29 	sts	0x2937, r1	; 0x802937 <PID_SETPOINT>
    6348:	10 92 38 29 	sts	0x2938, r1	; 0x802938 <PID_SETPOINT+0x1>
    634c:	10 92 39 29 	sts	0x2939, r1	; 0x802939 <PID_SETPOINT+0x2>
    6350:	10 92 3a 29 	sts	0x293A, r1	; 0x80293a <PID_SETPOINT+0x3>
    6354:	88 23       	and	r24, r24
    6356:	19 f0       	breq	.+6      	; 0x635e <main+0x21ee>
    6358:	8d e0       	ldi	r24, 0x0D	; 13
    635a:	90 e0       	ldi	r25, 0x00	; 0
    635c:	95 ce       	rjmp	.-726    	; 0x6088 <main+0x1f18>
    635e:	10 92 36 29 	sts	0x2936, r1	; 0x802936 <LONG_PRESS>
    6362:	9e ce       	rjmp	.-708    	; 0x60a0 <main+0x1f30>
    6364:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    6368:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    636c:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <i>
    6370:	90 91 8a 28 	lds	r25, 0x288A	; 0x80288a <i+0x1>
    6374:	88 3c       	cpi	r24, 0xC8	; 200
    6376:	91 05       	cpc	r25, r1
    6378:	1c f5       	brge	.+70     	; 0x63c0 <main+0x2250>
DISPLAY_DIGIT2():
    637a:	e0 92 dc 28 	sts	0x28DC, r14	; 0x8028dc <digits2>
    637e:	f0 92 dd 28 	sts	0x28DD, r15	; 0x8028dd <digits2+0x1>
    6382:	8d e0       	ldi	r24, 0x0D	; 13
    6384:	90 e0       	ldi	r25, 0x00	; 0
    6386:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    638a:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    638e:	2a e1       	ldi	r18, 0x1A	; 26
    6390:	30 e0       	ldi	r19, 0x00	; 0
    6392:	20 93 e0 28 	sts	0x28E0, r18	; 0x8028e0 <digits2+0x4>
    6396:	30 93 e1 28 	sts	0x28E1, r19	; 0x8028e1 <digits2+0x5>
    639a:	2e e0       	ldi	r18, 0x0E	; 14
    639c:	30 e0       	ldi	r19, 0x00	; 0
    639e:	20 93 e2 28 	sts	0x28E2, r18	; 0x8028e2 <digits2+0x6>
    63a2:	30 93 e3 28 	sts	0x28E3, r19	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    63a6:	2c e0       	ldi	r18, 0x0C	; 12
    63a8:	30 e0       	ldi	r19, 0x00	; 0
    63aa:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    63ae:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    63b2:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <digits1+0x2>
    63b6:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <digits1+0x3>
    63ba:	8c e1       	ldi	r24, 0x1C	; 28
    63bc:	90 e0       	ldi	r25, 0x00	; 0
    63be:	ce cb       	rjmp	.-2148   	; 0x5b5c <main+0x19ec>
SET_LONG_PRESS_FUNCTION():
    63c0:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <Service_Menu>
    63c4:	47 ca       	rjmp	.-2930   	; 0x5854 <main+0x16e4>
    63c6:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    63ca:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    63ce:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    63d2:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    63d6:	8a e1       	ldi	r24, 0x1A	; 26
    63d8:	90 e0       	ldi	r25, 0x00	; 0
    63da:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    63de:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    63e2:	87 e1       	ldi	r24, 0x17	; 23
    63e4:	90 e0       	ldi	r25, 0x00	; 0
    63e6:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    63ea:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    63ee:	8b e1       	ldi	r24, 0x1B	; 27
    63f0:	90 e0       	ldi	r25, 0x00	; 0
    63f2:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <digits2+0x4>
    63f6:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <digits2+0x5>
    63fa:	00 93 e2 28 	sts	0x28E2, r16	; 0x8028e2 <digits2+0x6>
    63fe:	10 93 e3 28 	sts	0x28E3, r17	; 0x8028e3 <digits2+0x7>
    6402:	0c 94 a2 25 	jmp	0x4b44	; 0x4b44 <main+0x9d4>
SET_LONG_PRESS_FUNCTION():
    6406:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT1_0>
    640a:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <DOT1_1>
    640e:	10 92 88 28 	sts	0x2888, r1	; 0x802888 <DOT2_1>
    6412:	0e 94 8e 07 	call	0xf1c	; 0xf1c <Pclass::ALL_LED_OFF() [clone .constprop.49]>
DISPLAY_DIGIT2():
    6416:	85 e1       	ldi	r24, 0x15	; 21
    6418:	90 e0       	ldi	r25, 0x00	; 0
    641a:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <digits2>
    641e:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <digits2+0x1>
    6422:	8d e0       	ldi	r24, 0x0D	; 13
    6424:	90 e0       	ldi	r25, 0x00	; 0
    6426:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <digits2+0x2>
    642a:	90 93 df 28 	sts	0x28DF, r25	; 0x8028df <digits2+0x3>
    642e:	e0 92 e0 28 	sts	0x28E0, r14	; 0x8028e0 <digits2+0x4>
    6432:	f0 92 e1 28 	sts	0x28E1, r15	; 0x8028e1 <digits2+0x5>
    6436:	80 e1       	ldi	r24, 0x10	; 16
    6438:	90 e0       	ldi	r25, 0x00	; 0
    643a:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <digits2+0x6>
    643e:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <digits2+0x7>
DISPLAY_DIGIT1():
    6442:	21 e1       	ldi	r18, 0x11	; 17
    6444:	30 e0       	ldi	r19, 0x00	; 0
    6446:	20 93 e4 28 	sts	0x28E4, r18	; 0x8028e4 <digits1>
    644a:	30 93 e5 28 	sts	0x28E5, r19	; 0x8028e5 <digits1+0x1>
    644e:	2f e0       	ldi	r18, 0x0F	; 15
    6450:	30 e0       	ldi	r19, 0x00	; 0
    6452:	20 93 e6 28 	sts	0x28E6, r18	; 0x8028e6 <digits1+0x2>
    6456:	30 93 e7 28 	sts	0x28E7, r19	; 0x8028e7 <digits1+0x3>
    645a:	2c e0       	ldi	r18, 0x0C	; 12
    645c:	30 e0       	ldi	r19, 0x00	; 0
    645e:	d7 c8       	rjmp	.-3666   	; 0x560e <main+0x149e>
loop():
    6460:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]>
    6464:	0c 94 2f 24 	jmp	0x485e	; 0x485e <main+0x6ee>

00006468 <__subsf3>:
__subsf3():
    6468:	50 58       	subi	r21, 0x80	; 128

0000646a <__addsf3>:
    646a:	bb 27       	eor	r27, r27
    646c:	aa 27       	eor	r26, r26
    646e:	0e d0       	rcall	.+28     	; 0x648c <__addsf3x>
    6470:	75 c1       	rjmp	.+746    	; 0x675c <__fp_round>
__addsf3():
    6472:	66 d1       	rcall	.+716    	; 0x6740 <__fp_pscA>
    6474:	30 f0       	brcs	.+12     	; 0x6482 <__addsf3+0x18>
    6476:	6b d1       	rcall	.+726    	; 0x674e <__fp_pscB>
    6478:	20 f0       	brcs	.+8      	; 0x6482 <__addsf3+0x18>
    647a:	31 f4       	brne	.+12     	; 0x6488 <__addsf3+0x1e>
    647c:	9f 3f       	cpi	r25, 0xFF	; 255
    647e:	11 f4       	brne	.+4      	; 0x6484 <__addsf3+0x1a>
    6480:	1e f4       	brtc	.+6      	; 0x6488 <__addsf3+0x1e>
    6482:	5b c1       	rjmp	.+694    	; 0x673a <__fp_nan>
    6484:	0e f4       	brtc	.+2      	; 0x6488 <__addsf3+0x1e>
    6486:	e0 95       	com	r30
    6488:	e7 fb       	bst	r30, 7
    648a:	51 c1       	rjmp	.+674    	; 0x672e <__fp_inf>

0000648c <__addsf3x>:
__addsf3x():
    648c:	e9 2f       	mov	r30, r25
    648e:	77 d1       	rcall	.+750    	; 0x677e <__fp_split3>
    6490:	80 f3       	brcs	.-32     	; 0x6472 <__addsf3+0x8>
    6492:	ba 17       	cp	r27, r26
    6494:	62 07       	cpc	r22, r18
    6496:	73 07       	cpc	r23, r19
    6498:	84 07       	cpc	r24, r20
    649a:	95 07       	cpc	r25, r21
    649c:	18 f0       	brcs	.+6      	; 0x64a4 <__addsf3x+0x18>
    649e:	71 f4       	brne	.+28     	; 0x64bc <__addsf3x+0x30>
    64a0:	9e f5       	brtc	.+102    	; 0x6508 <__addsf3x+0x7c>
    64a2:	8f c1       	rjmp	.+798    	; 0x67c2 <__fp_zero>
    64a4:	0e f4       	brtc	.+2      	; 0x64a8 <__addsf3x+0x1c>
    64a6:	e0 95       	com	r30
    64a8:	0b 2e       	mov	r0, r27
    64aa:	ba 2f       	mov	r27, r26
    64ac:	a0 2d       	mov	r26, r0
    64ae:	0b 01       	movw	r0, r22
    64b0:	b9 01       	movw	r22, r18
    64b2:	90 01       	movw	r18, r0
    64b4:	0c 01       	movw	r0, r24
    64b6:	ca 01       	movw	r24, r20
    64b8:	a0 01       	movw	r20, r0
    64ba:	11 24       	eor	r1, r1
    64bc:	ff 27       	eor	r31, r31
    64be:	59 1b       	sub	r21, r25
    64c0:	99 f0       	breq	.+38     	; 0x64e8 <__addsf3x+0x5c>
    64c2:	59 3f       	cpi	r21, 0xF9	; 249
    64c4:	50 f4       	brcc	.+20     	; 0x64da <__addsf3x+0x4e>
    64c6:	50 3e       	cpi	r21, 0xE0	; 224
    64c8:	68 f1       	brcs	.+90     	; 0x6524 <__addsf3x+0x98>
    64ca:	1a 16       	cp	r1, r26
    64cc:	f0 40       	sbci	r31, 0x00	; 0
    64ce:	a2 2f       	mov	r26, r18
    64d0:	23 2f       	mov	r18, r19
    64d2:	34 2f       	mov	r19, r20
    64d4:	44 27       	eor	r20, r20
    64d6:	58 5f       	subi	r21, 0xF8	; 248
    64d8:	f3 cf       	rjmp	.-26     	; 0x64c0 <__addsf3x+0x34>
    64da:	46 95       	lsr	r20
    64dc:	37 95       	ror	r19
    64de:	27 95       	ror	r18
    64e0:	a7 95       	ror	r26
    64e2:	f0 40       	sbci	r31, 0x00	; 0
    64e4:	53 95       	inc	r21
    64e6:	c9 f7       	brne	.-14     	; 0x64da <__addsf3x+0x4e>
    64e8:	7e f4       	brtc	.+30     	; 0x6508 <__addsf3x+0x7c>
    64ea:	1f 16       	cp	r1, r31
    64ec:	ba 0b       	sbc	r27, r26
    64ee:	62 0b       	sbc	r22, r18
    64f0:	73 0b       	sbc	r23, r19
    64f2:	84 0b       	sbc	r24, r20
    64f4:	ba f0       	brmi	.+46     	; 0x6524 <__addsf3x+0x98>
    64f6:	91 50       	subi	r25, 0x01	; 1
    64f8:	a1 f0       	breq	.+40     	; 0x6522 <__addsf3x+0x96>
    64fa:	ff 0f       	add	r31, r31
    64fc:	bb 1f       	adc	r27, r27
    64fe:	66 1f       	adc	r22, r22
    6500:	77 1f       	adc	r23, r23
    6502:	88 1f       	adc	r24, r24
    6504:	c2 f7       	brpl	.-16     	; 0x64f6 <__addsf3x+0x6a>
    6506:	0e c0       	rjmp	.+28     	; 0x6524 <__addsf3x+0x98>
    6508:	ba 0f       	add	r27, r26
    650a:	62 1f       	adc	r22, r18
    650c:	73 1f       	adc	r23, r19
    650e:	84 1f       	adc	r24, r20
    6510:	48 f4       	brcc	.+18     	; 0x6524 <__addsf3x+0x98>
    6512:	87 95       	ror	r24
    6514:	77 95       	ror	r23
    6516:	67 95       	ror	r22
    6518:	b7 95       	ror	r27
    651a:	f7 95       	ror	r31
    651c:	9e 3f       	cpi	r25, 0xFE	; 254
    651e:	08 f0       	brcs	.+2      	; 0x6522 <__addsf3x+0x96>
    6520:	b3 cf       	rjmp	.-154    	; 0x6488 <__addsf3+0x1e>
    6522:	93 95       	inc	r25
    6524:	88 0f       	add	r24, r24
    6526:	08 f0       	brcs	.+2      	; 0x652a <__addsf3x+0x9e>
    6528:	99 27       	eor	r25, r25
    652a:	ee 0f       	add	r30, r30
    652c:	97 95       	ror	r25
    652e:	87 95       	ror	r24
    6530:	08 95       	ret

00006532 <__cmpsf2>:
    6532:	d9 d0       	rcall	.+434    	; 0x66e6 <__fp_cmp>
    6534:	08 f4       	brcc	.+2      	; 0x6538 <__cmpsf2+0x6>
    6536:	81 e0       	ldi	r24, 0x01	; 1
    6538:	08 95       	ret

0000653a <__divsf3>:
    653a:	0c d0       	rcall	.+24     	; 0x6554 <__divsf3x>
    653c:	0f c1       	rjmp	.+542    	; 0x675c <__fp_round>
    653e:	07 d1       	rcall	.+526    	; 0x674e <__fp_pscB>
    6540:	40 f0       	brcs	.+16     	; 0x6552 <__divsf3+0x18>
    6542:	fe d0       	rcall	.+508    	; 0x6740 <__fp_pscA>
    6544:	30 f0       	brcs	.+12     	; 0x6552 <__divsf3+0x18>
    6546:	21 f4       	brne	.+8      	; 0x6550 <__divsf3+0x16>
    6548:	5f 3f       	cpi	r21, 0xFF	; 255
    654a:	19 f0       	breq	.+6      	; 0x6552 <__divsf3+0x18>
    654c:	f0 c0       	rjmp	.+480    	; 0x672e <__fp_inf>
    654e:	51 11       	cpse	r21, r1
    6550:	39 c1       	rjmp	.+626    	; 0x67c4 <__fp_szero>
    6552:	f3 c0       	rjmp	.+486    	; 0x673a <__fp_nan>

00006554 <__divsf3x>:
    6554:	14 d1       	rcall	.+552    	; 0x677e <__fp_split3>
    6556:	98 f3       	brcs	.-26     	; 0x653e <__divsf3+0x4>

00006558 <__divsf3_pse>:
__divsf3_pse():
    6558:	99 23       	and	r25, r25
    655a:	c9 f3       	breq	.-14     	; 0x654e <__divsf3+0x14>
    655c:	55 23       	and	r21, r21
    655e:	b1 f3       	breq	.-20     	; 0x654c <__divsf3+0x12>
    6560:	95 1b       	sub	r25, r21
    6562:	55 0b       	sbc	r21, r21
    6564:	bb 27       	eor	r27, r27
    6566:	aa 27       	eor	r26, r26
    6568:	62 17       	cp	r22, r18
    656a:	73 07       	cpc	r23, r19
    656c:	84 07       	cpc	r24, r20
    656e:	38 f0       	brcs	.+14     	; 0x657e <__divsf3_pse+0x26>
    6570:	9f 5f       	subi	r25, 0xFF	; 255
    6572:	5f 4f       	sbci	r21, 0xFF	; 255
    6574:	22 0f       	add	r18, r18
    6576:	33 1f       	adc	r19, r19
    6578:	44 1f       	adc	r20, r20
    657a:	aa 1f       	adc	r26, r26
    657c:	a9 f3       	breq	.-22     	; 0x6568 <__divsf3_pse+0x10>
    657e:	33 d0       	rcall	.+102    	; 0x65e6 <__divsf3_pse+0x8e>
    6580:	0e 2e       	mov	r0, r30
    6582:	3a f0       	brmi	.+14     	; 0x6592 <__divsf3_pse+0x3a>
    6584:	e0 e8       	ldi	r30, 0x80	; 128
    6586:	30 d0       	rcall	.+96     	; 0x65e8 <__divsf3_pse+0x90>
    6588:	91 50       	subi	r25, 0x01	; 1
    658a:	50 40       	sbci	r21, 0x00	; 0
    658c:	e6 95       	lsr	r30
    658e:	00 1c       	adc	r0, r0
    6590:	ca f7       	brpl	.-14     	; 0x6584 <__divsf3_pse+0x2c>
    6592:	29 d0       	rcall	.+82     	; 0x65e6 <__divsf3_pse+0x8e>
    6594:	fe 2f       	mov	r31, r30
    6596:	27 d0       	rcall	.+78     	; 0x65e6 <__divsf3_pse+0x8e>
    6598:	66 0f       	add	r22, r22
    659a:	77 1f       	adc	r23, r23
    659c:	88 1f       	adc	r24, r24
    659e:	bb 1f       	adc	r27, r27
    65a0:	26 17       	cp	r18, r22
    65a2:	37 07       	cpc	r19, r23
    65a4:	48 07       	cpc	r20, r24
    65a6:	ab 07       	cpc	r26, r27
    65a8:	b0 e8       	ldi	r27, 0x80	; 128
    65aa:	09 f0       	breq	.+2      	; 0x65ae <__divsf3_pse+0x56>
    65ac:	bb 0b       	sbc	r27, r27
    65ae:	80 2d       	mov	r24, r0
    65b0:	bf 01       	movw	r22, r30
    65b2:	ff 27       	eor	r31, r31
    65b4:	93 58       	subi	r25, 0x83	; 131
    65b6:	5f 4f       	sbci	r21, 0xFF	; 255
    65b8:	2a f0       	brmi	.+10     	; 0x65c4 <__divsf3_pse+0x6c>
    65ba:	9e 3f       	cpi	r25, 0xFE	; 254
    65bc:	51 05       	cpc	r21, r1
    65be:	68 f0       	brcs	.+26     	; 0x65da <__divsf3_pse+0x82>
    65c0:	b6 c0       	rjmp	.+364    	; 0x672e <__fp_inf>
    65c2:	00 c1       	rjmp	.+512    	; 0x67c4 <__fp_szero>
    65c4:	5f 3f       	cpi	r21, 0xFF	; 255
    65c6:	ec f3       	brlt	.-6      	; 0x65c2 <__divsf3_pse+0x6a>
    65c8:	98 3e       	cpi	r25, 0xE8	; 232
    65ca:	dc f3       	brlt	.-10     	; 0x65c2 <__divsf3_pse+0x6a>
    65cc:	86 95       	lsr	r24
    65ce:	77 95       	ror	r23
    65d0:	67 95       	ror	r22
    65d2:	b7 95       	ror	r27
    65d4:	f7 95       	ror	r31
    65d6:	9f 5f       	subi	r25, 0xFF	; 255
    65d8:	c9 f7       	brne	.-14     	; 0x65cc <__divsf3_pse+0x74>
    65da:	88 0f       	add	r24, r24
    65dc:	91 1d       	adc	r25, r1
    65de:	96 95       	lsr	r25
    65e0:	87 95       	ror	r24
    65e2:	97 f9       	bld	r25, 7
    65e4:	08 95       	ret
    65e6:	e1 e0       	ldi	r30, 0x01	; 1
    65e8:	66 0f       	add	r22, r22
    65ea:	77 1f       	adc	r23, r23
    65ec:	88 1f       	adc	r24, r24
    65ee:	bb 1f       	adc	r27, r27
    65f0:	62 17       	cp	r22, r18
    65f2:	73 07       	cpc	r23, r19
    65f4:	84 07       	cpc	r24, r20
    65f6:	ba 07       	cpc	r27, r26
    65f8:	20 f0       	brcs	.+8      	; 0x6602 <__divsf3_pse+0xaa>
    65fa:	62 1b       	sub	r22, r18
    65fc:	73 0b       	sbc	r23, r19
    65fe:	84 0b       	sbc	r24, r20
    6600:	ba 0b       	sbc	r27, r26
    6602:	ee 1f       	adc	r30, r30
    6604:	88 f7       	brcc	.-30     	; 0x65e8 <__divsf3_pse+0x90>
    6606:	e0 95       	com	r30
    6608:	08 95       	ret

0000660a <__fixsfsi>:
__fixsfsi():
    660a:	04 d0       	rcall	.+8      	; 0x6614 <__fixunssfsi>
    660c:	68 94       	set
    660e:	b1 11       	cpse	r27, r1
    6610:	d9 c0       	rjmp	.+434    	; 0x67c4 <__fp_szero>
    6612:	08 95       	ret

00006614 <__fixunssfsi>:
__fixunssfsi():
    6614:	bc d0       	rcall	.+376    	; 0x678e <__fp_splitA>
    6616:	88 f0       	brcs	.+34     	; 0x663a <__fixunssfsi+0x26>
    6618:	9f 57       	subi	r25, 0x7F	; 127
    661a:	90 f0       	brcs	.+36     	; 0x6640 <__fixunssfsi+0x2c>
    661c:	b9 2f       	mov	r27, r25
    661e:	99 27       	eor	r25, r25
    6620:	b7 51       	subi	r27, 0x17	; 23
    6622:	a0 f0       	brcs	.+40     	; 0x664c <__fixunssfsi+0x38>
    6624:	d1 f0       	breq	.+52     	; 0x665a <__fixunssfsi+0x46>
    6626:	66 0f       	add	r22, r22
    6628:	77 1f       	adc	r23, r23
    662a:	88 1f       	adc	r24, r24
    662c:	99 1f       	adc	r25, r25
    662e:	1a f0       	brmi	.+6      	; 0x6636 <__fixunssfsi+0x22>
    6630:	ba 95       	dec	r27
    6632:	c9 f7       	brne	.-14     	; 0x6626 <__fixunssfsi+0x12>
    6634:	12 c0       	rjmp	.+36     	; 0x665a <__fixunssfsi+0x46>
    6636:	b1 30       	cpi	r27, 0x01	; 1
    6638:	81 f0       	breq	.+32     	; 0x665a <__fixunssfsi+0x46>
    663a:	c3 d0       	rcall	.+390    	; 0x67c2 <__fp_zero>
    663c:	b1 e0       	ldi	r27, 0x01	; 1
    663e:	08 95       	ret
    6640:	c0 c0       	rjmp	.+384    	; 0x67c2 <__fp_zero>
    6642:	67 2f       	mov	r22, r23
    6644:	78 2f       	mov	r23, r24
    6646:	88 27       	eor	r24, r24
    6648:	b8 5f       	subi	r27, 0xF8	; 248
    664a:	39 f0       	breq	.+14     	; 0x665a <__fixunssfsi+0x46>
    664c:	b9 3f       	cpi	r27, 0xF9	; 249
    664e:	cc f3       	brlt	.-14     	; 0x6642 <__fixunssfsi+0x2e>
    6650:	86 95       	lsr	r24
    6652:	77 95       	ror	r23
    6654:	67 95       	ror	r22
    6656:	b3 95       	inc	r27
    6658:	d9 f7       	brne	.-10     	; 0x6650 <__fixunssfsi+0x3c>
    665a:	3e f4       	brtc	.+14     	; 0x666a <__fixunssfsi+0x56>
    665c:	90 95       	com	r25
    665e:	80 95       	com	r24
    6660:	70 95       	com	r23
    6662:	61 95       	neg	r22
    6664:	7f 4f       	sbci	r23, 0xFF	; 255
    6666:	8f 4f       	sbci	r24, 0xFF	; 255
    6668:	9f 4f       	sbci	r25, 0xFF	; 255
    666a:	08 95       	ret

0000666c <__floatunsisf>:
__floatunsisf():
    666c:	e8 94       	clt
    666e:	09 c0       	rjmp	.+18     	; 0x6682 <__floatsisf+0x12>

00006670 <__floatsisf>:
    6670:	97 fb       	bst	r25, 7
    6672:	3e f4       	brtc	.+14     	; 0x6682 <__floatsisf+0x12>
    6674:	90 95       	com	r25
    6676:	80 95       	com	r24
    6678:	70 95       	com	r23
    667a:	61 95       	neg	r22
    667c:	7f 4f       	sbci	r23, 0xFF	; 255
    667e:	8f 4f       	sbci	r24, 0xFF	; 255
    6680:	9f 4f       	sbci	r25, 0xFF	; 255
    6682:	99 23       	and	r25, r25
    6684:	a9 f0       	breq	.+42     	; 0x66b0 <__floatsisf+0x40>
    6686:	f9 2f       	mov	r31, r25
    6688:	96 e9       	ldi	r25, 0x96	; 150
    668a:	bb 27       	eor	r27, r27
    668c:	93 95       	inc	r25
    668e:	f6 95       	lsr	r31
    6690:	87 95       	ror	r24
    6692:	77 95       	ror	r23
    6694:	67 95       	ror	r22
    6696:	b7 95       	ror	r27
    6698:	f1 11       	cpse	r31, r1
    669a:	f8 cf       	rjmp	.-16     	; 0x668c <__floatsisf+0x1c>
    669c:	fa f4       	brpl	.+62     	; 0x66dc <__floatsisf+0x6c>
    669e:	bb 0f       	add	r27, r27
    66a0:	11 f4       	brne	.+4      	; 0x66a6 <__floatsisf+0x36>
    66a2:	60 ff       	sbrs	r22, 0
    66a4:	1b c0       	rjmp	.+54     	; 0x66dc <__floatsisf+0x6c>
    66a6:	6f 5f       	subi	r22, 0xFF	; 255
    66a8:	7f 4f       	sbci	r23, 0xFF	; 255
    66aa:	8f 4f       	sbci	r24, 0xFF	; 255
    66ac:	9f 4f       	sbci	r25, 0xFF	; 255
    66ae:	16 c0       	rjmp	.+44     	; 0x66dc <__floatsisf+0x6c>
    66b0:	88 23       	and	r24, r24
    66b2:	11 f0       	breq	.+4      	; 0x66b8 <__floatsisf+0x48>
    66b4:	96 e9       	ldi	r25, 0x96	; 150
    66b6:	11 c0       	rjmp	.+34     	; 0x66da <__floatsisf+0x6a>
    66b8:	77 23       	and	r23, r23
    66ba:	21 f0       	breq	.+8      	; 0x66c4 <__floatsisf+0x54>
    66bc:	9e e8       	ldi	r25, 0x8E	; 142
    66be:	87 2f       	mov	r24, r23
    66c0:	76 2f       	mov	r23, r22
    66c2:	05 c0       	rjmp	.+10     	; 0x66ce <__floatsisf+0x5e>
    66c4:	66 23       	and	r22, r22
    66c6:	71 f0       	breq	.+28     	; 0x66e4 <__floatsisf+0x74>
    66c8:	96 e8       	ldi	r25, 0x86	; 134
    66ca:	86 2f       	mov	r24, r22
    66cc:	70 e0       	ldi	r23, 0x00	; 0
    66ce:	60 e0       	ldi	r22, 0x00	; 0
    66d0:	2a f0       	brmi	.+10     	; 0x66dc <__floatsisf+0x6c>
    66d2:	9a 95       	dec	r25
    66d4:	66 0f       	add	r22, r22
    66d6:	77 1f       	adc	r23, r23
    66d8:	88 1f       	adc	r24, r24
    66da:	da f7       	brpl	.-10     	; 0x66d2 <__floatsisf+0x62>
    66dc:	88 0f       	add	r24, r24
    66de:	96 95       	lsr	r25
    66e0:	87 95       	ror	r24
    66e2:	97 f9       	bld	r25, 7
    66e4:	08 95       	ret

000066e6 <__fp_cmp>:
__fp_cmp():
    66e6:	99 0f       	add	r25, r25
    66e8:	00 08       	sbc	r0, r0
    66ea:	55 0f       	add	r21, r21
    66ec:	aa 0b       	sbc	r26, r26
    66ee:	e0 e8       	ldi	r30, 0x80	; 128
    66f0:	fe ef       	ldi	r31, 0xFE	; 254
    66f2:	16 16       	cp	r1, r22
    66f4:	17 06       	cpc	r1, r23
    66f6:	e8 07       	cpc	r30, r24
    66f8:	f9 07       	cpc	r31, r25
    66fa:	c0 f0       	brcs	.+48     	; 0x672c <__fp_cmp+0x46>
    66fc:	12 16       	cp	r1, r18
    66fe:	13 06       	cpc	r1, r19
    6700:	e4 07       	cpc	r30, r20
    6702:	f5 07       	cpc	r31, r21
    6704:	98 f0       	brcs	.+38     	; 0x672c <__fp_cmp+0x46>
    6706:	62 1b       	sub	r22, r18
    6708:	73 0b       	sbc	r23, r19
    670a:	84 0b       	sbc	r24, r20
    670c:	95 0b       	sbc	r25, r21
    670e:	39 f4       	brne	.+14     	; 0x671e <__fp_cmp+0x38>
    6710:	0a 26       	eor	r0, r26
    6712:	61 f0       	breq	.+24     	; 0x672c <__fp_cmp+0x46>
    6714:	23 2b       	or	r18, r19
    6716:	24 2b       	or	r18, r20
    6718:	25 2b       	or	r18, r21
    671a:	21 f4       	brne	.+8      	; 0x6724 <__fp_cmp+0x3e>
    671c:	08 95       	ret
    671e:	0a 26       	eor	r0, r26
    6720:	09 f4       	brne	.+2      	; 0x6724 <__fp_cmp+0x3e>
    6722:	a1 40       	sbci	r26, 0x01	; 1
    6724:	a6 95       	lsr	r26
    6726:	8f ef       	ldi	r24, 0xFF	; 255
    6728:	81 1d       	adc	r24, r1
    672a:	81 1d       	adc	r24, r1
    672c:	08 95       	ret

0000672e <__fp_inf>:
__fp_inf():
    672e:	97 f9       	bld	r25, 7
    6730:	9f 67       	ori	r25, 0x7F	; 127
    6732:	80 e8       	ldi	r24, 0x80	; 128
    6734:	70 e0       	ldi	r23, 0x00	; 0
    6736:	60 e0       	ldi	r22, 0x00	; 0
    6738:	08 95       	ret

0000673a <__fp_nan>:
__fp_nan():
    673a:	9f ef       	ldi	r25, 0xFF	; 255
    673c:	80 ec       	ldi	r24, 0xC0	; 192
    673e:	08 95       	ret

00006740 <__fp_pscA>:
__fp_pscA():
    6740:	00 24       	eor	r0, r0
    6742:	0a 94       	dec	r0
    6744:	16 16       	cp	r1, r22
    6746:	17 06       	cpc	r1, r23
    6748:	18 06       	cpc	r1, r24
    674a:	09 06       	cpc	r0, r25
    674c:	08 95       	ret

0000674e <__fp_pscB>:
__fp_pscB():
    674e:	00 24       	eor	r0, r0
    6750:	0a 94       	dec	r0
    6752:	12 16       	cp	r1, r18
    6754:	13 06       	cpc	r1, r19
    6756:	14 06       	cpc	r1, r20
    6758:	05 06       	cpc	r0, r21
    675a:	08 95       	ret

0000675c <__fp_round>:
__fp_round():
    675c:	09 2e       	mov	r0, r25
    675e:	03 94       	inc	r0
    6760:	00 0c       	add	r0, r0
    6762:	11 f4       	brne	.+4      	; 0x6768 <__fp_round+0xc>
    6764:	88 23       	and	r24, r24
    6766:	52 f0       	brmi	.+20     	; 0x677c <__fp_round+0x20>
    6768:	bb 0f       	add	r27, r27
    676a:	40 f4       	brcc	.+16     	; 0x677c <__fp_round+0x20>
    676c:	bf 2b       	or	r27, r31
    676e:	11 f4       	brne	.+4      	; 0x6774 <__fp_round+0x18>
    6770:	60 ff       	sbrs	r22, 0
    6772:	04 c0       	rjmp	.+8      	; 0x677c <__fp_round+0x20>
    6774:	6f 5f       	subi	r22, 0xFF	; 255
    6776:	7f 4f       	sbci	r23, 0xFF	; 255
    6778:	8f 4f       	sbci	r24, 0xFF	; 255
    677a:	9f 4f       	sbci	r25, 0xFF	; 255
    677c:	08 95       	ret

0000677e <__fp_split3>:
__fp_split3():
    677e:	57 fd       	sbrc	r21, 7
    6780:	90 58       	subi	r25, 0x80	; 128
    6782:	44 0f       	add	r20, r20
    6784:	55 1f       	adc	r21, r21
    6786:	59 f0       	breq	.+22     	; 0x679e <__fp_splitA+0x10>
    6788:	5f 3f       	cpi	r21, 0xFF	; 255
    678a:	71 f0       	breq	.+28     	; 0x67a8 <__fp_splitA+0x1a>
    678c:	47 95       	ror	r20

0000678e <__fp_splitA>:
    678e:	88 0f       	add	r24, r24
    6790:	97 fb       	bst	r25, 7
    6792:	99 1f       	adc	r25, r25
    6794:	61 f0       	breq	.+24     	; 0x67ae <__fp_splitA+0x20>
    6796:	9f 3f       	cpi	r25, 0xFF	; 255
    6798:	79 f0       	breq	.+30     	; 0x67b8 <__fp_splitA+0x2a>
    679a:	87 95       	ror	r24
    679c:	08 95       	ret
    679e:	12 16       	cp	r1, r18
    67a0:	13 06       	cpc	r1, r19
    67a2:	14 06       	cpc	r1, r20
    67a4:	55 1f       	adc	r21, r21
    67a6:	f2 cf       	rjmp	.-28     	; 0x678c <__fp_split3+0xe>
    67a8:	46 95       	lsr	r20
    67aa:	f1 df       	rcall	.-30     	; 0x678e <__fp_splitA>
    67ac:	08 c0       	rjmp	.+16     	; 0x67be <__fp_splitA+0x30>
    67ae:	16 16       	cp	r1, r22
    67b0:	17 06       	cpc	r1, r23
    67b2:	18 06       	cpc	r1, r24
    67b4:	99 1f       	adc	r25, r25
    67b6:	f1 cf       	rjmp	.-30     	; 0x679a <__fp_splitA+0xc>
    67b8:	86 95       	lsr	r24
    67ba:	71 05       	cpc	r23, r1
    67bc:	61 05       	cpc	r22, r1
    67be:	08 94       	sec
    67c0:	08 95       	ret

000067c2 <__fp_zero>:
__fp_zero():
    67c2:	e8 94       	clt

000067c4 <__fp_szero>:
    67c4:	bb 27       	eor	r27, r27
    67c6:	66 27       	eor	r22, r22
    67c8:	77 27       	eor	r23, r23
    67ca:	cb 01       	movw	r24, r22
    67cc:	97 f9       	bld	r25, 7
    67ce:	08 95       	ret

000067d0 <__gesf2>:
__gesf2():
    67d0:	8a df       	rcall	.-236    	; 0x66e6 <__fp_cmp>
    67d2:	08 f4       	brcc	.+2      	; 0x67d6 <__gesf2+0x6>
    67d4:	8f ef       	ldi	r24, 0xFF	; 255
    67d6:	08 95       	ret

000067d8 <__mulsf3>:
__mulsf3():
    67d8:	0b d0       	rcall	.+22     	; 0x67f0 <__mulsf3x>
    67da:	c0 cf       	rjmp	.-128    	; 0x675c <__fp_round>
    67dc:	b1 df       	rcall	.-158    	; 0x6740 <__fp_pscA>
    67de:	28 f0       	brcs	.+10     	; 0x67ea <__mulsf3+0x12>
    67e0:	b6 df       	rcall	.-148    	; 0x674e <__fp_pscB>
    67e2:	18 f0       	brcs	.+6      	; 0x67ea <__mulsf3+0x12>
    67e4:	95 23       	and	r25, r21
    67e6:	09 f0       	breq	.+2      	; 0x67ea <__mulsf3+0x12>
    67e8:	a2 cf       	rjmp	.-188    	; 0x672e <__fp_inf>
    67ea:	a7 cf       	rjmp	.-178    	; 0x673a <__fp_nan>
    67ec:	11 24       	eor	r1, r1
    67ee:	ea cf       	rjmp	.-44     	; 0x67c4 <__fp_szero>

000067f0 <__mulsf3x>:
__mulsf3x():
    67f0:	c6 df       	rcall	.-116    	; 0x677e <__fp_split3>
    67f2:	a0 f3       	brcs	.-24     	; 0x67dc <__mulsf3+0x4>

000067f4 <__mulsf3_pse>:
    67f4:	95 9f       	mul	r25, r21
    67f6:	d1 f3       	breq	.-12     	; 0x67ec <__mulsf3+0x14>
    67f8:	95 0f       	add	r25, r21
    67fa:	50 e0       	ldi	r21, 0x00	; 0
    67fc:	55 1f       	adc	r21, r21
    67fe:	62 9f       	mul	r22, r18
    6800:	f0 01       	movw	r30, r0
    6802:	72 9f       	mul	r23, r18
    6804:	bb 27       	eor	r27, r27
    6806:	f0 0d       	add	r31, r0
    6808:	b1 1d       	adc	r27, r1
    680a:	63 9f       	mul	r22, r19
    680c:	aa 27       	eor	r26, r26
    680e:	f0 0d       	add	r31, r0
    6810:	b1 1d       	adc	r27, r1
    6812:	aa 1f       	adc	r26, r26
    6814:	64 9f       	mul	r22, r20
    6816:	66 27       	eor	r22, r22
    6818:	b0 0d       	add	r27, r0
    681a:	a1 1d       	adc	r26, r1
    681c:	66 1f       	adc	r22, r22
    681e:	82 9f       	mul	r24, r18
    6820:	22 27       	eor	r18, r18
    6822:	b0 0d       	add	r27, r0
    6824:	a1 1d       	adc	r26, r1
    6826:	62 1f       	adc	r22, r18
    6828:	73 9f       	mul	r23, r19
    682a:	b0 0d       	add	r27, r0
    682c:	a1 1d       	adc	r26, r1
    682e:	62 1f       	adc	r22, r18
    6830:	83 9f       	mul	r24, r19
    6832:	a0 0d       	add	r26, r0
    6834:	61 1d       	adc	r22, r1
    6836:	22 1f       	adc	r18, r18
    6838:	74 9f       	mul	r23, r20
    683a:	33 27       	eor	r19, r19
    683c:	a0 0d       	add	r26, r0
    683e:	61 1d       	adc	r22, r1
    6840:	23 1f       	adc	r18, r19
    6842:	84 9f       	mul	r24, r20
    6844:	60 0d       	add	r22, r0
    6846:	21 1d       	adc	r18, r1
    6848:	82 2f       	mov	r24, r18
    684a:	76 2f       	mov	r23, r22
    684c:	6a 2f       	mov	r22, r26
    684e:	11 24       	eor	r1, r1
    6850:	9f 57       	subi	r25, 0x7F	; 127
    6852:	50 40       	sbci	r21, 0x00	; 0
    6854:	8a f0       	brmi	.+34     	; 0x6878 <__mulsf3_pse+0x84>
    6856:	e1 f0       	breq	.+56     	; 0x6890 <__mulsf3_pse+0x9c>
    6858:	88 23       	and	r24, r24
    685a:	4a f0       	brmi	.+18     	; 0x686e <__mulsf3_pse+0x7a>
    685c:	ee 0f       	add	r30, r30
    685e:	ff 1f       	adc	r31, r31
    6860:	bb 1f       	adc	r27, r27
    6862:	66 1f       	adc	r22, r22
    6864:	77 1f       	adc	r23, r23
    6866:	88 1f       	adc	r24, r24
    6868:	91 50       	subi	r25, 0x01	; 1
    686a:	50 40       	sbci	r21, 0x00	; 0
    686c:	a9 f7       	brne	.-22     	; 0x6858 <__mulsf3_pse+0x64>
    686e:	9e 3f       	cpi	r25, 0xFE	; 254
    6870:	51 05       	cpc	r21, r1
    6872:	70 f0       	brcs	.+28     	; 0x6890 <__mulsf3_pse+0x9c>
    6874:	5c cf       	rjmp	.-328    	; 0x672e <__fp_inf>
    6876:	a6 cf       	rjmp	.-180    	; 0x67c4 <__fp_szero>
    6878:	5f 3f       	cpi	r21, 0xFF	; 255
    687a:	ec f3       	brlt	.-6      	; 0x6876 <__mulsf3_pse+0x82>
    687c:	98 3e       	cpi	r25, 0xE8	; 232
    687e:	dc f3       	brlt	.-10     	; 0x6876 <__mulsf3_pse+0x82>
    6880:	86 95       	lsr	r24
    6882:	77 95       	ror	r23
    6884:	67 95       	ror	r22
    6886:	b7 95       	ror	r27
    6888:	f7 95       	ror	r31
    688a:	e7 95       	ror	r30
    688c:	9f 5f       	subi	r25, 0xFF	; 255
    688e:	c1 f7       	brne	.-16     	; 0x6880 <__mulsf3_pse+0x8c>
    6890:	fe 2b       	or	r31, r30
    6892:	88 0f       	add	r24, r24
    6894:	91 1d       	adc	r25, r1
    6896:	96 95       	lsr	r25
    6898:	87 95       	ror	r24
    689a:	97 f9       	bld	r25, 7
    689c:	08 95       	ret

0000689e <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    689e:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    68a0:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    68a2:	16 f4       	brtc	.+4      	; 0x68a8 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    68a4:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    68a6:	06 d0       	rcall	.+12     	; 0x68b4 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    68a8:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    68aa:	08 d0       	rcall	.+16     	; 0x68bc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    68ac:	5f d0       	rcall	.+190    	; 0x696c <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    68ae:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    68b0:	05 d0       	rcall	.+10     	; 0x68bc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    68b2:	3e f4       	brtc	.+14     	; 0x68c2 <__divmodhi4_exit>

000068b4 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    68b4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    68b6:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    68b8:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    68ba:	08 95       	ret

000068bc <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    68bc:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    68be:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    68c0:	7f 4f       	sbci	r23, 0xFF	; 255

000068c2 <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    68c2:	08 95       	ret

000068c4 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    68c4:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    68c6:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    68c8:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    68ca:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    68cc:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    68ce:	0d c0       	rjmp	.+26     	; 0x68ea <__udivmodsi4_ep>

000068d0 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    68d0:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    68d2:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    68d4:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    68d6:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    68d8:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    68da:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    68dc:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    68de:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    68e0:	20 f0       	brcs	.+8      	; 0x68ea <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    68e2:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    68e4:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    68e6:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    68e8:	f5 0b       	sbc	r31, r21

000068ea <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    68ea:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    68ec:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    68ee:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    68f0:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    68f2:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    68f4:	69 f7       	brne	.-38     	; 0x68d0 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    68f6:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    68f8:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    68fa:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    68fc:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    68fe:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    6900:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    6902:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    6904:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    6906:	08 95       	ret

00006908 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    6908:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    690a:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    690c:	16 f4       	brtc	.+4      	; 0x6912 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    690e:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    6910:	0f d0       	rcall	.+30     	; 0x6930 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    6912:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    6914:	05 d0       	rcall	.+10     	; 0x6920 <__divmodsi4_neg2>
    6916:	d6 df       	rcall	.-84     	; 0x68c4 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    6918:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    691a:	02 d0       	rcall	.+4      	; 0x6920 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    691c:	46 f4       	brtc	.+16     	; 0x692e <__divmodsi4_exit>
    691e:	08 c0       	rjmp	.+16     	; 0x6930 <__negsi2>

00006920 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    6920:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    6922:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    6924:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    6926:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    6928:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    692a:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    692c:	5f 4f       	sbci	r21, 0xFF	; 255

0000692e <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    692e:	08 95       	ret

00006930 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    6930:	90 95       	com	r25
    6932:	80 95       	com	r24
    6934:	70 95       	com	r23
    6936:	61 95       	neg	r22
    6938:	7f 4f       	sbci	r23, 0xFF	; 255
    693a:	8f 4f       	sbci	r24, 0xFF	; 255
    693c:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    693e:	08 95       	ret

00006940 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    6940:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    6942:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    6944:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    6946:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    6948:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    694a:	09 94       	ijmp

0000694c <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    694c:	23 d0       	rcall	.+70     	; 0x6994 <__umulhisi3>

0000694e <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    694e:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    6950:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    6952:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    6954:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    6956:	08 95       	ret

00006958 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    6958:	1d d0       	rcall	.+58     	; 0x6994 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    695a:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    695c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    695e:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    6960:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    6962:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    6964:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    6966:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    6968:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    696a:	08 95       	ret

0000696c <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    696c:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    696e:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    6970:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    6972:	07 c0       	rjmp	.+14     	; 0x6982 <__udivmodhi4_ep>

00006974 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    6974:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    6976:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    6978:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    697a:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    697c:	10 f0       	brcs	.+4      	; 0x6982 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    697e:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    6980:	b7 0b       	sbc	r27, r23

00006982 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    6982:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    6984:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    6986:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    6988:	a9 f7       	brne	.-22     	; 0x6974 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    698a:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    698c:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    698e:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    6990:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    6992:	08 95       	ret

00006994 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    6994:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    6996:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    6998:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    699a:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    699c:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    699e:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    69a0:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    69a2:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    69a4:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    69a6:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    69a8:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    69aa:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    69ac:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    69ae:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    69b0:	08 95       	ret

000069b2 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    69b2:	f8 94       	cli

000069b4 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    69b4:	ff cf       	rjmp	.-2      	; 0x69b4 <__stop_program>


C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_227579/WLC_WLS_012_V.4.02.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 41 23 	jmp	0x4682	; 0x4682 <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 19 23 	jmp	0x4632	; 0x4632 <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 eb 22 	jmp	0x45d6	; 0x45d6 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 c5 22 	jmp	0x458a	; 0x458a <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	d6 23       	and	r29, r22

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	ed ef       	ldi	r30, 0xFD	; 253
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	f9 e7       	ldi	r31, 0x79	; 121
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a8 31       	cpi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a8 e1       	ldi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	aa 3f       	cpi	r26, 0xFA	; 250
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 f8 3b 	call	0x77f0	; 0x77f0 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 54 27 	call	0x4ea8	; 0x4ea8 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 37 3c 	jmp	0x786e	; 0x786e <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:114
  toggle_ticker.update();
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     2f4:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:115
}
     2f8:	08 95       	ret

000002fa <toggle_fun()>:
toggle_fun():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:36

void toggle_fun();
Ticker toggle_ticker(toggle_fun, 1000, 0, MILLIS);  //Time_speed_show_toggle
void toggle_fun()
{    
   toggle == 0 ? toggle = 1 : toggle = 0;   
     2fa:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <toggle>
     2fe:	81 11       	cpse	r24, r1
     300:	04 c0       	rjmp	.+8      	; 0x30a <toggle_fun()+0x10>
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <toggle>
     308:	08 95       	ret
     30a:	10 92 41 28 	sts	0x2841, r1	; 0x802841 <toggle>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:37
}
     30e:	08 95       	ret

00000310 <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Procss.cpp:71
bool select_heating_type=0;
bool checkTempRaised=0; 

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     310:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <Alternate_Display_Flag>
     314:	88 23       	and	r24, r24
     316:	19 f0       	breq	.+6      	; 0x31e <Alternate_Display()+0xe>
     318:	10 92 87 28 	sts	0x2887, r1	; 0x802887 <Alternate_Display_Flag>
     31c:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Procss.cpp:72
  else                       Alternate_Display_Flag=1;
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	80 93 87 28 	sts	0x2887, r24	; 0x802887 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Procss.cpp:73
}
     324:	08 95       	ret

00000326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:62
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     326:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
     32a:	88 23       	and	r24, r24
     32c:	09 f4       	brne	.+2      	; 0x330 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xa>
     32e:	5e c0       	rjmp	.+188    	; 0x3ec <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:64
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     330:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     334:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     338:	82 30       	cpi	r24, 0x02	; 2
     33a:	91 05       	cpc	r25, r1
     33c:	71 f4       	brne	.+28     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x34>
     33e:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     342:	22 23       	and	r18, r18
     344:	51 f0       	breq	.+20     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x34>
     346:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     34a:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     34e:	2f 5f       	subi	r18, 0xFF	; 255
     350:	3f 4f       	sbci	r19, 0xFF	; 255
     352:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     356:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
     35a:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     35e:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     362:	25 3d       	cpi	r18, 0xD5	; 213
     364:	31 05       	cpc	r19, r1
     366:	a4 f0       	brlt	.+40     	; 0x390 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x6a>
     368:	24 ed       	ldi	r18, 0xD4	; 212
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     370:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:65
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     374:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     378:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     37c:	25 3d       	cpi	r18, 0xD5	; 213
     37e:	31 05       	cpc	r19, r1
     380:	cc f0       	brlt	.+50     	; 0x3b4 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x8e>
     382:	84 ed       	ldi	r24, 0xD4	; 212
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	80 93 4b 29 	sts	0x294B, r24	; 0x80294b <SET_LONG_VALUE+0x2a>
     38a:	90 93 4c 29 	sts	0x294C, r25	; 0x80294c <SET_LONG_VALUE+0x2b>
     38e:	08 95       	ret
     390:	88 30       	cpi	r24, 0x08	; 8
     392:	91 05       	cpc	r25, r1
     394:	79 f7       	brne	.-34     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
     396:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     39a:	22 23       	and	r18, r18
     39c:	59 f3       	breq	.-42     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
     39e:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     3a2:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     3a6:	2f 5f       	subi	r18, 0xFF	; 255
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	20 93 4b 29 	sts	0x294B, r18	; 0x80294b <SET_LONG_VALUE+0x2a>
     3ae:	30 93 4c 29 	sts	0x294C, r19	; 0x80294c <SET_LONG_VALUE+0x2b>
     3b2:	e0 cf       	rjmp	.-64     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:68
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     3b4:	88 0f       	add	r24, r24
     3b6:	99 1f       	adc	r25, r25
     3b8:	fc 01       	movw	r30, r24
     3ba:	ef 5d       	subi	r30, 0xDF	; 223
     3bc:	f6 4d       	sbci	r31, 0xD6	; 214
     3be:	20 81       	ld	r18, Z
     3c0:	31 81       	ldd	r19, Z+1	; 0x01
     3c2:	2f 5f       	subi	r18, 0xFF	; 255
     3c4:	3f 4f       	sbci	r19, 0xFF	; 255
     3c6:	20 83       	st	Z, r18
     3c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:69
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3ca:	dc 01       	movw	r26, r24
     3cc:	ae 55       	subi	r26, 0x5E	; 94
     3ce:	b6 44       	sbci	r27, 0x46	; 70
     3d0:	4d 91       	ld	r20, X+
     3d2:	5c 91       	ld	r21, X
     3d4:	42 17       	cp	r20, r18
     3d6:	53 07       	cpc	r21, r19
     3d8:	0c f0       	brlt	.+2      	; 0x3dc <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xb6>
     3da:	8e c0       	rjmp	.+284    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     3dc:	84 58       	subi	r24, 0x84	; 132
     3de:	96 44       	sbci	r25, 0x46	; 70
     3e0:	dc 01       	movw	r26, r24
     3e2:	8d 91       	ld	r24, X+
     3e4:	9c 91       	ld	r25, X
     3e6:	80 83       	st	Z, r24
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:74
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3ec:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
     3f0:	81 30       	cpi	r24, 0x01	; 1
     3f2:	b1 f4       	brne	.+44     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:76
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3f4:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
     3f8:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     402:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     406:	20 91 12 29 	lds	r18, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
     40a:	30 91 13 29 	lds	r19, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
     40e:	28 17       	cp	r18, r24
     410:	39 07       	cpc	r19, r25
     412:	0c f0       	brlt	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	71 c0       	rjmp	.+226    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     416:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x2>
     41a:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0x3>
     41e:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:78
               }
                else if( ENTER_BUT == 2 )   
     420:	82 30       	cpi	r24, 0x02	; 2
     422:	39 f5       	brne	.+78     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:80
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     424:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     428:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	8a 30       	cpi	r24, 0x0A	; 10
     430:	91 05       	cpc	r25, r1
     432:	e4 f4       	brge	.+56     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     434:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     438:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:81
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     43c:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     440:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     444:	01 96       	adiw	r24, 0x01	; 1
     446:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     44a:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     44e:	20 91 10 29 	lds	r18, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
     452:	30 91 11 29 	lds	r19, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
     456:	28 17       	cp	r18, r24
     458:	39 07       	cpc	r19, r25
     45a:	0c f0       	brlt	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     45c:	4d c0       	rjmp	.+154    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     45e:	80 e2       	ldi	r24, 0x20	; 32
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     466:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     46a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:80
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     46c:	89 e0       	ldi	r24, 0x09	; 9
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	e1 cf       	rjmp	.-62     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:83
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	91 f4       	brne	.+36     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:85
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     476:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
     47a:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
     47e:	01 96       	adiw	r24, 0x01	; 1
     480:	84 36       	cpi	r24, 0x64	; 100
     482:	91 05       	cpc	r25, r1
     484:	2c f4       	brge	.+10     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     486:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
     48a:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
     48e:	08 95       	ret
     490:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_VALUE+0x6>
     494:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_VALUE+0x7>
     498:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:87
               }
               else if( ENTER_BUT == 4 )   
     49a:	84 30       	cpi	r24, 0x04	; 4
     49c:	91 f4       	brne	.+36     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:89
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     49e:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
     4a2:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
     4a6:	01 96       	adiw	r24, 0x01	; 1
     4a8:	8c 33       	cpi	r24, 0x3C	; 60
     4aa:	91 05       	cpc	r25, r1
     4ac:	2c f4       	brge	.+10     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4ae:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
     4b2:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
     4b6:	08 95       	ret
     4b8:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_VALUE+0x8>
     4bc:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_VALUE+0x9>
     4c0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:91
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4c2:	85 30       	cpi	r24, 0x05	; 5
     4c4:	c9 f4       	brne	.+50     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4c6:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
     4ca:	88 23       	and	r24, r24
     4cc:	a9 f0       	breq	.+42     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4ce:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
     4d2:	88 23       	and	r24, r24
     4d4:	89 f0       	breq	.+34     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:93
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4d6:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
     4da:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
     4de:	01 96       	adiw	r24, 0x01	; 1
     4e0:	82 30       	cpi	r24, 0x02	; 2
     4e2:	91 05       	cpc	r25, r1
     4e4:	2c f4       	brge	.+10     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4e6:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
     4ea:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
     4ee:	08 95       	ret
     4f0:	10 92 1e 29 	sts	0x291E, r1	; 0x80291e <SET_VALUE+0xa>
     4f4:	10 92 1f 29 	sts	0x291F, r1	; 0x80291f <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:96
               }
  }
}
     4f8:	08 95       	ret

000004fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:100

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4fa:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
     4fe:	88 23       	and	r24, r24
     500:	09 f4       	brne	.+2      	; 0x504 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xa>
     502:	57 c0       	rjmp	.+174    	; 0x5b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:102
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     504:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     508:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     50c:	82 30       	cpi	r24, 0x02	; 2
     50e:	91 05       	cpc	r25, r1
     510:	71 f4       	brne	.+28     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x34>
     512:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     516:	22 23       	and	r18, r18
     518:	51 f0       	breq	.+20     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x34>
     51a:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     51e:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     522:	21 50       	subi	r18, 0x01	; 1
     524:	31 09       	sbc	r19, r1
     526:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     52a:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
     52e:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     532:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     536:	20 32       	cpi	r18, 0x20	; 32
     538:	31 05       	cpc	r19, r1
     53a:	a4 f4       	brge	.+40     	; 0x564 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x6a>
     53c:	20 e2       	ldi	r18, 0x20	; 32
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     544:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:103
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     548:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     54c:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     550:	20 32       	cpi	r18, 0x20	; 32
     552:	31 05       	cpc	r19, r1
     554:	cc f4       	brge	.+50     	; 0x588 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x8e>
     556:	80 e2       	ldi	r24, 0x20	; 32
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	80 93 4b 29 	sts	0x294B, r24	; 0x80294b <SET_LONG_VALUE+0x2a>
     55e:	90 93 4c 29 	sts	0x294C, r25	; 0x80294c <SET_LONG_VALUE+0x2b>
     562:	08 95       	ret
     564:	88 30       	cpi	r24, 0x08	; 8
     566:	91 05       	cpc	r25, r1
     568:	79 f7       	brne	.-34     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
     56a:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     56e:	22 23       	and	r18, r18
     570:	59 f3       	breq	.-42     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
     572:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     576:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     57a:	21 50       	subi	r18, 0x01	; 1
     57c:	31 09       	sbc	r19, r1
     57e:	20 93 4b 29 	sts	0x294B, r18	; 0x80294b <SET_LONG_VALUE+0x2a>
     582:	30 93 4c 29 	sts	0x294C, r19	; 0x80294c <SET_LONG_VALUE+0x2b>
     586:	e0 cf       	rjmp	.-64     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:106
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     588:	88 0f       	add	r24, r24
     58a:	99 1f       	adc	r25, r25
     58c:	fc 01       	movw	r30, r24
     58e:	ef 5d       	subi	r30, 0xDF	; 223
     590:	f6 4d       	sbci	r31, 0xD6	; 214
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	21 50       	subi	r18, 0x01	; 1
     598:	31 09       	sbc	r19, r1
     59a:	20 83       	st	Z, r18
     59c:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:107
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     59e:	37 ff       	sbrs	r19, 7
     5a0:	8c c0       	rjmp	.+280    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     5a2:	8e 5a       	subi	r24, 0xAE	; 174
     5a4:	96 44       	sbci	r25, 0x46	; 70
     5a6:	dc 01       	movw	r26, r24
     5a8:	8d 91       	ld	r24, X+
     5aa:	9c 91       	ld	r25, X
     5ac:	80 83       	st	Z, r24
     5ae:	91 83       	std	Z+1, r25	; 0x01
     5b0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:112
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     5b2:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	a1 f4       	brne	.+40     	; 0x5e2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:114
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5ba:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
     5be:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
     5c2:	01 97       	sbiw	r24, 0x01	; 1
     5c4:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     5c8:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     5cc:	97 ff       	sbrs	r25, 7
     5ce:	75 c0       	rjmp	.+234    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     5d0:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
     5d4:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
     5d8:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     5dc:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     5e0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:116
    }
    else if( ENTER_BUT == 2 )   
     5e2:	82 30       	cpi	r24, 0x02	; 2
     5e4:	99 f5       	brne	.+102    	; 0x64c <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:118
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5e6:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     5ea:	81 11       	cpse	r24, r1
     5ec:	09 c0       	rjmp	.+18     	; 0x600 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x106>
     5ee:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     5f2:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     5f6:	01 97       	sbiw	r24, 0x01	; 1
     5f8:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     5fc:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
     600:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     604:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     608:	97 ff       	sbrs	r25, 7
     60a:	16 c0       	rjmp	.+44     	; 0x638 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x13e>
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     614:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:119
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     618:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     61c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     620:	80 97       	sbiw	r24, 0x20	; 32
     622:	0c f0       	brlt	.+2      	; 0x626 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x12c>
     624:	4a c0       	rjmp	.+148    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     626:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
     62a:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
     62e:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     632:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     636:	08 95       	ret
     638:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     63c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     646:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     64a:	e6 cf       	rjmp	.-52     	; 0x618 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:121
    }
    else if( ENTER_BUT == 3 )   
     64c:	83 30       	cpi	r24, 0x03	; 3
     64e:	79 f4       	brne	.+30     	; 0x66e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:123
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     650:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
     654:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	97 fd       	sbrc	r25, 7
     65c:	05 c0       	rjmp	.+10     	; 0x668 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x16e>
     65e:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
     662:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
     666:	08 95       	ret
     668:	83 e6       	ldi	r24, 0x63	; 99
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	f8 cf       	rjmp	.-16     	; 0x65e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:125
    }
    else if( ENTER_BUT == 4 )   
     66e:	84 30       	cpi	r24, 0x04	; 4
     670:	79 f4       	brne	.+30     	; 0x690 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:127
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     672:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
     676:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	97 fd       	sbrc	r25, 7
     67e:	05 c0       	rjmp	.+10     	; 0x68a <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x190>
     680:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
     684:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
     688:	08 95       	ret
     68a:	8b e3       	ldi	r24, 0x3B	; 59
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	f8 cf       	rjmp	.-16     	; 0x680 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:129
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     690:	85 30       	cpi	r24, 0x05	; 5
     692:	99 f4       	brne	.+38     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     694:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
     698:	88 23       	and	r24, r24
     69a:	79 f0       	breq	.+30     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     69c:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
     6a0:	88 23       	and	r24, r24
     6a2:	59 f0       	breq	.+22     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:131
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a4:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
     6a8:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
     6ac:	01 97       	sbiw	r24, 0x01	; 1
     6ae:	97 fd       	sbrc	r25, 7
     6b0:	05 c0       	rjmp	.+10     	; 0x6bc <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c2>
     6b2:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
     6b6:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:134
    }
  }
}
     6ba:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Butn.cpp:131
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	f8 cf       	rjmp	.-16     	; 0x6b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1b8>

000006c2 <PID::SetTunings(double, double, double) [clone .constprop.57]>:
SetTunings():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:127
}

/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
     6c2:	4f 92       	push	r4
     6c4:	5f 92       	push	r5
     6c6:	6f 92       	push	r6
     6c8:	7f 92       	push	r7
     6ca:	8f 92       	push	r8
     6cc:	9f 92       	push	r9
     6ce:	af 92       	push	r10
     6d0:	bf 92       	push	r11
     6d2:	cf 92       	push	r12
     6d4:	df 92       	push	r13
     6d6:	ef 92       	push	r14
     6d8:	ff 92       	push	r15
     6da:	cf 93       	push	r28
     6dc:	df 93       	push	r29
     6de:	00 d0       	rcall	.+0      	; 0x6e0 <PID::SetTunings(double, double, double) [clone .constprop.57]+0x1e>
     6e0:	00 d0       	rcall	.+0      	; 0x6e2 <PID::SetTunings(double, double, double) [clone .constprop.57]+0x20>
     6e2:	cd b7       	in	r28, 0x3d	; 61
     6e4:	de b7       	in	r29, 0x3e	; 62
     6e6:	6b 01       	movw	r12, r22
     6e8:	7c 01       	movw	r14, r24
     6ea:	49 01       	movw	r8, r18
     6ec:	5a 01       	movw	r10, r20
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:104
 * it's called automatically from the constructor, but tunings can also
 * be adjusted on the fly during normal operation
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	a9 01       	movw	r20, r18
     6f4:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
     6f8:	87 fd       	sbrc	r24, 7
     6fa:	a1 c0       	rjmp	.+322    	; 0x83e <PID::SetTunings(double, double, double) [clone .constprop.57]+0x17c>
     6fc:	20 e0       	ldi	r18, 0x00	; 0
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	a9 01       	movw	r20, r18
     702:	c5 01       	movw	r24, r10
     704:	b4 01       	movw	r22, r8
     706:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
     70a:	87 fd       	sbrc	r24, 7
     70c:	98 c0       	rjmp	.+304    	; 0x83e <PID::SetTunings(double, double, double) [clone .constprop.57]+0x17c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107

   pOn = POn;
   pOnE = POn == P_ON_E;
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	20 91 18 2a 	lds	r18, 0x2A18	; 0x802a18 <myPID+0x1a>
     714:	30 91 19 2a 	lds	r19, 0x2A19	; 0x802a19 <myPID+0x1b>
     718:	21 30       	cpi	r18, 0x01	; 1
     71a:	31 05       	cpc	r19, r1
     71c:	09 f0       	breq	.+2      	; 0x720 <PID::SetTunings(double, double, double) [clone .constprop.57]+0x5e>
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	80 93 39 2a 	sts	0x2A39, r24	; 0x802a39 <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
     724:	c0 92 fe 29 	sts	0x29FE, r12	; 0x8029fe <myPID>
     728:	d0 92 ff 29 	sts	0x29FF, r13	; 0x8029ff <myPID+0x1>
     72c:	e0 92 00 2a 	sts	0x2A00, r14	; 0x802a00 <myPID+0x2>
     730:	f0 92 01 2a 	sts	0x2A01, r15	; 0x802a01 <myPID+0x3>
     734:	8a e0       	ldi	r24, 0x0A	; 10
     736:	97 ed       	ldi	r25, 0xD7	; 215
     738:	a3 e2       	ldi	r26, 0x23	; 35
     73a:	bc e3       	ldi	r27, 0x3C	; 60
     73c:	80 93 02 2a 	sts	0x2A02, r24	; 0x802a02 <myPID+0x4>
     740:	90 93 03 2a 	sts	0x2A03, r25	; 0x802a03 <myPID+0x5>
     744:	a0 93 04 2a 	sts	0x2A04, r26	; 0x802a04 <myPID+0x6>
     748:	b0 93 05 2a 	sts	0x2A05, r27	; 0x802a05 <myPID+0x7>
     74c:	80 92 06 2a 	sts	0x2A06, r8	; 0x802a06 <myPID+0x8>
     750:	90 92 07 2a 	sts	0x2A07, r9	; 0x802a07 <myPID+0x9>
     754:	a0 92 08 2a 	sts	0x2A08, r10	; 0x802a08 <myPID+0xa>
     758:	b0 92 09 2a 	sts	0x2A09, r11	; 0x802a09 <myPID+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:111

   double SampleTimeInSec = ((double)SampleTime)/1000;
     75c:	60 91 2c 2a 	lds	r22, 0x2A2C	; 0x802a2c <myPID+0x2e>
     760:	70 91 2d 2a 	lds	r23, 0x2A2D	; 0x802a2d <myPID+0x2f>
     764:	80 91 2e 2a 	lds	r24, 0x2A2E	; 0x802a2e <myPID+0x30>
     768:	90 91 2f 2a 	lds	r25, 0x2A2F	; 0x802a2f <myPID+0x31>
     76c:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	4a e7       	ldi	r20, 0x7A	; 122
     776:	54 e4       	ldi	r21, 0x44	; 68
     778:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     77c:	2b 01       	movw	r4, r22
     77e:	3c 01       	movw	r6, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112
   kp = Kp;
     780:	c0 92 0a 2a 	sts	0x2A0A, r12	; 0x802a0a <myPID+0xc>
     784:	d0 92 0b 2a 	sts	0x2A0B, r13	; 0x802a0b <myPID+0xd>
     788:	e0 92 0c 2a 	sts	0x2A0C, r14	; 0x802a0c <myPID+0xe>
     78c:	f0 92 0d 2a 	sts	0x2A0D, r15	; 0x802a0d <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
     790:	2a e0       	ldi	r18, 0x0A	; 10
     792:	37 ed       	ldi	r19, 0xD7	; 215
     794:	43 e2       	ldi	r20, 0x23	; 35
     796:	5c e3       	ldi	r21, 0x3C	; 60
     798:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
     79c:	69 83       	std	Y+1, r22	; 0x01
     79e:	7a 83       	std	Y+2, r23	; 0x02
     7a0:	8b 83       	std	Y+3, r24	; 0x03
     7a2:	9c 83       	std	Y+4, r25	; 0x04
     7a4:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x10>
     7a8:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x11>
     7ac:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x12>
     7b0:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
     7b4:	a3 01       	movw	r20, r6
     7b6:	92 01       	movw	r18, r4
     7b8:	c5 01       	movw	r24, r10
     7ba:	b4 01       	movw	r22, r8
     7bc:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     7c0:	4b 01       	movw	r8, r22
     7c2:	5c 01       	movw	r10, r24
     7c4:	80 92 12 2a 	sts	0x2A12, r8	; 0x802a12 <myPID+0x14>
     7c8:	90 92 13 2a 	sts	0x2A13, r9	; 0x802a13 <myPID+0x15>
     7cc:	a0 92 14 2a 	sts	0x2A14, r10	; 0x802a14 <myPID+0x16>
     7d0:	b0 92 15 2a 	sts	0x2A15, r11	; 0x802a15 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
     7d4:	80 91 16 2a 	lds	r24, 0x2A16	; 0x802a16 <myPID+0x18>
     7d8:	90 91 17 2a 	lds	r25, 0x2A17	; 0x802a17 <myPID+0x19>
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	79 f5       	brne	.+94     	; 0x83e <PID::SetTunings(double, double, double) [clone .constprop.57]+0x17c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
     7e0:	a7 01       	movw	r20, r14
     7e2:	96 01       	movw	r18, r12
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	cb 01       	movw	r24, r22
     7ea:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     7ee:	60 93 0a 2a 	sts	0x2A0A, r22	; 0x802a0a <myPID+0xc>
     7f2:	70 93 0b 2a 	sts	0x2A0B, r23	; 0x802a0b <myPID+0xd>
     7f6:	80 93 0c 2a 	sts	0x2A0C, r24	; 0x802a0c <myPID+0xe>
     7fa:	90 93 0d 2a 	sts	0x2A0D, r25	; 0x802a0d <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
     7fe:	29 81       	ldd	r18, Y+1	; 0x01
     800:	3a 81       	ldd	r19, Y+2	; 0x02
     802:	4b 81       	ldd	r20, Y+3	; 0x03
     804:	5c 81       	ldd	r21, Y+4	; 0x04
     806:	60 e0       	ldi	r22, 0x00	; 0
     808:	70 e0       	ldi	r23, 0x00	; 0
     80a:	cb 01       	movw	r24, r22
     80c:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     810:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x10>
     814:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x11>
     818:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x12>
     81c:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
     820:	a5 01       	movw	r20, r10
     822:	94 01       	movw	r18, r8
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	cb 01       	movw	r24, r22
     82a:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     82e:	60 93 12 2a 	sts	0x2A12, r22	; 0x802a12 <myPID+0x14>
     832:	70 93 13 2a 	sts	0x2A13, r23	; 0x802a13 <myPID+0x15>
     836:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <myPID+0x16>
     83a:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:129
/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
    SetTunings(Kp, Ki, Kd, pOn); 
}
     83e:	24 96       	adiw	r28, 0x04	; 4
     840:	cd bf       	out	0x3d, r28	; 61
     842:	de bf       	out	0x3e, r29	; 62
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	ff 90       	pop	r15
     84a:	ef 90       	pop	r14
     84c:	df 90       	pop	r13
     84e:	cf 90       	pop	r12
     850:	bf 90       	pop	r11
     852:	af 90       	pop	r10
     854:	9f 90       	pop	r9
     856:	8f 90       	pop	r8
     858:	7f 90       	pop	r7
     85a:	6f 90       	pop	r6
     85c:	5f 90       	pop	r5
     85e:	4f 90       	pop	r4
     860:	08 95       	ret

00000862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:209
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     862:	cf 92       	push	r12
     864:	df 92       	push	r13
     866:	ef 92       	push	r14
     868:	ff 92       	push	r15
     86a:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:211
{ 
    first_digit = num / 1000;
     86c:	28 ee       	ldi	r18, 0xE8	; 232
     86e:	33 e0       	ldi	r19, 0x03	; 3
     870:	40 e0       	ldi	r20, 0x00	; 0
     872:	50 e0       	ldi	r21, 0x00	; 0
     874:	0e 94 dc 3b 	call	0x77b8	; 0x77b8 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:212
    digits1[0] = first_digit;
     878:	e5 ef       	ldi	r30, 0xF5	; 245
     87a:	f8 e2       	ldi	r31, 0x28	; 40
     87c:	20 83       	st	Z, r18
     87e:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:213
    int first_left = num - (first_digit * 1000);
     880:	68 ee       	ldi	r22, 0xE8	; 232
     882:	73 e0       	ldi	r23, 0x03	; 3
     884:	62 9f       	mul	r22, r18
     886:	c0 01       	movw	r24, r0
     888:	63 9f       	mul	r22, r19
     88a:	90 0d       	add	r25, r0
     88c:	72 9f       	mul	r23, r18
     88e:	90 0d       	add	r25, r0
     890:	11 24       	eor	r1, r1
     892:	c8 1a       	sub	r12, r24
     894:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:214
    second_digit = first_left / 100;
     896:	c6 01       	movw	r24, r12
     898:	64 e6       	ldi	r22, 0x64	; 100
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:215
    digits1[1] = second_digit;
     8a0:	62 83       	std	Z+2, r22	; 0x02
     8a2:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:216
    int second_left = first_left - (second_digit * 100);
     8a4:	2c e9       	ldi	r18, 0x9C	; 156
     8a6:	26 03       	mulsu	r18, r22
     8a8:	c0 01       	movw	r24, r0
     8aa:	27 9f       	mul	r18, r23
     8ac:	90 0d       	add	r25, r0
     8ae:	11 24       	eor	r1, r1
     8b0:	c8 0e       	add	r12, r24
     8b2:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:217
    third_digit = second_left / 10;
     8b4:	c6 01       	movw	r24, r12
     8b6:	6a e0       	ldi	r22, 0x0A	; 10
     8b8:	70 e0       	ldi	r23, 0x00	; 0
     8ba:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:218
    digits1[2] = third_digit;
     8be:	64 83       	std	Z+4, r22	; 0x04
     8c0:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:219
    fourth_digit = second_left - (third_digit * 10);
     8c2:	26 ef       	ldi	r18, 0xF6	; 246
     8c4:	26 03       	mulsu	r18, r22
     8c6:	c0 01       	movw	r24, r0
     8c8:	27 9f       	mul	r18, r23
     8ca:	90 0d       	add	r25, r0
     8cc:	11 24       	eor	r1, r1
     8ce:	c8 0e       	add	r12, r24
     8d0:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:220
    digits1[3] = fourth_digit;
     8d2:	c6 82       	std	Z+6, r12	; 0x06
     8d4:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:221
}
     8d6:	ff 90       	pop	r15
     8d8:	ef 90       	pop	r14
     8da:	df 90       	pop	r13
     8dc:	cf 90       	pop	r12
     8de:	08 95       	ret

000008e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:223

void Eclass:: BREAK_NUMBER2(long num2) 
     8e0:	cf 92       	push	r12
     8e2:	df 92       	push	r13
     8e4:	ef 92       	push	r14
     8e6:	ff 92       	push	r15
     8e8:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:225
{ 
    first_digit2 = num2 / 1000;
     8ea:	28 ee       	ldi	r18, 0xE8	; 232
     8ec:	33 e0       	ldi	r19, 0x03	; 3
     8ee:	40 e0       	ldi	r20, 0x00	; 0
     8f0:	50 e0       	ldi	r21, 0x00	; 0
     8f2:	0e 94 dc 3b 	call	0x77b8	; 0x77b8 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:226
    digits2[0] = first_digit2;
     8f6:	ed ee       	ldi	r30, 0xED	; 237
     8f8:	f8 e2       	ldi	r31, 0x28	; 40
     8fa:	20 83       	st	Z, r18
     8fc:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:227
    int first_left2 = num2 - (first_digit2 * 1000);
     8fe:	68 ee       	ldi	r22, 0xE8	; 232
     900:	73 e0       	ldi	r23, 0x03	; 3
     902:	62 9f       	mul	r22, r18
     904:	c0 01       	movw	r24, r0
     906:	63 9f       	mul	r22, r19
     908:	90 0d       	add	r25, r0
     90a:	72 9f       	mul	r23, r18
     90c:	90 0d       	add	r25, r0
     90e:	11 24       	eor	r1, r1
     910:	c8 1a       	sub	r12, r24
     912:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:228
    second_digit2 = first_left2 / 100;
     914:	c6 01       	movw	r24, r12
     916:	64 e6       	ldi	r22, 0x64	; 100
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:229
    digits2[1] = second_digit2;
     91e:	62 83       	std	Z+2, r22	; 0x02
     920:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:230
    int second_left2 = first_left2 - (second_digit2 * 100);
     922:	2c e9       	ldi	r18, 0x9C	; 156
     924:	26 03       	mulsu	r18, r22
     926:	c0 01       	movw	r24, r0
     928:	27 9f       	mul	r18, r23
     92a:	90 0d       	add	r25, r0
     92c:	11 24       	eor	r1, r1
     92e:	c8 0e       	add	r12, r24
     930:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:231
    third_digit2 = second_left2 / 10;
     932:	c6 01       	movw	r24, r12
     934:	6a e0       	ldi	r22, 0x0A	; 10
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:232
    digits2[2] = third_digit2;
     93c:	64 83       	std	Z+4, r22	; 0x04
     93e:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:233
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     940:	26 ef       	ldi	r18, 0xF6	; 246
     942:	26 03       	mulsu	r18, r22
     944:	c0 01       	movw	r24, r0
     946:	27 9f       	mul	r18, r23
     948:	90 0d       	add	r25, r0
     94a:	11 24       	eor	r1, r1
     94c:	c8 0e       	add	r12, r24
     94e:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:234
    digits2[3] = fourth_digit2;
     950:	c6 82       	std	Z+6, r12	; 0x06
     952:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:235
}
     954:	ff 90       	pop	r15
     956:	ef 90       	pop	r14
     958:	df 90       	pop	r13
     95a:	cf 90       	pop	r12
     95c:	08 95       	ret

0000095e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:58
      sample = 0;   AvgVout = 0;   
    }
      avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     95e:	4f 92       	push	r4
     960:	5f 92       	push	r5
     962:	6f 92       	push	r6
     964:	7f 92       	push	r7
     966:	8f 92       	push	r8
     968:	9f 92       	push	r9
     96a:	af 92       	push	r10
     96c:	bf 92       	push	r11
     96e:	cf 92       	push	r12
     970:	df 92       	push	r13
     972:	ef 92       	push	r14
     974:	ff 92       	push	r15
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e2       	ldi	r20, 0x20	; 32
     97c:	51 e4       	ldi	r21, 0x41	; 65
     97e:	60 91 0a 29 	lds	r22, 0x290A	; 0x80290a <ERROR_CAL1>
     982:	70 91 0b 29 	lds	r23, 0x290B	; 0x80290b <ERROR_CAL1+0x1>
     986:	80 91 0c 29 	lds	r24, 0x290C	; 0x80290c <ERROR_CAL1+0x2>
     98a:	90 91 0d 29 	lds	r25, 0x290D	; 0x80290d <ERROR_CAL1+0x3>
     98e:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:60
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     992:	20 91 ec 28 	lds	r18, 0x28EC	; 0x8028ec <SIGN>
     996:	21 11       	cpse	r18, r1
     998:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:61
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     99a:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
     99e:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
     9a2:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
     9a6:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:63
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     9aa:	f0 90 e7 28 	lds	r15, 0x28E7	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
     9ae:	ff 20       	and	r15, r15
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x56>
     9b2:	55 c0       	rjmp	.+170    	; 0xa5e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x100>
     9b4:	20 91 e8 28 	lds	r18, 0x28E8	; 0x8028e8 <ERROR_CAL>
     9b8:	30 91 e9 28 	lds	r19, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
     9bc:	40 91 ea 28 	lds	r20, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
     9c0:	50 91 eb 28 	lds	r21, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
     9c4:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG_RAW>
     9c8:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
     9cc:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
     9d0:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
     9d4:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
     9d8:	60 93 e3 28 	sts	0x28E3, r22	; 0x8028e3 <TEMP_DEG_RAW2>
     9dc:	70 93 e4 28 	sts	0x28E4, r23	; 0x8028e4 <TEMP_DEG_RAW2+0x1>
     9e0:	80 93 e5 28 	sts	0x28E5, r24	; 0x8028e5 <TEMP_DEG_RAW2+0x2>
     9e4:	90 93 e6 28 	sts	0x28E6, r25	; 0x8028e6 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:66
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
    
    if (!CAL_SELECT_VALUE)
     9e8:	80 91 d8 28 	lds	r24, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
     9ec:	90 91 d9 28 	lds	r25, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
     9f0:	89 2b       	or	r24, r25
     9f2:	09 f0       	breq	.+2      	; 0x9f6 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x98>
     9f4:	7e c0       	rjmp	.+252    	; 0xaf2 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:68
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     9f6:	ff 20       	and	r15, r15
     9f8:	09 f4       	brne	.+2      	; 0x9fc <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x9e>
     9fa:	50 c0       	rjmp	.+160    	; 0xa9c <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:70
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     9fc:	60 91 e3 28 	lds	r22, 0x28E3	; 0x8028e3 <TEMP_DEG_RAW2>
     a00:	70 91 e4 28 	lds	r23, 0x28E4	; 0x8028e4 <TEMP_DEG_RAW2+0x1>
     a04:	80 91 e5 28 	lds	r24, 0x28E5	; 0x8028e5 <TEMP_DEG_RAW2+0x2>
     a08:	90 91 e6 28 	lds	r25, 0x28E6	; 0x8028e6 <TEMP_DEG_RAW2+0x3>
     a0c:	60 93 06 29 	sts	0x2906, r22	; 0x802906 <TEMP_DEG>
     a10:	70 93 07 29 	sts	0x2907, r23	; 0x802907 <TEMP_DEG+0x1>
     a14:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <TEMP_DEG+0x2>
     a18:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:71
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     a1c:	26 e6       	ldi	r18, 0x66	; 102
     a1e:	36 e6       	ldi	r19, 0x66	; 102
     a20:	46 ee       	ldi	r20, 0xE6	; 230
     a22:	5f e3       	ldi	r21, 0x3F	; 63
     a24:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 e0       	ldi	r20, 0x00	; 0
     a2e:	52 e4       	ldi	r21, 0x42	; 66
     a30:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
     a34:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH>
     a38:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH+0x1>
     a3c:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH+0x2>
     a40:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:89
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
   }
}
     a44:	ff 90       	pop	r15
     a46:	ef 90       	pop	r14
     a48:	df 90       	pop	r13
     a4a:	cf 90       	pop	r12
     a4c:	bf 90       	pop	r11
     a4e:	af 90       	pop	r10
     a50:	9f 90       	pop	r9
     a52:	8f 90       	pop	r8
     a54:	7f 90       	pop	r7
     a56:	6f 90       	pop	r6
     a58:	5f 90       	pop	r5
     a5a:	4f 90       	pop	r4
     a5c:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:64
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
     a5e:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
     a62:	88 23       	and	r24, r24
     a64:	09 f2       	breq	.-126    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x8a>
     a66:	20 91 e8 28 	lds	r18, 0x28E8	; 0x8028e8 <ERROR_CAL>
     a6a:	30 91 e9 28 	lds	r19, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
     a6e:	40 91 ea 28 	lds	r20, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
     a72:	50 91 eb 28 	lds	r21, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
     a76:	60 91 de 28 	lds	r22, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
     a7a:	70 91 df 28 	lds	r23, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
     a7e:	80 91 e0 28 	lds	r24, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
     a82:	90 91 e1 28 	lds	r25, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
     a86:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
     a8a:	60 93 da 28 	sts	0x28DA, r22	; 0x8028da <TEMP_FAH_RAW2>
     a8e:	70 93 db 28 	sts	0x28DB, r23	; 0x8028db <TEMP_FAH_RAW2+0x1>
     a92:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <TEMP_FAH_RAW2+0x2>
     a96:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <TEMP_FAH_RAW2+0x3>
     a9a:	a6 cf       	rjmp	.-180    	; 0x9e8 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:73
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     a9c:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
     aa0:	88 23       	and	r24, r24
     aa2:	81 f2       	breq	.-96     	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:75
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     aa4:	c0 90 da 28 	lds	r12, 0x28DA	; 0x8028da <TEMP_FAH_RAW2>
     aa8:	d0 90 db 28 	lds	r13, 0x28DB	; 0x8028db <TEMP_FAH_RAW2+0x1>
     aac:	e0 90 dc 28 	lds	r14, 0x28DC	; 0x8028dc <TEMP_FAH_RAW2+0x2>
     ab0:	f0 90 dd 28 	lds	r15, 0x28DD	; 0x8028dd <TEMP_FAH_RAW2+0x3>
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	40 e0       	ldi	r20, 0x00	; 0
     aba:	52 e4       	ldi	r21, 0x42	; 66
     abc:	c7 01       	movw	r24, r14
     abe:	b6 01       	movw	r22, r12
     ac0:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     ac4:	26 e6       	ldi	r18, 0x66	; 102
     ac6:	36 e6       	ldi	r19, 0x66	; 102
     ac8:	46 ee       	ldi	r20, 0xE6	; 230
     aca:	5f e3       	ldi	r21, 0x3F	; 63
     acc:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     ad0:	60 93 06 29 	sts	0x2906, r22	; 0x802906 <TEMP_DEG>
     ad4:	70 93 07 29 	sts	0x2907, r23	; 0x802907 <TEMP_DEG+0x1>
     ad8:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <TEMP_DEG+0x2>
     adc:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:76
          TEMP_FAH  =  TEMP_FAH_RAW2;
     ae0:	c0 92 d4 28 	sts	0x28D4, r12	; 0x8028d4 <TEMP_FAH>
     ae4:	d0 92 d5 28 	sts	0x28D5, r13	; 0x8028d5 <TEMP_FAH+0x1>
     ae8:	e0 92 d6 28 	sts	0x28D6, r14	; 0x8028d6 <TEMP_FAH+0x2>
     aec:	f0 92 d7 28 	sts	0x28D7, r15	; 0x8028d7 <TEMP_FAH+0x3>
     af0:	a9 cf       	rjmp	.-174    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     af2:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
     af6:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
     afa:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
     afe:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
     b02:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	40 e2       	ldi	r20, 0x20	; 32
     b0c:	51 e4       	ldi	r21, 0x41	; 65
     b0e:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     b12:	4b 01       	movw	r8, r22
     b14:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:83
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     b16:	60 91 c8 28 	lds	r22, 0x28C8	; 0x8028c8 <MASTER_LOW_CONV>
     b1a:	70 91 c9 28 	lds	r23, 0x28C9	; 0x8028c9 <MASTER_LOW_CONV+0x1>
     b1e:	80 91 ca 28 	lds	r24, 0x28CA	; 0x8028ca <MASTER_LOW_CONV+0x2>
     b22:	90 91 cb 28 	lds	r25, 0x28CB	; 0x8028cb <MASTER_LOW_CONV+0x3>
     b26:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	40 e2       	ldi	r20, 0x20	; 32
     b30:	51 e4       	ldi	r21, 0x41	; 65
     b32:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     b36:	6b 01       	movw	r12, r22
     b38:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:84
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     b3a:	60 91 c4 28 	lds	r22, 0x28C4	; 0x8028c4 <MASTER_HIGH_CONV>
     b3e:	70 91 c5 28 	lds	r23, 0x28C5	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
     b42:	80 91 c6 28 	lds	r24, 0x28C6	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
     b46:	90 91 c7 28 	lds	r25, 0x28C7	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
     b4a:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e2       	ldi	r20, 0x20	; 32
     b54:	51 e4       	ldi	r21, 0x41	; 65
     b56:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     b5a:	a7 01       	movw	r20, r14
     b5c:	96 01       	movw	r18, r12
     b5e:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     b62:	2b 01       	movw	r4, r22
     b64:	3c 01       	movw	r6, r24
     b66:	a5 01       	movw	r20, r10
     b68:	94 01       	movw	r18, r8
     b6a:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG_RAW>
     b6e:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
     b72:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
     b76:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
     b7a:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     b7e:	9b 01       	movw	r18, r22
     b80:	ac 01       	movw	r20, r24
     b82:	c3 01       	movw	r24, r6
     b84:	b2 01       	movw	r22, r4
     b86:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
     b8a:	2b 01       	movw	r4, r22
     b8c:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:82
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     b8e:	60 91 cc 28 	lds	r22, 0x28CC	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
     b92:	70 91 cd 28 	lds	r23, 0x28CD	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     b96:	80 91 ce 28 	lds	r24, 0x28CE	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     b9a:	90 91 cf 28 	lds	r25, 0x28CF	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     b9e:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	40 e2       	ldi	r20, 0x20	; 32
     ba8:	51 e4       	ldi	r21, 0x41	; 65
     baa:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     bae:	a5 01       	movw	r20, r10
     bb0:	94 01       	movw	r18, r8
     bb2:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
     bb6:	9b 01       	movw	r18, r22
     bb8:	ac 01       	movw	r20, r24
     bba:	c3 01       	movw	r24, r6
     bbc:	b2 01       	movw	r22, r4
     bbe:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
     bc2:	a7 01       	movw	r20, r14
     bc4:	96 01       	movw	r18, r12
     bc6:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
     bca:	6b 01       	movw	r12, r22
     bcc:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:85
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
     bce:	c0 92 06 29 	sts	0x2906, r12	; 0x802906 <TEMP_DEG>
     bd2:	d0 92 07 29 	sts	0x2907, r13	; 0x802907 <TEMP_DEG+0x1>
     bd6:	e0 92 08 29 	sts	0x2908, r14	; 0x802908 <TEMP_DEG+0x2>
     bda:	f0 92 09 29 	sts	0x2909, r15	; 0x802909 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:86
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     bde:	26 e6       	ldi	r18, 0x66	; 102
     be0:	36 e6       	ldi	r19, 0x66	; 102
     be2:	46 ee       	ldi	r20, 0xE6	; 230
     be4:	5f e3       	ldi	r21, 0x3F	; 63
     be6:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e0       	ldi	r20, 0x00	; 0
     bf0:	52 e4       	ldi	r21, 0x42	; 66
     bf2:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
     bf6:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH>
     bfa:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH+0x1>
     bfe:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH+0x2>
     c02:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Temp.cpp:87
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	48 ec       	ldi	r20, 0xC8	; 200
     c0c:	52 e4       	ldi	r21, 0x42	; 66
     c0e:	c7 01       	movw	r24, r14
     c10:	b6 01       	movw	r22, r12
     c12:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
     c16:	87 fd       	sbrc	r24, 7
     c18:	15 cf       	rjmp	.-470    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0xe6>
     c1a:	8d ec       	ldi	r24, 0xCD	; 205
     c1c:	9c ec       	ldi	r25, 0xCC	; 204
     c1e:	a7 ec       	ldi	r26, 0xC7	; 199
     c20:	b2 e4       	ldi	r27, 0x42	; 66
     c22:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <TEMP_DEG>
     c26:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <TEMP_DEG+0x1>
     c2a:	a0 93 08 29 	sts	0x2908, r26	; 0x802908 <TEMP_DEG+0x2>
     c2e:	b0 93 09 29 	sts	0x2909, r27	; 0x802909 <TEMP_DEG+0x3>
     c32:	08 cf       	rjmp	.-496    	; 0xa44 <Mclass::RTD_TEMP_CONV() [clone .constprop.44]+0xe6>

00000c34 <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:518
}
}

void DEC_LONGPRESS_STOP()
{
  if(checkTempRaised==0)
     c34:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
     c38:	81 11       	cpse	r24, r1
     c3a:	06 c0       	rjmp	.+12     	; 0xc48 <DEC_LONGPRESS_STOP()+0x14>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:520
  {
  i = 0;
     c3c:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
     c40:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:521
  BLINK_STATS=0;
     c44:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:523
  }
}
     c48:	08 95       	ret

00000c4a <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     c4a:	f4 cf       	rjmp	.-24     	; 0xc34 <DEC_LONGPRESS_STOP()>

00000c4c <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     c4c:	af 92       	push	r10
     c4e:	bf 92       	push	r11
     c50:	cf 92       	push	r12
     c52:	df 92       	push	r13
     c54:	ef 92       	push	r14
     c56:	ff 92       	push	r15
     c58:	0f 93       	push	r16
     c5a:	1f 93       	push	r17
     c5c:	cf 93       	push	r28
     c5e:	df 93       	push	r29
     c60:	6c 01       	movw	r12, r24
     c62:	7b 01       	movw	r14, r22
     c64:	8b 01       	movw	r16, r22
     c66:	04 0f       	add	r16, r20
     c68:	15 1f       	adc	r17, r21
     c6a:	eb 01       	movw	r28, r22
     c6c:	5e 01       	movw	r10, r28
     c6e:	ae 18       	sub	r10, r14
     c70:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     c72:	c0 17       	cp	r28, r16
     c74:	d1 07       	cpc	r29, r17
     c76:	59 f0       	breq	.+22     	; 0xc8e <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     c78:	69 91       	ld	r22, Y+
     c7a:	d6 01       	movw	r26, r12
     c7c:	ed 91       	ld	r30, X+
     c7e:	fc 91       	ld	r31, X
     c80:	01 90       	ld	r0, Z+
     c82:	f0 81       	ld	r31, Z
     c84:	e0 2d       	mov	r30, r0
     c86:	c6 01       	movw	r24, r12
     c88:	09 95       	icall
     c8a:	89 2b       	or	r24, r25
     c8c:	79 f7       	brne	.-34     	; 0xc6c <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     c8e:	c5 01       	movw	r24, r10
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	1f 91       	pop	r17
     c96:	0f 91       	pop	r16
     c98:	ff 90       	pop	r15
     c9a:	ef 90       	pop	r14
     c9c:	df 90       	pop	r13
     c9e:	cf 90       	pop	r12
     ca0:	bf 90       	pop	r11
     ca2:	af 90       	pop	r10
     ca4:	08 95       	ret

00000ca6 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     ca6:	fc 01       	movw	r30, r24
     ca8:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     caa:	41 8d       	ldd	r20, Z+25	; 0x19
     cac:	25 2f       	mov	r18, r21
     cae:	30 e0       	ldi	r19, 0x00	; 0
     cb0:	84 2f       	mov	r24, r20
     cb2:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     cb4:	82 1b       	sub	r24, r18
     cb6:	93 0b       	sbc	r25, r19
     cb8:	54 17       	cp	r21, r20
     cba:	10 f0       	brcs	.+4      	; 0xcc0 <UartClass::availableForWrite()+0x1a>
     cbc:	cf 96       	adiw	r24, 0x3f	; 63
     cbe:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     cc0:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     cc2:	08 95       	ret

00000cc4 <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     cc4:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     cc6:	96 89       	ldd	r25, Z+22	; 0x16
     cc8:	87 89       	ldd	r24, Z+23	; 0x17
     cca:	98 17       	cp	r25, r24
     ccc:	61 f0       	breq	.+24     	; 0xce6 <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     cce:	a7 89       	ldd	r26, Z+23	; 0x17
     cd0:	ae 0f       	add	r26, r30
     cd2:	bf 2f       	mov	r27, r31
     cd4:	b1 1d       	adc	r27, r1
     cd6:	5d 96       	adiw	r26, 0x1d	; 29
     cd8:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     cda:	97 89       	ldd	r25, Z+23	; 0x17
     cdc:	9f 5f       	subi	r25, 0xFF	; 255
     cde:	9f 73       	andi	r25, 0x3F	; 63
     ce0:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     cea:	08 95       	ret

00000cec <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     cec:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     cee:	96 89       	ldd	r25, Z+22	; 0x16
     cf0:	87 89       	ldd	r24, Z+23	; 0x17
     cf2:	98 17       	cp	r25, r24
     cf4:	31 f0       	breq	.+12     	; 0xd02 <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     cf6:	87 89       	ldd	r24, Z+23	; 0x17
     cf8:	e8 0f       	add	r30, r24
     cfa:	f1 1d       	adc	r31, r1
     cfc:	85 8d       	ldd	r24, Z+29	; 0x1d
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     d02:	8f ef       	ldi	r24, 0xFF	; 255
     d04:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     d06:	08 95       	ret

00000d08 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     d08:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     d0a:	96 89       	ldd	r25, Z+22	; 0x16
     d0c:	27 89       	ldd	r18, Z+23	; 0x17
     d0e:	89 2f       	mov	r24, r25
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	80 5c       	subi	r24, 0xC0	; 192
     d14:	9f 4f       	sbci	r25, 0xFF	; 255
     d16:	82 1b       	sub	r24, r18
     d18:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     d1a:	8f 73       	andi	r24, 0x3F	; 63
     d1c:	99 27       	eor	r25, r25
     d1e:	08 95       	ret

00000d20 <Serial2_available()>:
Serial2_available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     d20:	85 e5       	ldi	r24, 0x55	; 85
     d22:	99 e2       	ldi	r25, 0x29	; 41
     d24:	f1 df       	rcall	.-30     	; 0xd08 <UartClass::available()>
     d26:	21 e0       	ldi	r18, 0x01	; 1
     d28:	89 2b       	or	r24, r25
     d2a:	09 f4       	brne	.+2      	; 0xd2e <Serial2_available()+0xe>
     d2c:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     d2e:	82 2f       	mov	r24, r18
     d30:	08 95       	ret

00000d32 <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     d38:	e8 81       	ld	r30, Y
     d3a:	f9 81       	ldd	r31, Y+1	; 0x01
     d3c:	06 80       	ldd	r0, Z+6	; 0x06
     d3e:	f7 81       	ldd	r31, Z+7	; 0x07
     d40:	e0 2d       	mov	r30, r0
     d42:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     d44:	ec 85       	ldd	r30, Y+12	; 0x0c
     d46:	fd 85       	ldd	r31, Y+13	; 0x0d
     d48:	86 81       	ldd	r24, Z+6	; 0x06
     d4a:	8f 73       	andi	r24, 0x3F	; 63
     d4c:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     d4e:	ec 85       	ldd	r30, Y+12	; 0x0c
     d50:	fd 85       	ldd	r31, Y+13	; 0x0d
     d52:	85 81       	ldd	r24, Z+5	; 0x05
     d54:	8f 75       	andi	r24, 0x5F	; 95
     d56:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     d58:	8f 89       	ldd	r24, Y+23	; 0x17
     d5a:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     d5c:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     d5e:	df 91       	pop	r29
     d60:	cf 91       	pop	r28
     d62:	08 95       	ret

00000d64 <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     d64:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     d66:	61 30       	cpi	r22, 0x01	; 1
     d68:	19 f4       	brne	.+6      	; 0xd70 <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     d6a:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     d70:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     d72:	66 23       	and	r22, r22
     d74:	d9 f3       	breq	.-10     	; 0xd6c <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     d76:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     d78:	08 95       	ret

00000d7a <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     d7a:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     d7c:	54 96       	adiw	r26, 0x14	; 20
     d7e:	1c 92       	st	X, r1
     d80:	54 97       	sbiw	r26, 0x14	; 20
     d82:	54 96       	adiw	r26, 0x14	; 20
     d84:	8c 91       	ld	r24, X
     d86:	54 97       	sbiw	r26, 0x14	; 20
     d88:	82 30       	cpi	r24, 0x02	; 2
     d8a:	a0 f4       	brcc	.+40     	; 0xdb4 <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	f9 01       	movw	r30, r18
     d92:	ee 0f       	add	r30, r30
     d94:	ff 1f       	adc	r31, r31
     d96:	e2 0f       	add	r30, r18
     d98:	f3 1f       	adc	r31, r19
     d9a:	ea 0f       	add	r30, r26
     d9c:	fb 1f       	adc	r31, r27
     d9e:	97 85       	ldd	r25, Z+15	; 0x0f
     da0:	96 13       	cpse	r25, r22
     da2:	03 c0       	rjmp	.+6      	; 0xdaa <UartClass::pins(unsigned char, unsigned char)+0x30>
     da4:	96 85       	ldd	r25, Z+14	; 0x0e
     da6:	94 17       	cp	r25, r20
     da8:	49 f0       	breq	.+18     	; 0xdbc <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     daa:	8f 5f       	subi	r24, 0xFF	; 255
     dac:	54 96       	adiw	r26, 0x14	; 20
     dae:	8c 93       	st	X, r24
     db0:	54 97       	sbiw	r26, 0x14	; 20
     db2:	e7 cf       	rjmp	.-50     	; 0xd82 <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     db4:	54 96       	adiw	r26, 0x14	; 20
     db6:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     dbc:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     dbe:	08 95       	ret

00000dc0 <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     dc0:	cf 93       	push	r28
     dc2:	df 93       	push	r29
     dc4:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     dc6:	90 8d       	ldd	r25, Z+24	; 0x18
     dc8:	81 8d       	ldd	r24, Z+25	; 0x19
     dca:	c4 85       	ldd	r28, Z+12	; 0x0c
     dcc:	d5 85       	ldd	r29, Z+13	; 0x0d
     dce:	98 13       	cpse	r25, r24
     dd0:	06 c0       	rjmp	.+12     	; 0xdde <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     dd2:	8d 81       	ldd	r24, Y+5	; 0x05
     dd4:	8f 7d       	andi	r24, 0xDF	; 223
     dd6:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     dde:	a1 8d       	ldd	r26, Z+25	; 0x19
     de0:	ae 0f       	add	r26, r30
     de2:	bf 2f       	mov	r27, r31
     de4:	b1 1d       	adc	r27, r1
     de6:	a3 5a       	subi	r26, 0xA3	; 163
     de8:	bf 4f       	sbci	r27, 0xFF	; 255
     dea:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     dec:	81 8d       	ldd	r24, Z+25	; 0x19
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	01 96       	adiw	r24, 0x01	; 1
     df2:	8f 73       	andi	r24, 0x3F	; 63
     df4:	99 27       	eor	r25, r25
     df6:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     df8:	80 e4       	ldi	r24, 0x40	; 64
     dfa:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     dfc:	a4 85       	ldd	r26, Z+12	; 0x0c
     dfe:	b5 85       	ldd	r27, Z+13	; 0x0d
     e00:	12 96       	adiw	r26, 0x02	; 2
     e02:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     e04:	90 8d       	ldd	r25, Z+24	; 0x18
     e06:	81 8d       	ldd	r24, Z+25	; 0x19
     e08:	98 13       	cpse	r25, r24
     e0a:	e6 cf       	rjmp	.-52     	; 0xdd8 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     e0c:	a4 85       	ldd	r26, Z+12	; 0x0c
     e0e:	b5 85       	ldd	r27, Z+13	; 0x0d
     e10:	15 96       	adiw	r26, 0x05	; 5
     e12:	8c 91       	ld	r24, X
     e14:	15 97       	sbiw	r26, 0x05	; 5
     e16:	8f 7d       	andi	r24, 0xDF	; 223
     e18:	15 96       	adiw	r26, 0x05	; 5
     e1a:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     e1c:	83 8d       	ldd	r24, Z+27	; 0x1b
     e1e:	88 23       	and	r24, r24
     e20:	d9 f2       	breq	.-74     	; 0xdd8 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     e22:	84 8d       	ldd	r24, Z+28	; 0x1c
     e24:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     e28:	13 8e       	std	Z+27, r1	; 0x1b
     e2a:	d6 cf       	rjmp	.-84     	; 0xdd8 <UartClass::_tx_data_empty_irq()+0x18>

00000e2c <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     e2c:	dc 01       	movw	r26, r24
     e2e:	1c 96       	adiw	r26, 0x0c	; 12
     e30:	ed 91       	ld	r30, X+
     e32:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     e34:	0f b6       	in	r0, 0x3f	; 63
     e36:	07 fe       	sbrs	r0, 7
     e38:	03 c0       	rjmp	.+6      	; 0xe40 <UartClass::_poll_tx_data_empty()+0x14>
     e3a:	25 81       	ldd	r18, Z+5	; 0x05
     e3c:	25 fd       	sbrc	r18, 5
     e3e:	03 c0       	rjmp	.+6      	; 0xe46 <UartClass::_poll_tx_data_empty()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     e40:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     e42:	25 fd       	sbrc	r18, 5
     e44:	bd cf       	rjmp	.-134    	; 0xdc0 <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     e46:	08 95       	ret

00000e48 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     e48:	ef 92       	push	r14
     e4a:	ff 92       	push	r15
     e4c:	0f 93       	push	r16
     e4e:	1f 93       	push	r17
     e50:	cf 93       	push	r28
     e52:	df 93       	push	r29
     e54:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     e5a:	98 8d       	ldd	r25, Y+24	; 0x18
     e5c:	89 8d       	ldd	r24, Y+25	; 0x19
     e5e:	98 13       	cpse	r25, r24
     e60:	1c c0       	rjmp	.+56     	; 0xe9a <UartClass::write(unsigned char)+0x52>
     e62:	ac 85       	ldd	r26, Y+12	; 0x0c
     e64:	bd 85       	ldd	r27, Y+13	; 0x0d
     e66:	14 96       	adiw	r26, 0x04	; 4
     e68:	8c 91       	ld	r24, X
     e6a:	14 97       	sbiw	r26, 0x04	; 4
     e6c:	85 ff       	sbrs	r24, 5
     e6e:	15 c0       	rjmp	.+42     	; 0xe9a <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     e70:	12 96       	adiw	r26, 0x02	; 2
     e72:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     e74:	ac 85       	ldd	r26, Y+12	; 0x0c
     e76:	bd 85       	ldd	r27, Y+13	; 0x0d
     e78:	80 e4       	ldi	r24, 0x40	; 64
     e7a:	14 96       	adiw	r26, 0x04	; 4
     e7c:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     e7e:	ec 85       	ldd	r30, Y+12	; 0x0c
     e80:	fd 85       	ldd	r31, Y+13	; 0x0d
     e82:	85 81       	ldd	r24, Z+5	; 0x05
     e84:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     e86:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	df 91       	pop	r29
     e8e:	cf 91       	pop	r28
     e90:	1f 91       	pop	r17
     e92:	0f 91       	pop	r16
     e94:	ff 90       	pop	r15
     e96:	ef 90       	pop	r14
     e98:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     e9a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     e9e:	80 ff       	sbrs	r24, 0
     ea0:	08 c0       	rjmp	.+16     	; 0xeb2 <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     ea2:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     ea6:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     ea8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     eaa:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	8b 8f       	std	Y+27, r24	; 0x1b
     eb2:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     eb4:	08 8d       	ldd	r16, Y+24	; 0x18
     eb6:	10 e0       	ldi	r17, 0x00	; 0
     eb8:	0f 5f       	subi	r16, 0xFF	; 255
     eba:	1f 4f       	sbci	r17, 0xFF	; 255
     ebc:	0f 73       	andi	r16, 0x3F	; 63
     ebe:	11 27       	eor	r17, r17
     ec0:	e0 2e       	mov	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     ec2:	89 8d       	ldd	r24, Y+25	; 0x19
     ec4:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     ec6:	03 c0       	rjmp	.+6      	; 0xece <UartClass::write(unsigned char)+0x86>
     ec8:	ce 01       	movw	r24, r28
     eca:	b0 df       	rcall	.-160    	; 0xe2c <UartClass::_poll_tx_data_empty()>
     ecc:	fa cf       	rjmp	.-12     	; 0xec2 <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     ece:	e8 8d       	ldd	r30, Y+24	; 0x18
     ed0:	ec 0f       	add	r30, r28
     ed2:	fd 2f       	mov	r31, r29
     ed4:	f1 1d       	adc	r31, r1
     ed6:	e3 5a       	subi	r30, 0xA3	; 163
     ed8:	ff 4f       	sbci	r31, 0xFF	; 255
     eda:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     edc:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     ede:	ec 85       	ldd	r30, Y+12	; 0x0c
     ee0:	fd 85       	ldd	r31, Y+13	; 0x0d
     ee2:	85 81       	ldd	r24, Z+5	; 0x05
     ee4:	80 62       	ori	r24, 0x20	; 32
     ee6:	cf cf       	rjmp	.-98     	; 0xe86 <UartClass::write(unsigned char)+0x3e>

00000ee8 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     eec:	fc 01       	movw	r30, r24
     eee:	25 89       	ldd	r18, Z+21	; 0x15
     ef0:	22 23       	and	r18, r18
     ef2:	c1 f0       	breq	.+48     	; 0xf24 <UartClass::flush()+0x3c>
     ef4:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     ef6:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     efa:	80 ff       	sbrs	r24, 0
     efc:	08 c0       	rjmp	.+16     	; 0xf0e <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     efe:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     f02:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     f04:	82 8d       	ldd	r24, Z+26	; 0x1a
     f06:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     f0a:	81 e0       	ldi	r24, 0x01	; 1
     f0c:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     f0e:	ec 85       	ldd	r30, Y+12	; 0x0c
     f10:	fd 85       	ldd	r31, Y+13	; 0x0d
     f12:	85 81       	ldd	r24, Z+5	; 0x05
     f14:	85 fd       	sbrc	r24, 5
     f16:	03 c0       	rjmp	.+6      	; 0xf1e <UartClass::flush()+0x36>
     f18:	84 81       	ldd	r24, Z+4	; 0x04
     f1a:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     f1c:	03 c0       	rjmp	.+6      	; 0xf24 <UartClass::flush()+0x3c>
     f1e:	ce 01       	movw	r24, r28
     f20:	85 df       	rcall	.-246    	; 0xe2c <UartClass::_poll_tx_data_empty()>
     f22:	f5 cf       	rjmp	.-22     	; 0xf0e <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	08 95       	ret

00000f2a <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	89 2b       	or	r24, r25
     f30:	49 f0       	breq	.+18     	; 0xf44 <serialEventRun()+0x1a>
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	89 2b       	or	r24, r25
     f38:	29 f0       	breq	.+10     	; 0xf44 <serialEventRun()+0x1a>
     f3a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f3e:	81 11       	cpse	r24, r1
     f40:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     f44:	80 e0       	ldi	r24, 0x00	; 0
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	89 2b       	or	r24, r25
     f4a:	49 f0       	breq	.+18     	; 0xf5e <serialEventRun()+0x34>
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	89 2b       	or	r24, r25
     f52:	29 f0       	breq	.+10     	; 0xf5e <serialEventRun()+0x34>
     f54:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f58:	81 11       	cpse	r24, r1
     f5a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	89 2b       	or	r24, r25
     f64:	21 f0       	breq	.+8      	; 0xf6e <serialEventRun()+0x44>
     f66:	dc de       	rcall	.-584    	; 0xd20 <Serial2_available()>
     f68:	81 11       	cpse	r24, r1
     f6a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	89 2b       	or	r24, r25
     f74:	49 f0       	breq	.+18     	; 0xf88 <serialEventRun()+0x5e>
     f76:	80 e0       	ldi	r24, 0x00	; 0
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	89 2b       	or	r24, r25
     f7c:	29 f0       	breq	.+10     	; 0xf88 <serialEventRun()+0x5e>
     f7e:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f82:	81 11       	cpse	r24, r1
     f84:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
     f88:	08 95       	ret

00000f8a <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	08 95       	ret

00000f8e <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	fc 01       	movw	r30, r24
     f96:	e7 5d       	subi	r30, 0xD7	; 215
     f98:	f6 44       	sbci	r31, 0x46	; 70
     f9a:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     f9c:	2f 3f       	cpi	r18, 0xFF	; 255
     f9e:	69 f0       	breq	.+26     	; 0xfba <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     fa0:	fc 01       	movw	r30, r24
     fa2:	e0 50       	subi	r30, 0x00	; 0
     fa4:	f7 44       	sbci	r31, 0x47	; 71
     fa6:	a0 81       	ld	r26, Z
     fa8:	30 e2       	ldi	r19, 0x20	; 32
     faa:	a3 9f       	mul	r26, r19
     fac:	d0 01       	movw	r26, r0
     fae:	11 24       	eor	r1, r1
     fb0:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     fb2:	61 30       	cpi	r22, 0x01	; 1
     fb4:	29 f4       	brne	.+10     	; 0xfc0 <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     fb6:	11 96       	adiw	r26, 0x01	; 1
     fb8:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     fba:	df 91       	pop	r29
     fbc:	cf 91       	pop	r28
     fbe:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     fc0:	89 52       	subi	r24, 0x29	; 41
     fc2:	97 44       	sbci	r25, 0x47	; 71
     fc4:	ec 01       	movw	r28, r24
     fc6:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     fc8:	ef 3f       	cpi	r30, 0xFF	; 255
     fca:	81 f0       	breq	.+32     	; 0xfec <pinMode.part.1+0x5e>
     fcc:	cd 01       	movw	r24, r26
     fce:	40 96       	adiw	r24, 0x10	; 16
     fd0:	e8 0f       	add	r30, r24
     fd2:	f9 2f       	mov	r31, r25
     fd4:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     fd6:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     fd8:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     fda:	12 96       	adiw	r26, 0x02	; 2
     fdc:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     fde:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     fe0:	62 30       	cpi	r22, 0x02	; 2
     fe2:	39 f4       	brne	.+14     	; 0xff2 <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     fe4:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     fe6:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     fe8:	9f bf       	out	0x3f, r25	; 63
     fea:	e7 cf       	rjmp	.-50     	; 0xfba <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     ff0:	f2 cf       	rjmp	.-28     	; 0xfd6 <pinMode.part.1+0x48>
     ff2:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     ff4:	f8 cf       	rjmp	.-16     	; 0xfe6 <pinMode.part.1+0x58>

00000ff6 <pinMode>:
pinMode():
     ff6:	89 32       	cpi	r24, 0x29	; 41
     ff8:	08 f4       	brcc	.+2      	; 0xffc <pinMode+0x6>
     ffa:	c9 cf       	rjmp	.-110    	; 0xf8e <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     ffc:	08 95       	ret

00000ffe <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	fc 01       	movw	r30, r24
    1002:	e2 55       	subi	r30, 0x52	; 82
    1004:	f7 44       	sbci	r31, 0x47	; 71
    1006:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
    1008:	ee 23       	and	r30, r30
    100a:	19 f1       	breq	.+70     	; 0x1052 <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
    100c:	e1 30       	cpi	r30, 0x01	; 1
    100e:	21 f0       	breq	.+8      	; 0x1018 <turnOffPWM.part.0+0x1a>
    1010:	00 f1       	brcs	.+64     	; 0x1052 <turnOffPWM.part.0+0x54>
    1012:	e6 30       	cpi	r30, 0x06	; 6
    1014:	a8 f0       	brcs	.+42     	; 0x1040 <turnOffPWM.part.0+0x42>
    1016:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
    1018:	89 52       	subi	r24, 0x29	; 41
    101a:	97 44       	sbci	r25, 0x47	; 71
    101c:	fc 01       	movw	r30, r24
    101e:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
    1020:	23 30       	cpi	r18, 0x03	; 3
    1022:	08 f0       	brcs	.+2      	; 0x1026 <turnOffPWM.part.0+0x28>
    1024:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
    1026:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    102a:	81 e0       	ldi	r24, 0x01	; 1
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	01 c0       	rjmp	.+2      	; 0x1032 <turnOffPWM.part.0+0x34>
    1030:	88 0f       	add	r24, r24
    1032:	2a 95       	dec	r18
    1034:	ea f7       	brpl	.-6      	; 0x1030 <turnOffPWM.part.0+0x32>
    1036:	80 95       	com	r24
    1038:	83 23       	and	r24, r19
    103a:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    103e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
    1040:	80 e1       	ldi	r24, 0x10	; 16
    1042:	e8 9f       	mul	r30, r24
    1044:	f0 01       	movw	r30, r0
    1046:	11 24       	eor	r1, r1
    1048:	e0 5a       	subi	r30, 0xA0	; 160
    104a:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    104c:	81 81       	ldd	r24, Z+1	; 0x01
    104e:	8f 7e       	andi	r24, 0xEF	; 239
    1050:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
    1052:	08 95       	ret

00001054 <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
    1054:	0f 93       	push	r16
    1056:	1f 93       	push	r17
    1058:	cf 93       	push	r28
    105a:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    105c:	c8 2f       	mov	r28, r24
    105e:	d0 e0       	ldi	r29, 0x00	; 0
    1060:	fe 01       	movw	r30, r28
    1062:	e7 5d       	subi	r30, 0xD7	; 215
    1064:	f6 44       	sbci	r31, 0x46	; 70
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
    1066:	00 81       	ld	r16, Z
    1068:	0f 3f       	cpi	r16, 0xFF	; 255
    106a:	99 f0       	breq	.+38     	; 0x1092 <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    106c:	16 2f       	mov	r17, r22
turnOffPWM():
    106e:	89 32       	cpi	r24, 0x29	; 41
    1070:	08 f4       	brcc	.+2      	; 0x1074 <digitalWrite.part.2+0x20>
    1072:	c5 df       	rcall	.-118    	; 0xffe <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1074:	fe 01       	movw	r30, r28
    1076:	e0 50       	subi	r30, 0x00	; 0
    1078:	f7 44       	sbci	r31, 0x47	; 71
    107a:	e0 81       	ld	r30, Z
    107c:	80 e2       	ldi	r24, 0x20	; 32
    107e:	e8 9f       	mul	r30, r24
    1080:	f0 01       	movw	r30, r0
    1082:	11 24       	eor	r1, r1
    1084:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
    1086:	80 81       	ld	r24, Z
    1088:	80 23       	and	r24, r16
    108a:	51 f0       	breq	.+20     	; 0x10a0 <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
    108c:	11 11       	cpse	r17, r1
    108e:	06 c0       	rjmp	.+12     	; 0x109c <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
    1090:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    1092:	df 91       	pop	r29
    1094:	cf 91       	pop	r28
    1096:	1f 91       	pop	r17
    1098:	0f 91       	pop	r16
    109a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
    109c:	05 83       	std	Z+5, r16	; 0x05
    109e:	f9 cf       	rjmp	.-14     	; 0x1092 <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    10a0:	c9 52       	subi	r28, 0x29	; 41
    10a2:	d7 44       	sbci	r29, 0x47	; 71
    10a4:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    10a6:	30 97       	sbiw	r30, 0x00	; 0
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <digitalWrite.part.2+0x72>
    10aa:	8f 3f       	cpi	r24, 0xFF	; 255
    10ac:	61 f0       	breq	.+24     	; 0x10c6 <digitalWrite.part.2+0x72>
    10ae:	70 96       	adiw	r30, 0x10	; 16
    10b0:	e8 0f       	add	r30, r24
    10b2:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    10b4:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
    10b6:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    10b8:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
    10ba:	11 11       	cpse	r17, r1
    10bc:	07 c0       	rjmp	.+14     	; 0x10cc <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    10be:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    10c0:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
    10c2:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    10c4:	e6 cf       	rjmp	.-52     	; 0x1092 <digitalWrite.part.2+0x3e>
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    10ca:	f4 cf       	rjmp	.-24     	; 0x10b4 <digitalWrite.part.2+0x60>
    10cc:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    10ce:	f8 cf       	rjmp	.-16     	; 0x10c0 <digitalWrite.part.2+0x6c>

000010d0 <digitalWrite>:
digitalWrite():
    10d0:	89 32       	cpi	r24, 0x29	; 41
    10d2:	08 f4       	brcc	.+2      	; 0x10d6 <digitalWrite+0x6>
    10d4:	bf cf       	rjmp	.-130    	; 0x1054 <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    10d6:	08 95       	ret

000010d8 <OneButton::OneButton(int, int) [clone .constprop.13]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
    10d8:	0f 93       	push	r16
    10da:	1f 93       	push	r17
    10dc:	cf 93       	push	r28
    10de:	df 93       	push	r29
    10e0:	ec 01       	movw	r28, r24
    10e2:	16 2f       	mov	r17, r22
    10e4:	07 2f       	mov	r16, r23
    10e6:	82 e3       	ldi	r24, 0x32	; 50
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
    10ec:	9f 83       	std	Y+7, r25	; 0x07
    10ee:	60 e0       	ldi	r22, 0x00	; 0
    10f0:	81 2f       	mov	r24, r17
    10f2:	81 df       	rcall	.-254    	; 0xff6 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
    10f4:	18 83       	st	Y, r17
    10f6:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
    10f8:	88 e5       	ldi	r24, 0x58	; 88
    10fa:	92 e0       	ldi	r25, 0x02	; 2
    10fc:	8a 83       	std	Y+2, r24	; 0x02
    10fe:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
    1100:	88 ee       	ldi	r24, 0xE8	; 232
    1102:	93 e0       	ldi	r25, 0x03	; 3
    1104:	8c 83       	std	Y+4, r24	; 0x04
    1106:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
    1108:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
    110a:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
    110c:	1c 86       	std	Y+12, r1	; 0x0c
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
    1114:	99 87       	std	Y+9, r25	; 0x09
    1116:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
    1118:	1b 86       	std	Y+11, r1	; 0x0b
    111a:	61 e0       	ldi	r22, 0x01	; 1
    111c:	81 2f       	mov	r24, r17
    111e:	d8 df       	rcall	.-80     	; 0x10d0 <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
    1120:	1f 86       	std	Y+15, r1	; 0x0f
    1122:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
    1124:	19 8a       	std	Y+17, r1	; 0x11
    1126:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
    1128:	1b 8a       	std	Y+19, r1	; 0x13
    112a:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
    112c:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
    112e:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
    1130:	1f 8a       	std	Y+23, r1	; 0x17
    1132:	18 8e       	std	Y+24, r1	; 0x18
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:195
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
    1138:	1f 91       	pop	r17
    113a:	0f 91       	pop	r16
    113c:	08 95       	ret

0000113e <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:196
    digitalWrite(CA_6, HIGH);
    113e:	61 e0       	ldi	r22, 0x01	; 1
    1140:	8b e0       	ldi	r24, 0x0B	; 11
    1142:	c6 df       	rcall	.-116    	; 0x10d0 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:197
    digitalWrite(CA_7, HIGH);
    1144:	61 e0       	ldi	r22, 0x01	; 1
    1146:	8a e0       	ldi	r24, 0x0A	; 10
    1148:	c3 df       	rcall	.-122    	; 0x10d0 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:198
    digitalWrite(CA_8, HIGH);
    114a:	61 e0       	ldi	r22, 0x01	; 1
    114c:	89 e0       	ldi	r24, 0x09	; 9
    114e:	c0 df       	rcall	.-128    	; 0x10d0 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:203
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
    1150:	61 e0       	ldi	r22, 0x01	; 1
    1152:	88 e0       	ldi	r24, 0x08	; 8
    1154:	bd cf       	rjmp	.-134    	; 0x10d0 <digitalWrite>

00001156 <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
    1156:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:204
    digitalWrite(CA_3, HIGH);
    1158:	87 e0       	ldi	r24, 0x07	; 7
    115a:	ba df       	rcall	.-140    	; 0x10d0 <digitalWrite>
    115c:	61 e0       	ldi	r22, 0x01	; 1
    115e:	86 e0       	ldi	r24, 0x06	; 6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:205
    digitalWrite(CA_2, HIGH);
    1160:	b7 df       	rcall	.-146    	; 0x10d0 <digitalWrite>
    1162:	61 e0       	ldi	r22, 0x01	; 1
    1164:	85 e0       	ldi	r24, 0x05	; 5
    1166:	b4 df       	rcall	.-152    	; 0x10d0 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/led.cpp:206
    digitalWrite(CA_1, HIGH);
    1168:	61 e0       	ldi	r22, 0x01	; 1
    116a:	84 e0       	ldi	r24, 0x04	; 4
    116c:	b1 cf       	rjmp	.-158    	; 0x10d0 <digitalWrite>

0000116e <UartClass::begin(unsigned long, unsigned int)>:
begin():
    116e:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
    1170:	bf 92       	push	r11
    1172:	cf 92       	push	r12
    1174:	df 92       	push	r13
    1176:	ef 92       	push	r14
    1178:	ff 92       	push	r15
    117a:	0f 93       	push	r16
    117c:	1f 93       	push	r17
    117e:	cf 93       	push	r28
    1180:	df 93       	push	r29
    1182:	ec 01       	movw	r28, r24
    1184:	6a 01       	movw	r12, r20
    1186:	7b 01       	movw	r14, r22
    1188:	a2 2e       	mov	r10, r18
    118a:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
    118c:	88 23       	and	r24, r24
    118e:	39 f0       	breq	.+14     	; 0x119e <UartClass::begin(unsigned long, unsigned int)+0x30>
    1190:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
    1192:	f9 81       	ldd	r31, Y+1	; 0x01
    1194:	06 88       	ldd	r0, Z+22	; 0x16
    1196:	f7 89       	ldd	r31, Z+23	; 0x17
    1198:	e0 2d       	mov	r30, r0
    119a:	ce 01       	movw	r24, r28
    119c:	09 95       	icall
    119e:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
    11a0:	10 e0       	ldi	r17, 0x00	; 0
    11a2:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
    11a4:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
    11a6:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
    11a8:	70 e2       	ldi	r23, 0x20	; 32
    11aa:	81 ea       	ldi	r24, 0xA1	; 161
    11ac:	97 e0       	ldi	r25, 0x07	; 7
    11ae:	a7 01       	movw	r20, r14
    11b0:	96 01       	movw	r18, r12
    11b2:	0e 94 ba 3b 	call	0x7774	; 0x7774 <__udivmodsi4>
    11b6:	69 01       	movw	r12, r18
    11b8:	7a 01       	movw	r14, r20
    11ba:	8f ef       	ldi	r24, 0xFF	; 255
    11bc:	c8 1a       	sub	r12, r24
    11be:	d8 0a       	sbc	r13, r24
    11c0:	e8 0a       	sbc	r14, r24
    11c2:	f8 0a       	sbc	r15, r24
    11c4:	f6 94       	lsr	r15
    11c6:	e7 94       	ror	r14
    11c8:	d7 94       	ror	r13
    11ca:	c7 94       	ror	r12
    11cc:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    11ce:	fd 85       	ldd	r31, Y+13	; 0x0d
    11d0:	86 81       	ldd	r24, Z+6	; 0x06
    11d2:	8d 7f       	andi	r24, 0xFD	; 253
    11d4:	86 83       	std	Z+6, r24	; 0x06
    11d6:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    11d8:	fd 85       	ldd	r31, Y+13	; 0x0d
    11da:	86 81       	ldd	r24, Z+6	; 0x06
    11dc:	86 83       	std	Z+6, r24	; 0x06
    11de:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    11e0:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    11e4:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    11e6:	00 0c       	add	r0, r0
    11e8:	bb 0b       	sbc	r27, r27
    11ea:	a7 01       	movw	r20, r14
    11ec:	96 01       	movw	r18, r12
    11ee:	0e 94 0e 3c 	call	0x781c	; 0x781c <__mulshisi3>
    11f2:	20 e0       	ldi	r18, 0x00	; 0
    11f4:	34 e0       	ldi	r19, 0x04	; 4
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	0e 94 dc 3b 	call	0x77b8	; 0x77b8 <__divmodsi4>
    11fe:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    1200:	fd 85       	ldd	r31, Y+13	; 0x0d
    1202:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    1204:	d3 1e       	adc	r13, r19
    1206:	e4 1e       	adc	r14, r20
    1208:	f5 1e       	adc	r15, r21
    120a:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    120c:	d1 86       	std	Z+9, r13	; 0x09
    120e:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    1210:	fd 85       	ldd	r31, Y+13	; 0x0d
    1212:	a7 82       	std	Z+7, r10	; 0x07
    1214:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    1216:	fd 85       	ldd	r31, Y+13	; 0x0d
    1218:	86 81       	ldd	r24, Z+6	; 0x06
    121a:	80 6c       	ori	r24, 0xC0	; 192
    121c:	86 83       	std	Z+6, r24	; 0x06
    121e:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    1220:	fd 85       	ldd	r31, Y+13	; 0x0d
    1222:	85 81       	ldd	r24, Z+5	; 0x05
    1224:	80 68       	ori	r24, 0x80	; 128
    1226:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    1228:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    122c:	8b 89       	ldd	r24, Y+19	; 0x13
    122e:	80 95       	com	r24
    1230:	89 23       	and	r24, r25
    1232:	98 01       	movw	r18, r16
    1234:	22 0f       	add	r18, r18
    1236:	33 1f       	adc	r19, r19
    1238:	02 0f       	add	r16, r18
    123a:	13 1f       	adc	r17, r19
    123c:	c0 0f       	add	r28, r16
    123e:	d1 1f       	adc	r29, r17
    1240:	98 89       	ldd	r25, Y+16	; 0x10
    1242:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    1244:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1248:	62 e0       	ldi	r22, 0x02	; 2
    124a:	8e 85       	ldd	r24, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    124c:	d4 de       	rcall	.-600    	; 0xff6 <pinMode>
    124e:	61 e0       	ldi	r22, 0x01	; 1
    1250:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    1252:	3e df       	rcall	.-388    	; 0x10d0 <digitalWrite>
    1254:	61 e0       	ldi	r22, 0x01	; 1
    1256:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    1258:	ce de       	rcall	.-612    	; 0xff6 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    125a:	bf be       	out	0x3f, r11	; 63
    125c:	df 91       	pop	r29
    125e:	cf 91       	pop	r28
    1260:	1f 91       	pop	r17
    1262:	0f 91       	pop	r16
    1264:	ff 90       	pop	r15
    1266:	ef 90       	pop	r14
    1268:	df 90       	pop	r13
    126a:	cf 90       	pop	r12
    126c:	bf 90       	pop	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Procss.cpp:1258
             break;                 
      }      
  }  
}

void Pclass :: ALL_LED_OFF()
    126e:	af 90       	pop	r10
    1270:	08 95       	ret

00001272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>:
digitalWrite():
    1272:	61 e0       	ldi	r22, 0x01	; 1
    1274:	8a e1       	ldi	r24, 0x1A	; 26
    1276:	ee de       	rcall	.-548    	; 0x1054 <digitalWrite.part.2>
    1278:	61 e0       	ldi	r22, 0x01	; 1
    127a:	8d e1       	ldi	r24, 0x1D	; 29
    127c:	eb de       	rcall	.-554    	; 0x1054 <digitalWrite.part.2>
    127e:	61 e0       	ldi	r22, 0x01	; 1
    1280:	8c e1       	ldi	r24, 0x1C	; 28
    1282:	e8 de       	rcall	.-560    	; 0x1054 <digitalWrite.part.2>
    1284:	61 e0       	ldi	r22, 0x01	; 1
    1286:	8b e1       	ldi	r24, 0x1B	; 27
    1288:	e5 ce       	rjmp	.-566    	; 0x1054 <digitalWrite.part.2>

0000128a <digitalRead.part.3>:
digitalRead.part.3():
    128a:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    128c:	1f 93       	push	r17
    128e:	cf 93       	push	r28
    1290:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	f8 01       	movw	r30, r16
    1296:	e7 5d       	subi	r30, 0xD7	; 215
    1298:	f6 44       	sbci	r31, 0x46	; 70
    129a:	c0 81       	ld	r28, Z
    129c:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    129e:	81 f0       	breq	.+32     	; 0x12c0 <digitalRead.part.3+0x36>
turnOffPWM():
    12a0:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    12a2:	08 f4       	brcc	.+2      	; 0x12a6 <digitalRead.part.3+0x1c>
    12a4:	ac de       	rcall	.-680    	; 0xffe <turnOffPWM.part.0>
digitalRead.part.3():
    12a6:	f8 01       	movw	r30, r16
    12a8:	e0 50       	subi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    12aa:	f7 44       	sbci	r31, 0x47	; 71
    12ac:	e0 81       	ld	r30, Z
    12ae:	80 e2       	ldi	r24, 0x20	; 32
    12b0:	e8 9f       	mul	r30, r24
    12b2:	f0 01       	movw	r30, r0
    12b4:	11 24       	eor	r1, r1
    12b6:	fc 5f       	subi	r31, 0xFC	; 252
    12b8:	80 85       	ldd	r24, Z+8	; 0x08
    12ba:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	09 f4       	brne	.+2      	; 0x12c2 <digitalRead.part.3+0x38>
    12c0:	80 e0       	ldi	r24, 0x00	; 0
    12c2:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    12c4:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    12c6:	0f 91       	pop	r16
    12c8:	08 95       	ret

000012ca <micros>:
micros():
    12ca:	8f b7       	in	r24, 0x3f	; 63
    12cc:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    12ce:	20 91 3d 28 	lds	r18, 0x283D	; 0x80283d <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    12d2:	30 91 3e 28 	lds	r19, 0x283E	; 0x80283e <timer_millis+0x1>
    12d6:	40 91 3f 28 	lds	r20, 0x283F	; 0x80283f <timer_millis+0x2>
    12da:	50 91 40 28 	lds	r21, 0x2840	; 0x802840 <timer_millis+0x3>
    12de:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    12e2:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12e6:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    12ea:	90 ff       	sbrs	r25, 0
    12ec:	08 c0       	rjmp	.+16     	; 0x12fe <micros+0x34>
    12ee:	2f 5f       	subi	r18, 0xFF	; 255
    12f0:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    12f2:	4f 4f       	sbci	r20, 0xFF	; 255
    12f4:	5f 4f       	sbci	r21, 0xFF	; 255
    12f6:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    12fa:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12fe:	8f bf       	out	0x3f, r24	; 63
    1300:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    1302:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    1304:	0e 94 04 3c 	call	0x7808	; 0x7808 <__muluhisi3>
    1308:	24 e0       	ldi	r18, 0x04	; 4
    130a:	f6 95       	lsr	r31
    130c:	e7 95       	ror	r30
    130e:	2a 95       	dec	r18
    1310:	e1 f7       	brne	.-8      	; 0x130a <micros+0x40>
    1312:	6e 0f       	add	r22, r30
    1314:	7f 1f       	adc	r23, r31
    1316:	81 1d       	adc	r24, r1
    1318:	91 1d       	adc	r25, r1
    131a:	08 95       	ret

0000131c <millis>:
millis():
    131c:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    131e:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    1320:	60 91 3d 28 	lds	r22, 0x283D	; 0x80283d <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    1324:	70 91 3e 28 	lds	r23, 0x283E	; 0x80283e <timer_millis+0x1>
    1328:	80 91 3f 28 	lds	r24, 0x283F	; 0x80283f <timer_millis+0x2>
    132c:	90 91 40 28 	lds	r25, 0x2840	; 0x802840 <timer_millis+0x3>
    1330:	2f bf       	out	0x3f, r18	; 63
    1332:	08 95       	ret

00001334 <Lclass::PID_callingg() [clone .constprop.56]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    1334:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    1336:	1f 93       	push	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:35
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    1338:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:37
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    133c:	81 11       	cpse	r24, r1
    133e:	82 c0       	rjmp	.+260    	; 0x1444 <Lclass::PID_callingg() [clone .constprop.56]+0x110>
    1340:	80 91 06 29 	lds	r24, 0x2906	; 0x802906 <TEMP_DEG>
    1344:	90 91 07 29 	lds	r25, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    1348:	a0 91 08 29 	lds	r26, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    134c:	b0 91 09 29 	lds	r27, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    1350:	80 93 fa 29 	sts	0x29FA, r24	; 0x8029fa <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:38
  else               PID_INPUT = TEMP_DEG_RAW;
    1354:	90 93 fb 29 	sts	0x29FB, r25	; 0x8029fb <PID_INPUT+0x1>
    1358:	a0 93 fc 29 	sts	0x29FC, r26	; 0x8029fc <PID_INPUT+0x2>
    135c:	b0 93 fd 29 	sts	0x29FD, r27	; 0x8029fd <PID_INPUT+0x3>
    1360:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <select_heating_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:43


//-------------------------------------------------------slow_Heating-------------------------------------------------------------//

if(select_heating_type==0)
    1364:	81 11       	cpse	r24, r1
    1366:	8d c0       	rjmp	.+282    	; 0x1482 <Lclass::PID_callingg() [clone .constprop.56]+0x14e>
    1368:	80 e0       	ldi	r24, 0x00	; 0
    136a:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:48
{
//        Serial2.println("Product Slow");
        if(PID_SETPOINT < 51)
          {
            Kp= 25; Ki=0.010; Kd=850;  //Ring Heater <51    
    136c:	a8 ec       	ldi	r26, 0xC8	; 200
    136e:	b1 e4       	ldi	r27, 0x41	; 65
    1370:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    1374:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1378:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    137c:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    1380:	8a e0       	ldi	r24, 0x0A	; 10
    1382:	97 ed       	ldi	r25, 0xD7	; 215
    1384:	a3 e2       	ldi	r26, 0x23	; 35
    1386:	bc e3       	ldi	r27, 0x3C	; 60
    1388:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    138c:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    1390:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    1394:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    1398:	80 e0       	ldi	r24, 0x00	; 0
    139a:	90 e8       	ldi	r25, 0x80	; 128
    139c:	a4 e5       	ldi	r26, 0x54	; 84
    139e:	b4 e4       	ldi	r27, 0x44	; 68
    13a0:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    13a4:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    13a8:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    13ac:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:49
            myPID.SetTunings(Kp, Ki, Kd);    
    13b0:	9c 01       	movw	r18, r24
    13b2:	ad 01       	movw	r20, r26
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	70 e0       	ldi	r23, 0x00	; 0
    13b8:	88 ec       	ldi	r24, 0xC8	; 200
    13ba:	91 e4       	ldi	r25, 0x41	; 65
    13bc:	82 d9       	rcall	.-3324   	; 0x6c2 <PID::SetTunings(double, double, double) [clone .constprop.57]>
    13be:	ae df       	rcall	.-164    	; 0x131c <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:57
          {
            Kp= 25; Ki=0.010; Kd=850;  //Ring Heater >51    
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    13c0:	00 91 fd 28 	lds	r16, 0x28FD	; 0x8028fd <WINDOW_START_TIME>
    13c4:	10 91 fe 28 	lds	r17, 0x28FE	; 0x8028fe <WINDOW_START_TIME+0x1>
    13c8:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <WINDOW_START_TIME+0x2>
    13cc:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <WINDOW_START_TIME+0x3>
    13d0:	ab 01       	movw	r20, r22
    13d2:	bc 01       	movw	r22, r24
    13d4:	40 1b       	sub	r20, r16
    13d6:	51 0b       	sbc	r21, r17
    13d8:	62 0b       	sbc	r22, r18
    13da:	73 0b       	sbc	r23, r19
    13dc:	4d 34       	cpi	r20, 0x4D	; 77
    13de:	54 40       	sbci	r21, 0x04	; 4
    13e0:	61 05       	cpc	r22, r1
    13e2:	71 05       	cpc	r23, r1
    13e4:	70 f0       	brcs	.+28     	; 0x1402 <Lclass::PID_callingg() [clone .constprop.56]+0xce>
    13e6:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:58
                         WINDOW_START_TIME += WINDOW_SIZE;
    13e8:	c8 01       	movw	r24, r16
    13ea:	84 5b       	subi	r24, 0xB4	; 180
    13ec:	9b 4f       	sbci	r25, 0xFB	; 251
    13ee:	af 4f       	sbci	r26, 0xFF	; 255
    13f0:	bf 4f       	sbci	r27, 0xFF	; 255
    13f2:	80 93 fd 28 	sts	0x28FD, r24	; 0x8028fd <WINDOW_START_TIME>
    13f6:	90 93 fe 28 	sts	0x28FE, r25	; 0x8028fe <WINDOW_START_TIME+0x1>
    13fa:	a0 93 ff 28 	sts	0x28FF, r26	; 0x8028ff <WINDOW_START_TIME+0x2>
    13fe:	b0 93 00 29 	sts	0x2900, r27	; 0x802900 <WINDOW_START_TIME+0x3>
    1402:	8c df       	rcall	.-232    	; 0x131c <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:62
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    1404:	00 91 fd 28 	lds	r16, 0x28FD	; 0x8028fd <WINDOW_START_TIME>
    1408:	10 91 fe 28 	lds	r17, 0x28FE	; 0x8028fe <WINDOW_START_TIME+0x1>
    140c:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <WINDOW_START_TIME+0x2>
    1410:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <WINDOW_START_TIME+0x3>
    1414:	60 1b       	sub	r22, r16
    1416:	71 0b       	sbc	r23, r17
    1418:	82 0b       	sbc	r24, r18
    141a:	93 0b       	sbc	r25, r19
    141c:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
    1420:	20 91 f6 29 	lds	r18, 0x29F6	; 0x8029f6 <PID_OUTPUT>
    1424:	30 91 f7 29 	lds	r19, 0x29F7	; 0x8029f7 <PID_OUTPUT+0x1>
    1428:	40 91 f8 29 	lds	r20, 0x29F8	; 0x8029f8 <PID_OUTPUT+0x2>
    142c:	50 91 f9 29 	lds	r21, 0x29F9	; 0x8029f9 <PID_OUTPUT+0x3>
    1430:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    1434:	18 16       	cp	r1, r24
    1436:	7c f4       	brge	.+30     	; 0x1456 <Lclass::PID_callingg() [clone .constprop.56]+0x122>
digitalWrite():
    1438:	60 e0       	ldi	r22, 0x00	; 0
    143a:	88 e1       	ldi	r24, 0x18	; 24
    143c:	0b de       	rcall	.-1002   	; 0x1054 <digitalWrite.part.2>
PID_callingg():
    143e:	1f 91       	pop	r17
    1440:	0f 91       	pop	r16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    1442:	08 95       	ret
    1444:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:38
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    1448:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    144c:	a0 91 04 29 	lds	r26, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    1450:	b0 91 05 29 	lds	r27, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    1454:	7d cf       	rjmp	.-262    	; 0x1350 <Lclass::PID_callingg() [clone .constprop.56]+0x1c>
    1456:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:65
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    145a:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    145e:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    1462:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    1466:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    146a:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    146e:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    1472:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    1476:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    147a:	87 ff       	sbrs	r24, 7
    147c:	dd cf       	rjmp	.-70     	; 0x1438 <Lclass::PID_callingg() [clone .constprop.56]+0x104>
digitalWrite():
    147e:	61 e0       	ldi	r22, 0x01	; 1
    1480:	dc cf       	rjmp	.-72     	; 0x143a <Lclass::PID_callingg() [clone .constprop.56]+0x106>
PID_callingg():
    1482:	80 e0       	ldi	r24, 0x00	; 0
    1484:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:76
 
  {
//          Serial2.println("Product Fast");
            if(PID_SETPOINT < 51)
          {
            Kp= 30; Ki=0.010; Kd=500;  //Ring Heater <51 
    1486:	a0 ef       	ldi	r26, 0xF0	; 240
    1488:	b1 e4       	ldi	r27, 0x41	; 65
    148a:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    148e:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1492:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1496:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    149a:	8a e0       	ldi	r24, 0x0A	; 10
    149c:	97 ed       	ldi	r25, 0xD7	; 215
    149e:	a3 e2       	ldi	r26, 0x23	; 35
    14a0:	bc e3       	ldi	r27, 0x3C	; 60
    14a2:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    14a6:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    14aa:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    14ae:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	aa ef       	ldi	r26, 0xFA	; 250
    14b8:	b3 e4       	ldi	r27, 0x43	; 67
    14ba:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    14be:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    14c2:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    14c6:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:77
            myPID.SetTunings(Kp, Ki, Kd);    
    14ca:	9c 01       	movw	r18, r24
    14cc:	ad 01       	movw	r20, r26
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	70 e0       	ldi	r23, 0x00	; 0
    14d2:	80 ef       	ldi	r24, 0xF0	; 240
    14d4:	91 e4       	ldi	r25, 0x41	; 65
    14d6:	f5 d8       	rcall	.-3606   	; 0x6c2 <PID::SetTunings(double, double, double) [clone .constprop.57]>
    14d8:	21 df       	rcall	.-446    	; 0x131c <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:85
          {
            Kp= 30; Ki=0.010; Kd=500;  //Ring Heater >51    
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    14da:	00 91 fd 28 	lds	r16, 0x28FD	; 0x8028fd <WINDOW_START_TIME>
    14de:	10 91 fe 28 	lds	r17, 0x28FE	; 0x8028fe <WINDOW_START_TIME+0x1>
    14e2:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <WINDOW_START_TIME+0x2>
    14e6:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <WINDOW_START_TIME+0x3>
    14ea:	ab 01       	movw	r20, r22
    14ec:	bc 01       	movw	r22, r24
    14ee:	40 1b       	sub	r20, r16
    14f0:	51 0b       	sbc	r21, r17
    14f2:	62 0b       	sbc	r22, r18
    14f4:	73 0b       	sbc	r23, r19
    14f6:	4d 34       	cpi	r20, 0x4D	; 77
    14f8:	54 40       	sbci	r21, 0x04	; 4
    14fa:	61 05       	cpc	r22, r1
    14fc:	71 05       	cpc	r23, r1
    14fe:	70 f0       	brcs	.+28     	; 0x151c <Lclass::PID_callingg() [clone .constprop.56]+0x1e8>
    1500:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:86
                         WINDOW_START_TIME += WINDOW_SIZE;
    1502:	c8 01       	movw	r24, r16
    1504:	84 5b       	subi	r24, 0xB4	; 180
    1506:	9b 4f       	sbci	r25, 0xFB	; 251
    1508:	af 4f       	sbci	r26, 0xFF	; 255
    150a:	bf 4f       	sbci	r27, 0xFF	; 255
    150c:	80 93 fd 28 	sts	0x28FD, r24	; 0x8028fd <WINDOW_START_TIME>
    1510:	90 93 fe 28 	sts	0x28FE, r25	; 0x8028fe <WINDOW_START_TIME+0x1>
    1514:	a0 93 ff 28 	sts	0x28FF, r26	; 0x8028ff <WINDOW_START_TIME+0x2>
    1518:	b0 93 00 29 	sts	0x2900, r27	; 0x802900 <WINDOW_START_TIME+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:90
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    151c:	ff de       	rcall	.-514    	; 0x131c <millis>
    151e:	00 91 fd 28 	lds	r16, 0x28FD	; 0x8028fd <WINDOW_START_TIME>
    1522:	10 91 fe 28 	lds	r17, 0x28FE	; 0x8028fe <WINDOW_START_TIME+0x1>
    1526:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <WINDOW_START_TIME+0x2>
    152a:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <WINDOW_START_TIME+0x3>
    152e:	60 1b       	sub	r22, r16
    1530:	71 0b       	sbc	r23, r17
    1532:	82 0b       	sbc	r24, r18
    1534:	93 0b       	sbc	r25, r19
    1536:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
    153a:	20 91 f6 29 	lds	r18, 0x29F6	; 0x8029f6 <PID_OUTPUT>
    153e:	30 91 f7 29 	lds	r19, 0x29F7	; 0x8029f7 <PID_OUTPUT+0x1>
    1542:	40 91 f8 29 	lds	r20, 0x29F8	; 0x8029f8 <PID_OUTPUT+0x2>
    1546:	50 91 f9 29 	lds	r21, 0x29F9	; 0x8029f9 <PID_OUTPUT+0x3>
    154a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    154e:	18 16       	cp	r1, r24
    1550:	2c f4       	brge	.+10     	; 0x155c <Lclass::PID_callingg() [clone .constprop.56]+0x228>
digitalWrite():
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
    1556:	1f 91       	pop	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    1558:	0f 91       	pop	r16
digitalWrite():
    155a:	7c cd       	rjmp	.-1288   	; 0x1054 <digitalWrite.part.2>
PID_callingg():
    155c:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:93
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    1560:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    1564:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    1568:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    156c:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    1570:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    1574:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    1578:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    157c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    1580:	87 ff       	sbrs	r24, 7
    1582:	e7 cf       	rjmp	.-50     	; 0x1552 <Lclass::PID_callingg() [clone .constprop.56]+0x21e>
digitalWrite():
    1584:	61 e0       	ldi	r22, 0x01	; 1
    1586:	e6 cf       	rjmp	.-52     	; 0x1554 <Lclass::PID_callingg() [clone .constprop.56]+0x220>

00001588 <Ticker::update()>:
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    1588:	0f 93       	push	r16
    158a:	1f 93       	push	r17
    158c:	cf 93       	push	r28
    158e:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    1590:	fc 01       	movw	r30, r24
    1592:	20 81       	ld	r18, Z
    1594:	22 23       	and	r18, r18
    1596:	09 f4       	brne	.+2      	; 0x159a <Ticker::update()+0x12>
    1598:	50 c0       	rjmp	.+160    	; 0x163a <Ticker::update()+0xb2>
    159a:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    159c:	81 85       	ldd	r24, Z+9	; 0x09
    159e:	92 85       	ldd	r25, Z+10	; 0x0a
    15a0:	01 97       	sbiw	r24, 0x01	; 1
    15a2:	b9 f5       	brne	.+110    	; 0x1612 <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    15a4:	bb de       	rcall	.-650    	; 0x131c <millis>
    15a6:	0b 89       	ldd	r16, Y+19	; 0x13
    15a8:	1c 89       	ldd	r17, Y+20	; 0x14
    15aa:	2d 89       	ldd	r18, Y+21	; 0x15
    15ac:	3e 89       	ldd	r19, Y+22	; 0x16
    15ae:	60 1b       	sub	r22, r16
    15b0:	71 0b       	sbc	r23, r17
    15b2:	82 0b       	sbc	r24, r18
    15b4:	93 0b       	sbc	r25, r19
    15b6:	09 81       	ldd	r16, Y+1	; 0x01
    15b8:	1a 81       	ldd	r17, Y+2	; 0x02
    15ba:	2b 81       	ldd	r18, Y+3	; 0x03
    15bc:	3c 81       	ldd	r19, Y+4	; 0x04
    15be:	60 17       	cp	r22, r16
    15c0:	71 07       	cpc	r23, r17
    15c2:	82 07       	cpc	r24, r18
    15c4:	93 07       	cpc	r25, r19
    15c6:	c8 f1       	brcs	.+114    	; 0x163a <Ticker::update()+0xb2>
    15c8:	a9 de       	rcall	.-686    	; 0x131c <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    15ca:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    15cc:	7c 8b       	std	Y+20, r23	; 0x14
    15ce:	8d 8b       	std	Y+21, r24	; 0x15
    15d0:	9e 8b       	std	Y+22, r25	; 0x16
    15d2:	8b 85       	ldd	r24, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    15d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    15d6:	ad 85       	ldd	r26, Y+13	; 0x0d
    15d8:	be 85       	ldd	r27, Y+14	; 0x0e
    15da:	4d 81       	ldd	r20, Y+5	; 0x05
    15dc:	5e 81       	ldd	r21, Y+6	; 0x06
    15de:	6f 81       	ldd	r22, Y+7	; 0x07
    15e0:	78 85       	ldd	r23, Y+8	; 0x08
    15e2:	48 1b       	sub	r20, r24
    15e4:	59 0b       	sbc	r21, r25
    15e6:	6a 0b       	sbc	r22, r26
    15e8:	7b 0b       	sbc	r23, r27
    15ea:	41 30       	cpi	r20, 0x01	; 1
    15ec:	51 05       	cpc	r21, r1
    15ee:	61 05       	cpc	r22, r1
    15f0:	71 05       	cpc	r23, r1
    15f2:	09 f4       	brne	.+2      	; 0x15f6 <Ticker::update()+0x6e>
    15f4:	18 82       	st	Y, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    15f6:	01 96       	adiw	r24, 0x01	; 1
    15f8:	a1 1d       	adc	r26, r1
    15fa:	b1 1d       	adc	r27, r1
    15fc:	8b 87       	std	Y+11, r24	; 0x0b
    15fe:	9c 87       	std	Y+12, r25	; 0x0c
    1600:	ad 87       	std	Y+13, r26	; 0x0d
    1602:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1604:	e9 89       	ldd	r30, Y+17	; 0x11
    1606:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    1608:	df 91       	pop	r29
    160a:	cf 91       	pop	r28
    160c:	1f 91       	pop	r17
    160e:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1610:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    1612:	5b de       	rcall	.-842    	; 0x12ca <micros>
    1614:	0b 89       	ldd	r16, Y+19	; 0x13
    1616:	1c 89       	ldd	r17, Y+20	; 0x14
    1618:	2d 89       	ldd	r18, Y+21	; 0x15
    161a:	3e 89       	ldd	r19, Y+22	; 0x16
    161c:	60 1b       	sub	r22, r16
    161e:	71 0b       	sbc	r23, r17
    1620:	82 0b       	sbc	r24, r18
    1622:	93 0b       	sbc	r25, r19
    1624:	09 81       	ldd	r16, Y+1	; 0x01
    1626:	1a 81       	ldd	r17, Y+2	; 0x02
    1628:	2b 81       	ldd	r18, Y+3	; 0x03
    162a:	3c 81       	ldd	r19, Y+4	; 0x04
    162c:	60 17       	cp	r22, r16
    162e:	71 07       	cpc	r23, r17
    1630:	82 07       	cpc	r24, r18
    1632:	93 07       	cpc	r25, r19
    1634:	10 f0       	brcs	.+4      	; 0x163a <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    1636:	49 de       	rcall	.-878    	; 0x12ca <micros>
    1638:	c8 cf       	rjmp	.-112    	; 0x15ca <Ticker::update()+0x42>
update():
    163a:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    163c:	cf 91       	pop	r28
    163e:	1f 91       	pop	r17
    1640:	0f 91       	pop	r16
    1642:	08 95       	ret

00001644 <Ticker::start()>:
start():
    1644:	cf 93       	push	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    1646:	df 93       	push	r29
    1648:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    164a:	21 89       	ldd	r18, Z+17	; 0x11
    164c:	32 89       	ldd	r19, Z+18	; 0x12
    164e:	23 2b       	or	r18, r19
    1650:	a1 f0       	breq	.+40     	; 0x167a <Ticker::start()+0x36>
    1652:	ec 01       	movw	r28, r24
    1654:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    1656:	92 85       	ldd	r25, Z+10	; 0x0a
    1658:	01 97       	sbiw	r24, 0x01	; 1
    165a:	91 f4       	brne	.+36     	; 0x1680 <Ticker::start()+0x3c>
    165c:	5f de       	rcall	.-834    	; 0x131c <millis>
    165e:	6b 8b       	std	Y+19, r22	; 0x13
    1660:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    1662:	8d 8b       	std	Y+21, r24	; 0x15
    1664:	9e 8b       	std	Y+22, r25	; 0x16
    1666:	81 e0       	ldi	r24, 0x01	; 1
    1668:	88 83       	st	Y, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    166a:	1b 86       	std	Y+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    166c:	1c 86       	std	Y+12, r1	; 0x0c
    166e:	1d 86       	std	Y+13, r1	; 0x0d
    1670:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    1672:	81 e0       	ldi	r24, 0x01	; 1
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	8f 87       	std	Y+15, r24	; 0x0f
    1678:	98 8b       	std	Y+16, r25	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    1680:	24 de       	rcall	.-952    	; 0x12ca <micros>
    1682:	ed cf       	rjmp	.-38     	; 0x165e <Ticker::start()+0x1a>

00001684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>:
BUZZ_INTERVAL():
    1684:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:62
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
{
  BUZZ.interval(i);
    1686:	bc 01       	movw	r22, r24
    1688:	99 0f       	add	r25, r25
    168a:	88 0b       	sbc	r24, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    168c:	99 0b       	sbc	r25, r25
interval():
    168e:	20 91 1b 2b 	lds	r18, 0x2B1B	; 0x802b1b <BUZZ+0x9>
    1692:	30 91 1c 2b 	lds	r19, 0x2B1C	; 0x802b1c <BUZZ+0xa>
    1696:	23 2b       	or	r18, r19
    1698:	21 f4       	brne	.+8      	; 0x16a2 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]+0x1e>
    169a:	28 ee       	ldi	r18, 0xE8	; 232
    169c:	33 e0       	ldi	r19, 0x03	; 3
    169e:	0e 94 fe 3b 	call	0x77fc	; 0x77fc <__usmulhisi3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    16a2:	60 93 13 2b 	sts	0x2B13, r22	; 0x802b13 <BUZZ+0x1>
    16a6:	70 93 14 2b 	sts	0x2B14, r23	; 0x802b14 <BUZZ+0x2>
    16aa:	80 93 15 2b 	sts	0x2B15, r24	; 0x802b15 <BUZZ+0x3>
    16ae:	90 93 16 2b 	sts	0x2B16, r25	; 0x802b16 <BUZZ+0x4>
digitalWrite():
    16b2:	61 e0       	ldi	r22, 0x01	; 1
    16b4:	85 e1       	ldi	r24, 0x15	; 21
    16b6:	ce dc       	rcall	.-1636   	; 0x1054 <digitalWrite.part.2>
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    16b8:	82 e1       	ldi	r24, 0x12	; 18
    16ba:	9b e2       	ldi	r25, 0x2B	; 43
    16bc:	c3 cf       	rjmp	.-122    	; 0x1644 <Ticker::start()>

000016be <OneButton::tick()>:
tick():
    16be:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    16c0:	df 92       	push	r13
    16c2:	ef 92       	push	r14
    16c4:	ff 92       	push	r15
    16c6:	0f 93       	push	r16
    16c8:	1f 93       	push	r17
    16ca:	cf 93       	push	r28
    16cc:	df 93       	push	r29
    16ce:	ec 01       	movw	r28, r24
    16d0:	88 81       	ld	r24, Y
digitalRead():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    16d2:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    16d4:	f8 f4       	brcc	.+62     	; 0x1714 <OneButton::tick()+0x56>
    16d6:	d9 dd       	rcall	.-1102   	; 0x128a <digitalRead.part.3>
tick():
    16d8:	08 2f       	mov	r16, r24
    16da:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    16dc:	1f de       	rcall	.-962    	; 0x131c <millis>
    16de:	29 8d       	ldd	r18, Y+25	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    16e0:	3a 8d       	ldd	r19, Y+26	; 0x1a
    16e2:	21 15       	cp	r18, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    16e4:	31 05       	cpc	r19, r1
    16e6:	c1 f4       	brne	.+48     	; 0x1718 <OneButton::tick()+0x5a>
    16e8:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ea:	3b 85       	ldd	r19, Y+11	; 0x0b
    16ec:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    16ee:	31 07       	cpc	r19, r17
    16f0:	41 f4       	brne	.+16     	; 0x1702 <OneButton::tick()+0x44>
    16f2:	21 e0       	ldi	r18, 0x01	; 1
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	29 8f       	std	Y+25, r18	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    16f8:	3a 8f       	std	Y+26, r19	; 0x1a
    16fa:	6b 8f       	std	Y+27, r22	; 0x1b
    16fc:	7c 8f       	std	Y+28, r23	; 0x1c
    16fe:	8d 8f       	std	Y+29, r24	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    1700:	9e 8f       	std	Y+30, r25	; 0x1e
    1702:	df 91       	pop	r29
    1704:	cf 91       	pop	r28
    1706:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    1708:	0f 91       	pop	r16
    170a:	ff 90       	pop	r15
    170c:	ef 90       	pop	r14
    170e:	df 90       	pop	r13
    1710:	cf 90       	pop	r12
    1712:	08 95       	ret
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	e0 cf       	rjmp	.-64     	; 0x16d8 <OneButton::tick()+0x1a>
    1718:	21 30       	cpi	r18, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    171a:	31 05       	cpc	r19, r1
    171c:	09 f0       	breq	.+2      	; 0x1720 <OneButton::tick()+0x62>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    171e:	51 c0       	rjmp	.+162    	; 0x17c2 <OneButton::tick()+0x104>
    1720:	28 85       	ldd	r18, Y+8	; 0x08
    1722:	39 85       	ldd	r19, Y+9	; 0x09
    1724:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    1726:	31 07       	cpc	r19, r17
    1728:	e9 f4       	brne	.+58     	; 0x1764 <OneButton::tick()+0xa6>
    172a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    172c:	1c 8d       	ldd	r17, Y+28	; 0x1c
    172e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1730:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1732:	ab 01       	movw	r20, r22
    1734:	bc 01       	movw	r22, r24
    1736:	40 1b       	sub	r20, r16
    1738:	51 0b       	sbc	r21, r17
    173a:	62 0b       	sbc	r22, r18
    173c:	73 0b       	sbc	r23, r19
    173e:	8e 81       	ldd	r24, Y+6	; 0x06
    1740:	9f 81       	ldd	r25, Y+7	; 0x07
    1742:	09 2e       	mov	r0, r25
    1744:	00 0c       	add	r0, r0
    1746:	aa 0b       	sbc	r26, r26
    1748:	bb 0b       	sbc	r27, r27
    174a:	48 17       	cp	r20, r24
    174c:	59 07       	cpc	r21, r25
    174e:	6a 07       	cpc	r22, r26
    1750:	7b 07       	cpc	r23, r27
    1752:	18 f4       	brcc	.+6      	; 0x175a <OneButton::tick()+0x9c>
    1754:	19 8e       	std	Y+25, r1	; 0x19
    1756:	1a 8e       	std	Y+26, r1	; 0x1a
    1758:	d4 cf       	rjmp	.-88     	; 0x1702 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    175a:	82 e0       	ldi	r24, 0x02	; 2
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	89 8f       	std	Y+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    1760:	9a 8f       	std	Y+26, r25	; 0x1a
    1762:	cf cf       	rjmp	.-98     	; 0x1702 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    1764:	2a 85       	ldd	r18, Y+10	; 0x0a
    1766:	3b 85       	ldd	r19, Y+11	; 0x0b
    1768:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    176a:	31 07       	cpc	r19, r17
    176c:	51 f6       	brne	.-108    	; 0x1702 <OneButton::tick()+0x44>
    176e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1770:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1772:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1774:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1776:	ab 01       	movw	r20, r22
    1778:	bc 01       	movw	r22, r24
    177a:	40 1b       	sub	r20, r16
    177c:	51 0b       	sbc	r21, r17
    177e:	62 0b       	sbc	r22, r18
    1780:	73 0b       	sbc	r23, r19
    1782:	8c 81       	ldd	r24, Y+4	; 0x04
    1784:	9d 81       	ldd	r25, Y+5	; 0x05
    1786:	09 2e       	mov	r0, r25
    1788:	00 0c       	add	r0, r0
    178a:	aa 0b       	sbc	r26, r26
    178c:	bb 0b       	sbc	r27, r27
    178e:	84 17       	cp	r24, r20
    1790:	95 07       	cpc	r25, r21
    1792:	a6 07       	cpc	r26, r22
    1794:	b7 07       	cpc	r27, r23
    1796:	08 f0       	brcs	.+2      	; 0x179a <OneButton::tick()+0xdc>
    1798:	b4 cf       	rjmp	.-152    	; 0x1702 <OneButton::tick()+0x44>
    179a:	81 e0       	ldi	r24, 0x01	; 1
    179c:	8c 87       	std	Y+12, r24	; 0x0c
    179e:	e9 89       	ldd	r30, Y+17	; 0x11
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    17a0:	fa 89       	ldd	r31, Y+18	; 0x12
    17a2:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    17a4:	09 f0       	breq	.+2      	; 0x17a8 <OneButton::tick()+0xea>
    17a6:	09 95       	icall
    17a8:	eb 89       	ldd	r30, Y+19	; 0x13
    17aa:	fc 89       	ldd	r31, Y+20	; 0x14
    17ac:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    17ae:	09 f0       	breq	.+2      	; 0x17b2 <OneButton::tick()+0xf4>
    17b0:	09 95       	icall
    17b2:	ef 89       	ldd	r30, Y+23	; 0x17
    17b4:	f8 8d       	ldd	r31, Y+24	; 0x18
    17b6:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    17b8:	09 f0       	breq	.+2      	; 0x17bc <OneButton::tick()+0xfe>
    17ba:	09 95       	icall
    17bc:	86 e0       	ldi	r24, 0x06	; 6
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	ce cf       	rjmp	.-100    	; 0x175e <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    17c2:	22 30       	cpi	r18, 0x02	; 2
    17c4:	31 05       	cpc	r19, r1
    17c6:	19 f5       	brne	.+70     	; 0x180e <__DATA_REGION_LENGTH__+0xe>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    17c8:	cb 8c       	ldd	r12, Y+27	; 0x1b
    17ca:	dc 8c       	ldd	r13, Y+28	; 0x1c
    17cc:	ed 8c       	ldd	r14, Y+29	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    17ce:	fe 8c       	ldd	r15, Y+30	; 0x1e
    17d0:	6c 19       	sub	r22, r12
    17d2:	7d 09       	sbc	r23, r13
    17d4:	8e 09       	sbc	r24, r14
    17d6:	9f 09       	sbc	r25, r15
    17d8:	ca 80       	ldd	r12, Y+2	; 0x02
    17da:	db 80       	ldd	r13, Y+3	; 0x03
    17dc:	0d 2c       	mov	r0, r13
    17de:	00 0c       	add	r0, r0
    17e0:	ee 08       	sbc	r14, r14
    17e2:	ff 08       	sbc	r15, r15
    17e4:	c6 16       	cp	r12, r22
    17e6:	d7 06       	cpc	r13, r23
    17e8:	e8 06       	cpc	r14, r24
    17ea:	f9 06       	cpc	r15, r25
    17ec:	38 f4       	brcc	.+14     	; 0x17fc <OneButton::tick()+0x13e>
    17ee:	ed 85       	ldd	r30, Y+13	; 0x0d
    17f0:	fe 85       	ldd	r31, Y+14	; 0x0e
    17f2:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    17f4:	09 f4       	brne	.+2      	; 0x17f8 <OneButton::tick()+0x13a>
    17f6:	ae cf       	rjmp	.-164    	; 0x1754 <OneButton::tick()+0x96>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    17f8:	09 95       	icall
    17fa:	ac cf       	rjmp	.-168    	; 0x1754 <OneButton::tick()+0x96>
    17fc:	8a 85       	ldd	r24, Y+10	; 0x0a
    17fe:	9b 85       	ldd	r25, Y+11	; 0x0b
    1800:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    1802:	91 07       	cpc	r25, r17
    1804:	09 f0       	breq	.+2      	; 0x1808 <__DATA_REGION_LENGTH__+0x8>
    1806:	7d cf       	rjmp	.-262    	; 0x1702 <OneButton::tick()+0x44>
    1808:	83 e0       	ldi	r24, 0x03	; 3
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	a8 cf       	rjmp	.-176    	; 0x175e <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    180e:	23 30       	cpi	r18, 0x03	; 3
    1810:	31 05       	cpc	r19, r1
    1812:	49 f4       	brne	.+18     	; 0x1826 <__DATA_REGION_LENGTH__+0x26>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    1814:	88 85       	ldd	r24, Y+8	; 0x08
    1816:	99 85       	ldd	r25, Y+9	; 0x09
    1818:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    181a:	91 07       	cpc	r25, r17
    181c:	09 f0       	breq	.+2      	; 0x1820 <__DATA_REGION_LENGTH__+0x20>
    181e:	71 cf       	rjmp	.-286    	; 0x1702 <OneButton::tick()+0x44>
    1820:	ef 85       	ldd	r30, Y+15	; 0x0f
    1822:	f8 89       	ldd	r31, Y+16	; 0x10
    1824:	e6 cf       	rjmp	.-52     	; 0x17f2 <OneButton::tick()+0x134>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    1826:	26 30       	cpi	r18, 0x06	; 6
    1828:	31 05       	cpc	r19, r1
    182a:	09 f0       	breq	.+2      	; 0x182e <__DATA_REGION_LENGTH__+0x2e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    182c:	6a cf       	rjmp	.-300    	; 0x1702 <OneButton::tick()+0x44>
    182e:	88 85       	ldd	r24, Y+8	; 0x08
    1830:	99 85       	ldd	r25, Y+9	; 0x09
    1832:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    1834:	91 07       	cpc	r25, r17
    1836:	21 f4       	brne	.+8      	; 0x1840 <__DATA_REGION_LENGTH__+0x40>
    1838:	1c 86       	std	Y+12, r1	; 0x0c
    183a:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    183c:	fe 89       	ldd	r31, Y+22	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    183e:	d9 cf       	rjmp	.-78     	; 0x17f2 <OneButton::tick()+0x134>
    1840:	81 e0       	ldi	r24, 0x01	; 1
    1842:	8c 87       	std	Y+12, r24	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    1844:	ef 89       	ldd	r30, Y+23	; 0x17
    1846:	f8 8d       	ldd	r31, Y+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1848:	30 97       	sbiw	r30, 0x00	; 0
    184a:	09 f4       	brne	.+2      	; 0x184e <__DATA_REGION_LENGTH__+0x4e>
    184c:	5a cf       	rjmp	.-332    	; 0x1702 <OneButton::tick()+0x44>
    184e:	df 91       	pop	r29
    1850:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    1852:	1f 91       	pop	r17
    1854:	0f 91       	pop	r16
    1856:	ff 90       	pop	r15
    1858:	ef 90       	pop	r14
    185a:	df 90       	pop	r13
    185c:	cf 90       	pop	r12
    185e:	09 94       	ijmp

00001860 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
    1860:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:591
}
}

void RESET_LONG_PRESS_START()
{
  if(checkTempRaised==0)
    1864:	81 11       	cpse	r24, r1
    1866:	22 c0       	rjmp	.+68     	; 0x18ac <RESET_LONG_PRESS_START()+0x4c>
    1868:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:593
  {
  if (!LONG_PRESS )   
    186c:	81 11       	cpse	r24, r1
    186e:	16 c0       	rjmp	.+44     	; 0x189c <RESET_LONG_PRESS_START()+0x3c>
    1870:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:595
  {
  if(!ENTER_BUT)
    1874:	81 11       	cpse	r24, r1
    1876:	0b c0       	rjmp	.+22     	; 0x188e <RESET_LONG_PRESS_START()+0x2e>
    1878:	10 92 47 28 	sts	0x2847, r1	; 0x802847 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:597
  {
    RST_BUTT = 0;    
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:599
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    1880:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1884:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1888:	88 ec       	ldi	r24, 0xC8	; 200
    188a:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:612
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    188c:	fb ce       	rjmp	.-522    	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
    188e:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    1892:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:603
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
    1896:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <SET_MIN+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:604
      SET_MIN = 0;
    189a:	f6 cf       	rjmp	.-20     	; 0x1888 <RESET_LONG_PRESS_START()+0x28>
    189c:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <Service_Menu>
    18a0:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:609
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    18a2:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <Service_Menu>
    18a6:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    18aa:	ee cf       	rjmp	.-36     	; 0x1888 <RESET_LONG_PRESS_START()+0x28>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:610
    LONG_PRESS = 0;
    18ac:	08 95       	ret

000018ae <RESET_CLICK()>:
RESET_CLICK():
    18ae:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:614
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    18b2:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:559
  }
}

void RESET_CLICK()
{
  if(checkTempRaised==0)
    18b4:	5e c0       	rjmp	.+188    	; 0x1972 <RESET_CLICK()+0xc4>
    18b6:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    18ba:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:561
  {
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    18be:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    18c2:	21 11       	cpse	r18, r1
    18c4:	03 c0       	rjmp	.+6      	; 0x18cc <RESET_CLICK()+0x1e>
    18c6:	88 30       	cpi	r24, 0x08	; 8
    18c8:	91 05       	cpc	r25, r1
    18ca:	29 f0       	breq	.+10     	; 0x18d6 <RESET_CLICK()+0x28>
    18cc:	ac 01       	movw	r20, r24
    18ce:	4d 7f       	andi	r20, 0xFD	; 253
    18d0:	4c 30       	cpi	r20, 0x0C	; 12
    18d2:	51 05       	cpc	r21, r1
    18d4:	b9 f5       	brne	.+110    	; 0x1944 <RESET_CLICK()+0x96>
    18d6:	01 97       	sbiw	r24, 0x01	; 1
    18d8:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:564
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    18dc:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    18e0:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    18e4:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:575
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    18e6:	2b c0       	rjmp	.+86     	; 0x193e <RESET_CLICK()+0x90>
    18e8:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    18ec:	22 23       	and	r18, r18
    18ee:	d9 f1       	breq	.+118    	; 0x1966 <RESET_CLICK()+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:577
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    18f0:	82 30       	cpi	r24, 0x02	; 2
    18f2:	c9 f5       	brne	.+114    	; 0x1966 <RESET_CLICK()+0xb8>
    18f4:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    18f8:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:579
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    18fc:	85 30       	cpi	r24, 0x05	; 5
    18fe:	f9 f4       	brne	.+62     	; 0x193e <RESET_CLICK()+0x90>
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e8       	ldi	r20, 0x80	; 128
    1906:	5f e3       	ldi	r21, 0x3F	; 63
    1908:	60 91 b0 28 	lds	r22, 0x28B0	; 0x8028b0 <RATE_OF_HEATING>
    190c:	70 91 b1 28 	lds	r23, 0x28B1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    1910:	80 91 b2 28 	lds	r24, 0x28B2	; 0x8028b2 <RATE_OF_HEATING+0x2>
    1914:	90 91 b3 28 	lds	r25, 0x28B3	; 0x8028b3 <RATE_OF_HEATING+0x3>
    1918:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    191c:	87 fd       	sbrc	r24, 7
    191e:	0f c0       	rjmp	.+30     	; 0x193e <RESET_CLICK()+0x90>
    1920:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <CHECK_RATE_OF_HEATING>
    1924:	88 23       	and	r24, r24
    1926:	59 f0       	breq	.+22     	; 0x193e <RESET_CLICK()+0x90>
    1928:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:581
   {
     RATE_OF_HEATING =0;
    192c:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    1930:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <RATE_OF_HEATING+0x2>
    1934:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <RATE_OF_HEATING+0x3>
    1938:	81 e0       	ldi	r24, 0x01	; 1
    193a:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:582
     CHECK_RATE_OF_HEATING =1;
    193e:	82 e3       	ldi	r24, 0x32	; 50
    1940:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:585
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    1942:	a0 ce       	rjmp	.-704    	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
    1944:	8b 30       	cpi	r24, 0x0B	; 11
    1946:	91 05       	cpc	r25, r1
    1948:	11 f0       	breq	.+4      	; 0x194e <RESET_CLICK()+0xa0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:567
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    194a:	0d 97       	sbiw	r24, 0x0d	; 13
    194c:	21 f4       	brne	.+8      	; 0x1956 <RESET_CLICK()+0xa8>
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	80 93 ad 28 	sts	0x28AD, r24	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:569
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat )    
          Mode_Button_Single_Press_In_Settings =1;
    1954:	c5 cf       	rjmp	.-118    	; 0x18e0 <RESET_CLICK()+0x32>
    1956:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    195a:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:572
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    195c:	09 f4       	brne	.+2      	; 0x1960 <RESET_CLICK()+0xb2>
    195e:	c0 cf       	rjmp	.-128    	; 0x18e0 <RESET_CLICK()+0x32>
    1960:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    1964:	bd cf       	rjmp	.-134    	; 0x18e0 <RESET_CLICK()+0x32>
    1966:	81 50       	subi	r24, 0x01	; 1
    1968:	84 30       	cpi	r24, 0x04	; 4
    196a:	30 f6       	brcc	.-116    	; 0x18f8 <RESET_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:578
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    196c:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
    1970:	c3 cf       	rjmp	.-122    	; 0x18f8 <RESET_CLICK()+0x4a>
    1972:	08 95       	ret

00001974 <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    1974:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:587
     CHECK_RATE_OF_HEATING =1;
   }
  }
   Tick.BUZZ_INTERVAL(50); 
}
}
    1978:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:501
}
}

void DEC_LONGPRESS()
{ 
  if(checkTempRaised==0)
    197a:	12 c0       	rjmp	.+36     	; 0x19a0 <DEC_LONGPRESS()+0x2c>
    197c:	80 91 46 28 	lds	r24, 0x2846	; 0x802846 <but1>
    1980:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:503
  {
  if(!but1)
    1982:	0e c0       	rjmp	.+28     	; 0x19a0 <DEC_LONGPRESS()+0x2c>
    1984:	81 e0       	ldi	r24, 0x01	; 1
    1986:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:505
  {
    BLINK_STATS=1;
    198a:	80 91 38 28 	lds	r24, 0x2838	; 0x802838 <INC5>
    198e:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:506
    INC5++;
    1990:	80 93 38 28 	sts	0x2838, r24	; 0x802838 <INC5>
    1994:	89 31       	cpi	r24, 0x19	; 25
    1996:	24 f0       	brlt	.+8      	; 0x19a0 <DEC_LONGPRESS()+0x2c>
    1998:	0e 94 7d 02 	call	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:507
    if (INC5 >= 25)
    199c:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:509
    {
      Butn.SET_CHANGE_DOWN();
    19a0:	08 95       	ret

000019a2 <DEC_CLICK()>:
DEC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:510
      INC5 = 0;
    19a2:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:514
    }
  }
}
}
    19a6:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:461
  }
}

void DEC_CLICK()
{ 
  if(checkTempRaised==0)
    19a8:	5a c0       	rjmp	.+180    	; 0x1a5e <DEC_CLICK()+0xbc>
    19aa:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    19ae:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:463
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    19b0:	09 f4       	brne	.+2      	; 0x19b4 <DEC_CLICK()+0x12>
    19b2:	53 c0       	rjmp	.+166    	; 0x1a5a <DEC_CLICK()+0xb8>
    19b4:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    19b8:	81 11       	cpse	r24, r1
    19ba:	4f c0       	rjmp	.+158    	; 0x1a5a <DEC_CLICK()+0xb8>
    19bc:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    19c0:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    19c4:	20 91 4a 28 	lds	r18, 0x284A	; 0x80284a <Service_Menu>
    19c8:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:465
  {
    if(!Service_Menu){
    19ca:	19 c0       	rjmp	.+50     	; 0x19fe <DEC_CLICK()+0x5c>
    19cc:	01 96       	adiw	r24, 0x01	; 1
    19ce:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:466
        SELECTION_PARAMETER++;
    19d2:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    19d6:	20 91 0e 29 	lds	r18, 0x290E	; 0x80290e <select_product_type>
    19da:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:468

      if(select_product_type )
    19dc:	39 f0       	breq	.+14     	; 0x19ec <DEC_CLICK()+0x4a>
    19de:	05 97       	sbiw	r24, 0x05	; 5
    19e0:	f4 f1       	brlt	.+124    	; 0x1a5e <DEC_CLICK()+0xbc>
    19e2:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:470
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
    19e6:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    19ea:	08 95       	ret
    19ec:	05 97       	sbiw	r24, 0x05	; 5
    19ee:	bc f1       	brlt	.+110    	; 0x1a5e <DEC_CLICK()+0xbc>
    19f0:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:474
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    19f8:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:480
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
    19fc:	08 95       	ret
    19fe:	86 30       	cpi	r24, 0x06	; 6
    1a00:	91 05       	cpc	r25, r1
    1a02:	19 f4       	brne	.+6      	; 0x1a0a <DEC_CLICK()+0x68>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:479
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
    1a04:	88 e0       	ldi	r24, 0x08	; 8
    1a06:	90 e0       	ldi	r25, 0x00	; 0
    1a08:	f5 cf       	rjmp	.-22     	; 0x19f4 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:480
                   SELECTION_PARAMETER = Cal1_Point;
    1a0a:	20 91 b4 28 	lds	r18, 0x28B4	; 0x8028b4 <CAL2_START>
    1a0e:	89 30       	cpi	r24, 0x09	; 9
    1a10:	91 05       	cpc	r25, r1
    1a12:	39 f4       	brne	.+14     	; 0x1a22 <DEC_CLICK()+0x80>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:481
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1a14:	8b e0       	ldi	r24, 0x0B	; 11
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:482
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
    1a1a:	ec cf       	rjmp	.-40     	; 0x19f4 <DEC_CLICK()+0x52>
    1a1c:	80 e1       	ldi	r24, 0x10	; 16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:481
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	e9 cf       	rjmp	.-46     	; 0x19f4 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:484
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Slow_Fast_Heating;
    1a22:	21 11       	cpse	r18, r1
    1a24:	06 c0       	rjmp	.+12     	; 0x1a32 <DEC_CLICK()+0x90>
    1a26:	89 30       	cpi	r24, 0x09	; 9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:483
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
    1a28:	91 05       	cpc	r25, r1
    1a2a:	4c f0       	brlt	.+18     	; 0x1a3e <DEC_CLICK()+0x9c>
    1a2c:	80 31       	cpi	r24, 0x10	; 16
    1a2e:	91 05       	cpc	r25, r1
    1a30:	ac f3       	brlt	.-22     	; 0x1a1c <DEC_CLICK()+0x7a>
    1a32:	80 31       	cpi	r24, 0x10	; 16
    1a34:	91 05       	cpc	r25, r1
    1a36:	19 f4       	brne	.+6      	; 0x1a3e <DEC_CLICK()+0x9c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:485
                       SELECTION_PARAMETER = Slow_Fast_Heating;
      else if(SELECTION_PARAMETER ==  Slow_Fast_Heating)            
    1a38:	81 e1       	ldi	r24, 0x11	; 17
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	db cf       	rjmp	.-74     	; 0x19f4 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:486
              SELECTION_PARAMETER = Log;                  
    1a3e:	81 31       	cpi	r24, 0x11	; 17
    1a40:	91 05       	cpc	r25, r1
    1a42:	19 f4       	brne	.+6      	; 0x1a4a <DEC_CLICK()+0xa8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:487
      else if(SELECTION_PARAMETER ==  Log)            
    1a44:	82 e1       	ldi	r24, 0x12	; 18
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	d5 cf       	rjmp	.-86     	; 0x19f4 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:488
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
    1a4a:	82 31       	cpi	r24, 0x12	; 18
    1a4c:	91 05       	cpc	r25, r1
    1a4e:	1c f0       	brlt	.+6      	; 0x1a56 <DEC_CLICK()+0xb4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:489
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
    1a50:	85 e0       	ldi	r24, 0x05	; 5
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	cf cf       	rjmp	.-98     	; 0x19f4 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:490
              SELECTION_PARAMETER = Product_Selection_Parameter;
    1a56:	01 96       	adiw	r24, 0x01	; 1
    1a58:	cd cf       	rjmp	.-102    	; 0x19f4 <DEC_CLICK()+0x52>
    1a5a:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:492
      else                                                 
             SELECTION_PARAMETER++;             
    1a5e:	08 95       	ret

00001a60 <INC_LONGPRESS()>:
INC_LONGPRESS():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:495
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
    1a60:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:497
}
}
    1a64:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:435
}
}

void INC_LONGPRESS()
{
  if(checkTempRaised==0)
    1a66:	12 c0       	rjmp	.+36     	; 0x1a8c <INC_LONGPRESS()+0x2c>
    1a68:	80 91 46 28 	lds	r24, 0x2846	; 0x802846 <but1>
    1a6c:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:437
  {
  if(!but1)
    1a6e:	0e c0       	rjmp	.+28     	; 0x1a8c <INC_LONGPRESS()+0x2c>
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:439
  {
    BLINK_STATS=1;
    1a76:	80 91 38 28 	lds	r24, 0x2838	; 0x802838 <INC5>
    1a7a:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:440
    INC5++;
    1a7c:	80 93 38 28 	sts	0x2838, r24	; 0x802838 <INC5>
    1a80:	89 31       	cpi	r24, 0x19	; 25
    1a82:	24 f0       	brlt	.+8      	; 0x1a8c <INC_LONGPRESS()+0x2c>
    1a84:	0e 94 93 01 	call	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:441
    if (INC5 >= 25)
    1a88:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:443
    {
      Butn.SET_CHANGE_UP();
    1a8c:	08 95       	ret

00001a8e <INC_CLICK()>:
INC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:444
      INC5 = 0;
    1a8e:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:448
    }
  }
}
}
    1a92:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:390
  button4.tick();  
}

void INC_CLICK()
{ 
  if(checkTempRaised==0)
    1a94:	26 c0       	rjmp	.+76     	; 0x1ae2 <INC_CLICK()+0x54>
    1a96:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    1a9a:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:392
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1a9c:	09 f4       	brne	.+2      	; 0x1aa0 <INC_CLICK()+0x12>
    1a9e:	45 c0       	rjmp	.+138    	; 0x1b2a <INC_CLICK()+0x9c>
    1aa0:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    1aa4:	81 11       	cpse	r24, r1
    1aa6:	41 c0       	rjmp	.+130    	; 0x1b2a <INC_CLICK()+0x9c>
    1aa8:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1aac:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1ab0:	20 91 4a 28 	lds	r18, 0x284A	; 0x80284a <Service_Menu>
    1ab4:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:394
  {    
    if(!Service_Menu)
    1ab6:	16 c0       	rjmp	.+44     	; 0x1ae4 <INC_CLICK()+0x56>
    1ab8:	01 97       	sbiw	r24, 0x01	; 1
    1aba:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:396
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
    1abe:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1ac2:	20 91 0e 29 	lds	r18, 0x290E	; 0x80290e <select_product_type>
    1ac6:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:397
      if(select_product_type )
    1ac8:	49 f0       	breq	.+18     	; 0x1adc <INC_CLICK()+0x4e>
    1aca:	97 ff       	sbrs	r25, 7
    1acc:	0a c0       	rjmp	.+20     	; 0x1ae2 <INC_CLICK()+0x54>
    1ace:	84 e0       	ldi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:399
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1ad6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:409
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
    1ada:	08 95       	ret
    1adc:	18 16       	cp	r1, r24
    1ade:	19 06       	cpc	r1, r25
    1ae0:	b4 f7       	brge	.-20     	; 0x1ace <INC_CLICK()+0x40>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:403
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
    1ae2:	08 95       	ret
    1ae4:	88 30       	cpi	r24, 0x08	; 8
    1ae6:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:431
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
}
    1ae8:	19 f4       	brne	.+6      	; 0x1af0 <INC_CLICK()+0x62>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:408
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
    1aea:	86 e0       	ldi	r24, 0x06	; 6
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	f1 cf       	rjmp	.-30     	; 0x1ad2 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:409
                              SELECTION_PARAMETER = Calibration_Selection;
    1af0:	8b 30       	cpi	r24, 0x0B	; 11
    1af2:	91 05       	cpc	r25, r1
    1af4:	19 f4       	brne	.+6      	; 0x1afc <INC_CLICK()+0x6e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:411
                              
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
    1af6:	89 e0       	ldi	r24, 0x09	; 9
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	eb cf       	rjmp	.-42     	; 0x1ad2 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:412
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
    1afc:	81 31       	cpi	r24, 0x11	; 17
    1afe:	91 05       	cpc	r25, r1
    1b00:	19 f4       	brne	.+6      	; 0x1b08 <INC_CLICK()+0x7a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:414
                                
      else if(SELECTION_PARAMETER == Log)   
    1b02:	80 e1       	ldi	r24, 0x10	; 16
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	e5 cf       	rjmp	.-54     	; 0x1ad2 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:415
                                SELECTION_PARAMETER = Slow_Fast_Heating;
    1b08:	82 31       	cpi	r24, 0x12	; 18
    1b0a:	91 05       	cpc	r25, r1
    1b0c:	19 f4       	brne	.+6      	; 0x1b14 <INC_CLICK()+0x86>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:417
                                                         
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
    1b0e:	81 e1       	ldi	r24, 0x11	; 17
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	df cf       	rjmp	.-66     	; 0x1ad2 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:418
                                SELECTION_PARAMETER = Log;
    1b14:	80 31       	cpi	r24, 0x10	; 16
    1b16:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:420
                                
      else if(SELECTION_PARAMETER == Slow_Fast_Heating)   
    1b18:	71 f3       	breq	.-36     	; 0x1af6 <INC_CLICK()+0x68>
    1b1a:	86 30       	cpi	r24, 0x06	; 6
    1b1c:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:423
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;  
                                                              
      else if (SELECTION_PARAMETER < Calibration_Selection)
    1b1e:	1c f4       	brge	.+6      	; 0x1b26 <INC_CLICK()+0x98>
    1b20:	82 e1       	ldi	r24, 0x12	; 18
    1b22:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:424
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
    1b24:	d6 cf       	rjmp	.-84     	; 0x1ad2 <INC_CLICK()+0x44>
    1b26:	01 97       	sbiw	r24, 0x01	; 1
    1b28:	d4 cf       	rjmp	.-88     	; 0x1ad2 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:425
      else                      SELECTION_PARAMETER--;      
    1b2a:	0c 94 93 01 	jmp	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>

00001b2e <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:429
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
    1b2e:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:363
}
}

void MODE_LONG_PRESS_START()
{ 
  if(checkTempRaised==0)
    1b32:	81 11       	cpse	r24, r1
    1b34:	25 c0       	rjmp	.+74     	; 0x1b80 <MODE_LONG_PRESS_START()+0x52>
    1b36:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:365
  {
  if (!ENTER_BUT)
    1b3a:	81 11       	cpse	r24, r1
    1b3c:	17 c0       	rjmp	.+46     	; 0x1b6c <MODE_LONG_PRESS_START()+0x3e>
    1b3e:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:367
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    1b42:	81 11       	cpse	r24, r1
    1b44:	13 c0       	rjmp	.+38     	; 0x1b6c <MODE_LONG_PRESS_START()+0x3e>
    1b46:	8e e5       	ldi	r24, 0x5E	; 94
    1b48:	91 e0       	ldi	r25, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:369
    {
      i = 350;
    1b4a:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    1b4e:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    1b52:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:370
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    1b56:	88 23       	and	r24, r24
    1b58:	61 f0       	breq	.+24     	; 0x1b72 <MODE_LONG_PRESS_START()+0x44>
    1b5a:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1b5e:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:372
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	80 93 54 29 	sts	0x2954, r24	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:373
      RST_BUTT = 1;
    1b68:	80 93 47 28 	sts	0x2847, r24	; 0x802847 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:376
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
    1b6c:	88 ec       	ldi	r24, 0xC8	; 200
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	89 cd       	rjmp	.-1262   	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:371
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    1b72:	81 e0       	ldi	r24, 0x01	; 1
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1b7a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1b7e:	f1 cf       	rjmp	.-30     	; 0x1b62 <MODE_LONG_PRESS_START()+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:378
      RST_BUTT = 1;
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    1b80:	08 95       	ret

00001b82 <UartClass::begin(unsigned long)>:
begin():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1b82:	dc 01       	movw	r26, r24
    1b84:	ed 91       	ld	r30, X+
    1b86:	fc 91       	ld	r31, X
    1b88:	04 88       	ldd	r0, Z+20	; 0x14
    1b8a:	f5 89       	ldd	r31, Z+21	; 0x15
    1b8c:	e0 2d       	mov	r30, r0
    1b8e:	23 e0       	ldi	r18, 0x03	; 3
    1b90:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1b92:	09 94       	ijmp

00001b94 <STOP_BUZZER()>:
stop():
    1b94:	e2 e1       	ldi	r30, 0x12	; 18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1b96:	fb e2       	ldi	r31, 0x2B	; 43
    1b98:	10 82       	st	Z, r1
    1b9a:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1b9c:	14 86       	std	Z+12, r1	; 0x0c
    1b9e:	15 86       	std	Z+13, r1	; 0x0d
    1ba0:	16 86       	std	Z+14, r1	; 0x0e
    1ba2:	17 86       	std	Z+15, r1	; 0x0f
    1ba4:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
    1ba6:	60 e0       	ldi	r22, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1ba8:	85 e1       	ldi	r24, 0x15	; 21
    1baa:	54 ca       	rjmp	.-2904   	; 0x1054 <digitalWrite.part.2>

00001bac <STOP_BUZZER1()>:
STOP_BUZZER1():
    1bac:	8c ed       	ldi	r24, 0xDC	; 220
    1bae:	9a e2       	ldi	r25, 0x2A	; 42
    1bb0:	49 dd       	rcall	.-1390   	; 0x1644 <Ticker::start()>
digitalWrite():
    1bb2:	61 e0       	ldi	r22, 0x01	; 1
    1bb4:	85 e1       	ldi	r24, 0x15	; 21
    1bb6:	4e ca       	rjmp	.-2916   	; 0x1054 <digitalWrite.part.2>

00001bb8 <STOP_BUZZER2()>:
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1bb8:	60 e0       	ldi	r22, 0x00	; 0
    1bba:	85 e1       	ldi	r24, 0x15	; 21
    1bbc:	4b da       	rcall	.-2922   	; 0x1054 <digitalWrite.part.2>
STOP_BUZZER2():
    1bbe:	80 91 ae 28 	lds	r24, 0x28AE	; 0x8028ae <REPETATION_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1bc2:	88 23       	and	r24, r24
    1bc4:	49 f0       	breq	.+18     	; 0x1bd8 <STOP_BUZZER2()+0x20>
    1bc6:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <FOR_REP>
    1bca:	90 91 bc 28 	lds	r25, 0x28BC	; 0x8028bc <FOR_REP+0x1>
    1bce:	01 96       	adiw	r24, 0x01	; 1
    1bd0:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <FOR_REP>
    1bd4:	90 93 bc 28 	sts	0x28BC, r25	; 0x8028bc <FOR_REP+0x1>
    1bd8:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <FOR_REP2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:71
   FOR_REP2++;
    1bdc:	90 91 be 28 	lds	r25, 0x28BE	; 0x8028be <FOR_REP2+0x1>
    1be0:	01 96       	adiw	r24, 0x01	; 1
    1be2:	80 93 bd 28 	sts	0x28BD, r24	; 0x8028bd <FOR_REP2>
    1be6:	90 93 be 28 	sts	0x28BE, r25	; 0x8028be <FOR_REP2+0x1>
    1bea:	08 95       	ret

00001bec <LED_off()>:
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:72
}
    1bec:	60 e0       	ldi	r22, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:55
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1bee:	8a e1       	ldi	r24, 0x1A	; 26
    1bf0:	31 da       	rcall	.-2974   	; 0x1054 <digitalWrite.part.2>
LED_off():
    1bf2:	81 ec       	ldi	r24, 0xC1	; 193
    1bf4:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    1bf6:	26 cd       	rjmp	.-1460   	; 0x1644 <Ticker::start()>

00001bf8 <LED_on()>:
digitalWrite():
    1bf8:	61 e0       	ldi	r22, 0x01	; 1
    1bfa:	8a e1       	ldi	r24, 0x1A	; 26
    1bfc:	2b da       	rcall	.-2986   	; 0x1054 <digitalWrite.part.2>
LED_on():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1bfe:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <Blinking_Freq>
    1c02:	8f 5f       	subi	r24, 0xFF	; 255
    1c04:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <Blinking_Freq>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:51
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    1c08:	08 95       	ret

00001c0a <RTD_TEMP_CAL_1()>:
RTD_TEMP_CAL_1():
    1c0a:	8f 92       	push	r8
    1c0c:	9f 92       	push	r9
    1c0e:	af 92       	push	r10
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Tick.cpp:52
}
    1c10:	bf 92       	push	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:27
{  
  TEMP_UPDATE_1.start();
}

void RTD_TEMP_CAL_1()
{
    1c12:	cf 92       	push	r12
    1c14:	df 92       	push	r13
    1c16:	ef 92       	push	r14
    1c18:	ff 92       	push	r15
    1c1a:	cf 93       	push	r28
    1c1c:	df 93       	push	r29
    1c1e:	c0 91 1e 28 	lds	r28, 0x281E	; 0x80281e <sample_1>
    1c22:	d0 91 1f 28 	lds	r29, 0x281F	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:28
    sample_1++;
    1c26:	21 96       	adiw	r28, 0x01	; 1
    1c28:	c0 93 1e 28 	sts	0x281E, r28	; 0x80281e <sample_1>
    1c2c:	d0 93 1f 28 	sts	0x281F, r29	; 0x80281f <sample_1+0x1>
analogRead():
    1c30:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1c34:	81 e0       	ldi	r24, 0x01	; 1
    1c36:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1c3a:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1c3e:	80 ff       	sbrs	r24, 0
    1c40:	fc cf       	rjmp	.-8      	; 0x1c3a <RTD_TEMP_CAL_1()+0x30>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1c42:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1c46:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL_1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1c4a:	07 2e       	mov	r0, r23
    1c4c:	00 0c       	add	r0, r0
    1c4e:	88 0b       	sbc	r24, r24
    1c50:	99 0b       	sbc	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:29
    AvgVout_1 = analogRead(A0);
    1c52:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    1c56:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TotalVout_1>
    1c5a:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:30
    TotalVout_1  += AvgVout_1 ; 
    1c5e:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TotalVout_1+0x2>
    1c62:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TotalVout_1+0x3>
    1c66:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    1c6a:	69 97       	sbiw	r28, 0x19	; 25
    1c6c:	9c f4       	brge	.+38     	; 0x1c94 <RTD_TEMP_CAL_1()+0x8a>
    1c6e:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:31
    if(sample_1 >= avrage_val_1)
    1c72:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:30

void RTD_TEMP_CAL_1()
{
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    1c76:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1c7a:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1c7e:	df 91       	pop	r29
    1c80:	cf 91       	pop	r28
    1c82:	ff 90       	pop	r15
    1c84:	ef 90       	pop	r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:40
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    }
}
    1c86:	df 90       	pop	r13
    1c88:	cf 90       	pop	r12
    1c8a:	bf 90       	pop	r11
    1c8c:	af 90       	pop	r10
    1c8e:	9f 90       	pop	r9
    1c90:	8f 90       	pop	r8
    1c92:	08 95       	ret
    1c94:	20 e0       	ldi	r18, 0x00	; 0
    1c96:	30 e0       	ldi	r19, 0x00	; 0
    1c98:	48 ec       	ldi	r20, 0xC8	; 200
    1c9a:	51 e4       	ldi	r21, 0x41	; 65
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:33
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    if(sample_1 >= avrage_val_1)
    {
      TotalVout_1 /= avrage_val_1;
    1c9c:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1ca0:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
    1ca4:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
    1ca8:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1cac:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1cb0:	20 e0       	ldi	r18, 0x00	; 0
    1cb2:	30 e0       	ldi	r19, 0x00	; 0
    1cb4:	40 ea       	ldi	r20, 0xA0	; 160
    1cb6:	50 e4       	ldi	r21, 0x40	; 64
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:34
      float Vout1 = ((TotalVout_1 * Vs1) / 1023.0); // Voltage conversion
    1cb8:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 ec       	ldi	r19, 0xC0	; 192
    1cc0:	4f e7       	ldi	r20, 0x7F	; 127
    1cc2:	54 e4       	ldi	r21, 0x44	; 68
    1cc4:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1cc8:	20 e0       	ldi	r18, 0x00	; 0
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	40 e2       	ldi	r20, 0x20	; 32
    1cce:	51 e4       	ldi	r21, 0x41	; 65
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:35
      Vin1 = Vout1 / 10; // Gain
    1cd0:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1cd4:	25 e5       	ldi	r18, 0x55	; 85
    1cd6:	35 e5       	ldi	r19, 0x55	; 85
    1cd8:	45 ed       	ldi	r20, 0xD5	; 213
    1cda:	5d e3       	ldi	r21, 0x3D	; 61
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:36
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
    1cdc:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    1ce0:	6b 01       	movw	r12, r22
    1ce2:	7c 01       	movw	r14, r24
    1ce4:	20 e0       	ldi	r18, 0x00	; 0
    1ce6:	30 ee       	ldi	r19, 0xE0	; 224
    1ce8:	42 e9       	ldi	r20, 0x92	; 146
    1cea:	55 e4       	ldi	r21, 0x45	; 69
    1cec:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1cf0:	4b 01       	movw	r8, r22
    1cf2:	5c 01       	movw	r10, r24
    1cf4:	a7 01       	movw	r20, r14
    1cf6:	96 01       	movw	r18, r12
    1cf8:	60 e0       	ldi	r22, 0x00	; 0
    1cfa:	70 e0       	ldi	r23, 0x00	; 0
    1cfc:	80 ea       	ldi	r24, 0xA0	; 160
    1cfe:	90 e4       	ldi	r25, 0x40	; 64
    1d00:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1d04:	9b 01       	movw	r18, r22
    1d06:	ac 01       	movw	r20, r24
    1d08:	c5 01       	movw	r24, r10
    1d0a:	b4 01       	movw	r22, r8
    1d0c:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1d10:	20 e0       	ldi	r18, 0x00	; 0
    1d12:	30 e0       	ldi	r19, 0x00	; 0
    1d14:	48 ec       	ldi	r20, 0xC8	; 200
    1d16:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:37
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
    1d18:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	40 e8       	ldi	r20, 0x80	; 128
    1d22:	5f e3       	ldi	r21, 0x3F	; 63
    1d24:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1d28:	28 e4       	ldi	r18, 0x48	; 72
    1d2a:	30 e5       	ldi	r19, 0x50	; 80
    1d2c:	4c e7       	ldi	r20, 0x7C	; 124
    1d2e:	5b e3       	ldi	r21, 0x3B	; 59
    1d30:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    1d34:	60 93 20 28 	sts	0x2820, r22	; 0x802820 <TEMP_DEG_RAW_1>
    1d38:	70 93 21 28 	sts	0x2821, r23	; 0x802821 <TEMP_DEG_RAW_1+0x1>
    1d3c:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <TEMP_DEG_RAW_1+0x2>
    1d40:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <TEMP_DEG_RAW_1+0x3>
    1d44:	10 92 1e 28 	sts	0x281E, r1	; 0x80281e <sample_1>
    1d48:	10 92 1f 28 	sts	0x281F, r1	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Safety_probe.cpp:38
      sample_1 = 0;  AvgVout_1 = 0;   
    1d4c:	98 cf       	rjmp	.-208    	; 0x1c7e <RTD_TEMP_CAL_1()+0x74>

00001d4e <PID_RUN()>:
PID_RUN():
    1d4e:	3f 92       	push	r3
    1d50:	4f 92       	push	r4
    1d52:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:31
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1d54:	6f 92       	push	r6
    1d56:	7f 92       	push	r7
    1d58:	8f 92       	push	r8
    1d5a:	9f 92       	push	r9
    1d5c:	af 92       	push	r10
    1d5e:	bf 92       	push	r11
    1d60:	cf 92       	push	r12
    1d62:	df 92       	push	r13
    1d64:	ef 92       	push	r14
    1d66:	ff 92       	push	r15
    1d68:	0f 93       	push	r16
    1d6a:	1f 93       	push	r17
    1d6c:	cf 93       	push	r28
    1d6e:	df 93       	push	r29
    1d70:	cd b7       	in	r28, 0x3d	; 61
    1d72:	de b7       	in	r29, 0x3e	; 62
    1d74:	2e 97       	sbiw	r28, 0x0e	; 14
    1d76:	cd bf       	out	0x3d, r28	; 61
    1d78:	de bf       	out	0x3e, r29	; 62
Compute():
    1d7a:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
    1d7e:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1d80:	09 f4       	brne	.+2      	; 0x1d84 <PID_RUN()+0x36>
    1d82:	29 c1       	rjmp	.+594    	; 0x1fd6 <PID_RUN()+0x288>
    1d84:	cb da       	rcall	.-2666   	; 0x131c <millis>
    1d86:	6d 83       	std	Y+5, r22	; 0x05
    1d88:	7e 83       	std	Y+6, r23	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1d8a:	8f 83       	std	Y+7, r24	; 0x07
    1d8c:	98 87       	std	Y+8, r25	; 0x08
    1d8e:	80 91 20 2a 	lds	r24, 0x2A20	; 0x802a20 <myPID+0x22>
    1d92:	90 91 21 2a 	lds	r25, 0x2A21	; 0x802a21 <myPID+0x23>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1d96:	a0 91 22 2a 	lds	r26, 0x2A22	; 0x802a22 <myPID+0x24>
    1d9a:	b0 91 23 2a 	lds	r27, 0x2A23	; 0x802a23 <myPID+0x25>
    1d9e:	4d 81       	ldd	r20, Y+5	; 0x05
    1da0:	5e 81       	ldd	r21, Y+6	; 0x06
    1da2:	6f 81       	ldd	r22, Y+7	; 0x07
    1da4:	78 85       	ldd	r23, Y+8	; 0x08
    1da6:	48 1b       	sub	r20, r24
    1da8:	59 0b       	sbc	r21, r25
    1daa:	6a 0b       	sbc	r22, r26
    1dac:	7b 0b       	sbc	r23, r27
    1dae:	80 91 2c 2a 	lds	r24, 0x2A2C	; 0x802a2c <myPID+0x2e>
    1db2:	90 91 2d 2a 	lds	r25, 0x2A2D	; 0x802a2d <myPID+0x2f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1db6:	a0 91 2e 2a 	lds	r26, 0x2A2E	; 0x802a2e <myPID+0x30>
    1dba:	b0 91 2f 2a 	lds	r27, 0x2A2F	; 0x802a2f <myPID+0x31>
    1dbe:	48 17       	cp	r20, r24
    1dc0:	59 07       	cpc	r21, r25
    1dc2:	6a 07       	cpc	r22, r26
    1dc4:	7b 07       	cpc	r23, r27
    1dc6:	08 f4       	brcc	.+2      	; 0x1dca <PID_RUN()+0x7c>
    1dc8:	06 c1       	rjmp	.+524    	; 0x1fd6 <PID_RUN()+0x288>
    1dca:	e0 91 1a 2a 	lds	r30, 0x2A1A	; 0x802a1a <myPID+0x1c>
    1dce:	f0 91 1b 2a 	lds	r31, 0x2A1B	; 0x802a1b <myPID+0x1d>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1dd2:	80 81       	ld	r24, Z
    1dd4:	91 81       	ldd	r25, Z+1	; 0x01
    1dd6:	a2 81       	ldd	r26, Z+2	; 0x02
    1dd8:	b3 81       	ldd	r27, Z+3	; 0x03
    1dda:	89 83       	std	Y+1, r24	; 0x01
    1ddc:	9a 83       	std	Y+2, r25	; 0x02
    1dde:	ab 83       	std	Y+3, r26	; 0x03
    1de0:	bc 83       	std	Y+4, r27	; 0x04
    1de2:	e0 91 1e 2a 	lds	r30, 0x2A1E	; 0x802a1e <myPID+0x20>
    1de6:	f0 91 1f 2a 	lds	r31, 0x2A1F	; 0x802a1f <myPID+0x21>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1dea:	9c 01       	movw	r18, r24
    1dec:	ad 01       	movw	r20, r26
    1dee:	60 81       	ld	r22, Z
    1df0:	71 81       	ldd	r23, Z+1	; 0x01
    1df2:	82 81       	ldd	r24, Z+2	; 0x02
    1df4:	93 81       	ldd	r25, Z+3	; 0x03
    1df6:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1dfa:	4b 01       	movw	r8, r22
    1dfc:	5c 01       	movw	r10, r24
    1dfe:	20 91 28 2a 	lds	r18, 0x2A28	; 0x802a28 <myPID+0x2a>
    1e02:	30 91 29 2a 	lds	r19, 0x2A29	; 0x802a29 <myPID+0x2b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1e06:	40 91 2a 2a 	lds	r20, 0x2A2A	; 0x802a2a <myPID+0x2c>
    1e0a:	50 91 2b 2a 	lds	r21, 0x2A2B	; 0x802a2b <myPID+0x2d>
    1e0e:	69 81       	ldd	r22, Y+1	; 0x01
    1e10:	7a 81       	ldd	r23, Y+2	; 0x02
    1e12:	8b 81       	ldd	r24, Y+3	; 0x03
    1e14:	9c 81       	ldd	r25, Y+4	; 0x04
    1e16:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1e1a:	6b 01       	movw	r12, r22
    1e1c:	7c 01       	movw	r14, r24
    1e1e:	20 91 0e 2a 	lds	r18, 0x2A0E	; 0x802a0e <myPID+0x10>
    1e22:	30 91 0f 2a 	lds	r19, 0x2A0F	; 0x802a0f <myPID+0x11>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1e26:	40 91 10 2a 	lds	r20, 0x2A10	; 0x802a10 <myPID+0x12>
    1e2a:	50 91 11 2a 	lds	r21, 0x2A11	; 0x802a11 <myPID+0x13>
    1e2e:	c5 01       	movw	r24, r10
    1e30:	b4 01       	movw	r22, r8
    1e32:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1e36:	20 91 24 2a 	lds	r18, 0x2A24	; 0x802a24 <myPID+0x26>
    1e3a:	30 91 25 2a 	lds	r19, 0x2A25	; 0x802a25 <myPID+0x27>
    1e3e:	40 91 26 2a 	lds	r20, 0x2A26	; 0x802a26 <myPID+0x28>
    1e42:	50 91 27 2a 	lds	r21, 0x2A27	; 0x802a27 <myPID+0x29>
    1e46:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    1e4a:	2b 01       	movw	r4, r22
    1e4c:	3c 01       	movw	r6, r24
    1e4e:	40 92 24 2a 	sts	0x2A24, r4	; 0x802a24 <myPID+0x26>
    1e52:	50 92 25 2a 	sts	0x2A25, r5	; 0x802a25 <myPID+0x27>
    1e56:	60 92 26 2a 	sts	0x2A26, r6	; 0x802a26 <myPID+0x28>
    1e5a:	70 92 27 2a 	sts	0x2A27, r7	; 0x802a27 <myPID+0x29>
    1e5e:	30 90 39 2a 	lds	r3, 0x2A39	; 0x802a39 <myPID+0x3b>
    1e62:	31 10       	cpse	r3, r1
    1e64:	1a c0       	rjmp	.+52     	; 0x1e9a <PID_RUN()+0x14c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1e66:	20 91 0a 2a 	lds	r18, 0x2A0A	; 0x802a0a <myPID+0xc>
    1e6a:	30 91 0b 2a 	lds	r19, 0x2A0B	; 0x802a0b <myPID+0xd>
    1e6e:	40 91 0c 2a 	lds	r20, 0x2A0C	; 0x802a0c <myPID+0xe>
    1e72:	50 91 0d 2a 	lds	r21, 0x2A0D	; 0x802a0d <myPID+0xf>
    1e76:	c7 01       	movw	r24, r14
    1e78:	b6 01       	movw	r22, r12
    1e7a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1e7e:	9b 01       	movw	r18, r22
    1e80:	ac 01       	movw	r20, r24
    1e82:	c3 01       	movw	r24, r6
    1e84:	b2 01       	movw	r22, r4
    1e86:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1e8a:	60 93 24 2a 	sts	0x2A24, r22	; 0x802a24 <myPID+0x26>
    1e8e:	70 93 25 2a 	sts	0x2A25, r23	; 0x802a25 <myPID+0x27>
    1e92:	80 93 26 2a 	sts	0x2A26, r24	; 0x802a26 <myPID+0x28>
    1e96:	90 93 27 2a 	sts	0x2A27, r25	; 0x802a27 <myPID+0x29>
    1e9a:	40 90 24 2a 	lds	r4, 0x2A24	; 0x802a24 <myPID+0x26>
    1e9e:	50 90 25 2a 	lds	r5, 0x2A25	; 0x802a25 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1ea2:	60 90 26 2a 	lds	r6, 0x2A26	; 0x802a26 <myPID+0x28>
    1ea6:	70 90 27 2a 	lds	r7, 0x2A27	; 0x802a27 <myPID+0x29>
    1eaa:	10 91 34 2a 	lds	r17, 0x2A34	; 0x802a34 <myPID+0x36>
    1eae:	90 91 35 2a 	lds	r25, 0x2A35	; 0x802a35 <myPID+0x37>
    1eb2:	9e 87       	std	Y+14, r25	; 0x0e
    1eb4:	a0 91 36 2a 	lds	r26, 0x2A36	; 0x802a36 <myPID+0x38>
    1eb8:	ad 87       	std	Y+13, r26	; 0x0d
    1eba:	00 91 37 2a 	lds	r16, 0x2A37	; 0x802a37 <myPID+0x39>
    1ebe:	21 2f       	mov	r18, r17
    1ec0:	39 2f       	mov	r19, r25
    1ec2:	4a 2f       	mov	r20, r26
    1ec4:	50 2f       	mov	r21, r16
    1ec6:	c3 01       	movw	r24, r6
    1ec8:	b2 01       	movw	r22, r4
    1eca:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    1ece:	18 16       	cp	r1, r24
    1ed0:	0c f0       	brlt	.+2      	; 0x1ed4 <PID_RUN()+0x186>
    1ed2:	96 c0       	rjmp	.+300    	; 0x2000 <PID_RUN()+0x2b2>
    1ed4:	81 2f       	mov	r24, r17
    1ed6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ed8:	ad 85       	ldd	r26, Y+13	; 0x0d
    1eda:	b0 2f       	mov	r27, r16
    1edc:	80 93 24 2a 	sts	0x2A24, r24	; 0x802a24 <myPID+0x26>
    1ee0:	90 93 25 2a 	sts	0x2A25, r25	; 0x802a25 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1ee4:	a0 93 26 2a 	sts	0x2A26, r26	; 0x802a26 <myPID+0x28>
    1ee8:	b0 93 27 2a 	sts	0x2A27, r27	; 0x802a27 <myPID+0x29>
    1eec:	33 20       	and	r3, r3
    1eee:	09 f4       	brne	.+2      	; 0x1ef2 <PID_RUN()+0x1a4>
    1ef0:	a0 c0       	rjmp	.+320    	; 0x2032 <PID_RUN()+0x2e4>
    1ef2:	20 91 0a 2a 	lds	r18, 0x2A0A	; 0x802a0a <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1ef6:	30 91 0b 2a 	lds	r19, 0x2A0B	; 0x802a0b <myPID+0xd>
    1efa:	40 91 0c 2a 	lds	r20, 0x2A0C	; 0x802a0c <myPID+0xe>
    1efe:	50 91 0d 2a 	lds	r21, 0x2A0D	; 0x802a0d <myPID+0xf>
    1f02:	c5 01       	movw	r24, r10
    1f04:	b4 01       	movw	r22, r8
    1f06:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1f0a:	4b 01       	movw	r8, r22
    1f0c:	5c 01       	movw	r10, r24
    1f0e:	20 91 12 2a 	lds	r18, 0x2A12	; 0x802a12 <myPID+0x14>
    1f12:	30 91 13 2a 	lds	r19, 0x2A13	; 0x802a13 <myPID+0x15>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1f16:	40 91 14 2a 	lds	r20, 0x2A14	; 0x802a14 <myPID+0x16>
    1f1a:	50 91 15 2a 	lds	r21, 0x2A15	; 0x802a15 <myPID+0x17>
    1f1e:	c7 01       	movw	r24, r14
    1f20:	b6 01       	movw	r22, r12
    1f22:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    1f26:	9b 01       	movw	r18, r22
    1f28:	ac 01       	movw	r20, r24
    1f2a:	60 91 24 2a 	lds	r22, 0x2A24	; 0x802a24 <myPID+0x26>
    1f2e:	70 91 25 2a 	lds	r23, 0x2A25	; 0x802a25 <myPID+0x27>
    1f32:	80 91 26 2a 	lds	r24, 0x2A26	; 0x802a26 <myPID+0x28>
    1f36:	90 91 27 2a 	lds	r25, 0x2A27	; 0x802a27 <myPID+0x29>
    1f3a:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    1f3e:	a5 01       	movw	r20, r10
    1f40:	94 01       	movw	r18, r8
    1f42:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    1f46:	6b 01       	movw	r12, r22
    1f48:	7c 01       	movw	r14, r24
    1f4a:	9b 01       	movw	r18, r22
    1f4c:	ac 01       	movw	r20, r24
    1f4e:	61 2f       	mov	r22, r17
    1f50:	7e 85       	ldd	r23, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1f52:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f54:	90 2f       	mov	r25, r16
    1f56:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    1f5a:	87 fd       	sbrc	r24, 7
    1f5c:	18 c0       	rjmp	.+48     	; 0x1f8e <PID_RUN()+0x240>
    1f5e:	10 91 30 2a 	lds	r17, 0x2A30	; 0x802a30 <myPID+0x32>
    1f62:	90 91 31 2a 	lds	r25, 0x2A31	; 0x802a31 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1f66:	9e 87       	std	Y+14, r25	; 0x0e
    1f68:	a0 91 32 2a 	lds	r26, 0x2A32	; 0x802a32 <myPID+0x34>
    1f6c:	ad 87       	std	Y+13, r26	; 0x0d
    1f6e:	00 91 33 2a 	lds	r16, 0x2A33	; 0x802a33 <myPID+0x35>
    1f72:	21 2f       	mov	r18, r17
    1f74:	39 2f       	mov	r19, r25
    1f76:	4a 2f       	mov	r20, r26
    1f78:	50 2f       	mov	r21, r16
    1f7a:	b6 01       	movw	r22, r12
    1f7c:	c7 01       	movw	r24, r14
    1f7e:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    1f82:	87 fd       	sbrc	r24, 7
    1f84:	04 c0       	rjmp	.+8      	; 0x1f8e <PID_RUN()+0x240>
PID_RUN():
    1f86:	1c 2d       	mov	r17, r12
    1f88:	de 86       	std	Y+14, r13	; 0x0e
    1f8a:	ed 86       	std	Y+13, r14	; 0x0d
    1f8c:	0f 2d       	mov	r16, r15
Compute():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1f8e:	e0 91 1c 2a 	lds	r30, 0x2A1C	; 0x802a1c <myPID+0x1e>
    1f92:	f0 91 1d 2a 	lds	r31, 0x2A1D	; 0x802a1d <myPID+0x1f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1f96:	81 2f       	mov	r24, r17
    1f98:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f9a:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f9c:	b0 2f       	mov	r27, r16
    1f9e:	80 83       	st	Z, r24
    1fa0:	91 83       	std	Z+1, r25	; 0x01
    1fa2:	a2 83       	std	Z+2, r26	; 0x02
    1fa4:	b3 83       	std	Z+3, r27	; 0x03
    1fa6:	89 81       	ldd	r24, Y+1	; 0x01
    1fa8:	9a 81       	ldd	r25, Y+2	; 0x02
    1faa:	ab 81       	ldd	r26, Y+3	; 0x03
    1fac:	bc 81       	ldd	r27, Y+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1fae:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <myPID+0x2a>
    1fb2:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <myPID+0x2b>
    1fb6:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <myPID+0x2c>
    1fba:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <myPID+0x2d>
    1fbe:	8d 81       	ldd	r24, Y+5	; 0x05
    1fc0:	9e 81       	ldd	r25, Y+6	; 0x06
    1fc2:	af 81       	ldd	r26, Y+7	; 0x07
    1fc4:	b8 85       	ldd	r27, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    1fc6:	80 93 20 2a 	sts	0x2A20, r24	; 0x802a20 <myPID+0x22>
    1fca:	90 93 21 2a 	sts	0x2A21, r25	; 0x802a21 <myPID+0x23>
    1fce:	a0 93 22 2a 	sts	0x2A22, r26	; 0x802a22 <myPID+0x24>
    1fd2:	b0 93 23 2a 	sts	0x2A23, r27	; 0x802a23 <myPID+0x25>
PID_RUN():
    1fd6:	2e 96       	adiw	r28, 0x0e	; 14
    1fd8:	cd bf       	out	0x3d, r28	; 61
    1fda:	de bf       	out	0x3e, r29	; 62
    1fdc:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Pid.cpp:33
   myPID.Compute();  
}
    1fde:	cf 91       	pop	r28
    1fe0:	1f 91       	pop	r17
    1fe2:	0f 91       	pop	r16
    1fe4:	ff 90       	pop	r15
    1fe6:	ef 90       	pop	r14
    1fe8:	df 90       	pop	r13
    1fea:	cf 90       	pop	r12
    1fec:	bf 90       	pop	r11
    1fee:	af 90       	pop	r10
    1ff0:	9f 90       	pop	r9
    1ff2:	8f 90       	pop	r8
    1ff4:	7f 90       	pop	r7
    1ff6:	6f 90       	pop	r6
    1ff8:	5f 90       	pop	r5
    1ffa:	4f 90       	pop	r4
    1ffc:	3f 90       	pop	r3
    1ffe:	08 95       	ret
Compute():
    2000:	80 91 30 2a 	lds	r24, 0x2A30	; 0x802a30 <myPID+0x32>
    2004:	90 91 31 2a 	lds	r25, 0x2A31	; 0x802a31 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    2008:	a0 91 32 2a 	lds	r26, 0x2A32	; 0x802a32 <myPID+0x34>
    200c:	b0 91 33 2a 	lds	r27, 0x2A33	; 0x802a33 <myPID+0x35>
    2010:	89 87       	std	Y+9, r24	; 0x09
    2012:	9a 87       	std	Y+10, r25	; 0x0a
    2014:	ab 87       	std	Y+11, r26	; 0x0b
    2016:	bc 87       	std	Y+12, r27	; 0x0c
    2018:	9c 01       	movw	r18, r24
    201a:	ad 01       	movw	r20, r26
    201c:	c3 01       	movw	r24, r6
    201e:	b2 01       	movw	r22, r4
    2020:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    2024:	87 ff       	sbrs	r24, 7
    2026:	62 cf       	rjmp	.-316    	; 0x1eec <PID_RUN()+0x19e>
    2028:	89 85       	ldd	r24, Y+9	; 0x09
    202a:	9a 85       	ldd	r25, Y+10	; 0x0a
    202c:	ab 85       	ldd	r26, Y+11	; 0x0b
    202e:	bc 85       	ldd	r27, Y+12	; 0x0c
    2030:	55 cf       	rjmp	.-342    	; 0x1edc <PID_RUN()+0x18e>
PID_RUN():
    2032:	81 2c       	mov	r8, r1
    2034:	91 2c       	mov	r9, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    2036:	54 01       	movw	r10, r8
    2038:	6a cf       	rjmp	.-300    	; 0x1f0e <PID_RUN()+0x1c0>

0000203a <EERef::operator*() const>:
operator*():
    203a:	fc 01       	movw	r30, r24
    203c:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    203e:	91 81       	ldd	r25, Z+1	; 0x01
    2040:	fc 01       	movw	r30, r24
    2042:	ff 27       	eor	r31, r31
    2044:	90 fd       	sbrc	r25, 0
    2046:	06 c0       	rjmp	.+12     	; 0x2054 <EERef::operator*() const+0x1a>
    2048:	80 e0       	ldi	r24, 0x00	; 0
    204a:	94 e1       	ldi	r25, 0x14	; 20
    204c:	e8 2b       	or	r30, r24
    204e:	f9 2b       	or	r31, r25
    2050:	80 81       	ld	r24, Z
    2052:	08 95       	ret
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	93 e1       	ldi	r25, 0x13	; 19
    2058:	f9 cf       	rjmp	.-14     	; 0x204c <EERef::operator*() const+0x12>

0000205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    205a:	ef 92       	push	r14
    205c:	ff 92       	push	r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    205e:	0f 93       	push	r16
    2060:	1f 93       	push	r17
    2062:	cf 93       	push	r28
    2064:	df 93       	push	r29
    2066:	00 d0       	rcall	.+0      	; 0x2068 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    2068:	cd b7       	in	r28, 0x3d	; 61
    206a:	de b7       	in	r29, 0x3e	; 62
    206c:	8c 01       	movw	r16, r24
    206e:	7b 01       	movw	r14, r22
    2070:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2072:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    2074:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2076:	01 96       	adiw	r24, 0x01	; 1
    2078:	e0 df       	rcall	.-64     	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    207a:	f7 01       	movw	r30, r14
    207c:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    207e:	0f 5f       	subi	r16, 0xFF	; 255
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2082:	09 83       	std	Y+1, r16	; 0x01
    2084:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2086:	ce 01       	movw	r24, r28
    2088:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    208a:	d7 df       	rcall	.-82     	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    208c:	f7 01       	movw	r30, r14
    208e:	81 83       	std	Z+1, r24	; 0x01
    2090:	c7 01       	movw	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2092:	0f 90       	pop	r0
    2094:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2096:	df 91       	pop	r29
    2098:	cf 91       	pop	r28
    209a:	1f 91       	pop	r17
    209c:	0f 91       	pop	r16
    209e:	ff 90       	pop	r15
    20a0:	ef 90       	pop	r14
    20a2:	08 95       	ret

000020a4 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20a4:	af 92       	push	r10
    20a6:	bf 92       	push	r11
    20a8:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    20aa:	df 92       	push	r13
    20ac:	ef 92       	push	r14
    20ae:	ff 92       	push	r15
    20b0:	0f 93       	push	r16
    20b2:	1f 93       	push	r17
    20b4:	cf 93       	push	r28
    20b6:	df 93       	push	r29
    20b8:	00 d0       	rcall	.+0      	; 0x20ba <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    20ba:	cd b7       	in	r28, 0x3d	; 61
    20bc:	de b7       	in	r29, 0x3e	; 62
    20be:	8b 01       	movw	r16, r22
    20c0:	6b 01       	movw	r12, r22
    20c2:	24 e0       	ldi	r18, 0x04	; 4
    20c4:	c2 0e       	add	r12, r18
    20c6:	d1 1c       	adc	r13, r1
    20c8:	7b 01       	movw	r14, r22
    20ca:	5c 01       	movw	r10, r24
    20cc:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20ce:	b7 0a       	sbc	r11, r23
    20d0:	c5 01       	movw	r24, r10
    20d2:	8e 0d       	add	r24, r14
    20d4:	9f 1d       	adc	r25, r15
    20d6:	89 83       	std	Y+1, r24	; 0x01
    20d8:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20da:	ce 01       	movw	r24, r28
    20dc:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20de:	ad df       	rcall	.-166    	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20e0:	f7 01       	movw	r30, r14
    20e2:	81 93       	st	Z+, r24
    20e4:	7f 01       	movw	r14, r30
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20e6:	ec 15       	cp	r30, r12
    20e8:	fd 05       	cpc	r31, r13
    20ea:	91 f7       	brne	.-28     	; 0x20d0 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    20ec:	c8 01       	movw	r24, r16
    20ee:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    20f0:	0f 90       	pop	r0
    20f2:	df 91       	pop	r29
    20f4:	cf 91       	pop	r28
    20f6:	1f 91       	pop	r17
    20f8:	0f 91       	pop	r16
    20fa:	ff 90       	pop	r15
    20fc:	ef 90       	pop	r14
    20fe:	df 90       	pop	r13
    2100:	cf 90       	pop	r12
    2102:	bf 90       	pop	r11
    2104:	af 90       	pop	r10
    2106:	08 95       	ret

00002108 <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    2108:	cf 93       	push	r28
    210a:	df 93       	push	r29
    210c:	00 d0       	rcall	.+0      	; 0x210e <EEPROMClass::read(int) [clone .isra.0]+0x6>
    210e:	cd b7       	in	r28, 0x3d	; 61
    2110:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    2112:	89 83       	std	Y+1, r24	; 0x01
    2114:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2116:	ce 01       	movw	r24, r28
    2118:	01 96       	adiw	r24, 0x01	; 1
    211a:	8f df       	rcall	.-226    	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
    211c:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    211e:	0f 90       	pop	r0
    2120:	df 91       	pop	r29
    2122:	cf 91       	pop	r28
    2124:	08 95       	ret

00002126 <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    2126:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2128:	ff 27       	eor	r31, r31
    212a:	90 fd       	sbrc	r25, 0
    212c:	12 c0       	rjmp	.+36     	; 0x2152 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	94 e1       	ldi	r25, 0x14	; 20
    2132:	e8 2b       	or	r30, r24
    2134:	f9 2b       	or	r31, r25
    2136:	60 83       	st	Z, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    2138:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:39
  cli();
    213a:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    213c:	9d e9       	ldi	r25, 0x9D	; 157
    213e:	23 e0       	ldi	r18, 0x03	; 3
    2140:	94 bf       	out	0x34, r25	; 52
    2142:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:41
  SREG = oldSREG;
    2146:	8f bf       	out	0x3f, r24	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    2148:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    214c:	81 fd       	sbrc	r24, 1
    214e:	fc cf       	rjmp	.-8      	; 0x2148 <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    2150:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	93 e1       	ldi	r25, 0x13	; 19
    2156:	ed cf       	rjmp	.-38     	; 0x2132 <nvm_write_byte(unsigned int, unsigned char)+0xc>

00002158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>:
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    2158:	e6 cf       	rjmp	.-52     	; 0x2126 <nvm_write_byte(unsigned int, unsigned char)>

0000215a <EERef::update(unsigned char)>:
update():
    215a:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    215c:	cf 93       	push	r28
    215e:	df 93       	push	r29
    2160:	ec 01       	movw	r28, r24
    2162:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    2164:	6a df       	rcall	.-300    	; 0x203a <EERef::operator*() const>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2166:	81 17       	cp	r24, r17
    2168:	21 f0       	breq	.+8      	; 0x2172 <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    216a:	61 2f       	mov	r22, r17
    216c:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    216e:	99 81       	ldd	r25, Y+1	; 0x01
    2170:	da df       	rcall	.-76     	; 0x2126 <nvm_write_byte(unsigned int, unsigned char)>
update():
    2172:	ce 01       	movw	r24, r28
    2174:	df 91       	pop	r29
    2176:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2178:	1f 91       	pop	r17
    217a:	08 95       	ret

0000217c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    217c:	ef 92       	push	r14
    217e:	ff 92       	push	r15
    2180:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2182:	1f 93       	push	r17
    2184:	cf 93       	push	r28
    2186:	df 93       	push	r29
    2188:	00 d0       	rcall	.+0      	; 0x218a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]+0xe>
    218a:	cd b7       	in	r28, 0x3d	; 61
    218c:	de b7       	in	r29, 0x3e	; 62
    218e:	8a e0       	ldi	r24, 0x0A	; 10
    2190:	e8 2e       	mov	r14, r24
    2192:	89 e2       	ldi	r24, 0x29	; 41
    2194:	f8 2e       	mov	r15, r24
    2196:	06 e4       	ldi	r16, 0x46	; 70
    2198:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    219a:	09 83       	std	Y+1, r16	; 0x01
    219c:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    219e:	f7 01       	movw	r30, r14
    21a0:	61 91       	ld	r22, Z+
    21a2:	7f 01       	movw	r14, r30
    21a4:	ce 01       	movw	r24, r28
    21a6:	01 96       	adiw	r24, 0x01	; 1
    21a8:	d8 df       	rcall	.-80     	; 0x215a <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    21aa:	0f 5f       	subi	r16, 0xFF	; 255
    21ac:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    21ae:	0a 34       	cpi	r16, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    21b0:	11 05       	cpc	r17, r1
    21b2:	99 f7       	brne	.-26     	; 0x219a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21b4:	8a e0       	ldi	r24, 0x0A	; 10
    21b6:	99 e2       	ldi	r25, 0x29	; 41
    21b8:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    21ba:	0f 90       	pop	r0
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	1f 91       	pop	r17
    21c2:	0f 91       	pop	r16
    21c4:	ff 90       	pop	r15
    21c6:	ef 90       	pop	r14
    21c8:	08 95       	ret

000021ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    21ca:	af 92       	push	r10
    21cc:	bf 92       	push	r11
    21ce:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    21d0:	df 92       	push	r13
    21d2:	ef 92       	push	r14
    21d4:	ff 92       	push	r15
    21d6:	0f 93       	push	r16
    21d8:	1f 93       	push	r17
    21da:	cf 93       	push	r28
    21dc:	df 93       	push	r29
    21de:	00 d0       	rcall	.+0      	; 0x21e0 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]+0x16>
    21e0:	cd b7       	in	r28, 0x3d	; 61
    21e2:	de b7       	in	r29, 0x3e	; 62
    21e4:	8b 01       	movw	r16, r22
    21e6:	6b 01       	movw	r12, r22
    21e8:	24 e0       	ldi	r18, 0x04	; 4
    21ea:	c2 0e       	add	r12, r18
    21ec:	d1 1c       	adc	r13, r1
    21ee:	7b 01       	movw	r14, r22
    21f0:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21f2:	a6 1a       	sub	r10, r22
    21f4:	b7 0a       	sbc	r11, r23
    21f6:	c5 01       	movw	r24, r10
    21f8:	8e 0d       	add	r24, r14
    21fa:	9f 1d       	adc	r25, r15
    21fc:	89 83       	std	Y+1, r24	; 0x01
    21fe:	9a 83       	std	Y+2, r25	; 0x02
    2200:	f7 01       	movw	r30, r14
    2202:	61 91       	ld	r22, Z+
    2204:	7f 01       	movw	r14, r30
    2206:	ce 01       	movw	r24, r28
    2208:	01 96       	adiw	r24, 0x01	; 1
    220a:	a7 df       	rcall	.-178    	; 0x215a <EERef::update(unsigned char)>
    220c:	ec 14       	cp	r14, r12
    220e:	fd 04       	cpc	r15, r13
    2210:	91 f7       	brne	.-28     	; 0x21f6 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]+0x2c>
    2212:	c8 01       	movw	r24, r16
    2214:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2216:	0f 90       	pop	r0
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	1f 91       	pop	r17
    221e:	0f 91       	pop	r16
    2220:	ff 90       	pop	r15
    2222:	ef 90       	pop	r14
    2224:	df 90       	pop	r13
    2226:	cf 90       	pop	r12
    2228:	bf 90       	pop	r11
    222a:	af 90       	pop	r10
    222c:	08 95       	ret

0000222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    222e:	ef 92       	push	r14
    2230:	ff 92       	push	r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2232:	0f 93       	push	r16
    2234:	1f 93       	push	r17
    2236:	cf 93       	push	r28
    2238:	df 93       	push	r29
    223a:	00 d0       	rcall	.+0      	; 0x223c <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]+0xe>
    223c:	cd b7       	in	r28, 0x3d	; 61
    223e:	de b7       	in	r29, 0x3e	; 62
    2240:	8c 01       	movw	r16, r24
    2242:	7b 01       	movw	r14, r22
    2244:	89 83       	std	Y+1, r24	; 0x01
    2246:	9a 83       	std	Y+2, r25	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2248:	fb 01       	movw	r30, r22
    224a:	60 81       	ld	r22, Z
    224c:	ce 01       	movw	r24, r28
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	84 df       	rcall	.-248    	; 0x215a <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    2252:	0f 5f       	subi	r16, 0xFF	; 255
    2254:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    2256:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2258:	1a 83       	std	Y+2, r17	; 0x02
    225a:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    225c:	61 81       	ldd	r22, Z+1	; 0x01
    225e:	ce 01       	movw	r24, r28
    2260:	01 96       	adiw	r24, 0x01	; 1
    2262:	7b df       	rcall	.-266    	; 0x215a <EERef::update(unsigned char)>
    2264:	c7 01       	movw	r24, r14
    2266:	0f 90       	pop	r0
    2268:	0f 90       	pop	r0
    226a:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    226c:	cf 91       	pop	r28
    226e:	1f 91       	pop	r17
    2270:	0f 91       	pop	r16
    2272:	ff 90       	pop	r15
    2274:	ef 90       	pop	r14
    2276:	08 95       	ret

00002278 <MODE_CLICK()>:
MODE_CLICK():
    2278:	2f 92       	push	r2
    227a:	3f 92       	push	r3
    227c:	4f 92       	push	r4
    227e:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:147
//     REP++;
//   }
}

void MODE_CLICK()
{
    2280:	6f 92       	push	r6
    2282:	7f 92       	push	r7
    2284:	8f 92       	push	r8
    2286:	9f 92       	push	r9
    2288:	af 92       	push	r10
    228a:	bf 92       	push	r11
    228c:	cf 92       	push	r12
    228e:	df 92       	push	r13
    2290:	ef 92       	push	r14
    2292:	ff 92       	push	r15
    2294:	0f 93       	push	r16
    2296:	1f 93       	push	r17
    2298:	cf 93       	push	r28
    229a:	df 93       	push	r29
    229c:	00 d0       	rcall	.+0      	; 0x229e <MODE_CLICK()+0x26>
    229e:	1f 92       	push	r1
    22a0:	cd b7       	in	r28, 0x3d	; 61
    22a2:	de b7       	in	r29, 0x3e	; 62
    22a4:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
    22a8:	81 11       	cpse	r24, r1
    22aa:	58 c0       	rjmp	.+176    	; 0x235c <MODE_CLICK()+0xe4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:148
  if(checkTempRaised==0)
    22ac:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <BLINK_STATS>
    22b0:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:150
  {
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    22b4:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:151
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    22b6:	6a c0       	rjmp	.+212    	; 0x238c <MODE_CLICK()+0x114>
    22b8:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    22bc:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:153
  {
    i = 0;
    22c0:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    22c4:	84 30       	cpi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:155
         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    22c6:	31 f4       	brne	.+12     	; 0x22d4 <MODE_CLICK()+0x5c>
    22c8:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <SET_MIN>
    22cc:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <SET_MIN+0x1>
    22d0:	23 2b       	or	r18, r19
    22d2:	51 f0       	breq	.+20     	; 0x22e8 <MODE_CLICK()+0x70>
    22d4:	90 91 53 29 	lds	r25, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:156
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    22d8:	99 23       	and	r25, r25
    22da:	09 f4       	brne	.+2      	; 0x22de <MODE_CLICK()+0x66>
    22dc:	55 c0       	rjmp	.+170    	; 0x2388 <MODE_CLICK()+0x110>
    22de:	81 11       	cpse	r24, r1
    22e0:	53 c0       	rjmp	.+166    	; 0x2388 <MODE_CLICK()+0x110>
    22e2:	82 e0       	ldi	r24, 0x02	; 2
    22e4:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:161
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    22e8:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:348
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    22ec:	85 30       	cpi	r24, 0x05	; 5
    22ee:	0c f4       	brge	.+2      	; 0x22f2 <MODE_CLICK()+0x7a>
    22f0:	80 c3       	rjmp	.+1792   	; 0x29f2 <MODE_CLICK()+0x77a>
    22f2:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    22f6:	88 23       	and	r24, r24
    22f8:	01 f1       	breq	.+64     	; 0x233a <MODE_CLICK()+0xc2>
    22fa:	85 e0       	ldi	r24, 0x05	; 5
    22fc:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:350
   {
      ENTER_BUT = 5;  
    2300:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:351
      if(PUMP_FLAG)   PUMP_FLAG=0;
    2304:	88 23       	and	r24, r24
    2306:	09 f4       	brne	.+2      	; 0x230a <MODE_CLICK()+0x92>
    2308:	70 c3       	rjmp	.+1760   	; 0x29ea <MODE_CLICK()+0x772>
    230a:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <PUMP_FLAG>
Save_Pump_Data():
    230e:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Eeprom.cpp:67
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    2312:	81 11       	cpse	r24, r1
    2314:	12 c0       	rjmp	.+36     	; 0x233a <MODE_CLICK()+0xc2>
    2316:	61 e0       	ldi	r22, 0x01	; 1
    2318:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Eeprom.cpp:69
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    231c:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
    2320:	89 2b       	or	r24, r25
    2322:	09 f4       	brne	.+2      	; 0x2326 <MODE_CLICK()+0xae>
    2324:	60 e0       	ldi	r22, 0x00	; 0
    2326:	60 93 a1 28 	sts	0x28A1, r22	; 0x8028a1 <STIR_VALUE_SET>
    232a:	90 e0       	ldi	r25, 0x00	; 0
    232c:	80 e0       	ldi	r24, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/Eeprom.cpp:70
      EEPROM.write(0, STIR_VALUE_SET);
    232e:	14 df       	rcall	.-472    	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
MODE_CLICK():
    2330:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    2334:	85 30       	cpi	r24, 0x05	; 5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:356
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); //Siddhesh
   }
   
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    2336:	0c f4       	brge	.+2      	; 0x233a <MODE_CLICK()+0xc2>
    2338:	5c c3       	rjmp	.+1720   	; 0x29f2 <MODE_CLICK()+0x77a>
    233a:	00 91 b8 28 	lds	r16, 0x28B8	; 0x8028b8 <REP1>
    233e:	10 91 b9 28 	lds	r17, 0x28B9	; 0x8028b9 <REP1+0x1>
    2342:	10 16       	cp	r1, r16
    2344:	11 06       	cpc	r1, r17
    2346:	0c f4       	brge	.+2      	; 0x234a <MODE_CLICK()+0xd2>
    2348:	54 c3       	rjmp	.+1704   	; 0x29f2 <MODE_CLICK()+0x77a>
    234a:	88 ee       	ldi	r24, 0xE8	; 232
    234c:	93 e0       	ldi	r25, 0x03	; 3
    234e:	9a d9       	rcall	.-3276   	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
    2350:	0f 5f       	subi	r16, 0xFF	; 255
    2352:	1f 4f       	sbci	r17, 0xFF	; 255
    2354:	00 93 b8 28 	sts	0x28B8, r16	; 0x8028b8 <REP1>
    2358:	10 93 b9 28 	sts	0x28B9, r17	; 0x8028b9 <REP1+0x1>
    235c:	23 96       	adiw	r28, 0x03	; 3
    235e:	cd bf       	out	0x3d, r28	; 61
    2360:	de bf       	out	0x3e, r29	; 62
    2362:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:359
   else                           Tick.BUZZ_INTERVAL(50);               //short pree   
}
}
    2364:	cf 91       	pop	r28
    2366:	1f 91       	pop	r17
    2368:	0f 91       	pop	r16
    236a:	ff 90       	pop	r15
    236c:	ef 90       	pop	r14
    236e:	df 90       	pop	r13
    2370:	cf 90       	pop	r12
    2372:	bf 90       	pop	r11
    2374:	af 90       	pop	r10
    2376:	9f 90       	pop	r9
    2378:	8f 90       	pop	r8
    237a:	7f 90       	pop	r7
    237c:	6f 90       	pop	r6
    237e:	5f 90       	pop	r5
    2380:	4f 90       	pop	r4
    2382:	3f 90       	pop	r3
    2384:	2f 90       	pop	r2
    2386:	08 95       	ret
    2388:	8f 5f       	subi	r24, 0xFF	; 255
    238a:	ac cf       	rjmp	.-168    	; 0x22e4 <MODE_CLICK()+0x6c>
    238c:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:161
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    2390:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2394:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    2398:	81 11       	cpse	r24, r1
    239a:	09 c1       	rjmp	.+530    	; 0x25ae <MODE_CLICK()+0x336>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:166
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    239c:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <STIR_VALUE_SET>
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	80 93 21 29 	sts	0x2921, r24	; 0x802921 <SET_LONG_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:168
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; 
    23a6:	90 93 22 29 	sts	0x2922, r25	; 0x802922 <SET_LONG_VALUE+0x1>
    23aa:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    23ae:	2b 83       	std	Y+3, r18	; 0x03
    23b0:	82 2f       	mov	r24, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:169
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	80 93 23 29 	sts	0x2923, r24	; 0x802923 <SET_LONG_VALUE+0x2>
    23b8:	90 93 24 29 	sts	0x2924, r25	; 0x802924 <SET_LONG_VALUE+0x3>
    23bc:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <Proceess_Resume_Enable_Flag>
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	80 93 29 29 	sts	0x2929, r24	; 0x802929 <SET_LONG_VALUE+0x8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:170
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    23c6:	90 93 2a 29 	sts	0x292A, r25	; 0x80292a <SET_LONG_VALUE+0x9>
    23ca:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <select_heating_type>
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:171
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; // New feature added
    23d4:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
    23d8:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:172
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
    23e2:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0xb>
    23e6:	21 11       	cpse	r18, r1
    23e8:	99 c0       	rjmp	.+306    	; 0x251c <MODE_CLICK()+0x2a4>
    23ea:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:174
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    23ee:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    23f2:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <SET_LONG_VALUE+0x4>
    23f6:	90 93 26 29 	sts	0x2926, r25	; 0x802926 <SET_LONG_VALUE+0x5>
    23fa:	80 91 d8 28 	lds	r24, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
    23fe:	90 91 d9 28 	lds	r25, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:177
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    2402:	80 93 2d 29 	sts	0x292D, r24	; 0x80292d <SET_LONG_VALUE+0xc>
    2406:	90 93 2e 29 	sts	0x292E, r25	; 0x80292e <SET_LONG_VALUE+0xd>
    240a:	c0 90 02 29 	lds	r12, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    240e:	d0 90 03 29 	lds	r13, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    2412:	e0 90 04 29 	lds	r14, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    2416:	f0 90 05 29 	lds	r15, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    241a:	c7 01       	movw	r24, r14
    241c:	b6 01       	movw	r22, r12
    241e:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2422:	4b 01       	movw	r8, r22
    2424:	20 e0       	ldi	r18, 0x00	; 0
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	40 e2       	ldi	r20, 0x20	; 32
    242a:	51 e4       	ldi	r21, 0x41	; 65
    242c:	c7 01       	movw	r24, r14
    242e:	b6 01       	movw	r22, r12
    2430:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    2434:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2438:	2b 01       	movw	r4, r22
    243a:	cb 01       	movw	r24, r22
    243c:	6a e0       	ldi	r22, 0x0A	; 10
    243e:	70 e0       	ldi	r23, 0x00	; 0
    2440:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
    2444:	1c 01       	movw	r2, r24
    2446:	8b 81       	ldd	r24, Y+3	; 0x03
    2448:	81 11       	cpse	r24, r1
    244a:	7e c0       	rjmp	.+252    	; 0x2548 <MODE_CLICK()+0x2d0>
    244c:	20 e0       	ldi	r18, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:178
      if (!DEGREE_VALUE_SET)
    244e:	30 e0       	ldi	r19, 0x00	; 0
    2450:	48 ec       	ldi	r20, 0xC8	; 200
    2452:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:180
      {
        if(TEMP_DEG_RAW<100)
    2454:	c7 01       	movw	r24, r14
    2456:	b6 01       	movw	r22, r12
    2458:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    245c:	87 ff       	sbrs	r24, 7
    245e:	67 c0       	rjmp	.+206    	; 0x252e <MODE_CLICK()+0x2b6>
    2460:	80 92 2f 29 	sts	0x292F, r8	; 0x80292f <SET_LONG_VALUE+0xe>
    2464:	90 92 30 29 	sts	0x2930, r9	; 0x802930 <SET_LONG_VALUE+0xf>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:182
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    2468:	40 92 36 28 	sts	0x2836, r4	; 0x802836 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    246c:	50 92 37 28 	sts	0x2837, r5	; 0x802837 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:183
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    2470:	20 92 31 29 	sts	0x2931, r2	; 0x802931 <SET_LONG_VALUE+0x10>
    2474:	30 92 32 29 	sts	0x2932, r3	; 0x802932 <SET_LONG_VALUE+0x11>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:185
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    2478:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    247c:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:198
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    2480:	80 93 33 29 	sts	0x2933, r24	; 0x802933 <SET_LONG_VALUE+0x12>
    2484:	90 93 34 29 	sts	0x2934, r25	; 0x802934 <SET_LONG_VALUE+0x13>
    2488:	80 92 37 29 	sts	0x2937, r8	; 0x802937 <SET_LONG_VALUE+0x16>
    248c:	90 92 38 29 	sts	0x2938, r9	; 0x802938 <SET_LONG_VALUE+0x17>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:199
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    2490:	20 92 39 29 	sts	0x2939, r2	; 0x802939 <SET_LONG_VALUE+0x18>
    2494:	30 92 3a 29 	sts	0x293A, r3	; 0x80293a <SET_LONG_VALUE+0x19>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:202
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    2498:	0c 30       	cpi	r16, 0x0C	; 12
    249a:	11 05       	cpc	r17, r1
    249c:	09 f0       	breq	.+2      	; 0x24a0 <MODE_CLICK()+0x228>
    249e:	6d c0       	rjmp	.+218    	; 0x257a <MODE_CLICK()+0x302>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:204
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    24a0:	c0 92 2e 28 	sts	0x282E, r12	; 0x80282e <TEMP_CAL2_RAW_LOW_VALUE>
    24a4:	d0 92 2f 28 	sts	0x282F, r13	; 0x80282f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    24a8:	e0 92 30 28 	sts	0x2830, r14	; 0x802830 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    24ac:	f0 92 31 28 	sts	0x2831, r15	; 0x802831 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    24b0:	20 e0       	ldi	r18, 0x00	; 0
    24b2:	30 e0       	ldi	r19, 0x00	; 0
    24b4:	48 ec       	ldi	r20, 0xC8	; 200
    24b6:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:207
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    24b8:	c7 01       	movw	r24, r14
    24ba:	b6 01       	movw	r22, r12
    24bc:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    24c0:	87 ff       	sbrs	r24, 7
    24c2:	68 c0       	rjmp	.+208    	; 0x2594 <MODE_CLICK()+0x31c>
    24c4:	80 92 3b 29 	sts	0x293B, r8	; 0x80293b <SET_LONG_VALUE+0x1a>
    24c8:	90 92 3c 29 	sts	0x293C, r9	; 0x80293c <SET_LONG_VALUE+0x1b>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:209
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    24cc:	20 92 3d 29 	sts	0x293D, r2	; 0x80293d <SET_LONG_VALUE+0x1c>
    24d0:	30 92 3e 29 	sts	0x293E, r3	; 0x80293e <SET_LONG_VALUE+0x1d>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:211
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    24d4:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <TIME_SOCK_OR_TOTAL>
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	80 93 27 29 	sts	0x2927, r24	; 0x802927 <SET_LONG_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:219
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    24de:	90 93 28 29 	sts	0x2928, r25	; 0x802928 <SET_LONG_VALUE+0x7>
    24e2:	02 31       	cpi	r16, 0x12	; 18
    24e4:	11 05       	cpc	r17, r1
    24e6:	21 f4       	brne	.+8      	; 0x24f0 <MODE_CLICK()+0x278>
    24e8:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <currentMillis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:220
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    24ec:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <currentMillis+0x1>
    24f0:	2b 81       	ldd	r18, Y+3	; 0x03
    24f2:	21 11       	cpse	r18, r1
    24f4:	09 c0       	rjmp	.+18     	; 0x2508 <MODE_CLICK()+0x290>
    24f6:	08 30       	cpi	r16, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:222
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    24f8:	11 05       	cpc	r17, r1
    24fa:	31 f4       	brne	.+12     	; 0x2508 <MODE_CLICK()+0x290>
    24fc:	87 e0       	ldi	r24, 0x07	; 7
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2504:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2508:	81 e0       	ldi	r24, 0x01	; 1
    250a:	80 93 ad 28 	sts	0x28AD, r24	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    250e:	8a e1       	ldi	r24, 0x1A	; 26
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:224
      
      Mode_Button_Single_Press_In_Settings = 1;
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:346
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    2516:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    251a:	e6 ce       	rjmp	.-564    	; 0x22e8 <MODE_CLICK()+0x70>
    251c:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    2520:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:175
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; // New feature added
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    2524:	80 93 49 29 	sts	0x2949, r24	; 0x802949 <SET_LONG_VALUE+0x28>
    2528:	90 93 4a 29 	sts	0x294A, r25	; 0x80294a <SET_LONG_VALUE+0x29>
    252c:	66 cf       	rjmp	.-308    	; 0x23fa <MODE_CLICK()+0x182>
    252e:	83 e6       	ldi	r24, 0x63	; 99
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	80 93 2f 29 	sts	0x292F, r24	; 0x80292f <SET_LONG_VALUE+0xe>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V.4.02/WLC_WLS_012_V.4.02.ino:189
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    2536:	90 93 30 29 	sts	0x2930, r25	; 0x802930 <SET_LONG_VALUE+0xf>
    253a:	89 e0       	ldi	r24, 0x09	; 9
    253c:	90 e0       	ldi	r25, 0x00	; 0
    253e:	80 93 31 29 	sts	0x2931, r24	; 0x802931 <SET_LONG_VALUE+0x10>
    2542:	90 93 32 29 	sts	0x2932, r25	; 0x802932 <SET_LONG_VALUE+0x11>
    2546:	98 cf       	rjmp	.-208    	; 0x2478 <MODE_CLICK()+0x200>
    2548:	40 90 de 28 	lds	r4, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
    254c:	50 90 df 28 	lds	r5, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
    2550:	60 90 e0 28 	lds	r6, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    2554:	70 90 e1 28 	lds	r7, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    2558:	c3 01       	movw	r24, r6
    255a:	b2 01       	movw	r22, r4
    255c:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2560:	60 93 4b 29 	sts	0x294B, r22	; 0x80294b <SET_LONG_VALUE+0x2a>
    2564:	70 93 4c 29 	sts	0x294C, r23	; 0x80294c <SET_LONG_VALUE+0x2b>
    2568:	40 92 32 28 	sts	0x2832, r4	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    256c:	50 92 33 28 	sts	0x2833, r5	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    2570:	60 92 34 28 	sts	0x2834, r6	; 0x802834 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    2574:	70 92 35 28 	sts	0x2835, r7	; 0x802835 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    2578:	7f cf       	rjmp	.-258    	; 0x2478 <MODE_CLICK()+0x200>
    257a:	0e 30       	cpi	r16, 0x0E	; 14
    257c:	11 05       	cpc	r17, r1
    257e:	09 f0       	breq	.+2      	; 0x2582 <MODE_CLICK()+0x30a>
    2580:	97 cf       	rjmp	.-210    	; 0x24b0 <MODE_CLICK()+0x238>
    2582:	c0 92 2a 28 	sts	0x282A, r12	; 0x80282a <TEMP_CAL2_RAW_HIGH_VALUE>
    2586:	d0 92 2b 28 	sts	0x282B, r13	; 0x80282b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    258a:	e0 92 2c 28 	sts	0x282C, r14	; 0x80282c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    258e:	f0 92 2d 28 	sts	0x282D, r15	; 0x80282d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2592:	8e cf       	rjmp	.-228    	; 0x24b0 <MODE_CLICK()+0x238>
    2594:	83 e6       	ldi	r24, 0x63	; 99
    2596:	90 e0       	ldi	r25, 0x00	; 0
    2598:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <SET_LONG_VALUE+0x1a>
    259c:	90 93 3c 29 	sts	0x293C, r25	; 0x80293c <SET_LONG_VALUE+0x1b>
    25a0:	89 e0       	ldi	r24, 0x09	; 9
    25a2:	90 e0       	ldi	r25, 0x00	; 0
    25a4:	80 93 3d 29 	sts	0x293D, r24	; 0x80293d <SET_LONG_VALUE+0x1c>
    25a8:	90 93 3e 29 	sts	0x293E, r25	; 0x80293e <SET_LONG_VALUE+0x1d>
    25ac:	93 cf       	rjmp	.-218    	; 0x24d4 <MODE_CLICK()+0x25c>
    25ae:	01 31       	cpi	r16, 0x11	; 17
    25b0:	11 05       	cpc	r17, r1
    25b2:	18 f5       	brcc	.+70     	; 0x25fa <MODE_CLICK()+0x382>
    25b4:	f8 01       	movw	r30, r16
    25b6:	e1 52       	subi	r30, 0x21	; 33
    25b8:	fd 4e       	sbci	r31, 0xED	; 237
    25ba:	0c 94 f8 3b 	jmp	0x77f0	; 0x77f0 <__tablejump2__>
    25be:	f0 12       	cpse	r15, r16
    25c0:	1d 13       	cpse	r17, r29
    25c2:	2a 13       	cpse	r18, r26
    25c4:	d6 14       	cp	r13, r6
    25c6:	47 13       	cpse	r20, r23
    25c8:	54 13       	cpse	r21, r20
    25ca:	6e 13       	cpse	r22, r30
    25cc:	fd 12       	cpse	r15, r29
    25ce:	79 13       	cpse	r23, r25
    25d0:	29 14       	cp	r2, r9
    25d2:	37 14       	cp	r3, r7
    25d4:	fd 12       	cpse	r15, r29
    25d6:	50 14       	cp	r5, r0
    25d8:	fd 12       	cpse	r15, r29
    25da:	61 14       	cp	r6, r1
    25dc:	fd 12       	cpse	r15, r29
    25de:	61 13       	cpse	r22, r17
    25e0:	61 e0       	ldi	r22, 0x01	; 1
    25e2:	80 91 21 29 	lds	r24, 0x2921	; 0x802921 <SET_LONG_VALUE>
    25e6:	90 91 22 29 	lds	r25, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1>
    25ea:	89 2b       	or	r24, r25
    25ec:	09 f4       	brne	.+2      	; 0x25f0 <MODE_CLICK()+0x378>
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	60 93 a1 28 	sts	0x28A1, r22	; 0x8028a1 <STIR_VALUE_SET>
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	80 e0       	ldi	r24, 0x00	; 0
    25f8:	af dd       	rcall	.-1186   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    25fa:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    25fe:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2602:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2606:	21 11       	cpse	r18, r1
    2608:	03 c0       	rjmp	.+6      	; 0x2610 <MODE_CLICK()+0x398>
    260a:	87 30       	cpi	r24, 0x07	; 7
    260c:	91 05       	cpc	r25, r1
    260e:	61 f0       	breq	.+24     	; 0x2628 <MODE_CLICK()+0x3b0>
    2610:	9c 01       	movw	r18, r24
    2612:	2d 7f       	andi	r18, 0xFD	; 253
    2614:	29 30       	cpi	r18, 0x09	; 9
    2616:	31 05       	cpc	r19, r1
    2618:	39 f0       	breq	.+14     	; 0x2628 <MODE_CLICK()+0x3b0>
    261a:	8d 30       	cpi	r24, 0x0D	; 13
    261c:	91 05       	cpc	r25, r1
    261e:	21 f0       	breq	.+8      	; 0x2628 <MODE_CLICK()+0x3b0>
    2620:	82 31       	cpi	r24, 0x12	; 18
    2622:	91 05       	cpc	r25, r1
    2624:	09 f0       	breq	.+2      	; 0x2628 <MODE_CLICK()+0x3b0>
    2626:	d4 c1       	rjmp	.+936    	; 0x29d0 <MODE_CLICK()+0x758>
    2628:	21 e0       	ldi	r18, 0x01	; 1
    262a:	20 93 ad 28 	sts	0x28AD, r18	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    262e:	01 96       	adiw	r24, 0x01	; 1
    2630:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2634:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2638:	6a cf       	rjmp	.-300    	; 0x250e <MODE_CLICK()+0x296>
    263a:	61 e0       	ldi	r22, 0x01	; 1
    263c:	80 91 23 29 	lds	r24, 0x2923	; 0x802923 <SET_LONG_VALUE+0x2>
    2640:	90 91 24 29 	lds	r25, 0x2924	; 0x802924 <SET_LONG_VALUE+0x3>
    2644:	89 2b       	or	r24, r25
    2646:	09 f4       	brne	.+2      	; 0x264a <MODE_CLICK()+0x3d2>
    2648:	60 e0       	ldi	r22, 0x00	; 0
    264a:	60 93 53 29 	sts	0x2953, r22	; 0x802953 <DEGREE_VALUE_SET>
    264e:	81 e0       	ldi	r24, 0x01	; 1
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	d2 cf       	rjmp	.-92     	; 0x25f8 <MODE_CLICK()+0x380>
    2654:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2658:	81 11       	cpse	r24, r1
    265a:	0b c0       	rjmp	.+22     	; 0x2672 <MODE_CLICK()+0x3fa>
    265c:	60 91 25 29 	lds	r22, 0x2925	; 0x802925 <SET_LONG_VALUE+0x4>
    2660:	80 91 26 29 	lds	r24, 0x2926	; 0x802926 <SET_LONG_VALUE+0x5>
    2664:	60 93 12 29 	sts	0x2912, r22	; 0x802912 <SAFE_VALUE_SET_DEG>
    2668:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    266c:	82 e0       	ldi	r24, 0x02	; 2
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	c3 cf       	rjmp	.-122    	; 0x25f8 <MODE_CLICK()+0x380>
    2672:	80 91 49 29 	lds	r24, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    2676:	90 91 4a 29 	lds	r25, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    267a:	80 93 10 29 	sts	0x2910, r24	; 0x802910 <SAFE_VALUE_SET_FAH>
    267e:	90 93 11 29 	sts	0x2911, r25	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    2682:	60 e1       	ldi	r22, 0x10	; 16
    2684:	79 e2       	ldi	r23, 0x29	; 41
    2686:	83 e0       	ldi	r24, 0x03	; 3
    2688:	90 e0       	ldi	r25, 0x00	; 0
    268a:	d1 dd       	rcall	.-1118   	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    268c:	b6 cf       	rjmp	.-148    	; 0x25fa <MODE_CLICK()+0x382>
    268e:	61 e0       	ldi	r22, 0x01	; 1
    2690:	80 91 29 29 	lds	r24, 0x2929	; 0x802929 <SET_LONG_VALUE+0x8>
    2694:	90 91 2a 29 	lds	r25, 0x292A	; 0x80292a <SET_LONG_VALUE+0x9>
    2698:	89 2b       	or	r24, r25
    269a:	09 f4       	brne	.+2      	; 0x269e <MODE_CLICK()+0x426>
    269c:	60 e0       	ldi	r22, 0x00	; 0
    269e:	60 93 a8 28 	sts	0x28A8, r22	; 0x8028a8 <Proceess_Resume_Enable_Flag>
    26a2:	8f e0       	ldi	r24, 0x0F	; 15
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	58 dd       	rcall	.-1360   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    26a8:	61 e0       	ldi	r22, 0x01	; 1
    26aa:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0xa>
    26ae:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0xb>
    26b2:	89 2b       	or	r24, r25
    26b4:	09 f4       	brne	.+2      	; 0x26b8 <MODE_CLICK()+0x440>
    26b6:	60 e0       	ldi	r22, 0x00	; 0
    26b8:	60 93 0e 29 	sts	0x290E, r22	; 0x80290e <select_product_type>
    26bc:	86 e9       	ldi	r24, 0x96	; 150
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	9b cf       	rjmp	.-202    	; 0x25f8 <MODE_CLICK()+0x380>
    26c2:	61 e0       	ldi	r22, 0x01	; 1
    26c4:	80 91 41 29 	lds	r24, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    26c8:	90 91 42 29 	lds	r25, 0x2942	; 0x802942 <SET_LONG_VALUE+0x21>
    26cc:	89 2b       	or	r24, r25
    26ce:	09 f4       	brne	.+2      	; 0x26d2 <MODE_CLICK()+0x45a>
    26d0:	60 e0       	ldi	r22, 0x00	; 0
    26d2:	60 93 01 29 	sts	0x2901, r22	; 0x802901 <select_heating_type>
    26d6:	84 e8       	ldi	r24, 0x84	; 132
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	8e cf       	rjmp	.-228    	; 0x25f8 <MODE_CLICK()+0x380>
    26dc:	60 91 2d 29 	lds	r22, 0x292D	; 0x80292d <SET_LONG_VALUE+0xc>
    26e0:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0xd>
    26e4:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <CAL_SELECT_VALUE>
    26e8:	80 93 d9 28 	sts	0x28D9, r24	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    26ec:	85 e0       	ldi	r24, 0x05	; 5
    26ee:	90 e0       	ldi	r25, 0x00	; 0
    26f0:	83 cf       	rjmp	.-250    	; 0x25f8 <MODE_CLICK()+0x380>
    26f2:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    26f6:	81 11       	cpse	r24, r1
    26f8:	87 c0       	rjmp	.+270    	; 0x2808 <MODE_CLICK()+0x590>
    26fa:	60 91 31 29 	lds	r22, 0x2931	; 0x802931 <SET_LONG_VALUE+0x10>
    26fe:	70 91 32 29 	lds	r23, 0x2932	; 0x802932 <SET_LONG_VALUE+0x11>
    2702:	07 2e       	mov	r0, r23
    2704:	00 0c       	add	r0, r0
    2706:	88 0b       	sbc	r24, r24
    2708:	99 0b       	sbc	r25, r25
    270a:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    270e:	20 e0       	ldi	r18, 0x00	; 0
    2710:	30 e0       	ldi	r19, 0x00	; 0
    2712:	40 e2       	ldi	r20, 0x20	; 32
    2714:	51 e4       	ldi	r21, 0x41	; 65
    2716:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    271a:	6b 01       	movw	r12, r22
    271c:	7c 01       	movw	r14, r24
    271e:	60 91 2f 29 	lds	r22, 0x292F	; 0x80292f <SET_LONG_VALUE+0xe>
    2722:	70 91 30 29 	lds	r23, 0x2930	; 0x802930 <SET_LONG_VALUE+0xf>
    2726:	07 2e       	mov	r0, r23
    2728:	00 0c       	add	r0, r0
    272a:	88 0b       	sbc	r24, r24
    272c:	99 0b       	sbc	r25, r25
    272e:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    2732:	9b 01       	movw	r18, r22
    2734:	ac 01       	movw	r20, r24
    2736:	c7 01       	movw	r24, r14
    2738:	b6 01       	movw	r22, r12
    273a:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	40 e2       	ldi	r20, 0x20	; 32
    2744:	51 e4       	ldi	r21, 0x41	; 65
    2746:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    274a:	6b 01       	movw	r12, r22
    274c:	7c 01       	movw	r14, r24
    274e:	60 91 36 28 	lds	r22, 0x2836	; 0x802836 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    2752:	70 91 37 28 	lds	r23, 0x2837	; 0x802837 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    2756:	07 2e       	mov	r0, r23
    2758:	00 0c       	add	r0, r0
    275a:	88 0b       	sbc	r24, r24
    275c:	99 0b       	sbc	r25, r25
    275e:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    2762:	9b 01       	movw	r18, r22
    2764:	ac 01       	movw	r20, r24
    2766:	c7 01       	movw	r24, r14
    2768:	b6 01       	movw	r22, r12
    276a:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    276e:	20 e0       	ldi	r18, 0x00	; 0
    2770:	30 e0       	ldi	r19, 0x00	; 0
    2772:	40 e2       	ldi	r20, 0x20	; 32
    2774:	51 e4       	ldi	r21, 0x41	; 65
    2776:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    277a:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
    277e:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
    2782:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
    2786:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    2790:	10 92 e2 28 	sts	0x28E2, r1	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    2794:	80 90 e8 28 	lds	r8, 0x28E8	; 0x8028e8 <ERROR_CAL>
    2798:	90 90 e9 28 	lds	r9, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
    279c:	a0 90 ea 28 	lds	r10, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
    27a0:	b0 90 eb 28 	lds	r11, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
    27a4:	20 e0       	ldi	r18, 0x00	; 0
    27a6:	30 e0       	ldi	r19, 0x00	; 0
    27a8:	40 e2       	ldi	r20, 0x20	; 32
    27aa:	51 e4       	ldi	r21, 0x41	; 65
    27ac:	c5 01       	movw	r24, r10
    27ae:	b4 01       	movw	r22, r8
    27b0:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    27b4:	6b 01       	movw	r12, r22
    27b6:	7c 01       	movw	r14, r24
    27b8:	20 e0       	ldi	r18, 0x00	; 0
    27ba:	30 e0       	ldi	r19, 0x00	; 0
    27bc:	a9 01       	movw	r20, r18
    27be:	c5 01       	movw	r24, r10
    27c0:	b4 01       	movw	r22, r8
    27c2:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    27c6:	87 ff       	sbrs	r24, 7
    27c8:	41 c0       	rjmp	.+130    	; 0x284c <MODE_CLICK()+0x5d4>
    27ca:	81 e0       	ldi	r24, 0x01	; 1
    27cc:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <SIGN>
    27d0:	f7 fa       	bst	r15, 7
    27d2:	f0 94       	com	r15
    27d4:	f7 f8       	bld	r15, 7
    27d6:	f0 94       	com	r15
    27d8:	c0 92 0a 29 	sts	0x290A, r12	; 0x80290a <ERROR_CAL1>
    27dc:	d0 92 0b 29 	sts	0x290B, r13	; 0x80290b <ERROR_CAL1+0x1>
    27e0:	e0 92 0c 29 	sts	0x290C, r14	; 0x80290c <ERROR_CAL1+0x2>
    27e4:	f0 92 0d 29 	sts	0x290D, r15	; 0x80290d <ERROR_CAL1+0x3>
    27e8:	c9 dc       	rcall	.-1646   	; 0x217c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>
    27ea:	60 91 ec 28 	lds	r22, 0x28EC	; 0x8028ec <SIGN>
    27ee:	87 e0       	ldi	r24, 0x07	; 7
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	b2 dc       	rcall	.-1692   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27f4:	60 91 e7 28 	lds	r22, 0x28E7	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    27f8:	88 e0       	ldi	r24, 0x08	; 8
    27fa:	90 e0       	ldi	r25, 0x00	; 0
    27fc:	ad dc       	rcall	.-1702   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27fe:	60 91 e2 28 	lds	r22, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    2802:	89 e0       	ldi	r24, 0x09	; 9
    2804:	90 e0       	ldi	r25, 0x00	; 0
    2806:	f8 ce       	rjmp	.-528    	; 0x25f8 <MODE_CLICK()+0x380>
    2808:	60 91 49 29 	lds	r22, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    280c:	70 91 4a 29 	lds	r23, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    2810:	07 2e       	mov	r0, r23
    2812:	00 0c       	add	r0, r0
    2814:	88 0b       	sbc	r24, r24
    2816:	99 0b       	sbc	r25, r25
    2818:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    281c:	20 91 32 28 	lds	r18, 0x2832	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    2820:	30 91 33 28 	lds	r19, 0x2833	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    2824:	40 91 34 28 	lds	r20, 0x2834	; 0x802834 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    2828:	50 91 35 28 	lds	r21, 0x2835	; 0x802835 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    282c:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    2830:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
    2834:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
    2838:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
    283c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
    2840:	10 92 e7 28 	sts	0x28E7, r1	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    2844:	81 e0       	ldi	r24, 0x01	; 1
    2846:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    284a:	a4 cf       	rjmp	.-184    	; 0x2794 <MODE_CLICK()+0x51c>
    284c:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <SIGN>
    2850:	c3 cf       	rjmp	.-122    	; 0x27d8 <MODE_CLICK()+0x560>
    2852:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    2856:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    285a:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    285e:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    2862:	0a 96       	adiw	r24, 0x0a	; 10
    2864:	80 93 35 29 	sts	0x2935, r24	; 0x802935 <SET_LONG_VALUE+0x14>
    2868:	90 93 36 29 	sts	0x2936, r25	; 0x802936 <SET_LONG_VALUE+0x15>
    286c:	c6 ce       	rjmp	.-628    	; 0x25fa <MODE_CLICK()+0x382>
    286e:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    2872:	90 91 36 29 	lds	r25, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    2876:	80 93 4f 28 	sts	0x284F, r24	; 0x80284f <HIGH_CAL_VALUE_SET>
    287a:	90 93 50 28 	sts	0x2850, r25	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    287e:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    2882:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    2886:	a0 91 04 29 	lds	r26, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    288a:	b0 91 05 29 	lds	r27, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    288e:	80 93 2e 28 	sts	0x282E, r24	; 0x80282e <TEMP_CAL2_RAW_LOW_VALUE>
    2892:	90 93 2f 28 	sts	0x282F, r25	; 0x80282f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2896:	a0 93 30 28 	sts	0x2830, r26	; 0x802830 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    289a:	b0 93 31 28 	sts	0x2831, r27	; 0x802831 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    289e:	ad ce       	rjmp	.-678    	; 0x25fa <MODE_CLICK()+0x382>
    28a0:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    28a4:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    28a8:	a0 91 04 29 	lds	r26, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    28ac:	b0 91 05 29 	lds	r27, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    28b0:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <TEMP_CAL2_RAW_HIGH_VALUE>
    28b4:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    28b8:	a0 93 2c 28 	sts	0x282C, r26	; 0x80282c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    28bc:	b0 93 2d 28 	sts	0x282D, r27	; 0x80282d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    28c0:	9c ce       	rjmp	.-712    	; 0x25fa <MODE_CLICK()+0x382>
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	40 e2       	ldi	r20, 0x20	; 32
    28c8:	51 e4       	ldi	r21, 0x41	; 65
    28ca:	60 91 2e 28 	lds	r22, 0x282E	; 0x80282e <TEMP_CAL2_RAW_LOW_VALUE>
    28ce:	70 91 2f 28 	lds	r23, 0x282F	; 0x80282f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    28d2:	80 91 30 28 	lds	r24, 0x2830	; 0x802830 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    28d6:	90 91 31 28 	lds	r25, 0x2831	; 0x802831 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    28da:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    28de:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    28e2:	60 93 d0 28 	sts	0x28D0, r22	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
    28e6:	70 93 d1 28 	sts	0x28D1, r23	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    28ea:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    28ee:	90 93 d3 28 	sts	0x28D3, r25	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    28f2:	20 e0       	ldi	r18, 0x00	; 0
    28f4:	30 e0       	ldi	r19, 0x00	; 0
    28f6:	40 e2       	ldi	r20, 0x20	; 32
    28f8:	51 e4       	ldi	r21, 0x41	; 65
    28fa:	60 91 2a 28 	lds	r22, 0x282A	; 0x80282a <TEMP_CAL2_RAW_HIGH_VALUE>
    28fe:	70 91 2b 28 	lds	r23, 0x282B	; 0x80282b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    2902:	80 91 2c 28 	lds	r24, 0x282C	; 0x80282c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    2906:	90 91 2d 28 	lds	r25, 0x282D	; 0x80282d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    290a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    290e:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2912:	60 93 cc 28 	sts	0x28CC, r22	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
    2916:	70 93 cd 28 	sts	0x28CD, r23	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    291a:	80 93 ce 28 	sts	0x28CE, r24	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    291e:	90 93 cf 28 	sts	0x28CF, r25	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    2922:	60 ed       	ldi	r22, 0xD0	; 208
    2924:	78 e2       	ldi	r23, 0x28	; 40
    2926:	80 e5       	ldi	r24, 0x50	; 80
    2928:	90 e0       	ldi	r25, 0x00	; 0
    292a:	4f dc       	rcall	.-1890   	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    292c:	6c ec       	ldi	r22, 0xCC	; 204
    292e:	78 e2       	ldi	r23, 0x28	; 40
    2930:	8a e5       	ldi	r24, 0x5A	; 90
    2932:	90 e0       	ldi	r25, 0x00	; 0
    2934:	4a dc       	rcall	.-1900   	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    2936:	20 e0       	ldi	r18, 0x00	; 0
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	40 e2       	ldi	r20, 0x20	; 32
    293c:	51 e4       	ldi	r21, 0x41	; 65
    293e:	60 91 51 28 	lds	r22, 0x2851	; 0x802851 <CAL2_CALCULATED_LOW_CAL_VALUE>
    2942:	70 91 52 28 	lds	r23, 0x2852	; 0x802852 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    2946:	80 91 53 28 	lds	r24, 0x2853	; 0x802853 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    294a:	90 91 54 28 	lds	r25, 0x2854	; 0x802854 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    294e:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    2952:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2956:	60 93 c8 28 	sts	0x28C8, r22	; 0x8028c8 <MASTER_LOW_CONV>
    295a:	70 93 c9 28 	sts	0x28C9, r23	; 0x8028c9 <MASTER_LOW_CONV+0x1>
    295e:	80 93 ca 28 	sts	0x28CA, r24	; 0x8028ca <MASTER_LOW_CONV+0x2>
    2962:	90 93 cb 28 	sts	0x28CB, r25	; 0x8028cb <MASTER_LOW_CONV+0x3>
    2966:	20 e0       	ldi	r18, 0x00	; 0
    2968:	30 e0       	ldi	r19, 0x00	; 0
    296a:	40 e2       	ldi	r20, 0x20	; 32
    296c:	51 e4       	ldi	r21, 0x41	; 65
    296e:	60 91 4b 28 	lds	r22, 0x284B	; 0x80284b <CAL2_CALCULATED_HIGH_CAL_VALUE>
    2972:	70 91 4c 28 	lds	r23, 0x284C	; 0x80284c <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    2976:	80 91 4d 28 	lds	r24, 0x284D	; 0x80284d <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    297a:	90 91 4e 28 	lds	r25, 0x284E	; 0x80284e <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    297e:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    2982:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    2986:	60 93 c4 28 	sts	0x28C4, r22	; 0x8028c4 <MASTER_HIGH_CONV>
    298a:	70 93 c5 28 	sts	0x28C5, r23	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
    298e:	80 93 c6 28 	sts	0x28C6, r24	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
    2992:	90 93 c7 28 	sts	0x28C7, r25	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
    2996:	68 ec       	ldi	r22, 0xC8	; 200
    2998:	78 e2       	ldi	r23, 0x28	; 40
    299a:	84 e6       	ldi	r24, 0x64	; 100
    299c:	90 e0       	ldi	r25, 0x00	; 0
    299e:	15 dc       	rcall	.-2006   	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    29a0:	64 ec       	ldi	r22, 0xC4	; 196
    29a2:	78 e2       	ldi	r23, 0x28	; 40
    29a4:	8e e6       	ldi	r24, 0x6E	; 110
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	10 dc       	rcall	.-2016   	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    29aa:	27 ce       	rjmp	.-946    	; 0x25fa <MODE_CLICK()+0x382>
    29ac:	61 e0       	ldi	r22, 0x01	; 1
    29ae:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0x6>
    29b2:	90 91 28 29 	lds	r25, 0x2928	; 0x802928 <SET_LONG_VALUE+0x7>
    29b6:	89 2b       	or	r24, r25
    29b8:	09 f4       	brne	.+2      	; 0x29bc <MODE_CLICK()+0x744>
    29ba:	60 e0       	ldi	r22, 0x00	; 0
    29bc:	60 93 68 28 	sts	0x2868, r22	; 0x802868 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    29c0:	81 e4       	ldi	r24, 0x41	; 65
    29c2:	90 e0       	ldi	r25, 0x00	; 0
    29c4:	89 83       	std	Y+1, r24	; 0x01
    29c6:	9a 83       	std	Y+2, r25	; 0x02
    29c8:	ce 01       	movw	r24, r28
    29ca:	01 96       	adiw	r24, 0x01	; 1
    29cc:	c6 db       	rcall	.-2164   	; 0x215a <EERef::update(unsigned char)>
    29ce:	15 ce       	rjmp	.-982    	; 0x25fa <MODE_CLICK()+0x382>
MODE_CLICK():
    29d0:	9c 01       	movw	r18, r24
    29d2:	2b 7f       	andi	r18, 0xFB	; 251
    29d4:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    29d8:	2a 30       	cpi	r18, 0x0A	; 10
    29da:	31 05       	cpc	r19, r1
    29dc:	09 f4       	brne	.+2      	; 0x29e0 <MODE_CLICK()+0x768>
    29de:	27 ce       	rjmp	.-946    	; 0x262e <MODE_CLICK()+0x3b6>
    29e0:	8c 30       	cpi	r24, 0x0C	; 12
    29e2:	91 05       	cpc	r25, r1
    29e4:	09 f0       	breq	.+2      	; 0x29e8 <MODE_CLICK()+0x770>
    29e6:	93 cd       	rjmp	.-1242   	; 0x250e <MODE_CLICK()+0x296>
    29e8:	22 ce       	rjmp	.-956    	; 0x262e <MODE_CLICK()+0x3b6>
    29ea:	81 e0       	ldi	r24, 0x01	; 1
    29ec:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <PUMP_FLAG>
    29f0:	8e cc       	rjmp	.-1764   	; 0x230e <MODE_CLICK()+0x96>
    29f2:	82 e3       	ldi	r24, 0x32	; 50
    29f4:	90 e0       	ldi	r25, 0x00	; 0
    29f6:	0e 94 42 0b 	call	0x1684	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
    29fa:	b0 cc       	rjmp	.-1696   	; 0x235c <MODE_CLICK()+0xe4>

000029fc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]>:
SET_SHORT_PRESS_FUNCTION():
    29fc:	2f 92       	push	r2
    29fe:	3f 92       	push	r3
    2a00:	4f 92       	push	r4
    2a02:	5f 92       	push	r5
    2a04:	6f 92       	push	r6
    2a06:	7f 92       	push	r7
    2a08:	8f 92       	push	r8
    2a0a:	9f 92       	push	r9
    2a0c:	af 92       	push	r10
    2a0e:	bf 92       	push	r11
    2a10:	cf 92       	push	r12
    2a12:	df 92       	push	r13
    2a14:	ef 92       	push	r14
    2a16:	ff 92       	push	r15
    2a18:	0f 93       	push	r16
    2a1a:	1f 93       	push	r17
    2a1c:	cf 93       	push	r28
    2a1e:	df 93       	push	r29
    2a20:	c0 91 20 29 	lds	r28, 0x2920	; 0x802920 <ENTER_BUT>
    2a24:	c2 30       	cpi	r28, 0x02	; 2
    2a26:	09 f4       	brne	.+2      	; 0x2a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x2e>
    2a28:	3c c6       	rjmp	.+3192   	; 0x36a2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xca6>
    2a2a:	cc f4       	brge	.+50     	; 0x2a5e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x62>
    2a2c:	cc 23       	and	r28, r28
    2a2e:	09 f4       	brne	.+2      	; 0x2a32 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x36>
    2a30:	bc c3       	rjmp	.+1912   	; 0x31aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x7ae>
    2a32:	c1 30       	cpi	r28, 0x01	; 1
    2a34:	09 f4       	brne	.+2      	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    2a36:	b6 c5       	rjmp	.+2924   	; 0x35a4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xba8>
    2a38:	df 91       	pop	r29
    2a3a:	cf 91       	pop	r28
    2a3c:	1f 91       	pop	r17
    2a3e:	0f 91       	pop	r16
    2a40:	ff 90       	pop	r15
    2a42:	ef 90       	pop	r14
    2a44:	df 90       	pop	r13
    2a46:	cf 90       	pop	r12
    2a48:	bf 90       	pop	r11
    2a4a:	af 90       	pop	r10
    2a4c:	9f 90       	pop	r9
    2a4e:	8f 90       	pop	r8
    2a50:	7f 90       	pop	r7
    2a52:	6f 90       	pop	r6
    2a54:	5f 90       	pop	r5
    2a56:	4f 90       	pop	r4
    2a58:	3f 90       	pop	r3
    2a5a:	2f 90       	pop	r2
    2a5c:	08 95       	ret
    2a5e:	c4 30       	cpi	r28, 0x04	; 4
    2a60:	09 f4       	brne	.+2      	; 0x2a64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x68>
    2a62:	26 c7       	rjmp	.+3660   	; 0x38b0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xeb4>
    2a64:	0c f4       	brge	.+2      	; 0x2a68 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x6c>
    2a66:	a0 c6       	rjmp	.+3392   	; 0x37a8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xdac>
    2a68:	c5 30       	cpi	r28, 0x05	; 5
    2a6a:	31 f7       	brne	.-52     	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    2a6c:	c0 90 16 29 	lds	r12, 0x2916	; 0x802916 <SET_VALUE+0x2>
    2a70:	d0 90 17 29 	lds	r13, 0x2917	; 0x802917 <SET_VALUE+0x3>
    2a74:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    2a78:	70 91 19 29 	lds	r23, 0x2919	; 0x802919 <SET_VALUE+0x5>
    2a7c:	07 2e       	mov	r0, r23
    2a7e:	00 0c       	add	r0, r0
    2a80:	88 0b       	sbc	r24, r24
    2a82:	99 0b       	sbc	r25, r25
    2a84:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    2a88:	20 e0       	ldi	r18, 0x00	; 0
    2a8a:	30 e0       	ldi	r19, 0x00	; 0
    2a8c:	40 e2       	ldi	r20, 0x20	; 32
    2a8e:	51 e4       	ldi	r21, 0x41	; 65
    2a90:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    2a94:	4b 01       	movw	r8, r22
    2a96:	5c 01       	movw	r10, r24
    2a98:	b6 01       	movw	r22, r12
    2a9a:	dd 0c       	add	r13, r13
    2a9c:	88 0b       	sbc	r24, r24
    2a9e:	99 0b       	sbc	r25, r25
    2aa0:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    2aa4:	9b 01       	movw	r18, r22
    2aa6:	ac 01       	movw	r20, r24
    2aa8:	c5 01       	movw	r24, r10
    2aaa:	b4 01       	movw	r22, r8
    2aac:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    2ab0:	4b 01       	movw	r8, r22
    2ab2:	5c 01       	movw	r10, r24
    2ab4:	80 92 9b 28 	sts	0x289B, r8	; 0x80289b <SET_TEMP_DEG>
    2ab8:	90 92 9c 28 	sts	0x289C, r9	; 0x80289c <SET_TEMP_DEG+0x1>
    2abc:	a0 92 9d 28 	sts	0x289D, r10	; 0x80289d <SET_TEMP_DEG+0x2>
    2ac0:	b0 92 9e 28 	sts	0x289E, r11	; 0x80289e <SET_TEMP_DEG+0x3>
    2ac4:	c0 91 40 29 	lds	r28, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    2ac8:	d0 91 41 29 	lds	r29, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    2acc:	c0 93 99 28 	sts	0x2899, r28	; 0x802899 <SET_TEMP_FAH>
    2ad0:	d0 93 9a 28 	sts	0x289A, r29	; 0x80289a <SET_TEMP_FAH+0x1>
    2ad4:	e0 90 1a 29 	lds	r14, 0x291A	; 0x80291a <SET_VALUE+0x6>
    2ad8:	f0 90 1b 29 	lds	r15, 0x291B	; 0x80291b <SET_VALUE+0x7>
    2adc:	e0 92 97 28 	sts	0x2897, r14	; 0x802897 <SET_HOUR>
    2ae0:	f0 92 98 28 	sts	0x2898, r15	; 0x802898 <SET_HOUR+0x1>
    2ae4:	00 91 1c 29 	lds	r16, 0x291C	; 0x80291c <SET_VALUE+0x8>
    2ae8:	10 91 1d 29 	lds	r17, 0x291D	; 0x80291d <SET_VALUE+0x9>
    2aec:	00 93 95 28 	sts	0x2895, r16	; 0x802895 <SET_MINUTE>
    2af0:	10 93 96 28 	sts	0x2896, r17	; 0x802896 <SET_MINUTE+0x1>
    2af4:	2c e3       	ldi	r18, 0x3C	; 60
    2af6:	2e 9d       	mul	r18, r14
    2af8:	c0 01       	movw	r24, r0
    2afa:	2f 9d       	mul	r18, r15
    2afc:	90 0d       	add	r25, r0
    2afe:	11 24       	eor	r1, r1
    2b00:	80 0f       	add	r24, r16
    2b02:	91 1f       	adc	r25, r17
    2b04:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <SET_MIN>
    2b08:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <SET_MIN+0x1>
    2b0c:	81 e0       	ldi	r24, 0x01	; 1
    2b0e:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    2b12:	6c 2d       	mov	r22, r12
    2b14:	83 e7       	ldi	r24, 0x73	; 115
    2b16:	90 e0       	ldi	r25, 0x00	; 0
    2b18:	1f db       	rcall	.-2498   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b1a:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    2b1e:	85 e7       	ldi	r24, 0x75	; 117
    2b20:	90 e0       	ldi	r25, 0x00	; 0
    2b22:	1a db       	rcall	.-2508   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b24:	60 e4       	ldi	r22, 0x40	; 64
    2b26:	79 e2       	ldi	r23, 0x29	; 41
    2b28:	88 e7       	ldi	r24, 0x78	; 120
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	80 db       	rcall	.-2304   	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    2b2e:	6e 2d       	mov	r22, r14
    2b30:	8d e7       	ldi	r24, 0x7D	; 125
    2b32:	90 e0       	ldi	r25, 0x00	; 0
    2b34:	11 db       	rcall	.-2526   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b36:	60 2f       	mov	r22, r16
    2b38:	82 e8       	ldi	r24, 0x82	; 130
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	0d db       	rcall	.-2534   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
Process_Time_Set_On_Eeprom():
    2b3e:	61 e0       	ldi	r22, 0x01	; 1
    2b40:	87 e8       	ldi	r24, 0x87	; 135
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	09 db       	rcall	.-2542   	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b46:	10 91 53 29 	lds	r17, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    2b4a:	80 91 94 28 	lds	r24, 0x2894	; 0x802894 <FILL_BATH_ERROR_NOT_CLEAR>
    2b4e:	81 11       	cpse	r24, r1
    2b50:	1b c0       	rjmp	.+54     	; 0x2b88 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x18c>
    2b52:	11 11       	cpse	r17, r1
    2b54:	4f c7       	rjmp	.+3742   	; 0x39f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xff8>
    2b56:	20 e0       	ldi	r18, 0x00	; 0
    2b58:	30 e0       	ldi	r19, 0x00	; 0
    2b5a:	40 e2       	ldi	r20, 0x20	; 32
    2b5c:	51 e4       	ldi	r21, 0x41	; 65
    2b5e:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <TEMP_DEG>
    2b62:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    2b66:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    2b6a:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    2b6e:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    2b72:	9b 01       	movw	r18, r22
    2b74:	ac 01       	movw	r20, r24
    2b76:	c5 01       	movw	r24, r10
    2b78:	b4 01       	movw	r22, r8
    2b7a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    2b7e:	87 ff       	sbrs	r24, 7
    2b80:	03 c0       	rjmp	.+6      	; 0x2b88 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x18c>
    2b82:	81 e0       	ldi	r24, 0x01	; 1
    2b84:	80 93 94 28 	sts	0x2894, r24	; 0x802894 <FILL_BATH_ERROR_NOT_CLEAR>
    2b88:	80 91 94 28 	lds	r24, 0x2894	; 0x802894 <FILL_BATH_ERROR_NOT_CLEAR>
    2b8c:	88 23       	and	r24, r24
    2b8e:	09 f4       	brne	.+2      	; 0x2b92 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x196>
    2b90:	4c c7       	rjmp	.+3736   	; 0x3a2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x102e>
    2b92:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <RATE_OF_HEATING>
    2b96:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    2b9a:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <RATE_OF_HEATING+0x2>
    2b9e:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <RATE_OF_HEATING+0x3>
    2ba2:	81 e0       	ldi	r24, 0x01	; 1
    2ba4:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <CHECK_RATE_OF_HEATING>
    2ba8:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <FILL_BATH_ERROR_NOT_CLEAR>
    2bac:	11 11       	cpse	r17, r1
    2bae:	5e c7       	rjmp	.+3772   	; 0x3a6c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1070>
    2bb0:	80 91 9b 28 	lds	r24, 0x289B	; 0x80289b <SET_TEMP_DEG>
    2bb4:	90 91 9c 28 	lds	r25, 0x289C	; 0x80289c <SET_TEMP_DEG+0x1>
    2bb8:	a0 91 9d 28 	lds	r26, 0x289D	; 0x80289d <SET_TEMP_DEG+0x2>
    2bbc:	b0 91 9e 28 	lds	r27, 0x289E	; 0x80289e <SET_TEMP_DEG+0x3>
    2bc0:	80 93 88 28 	sts	0x2888, r24	; 0x802888 <PID_SETPOINT_To_Show>
    2bc4:	90 93 89 28 	sts	0x2889, r25	; 0x802889 <PID_SETPOINT_To_Show+0x1>
    2bc8:	a0 93 8a 28 	sts	0x288A, r26	; 0x80288a <PID_SETPOINT_To_Show+0x2>
    2bcc:	b0 93 8b 28 	sts	0x288B, r27	; 0x80288b <PID_SETPOINT_To_Show+0x3>
    2bd0:	80 93 f2 29 	sts	0x29F2, r24	; 0x8029f2 <PID_SETPOINT>
    2bd4:	90 93 f3 29 	sts	0x29F3, r25	; 0x8029f3 <PID_SETPOINT+0x1>
    2bd8:	a0 93 f4 29 	sts	0x29F4, r26	; 0x8029f4 <PID_SETPOINT+0x2>
    2bdc:	b0 93 f5 29 	sts	0x29F5, r27	; 0x8029f5 <PID_SETPOINT+0x3>
    2be0:	85 e5       	ldi	r24, 0x55	; 85
    2be2:	9a e2       	ldi	r25, 0x2A	; 42
    2be4:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
    2be8:	81 e0       	ldi	r24, 0x01	; 1
    2bea:	80 93 87 28 	sts	0x2887, r24	; 0x802887 <Alternate_Display_Flag>
digitalWrite():
    2bee:	61 e0       	ldi	r22, 0x01	; 1
    2bf0:	81 e2       	ldi	r24, 0x21	; 33
    2bf2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2bf6:	01 e0       	ldi	r16, 0x01	; 1
    2bf8:	10 e0       	ldi	r17, 0x00	; 0
    2bfa:	8c e3       	ldi	r24, 0x3C	; 60
    2bfc:	28 2e       	mov	r2, r24
    2bfe:	31 2c       	mov	r3, r1
    2c00:	c5 e1       	ldi	r28, 0x15	; 21
    2c02:	d0 e0       	ldi	r29, 0x00	; 0
    2c04:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <SET_MIN>
    2c08:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <SET_MIN+0x1>
    2c0c:	18 16       	cp	r1, r24
    2c0e:	19 06       	cpc	r1, r25
    2c10:	14 f0       	brlt	.+4      	; 0x2c16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x21a>
    2c12:	0c 94 32 1f 	jmp	0x3e64	; 0x3e64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1468>
toggle_ticker_update():
    2c16:	8d e2       	ldi	r24, 0x2D	; 45
    2c18:	9b e2       	ldi	r25, 0x2B	; 43
    2c1a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2c1e:	20 e0       	ldi	r18, 0x00	; 0
    2c20:	30 e0       	ldi	r19, 0x00	; 0
    2c22:	40 e2       	ldi	r20, 0x20	; 32
    2c24:	51 e4       	ldi	r21, 0x41	; 65
    2c26:	60 91 9b 28 	lds	r22, 0x289B	; 0x80289b <SET_TEMP_DEG>
    2c2a:	70 91 9c 28 	lds	r23, 0x289C	; 0x80289c <SET_TEMP_DEG+0x1>
    2c2e:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <SET_TEMP_DEG+0x2>
    2c32:	90 91 9e 28 	lds	r25, 0x289E	; 0x80289e <SET_TEMP_DEG+0x3>
    2c36:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    2c3a:	20 91 06 29 	lds	r18, 0x2906	; 0x802906 <TEMP_DEG>
    2c3e:	30 91 07 29 	lds	r19, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    2c42:	40 91 08 29 	lds	r20, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    2c46:	50 91 09 29 	lds	r21, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    2c4a:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    2c4e:	87 ff       	sbrs	r24, 7
    2c50:	04 c0       	rjmp	.+8      	; 0x2c5a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x25e>
    2c52:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2c56:	88 23       	and	r24, r24
    2c58:	e9 f0       	breq	.+58     	; 0x2c94 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x298>
    2c5a:	60 91 99 28 	lds	r22, 0x2899	; 0x802899 <SET_TEMP_FAH>
    2c5e:	70 91 9a 28 	lds	r23, 0x289A	; 0x80289a <SET_TEMP_FAH+0x1>
    2c62:	66 5f       	subi	r22, 0xF6	; 246
    2c64:	7f 4f       	sbci	r23, 0xFF	; 255
    2c66:	07 2e       	mov	r0, r23
    2c68:	00 0c       	add	r0, r0
    2c6a:	88 0b       	sbc	r24, r24
    2c6c:	99 0b       	sbc	r25, r25
    2c6e:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    2c72:	20 91 d4 28 	lds	r18, 0x28D4	; 0x8028d4 <TEMP_FAH>
    2c76:	30 91 d5 28 	lds	r19, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    2c7a:	40 91 d6 28 	lds	r20, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    2c7e:	50 91 d7 28 	lds	r21, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    2c82:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    2c86:	87 ff       	sbrs	r24, 7
    2c88:	18 c7       	rjmp	.+3632   	; 0x3aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x10be>
    2c8a:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2c8e:	88 23       	and	r24, r24
    2c90:	09 f4       	brne	.+2      	; 0x2c94 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x298>
    2c92:	13 c7       	rjmp	.+3622   	; 0x3aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x10be>
    2c94:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    2c98:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    2c9c:	81 e0       	ldi	r24, 0x01	; 1
    2c9e:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <checkTempRaised>
digitalWrite():
    2ca2:	60 e0       	ldi	r22, 0x00	; 0
    2ca4:	81 e2       	ldi	r24, 0x21	; 33
    2ca6:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2caa:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    2cae:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <SET_MIN>
    2cb2:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <SET_MIN+0x1>
digitalWrite():
    2cb6:	61 e0       	ldi	r22, 0x01	; 1
    2cb8:	8d e1       	ldi	r24, 0x1D	; 29
    2cba:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    2cbe:	60 e0       	ldi	r22, 0x00	; 0
    2cc0:	8b e1       	ldi	r24, 0x1B	; 27
    2cc2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2cc6:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
DISP_UPDATE():
    2cca:	8f ed       	ldi	r24, 0xDF	; 223
    2ccc:	9b e2       	ldi	r25, 0x2B	; 43
    2cce:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2cd2:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <STIR_VALUE_SET>
    2cd6:	88 23       	and	r24, r24
    2cd8:	29 f0       	breq	.+10     	; 0x2ce4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x2e8>
    2cda:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
digitalWrite():
    2cde:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    2ce0:	81 11       	cpse	r24, r1
    2ce2:	01 c0       	rjmp	.+2      	; 0x2ce6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x2ea>
digitalWrite():
    2ce4:	60 e0       	ldi	r22, 0x00	; 0
    2ce6:	89 e1       	ldi	r24, 0x19	; 25
    2ce8:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2cec:	b0 90 ac 28 	lds	r11, 0x28AC	; 0x8028ac <CHECK_RATE_OF_HEATING>
    2cf0:	b1 10       	cpse	r11, r1
    2cf2:	0a c0       	rjmp	.+20     	; 0x2d08 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x30c>
    2cf4:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    2cf8:	60 93 83 28 	sts	0x2883, r22	; 0x802883 <STOP_COUNT_VALUE>
    2cfc:	70 93 84 28 	sts	0x2884, r23	; 0x802884 <STOP_COUNT_VALUE+0x1>
    2d00:	80 93 85 28 	sts	0x2885, r24	; 0x802885 <STOP_COUNT_VALUE+0x2>
    2d04:	90 93 86 28 	sts	0x2886, r25	; 0x802886 <STOP_COUNT_VALUE+0x3>
    2d08:	c0 90 83 28 	lds	r12, 0x2883	; 0x802883 <STOP_COUNT_VALUE>
    2d0c:	d0 90 84 28 	lds	r13, 0x2884	; 0x802884 <STOP_COUNT_VALUE+0x1>
    2d10:	e0 90 85 28 	lds	r14, 0x2885	; 0x802885 <STOP_COUNT_VALUE+0x2>
    2d14:	f0 90 86 28 	lds	r15, 0x2886	; 0x802886 <STOP_COUNT_VALUE+0x3>
    2d18:	80 91 8c 28 	lds	r24, 0x288C	; 0x80288c <START_COUNT_VALUE>
    2d1c:	90 91 8d 28 	lds	r25, 0x288D	; 0x80288d <START_COUNT_VALUE+0x1>
    2d20:	a0 91 8e 28 	lds	r26, 0x288E	; 0x80288e <START_COUNT_VALUE+0x2>
    2d24:	b0 91 8f 28 	lds	r27, 0x288F	; 0x80288f <START_COUNT_VALUE+0x3>
    2d28:	c8 1a       	sub	r12, r24
    2d2a:	d9 0a       	sbc	r13, r25
    2d2c:	ea 0a       	sbc	r14, r26
    2d2e:	fb 0a       	sbc	r15, r27
    2d30:	20 e2       	ldi	r18, 0x20	; 32
    2d32:	c2 16       	cp	r12, r18
    2d34:	2f eb       	ldi	r18, 0xBF	; 191
    2d36:	d2 06       	cpc	r13, r18
    2d38:	22 e0       	ldi	r18, 0x02	; 2
    2d3a:	e2 06       	cpc	r14, r18
    2d3c:	f1 04       	cpc	r15, r1
    2d3e:	08 f4       	brcc	.+2      	; 0x2d42 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x346>
    2d40:	51 c0       	rjmp	.+162    	; 0x2de4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3e8>
    2d42:	b1 10       	cpse	r11, r1
    2d44:	4f c0       	rjmp	.+158    	; 0x2de4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3e8>
    2d46:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    2d4a:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    2d4e:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    2d52:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    2d56:	20 91 90 28 	lds	r18, 0x2890	; 0x802890 <TEMP_VALUE_INITIAL>
    2d5a:	30 91 91 28 	lds	r19, 0x2891	; 0x802891 <TEMP_VALUE_INITIAL+0x1>
    2d5e:	40 91 92 28 	lds	r20, 0x2892	; 0x802892 <TEMP_VALUE_INITIAL+0x2>
    2d62:	50 91 93 28 	lds	r21, 0x2893	; 0x802893 <TEMP_VALUE_INITIAL+0x3>
    2d66:	c5 01       	movw	r24, r10
    2d68:	b4 01       	movw	r22, r8
    2d6a:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    2d6e:	2b 01       	movw	r4, r22
    2d70:	3c 01       	movw	r6, r24
    2d72:	c7 01       	movw	r24, r14
    2d74:	b6 01       	movw	r22, r12
    2d76:	20 e6       	ldi	r18, 0x60	; 96
    2d78:	3a ee       	ldi	r19, 0xEA	; 234
    2d7a:	40 e0       	ldi	r20, 0x00	; 0
    2d7c:	50 e0       	ldi	r21, 0x00	; 0
    2d7e:	0e 94 ba 3b 	call	0x7774	; 0x7774 <__udivmodsi4>
    2d82:	ca 01       	movw	r24, r20
    2d84:	b9 01       	movw	r22, r18
    2d86:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
    2d8a:	9b 01       	movw	r18, r22
    2d8c:	ac 01       	movw	r20, r24
    2d8e:	c3 01       	movw	r24, r6
    2d90:	b2 01       	movw	r22, r4
    2d92:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    2d96:	60 93 b0 28 	sts	0x28B0, r22	; 0x8028b0 <RATE_OF_HEATING>
    2d9a:	70 93 b1 28 	sts	0x28B1, r23	; 0x8028b1 <RATE_OF_HEATING+0x1>
    2d9e:	80 93 b2 28 	sts	0x28B2, r24	; 0x8028b2 <RATE_OF_HEATING+0x2>
    2da2:	90 93 b3 28 	sts	0x28B3, r25	; 0x8028b3 <RATE_OF_HEATING+0x3>
    2da6:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    2daa:	60 93 7f 28 	sts	0x287F, r22	; 0x80287f <PREVIOUS_COOLING_RATE_TIME>
    2dae:	70 93 80 28 	sts	0x2880, r23	; 0x802880 <PREVIOUS_COOLING_RATE_TIME+0x1>
    2db2:	80 93 81 28 	sts	0x2881, r24	; 0x802881 <PREVIOUS_COOLING_RATE_TIME+0x2>
    2db6:	90 93 82 28 	sts	0x2882, r25	; 0x802882 <PREVIOUS_COOLING_RATE_TIME+0x3>
    2dba:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    2dbe:	60 93 7b 28 	sts	0x287B, r22	; 0x80287b <CAL_OF_10_MIN>
    2dc2:	70 93 7c 28 	sts	0x287C, r23	; 0x80287c <CAL_OF_10_MIN+0x1>
    2dc6:	80 93 7d 28 	sts	0x287D, r24	; 0x80287d <CAL_OF_10_MIN+0x2>
    2dca:	90 93 7e 28 	sts	0x287E, r25	; 0x80287e <CAL_OF_10_MIN+0x3>
    2dce:	80 92 77 28 	sts	0x2877, r8	; 0x802877 <PREVIOUS_TEMP_COOLING_RATE>
    2dd2:	90 92 78 28 	sts	0x2878, r9	; 0x802878 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2dd6:	a0 92 79 28 	sts	0x2879, r10	; 0x802879 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2dda:	b0 92 7a 28 	sts	0x287A, r11	; 0x80287a <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2dde:	81 e0       	ldi	r24, 0x01	; 1
    2de0:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <CHECK_RATE_OF_HEATING>
    2de4:	c0 90 b0 28 	lds	r12, 0x28B0	; 0x8028b0 <RATE_OF_HEATING>
    2de8:	d0 90 b1 28 	lds	r13, 0x28B1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    2dec:	e0 90 b2 28 	lds	r14, 0x28B2	; 0x8028b2 <RATE_OF_HEATING+0x2>
    2df0:	f0 90 b3 28 	lds	r15, 0x28B3	; 0x8028b3 <RATE_OF_HEATING+0x3>
    2df4:	20 e0       	ldi	r18, 0x00	; 0
    2df6:	30 e0       	ldi	r19, 0x00	; 0
    2df8:	40 e8       	ldi	r20, 0x80	; 128
    2dfa:	5f e3       	ldi	r21, 0x3F	; 63
    2dfc:	c7 01       	movw	r24, r14
    2dfe:	b6 01       	movw	r22, r12
    2e00:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    2e04:	87 fd       	sbrc	r24, 7
    2e06:	a0 c6       	rjmp	.+3392   	; 0x3b48 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x114c>
    2e08:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <CHECK_RATE_OF_HEATING>
    2e0c:	88 23       	and	r24, r24
    2e0e:	09 f4       	brne	.+2      	; 0x2e12 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x416>
    2e10:	a1 c0       	rjmp	.+322    	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x558>
digitalWrite():
    2e12:	60 e0       	ldi	r22, 0x00	; 0
    2e14:	88 e1       	ldi	r24, 0x18	; 24
    2e16:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
stop():
    2e1a:	10 92 3a 2a 	sts	0x2A3A, r1	; 0x802a3a <PID_EXE>
    2e1e:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xb>
    2e22:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0xc>
    2e26:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <PID_EXE+0xd>
    2e2a:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <PID_EXE+0xe>
    2e2e:	10 92 49 2a 	sts	0x2A49, r1	; 0x802a49 <PID_EXE+0xf>
    2e32:	10 92 4a 2a 	sts	0x2A4A, r1	; 0x802a4a <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2e36:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    2e3a:	6b 01       	movw	r12, r22
    2e3c:	7c 01       	movw	r14, r24
    2e3e:	c0 92 73 28 	sts	0x2873, r12	; 0x802873 <CURRENT_COOLING_RATE_TIME>
    2e42:	d0 92 74 28 	sts	0x2874, r13	; 0x802874 <CURRENT_COOLING_RATE_TIME+0x1>
    2e46:	e0 92 75 28 	sts	0x2875, r14	; 0x802875 <CURRENT_COOLING_RATE_TIME+0x2>
    2e4a:	f0 92 76 28 	sts	0x2876, r15	; 0x802876 <CURRENT_COOLING_RATE_TIME+0x3>
    2e4e:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <EXECUTE_PID_LOOP>
    2e52:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    2e56:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    2e5a:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    2e5e:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    2e62:	80 92 6f 28 	sts	0x286F, r8	; 0x80286f <CURRENT_TEMP_COOLING_RATE>
    2e66:	90 92 70 28 	sts	0x2870, r9	; 0x802870 <CURRENT_TEMP_COOLING_RATE+0x1>
    2e6a:	a0 92 71 28 	sts	0x2871, r10	; 0x802871 <CURRENT_TEMP_COOLING_RATE+0x2>
    2e6e:	b0 92 72 28 	sts	0x2872, r11	; 0x802872 <CURRENT_TEMP_COOLING_RATE+0x3>
    2e72:	80 91 7f 28 	lds	r24, 0x287F	; 0x80287f <PREVIOUS_COOLING_RATE_TIME>
    2e76:	90 91 80 28 	lds	r25, 0x2880	; 0x802880 <PREVIOUS_COOLING_RATE_TIME+0x1>
    2e7a:	a0 91 81 28 	lds	r26, 0x2881	; 0x802881 <PREVIOUS_COOLING_RATE_TIME+0x2>
    2e7e:	b0 91 82 28 	lds	r27, 0x2882	; 0x802882 <PREVIOUS_COOLING_RATE_TIME+0x3>
    2e82:	26 01       	movw	r4, r12
    2e84:	37 01       	movw	r6, r14
    2e86:	48 1a       	sub	r4, r24
    2e88:	59 0a       	sbc	r5, r25
    2e8a:	6a 0a       	sbc	r6, r26
    2e8c:	7b 0a       	sbc	r7, r27
    2e8e:	d3 01       	movw	r26, r6
    2e90:	c2 01       	movw	r24, r4
    2e92:	80 36       	cpi	r24, 0x60	; 96
    2e94:	9a 4e       	sbci	r25, 0xEA	; 234
    2e96:	a1 05       	cpc	r26, r1
    2e98:	b1 05       	cpc	r27, r1
    2e9a:	09 f0       	breq	.+2      	; 0x2e9e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x4a2>
    2e9c:	5b c0       	rjmp	.+182    	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x558>
    2e9e:	20 91 77 28 	lds	r18, 0x2877	; 0x802877 <PREVIOUS_TEMP_COOLING_RATE>
    2ea2:	30 91 78 28 	lds	r19, 0x2878	; 0x802878 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2ea6:	40 91 79 28 	lds	r20, 0x2879	; 0x802879 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2eaa:	50 91 7a 28 	lds	r21, 0x287A	; 0x80287a <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2eae:	c5 01       	movw	r24, r10
    2eb0:	b4 01       	movw	r22, r8
    2eb2:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    2eb6:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2eba:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2ebe:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2ec2:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2ec6:	50 58       	subi	r21, 0x80	; 128
    2ec8:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    2ecc:	18 16       	cp	r1, r24
    2ece:	0c f4       	brge	.+2      	; 0x2ed2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x4d6>
    2ed0:	17 c6       	rjmp	.+3118   	; 0x3b00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1104>
    2ed2:	80 91 6d 28 	lds	r24, 0x286D	; 0x80286d <COOLING_CYCLE_COUNT>
    2ed6:	90 91 6e 28 	lds	r25, 0x286E	; 0x80286e <COOLING_CYCLE_COUNT+0x1>
    2eda:	18 16       	cp	r1, r24
    2edc:	19 06       	cpc	r1, r25
    2ede:	0c f4       	brge	.+2      	; 0x2ee2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x4e6>
    2ee0:	ef c5       	rjmp	.+3038   	; 0x3ac0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x10c4>
    2ee2:	01 96       	adiw	r24, 0x01	; 1
    2ee4:	80 93 6d 28 	sts	0x286D, r24	; 0x80286d <COOLING_CYCLE_COUNT>
    2ee8:	90 93 6e 28 	sts	0x286E, r25	; 0x80286e <COOLING_CYCLE_COUNT+0x1>
    2eec:	8a e0       	ldi	r24, 0x0A	; 10
    2eee:	97 ed       	ldi	r25, 0xD7	; 215
    2ef0:	a3 e2       	ldi	r26, 0x23	; 35
    2ef2:	bc e3       	ldi	r27, 0x3C	; 60
    2ef4:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2ef8:	90 93 06 28 	sts	0x2806, r25	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2efc:	a0 93 07 28 	sts	0x2807, r26	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2f00:	b0 93 08 28 	sts	0x2808, r27	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2f04:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    2f08:	60 93 69 28 	sts	0x2869, r22	; 0x802869 <TO_CHECK_REPETATION_WITHIN_TIME>
    2f0c:	70 93 6a 28 	sts	0x286A, r23	; 0x80286a <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2f10:	80 93 6b 28 	sts	0x286B, r24	; 0x80286b <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2f14:	90 93 6c 28 	sts	0x286C, r25	; 0x80286c <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2f18:	80 91 6d 28 	lds	r24, 0x286D	; 0x80286d <COOLING_CYCLE_COUNT>
    2f1c:	90 91 6e 28 	lds	r25, 0x286E	; 0x80286e <COOLING_CYCLE_COUNT+0x1>
    2f20:	02 97       	sbiw	r24, 0x02	; 2
    2f22:	41 f4       	brne	.+16     	; 0x2f34 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x538>
    2f24:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <RATE_OF_HEATING>
    2f28:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    2f2c:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <RATE_OF_HEATING+0x2>
    2f30:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <RATE_OF_HEATING+0x3>
    2f34:	c0 92 7f 28 	sts	0x287F, r12	; 0x80287f <PREVIOUS_COOLING_RATE_TIME>
    2f38:	d0 92 80 28 	sts	0x2880, r13	; 0x802880 <PREVIOUS_COOLING_RATE_TIME+0x1>
    2f3c:	e0 92 81 28 	sts	0x2881, r14	; 0x802881 <PREVIOUS_COOLING_RATE_TIME+0x2>
    2f40:	f0 92 82 28 	sts	0x2882, r15	; 0x802882 <PREVIOUS_COOLING_RATE_TIME+0x3>
    2f44:	80 92 77 28 	sts	0x2877, r8	; 0x802877 <PREVIOUS_TEMP_COOLING_RATE>
    2f48:	90 92 78 28 	sts	0x2878, r9	; 0x802878 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2f4c:	a0 92 79 28 	sts	0x2879, r10	; 0x802879 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2f50:	b0 92 7a 28 	sts	0x287A, r11	; 0x80287a <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2f54:	80 90 06 29 	lds	r8, 0x2906	; 0x802906 <TEMP_DEG>
    2f58:	90 90 07 29 	lds	r9, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    2f5c:	a0 90 08 29 	lds	r10, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    2f60:	b0 90 09 29 	lds	r11, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    2f64:	c0 90 88 28 	lds	r12, 0x2888	; 0x802888 <PID_SETPOINT_To_Show>
    2f68:	d0 90 89 28 	lds	r13, 0x2889	; 0x802889 <PID_SETPOINT_To_Show+0x1>
    2f6c:	e0 90 8a 28 	lds	r14, 0x288A	; 0x80288a <PID_SETPOINT_To_Show+0x2>
    2f70:	f0 90 8b 28 	lds	r15, 0x288B	; 0x80288b <PID_SETPOINT_To_Show+0x3>
    2f74:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <TIME_SOCK_OR_TOTAL>
    2f78:	81 11       	cpse	r24, r1
    2f7a:	03 c6       	rjmp	.+3078   	; 0x3b82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1186>
    2f7c:	81 e0       	ldi	r24, 0x01	; 1
    2f7e:	80 93 67 28 	sts	0x2867, r24	; 0x802867 <COUNTDOWN_START>
    2f82:	a7 01       	movw	r20, r14
    2f84:	96 01       	movw	r18, r12
    2f86:	c5 01       	movw	r24, r10
    2f88:	b4 01       	movw	r22, r8
    2f8a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    2f8e:	87 fd       	sbrc	r24, 7
    2f90:	04 c0       	rjmp	.+8      	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x59e>
    2f92:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2f96:	88 23       	and	r24, r24
    2f98:	99 f0       	breq	.+38     	; 0x2fc0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5c4>
    2f9a:	a7 01       	movw	r20, r14
    2f9c:	96 01       	movw	r18, r12
    2f9e:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    2fa2:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    2fa6:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    2faa:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    2fae:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    2fb2:	87 fd       	sbrc	r24, 7
    2fb4:	52 c0       	rjmp	.+164    	; 0x305a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x65e>
    2fb6:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2fba:	88 23       	and	r24, r24
    2fbc:	09 f4       	brne	.+2      	; 0x2fc0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5c4>
    2fbe:	4d c0       	rjmp	.+154    	; 0x305a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x65e>
interval():
    2fc0:	80 91 e5 2a 	lds	r24, 0x2AE5	; 0x802ae5 <BUZZ_TICK2+0x9>
    2fc4:	90 91 e6 2a 	lds	r25, 0x2AE6	; 0x802ae6 <BUZZ_TICK2+0xa>
    2fc8:	89 2b       	or	r24, r25
    2fca:	09 f4       	brne	.+2      	; 0x2fce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5d2>
    2fcc:	14 c6       	rjmp	.+3112   	; 0x3bf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x11fa>
    2fce:	80 e9       	ldi	r24, 0x90	; 144
    2fd0:	91 e0       	ldi	r25, 0x01	; 1
    2fd2:	a0 e0       	ldi	r26, 0x00	; 0
    2fd4:	b0 e0       	ldi	r27, 0x00	; 0
    2fd6:	80 93 dd 2a 	sts	0x2ADD, r24	; 0x802add <BUZZ_TICK2+0x1>
    2fda:	90 93 de 2a 	sts	0x2ADE, r25	; 0x802ade <BUZZ_TICK2+0x2>
    2fde:	a0 93 df 2a 	sts	0x2ADF, r26	; 0x802adf <BUZZ_TICK2+0x3>
    2fe2:	b0 93 e0 2a 	sts	0x2AE0, r27	; 0x802ae0 <BUZZ_TICK2+0x4>
    2fe6:	80 91 00 2b 	lds	r24, 0x2B00	; 0x802b00 <BUZZ_TICK1+0x9>
    2fea:	90 91 01 2b 	lds	r25, 0x2B01	; 0x802b01 <BUZZ_TICK1+0xa>
    2fee:	89 2b       	or	r24, r25
    2ff0:	09 f4       	brne	.+2      	; 0x2ff4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5f8>
    2ff2:	06 c6       	rjmp	.+3084   	; 0x3c00 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1204>
    2ff4:	80 e2       	ldi	r24, 0x20	; 32
    2ff6:	93 e0       	ldi	r25, 0x03	; 3
    2ff8:	a0 e0       	ldi	r26, 0x00	; 0
    2ffa:	b0 e0       	ldi	r27, 0x00	; 0
    2ffc:	80 93 f8 2a 	sts	0x2AF8, r24	; 0x802af8 <BUZZ_TICK1+0x1>
    3000:	90 93 f9 2a 	sts	0x2AF9, r25	; 0x802af9 <BUZZ_TICK1+0x2>
    3004:	a0 93 fa 2a 	sts	0x2AFA, r26	; 0x802afa <BUZZ_TICK1+0x3>
    3008:	b0 93 fb 2a 	sts	0x2AFB, r27	; 0x802afb <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    300c:	80 91 b6 28 	lds	r24, 0x28B6	; 0x8028b6 <REP>
    3010:	90 91 b7 28 	lds	r25, 0x28B7	; 0x8028b7 <REP+0x1>
    3014:	89 2b       	or	r24, r25
    3016:	59 f4       	brne	.+22     	; 0x302e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x632>
    3018:	81 e0       	ldi	r24, 0x01	; 1
    301a:	80 93 ae 28 	sts	0x28AE, r24	; 0x8028ae <REPETATION_FLAG>
BUZZ_TICK_START():
    301e:	87 ef       	ldi	r24, 0xF7	; 247
    3020:	9a e2       	ldi	r25, 0x2A	; 42
    3022:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3026:	00 93 b6 28 	sts	0x28B6, r16	; 0x8028b6 <REP>
    302a:	10 93 b7 28 	sts	0x28B7, r17	; 0x8028b7 <REP+0x1>
    302e:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <FOR_REP>
    3032:	90 91 bc 28 	lds	r25, 0x28BC	; 0x8028bc <FOR_REP+0x1>
    3036:	02 97       	sbiw	r24, 0x02	; 2
    3038:	81 f4       	brne	.+32     	; 0x305a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x65e>
stop():
    303a:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <BUZZ_TICK1>
    303e:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xb>
    3042:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0xc>
    3046:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <BUZZ_TICK1+0xd>
    304a:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <BUZZ_TICK1+0xe>
    304e:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <BUZZ_TICK1+0xf>
    3052:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    3056:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <REPETATION_FLAG>
    305a:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <SET_MIN>
    305e:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <SET_MIN+0x1>
    3062:	b1 01       	movw	r22, r2
    3064:	0e 94 a7 3b 	call	0x774e	; 0x774e <__divmodhi4>
    3068:	6b 01       	movw	r12, r22
    306a:	7c 01       	movw	r14, r24
    306c:	60 93 97 28 	sts	0x2897, r22	; 0x802897 <SET_HOUR>
    3070:	70 93 98 28 	sts	0x2898, r23	; 0x802898 <SET_HOUR+0x1>
    3074:	80 93 65 28 	sts	0x2865, r24	; 0x802865 <REMAIN_MIN>
    3078:	90 93 66 28 	sts	0x2866, r25	; 0x802866 <REMAIN_MIN+0x1>
    307c:	20 e0       	ldi	r18, 0x00	; 0
    307e:	30 e0       	ldi	r19, 0x00	; 0
    3080:	40 e8       	ldi	r20, 0x80	; 128
    3082:	5f e3       	ldi	r21, 0x3F	; 63
    3084:	60 91 61 28 	lds	r22, 0x2861	; 0x802861 <DISP_INC>
    3088:	70 91 62 28 	lds	r23, 0x2862	; 0x802862 <DISP_INC+0x1>
    308c:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <DISP_INC+0x2>
    3090:	90 91 64 28 	lds	r25, 0x2864	; 0x802864 <DISP_INC+0x3>
    3094:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    3098:	60 93 61 28 	sts	0x2861, r22	; 0x802861 <DISP_INC>
    309c:	70 93 62 28 	sts	0x2862, r23	; 0x802862 <DISP_INC+0x1>
    30a0:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <DISP_INC+0x2>
    30a4:	90 93 64 28 	sts	0x2864, r25	; 0x802864 <DISP_INC+0x3>
    30a8:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    30ac:	20 e0       	ldi	r18, 0x00	; 0
    30ae:	30 e0       	ldi	r19, 0x00	; 0
    30b0:	40 e8       	ldi	r20, 0x80	; 128
    30b2:	5f e3       	ldi	r21, 0x3F	; 63
    30b4:	60 91 b0 28 	lds	r22, 0x28B0	; 0x8028b0 <RATE_OF_HEATING>
    30b8:	70 91 b1 28 	lds	r23, 0x28B1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    30bc:	80 91 b2 28 	lds	r24, 0x28B2	; 0x8028b2 <RATE_OF_HEATING+0x2>
    30c0:	90 91 b3 28 	lds	r25, 0x28B3	; 0x8028b3 <RATE_OF_HEATING+0x3>
    30c4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    30c8:	87 fd       	sbrc	r24, 7
    30ca:	a9 c5       	rjmp	.+2898   	; 0x3c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1222>
    30cc:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    30d0:	81 e0       	ldi	r24, 0x01	; 1
    30d2:	80 93 ba 28 	sts	0x28BA, r24	; 0x8028ba <IN_ERROR>
    30d6:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <REPETATION_FLAG>
    30da:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
digitalWrite():
    30de:	60 e0       	ldi	r22, 0x00	; 0
    30e0:	8d e0       	ldi	r24, 0x0D	; 13
    30e2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    30e6:	c0 93 ed 28 	sts	0x28ED, r28	; 0x8028ed <digits2>
    30ea:	d0 93 ee 28 	sts	0x28EE, r29	; 0x8028ee <digits2+0x1>
    30ee:	89 e1       	ldi	r24, 0x19	; 25
    30f0:	90 e0       	ldi	r25, 0x00	; 0
    30f2:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    30f6:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    30fa:	8a e1       	ldi	r24, 0x1A	; 26
    30fc:	90 e0       	ldi	r25, 0x00	; 0
    30fe:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    3102:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3106:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    310a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    310e:	8e e0       	ldi	r24, 0x0E	; 14
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    3116:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    311a:	8d e0       	ldi	r24, 0x0D	; 13
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    3122:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    3126:	80 e1       	ldi	r24, 0x10	; 16
    3128:	90 e0       	ldi	r25, 0x00	; 0
    312a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    312e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3132:	8e e1       	ldi	r24, 0x1E	; 30
    3134:	90 e0       	ldi	r25, 0x00	; 0
    3136:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    313a:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
interval():
    313e:	80 91 e5 2a 	lds	r24, 0x2AE5	; 0x802ae5 <BUZZ_TICK2+0x9>
    3142:	90 91 e6 2a 	lds	r25, 0x2AE6	; 0x802ae6 <BUZZ_TICK2+0xa>
    3146:	89 2b       	or	r24, r25
    3148:	09 f4       	brne	.+2      	; 0x314c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x750>
    314a:	5f c5       	rjmp	.+2750   	; 0x3c0a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x120e>
    314c:	88 ee       	ldi	r24, 0xE8	; 232
    314e:	93 e0       	ldi	r25, 0x03	; 3
    3150:	a0 e0       	ldi	r26, 0x00	; 0
    3152:	b0 e0       	ldi	r27, 0x00	; 0
    3154:	80 93 dd 2a 	sts	0x2ADD, r24	; 0x802add <BUZZ_TICK2+0x1>
    3158:	90 93 de 2a 	sts	0x2ADE, r25	; 0x802ade <BUZZ_TICK2+0x2>
    315c:	a0 93 df 2a 	sts	0x2ADF, r26	; 0x802adf <BUZZ_TICK2+0x3>
    3160:	b0 93 e0 2a 	sts	0x2AE0, r27	; 0x802ae0 <BUZZ_TICK2+0x4>
    3164:	80 91 00 2b 	lds	r24, 0x2B00	; 0x802b00 <BUZZ_TICK1+0x9>
    3168:	90 91 01 2b 	lds	r25, 0x2B01	; 0x802b01 <BUZZ_TICK1+0xa>
    316c:	89 2b       	or	r24, r25
    316e:	09 f4       	brne	.+2      	; 0x3172 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x776>
    3170:	51 c5       	rjmp	.+2722   	; 0x3c14 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1218>
    3172:	80 ed       	ldi	r24, 0xD0	; 208
    3174:	97 e0       	ldi	r25, 0x07	; 7
    3176:	a0 e0       	ldi	r26, 0x00	; 0
    3178:	b0 e0       	ldi	r27, 0x00	; 0
    317a:	80 93 f8 2a 	sts	0x2AF8, r24	; 0x802af8 <BUZZ_TICK1+0x1>
    317e:	90 93 f9 2a 	sts	0x2AF9, r25	; 0x802af9 <BUZZ_TICK1+0x2>
    3182:	a0 93 fa 2a 	sts	0x2AFA, r26	; 0x802afa <BUZZ_TICK1+0x3>
    3186:	b0 93 fb 2a 	sts	0x2AFB, r27	; 0x802afb <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    318a:	80 91 b6 28 	lds	r24, 0x28B6	; 0x8028b6 <REP>
    318e:	90 91 b7 28 	lds	r25, 0x28B7	; 0x8028b7 <REP+0x1>
    3192:	89 2b       	or	r24, r25
    3194:	09 f0       	breq	.+2      	; 0x3198 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x79c>
    3196:	36 cd       	rjmp	.-1428   	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
BUZZ_TICK_START():
    3198:	87 ef       	ldi	r24, 0xF7	; 247
    319a:	9a e2       	ldi	r25, 0x2A	; 42
    319c:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    31a0:	00 93 b6 28 	sts	0x28B6, r16	; 0x8028b6 <REP>
    31a4:	10 93 b7 28 	sts	0x28B7, r17	; 0x8028b7 <REP+0x1>
    31a8:	2d cd       	rjmp	.-1446   	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
    31aa:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <DOT2_0>
    31ae:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT2_2>
    31b2:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT1_2>
    31b6:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    31ba:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    31be:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <FOR_REP2>
    31c2:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <FOR_REP2+0x1>
    31c6:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <FOR_REP>
    31ca:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <FOR_REP+0x1>
    31ce:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <IN_ERROR>
    31d2:	10 92 b8 28 	sts	0x28B8, r1	; 0x8028b8 <REP1>
    31d6:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <REP1+0x1>
    31da:	10 92 b6 28 	sts	0x28B6, r1	; 0x8028b6 <REP>
    31de:	10 92 b7 28 	sts	0x28B7, r1	; 0x8028b7 <REP+0x1>
    31e2:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <Blinking_Freq>
    31e6:	10 92 b4 28 	sts	0x28B4, r1	; 0x8028b4 <CAL2_START>
    31ea:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <PUMP_FLAG>
    31ee:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <RATE_OF_HEATING>
    31f2:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <RATE_OF_HEATING+0x1>
    31f6:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <RATE_OF_HEATING+0x2>
    31fa:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <RATE_OF_HEATING+0x3>
    31fe:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <EXECUTE_PID_LOOP>
    3202:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    3206:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    320a:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    320e:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    3212:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <REPETATION_FLAG>
    3216:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    321a:	81 e0       	ldi	r24, 0x01	; 1
    321c:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <CHECK_RATE_OF_HEATING>
stop():
    3220:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <BUZZ_TICK1>
    3224:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xb>
    3228:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0xc>
    322c:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <BUZZ_TICK1+0xd>
    3230:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <BUZZ_TICK1+0xe>
    3234:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <BUZZ_TICK1+0xf>
    3238:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    323c:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <soak_once_flag>
digitalWrite():
    3240:	60 e0       	ldi	r22, 0x00	; 0
    3242:	89 e1       	ldi	r24, 0x19	; 25
    3244:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
stop():
    3248:	10 92 c1 2a 	sts	0x2AC1, r1	; 0x802ac1 <Blink_LED_ON>
    324c:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <Blink_LED_ON+0xb>
    3250:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <Blink_LED_ON+0xc>
    3254:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <Blink_LED_ON+0xd>
    3258:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <Blink_LED_ON+0xe>
    325c:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <Blink_LED_ON+0xf>
    3260:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <Blink_LED_ON+0x10>
    3264:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <Blink_LED_OFF>
    3268:	10 92 b1 2a 	sts	0x2AB1, r1	; 0x802ab1 <Blink_LED_OFF+0xb>
    326c:	10 92 b2 2a 	sts	0x2AB2, r1	; 0x802ab2 <Blink_LED_OFF+0xc>
    3270:	10 92 b3 2a 	sts	0x2AB3, r1	; 0x802ab3 <Blink_LED_OFF+0xd>
    3274:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <Blink_LED_OFF+0xe>
    3278:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <Blink_LED_OFF+0xf>
    327c:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <Blink_LED_OFF+0x10>
digitalWrite():
    3280:	60 e0       	ldi	r22, 0x00	; 0
    3282:	88 e1       	ldi	r24, 0x18	; 24
    3284:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
stop():
    3288:	10 92 3a 2a 	sts	0x2A3A, r1	; 0x802a3a <PID_EXE>
    328c:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xb>
    3290:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0xc>
    3294:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <PID_EXE+0xd>
    3298:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <PID_EXE+0xe>
    329c:	10 92 49 2a 	sts	0x2A49, r1	; 0x802a49 <PID_EXE+0xf>
    32a0:	10 92 4a 2a 	sts	0x2A4A, r1	; 0x802a4a <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    32a4:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    32a8:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <checkTempRaised>
    32ac:	81 11       	cpse	r24, r1
    32ae:	f4 c0       	rjmp	.+488    	; 0x3498 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xa9c>
    32b0:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Process_Interrupt_flag>
    32b4:	88 23       	and	r24, r24
    32b6:	09 f4       	brne	.+2      	; 0x32ba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x8be>
    32b8:	93 c0       	rjmp	.+294    	; 0x33e0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x9e4>
    32ba:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <Proceess_Resume_Enable_Flag>
    32be:	88 23       	and	r24, r24
    32c0:	09 f4       	brne	.+2      	; 0x32c4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x8c8>
    32c2:	8e c0       	rjmp	.+284    	; 0x33e0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x9e4>
    32c4:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <z>
    32c8:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <z+0x1>
    32cc:	03 97       	sbiw	r24, 0x03	; 3
    32ce:	0c f0       	brlt	.+2      	; 0x32d2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x8d6>
    32d0:	83 c0       	rjmp	.+262    	; 0x33d8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x9dc>
    32d2:	c0 91 a4 28 	lds	r28, 0x28A4	; 0x8028a4 <i>
    32d6:	d0 91 a5 28 	lds	r29, 0x28A5	; 0x8028a5 <i+0x1>
    32da:	cb 34       	cpi	r28, 0x4B	; 75
    32dc:	d1 05       	cpc	r29, r1
    32de:	e4 f5       	brge	.+120    	; 0x3358 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x95c>
digitalWrite():
    32e0:	61 e0       	ldi	r22, 0x01	; 1
    32e2:	85 e1       	ldi	r24, 0x15	; 21
    32e4:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    32e8:	88 e1       	ldi	r24, 0x18	; 24
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    32f0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    32f4:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    32f8:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    32fc:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    3300:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3304:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    3308:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
DISPLAY_DIGIT2():
    330c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    3310:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    3314:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    3318:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    331c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    3320:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3324:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3328:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
digitalWrite():
    332c:	60 e0       	ldi	r22, 0x00	; 0
    332e:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    3330:	df 91       	pop	r29
    3332:	cf 91       	pop	r28
    3334:	1f 91       	pop	r17
    3336:	0f 91       	pop	r16
    3338:	ff 90       	pop	r15
    333a:	ef 90       	pop	r14
    333c:	df 90       	pop	r13
    333e:	cf 90       	pop	r12
    3340:	bf 90       	pop	r11
    3342:	af 90       	pop	r10
    3344:	9f 90       	pop	r9
    3346:	8f 90       	pop	r8
    3348:	7f 90       	pop	r7
    334a:	6f 90       	pop	r6
    334c:	5f 90       	pop	r5
    334e:	4f 90       	pop	r4
    3350:	3f 90       	pop	r3
    3352:	2f 90       	pop	r2
digitalWrite():
    3354:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <digitalWrite.part.2>
    3358:	60 e0       	ldi	r22, 0x00	; 0
    335a:	85 e1       	ldi	r24, 0x15	; 21
    335c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3360:	8b e0       	ldi	r24, 0x0B	; 11
    3362:	90 e0       	ldi	r25, 0x00	; 0
    3364:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    3368:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    336c:	21 e1       	ldi	r18, 0x11	; 17
    336e:	30 e0       	ldi	r19, 0x00	; 0
    3370:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    3374:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    3378:	87 e1       	ldi	r24, 0x17	; 23
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    3380:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3384:	8c e0       	ldi	r24, 0x0C	; 12
    3386:	90 e0       	ldi	r25, 0x00	; 0
    3388:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    338c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    3390:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    3394:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    3398:	80 e1       	ldi	r24, 0x10	; 16
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    33a0:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    33a4:	20 93 f9 28 	sts	0x28F9, r18	; 0x8028f9 <digits1+0x4>
    33a8:	30 93 fa 28 	sts	0x28FA, r19	; 0x8028fa <digits1+0x5>
    33ac:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    33b0:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    33b4:	c7 39       	cpi	r28, 0x97	; 151
    33b6:	d1 05       	cpc	r29, r1
    33b8:	0c f4       	brge	.+2      	; 0x33bc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x9c0>
    33ba:	b8 cf       	rjmp	.-144    	; 0x332c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x930>
    33bc:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <z>
    33c0:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <z+0x1>
    33c4:	01 96       	adiw	r24, 0x01	; 1
    33c6:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <z>
    33ca:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <z+0x1>
    33ce:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    33d2:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    33d6:	aa cf       	rjmp	.-172    	; 0x332c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x930>
    33d8:	85 e0       	ldi	r24, 0x05	; 5
    33da:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
    33de:	a6 cf       	rjmp	.-180    	; 0x332c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x930>
    33e0:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    33e4:	81 11       	cpse	r24, r1
    33e6:	3d c0       	rjmp	.+122    	; 0x3462 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xa66>
    33e8:	c0 90 06 29 	lds	r12, 0x2906	; 0x802906 <TEMP_DEG>
    33ec:	d0 90 07 29 	lds	r13, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    33f0:	e0 90 08 29 	lds	r14, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    33f4:	f0 90 09 29 	lds	r15, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    33f8:	2d ec       	ldi	r18, 0xCD	; 205
    33fa:	3c ec       	ldi	r19, 0xCC	; 204
    33fc:	47 ec       	ldi	r20, 0xC7	; 199
    33fe:	52 e4       	ldi	r21, 0x42	; 66
    3400:	c7 01       	movw	r24, r14
    3402:	b6 01       	movw	r22, r12
    3404:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    3408:	18 16       	cp	r1, r24
    340a:	dc f4       	brge	.+54     	; 0x3442 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xa46>
    340c:	20 e0       	ldi	r18, 0x00	; 0
    340e:	30 e0       	ldi	r19, 0x00	; 0
    3410:	40 e2       	ldi	r20, 0x20	; 32
    3412:	51 e4       	ldi	r21, 0x41	; 65
    3414:	c7 01       	movw	r24, r14
    3416:	b6 01       	movw	r22, r12
    3418:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    341c:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3420:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3424:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3428:	8a e0       	ldi	r24, 0x0A	; 10
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3430:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3434:	60 e0       	ldi	r22, 0x00	; 0
    3436:	70 e0       	ldi	r23, 0x00	; 0
    3438:	cb 01       	movw	r24, r22
    343a:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
digitalWrite():
    343e:	61 e0       	ldi	r22, 0x01	; 1
    3440:	76 cf       	rjmp	.-276    	; 0x332e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x932>
SET_SHORT_PRESS_FUNCTION():
    3442:	20 e0       	ldi	r18, 0x00	; 0
    3444:	30 e0       	ldi	r19, 0x00	; 0
    3446:	48 ec       	ldi	r20, 0xC8	; 200
    3448:	52 e4       	ldi	r21, 0x42	; 66
    344a:	c7 01       	movw	r24, r14
    344c:	b6 01       	movw	r22, r12
    344e:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    3452:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3456:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    345a:	81 e0       	ldi	r24, 0x01	; 1
    345c:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    3460:	e3 cf       	rjmp	.-58     	; 0x3428 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xa2c>
    3462:	20 e0       	ldi	r18, 0x00	; 0
    3464:	30 e0       	ldi	r19, 0x00	; 0
    3466:	40 e2       	ldi	r20, 0x20	; 32
    3468:	51 e4       	ldi	r21, 0x41	; 65
    346a:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    346e:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    3472:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    3476:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    347a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    347e:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3482:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3486:	85 e1       	ldi	r24, 0x15	; 21
    3488:	90 e0       	ldi	r25, 0x00	; 0
    348a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    348e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3492:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3496:	ce cf       	rjmp	.-100    	; 0x3434 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xa38>
digitalWrite():
    3498:	60 e0       	ldi	r22, 0x00	; 0
    349a:	81 e2       	ldi	r24, 0x21	; 33
    349c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34a0:	61 e0       	ldi	r22, 0x01	; 1
    34a2:	8d e1       	ldi	r24, 0x1D	; 29
    34a4:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34a8:	61 e0       	ldi	r22, 0x01	; 1
    34aa:	8c e1       	ldi	r24, 0x1C	; 28
    34ac:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34b0:	61 e0       	ldi	r22, 0x01	; 1
    34b2:	8b e1       	ldi	r24, 0x1B	; 27
    34b4:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34b8:	60 e0       	ldi	r22, 0x00	; 0
    34ba:	8a e1       	ldi	r24, 0x1A	; 26
    34bc:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34c0:	60 e0       	ldi	r22, 0x00	; 0
    34c2:	8d e0       	ldi	r24, 0x0D	; 13
    34c4:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    34c8:	60 e0       	ldi	r22, 0x00	; 0
    34ca:	8c e0       	ldi	r24, 0x0C	; 12
    34cc:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    34d0:	c0 91 a4 28 	lds	r28, 0x28A4	; 0x8028a4 <i>
    34d4:	d0 91 a5 28 	lds	r29, 0x28A5	; 0x8028a5 <i+0x1>
    34d8:	c9 31       	cpi	r28, 0x19	; 25
    34da:	d1 05       	cpc	r29, r1
    34dc:	3c f5       	brge	.+78     	; 0x352c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xb30>
digitalWrite():
    34de:	60 e0       	ldi	r22, 0x00	; 0
    34e0:	85 e1       	ldi	r24, 0x15	; 21
    34e2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    34e6:	88 e1       	ldi	r24, 0x18	; 24
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    34ee:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    34f2:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    34f6:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    34fa:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    34fe:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3502:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3506:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    350a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    350e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    3512:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    3516:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    351a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    351e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3522:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    3526:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    352a:	86 ca       	rjmp	.-2804   	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
digitalWrite():
    352c:	61 e0       	ldi	r22, 0x01	; 1
    352e:	85 e1       	ldi	r24, 0x15	; 21
    3530:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3534:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
DISPLAY_DIGIT2():
    3538:	8c e0       	ldi	r24, 0x0C	; 12
    353a:	90 e0       	ldi	r25, 0x00	; 0
    353c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    3540:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    3544:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    3548:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    354c:	81 e1       	ldi	r24, 0x11	; 17
    354e:	90 e0       	ldi	r25, 0x00	; 0
    3550:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    3554:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3558:	88 e1       	ldi	r24, 0x18	; 24
    355a:	90 e0       	ldi	r25, 0x00	; 0
    355c:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3560:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    3564:	85 e1       	ldi	r24, 0x15	; 21
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    356c:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    3570:	8d e0       	ldi	r24, 0x0D	; 13
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    3578:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    357c:	89 e1       	ldi	r24, 0x19	; 25
    357e:	90 e0       	ldi	r25, 0x00	; 0
    3580:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    3584:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3588:	8a e1       	ldi	r24, 0x1A	; 26
    358a:	90 e0       	ldi	r25, 0x00	; 0
    358c:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    3590:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    3594:	e3 97       	sbiw	r28, 0x33	; 51
    3596:	0c f4       	brge	.+2      	; 0x359a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xb9e>
    3598:	4f ca       	rjmp	.-2914   	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    359a:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    359e:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    35a2:	4a ca       	rjmp	.-2924   	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    35a4:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    35a8:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
digitalWrite():
    35ac:	60 e0       	ldi	r22, 0x00	; 0
    35ae:	8d e1       	ldi	r24, 0x1D	; 29
    35b0:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    35b4:	61 e0       	ldi	r22, 0x01	; 1
    35b6:	8c e0       	ldi	r24, 0x0C	; 12
    35b8:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    35bc:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    35c0:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    35c4:	49 97       	sbiw	r24, 0x19	; 25
    35c6:	0c f0       	brlt	.+2      	; 0x35ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xbce>
    35c8:	4d c0       	rjmp	.+154    	; 0x3664 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xc68>
    35ca:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    35ce:	81 11       	cpse	r24, r1
    35d0:	42 c0       	rjmp	.+132    	; 0x3656 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xc5a>
    35d2:	88 e1       	ldi	r24, 0x18	; 24
    35d4:	90 e0       	ldi	r25, 0x00	; 0
    35d6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    35da:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    35de:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    35e2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    35e6:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    35ea:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    35ee:	c3 97       	sbiw	r24, 0x33	; 51
    35f0:	24 f0       	brlt	.+8      	; 0x35fa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xbfe>
    35f2:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    35f6:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    35fa:	8a e0       	ldi	r24, 0x0A	; 10
    35fc:	90 e0       	ldi	r25, 0x00	; 0
    35fe:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3602:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3606:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    360a:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    360e:	24 e6       	ldi	r18, 0x64	; 100
    3610:	28 9f       	mul	r18, r24
    3612:	b0 01       	movw	r22, r0
    3614:	29 9f       	mul	r18, r25
    3616:	70 0d       	add	r23, r0
    3618:	11 24       	eor	r1, r1
    361a:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    361e:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    3622:	68 0f       	add	r22, r24
    3624:	79 1f       	adc	r23, r25
    3626:	07 2e       	mov	r0, r23
    3628:	00 0c       	add	r0, r0
    362a:	88 0b       	sbc	r24, r24
    362c:	99 0b       	sbc	r25, r25
    362e:	df 91       	pop	r29
    3630:	cf 91       	pop	r28
    3632:	1f 91       	pop	r17
    3634:	0f 91       	pop	r16
    3636:	ff 90       	pop	r15
    3638:	ef 90       	pop	r14
    363a:	df 90       	pop	r13
    363c:	cf 90       	pop	r12
    363e:	bf 90       	pop	r11
    3640:	af 90       	pop	r10
    3642:	9f 90       	pop	r9
    3644:	8f 90       	pop	r8
    3646:	7f 90       	pop	r7
    3648:	6f 90       	pop	r6
    364a:	5f 90       	pop	r5
    364c:	4f 90       	pop	r4
    364e:	3f 90       	pop	r3
    3650:	2f 90       	pop	r2
    3652:	0c 94 31 04 	jmp	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    3656:	89 e1       	ldi	r24, 0x19	; 25
    3658:	90 e0       	ldi	r25, 0x00	; 0
    365a:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    365e:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    3662:	c1 cf       	rjmp	.-126    	; 0x35e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xbea>
    3664:	c0 93 a3 28 	sts	0x28A3, r28	; 0x8028a3 <DOT2_1>
    3668:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    366c:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    3670:	24 e6       	ldi	r18, 0x64	; 100
    3672:	28 9f       	mul	r18, r24
    3674:	b0 01       	movw	r22, r0
    3676:	29 9f       	mul	r18, r25
    3678:	70 0d       	add	r23, r0
    367a:	11 24       	eor	r1, r1
    367c:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    3680:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    3684:	4a e0       	ldi	r20, 0x0A	; 10
    3686:	42 9f       	mul	r20, r18
    3688:	c0 01       	movw	r24, r0
    368a:	43 9f       	mul	r20, r19
    368c:	90 0d       	add	r25, r0
    368e:	11 24       	eor	r1, r1
    3690:	68 0f       	add	r22, r24
    3692:	79 1f       	adc	r23, r25
    3694:	07 2e       	mov	r0, r23
    3696:	00 0c       	add	r0, r0
    3698:	88 0b       	sbc	r24, r24
    369a:	99 0b       	sbc	r25, r25
    369c:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    36a0:	a2 cf       	rjmp	.-188    	; 0x35e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xbea>
    36a2:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    36a6:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    36aa:	14 e6       	ldi	r17, 0x64	; 100
    36ac:	18 9f       	mul	r17, r24
    36ae:	b0 01       	movw	r22, r0
    36b0:	19 9f       	mul	r17, r25
    36b2:	70 0d       	add	r23, r0
    36b4:	11 24       	eor	r1, r1
    36b6:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    36ba:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    36be:	68 0f       	add	r22, r24
    36c0:	79 1f       	adc	r23, r25
    36c2:	07 2e       	mov	r0, r23
    36c4:	00 0c       	add	r0, r0
    36c6:	88 0b       	sbc	r24, r24
    36c8:	99 0b       	sbc	r25, r25
    36ca:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    36ce:	c0 91 a4 28 	lds	r28, 0x28A4	; 0x8028a4 <i>
    36d2:	d0 91 a5 28 	lds	r29, 0x28A5	; 0x8028a5 <i+0x1>
    36d6:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    36da:	81 11       	cpse	r24, r1
    36dc:	38 c0       	rjmp	.+112    	; 0x374e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd52>
    36de:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    36e2:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    36e6:	18 9f       	mul	r17, r24
    36e8:	b0 01       	movw	r22, r0
    36ea:	19 9f       	mul	r17, r25
    36ec:	70 0d       	add	r23, r0
    36ee:	11 24       	eor	r1, r1
    36f0:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    36f4:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    36f8:	4a e0       	ldi	r20, 0x0A	; 10
    36fa:	42 9f       	mul	r20, r18
    36fc:	c0 01       	movw	r24, r0
    36fe:	43 9f       	mul	r20, r19
    3700:	90 0d       	add	r25, r0
    3702:	11 24       	eor	r1, r1
    3704:	68 0f       	add	r22, r24
    3706:	79 1f       	adc	r23, r25
    3708:	07 2e       	mov	r0, r23
    370a:	00 0c       	add	r0, r0
    370c:	88 0b       	sbc	r24, r24
    370e:	99 0b       	sbc	r25, r25
    3710:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3714:	8a e0       	ldi	r24, 0x0A	; 10
    3716:	90 e0       	ldi	r25, 0x00	; 0
    3718:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    371c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3720:	81 e0       	ldi	r24, 0x01	; 1
    3722:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    3726:	69 97       	sbiw	r28, 0x19	; 25
    3728:	54 f4       	brge	.+20     	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd42>
    372a:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    372e:	81 11       	cpse	r24, r1
    3730:	94 c0       	rjmp	.+296    	; 0x385a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xe5e>
    3732:	88 e1       	ldi	r24, 0x18	; 24
    3734:	90 e0       	ldi	r25, 0x00	; 0
    3736:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    373a:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    373e:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    3742:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    3746:	c3 97       	sbiw	r24, 0x33	; 51
    3748:	0c f0       	brlt	.+2      	; 0x374c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd50>
    374a:	27 cf       	rjmp	.-434    	; 0x359a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xb9e>
    374c:	75 c9       	rjmp	.-3350   	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
digitalWrite():
    374e:	60 e0       	ldi	r22, 0x00	; 0
    3750:	8d e1       	ldi	r24, 0x1D	; 29
    3752:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3756:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    375a:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    375e:	2a e0       	ldi	r18, 0x0A	; 10
    3760:	28 9f       	mul	r18, r24
    3762:	b0 01       	movw	r22, r0
    3764:	29 9f       	mul	r18, r25
    3766:	70 0d       	add	r23, r0
    3768:	11 24       	eor	r1, r1
    376a:	07 2e       	mov	r0, r23
    376c:	00 0c       	add	r0, r0
    376e:	88 0b       	sbc	r24, r24
    3770:	99 0b       	sbc	r25, r25
    3772:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3776:	85 e1       	ldi	r24, 0x15	; 21
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    377e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3782:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3786:	69 97       	sbiw	r28, 0x19	; 25
    3788:	d4 f6       	brge	.-76     	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd42>
    378a:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    378e:	81 11       	cpse	r24, r1
    3790:	64 c0       	rjmp	.+200    	; 0x385a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xe5e>
    3792:	88 e1       	ldi	r24, 0x18	; 24
    3794:	90 e0       	ldi	r25, 0x00	; 0
    3796:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    379a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    379e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    37a2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    37a6:	c7 cf       	rjmp	.-114    	; 0x3736 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd3a>
    37a8:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    37ac:	81 11       	cpse	r24, r1
    37ae:	3c c0       	rjmp	.+120    	; 0x3828 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xe2c>
    37b0:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    37b4:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    37b8:	24 e6       	ldi	r18, 0x64	; 100
    37ba:	28 9f       	mul	r18, r24
    37bc:	b0 01       	movw	r22, r0
    37be:	29 9f       	mul	r18, r25
    37c0:	70 0d       	add	r23, r0
    37c2:	11 24       	eor	r1, r1
    37c4:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    37c8:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    37cc:	4a e0       	ldi	r20, 0x0A	; 10
    37ce:	42 9f       	mul	r20, r18
    37d0:	c0 01       	movw	r24, r0
    37d2:	43 9f       	mul	r20, r19
    37d4:	90 0d       	add	r25, r0
    37d6:	11 24       	eor	r1, r1
    37d8:	68 0f       	add	r22, r24
    37da:	79 1f       	adc	r23, r25
    37dc:	07 2e       	mov	r0, r23
    37de:	00 0c       	add	r0, r0
    37e0:	88 0b       	sbc	r24, r24
    37e2:	99 0b       	sbc	r25, r25
    37e4:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    37e8:	8a e0       	ldi	r24, 0x0A	; 10
    37ea:	90 e0       	ldi	r25, 0x00	; 0
    37ec:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    37f0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    37f4:	81 e0       	ldi	r24, 0x01	; 1
    37f6:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    37fa:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    37fe:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    3802:	49 97       	sbiw	r24, 0x19	; 25
    3804:	8c f5       	brge	.+98     	; 0x3868 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xe6c>
    3806:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    380a:	81 11       	cpse	r24, r1
    380c:	26 c0       	rjmp	.+76     	; 0x385a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xe5e>
    380e:	88 e1       	ldi	r24, 0x18	; 24
    3810:	90 e0       	ldi	r25, 0x00	; 0
    3812:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    3816:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    381a:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    381e:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    3822:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    3826:	8b cf       	rjmp	.-234    	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd42>
    3828:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    382c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    3830:	2a e0       	ldi	r18, 0x0A	; 10
    3832:	28 9f       	mul	r18, r24
    3834:	b0 01       	movw	r22, r0
    3836:	29 9f       	mul	r18, r25
    3838:	70 0d       	add	r23, r0
    383a:	11 24       	eor	r1, r1
    383c:	07 2e       	mov	r0, r23
    383e:	00 0c       	add	r0, r0
    3840:	88 0b       	sbc	r24, r24
    3842:	99 0b       	sbc	r25, r25
    3844:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3848:	85 e1       	ldi	r24, 0x15	; 21
    384a:	90 e0       	ldi	r25, 0x00	; 0
    384c:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3850:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3854:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3858:	d0 cf       	rjmp	.-96     	; 0x37fa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xdfe>
    385a:	89 e1       	ldi	r24, 0x19	; 25
    385c:	90 e0       	ldi	r25, 0x00	; 0
    385e:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    3862:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    3866:	6b cf       	rjmp	.-298    	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd42>
    3868:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    386c:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    3870:	08 2e       	mov	r0, r24
    3872:	00 0c       	add	r0, r0
    3874:	99 0b       	sbc	r25, r25
    3876:	fc 01       	movw	r30, r24
    3878:	ee 0f       	add	r30, r30
    387a:	ff 1f       	adc	r31, r31
    387c:	ec 5e       	subi	r30, 0xEC	; 236
    387e:	f6 4d       	sbci	r31, 0xD6	; 214
    3880:	20 81       	ld	r18, Z
    3882:	31 81       	ldd	r19, Z+1	; 0x01
    3884:	44 e6       	ldi	r20, 0x64	; 100
    3886:	42 9f       	mul	r20, r18
    3888:	b0 01       	movw	r22, r0
    388a:	43 9f       	mul	r20, r19
    388c:	70 0d       	add	r23, r0
    388e:	11 24       	eor	r1, r1
    3890:	88 0f       	add	r24, r24
    3892:	99 1f       	adc	r25, r25
    3894:	fc 01       	movw	r30, r24
    3896:	ea 5e       	subi	r30, 0xEA	; 234
    3898:	f6 4d       	sbci	r31, 0xD6	; 214
    389a:	80 81       	ld	r24, Z
    389c:	91 81       	ldd	r25, Z+1	; 0x01
    389e:	68 0f       	add	r22, r24
    38a0:	79 1f       	adc	r23, r25
    38a2:	07 2e       	mov	r0, r23
    38a4:	00 0c       	add	r0, r0
    38a6:	88 0b       	sbc	r24, r24
    38a8:	99 0b       	sbc	r25, r25
    38aa:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    38ae:	47 cf       	rjmp	.-370    	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xd42>
    38b0:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    38b4:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    38b8:	81 11       	cpse	r24, r1
    38ba:	7c c0       	rjmp	.+248    	; 0x39b4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xfb8>
    38bc:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    38c0:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    38c4:	24 e6       	ldi	r18, 0x64	; 100
    38c6:	28 9f       	mul	r18, r24
    38c8:	b0 01       	movw	r22, r0
    38ca:	29 9f       	mul	r18, r25
    38cc:	70 0d       	add	r23, r0
    38ce:	11 24       	eor	r1, r1
    38d0:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    38d4:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    38d8:	4a e0       	ldi	r20, 0x0A	; 10
    38da:	42 9f       	mul	r20, r18
    38dc:	c0 01       	movw	r24, r0
    38de:	43 9f       	mul	r20, r19
    38e0:	90 0d       	add	r25, r0
    38e2:	11 24       	eor	r1, r1
    38e4:	68 0f       	add	r22, r24
    38e6:	79 1f       	adc	r23, r25
    38e8:	07 2e       	mov	r0, r23
    38ea:	00 0c       	add	r0, r0
    38ec:	88 0b       	sbc	r24, r24
    38ee:	99 0b       	sbc	r25, r25
    38f0:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    38f4:	8a e0       	ldi	r24, 0x0A	; 10
    38f6:	90 e0       	ldi	r25, 0x00	; 0
    38f8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    38fc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3900:	81 e0       	ldi	r24, 0x01	; 1
    3902:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    3906:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    390a:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    390e:	24 e6       	ldi	r18, 0x64	; 100
    3910:	28 9f       	mul	r18, r24
    3912:	b0 01       	movw	r22, r0
    3914:	29 9f       	mul	r18, r25
    3916:	70 0d       	add	r23, r0
    3918:	11 24       	eor	r1, r1
    391a:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    391e:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    3922:	68 0f       	add	r22, r24
    3924:	79 1f       	adc	r23, r25
    3926:	07 2e       	mov	r0, r23
    3928:	00 0c       	add	r0, r0
    392a:	88 0b       	sbc	r24, r24
    392c:	99 0b       	sbc	r25, r25
    392e:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    3932:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    3936:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    393a:	49 97       	sbiw	r24, 0x19	; 25
    393c:	74 f4       	brge	.+28     	; 0x395a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xf5e>
    393e:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    3942:	81 11       	cpse	r24, r1
    3944:	50 c0       	rjmp	.+160    	; 0x39e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xfea>
    3946:	88 e1       	ldi	r24, 0x18	; 24
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    394e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3952:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    3956:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    395a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    395e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    3962:	c3 97       	sbiw	r24, 0x33	; 51
    3964:	24 f0       	brlt	.+8      	; 0x396e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xf72>
    3966:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    396a:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    396e:	10 92 b8 28 	sts	0x28B8, r1	; 0x8028b8 <REP1>
    3972:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <REP1+0x1>
    3976:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <STIR_VALUE_SET>
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
    3980:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
    3984:	81 e0       	ldi	r24, 0x01	; 1
    3986:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <PUMP_FLAG>
    398a:	20 91 1a 29 	lds	r18, 0x291A	; 0x80291a <SET_VALUE+0x6>
    398e:	30 91 1b 29 	lds	r19, 0x291B	; 0x80291b <SET_VALUE+0x7>
    3992:	4c e3       	ldi	r20, 0x3C	; 60
    3994:	42 9f       	mul	r20, r18
    3996:	c0 01       	movw	r24, r0
    3998:	43 9f       	mul	r20, r19
    399a:	90 0d       	add	r25, r0
    399c:	11 24       	eor	r1, r1
    399e:	20 91 1c 29 	lds	r18, 0x291C	; 0x80291c <SET_VALUE+0x8>
    39a2:	30 91 1d 29 	lds	r19, 0x291D	; 0x80291d <SET_VALUE+0x9>
    39a6:	82 0f       	add	r24, r18
    39a8:	93 1f       	adc	r25, r19
    39aa:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <SET_MIN>
    39ae:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <SET_MIN+0x1>
    39b2:	42 c8       	rjmp	.-3964   	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    39b4:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    39b8:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    39bc:	2a e0       	ldi	r18, 0x0A	; 10
    39be:	28 9f       	mul	r18, r24
    39c0:	b0 01       	movw	r22, r0
    39c2:	29 9f       	mul	r18, r25
    39c4:	70 0d       	add	r23, r0
    39c6:	11 24       	eor	r1, r1
    39c8:	07 2e       	mov	r0, r23
    39ca:	00 0c       	add	r0, r0
    39cc:	88 0b       	sbc	r24, r24
    39ce:	99 0b       	sbc	r25, r25
    39d0:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    39d4:	85 e1       	ldi	r24, 0x15	; 21
    39d6:	90 e0       	ldi	r25, 0x00	; 0
    39d8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    39dc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    39e0:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    39e4:	90 cf       	rjmp	.-224    	; 0x3906 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xf0a>
    39e6:	89 e1       	ldi	r24, 0x19	; 25
    39e8:	90 e0       	ldi	r25, 0x00	; 0
    39ea:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    39ee:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    39f2:	b3 cf       	rjmp	.-154    	; 0x395a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0xf5e>
    39f4:	be 01       	movw	r22, r28
    39f6:	dd 0f       	add	r29, r29
    39f8:	88 0b       	sbc	r24, r24
    39fa:	99 0b       	sbc	r25, r25
    39fc:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    3a00:	6b 01       	movw	r12, r22
    3a02:	7c 01       	movw	r14, r24
    3a04:	20 e0       	ldi	r18, 0x00	; 0
    3a06:	30 e0       	ldi	r19, 0x00	; 0
    3a08:	40 e7       	ldi	r20, 0x70	; 112
    3a0a:	51 e4       	ldi	r21, 0x41	; 65
    3a0c:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    3a10:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    3a14:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    3a18:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    3a1c:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    3a20:	9b 01       	movw	r18, r22
    3a22:	ac 01       	movw	r20, r24
    3a24:	c7 01       	movw	r24, r14
    3a26:	b6 01       	movw	r22, r12
    3a28:	a8 c8       	rjmp	.-3760   	; 0x2b7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x17e>
    3a2a:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <CHECK_RATE_OF_HEATING>
digitalWrite():
    3a2e:	61 e0       	ldi	r22, 0x01	; 1
    3a30:	88 e1       	ldi	r24, 0x18	; 24
    3a32:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3a36:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    3a3a:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    3a3e:	a0 91 04 29 	lds	r26, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    3a42:	b0 91 05 29 	lds	r27, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    3a46:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <TEMP_VALUE_INITIAL>
    3a4a:	90 93 91 28 	sts	0x2891, r25	; 0x802891 <TEMP_VALUE_INITIAL+0x1>
    3a4e:	a0 93 92 28 	sts	0x2892, r26	; 0x802892 <TEMP_VALUE_INITIAL+0x2>
    3a52:	b0 93 93 28 	sts	0x2893, r27	; 0x802893 <TEMP_VALUE_INITIAL+0x3>
    3a56:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    3a5a:	60 93 8c 28 	sts	0x288C, r22	; 0x80288c <START_COUNT_VALUE>
    3a5e:	70 93 8d 28 	sts	0x288D, r23	; 0x80288d <START_COUNT_VALUE+0x1>
    3a62:	80 93 8e 28 	sts	0x288E, r24	; 0x80288e <START_COUNT_VALUE+0x2>
    3a66:	90 93 8f 28 	sts	0x288F, r25	; 0x80288f <START_COUNT_VALUE+0x3>
    3a6a:	a0 c8       	rjmp	.-3776   	; 0x2bac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1b0>
    3a6c:	60 91 99 28 	lds	r22, 0x2899	; 0x802899 <SET_TEMP_FAH>
    3a70:	70 91 9a 28 	lds	r23, 0x289A	; 0x80289a <SET_TEMP_FAH+0x1>
    3a74:	07 2e       	mov	r0, r23
    3a76:	00 0c       	add	r0, r0
    3a78:	88 0b       	sbc	r24, r24
    3a7a:	99 0b       	sbc	r25, r25
    3a7c:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    3a80:	60 93 88 28 	sts	0x2888, r22	; 0x802888 <PID_SETPOINT_To_Show>
    3a84:	70 93 89 28 	sts	0x2889, r23	; 0x802889 <PID_SETPOINT_To_Show+0x1>
    3a88:	80 93 8a 28 	sts	0x288A, r24	; 0x80288a <PID_SETPOINT_To_Show+0x2>
    3a8c:	90 93 8b 28 	sts	0x288B, r25	; 0x80288b <PID_SETPOINT_To_Show+0x3>
    3a90:	20 e0       	ldi	r18, 0x00	; 0
    3a92:	30 e0       	ldi	r19, 0x00	; 0
    3a94:	40 e0       	ldi	r20, 0x00	; 0
    3a96:	52 e4       	ldi	r21, 0x42	; 66
    3a98:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    3a9c:	26 e6       	ldi	r18, 0x66	; 102
    3a9e:	36 e6       	ldi	r19, 0x66	; 102
    3aa0:	46 ee       	ldi	r20, 0xE6	; 230
    3aa2:	5f e3       	ldi	r21, 0x3F	; 63
    3aa4:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    3aa8:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    3aac:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    3ab0:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    3ab4:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    3ab8:	93 c8       	rjmp	.-3802   	; 0x2be0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1e4>
    3aba:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <checkTempRaised>
    3abe:	fb c8       	rjmp	.-3594   	; 0x2cb6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x2ba>
    3ac0:	40 91 69 28 	lds	r20, 0x2869	; 0x802869 <TO_CHECK_REPETATION_WITHIN_TIME>
    3ac4:	50 91 6a 28 	lds	r21, 0x286A	; 0x80286a <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    3ac8:	60 91 6b 28 	lds	r22, 0x286B	; 0x80286b <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    3acc:	70 91 6c 28 	lds	r23, 0x286C	; 0x80286c <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    3ad0:	26 01       	movw	r4, r12
    3ad2:	37 01       	movw	r6, r14
    3ad4:	44 1a       	sub	r4, r20
    3ad6:	55 0a       	sbc	r5, r21
    3ad8:	66 0a       	sbc	r6, r22
    3ada:	77 0a       	sbc	r7, r23
    3adc:	b3 01       	movw	r22, r6
    3ade:	a2 01       	movw	r20, r4
    3ae0:	40 39       	cpi	r20, 0x90	; 144
    3ae2:	5f 45       	sbci	r21, 0x5F	; 95
    3ae4:	61 40       	sbci	r22, 0x01	; 1
    3ae6:	71 05       	cpc	r23, r1
    3ae8:	30 f4       	brcc	.+12     	; 0x3af6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x10fa>
    3aea:	01 96       	adiw	r24, 0x01	; 1
    3aec:	80 93 6d 28 	sts	0x286D, r24	; 0x80286d <COOLING_CYCLE_COUNT>
    3af0:	90 93 6e 28 	sts	0x286E, r25	; 0x80286e <COOLING_CYCLE_COUNT+0x1>
    3af4:	11 ca       	rjmp	.-3038   	; 0x2f18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x51c>
    3af6:	10 92 6d 28 	sts	0x286D, r1	; 0x80286d <COOLING_CYCLE_COUNT>
    3afa:	10 92 6e 28 	sts	0x286E, r1	; 0x80286e <COOLING_CYCLE_COUNT+0x1>
    3afe:	0c ca       	rjmp	.-3048   	; 0x2f18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x51c>
    3b00:	80 91 7b 28 	lds	r24, 0x287B	; 0x80287b <CAL_OF_10_MIN>
    3b04:	90 91 7c 28 	lds	r25, 0x287C	; 0x80287c <CAL_OF_10_MIN+0x1>
    3b08:	a0 91 7d 28 	lds	r26, 0x287D	; 0x80287d <CAL_OF_10_MIN+0x2>
    3b0c:	b0 91 7e 28 	lds	r27, 0x287E	; 0x80287e <CAL_OF_10_MIN+0x3>
    3b10:	26 01       	movw	r4, r12
    3b12:	37 01       	movw	r6, r14
    3b14:	48 1a       	sub	r4, r24
    3b16:	59 0a       	sbc	r5, r25
    3b18:	6a 0a       	sbc	r6, r26
    3b1a:	7b 0a       	sbc	r7, r27
    3b1c:	d3 01       	movw	r26, r6
    3b1e:	c2 01       	movw	r24, r4
    3b20:	81 3a       	cpi	r24, 0xA1	; 161
    3b22:	98 46       	sbci	r25, 0x68	; 104
    3b24:	a6 40       	sbci	r26, 0x06	; 6
    3b26:	b1 05       	cpc	r27, r1
    3b28:	08 f4       	brcc	.+2      	; 0x3b2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1130>
    3b2a:	f6 c9       	rjmp	.-3092   	; 0x2f18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x51c>
    3b2c:	81 e0       	ldi	r24, 0x01	; 1
    3b2e:	80 93 94 28 	sts	0x2894, r24	; 0x802894 <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    3b32:	60 e0       	ldi	r22, 0x00	; 0
    3b34:	85 e1       	ldi	r24, 0x15	; 21
    3b36:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3b3a:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    3b3e:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <SET_MIN>
    3b42:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <SET_MIN+0x1>
    3b46:	e8 c9       	rjmp	.-3120   	; 0x2f18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x51c>
    3b48:	20 e0       	ldi	r18, 0x00	; 0
    3b4a:	30 e0       	ldi	r19, 0x00	; 0
    3b4c:	40 e8       	ldi	r20, 0x80	; 128
    3b4e:	5f e3       	ldi	r21, 0x3F	; 63
    3b50:	c7 01       	movw	r24, r14
    3b52:	b6 01       	movw	r22, r12
    3b54:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    3b58:	87 ff       	sbrs	r24, 7
    3b5a:	fc c9       	rjmp	.-3080   	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x558>
    3b5c:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <CHECK_RATE_OF_HEATING>
    3b60:	88 23       	and	r24, r24
    3b62:	09 f4       	brne	.+2      	; 0x3b66 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x116a>
    3b64:	f7 c9       	rjmp	.-3090   	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x558>
    3b66:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <EXECUTE_PID_LOOP>
    3b6a:	81 11       	cpse	r24, r1
    3b6c:	07 c0       	rjmp	.+14     	; 0x3b7c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1180>
PID_Start():
    3b6e:	8a e3       	ldi	r24, 0x3A	; 58
    3b70:	9a e2       	ldi	r25, 0x2A	; 42
    3b72:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3b76:	81 e0       	ldi	r24, 0x01	; 1
    3b78:	80 93 af 28 	sts	0x28AF, r24	; 0x8028af <EXECUTE_PID_LOOP>
    3b7c:	0e 94 9a 09 	call	0x1334	; 0x1334 <Lclass::PID_callingg() [clone .constprop.56]>
    3b80:	e9 c9       	rjmp	.-3118   	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x558>
    3b82:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3b86:	81 11       	cpse	r24, r1
    3b88:	1d c0       	rjmp	.+58     	; 0x3bc4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x11c8>
    3b8a:	a7 01       	movw	r20, r14
    3b8c:	96 01       	movw	r18, r12
    3b8e:	c5 01       	movw	r24, r10
    3b90:	b4 01       	movw	r22, r8
    3b92:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    3b96:	87 fd       	sbrc	r24, 7
    3b98:	06 c0       	rjmp	.+12     	; 0x3ba6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x11aa>
    3b9a:	81 e0       	ldi	r24, 0x01	; 1
    3b9c:	80 93 67 28 	sts	0x2867, r24	; 0x802867 <COUNTDOWN_START>
    3ba0:	80 93 ab 28 	sts	0x28AB, r24	; 0x8028ab <soak_once_flag>
    3ba4:	ee c9       	rjmp	.-3108   	; 0x2f82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x586>
    3ba6:	a7 01       	movw	r20, r14
    3ba8:	96 01       	movw	r18, r12
    3baa:	c5 01       	movw	r24, r10
    3bac:	b4 01       	movw	r22, r8
    3bae:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    3bb2:	87 ff       	sbrs	r24, 7
    3bb4:	e5 c1       	rjmp	.+970    	; 0x3f80 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1584>
    3bb6:	80 91 ab 28 	lds	r24, 0x28AB	; 0x8028ab <soak_once_flag>
    3bba:	81 11       	cpse	r24, r1
    3bbc:	e2 c9       	rjmp	.-3132   	; 0x2f82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x586>
    3bbe:	10 92 67 28 	sts	0x2867, r1	; 0x802867 <COUNTDOWN_START>
    3bc2:	df c9       	rjmp	.-3138   	; 0x2f82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x586>
    3bc4:	40 90 d4 28 	lds	r4, 0x28D4	; 0x8028d4 <TEMP_FAH>
    3bc8:	50 90 d5 28 	lds	r5, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    3bcc:	60 90 d6 28 	lds	r6, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    3bd0:	70 90 d7 28 	lds	r7, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    3bd4:	a7 01       	movw	r20, r14
    3bd6:	96 01       	movw	r18, r12
    3bd8:	c3 01       	movw	r24, r6
    3bda:	b2 01       	movw	r22, r4
    3bdc:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    3be0:	87 ff       	sbrs	r24, 7
    3be2:	db cf       	rjmp	.-74     	; 0x3b9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x119e>
    3be4:	a7 01       	movw	r20, r14
    3be6:	96 01       	movw	r18, r12
    3be8:	c3 01       	movw	r24, r6
    3bea:	b2 01       	movw	r22, r4
    3bec:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    3bf0:	87 fd       	sbrc	r24, 7
    3bf2:	e1 cf       	rjmp	.-62     	; 0x3bb6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x11ba>
    3bf4:	c6 c9       	rjmp	.-3188   	; 0x2f82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x586>
    3bf6:	80 e8       	ldi	r24, 0x80	; 128
    3bf8:	9a e1       	ldi	r25, 0x1A	; 26
    3bfa:	a6 e0       	ldi	r26, 0x06	; 6
    3bfc:	b0 e0       	ldi	r27, 0x00	; 0
    3bfe:	eb c9       	rjmp	.-3114   	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5da>
    3c00:	80 e0       	ldi	r24, 0x00	; 0
    3c02:	95 e3       	ldi	r25, 0x35	; 53
    3c04:	ac e0       	ldi	r26, 0x0C	; 12
    3c06:	b0 e0       	ldi	r27, 0x00	; 0
    3c08:	f9 c9       	rjmp	.-3086   	; 0x2ffc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x600>
    3c0a:	80 e4       	ldi	r24, 0x40	; 64
    3c0c:	92 e4       	ldi	r25, 0x42	; 66
    3c0e:	af e0       	ldi	r26, 0x0F	; 15
    3c10:	b0 e0       	ldi	r27, 0x00	; 0
    3c12:	a0 ca       	rjmp	.-2752   	; 0x3154 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x758>
    3c14:	80 e8       	ldi	r24, 0x80	; 128
    3c16:	94 e8       	ldi	r25, 0x84	; 132
    3c18:	ae e1       	ldi	r26, 0x1E	; 30
    3c1a:	b0 e0       	ldi	r27, 0x00	; 0
    3c1c:	ae ca       	rjmp	.-2724   	; 0x317a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x77e>
    3c1e:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
    3c22:	88 23       	and	r24, r24
    3c24:	09 f4       	brne	.+2      	; 0x3c28 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x122c>
    3c26:	4e c0       	rjmp	.+156    	; 0x3cc4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12c8>
    3c28:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    3c2c:	88 23       	and	r24, r24
    3c2e:	09 f4       	brne	.+2      	; 0x3c32 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1236>
    3c30:	49 c0       	rjmp	.+146    	; 0x3cc4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12c8>
    3c32:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3c36:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3c3a:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
digitalWrite():
    3c3e:	60 e0       	ldi	r22, 0x00	; 0
    3c40:	8c e0       	ldi	r24, 0x0C	; 12
    3c42:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3c46:	8c e0       	ldi	r24, 0x0C	; 12
    3c48:	90 e0       	ldi	r25, 0x00	; 0
    3c4a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    3c4e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    3c52:	80 e1       	ldi	r24, 0x10	; 16
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    3c5a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    3c5e:	89 e1       	ldi	r24, 0x19	; 25
    3c60:	90 e0       	ldi	r25, 0x00	; 0
    3c62:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    3c66:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    3c6a:	81 e1       	ldi	r24, 0x11	; 17
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3c72:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    3c76:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
    3c7a:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    3c7e:	10 92 f5 28 	sts	0x28F5, r1	; 0x8028f5 <digits1>
    3c82:	10 92 f6 28 	sts	0x28F6, r1	; 0x8028f6 <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    3c86:	89 2b       	or	r24, r25
    3c88:	81 f4       	brne	.+32     	; 0x3caa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12ae>
DISPLAY_DIGIT1():
    3c8a:	c0 93 f7 28 	sts	0x28F7, r28	; 0x8028f7 <digits1+0x2>
    3c8e:	d0 93 f8 28 	sts	0x28F8, r29	; 0x8028f8 <digits1+0x3>
    3c92:	c0 93 f9 28 	sts	0x28F9, r28	; 0x8028f9 <digits1+0x4>
    3c96:	d0 93 fa 28 	sts	0x28FA, r29	; 0x8028fa <digits1+0x5>
    3c9a:	88 e1       	ldi	r24, 0x18	; 24
    3c9c:	90 e0       	ldi	r25, 0x00	; 0
    3c9e:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    3ca2:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    3ca6:	0c 94 02 16 	jmp	0x2c04	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
    3caa:	84 e1       	ldi	r24, 0x14	; 20
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    3cb2:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    3cb6:	88 e1       	ldi	r24, 0x18	; 24
    3cb8:	90 e0       	ldi	r25, 0x00	; 0
    3cba:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    3cbe:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    3cc2:	ed cf       	rjmp	.-38     	; 0x3c9e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12a2>
SET_SHORT_PRESS_FUNCTION():
    3cc4:	80 91 5f 28 	lds	r24, 0x285F	; 0x80285f <TIMER_LED_BLINK>
    3cc8:	90 91 60 28 	lds	r25, 0x2860	; 0x802860 <TIMER_LED_BLINK+0x1>
    3ccc:	9c 01       	movw	r18, r24
    3cce:	2f 5f       	subi	r18, 0xFF	; 255
    3cd0:	3f 4f       	sbci	r19, 0xFF	; 255
    3cd2:	20 93 5f 28 	sts	0x285F, r18	; 0x80285f <TIMER_LED_BLINK>
    3cd6:	30 93 60 28 	sts	0x2860, r19	; 0x802860 <TIMER_LED_BLINK+0x1>
digitalWrite():
    3cda:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    3cdc:	28 39       	cpi	r18, 0x98	; 152
    3cde:	38 40       	sbci	r19, 0x08	; 8
    3ce0:	38 f0       	brcs	.+14     	; 0x3cf0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12f4>
    3ce2:	87 59       	subi	r24, 0x97	; 151
    3ce4:	98 40       	sbci	r25, 0x08	; 8
    3ce6:	88 39       	cpi	r24, 0x98	; 152
    3ce8:	98 40       	sbci	r25, 0x08	; 8
    3cea:	08 f0       	brcs	.+2      	; 0x3cee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12f2>
    3cec:	55 c0       	rjmp	.+170    	; 0x3d98 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x139c>
digitalWrite():
    3cee:	60 e0       	ldi	r22, 0x00	; 0
    3cf0:	8c e0       	ldi	r24, 0x0C	; 12
    3cf2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3cf6:	80 91 ba 28 	lds	r24, 0x28BA	; 0x8028ba <IN_ERROR>
    3cfa:	88 23       	and	r24, r24
    3cfc:	71 f0       	breq	.+28     	; 0x3d1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x131e>
stop():
    3cfe:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <BUZZ_TICK1>
    3d02:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xb>
    3d06:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0xc>
    3d0a:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <BUZZ_TICK1+0xd>
    3d0e:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <BUZZ_TICK1+0xe>
    3d12:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <BUZZ_TICK1+0xf>
    3d16:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    3d1a:	84 e6       	ldi	r24, 0x64	; 100
    3d1c:	8c 9d       	mul	r24, r12
    3d1e:	b0 01       	movw	r22, r0
    3d20:	8d 9d       	mul	r24, r13
    3d22:	70 0d       	add	r23, r0
    3d24:	11 24       	eor	r1, r1
    3d26:	6e 0d       	add	r22, r14
    3d28:	7f 1d       	adc	r23, r15
    3d2a:	07 2e       	mov	r0, r23
    3d2c:	00 0c       	add	r0, r0
    3d2e:	88 0b       	sbc	r24, r24
    3d30:	99 0b       	sbc	r25, r25
    3d32:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    3d36:	85 e5       	ldi	r24, 0x55	; 85
    3d38:	9a e2       	ldi	r25, 0x2A	; 42
    3d3a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    3d3e:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <Alternate_Display_Flag>
    3d42:	88 23       	and	r24, r24
    3d44:	f1 f1       	breq	.+124    	; 0x3dc2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x13c6>
digitalWrite():
    3d46:	61 e0       	ldi	r22, 0x01	; 1
    3d48:	8c e1       	ldi	r24, 0x1C	; 28
    3d4a:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    3d4e:	60 e0       	ldi	r22, 0x00	; 0
    3d50:	8d e1       	ldi	r24, 0x1D	; 29
    3d52:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    3d56:	60 91 88 28 	lds	r22, 0x2888	; 0x802888 <PID_SETPOINT_To_Show>
    3d5a:	70 91 89 28 	lds	r23, 0x2889	; 0x802889 <PID_SETPOINT_To_Show+0x1>
    3d5e:	80 91 8a 28 	lds	r24, 0x288A	; 0x80288a <PID_SETPOINT_To_Show+0x2>
    3d62:	90 91 8b 28 	lds	r25, 0x288B	; 0x80288b <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    3d66:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3d6a:	21 11       	cpse	r18, r1
    3d6c:	1a c0       	rjmp	.+52     	; 0x3da2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x13a6>
    3d6e:	20 e0       	ldi	r18, 0x00	; 0
    3d70:	30 e0       	ldi	r19, 0x00	; 0
    3d72:	48 ec       	ldi	r20, 0xC8	; 200
    3d74:	52 e4       	ldi	r21, 0x42	; 66
    3d76:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    3d7a:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3d7e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3d82:	8a e0       	ldi	r24, 0x0A	; 10
    3d84:	90 e0       	ldi	r25, 0x00	; 0
    3d86:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3d8a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3d8e:	81 e0       	ldi	r24, 0x01	; 1
    3d90:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    3d94:	0c 94 02 16 	jmp	0x2c04	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
    3d98:	10 92 5f 28 	sts	0x285F, r1	; 0x80285f <TIMER_LED_BLINK>
    3d9c:	10 92 60 28 	sts	0x2860, r1	; 0x802860 <TIMER_LED_BLINK+0x1>
    3da0:	aa cf       	rjmp	.-172    	; 0x3cf6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x12fa>
    3da2:	20 e0       	ldi	r18, 0x00	; 0
    3da4:	30 e0       	ldi	r19, 0x00	; 0
    3da6:	40 e2       	ldi	r20, 0x20	; 32
    3da8:	51 e4       	ldi	r21, 0x41	; 65
    3daa:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    3dae:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3db2:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3db6:	c0 93 f3 28 	sts	0x28F3, r28	; 0x8028f3 <digits2+0x6>
    3dba:	d0 93 f4 28 	sts	0x28F4, r29	; 0x8028f4 <digits2+0x7>
    3dbe:	0c 94 02 16 	jmp	0x2c04	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
digitalWrite():
    3dc2:	60 e0       	ldi	r22, 0x00	; 0
    3dc4:	8c e1       	ldi	r24, 0x1C	; 28
    3dc6:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    3dca:	61 e0       	ldi	r22, 0x01	; 1
    3dcc:	8d e1       	ldi	r24, 0x1D	; 29
    3dce:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3dd2:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3dd6:	81 11       	cpse	r24, r1
    3dd8:	38 c0       	rjmp	.+112    	; 0x3e4a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x144e>
    3dda:	c0 90 06 29 	lds	r12, 0x2906	; 0x802906 <TEMP_DEG>
    3dde:	d0 90 07 29 	lds	r13, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    3de2:	e0 90 08 29 	lds	r14, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    3de6:	f0 90 09 29 	lds	r15, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    3dea:	2d ec       	ldi	r18, 0xCD	; 205
    3dec:	3c ec       	ldi	r19, 0xCC	; 204
    3dee:	47 ec       	ldi	r20, 0xC7	; 199
    3df0:	52 e4       	ldi	r21, 0x42	; 66
    3df2:	c7 01       	movw	r24, r14
    3df4:	b6 01       	movw	r22, r12
    3df6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    3dfa:	18 16       	cp	r1, r24
    3dfc:	b4 f4       	brge	.+44     	; 0x3e2a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x142e>
    3dfe:	20 e0       	ldi	r18, 0x00	; 0
    3e00:	30 e0       	ldi	r19, 0x00	; 0
    3e02:	40 e2       	ldi	r20, 0x20	; 32
    3e04:	51 e4       	ldi	r21, 0x41	; 65
    3e06:	c7 01       	movw	r24, r14
    3e08:	b6 01       	movw	r22, r12
    3e0a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    3e0e:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3e12:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3e16:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    3e1a:	8a e0       	ldi	r24, 0x0A	; 10
    3e1c:	90 e0       	ldi	r25, 0x00	; 0
    3e1e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    3e22:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    3e26:	0c 94 02 16 	jmp	0x2c04	; 0x2c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x208>
    3e2a:	20 e0       	ldi	r18, 0x00	; 0
    3e2c:	30 e0       	ldi	r19, 0x00	; 0
    3e2e:	48 ec       	ldi	r20, 0xC8	; 200
    3e30:	52 e4       	ldi	r21, 0x42	; 66
    3e32:	c7 01       	movw	r24, r14
    3e34:	b6 01       	movw	r22, r12
    3e36:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    3e3a:	0e 94 59 3a 	call	0x74b2	; 0x74b2 <__fixsfsi>
    3e3e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    3e42:	81 e0       	ldi	r24, 0x01	; 1
    3e44:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    3e48:	e8 cf       	rjmp	.-48     	; 0x3e1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x141e>
    3e4a:	20 e0       	ldi	r18, 0x00	; 0
    3e4c:	30 e0       	ldi	r19, 0x00	; 0
    3e4e:	40 e2       	ldi	r20, 0x20	; 32
    3e50:	51 e4       	ldi	r21, 0x41	; 65
    3e52:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    3e56:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    3e5a:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    3e5e:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    3e62:	a3 cf       	rjmp	.-186    	; 0x3daa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x13ae>
digitalWrite():
    3e64:	60 e0       	ldi	r22, 0x00	; 0
    3e66:	81 e2       	ldi	r24, 0x21	; 33
    3e68:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3e6c:	60 e0       	ldi	r22, 0x00	; 0
    3e6e:	80 ea       	ldi	r24, 0xA0	; 160
    3e70:	90 e0       	ldi	r25, 0x00	; 0
    3e72:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3e76:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
LED_On_Call():
    3e7a:	86 ea       	ldi	r24, 0xA6	; 166
    3e7c:	9a e2       	ldi	r25, 0x2A	; 42
    3e7e:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3e82:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
    3e86:	60 e0       	ldi	r22, 0x00	; 0
    3e88:	87 e8       	ldi	r24, 0x87	; 135
    3e8a:	90 e0       	ldi	r25, 0x00	; 0
    3e8c:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
SET_SHORT_PRESS_FUNCTION():
    3e90:	60 91 5b 28 	lds	r22, 0x285B	; 0x80285b <actualRunMin>
    3e94:	70 91 5c 28 	lds	r23, 0x285C	; 0x80285c <actualRunMin+0x1>
    3e98:	80 91 5d 28 	lds	r24, 0x285D	; 0x80285d <actualRunMin+0x2>
    3e9c:	90 91 5e 28 	lds	r25, 0x285E	; 0x80285e <actualRunMin+0x3>
    3ea0:	2c e3       	ldi	r18, 0x3C	; 60
    3ea2:	30 e0       	ldi	r19, 0x00	; 0
    3ea4:	40 e0       	ldi	r20, 0x00	; 0
    3ea6:	50 e0       	ldi	r21, 0x00	; 0
    3ea8:	0e 94 ba 3b 	call	0x7774	; 0x7774 <__udivmodsi4>
    3eac:	69 01       	movw	r12, r18
    3eae:	20 93 59 28 	sts	0x2859, r18	; 0x802859 <actualRunHours>
    3eb2:	30 93 5a 28 	sts	0x285A, r19	; 0x80285a <actualRunHours+0x1>
    3eb6:	67 e5       	ldi	r22, 0x57	; 87
    3eb8:	78 e2       	ldi	r23, 0x28	; 40
    3eba:	88 e9       	ldi	r24, 0x98	; 152
    3ebc:	90 e0       	ldi	r25, 0x00	; 0
    3ebe:	0e 94 2d 10 	call	0x205a	; 0x205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    3ec2:	20 91 57 28 	lds	r18, 0x2857	; 0x802857 <processLog>
    3ec6:	30 91 58 28 	lds	r19, 0x2858	; 0x802858 <processLog+0x1>
    3eca:	2c 0d       	add	r18, r12
    3ecc:	3d 1d       	adc	r19, r13
    3ece:	20 93 57 28 	sts	0x2857, r18	; 0x802857 <processLog>
    3ed2:	30 93 58 28 	sts	0x2858, r19	; 0x802858 <processLog+0x1>
    3ed6:	2f 30       	cpi	r18, 0x0F	; 15
    3ed8:	37 42       	sbci	r19, 0x27	; 39
    3eda:	68 f0       	brcs	.+26     	; 0x3ef6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x14fa>
    3edc:	80 91 55 28 	lds	r24, 0x2855	; 0x802855 <processLogNumberOfTimes>
    3ee0:	90 91 56 28 	lds	r25, 0x2856	; 0x802856 <processLogNumberOfTimes+0x1>
    3ee4:	01 96       	adiw	r24, 0x01	; 1
    3ee6:	80 93 55 28 	sts	0x2855, r24	; 0x802855 <processLogNumberOfTimes>
    3eea:	90 93 56 28 	sts	0x2856, r25	; 0x802856 <processLogNumberOfTimes+0x1>
    3eee:	10 92 57 28 	sts	0x2857, r1	; 0x802857 <processLog>
    3ef2:	10 92 58 28 	sts	0x2858, r1	; 0x802858 <processLog+0x1>
    3ef6:	67 e5       	ldi	r22, 0x57	; 87
    3ef8:	78 e2       	ldi	r23, 0x28	; 40
    3efa:	88 e9       	ldi	r24, 0x98	; 152
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	0e 94 17 11 	call	0x222e	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    3f02:	65 e5       	ldi	r22, 0x55	; 85
    3f04:	78 e2       	ldi	r23, 0x28	; 40
    3f06:	8a e9       	ldi	r24, 0x9A	; 154
    3f08:	90 e0       	ldi	r25, 0x00	; 0
    3f0a:	0e 94 17 11 	call	0x222e	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    3f0e:	10 92 59 28 	sts	0x2859, r1	; 0x802859 <actualRunHours>
    3f12:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <actualRunHours+0x1>
    3f16:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <actualRunMin>
    3f1a:	10 92 5c 28 	sts	0x285C, r1	; 0x80285c <actualRunMin+0x1>
    3f1e:	10 92 5d 28 	sts	0x285D, r1	; 0x80285d <actualRunMin+0x2>
    3f22:	10 92 5e 28 	sts	0x285E, r1	; 0x80285e <actualRunMin+0x3>
stop():
    3f26:	10 92 55 2a 	sts	0x2A55, r1	; 0x802a55 <Alter_Disp>
    3f2a:	10 92 60 2a 	sts	0x2A60, r1	; 0x802a60 <Alter_Disp+0xb>
    3f2e:	10 92 61 2a 	sts	0x2A61, r1	; 0x802a61 <Alter_Disp+0xc>
    3f32:	10 92 62 2a 	sts	0x2A62, r1	; 0x802a62 <Alter_Disp+0xd>
    3f36:	10 92 63 2a 	sts	0x2A63, r1	; 0x802a63 <Alter_Disp+0xe>
    3f3a:	10 92 64 2a 	sts	0x2A64, r1	; 0x802a64 <Alter_Disp+0xf>
    3f3e:	10 92 65 2a 	sts	0x2A65, r1	; 0x802a65 <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    3f42:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <Blinking_Freq>
    3f46:	83 30       	cpi	r24, 0x03	; 3
    3f48:	b8 f4       	brcc	.+46     	; 0x3f78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x157c>
    3f4a:	84 ef       	ldi	r24, 0xF4	; 244
    3f4c:	91 e0       	ldi	r25, 0x01	; 1
    3f4e:	0e 94 42 0b 	call	0x1684	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
stop():
    3f52:	10 92 3a 2a 	sts	0x2A3A, r1	; 0x802a3a <PID_EXE>
    3f56:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xb>
    3f5a:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0xc>
    3f5e:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <PID_EXE+0xd>
    3f62:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <PID_EXE+0xe>
    3f66:	10 92 49 2a 	sts	0x2A49, r1	; 0x802a49 <PID_EXE+0xf>
    3f6a:	10 92 4a 2a 	sts	0x2A4A, r1	; 0x802a4a <PID_EXE+0x10>
DISP_UPDATE():
    3f6e:	8f ed       	ldi	r24, 0xDF	; 223
    3f70:	9b e2       	ldi	r25, 0x2B	; 43
    3f72:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    3f76:	e5 cf       	rjmp	.-54     	; 0x3f42 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1546>
SET_SHORT_PRESS_FUNCTION():
    3f78:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    3f7c:	0c 94 1c 15 	jmp	0x2a38	; 0x2a38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x3c>
    3f80:	a7 01       	movw	r20, r14
    3f82:	96 01       	movw	r18, r12
    3f84:	c5 01       	movw	r24, r10
    3f86:	b4 01       	movw	r22, r8
    3f88:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    3f8c:	87 ff       	sbrs	r24, 7
    3f8e:	01 c0       	rjmp	.+2      	; 0x3f92 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x1596>
    3f90:	04 c8       	rjmp	.-4088   	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x59e>
    3f92:	16 c8       	rjmp	.-4052   	; 0x2fc0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]+0x5c4>

00003f94 <shiftOut.constprop.7>:
shiftOut():
    3f94:	ef 92       	push	r14
    3f96:	ff 92       	push	r15
    3f98:	0f 93       	push	r16
    3f9a:	1f 93       	push	r17
    3f9c:	cf 93       	push	r28
    3f9e:	df 93       	push	r29
    3fa0:	e8 2e       	mov	r14, r24
    3fa2:	f6 2e       	mov	r15, r22
    3fa4:	d0 e0       	ldi	r29, 0x00	; 0
    3fa6:	c0 e0       	ldi	r28, 0x00	; 0
    3fa8:	04 2f       	mov	r16, r20
    3faa:	10 e0       	ldi	r17, 0x00	; 0
    3fac:	b8 01       	movw	r22, r16
    3fae:	0c 2e       	mov	r0, r28
    3fb0:	02 c0       	rjmp	.+4      	; 0x3fb6 <shiftOut.constprop.7+0x22>
    3fb2:	75 95       	asr	r23
    3fb4:	67 95       	ror	r22
    3fb6:	0a 94       	dec	r0
    3fb8:	e2 f7       	brpl	.-8      	; 0x3fb2 <shiftOut.constprop.7+0x1e>
    3fba:	61 70       	andi	r22, 0x01	; 1
    3fbc:	8e 2d       	mov	r24, r14
    3fbe:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    3fc2:	61 e0       	ldi	r22, 0x01	; 1
    3fc4:	8f 2d       	mov	r24, r15
    3fc6:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    3fca:	60 e0       	ldi	r22, 0x00	; 0
    3fcc:	8f 2d       	mov	r24, r15
    3fce:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    3fd2:	21 96       	adiw	r28, 0x01	; 1
    3fd4:	c8 30       	cpi	r28, 0x08	; 8
    3fd6:	d1 05       	cpc	r29, r1
    3fd8:	49 f7       	brne	.-46     	; 0x3fac <shiftOut.constprop.7+0x18>
    3fda:	df 91       	pop	r29
    3fdc:	cf 91       	pop	r28
    3fde:	1f 91       	pop	r17
    3fe0:	0f 91       	pop	r16
    3fe2:	ff 90       	pop	r15
    3fe4:	ef 90       	pop	r14
    3fe6:	08 95       	ret

00003fe8 <DISP_REFRESH()>:
DISP_REFRESH():
    3fe8:	0f 93       	push	r16
    3fea:	1f 93       	push	r17
    3fec:	cf 93       	push	r28
    3fee:	df 93       	push	r29
    3ff0:	0e 94 9f 08 	call	0x113e	; 0x113e <Eclass::cathode_high1() [clone .constprop.6]>
    3ff4:	0e 94 ab 08 	call	0x1156	; 0x1156 <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    3ff8:	0e 94 ab 08 	call	0x1156	; 0x1156 <Eclass::cathode_high2() [clone .constprop.4]>
    3ffc:	60 e0       	ldi	r22, 0x00	; 0
    3ffe:	80 e2       	ldi	r24, 0x20	; 32
    4000:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    4004:	c0 91 39 28 	lds	r28, 0x2839	; 0x802839 <count2>
    4008:	d0 91 3a 28 	lds	r29, 0x283A	; 0x80283a <count2+0x1>
    400c:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <DOT2_0>
    4010:	8e 01       	movw	r16, r28
    4012:	00 0f       	add	r16, r16
    4014:	11 1f       	adc	r17, r17
    4016:	88 23       	and	r24, r24
    4018:	31 f0       	breq	.+12     	; 0x4026 <__RODATA_PM_OFFSET__+0x26>
    401a:	e0 91 ed 28 	lds	r30, 0x28ED	; 0x8028ed <digits2>
    401e:	f0 91 ee 28 	lds	r31, 0x28EE	; 0x8028ee <digits2+0x1>
    4022:	20 97       	sbiw	r28, 0x00	; 0
    4024:	c1 f0       	breq	.+48     	; 0x4056 <__RODATA_PM_OFFSET__+0x56>
    4026:	80 91 a3 28 	lds	r24, 0x28A3	; 0x8028a3 <DOT2_1>
    402a:	88 23       	and	r24, r24
    402c:	39 f0       	breq	.+14     	; 0x403c <__RODATA_PM_OFFSET__+0x3c>
    402e:	e0 91 ef 28 	lds	r30, 0x28EF	; 0x8028ef <digits2+0x2>
    4032:	f0 91 f0 28 	lds	r31, 0x28F0	; 0x8028f0 <digits2+0x3>
    4036:	c1 30       	cpi	r28, 0x01	; 1
    4038:	d1 05       	cpc	r29, r1
    403a:	69 f0       	breq	.+26     	; 0x4056 <__RODATA_PM_OFFSET__+0x56>
    403c:	80 91 c2 28 	lds	r24, 0x28C2	; 0x8028c2 <DOT2_2>
    4040:	88 23       	and	r24, r24
    4042:	09 f4       	brne	.+2      	; 0x4046 <__RODATA_PM_OFFSET__+0x46>
    4044:	80 c0       	rjmp	.+256    	; 0x4146 <__RODATA_PM_OFFSET__+0x146>
    4046:	c2 30       	cpi	r28, 0x02	; 2
    4048:	d1 05       	cpc	r29, r1
    404a:	09 f0       	breq	.+2      	; 0x404e <__RODATA_PM_OFFSET__+0x4e>
    404c:	7c c0       	rjmp	.+248    	; 0x4146 <__RODATA_PM_OFFSET__+0x146>
    404e:	e0 91 f1 28 	lds	r30, 0x28F1	; 0x8028f1 <digits2+0x4>
    4052:	f0 91 f2 28 	lds	r31, 0x28F2	; 0x8028f2 <digits2+0x5>
    4056:	ea 57       	subi	r30, 0x7A	; 122
    4058:	f7 44       	sbci	r31, 0x47	; 71
    405a:	40 81       	ld	r20, Z
    405c:	41 60       	ori	r20, 0x01	; 1
    405e:	6e e1       	ldi	r22, 0x1E	; 30
    4060:	8f e1       	ldi	r24, 0x1F	; 31
    4062:	98 df       	rcall	.-208    	; 0x3f94 <shiftOut.constprop.7>
    4064:	f8 01       	movw	r30, r16
    4066:	ee 58       	subi	r30, 0x8E	; 142
    4068:	f7 44       	sbci	r31, 0x47	; 71
    406a:	60 e0       	ldi	r22, 0x00	; 0
    406c:	80 81       	ld	r24, Z
    406e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    4072:	61 e0       	ldi	r22, 0x01	; 1
    4074:	80 e2       	ldi	r24, 0x20	; 32
    4076:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    407a:	21 96       	adiw	r28, 0x01	; 1
    407c:	c4 30       	cpi	r28, 0x04	; 4
    407e:	d1 05       	cpc	r29, r1
    4080:	0c f0       	brlt	.+2      	; 0x4084 <__RODATA_PM_OFFSET__+0x84>
    4082:	6b c0       	rjmp	.+214    	; 0x415a <__RODATA_PM_OFFSET__+0x15a>
    4084:	c0 93 39 28 	sts	0x2839, r28	; 0x802839 <count2>
    4088:	d0 93 3a 28 	sts	0x283A, r29	; 0x80283a <count2+0x1>
DISPLAY_NUMBER1():
    408c:	0e 94 9f 08 	call	0x113e	; 0x113e <Eclass::cathode_high1() [clone .constprop.6]>
    4090:	60 e0       	ldi	r22, 0x00	; 0
    4092:	83 e1       	ldi	r24, 0x13	; 19
    4094:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    4098:	c0 91 3b 28 	lds	r28, 0x283B	; 0x80283b <count1>
    409c:	d0 91 3c 28 	lds	r29, 0x283C	; 0x80283c <count1+0x1>
    40a0:	80 91 c0 28 	lds	r24, 0x28C0	; 0x8028c0 <DOT1_0>
    40a4:	8e 01       	movw	r16, r28
    40a6:	00 0f       	add	r16, r16
    40a8:	11 1f       	adc	r17, r17
    40aa:	88 23       	and	r24, r24
    40ac:	31 f0       	breq	.+12     	; 0x40ba <__RODATA_PM_OFFSET__+0xba>
    40ae:	e0 91 f5 28 	lds	r30, 0x28F5	; 0x8028f5 <digits1>
    40b2:	f0 91 f6 28 	lds	r31, 0x28F6	; 0x8028f6 <digits1+0x1>
    40b6:	20 97       	sbiw	r28, 0x00	; 0
    40b8:	c1 f0       	breq	.+48     	; 0x40ea <__RODATA_PM_OFFSET__+0xea>
    40ba:	80 91 bf 28 	lds	r24, 0x28BF	; 0x8028bf <DOT1_1>
    40be:	88 23       	and	r24, r24
    40c0:	39 f0       	breq	.+14     	; 0x40d0 <__RODATA_PM_OFFSET__+0xd0>
    40c2:	e0 91 f7 28 	lds	r30, 0x28F7	; 0x8028f7 <digits1+0x2>
    40c6:	f0 91 f8 28 	lds	r31, 0x28F8	; 0x8028f8 <digits1+0x3>
    40ca:	c1 30       	cpi	r28, 0x01	; 1
    40cc:	d1 05       	cpc	r29, r1
    40ce:	69 f0       	breq	.+26     	; 0x40ea <__RODATA_PM_OFFSET__+0xea>
    40d0:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <DOT1_2>
    40d4:	88 23       	and	r24, r24
    40d6:	09 f4       	brne	.+2      	; 0x40da <__RODATA_PM_OFFSET__+0xda>
    40d8:	45 c0       	rjmp	.+138    	; 0x4164 <__RODATA_PM_OFFSET__+0x164>
    40da:	c2 30       	cpi	r28, 0x02	; 2
    40dc:	d1 05       	cpc	r29, r1
    40de:	09 f0       	breq	.+2      	; 0x40e2 <__RODATA_PM_OFFSET__+0xe2>
    40e0:	41 c0       	rjmp	.+130    	; 0x4164 <__RODATA_PM_OFFSET__+0x164>
    40e2:	e0 91 f9 28 	lds	r30, 0x28F9	; 0x8028f9 <digits1+0x4>
    40e6:	f0 91 fa 28 	lds	r31, 0x28FA	; 0x8028fa <digits1+0x5>
    40ea:	ea 57       	subi	r30, 0x7A	; 122
    40ec:	f7 44       	sbci	r31, 0x47	; 71
    40ee:	40 81       	ld	r20, Z
    40f0:	41 60       	ori	r20, 0x01	; 1
    40f2:	64 e1       	ldi	r22, 0x14	; 20
    40f4:	82 e1       	ldi	r24, 0x12	; 18
    40f6:	4e df       	rcall	.-356    	; 0x3f94 <shiftOut.constprop.7>
    40f8:	f8 01       	movw	r30, r16
    40fa:	e4 58       	subi	r30, 0x84	; 132
    40fc:	f7 44       	sbci	r31, 0x47	; 71
    40fe:	60 e0       	ldi	r22, 0x00	; 0
    4100:	80 81       	ld	r24, Z
    4102:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    4106:	61 e0       	ldi	r22, 0x01	; 1
    4108:	83 e1       	ldi	r24, 0x13	; 19
    410a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    410e:	21 96       	adiw	r28, 0x01	; 1
    4110:	c4 30       	cpi	r28, 0x04	; 4
    4112:	d1 05       	cpc	r29, r1
    4114:	8c f5       	brge	.+98     	; 0x4178 <__RODATA_PM_OFFSET__+0x178>
    4116:	c0 93 3b 28 	sts	0x283B, r28	; 0x80283b <count1>
    411a:	d0 93 3c 28 	sts	0x283C, r29	; 0x80283c <count1+0x1>
Button_Tick_Update():
    411e:	85 ea       	ldi	r24, 0xA5	; 165
    4120:	9b e2       	ldi	r25, 0x2B	; 43
    4122:	0e 94 5f 0b 	call	0x16be	; 0x16be <OneButton::tick()>
    4126:	86 e8       	ldi	r24, 0x86	; 134
    4128:	9b e2       	ldi	r25, 0x2B	; 43
    412a:	0e 94 5f 0b 	call	0x16be	; 0x16be <OneButton::tick()>
    412e:	87 e6       	ldi	r24, 0x67	; 103
    4130:	9b e2       	ldi	r25, 0x2B	; 43
    4132:	0e 94 5f 0b 	call	0x16be	; 0x16be <OneButton::tick()>
    4136:	88 e4       	ldi	r24, 0x48	; 72
    4138:	9b e2       	ldi	r25, 0x2B	; 43
DISP_REFRESH():
    413a:	df 91       	pop	r29
    413c:	cf 91       	pop	r28
    413e:	1f 91       	pop	r17
    4140:	0f 91       	pop	r16
Button_Tick_Update():
    4142:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <OneButton::tick()>
DISPLAY_NUMBER2():
    4146:	f8 01       	movw	r30, r16
    4148:	e3 51       	subi	r30, 0x13	; 19
    414a:	f7 4d       	sbci	r31, 0xD7	; 215
    414c:	01 90       	ld	r0, Z+
    414e:	f0 81       	ld	r31, Z
    4150:	e0 2d       	mov	r30, r0
    4152:	ea 57       	subi	r30, 0x7A	; 122
    4154:	f7 44       	sbci	r31, 0x47	; 71
    4156:	40 81       	ld	r20, Z
    4158:	82 cf       	rjmp	.-252    	; 0x405e <__RODATA_PM_OFFSET__+0x5e>
    415a:	10 92 39 28 	sts	0x2839, r1	; 0x802839 <count2>
    415e:	10 92 3a 28 	sts	0x283A, r1	; 0x80283a <count2+0x1>
    4162:	94 cf       	rjmp	.-216    	; 0x408c <__RODATA_PM_OFFSET__+0x8c>
DISPLAY_NUMBER1():
    4164:	f8 01       	movw	r30, r16
    4166:	eb 50       	subi	r30, 0x0B	; 11
    4168:	f7 4d       	sbci	r31, 0xD7	; 215
    416a:	01 90       	ld	r0, Z+
    416c:	f0 81       	ld	r31, Z
    416e:	e0 2d       	mov	r30, r0
    4170:	ea 57       	subi	r30, 0x7A	; 122
    4172:	f7 44       	sbci	r31, 0x47	; 71
    4174:	40 81       	ld	r20, Z
    4176:	bd cf       	rjmp	.-134    	; 0x40f2 <__RODATA_PM_OFFSET__+0xf2>
    4178:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <count1>
    417c:	10 92 3c 28 	sts	0x283C, r1	; 0x80283c <count1+0x1>
    4180:	ce cf       	rjmp	.-100    	; 0x411e <__RODATA_PM_OFFSET__+0x11e>

00004182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>:
_ZN5Print5writeEPKc.part.2():
    4182:	fc 01       	movw	r30, r24
    4184:	01 90       	ld	r0, Z+
    4186:	00 20       	and	r0, r0
    4188:	e9 f7       	brne	.-6      	; 0x4184 <Print::write(char const*) [clone .part.2] [clone .constprop.30]+0x2>
    418a:	31 97       	sbiw	r30, 0x01	; 1
    418c:	af 01       	movw	r20, r30
    418e:	48 1b       	sub	r20, r24
    4190:	59 0b       	sbc	r21, r25
    4192:	bc 01       	movw	r22, r24
    4194:	85 e5       	ldi	r24, 0x55	; 85
    4196:	99 e2       	ldi	r25, 0x29	; 41
    4198:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <Print::write(unsigned char const*, unsigned int)>

0000419c <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]>:
printNumber():
    419c:	8f 92       	push	r8
    419e:	9f 92       	push	r9
    41a0:	af 92       	push	r10
    41a2:	bf 92       	push	r11
    41a4:	0f 93       	push	r16
    41a6:	1f 93       	push	r17
    41a8:	cf 93       	push	r28
    41aa:	df 93       	push	r29
    41ac:	cd b7       	in	r28, 0x3d	; 61
    41ae:	de b7       	in	r29, 0x3e	; 62
    41b0:	a1 97       	sbiw	r28, 0x21	; 33
    41b2:	cd bf       	out	0x3d, r28	; 61
    41b4:	de bf       	out	0x3e, r29	; 62
    41b6:	19 a2       	std	Y+33, r1	; 0x21
    41b8:	42 30       	cpi	r20, 0x02	; 2
    41ba:	08 f4       	brcc	.+2      	; 0x41be <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]+0x22>
    41bc:	4a e0       	ldi	r20, 0x0A	; 10
    41be:	8e 01       	movw	r16, r28
    41c0:	0f 5d       	subi	r16, 0xDF	; 223
    41c2:	1f 4f       	sbci	r17, 0xFF	; 255
    41c4:	84 2e       	mov	r8, r20
    41c6:	91 2c       	mov	r9, r1
    41c8:	b1 2c       	mov	r11, r1
    41ca:	a1 2c       	mov	r10, r1
    41cc:	a5 01       	movw	r20, r10
    41ce:	94 01       	movw	r18, r8
    41d0:	0e 94 ba 3b 	call	0x7774	; 0x7774 <__udivmodsi4>
    41d4:	e6 2f       	mov	r30, r22
    41d6:	b9 01       	movw	r22, r18
    41d8:	ca 01       	movw	r24, r20
    41da:	ea 30       	cpi	r30, 0x0A	; 10
    41dc:	d4 f4       	brge	.+52     	; 0x4212 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]+0x76>
    41de:	e0 5d       	subi	r30, 0xD0	; 208
    41e0:	d8 01       	movw	r26, r16
    41e2:	ee 93       	st	-X, r30
    41e4:	8d 01       	movw	r16, r26
    41e6:	23 2b       	or	r18, r19
    41e8:	24 2b       	or	r18, r20
    41ea:	25 2b       	or	r18, r21
    41ec:	79 f7       	brne	.-34     	; 0x41cc <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]+0x30>
    41ee:	90 e0       	ldi	r25, 0x00	; 0
    41f0:	80 e0       	ldi	r24, 0x00	; 0
write():
    41f2:	10 97       	sbiw	r26, 0x00	; 0
    41f4:	11 f0       	breq	.+4      	; 0x41fa <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]+0x5e>
    41f6:	cd 01       	movw	r24, r26
    41f8:	c4 df       	rcall	.-120    	; 0x4182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
printNumber():
    41fa:	a1 96       	adiw	r28, 0x21	; 33
    41fc:	cd bf       	out	0x3d, r28	; 61
    41fe:	de bf       	out	0x3e, r29	; 62
    4200:	df 91       	pop	r29
    4202:	cf 91       	pop	r28
    4204:	1f 91       	pop	r17
    4206:	0f 91       	pop	r16
    4208:	bf 90       	pop	r11
    420a:	af 90       	pop	r10
    420c:	9f 90       	pop	r9
    420e:	8f 90       	pop	r8
    4210:	08 95       	ret
    4212:	e9 5c       	subi	r30, 0xC9	; 201
    4214:	e5 cf       	rjmp	.-54     	; 0x41e0 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]+0x44>

00004216 <Print::printFloat(double, unsigned char) [clone .constprop.21]>:
printFloat():
    4216:	4f 92       	push	r4
    4218:	5f 92       	push	r5
    421a:	6f 92       	push	r6
    421c:	7f 92       	push	r7
    421e:	8f 92       	push	r8
    4220:	9f 92       	push	r9
    4222:	af 92       	push	r10
    4224:	bf 92       	push	r11
    4226:	cf 92       	push	r12
    4228:	df 92       	push	r13
    422a:	ef 92       	push	r14
    422c:	ff 92       	push	r15
    422e:	0f 93       	push	r16
    4230:	1f 93       	push	r17
    4232:	cf 93       	push	r28
    4234:	6b 01       	movw	r12, r22
    4236:	7c 01       	movw	r14, r24
    4238:	74 2e       	mov	r7, r20
    423a:	ac 01       	movw	r20, r24
    423c:	9b 01       	movw	r18, r22
    423e:	0e 94 a3 3b 	call	0x7746	; 0x7746 <__unordsf2>
    4242:	88 23       	and	r24, r24
    4244:	91 f0       	breq	.+36     	; 0x426a <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x54>
write():
    4246:	8a ee       	ldi	r24, 0xEA	; 234
    4248:	99 eb       	ldi	r25, 0xB9	; 185
printFloat():
    424a:	cf 91       	pop	r28
    424c:	1f 91       	pop	r17
    424e:	0f 91       	pop	r16
    4250:	ff 90       	pop	r15
    4252:	ef 90       	pop	r14
    4254:	df 90       	pop	r13
    4256:	cf 90       	pop	r12
    4258:	bf 90       	pop	r11
    425a:	af 90       	pop	r10
    425c:	9f 90       	pop	r9
    425e:	8f 90       	pop	r8
    4260:	7f 90       	pop	r7
    4262:	6f 90       	pop	r6
    4264:	5f 90       	pop	r5
    4266:	4f 90       	pop	r4
write():
    4268:	8c cf       	rjmp	.-232    	; 0x4182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
printFloat():
    426a:	46 01       	movw	r8, r12
    426c:	57 01       	movw	r10, r14
    426e:	e8 94       	clt
    4270:	b7 f8       	bld	r11, 7
    4272:	2f ef       	ldi	r18, 0xFF	; 255
    4274:	3f ef       	ldi	r19, 0xFF	; 255
    4276:	4f e7       	ldi	r20, 0x7F	; 127
    4278:	5f e7       	ldi	r21, 0x7F	; 127
    427a:	c5 01       	movw	r24, r10
    427c:	b4 01       	movw	r22, r8
    427e:	0e 94 a3 3b 	call	0x7746	; 0x7746 <__unordsf2>
    4282:	81 11       	cpse	r24, r1
    4284:	0d c0       	rjmp	.+26     	; 0x42a0 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x8a>
    4286:	2f ef       	ldi	r18, 0xFF	; 255
    4288:	3f ef       	ldi	r19, 0xFF	; 255
    428a:	4f e7       	ldi	r20, 0x7F	; 127
    428c:	5f e7       	ldi	r21, 0x7F	; 127
    428e:	c5 01       	movw	r24, r10
    4290:	b4 01       	movw	r22, r8
    4292:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    4296:	18 16       	cp	r1, r24
    4298:	1c f4       	brge	.+6      	; 0x42a0 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x8a>
write():
    429a:	8e ee       	ldi	r24, 0xEE	; 238
    429c:	99 eb       	ldi	r25, 0xB9	; 185
    429e:	d5 cf       	rjmp	.-86     	; 0x424a <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x34>
printFloat():
    42a0:	2f ef       	ldi	r18, 0xFF	; 255
    42a2:	3f ef       	ldi	r19, 0xFF	; 255
    42a4:	4f e7       	ldi	r20, 0x7F	; 127
    42a6:	5f e4       	ldi	r21, 0x4F	; 79
    42a8:	c7 01       	movw	r24, r14
    42aa:	b6 01       	movw	r22, r12
    42ac:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    42b0:	18 16       	cp	r1, r24
    42b2:	1c f4       	brge	.+6      	; 0x42ba <Print::printFloat(double, unsigned char) [clone .constprop.21]+0xa4>
write():
    42b4:	82 ef       	ldi	r24, 0xF2	; 242
    42b6:	99 eb       	ldi	r25, 0xB9	; 185
    42b8:	c8 cf       	rjmp	.-112    	; 0x424a <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x34>
printFloat():
    42ba:	2f ef       	ldi	r18, 0xFF	; 255
    42bc:	3f ef       	ldi	r19, 0xFF	; 255
    42be:	4f e7       	ldi	r20, 0x7F	; 127
    42c0:	5f ec       	ldi	r21, 0xCF	; 207
    42c2:	c7 01       	movw	r24, r14
    42c4:	b6 01       	movw	r22, r12
    42c6:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    42ca:	87 fd       	sbrc	r24, 7
    42cc:	f3 cf       	rjmp	.-26     	; 0x42b4 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x9e>
    42ce:	20 e0       	ldi	r18, 0x00	; 0
    42d0:	30 e0       	ldi	r19, 0x00	; 0
    42d2:	a9 01       	movw	r20, r18
    42d4:	c7 01       	movw	r24, r14
    42d6:	b6 01       	movw	r22, r12
    42d8:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    42dc:	10 e0       	ldi	r17, 0x00	; 0
    42de:	00 e0       	ldi	r16, 0x00	; 0
    42e0:	87 ff       	sbrs	r24, 7
    42e2:	0a c0       	rjmp	.+20     	; 0x42f8 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0xe2>
print():
    42e4:	6d e2       	ldi	r22, 0x2D	; 45
    42e6:	85 e5       	ldi	r24, 0x55	; 85
    42e8:	99 e2       	ldi	r25, 0x29	; 41
    42ea:	0e 94 24 07 	call	0xe48	; 0xe48 <UartClass::write(unsigned char)>
    42ee:	8c 01       	movw	r16, r24
printFloat():
    42f0:	f7 fa       	bst	r15, 7
    42f2:	f0 94       	com	r15
    42f4:	f7 f8       	bld	r15, 7
    42f6:	f0 94       	com	r15
    42f8:	c0 e0       	ldi	r28, 0x00	; 0
    42fa:	60 e0       	ldi	r22, 0x00	; 0
    42fc:	70 e0       	ldi	r23, 0x00	; 0
    42fe:	80 e0       	ldi	r24, 0x00	; 0
    4300:	9f e3       	ldi	r25, 0x3F	; 63
    4302:	7c 16       	cp	r7, r28
    4304:	41 f0       	breq	.+16     	; 0x4316 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x100>
    4306:	20 e0       	ldi	r18, 0x00	; 0
    4308:	30 e0       	ldi	r19, 0x00	; 0
    430a:	40 e2       	ldi	r20, 0x20	; 32
    430c:	51 e4       	ldi	r21, 0x41	; 65
    430e:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    4312:	cf 5f       	subi	r28, 0xFF	; 255
    4314:	f6 cf       	rjmp	.-20     	; 0x4302 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0xec>
    4316:	a7 01       	movw	r20, r14
    4318:	96 01       	movw	r18, r12
    431a:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    431e:	2b 01       	movw	r4, r22
    4320:	3c 01       	movw	r6, r24
    4322:	0e 94 5e 3a 	call	0x74bc	; 0x74bc <__fixunssfsi>
    4326:	4b 01       	movw	r8, r22
    4328:	5c 01       	movw	r10, r24
print():
    432a:	4a e0       	ldi	r20, 0x0A	; 10
    432c:	37 df       	rcall	.-402    	; 0x419c <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]>
printFloat():
    432e:	7c 01       	movw	r14, r24
    4330:	e0 0e       	add	r14, r16
    4332:	f1 1e       	adc	r15, r17
    4334:	cc 23       	and	r28, r28
    4336:	a9 f1       	breq	.+106    	; 0x43a2 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x18c>
    4338:	c5 01       	movw	r24, r10
    433a:	b4 01       	movw	r22, r8
    433c:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
    4340:	9b 01       	movw	r18, r22
    4342:	ac 01       	movw	r20, r24
    4344:	c3 01       	movw	r24, r6
    4346:	b2 01       	movw	r22, r4
    4348:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    434c:	4b 01       	movw	r8, r22
    434e:	5c 01       	movw	r10, r24
write():
    4350:	86 ef       	ldi	r24, 0xF6	; 246
    4352:	99 eb       	ldi	r25, 0xB9	; 185
    4354:	16 df       	rcall	.-468    	; 0x4182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
printFloat():
    4356:	e8 0e       	add	r14, r24
    4358:	f9 1e       	adc	r15, r25
    435a:	c1 50       	subi	r28, 0x01	; 1
    435c:	10 f1       	brcs	.+68     	; 0x43a2 <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x18c>
    435e:	20 e0       	ldi	r18, 0x00	; 0
    4360:	30 e0       	ldi	r19, 0x00	; 0
    4362:	40 e2       	ldi	r20, 0x20	; 32
    4364:	51 e4       	ldi	r21, 0x41	; 65
    4366:	c5 01       	movw	r24, r10
    4368:	b4 01       	movw	r22, r8
    436a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    436e:	2b 01       	movw	r4, r22
    4370:	3c 01       	movw	r6, r24
    4372:	0e 94 5e 3a 	call	0x74bc	; 0x74bc <__fixunssfsi>
print():
    4376:	4b 01       	movw	r8, r22
    4378:	b1 2c       	mov	r11, r1
    437a:	a1 2c       	mov	r10, r1
    437c:	4a e0       	ldi	r20, 0x0A	; 10
    437e:	c5 01       	movw	r24, r10
    4380:	b4 01       	movw	r22, r8
    4382:	0c df       	rcall	.-488    	; 0x419c <Print::printNumber(unsigned long, unsigned char) [clone .constprop.26]>
printFloat():
    4384:	e8 0e       	add	r14, r24
    4386:	f9 1e       	adc	r15, r25
    4388:	c5 01       	movw	r24, r10
    438a:	b4 01       	movw	r22, r8
    438c:	0e 94 8a 3a 	call	0x7514	; 0x7514 <__floatunsisf>
    4390:	9b 01       	movw	r18, r22
    4392:	ac 01       	movw	r20, r24
    4394:	c3 01       	movw	r24, r6
    4396:	b2 01       	movw	r22, r4
    4398:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    439c:	4b 01       	movw	r8, r22
    439e:	5c 01       	movw	r10, r24
    43a0:	dc cf       	rjmp	.-72     	; 0x435a <Print::printFloat(double, unsigned char) [clone .constprop.21]+0x144>
    43a2:	c7 01       	movw	r24, r14
    43a4:	cf 91       	pop	r28
    43a6:	1f 91       	pop	r17
    43a8:	0f 91       	pop	r16
    43aa:	ff 90       	pop	r15
    43ac:	ef 90       	pop	r14
    43ae:	df 90       	pop	r13
    43b0:	cf 90       	pop	r12
    43b2:	bf 90       	pop	r11
    43b4:	af 90       	pop	r10
    43b6:	9f 90       	pop	r9
    43b8:	8f 90       	pop	r8
    43ba:	7f 90       	pop	r7
    43bc:	6f 90       	pop	r6
    43be:	5f 90       	pop	r5
    43c0:	4f 90       	pop	r4
    43c2:	08 95       	ret

000043c4 <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    43c4:	8f 92       	push	r8
    43c6:	9f 92       	push	r9
    43c8:	af 92       	push	r10
    43ca:	bf 92       	push	r11
    43cc:	cf 92       	push	r12
    43ce:	df 92       	push	r13
    43d0:	ef 92       	push	r14
    43d2:	ff 92       	push	r15
    43d4:	cf 93       	push	r28
    43d6:	df 93       	push	r29
    43d8:	c0 91 28 28 	lds	r28, 0x2828	; 0x802828 <sample>
    43dc:	d0 91 29 28 	lds	r29, 0x2829	; 0x802829 <sample+0x1>
    43e0:	21 96       	adiw	r28, 0x01	; 1
    43e2:	c0 93 28 28 	sts	0x2828, r28	; 0x802828 <sample>
    43e6:	d0 93 29 28 	sts	0x2829, r29	; 0x802829 <sample+0x1>
analogRead():
    43ea:	81 e0       	ldi	r24, 0x01	; 1
    43ec:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    43f0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
    43f4:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
    43f8:	80 ff       	sbrs	r24, 0
    43fa:	fc cf       	rjmp	.-8      	; 0x43f4 <RTD_TEMP_CAL()+0x30>
    43fc:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    4400:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
    4404:	07 2e       	mov	r0, r23
    4406:	00 0c       	add	r0, r0
    4408:	88 0b       	sbc	r24, r24
    440a:	99 0b       	sbc	r25, r25
    440c:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    4410:	20 91 24 28 	lds	r18, 0x2824	; 0x802824 <TotalVout>
    4414:	30 91 25 28 	lds	r19, 0x2825	; 0x802825 <TotalVout+0x1>
    4418:	40 91 26 28 	lds	r20, 0x2826	; 0x802826 <TotalVout+0x2>
    441c:	50 91 27 28 	lds	r21, 0x2827	; 0x802827 <TotalVout+0x3>
    4420:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    4424:	6b 01       	movw	r12, r22
    4426:	7c 01       	movw	r14, r24
    4428:	c0 92 24 28 	sts	0x2824, r12	; 0x802824 <TotalVout>
    442c:	d0 92 25 28 	sts	0x2825, r13	; 0x802825 <TotalVout+0x1>
    4430:	e0 92 26 28 	sts	0x2826, r14	; 0x802826 <TotalVout+0x2>
    4434:	f0 92 27 28 	sts	0x2827, r15	; 0x802827 <TotalVout+0x3>
    4438:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    443c:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    4440:	c6 17       	cp	r28, r22
    4442:	d7 07       	cpc	r29, r23
    4444:	0c f4       	brge	.+2      	; 0x4448 <RTD_TEMP_CAL()+0x84>
    4446:	90 c0       	rjmp	.+288    	; 0x4568 <RTD_TEMP_CAL()+0x1a4>
    4448:	07 2e       	mov	r0, r23
    444a:	00 0c       	add	r0, r0
    444c:	88 0b       	sbc	r24, r24
    444e:	99 0b       	sbc	r25, r25
    4450:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    4454:	9b 01       	movw	r18, r22
    4456:	ac 01       	movw	r20, r24
    4458:	c7 01       	movw	r24, r14
    445a:	b6 01       	movw	r22, r12
    445c:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    4460:	60 93 24 28 	sts	0x2824, r22	; 0x802824 <TotalVout>
    4464:	70 93 25 28 	sts	0x2825, r23	; 0x802825 <TotalVout+0x1>
    4468:	80 93 26 28 	sts	0x2826, r24	; 0x802826 <TotalVout+0x2>
    446c:	90 93 27 28 	sts	0x2827, r25	; 0x802827 <TotalVout+0x3>
    4470:	20 e0       	ldi	r18, 0x00	; 0
    4472:	30 e0       	ldi	r19, 0x00	; 0
    4474:	40 ea       	ldi	r20, 0xA0	; 160
    4476:	50 e4       	ldi	r21, 0x40	; 64
    4478:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    447c:	20 e0       	ldi	r18, 0x00	; 0
    447e:	30 ec       	ldi	r19, 0xC0	; 192
    4480:	4f e7       	ldi	r20, 0x7F	; 127
    4482:	54 e4       	ldi	r21, 0x44	; 68
    4484:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    4488:	20 e0       	ldi	r18, 0x00	; 0
    448a:	30 e0       	ldi	r19, 0x00	; 0
    448c:	40 e2       	ldi	r20, 0x20	; 32
    448e:	51 e4       	ldi	r21, 0x41	; 65
    4490:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    4494:	28 eb       	ldi	r18, 0xB8	; 184
    4496:	3f e8       	ldi	r19, 0x8F	; 143
    4498:	40 e6       	ldi	r20, 0x60	; 96
    449a:	5f e3       	ldi	r21, 0x3F	; 63
    449c:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    44a0:	6b 01       	movw	r12, r22
    44a2:	7c 01       	movw	r14, r24
    44a4:	20 e0       	ldi	r18, 0x00	; 0
    44a6:	30 e0       	ldi	r19, 0x00	; 0
    44a8:	4b ee       	ldi	r20, 0xEB	; 235
    44aa:	53 e4       	ldi	r21, 0x43	; 67
    44ac:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    44b0:	4b 01       	movw	r8, r22
    44b2:	5c 01       	movw	r10, r24
    44b4:	a7 01       	movw	r20, r14
    44b6:	96 01       	movw	r18, r12
    44b8:	60 e0       	ldi	r22, 0x00	; 0
    44ba:	70 e0       	ldi	r23, 0x00	; 0
    44bc:	80 ea       	ldi	r24, 0xA0	; 160
    44be:	90 e4       	ldi	r25, 0x40	; 64
    44c0:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    44c4:	9b 01       	movw	r18, r22
    44c6:	ac 01       	movw	r20, r24
    44c8:	c5 01       	movw	r24, r10
    44ca:	b4 01       	movw	r22, r8
    44cc:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    44d0:	20 e0       	ldi	r18, 0x00	; 0
    44d2:	30 e0       	ldi	r19, 0x00	; 0
    44d4:	48 ec       	ldi	r20, 0xC8	; 200
    44d6:	52 e4       	ldi	r21, 0x42	; 66
    44d8:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    44dc:	20 e0       	ldi	r18, 0x00	; 0
    44de:	30 e0       	ldi	r19, 0x00	; 0
    44e0:	40 e8       	ldi	r20, 0x80	; 128
    44e2:	5f e3       	ldi	r21, 0x3F	; 63
    44e4:	0e 94 88 39 	call	0x7310	; 0x7310 <__subsf3>
    44e8:	28 e4       	ldi	r18, 0x48	; 72
    44ea:	30 e5       	ldi	r19, 0x50	; 80
    44ec:	4c e7       	ldi	r20, 0x7C	; 124
    44ee:	5b e3       	ldi	r21, 0x3B	; 59
    44f0:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    44f4:	60 93 02 29 	sts	0x2902, r22	; 0x802902 <TEMP_DEG_RAW>
    44f8:	70 93 03 29 	sts	0x2903, r23	; 0x802903 <TEMP_DEG_RAW+0x1>
    44fc:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <TEMP_DEG_RAW+0x2>
    4500:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <TEMP_DEG_RAW+0x3>
print():
    4504:	42 e0       	ldi	r20, 0x02	; 2
    4506:	87 de       	rcall	.-754    	; 0x4216 <Print::printFloat(double, unsigned char) [clone .constprop.21]>
write():
    4508:	88 ef       	ldi	r24, 0xF8	; 248
    450a:	99 eb       	ldi	r25, 0xB9	; 185
    450c:	3a de       	rcall	.-908    	; 0x4182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
print():
    450e:	60 91 20 28 	lds	r22, 0x2820	; 0x802820 <TEMP_DEG_RAW_1>
    4512:	70 91 21 28 	lds	r23, 0x2821	; 0x802821 <TEMP_DEG_RAW_1+0x1>
    4516:	80 91 22 28 	lds	r24, 0x2822	; 0x802822 <TEMP_DEG_RAW_1+0x2>
    451a:	90 91 23 28 	lds	r25, 0x2823	; 0x802823 <TEMP_DEG_RAW_1+0x3>
    451e:	42 e0       	ldi	r20, 0x02	; 2
    4520:	7a de       	rcall	.-780    	; 0x4216 <Print::printFloat(double, unsigned char) [clone .constprop.21]>
write():
    4522:	8a ef       	ldi	r24, 0xFA	; 250
    4524:	99 eb       	ldi	r25, 0xB9	; 185
    4526:	2d de       	rcall	.-934    	; 0x4182 <Print::write(char const*) [clone .part.2] [clone .constprop.30]>
RTD_TEMP_CAL():
    4528:	26 e6       	ldi	r18, 0x66	; 102
    452a:	36 e6       	ldi	r19, 0x66	; 102
    452c:	46 ee       	ldi	r20, 0xE6	; 230
    452e:	5f e3       	ldi	r21, 0x3F	; 63
    4530:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    4534:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    4538:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    453c:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    4540:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    4544:	20 e0       	ldi	r18, 0x00	; 0
    4546:	30 e0       	ldi	r19, 0x00	; 0
    4548:	40 e0       	ldi	r20, 0x00	; 0
    454a:	52 e4       	ldi	r21, 0x42	; 66
    454c:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    4550:	60 93 de 28 	sts	0x28DE, r22	; 0x8028de <TEMP_FAH_RAW>
    4554:	70 93 df 28 	sts	0x28DF, r23	; 0x8028df <TEMP_FAH_RAW+0x1>
    4558:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    455c:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    4560:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <sample>
    4564:	10 92 29 28 	sts	0x2829, r1	; 0x802829 <sample+0x1>
    4568:	82 e3       	ldi	r24, 0x32	; 50
    456a:	90 e0       	ldi	r25, 0x00	; 0
    456c:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
    4570:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    4574:	df 91       	pop	r29
    4576:	cf 91       	pop	r28
    4578:	ff 90       	pop	r15
    457a:	ef 90       	pop	r14
    457c:	df 90       	pop	r13
    457e:	cf 90       	pop	r12
    4580:	bf 90       	pop	r11
    4582:	af 90       	pop	r10
    4584:	9f 90       	pop	r9
    4586:	8f 90       	pop	r8
    4588:	08 95       	ret

0000458a <__vector_32>:
__vector_32():
    458a:	1f 92       	push	r1
    458c:	0f 92       	push	r0
    458e:	0f b6       	in	r0, 0x3f	; 63
    4590:	0f 92       	push	r0
    4592:	11 24       	eor	r1, r1
    4594:	2f 93       	push	r18
    4596:	3f 93       	push	r19
    4598:	4f 93       	push	r20
    459a:	5f 93       	push	r21
    459c:	6f 93       	push	r22
    459e:	7f 93       	push	r23
    45a0:	8f 93       	push	r24
    45a2:	9f 93       	push	r25
    45a4:	af 93       	push	r26
    45a6:	bf 93       	push	r27
    45a8:	ef 93       	push	r30
    45aa:	ff 93       	push	r31
    45ac:	85 e5       	ldi	r24, 0x55	; 85
    45ae:	99 e2       	ldi	r25, 0x29	; 41
    45b0:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <UartClass::_tx_data_empty_irq()>
    45b4:	ff 91       	pop	r31
    45b6:	ef 91       	pop	r30
    45b8:	bf 91       	pop	r27
    45ba:	af 91       	pop	r26
    45bc:	9f 91       	pop	r25
    45be:	8f 91       	pop	r24
    45c0:	7f 91       	pop	r23
    45c2:	6f 91       	pop	r22
    45c4:	5f 91       	pop	r21
    45c6:	4f 91       	pop	r20
    45c8:	3f 91       	pop	r19
    45ca:	2f 91       	pop	r18
    45cc:	0f 90       	pop	r0
    45ce:	0f be       	out	0x3f, r0	; 63
    45d0:	0f 90       	pop	r0
    45d2:	1f 90       	pop	r1
    45d4:	18 95       	reti

000045d6 <__vector_31>:
__vector_31():
    45d6:	1f 92       	push	r1
    45d8:	0f 92       	push	r0
    45da:	0f b6       	in	r0, 0x3f	; 63
    45dc:	0f 92       	push	r0
    45de:	11 24       	eor	r1, r1
    45e0:	2f 93       	push	r18
    45e2:	8f 93       	push	r24
    45e4:	9f 93       	push	r25
    45e6:	ef 93       	push	r30
    45e8:	ff 93       	push	r31
_rx_complete_irq():
    45ea:	e0 91 61 29 	lds	r30, 0x2961	; 0x802961 <Serial2+0xc>
    45ee:	f0 91 62 29 	lds	r31, 0x2962	; 0x802962 <Serial2+0xd>
    45f2:	81 81       	ldd	r24, Z+1	; 0x01
    45f4:	81 fd       	sbrc	r24, 1
    45f6:	1b c0       	rjmp	.+54     	; 0x462e <__vector_31+0x58>
    45f8:	90 81       	ld	r25, Z
    45fa:	80 91 6b 29 	lds	r24, 0x296B	; 0x80296b <Serial2+0x16>
    45fe:	8f 5f       	subi	r24, 0xFF	; 255
    4600:	8f 73       	andi	r24, 0x3F	; 63
    4602:	20 91 6c 29 	lds	r18, 0x296C	; 0x80296c <Serial2+0x17>
    4606:	82 17       	cp	r24, r18
    4608:	41 f0       	breq	.+16     	; 0x461a <__vector_31+0x44>
    460a:	e0 91 6b 29 	lds	r30, 0x296B	; 0x80296b <Serial2+0x16>
    460e:	f0 e0       	ldi	r31, 0x00	; 0
    4610:	eb 5a       	subi	r30, 0xAB	; 171
    4612:	f6 4d       	sbci	r31, 0xD6	; 214
    4614:	95 8f       	std	Z+29, r25	; 0x1d
    4616:	80 93 6b 29 	sts	0x296B, r24	; 0x80296b <Serial2+0x16>
__vector_31():
    461a:	ff 91       	pop	r31
    461c:	ef 91       	pop	r30
    461e:	9f 91       	pop	r25
    4620:	8f 91       	pop	r24
    4622:	2f 91       	pop	r18
    4624:	0f 90       	pop	r0
    4626:	0f be       	out	0x3f, r0	; 63
    4628:	0f 90       	pop	r0
    462a:	1f 90       	pop	r1
    462c:	18 95       	reti
_rx_complete_irq():
    462e:	80 81       	ld	r24, Z
    4630:	f4 cf       	rjmp	.-24     	; 0x461a <__vector_31+0x44>

00004632 <__vector_25>:
__vector_25():
    4632:	1f 92       	push	r1
    4634:	0f 92       	push	r0
    4636:	0f b6       	in	r0, 0x3f	; 63
    4638:	0f 92       	push	r0
    463a:	11 24       	eor	r1, r1
    463c:	8f 93       	push	r24
    463e:	9f 93       	push	r25
    4640:	af 93       	push	r26
    4642:	bf 93       	push	r27
    4644:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <timer_millis>
    4648:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <timer_millis+0x1>
    464c:	a0 91 3f 28 	lds	r26, 0x283F	; 0x80283f <timer_millis+0x2>
    4650:	b0 91 40 28 	lds	r27, 0x2840	; 0x802840 <timer_millis+0x3>
    4654:	01 96       	adiw	r24, 0x01	; 1
    4656:	a1 1d       	adc	r26, r1
    4658:	b1 1d       	adc	r27, r1
    465a:	80 93 3d 28 	sts	0x283D, r24	; 0x80283d <timer_millis>
    465e:	90 93 3e 28 	sts	0x283E, r25	; 0x80283e <timer_millis+0x1>
    4662:	a0 93 3f 28 	sts	0x283F, r26	; 0x80283f <timer_millis+0x2>
    4666:	b0 93 40 28 	sts	0x2840, r27	; 0x802840 <timer_millis+0x3>
    466a:	81 e0       	ldi	r24, 0x01	; 1
    466c:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    4670:	bf 91       	pop	r27
    4672:	af 91       	pop	r26
    4674:	9f 91       	pop	r25
    4676:	8f 91       	pop	r24
    4678:	0f 90       	pop	r0
    467a:	0f be       	out	0x3f, r0	; 63
    467c:	0f 90       	pop	r0
    467e:	1f 90       	pop	r1
    4680:	18 95       	reti

00004682 <__vector_7>:
__vector_7():
    4682:	1f 92       	push	r1
    4684:	0f 92       	push	r0
    4686:	0f b6       	in	r0, 0x3f	; 63
    4688:	0f 92       	push	r0
    468a:	11 24       	eor	r1, r1
    468c:	2f 93       	push	r18
    468e:	3f 93       	push	r19
    4690:	4f 93       	push	r20
    4692:	5f 93       	push	r21
    4694:	6f 93       	push	r22
    4696:	7f 93       	push	r23
    4698:	8f 93       	push	r24
    469a:	9f 93       	push	r25
    469c:	af 93       	push	r26
    469e:	bf 93       	push	r27
    46a0:	ef 93       	push	r30
    46a2:	ff 93       	push	r31
TICKER_UPDATE():
    46a4:	82 e1       	ldi	r24, 0x12	; 18
    46a6:	9b e2       	ldi	r25, 0x2B	; 43
    46a8:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
PID_Tick_Update():
    46ac:	8a e3       	ldi	r24, 0x3A	; 58
    46ae:	9a e2       	ldi	r25, 0x2A	; 42
    46b0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
Rtd_Temp_Update():
    46b4:	8b e8       	ldi	r24, 0x8B	; 139
    46b6:	9a e2       	ldi	r25, 0x2A	; 42
    46b8:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
Rtd_Temp_Update_1():
    46bc:	80 e7       	ldi	r24, 0x70	; 112
    46be:	9a e2       	ldi	r25, 0x2A	; 42
    46c0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
TICKER_UPDATE():
    46c4:	87 ef       	ldi	r24, 0xF7	; 247
    46c6:	9a e2       	ldi	r25, 0x2A	; 42
    46c8:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    46cc:	8c ed       	ldi	r24, 0xDC	; 220
    46ce:	9a e2       	ldi	r25, 0x2A	; 42
    46d0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    46d4:	81 ec       	ldi	r24, 0xC1	; 193
    46d6:	9a e2       	ldi	r25, 0x2A	; 42
    46d8:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    46dc:	86 ea       	ldi	r24, 0xA6	; 166
    46de:	9a e2       	ldi	r25, 0x2A	; 42
    46e0:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
__vector_7():
    46e4:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    46e8:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    46ec:	01 96       	adiw	r24, 0x01	; 1
    46ee:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    46f2:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
TIME_CAL():
    46f6:	80 91 67 28 	lds	r24, 0x2867	; 0x802867 <COUNTDOWN_START>
    46fa:	88 23       	and	r24, r24
    46fc:	81 f1       	breq	.+96     	; 0x475e <__vector_7+0xdc>
    46fe:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <__data_end>
    4702:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <__data_end+0x1>
    4706:	01 96       	adiw	r24, 0x01	; 1
    4708:	80 93 18 28 	sts	0x2818, r24	; 0x802818 <__data_end>
    470c:	90 93 19 28 	sts	0x2819, r25	; 0x802819 <__data_end+0x1>
    4710:	80 3b       	cpi	r24, 0xB0	; 176
    4712:	9e 40       	sbci	r25, 0x0E	; 14
    4714:	21 f5       	brne	.+72     	; 0x475e <__vector_7+0xdc>
    4716:	80 91 5b 28 	lds	r24, 0x285B	; 0x80285b <actualRunMin>
    471a:	90 91 5c 28 	lds	r25, 0x285C	; 0x80285c <actualRunMin+0x1>
    471e:	a0 91 5d 28 	lds	r26, 0x285D	; 0x80285d <actualRunMin+0x2>
    4722:	b0 91 5e 28 	lds	r27, 0x285E	; 0x80285e <actualRunMin+0x3>
    4726:	01 96       	adiw	r24, 0x01	; 1
    4728:	a1 1d       	adc	r26, r1
    472a:	b1 1d       	adc	r27, r1
    472c:	80 93 5b 28 	sts	0x285B, r24	; 0x80285b <actualRunMin>
    4730:	90 93 5c 28 	sts	0x285C, r25	; 0x80285c <actualRunMin+0x1>
    4734:	a0 93 5d 28 	sts	0x285D, r26	; 0x80285d <actualRunMin+0x2>
    4738:	b0 93 5e 28 	sts	0x285E, r27	; 0x80285e <actualRunMin+0x3>
    473c:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <SET_MIN>
    4740:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <SET_MIN+0x1>
    4744:	01 97       	sbiw	r24, 0x01	; 1
    4746:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <SET_MIN>
    474a:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <SET_MIN+0x1>
    474e:	10 92 18 28 	sts	0x2818, r1	; 0x802818 <__data_end>
    4752:	10 92 19 28 	sts	0x2819, r1	; 0x802819 <__data_end+0x1>
    4756:	89 2b       	or	r24, r25
    4758:	11 f4       	brne	.+4      	; 0x475e <__vector_7+0xdc>
    475a:	10 92 67 28 	sts	0x2867, r1	; 0x802867 <COUNTDOWN_START>
__vector_7():
    475e:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    4762:	88 23       	and	r24, r24
    4764:	79 f0       	breq	.+30     	; 0x4784 <__vector_7+0x102>
    4766:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    476a:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    476e:	43 97       	sbiw	r24, 0x13	; 19
    4770:	49 f4       	brne	.+18     	; 0x4784 <__vector_7+0x102>
    4772:	80 91 48 28 	lds	r24, 0x2848	; 0x802848 <currentMillis>
    4776:	90 91 49 28 	lds	r25, 0x2849	; 0x802849 <currentMillis+0x1>
    477a:	01 96       	adiw	r24, 0x01	; 1
    477c:	80 93 48 28 	sts	0x2848, r24	; 0x802848 <currentMillis>
    4780:	90 93 49 28 	sts	0x2849, r25	; 0x802849 <currentMillis+0x1>
    4784:	81 e0       	ldi	r24, 0x01	; 1
    4786:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    478a:	ff 91       	pop	r31
    478c:	ef 91       	pop	r30
    478e:	bf 91       	pop	r27
    4790:	af 91       	pop	r26
    4792:	9f 91       	pop	r25
    4794:	8f 91       	pop	r24
    4796:	7f 91       	pop	r23
    4798:	6f 91       	pop	r22
    479a:	5f 91       	pop	r21
    479c:	4f 91       	pop	r20
    479e:	3f 91       	pop	r19
    47a0:	2f 91       	pop	r18
    47a2:	0f 90       	pop	r0
    47a4:	0f be       	out	0x3f, r0	; 63
    47a6:	0f 90       	pop	r0
    47a8:	1f 90       	pop	r1
    47aa:	18 95       	reti

000047ac <global constructors keyed to 65535_0_Butn.cpp.o.4275>:
_GLOBAL__I_65535_0_Butn.cpp.o.4275():
    47ac:	4f 92       	push	r4
    47ae:	5f 92       	push	r5
    47b0:	6f 92       	push	r6
    47b2:	7f 92       	push	r7
    47b4:	8f 92       	push	r8
    47b6:	9f 92       	push	r9
    47b8:	af 92       	push	r10
    47ba:	bf 92       	push	r11
    47bc:	cf 92       	push	r12
    47be:	df 92       	push	r13
    47c0:	ef 92       	push	r14
    47c2:	ff 92       	push	r15
    47c4:	cf 93       	push	r28
    47c6:	df 93       	push	r29
    47c8:	10 92 57 29 	sts	0x2957, r1	; 0x802957 <Serial2+0x2>
    47cc:	10 92 58 29 	sts	0x2958, r1	; 0x802958 <Serial2+0x3>
    47d0:	88 ee       	ldi	r24, 0xE8	; 232
    47d2:	48 2e       	mov	r4, r24
    47d4:	83 e0       	ldi	r24, 0x03	; 3
    47d6:	58 2e       	mov	r5, r24
    47d8:	61 2c       	mov	r6, r1
    47da:	71 2c       	mov	r7, r1
    47dc:	40 92 59 29 	sts	0x2959, r4	; 0x802959 <Serial2+0x4>
    47e0:	50 92 5a 29 	sts	0x295A, r5	; 0x80295a <Serial2+0x5>
    47e4:	60 92 5b 29 	sts	0x295B, r6	; 0x80295b <Serial2+0x6>
    47e8:	70 92 5c 29 	sts	0x295C, r7	; 0x80295c <Serial2+0x7>
    47ec:	80 ed       	ldi	r24, 0xD0	; 208
    47ee:	99 eb       	ldi	r25, 0xB9	; 185
    47f0:	80 93 55 29 	sts	0x2955, r24	; 0x802955 <Serial2>
    47f4:	90 93 56 29 	sts	0x2956, r25	; 0x802956 <Serial2+0x1>
    47f8:	80 e4       	ldi	r24, 0x40	; 64
    47fa:	98 e0       	ldi	r25, 0x08	; 8
    47fc:	80 93 61 29 	sts	0x2961, r24	; 0x802961 <Serial2+0xc>
    4800:	90 93 62 29 	sts	0x2962, r25	; 0x802962 <Serial2+0xd>
    4804:	83 e2       	ldi	r24, 0x23	; 35
    4806:	80 93 63 29 	sts	0x2963, r24	; 0x802963 <Serial2+0xe>
    480a:	82 e2       	ldi	r24, 0x22	; 34
    480c:	80 93 64 29 	sts	0x2964, r24	; 0x802964 <Serial2+0xf>
    4810:	10 92 65 29 	sts	0x2965, r1	; 0x802965 <Serial2+0x10>
    4814:	87 e2       	ldi	r24, 0x27	; 39
    4816:	80 93 66 29 	sts	0x2966, r24	; 0x802966 <Serial2+0x11>
    481a:	86 e2       	ldi	r24, 0x26	; 38
    481c:	80 93 67 29 	sts	0x2967, r24	; 0x802967 <Serial2+0x12>
    4820:	80 e1       	ldi	r24, 0x10	; 16
    4822:	80 93 68 29 	sts	0x2968, r24	; 0x802968 <Serial2+0x13>
    4826:	10 92 69 29 	sts	0x2969, r1	; 0x802969 <Serial2+0x14>
    482a:	10 92 6a 29 	sts	0x296A, r1	; 0x80296a <Serial2+0x15>
    482e:	10 92 6b 29 	sts	0x296B, r1	; 0x80296b <Serial2+0x16>
    4832:	10 92 6c 29 	sts	0x296C, r1	; 0x80296c <Serial2+0x17>
    4836:	10 92 6d 29 	sts	0x296D, r1	; 0x80296d <Serial2+0x18>
    483a:	10 92 6e 29 	sts	0x296E, r1	; 0x80296e <Serial2+0x19>
    483e:	80 e2       	ldi	r24, 0x20	; 32
    4840:	80 93 6f 29 	sts	0x296F, r24	; 0x80296f <Serial2+0x1a>
    4844:	10 92 70 29 	sts	0x2970, r1	; 0x802970 <Serial2+0x1b>
    4848:	10 92 71 29 	sts	0x2971, r1	; 0x802971 <Serial2+0x1c>
    484c:	82 e0       	ldi	r24, 0x02	; 2
    484e:	90 e0       	ldi	r25, 0x00	; 0
    4850:	80 93 e8 2b 	sts	0x2BE8, r24	; 0x802be8 <DISP+0x9>
    4854:	90 93 e9 2b 	sts	0x2BE9, r25	; 0x802be9 <DISP+0xa>
    4858:	80 e8       	ldi	r24, 0x80	; 128
    485a:	9c e0       	ldi	r25, 0x0C	; 12
    485c:	a0 e0       	ldi	r26, 0x00	; 0
    485e:	b0 e0       	ldi	r27, 0x00	; 0
    4860:	80 93 e0 2b 	sts	0x2BE0, r24	; 0x802be0 <DISP+0x1>
    4864:	90 93 e1 2b 	sts	0x2BE1, r25	; 0x802be1 <DISP+0x2>
    4868:	a0 93 e2 2b 	sts	0x2BE2, r26	; 0x802be2 <DISP+0x3>
    486c:	b0 93 e3 2b 	sts	0x2BE3, r27	; 0x802be3 <DISP+0x4>
    4870:	10 92 e4 2b 	sts	0x2BE4, r1	; 0x802be4 <DISP+0x5>
    4874:	10 92 e5 2b 	sts	0x2BE5, r1	; 0x802be5 <DISP+0x6>
    4878:	10 92 e6 2b 	sts	0x2BE6, r1	; 0x802be6 <DISP+0x7>
    487c:	10 92 e7 2b 	sts	0x2BE7, r1	; 0x802be7 <DISP+0x8>
    4880:	84 ef       	ldi	r24, 0xF4	; 244
    4882:	9f e1       	ldi	r25, 0x1F	; 31
    4884:	80 93 f0 2b 	sts	0x2BF0, r24	; 0x802bf0 <DISP+0x11>
    4888:	90 93 f1 2b 	sts	0x2BF1, r25	; 0x802bf1 <DISP+0x12>
    488c:	10 92 df 2b 	sts	0x2BDF, r1	; 0x802bdf <DISP>
    4890:	10 92 f2 2b 	sts	0x2BF2, r1	; 0x802bf2 <DISP+0x13>
    4894:	10 92 f3 2b 	sts	0x2BF3, r1	; 0x802bf3 <DISP+0x14>
    4898:	10 92 f4 2b 	sts	0x2BF4, r1	; 0x802bf4 <DISP+0x15>
    489c:	10 92 f5 2b 	sts	0x2BF5, r1	; 0x802bf5 <DISP+0x16>
    48a0:	10 92 ea 2b 	sts	0x2BEA, r1	; 0x802bea <DISP+0xb>
    48a4:	10 92 eb 2b 	sts	0x2BEB, r1	; 0x802beb <DISP+0xc>
    48a8:	10 92 ec 2b 	sts	0x2BEC, r1	; 0x802bec <DISP+0xd>
    48ac:	10 92 ed 2b 	sts	0x2BED, r1	; 0x802bed <DISP+0xe>
    48b0:	10 92 cd 2b 	sts	0x2BCD, r1	; 0x802bcd <VersionDisplay+0x9>
    48b4:	10 92 ce 2b 	sts	0x2BCE, r1	; 0x802bce <VersionDisplay+0xa>
    48b8:	90 e4       	ldi	r25, 0x40	; 64
    48ba:	89 2e       	mov	r8, r25
    48bc:	92 e4       	ldi	r25, 0x42	; 66
    48be:	99 2e       	mov	r9, r25
    48c0:	9f e0       	ldi	r25, 0x0F	; 15
    48c2:	a9 2e       	mov	r10, r25
    48c4:	b1 2c       	mov	r11, r1
    48c6:	80 92 c5 2b 	sts	0x2BC5, r8	; 0x802bc5 <VersionDisplay+0x1>
    48ca:	90 92 c6 2b 	sts	0x2BC6, r9	; 0x802bc6 <VersionDisplay+0x2>
    48ce:	a0 92 c7 2b 	sts	0x2BC7, r10	; 0x802bc7 <VersionDisplay+0x3>
    48d2:	b0 92 c8 2b 	sts	0x2BC8, r11	; 0x802bc8 <VersionDisplay+0x4>
    48d6:	c1 2c       	mov	r12, r1
    48d8:	d1 2c       	mov	r13, r1
    48da:	76 01       	movw	r14, r12
    48dc:	c3 94       	inc	r12
    48de:	c0 92 c9 2b 	sts	0x2BC9, r12	; 0x802bc9 <VersionDisplay+0x5>
    48e2:	d0 92 ca 2b 	sts	0x2BCA, r13	; 0x802bca <VersionDisplay+0x6>
    48e6:	e0 92 cb 2b 	sts	0x2BCB, r14	; 0x802bcb <VersionDisplay+0x7>
    48ea:	f0 92 cc 2b 	sts	0x2BCC, r15	; 0x802bcc <VersionDisplay+0x8>
    48ee:	8a e7       	ldi	r24, 0x7A	; 122
    48f0:	91 e0       	ldi	r25, 0x01	; 1
    48f2:	80 93 d5 2b 	sts	0x2BD5, r24	; 0x802bd5 <VersionDisplay+0x11>
    48f6:	90 93 d6 2b 	sts	0x2BD6, r25	; 0x802bd6 <VersionDisplay+0x12>
    48fa:	10 92 c4 2b 	sts	0x2BC4, r1	; 0x802bc4 <VersionDisplay>
    48fe:	10 92 d7 2b 	sts	0x2BD7, r1	; 0x802bd7 <VersionDisplay+0x13>
    4902:	10 92 d8 2b 	sts	0x2BD8, r1	; 0x802bd8 <VersionDisplay+0x14>
    4906:	10 92 d9 2b 	sts	0x2BD9, r1	; 0x802bd9 <VersionDisplay+0x15>
    490a:	10 92 da 2b 	sts	0x2BDA, r1	; 0x802bda <VersionDisplay+0x16>
    490e:	10 92 cf 2b 	sts	0x2BCF, r1	; 0x802bcf <VersionDisplay+0xb>
    4912:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <VersionDisplay+0xc>
    4916:	10 92 d1 2b 	sts	0x2BD1, r1	; 0x802bd1 <VersionDisplay+0xd>
    491a:	10 92 d2 2b 	sts	0x2BD2, r1	; 0x802bd2 <VersionDisplay+0xe>
    491e:	63 e2       	ldi	r22, 0x23	; 35
    4920:	70 e0       	ldi	r23, 0x00	; 0
    4922:	85 ea       	ldi	r24, 0xA5	; 165
    4924:	9b e2       	ldi	r25, 0x2B	; 43
    4926:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <OneButton::OneButton(int, int) [clone .constprop.13]>
    492a:	65 e2       	ldi	r22, 0x25	; 37
    492c:	70 e0       	ldi	r23, 0x00	; 0
    492e:	86 e8       	ldi	r24, 0x86	; 134
    4930:	9b e2       	ldi	r25, 0x2B	; 43
    4932:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4936:	64 e2       	ldi	r22, 0x24	; 36
    4938:	70 e0       	ldi	r23, 0x00	; 0
    493a:	87 e6       	ldi	r24, 0x67	; 103
    493c:	9b e2       	ldi	r25, 0x2B	; 43
    493e:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4942:	62 e2       	ldi	r22, 0x22	; 34
    4944:	70 e0       	ldi	r23, 0x00	; 0
    4946:	88 e4       	ldi	r24, 0x48	; 72
    4948:	9b e2       	ldi	r25, 0x2B	; 43
    494a:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <OneButton::OneButton(int, int) [clone .constprop.13]>
    494e:	c1 e0       	ldi	r28, 0x01	; 1
    4950:	d0 e0       	ldi	r29, 0x00	; 0
    4952:	c0 93 36 2b 	sts	0x2B36, r28	; 0x802b36 <toggle_ticker+0x9>
    4956:	d0 93 37 2b 	sts	0x2B37, r29	; 0x802b37 <toggle_ticker+0xa>
    495a:	40 92 2e 2b 	sts	0x2B2E, r4	; 0x802b2e <toggle_ticker+0x1>
    495e:	50 92 2f 2b 	sts	0x2B2F, r5	; 0x802b2f <toggle_ticker+0x2>
    4962:	60 92 30 2b 	sts	0x2B30, r6	; 0x802b30 <toggle_ticker+0x3>
    4966:	70 92 31 2b 	sts	0x2B31, r7	; 0x802b31 <toggle_ticker+0x4>
    496a:	10 92 32 2b 	sts	0x2B32, r1	; 0x802b32 <toggle_ticker+0x5>
    496e:	10 92 33 2b 	sts	0x2B33, r1	; 0x802b33 <toggle_ticker+0x6>
    4972:	10 92 34 2b 	sts	0x2B34, r1	; 0x802b34 <toggle_ticker+0x7>
    4976:	10 92 35 2b 	sts	0x2B35, r1	; 0x802b35 <toggle_ticker+0x8>
    497a:	8d e7       	ldi	r24, 0x7D	; 125
    497c:	91 e0       	ldi	r25, 0x01	; 1
    497e:	80 93 3e 2b 	sts	0x2B3E, r24	; 0x802b3e <toggle_ticker+0x11>
    4982:	90 93 3f 2b 	sts	0x2B3F, r25	; 0x802b3f <toggle_ticker+0x12>
    4986:	10 92 2d 2b 	sts	0x2B2D, r1	; 0x802b2d <toggle_ticker>
    498a:	10 92 40 2b 	sts	0x2B40, r1	; 0x802b40 <toggle_ticker+0x13>
    498e:	10 92 41 2b 	sts	0x2B41, r1	; 0x802b41 <toggle_ticker+0x14>
    4992:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <toggle_ticker+0x15>
    4996:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <toggle_ticker+0x16>
    499a:	10 92 38 2b 	sts	0x2B38, r1	; 0x802b38 <toggle_ticker+0xb>
    499e:	10 92 39 2b 	sts	0x2B39, r1	; 0x802b39 <toggle_ticker+0xc>
    49a2:	10 92 3a 2b 	sts	0x2B3A, r1	; 0x802b3a <toggle_ticker+0xd>
    49a6:	10 92 3b 2b 	sts	0x2B3B, r1	; 0x802b3b <toggle_ticker+0xe>
    49aa:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <BUZZ+0x9>
    49ae:	10 92 1c 2b 	sts	0x2B1C, r1	; 0x802b1c <BUZZ+0xa>
    49b2:	80 ea       	ldi	r24, 0xA0	; 160
    49b4:	96 e8       	ldi	r25, 0x86	; 134
    49b6:	a1 e0       	ldi	r26, 0x01	; 1
    49b8:	b0 e0       	ldi	r27, 0x00	; 0
    49ba:	80 93 13 2b 	sts	0x2B13, r24	; 0x802b13 <BUZZ+0x1>
    49be:	90 93 14 2b 	sts	0x2B14, r25	; 0x802b14 <BUZZ+0x2>
    49c2:	a0 93 15 2b 	sts	0x2B15, r26	; 0x802b15 <BUZZ+0x3>
    49c6:	b0 93 16 2b 	sts	0x2B16, r27	; 0x802b16 <BUZZ+0x4>
    49ca:	c0 92 17 2b 	sts	0x2B17, r12	; 0x802b17 <BUZZ+0x5>
    49ce:	d0 92 18 2b 	sts	0x2B18, r13	; 0x802b18 <BUZZ+0x6>
    49d2:	e0 92 19 2b 	sts	0x2B19, r14	; 0x802b19 <BUZZ+0x7>
    49d6:	f0 92 1a 2b 	sts	0x2B1A, r15	; 0x802b1a <BUZZ+0x8>
    49da:	8a ec       	ldi	r24, 0xCA	; 202
    49dc:	9d e0       	ldi	r25, 0x0D	; 13
    49de:	80 93 23 2b 	sts	0x2B23, r24	; 0x802b23 <BUZZ+0x11>
    49e2:	90 93 24 2b 	sts	0x2B24, r25	; 0x802b24 <BUZZ+0x12>
    49e6:	10 92 12 2b 	sts	0x2B12, r1	; 0x802b12 <BUZZ>
    49ea:	10 92 25 2b 	sts	0x2B25, r1	; 0x802b25 <BUZZ+0x13>
    49ee:	10 92 26 2b 	sts	0x2B26, r1	; 0x802b26 <BUZZ+0x14>
    49f2:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <BUZZ+0x15>
    49f6:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <BUZZ+0x16>
    49fa:	10 92 1d 2b 	sts	0x2B1D, r1	; 0x802b1d <BUZZ+0xb>
    49fe:	10 92 1e 2b 	sts	0x2B1E, r1	; 0x802b1e <BUZZ+0xc>
    4a02:	10 92 1f 2b 	sts	0x2B1F, r1	; 0x802b1f <BUZZ+0xd>
    4a06:	10 92 20 2b 	sts	0x2B20, r1	; 0x802b20 <BUZZ+0xe>
    4a0a:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <BUZZ_TICK1+0x9>
    4a0e:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <BUZZ_TICK1+0xa>
    4a12:	80 e8       	ldi	r24, 0x80	; 128
    4a14:	94 e8       	ldi	r25, 0x84	; 132
    4a16:	ae e1       	ldi	r26, 0x1E	; 30
    4a18:	b0 e0       	ldi	r27, 0x00	; 0
    4a1a:	80 93 f8 2a 	sts	0x2AF8, r24	; 0x802af8 <BUZZ_TICK1+0x1>
    4a1e:	90 93 f9 2a 	sts	0x2AF9, r25	; 0x802af9 <BUZZ_TICK1+0x2>
    4a22:	a0 93 fa 2a 	sts	0x2AFA, r26	; 0x802afa <BUZZ_TICK1+0x3>
    4a26:	b0 93 fb 2a 	sts	0x2AFB, r27	; 0x802afb <BUZZ_TICK1+0x4>
    4a2a:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <BUZZ_TICK1+0x5>
    4a2e:	10 92 fd 2a 	sts	0x2AFD, r1	; 0x802afd <BUZZ_TICK1+0x6>
    4a32:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <BUZZ_TICK1+0x7>
    4a36:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <BUZZ_TICK1+0x8>
    4a3a:	26 ed       	ldi	r18, 0xD6	; 214
    4a3c:	3d e0       	ldi	r19, 0x0D	; 13
    4a3e:	20 93 08 2b 	sts	0x2B08, r18	; 0x802b08 <BUZZ_TICK1+0x11>
    4a42:	30 93 09 2b 	sts	0x2B09, r19	; 0x802b09 <BUZZ_TICK1+0x12>
    4a46:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <BUZZ_TICK1>
    4a4a:	10 92 0a 2b 	sts	0x2B0A, r1	; 0x802b0a <BUZZ_TICK1+0x13>
    4a4e:	10 92 0b 2b 	sts	0x2B0B, r1	; 0x802b0b <BUZZ_TICK1+0x14>
    4a52:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <BUZZ_TICK1+0x15>
    4a56:	10 92 0d 2b 	sts	0x2B0D, r1	; 0x802b0d <BUZZ_TICK1+0x16>
    4a5a:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xb>
    4a5e:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0xc>
    4a62:	10 92 04 2b 	sts	0x2B04, r1	; 0x802b04 <BUZZ_TICK1+0xd>
    4a66:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <BUZZ_TICK1+0xe>
    4a6a:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <BUZZ_TICK2+0x9>
    4a6e:	10 92 e6 2a 	sts	0x2AE6, r1	; 0x802ae6 <BUZZ_TICK2+0xa>
    4a72:	80 92 dd 2a 	sts	0x2ADD, r8	; 0x802add <BUZZ_TICK2+0x1>
    4a76:	90 92 de 2a 	sts	0x2ADE, r9	; 0x802ade <BUZZ_TICK2+0x2>
    4a7a:	a0 92 df 2a 	sts	0x2ADF, r10	; 0x802adf <BUZZ_TICK2+0x3>
    4a7e:	b0 92 e0 2a 	sts	0x2AE0, r11	; 0x802ae0 <BUZZ_TICK2+0x4>
    4a82:	c0 92 e1 2a 	sts	0x2AE1, r12	; 0x802ae1 <BUZZ_TICK2+0x5>
    4a86:	d0 92 e2 2a 	sts	0x2AE2, r13	; 0x802ae2 <BUZZ_TICK2+0x6>
    4a8a:	e0 92 e3 2a 	sts	0x2AE3, r14	; 0x802ae3 <BUZZ_TICK2+0x7>
    4a8e:	f0 92 e4 2a 	sts	0x2AE4, r15	; 0x802ae4 <BUZZ_TICK2+0x8>
    4a92:	2c ed       	ldi	r18, 0xDC	; 220
    4a94:	3d e0       	ldi	r19, 0x0D	; 13
    4a96:	20 93 ed 2a 	sts	0x2AED, r18	; 0x802aed <BUZZ_TICK2+0x11>
    4a9a:	30 93 ee 2a 	sts	0x2AEE, r19	; 0x802aee <BUZZ_TICK2+0x12>
    4a9e:	10 92 dc 2a 	sts	0x2ADC, r1	; 0x802adc <BUZZ_TICK2>
    4aa2:	10 92 ef 2a 	sts	0x2AEF, r1	; 0x802aef <BUZZ_TICK2+0x13>
    4aa6:	10 92 f0 2a 	sts	0x2AF0, r1	; 0x802af0 <BUZZ_TICK2+0x14>
    4aaa:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <BUZZ_TICK2+0x15>
    4aae:	10 92 f2 2a 	sts	0x2AF2, r1	; 0x802af2 <BUZZ_TICK2+0x16>
    4ab2:	10 92 e7 2a 	sts	0x2AE7, r1	; 0x802ae7 <BUZZ_TICK2+0xb>
    4ab6:	10 92 e8 2a 	sts	0x2AE8, r1	; 0x802ae8 <BUZZ_TICK2+0xc>
    4aba:	10 92 e9 2a 	sts	0x2AE9, r1	; 0x802ae9 <BUZZ_TICK2+0xd>
    4abe:	10 92 ea 2a 	sts	0x2AEA, r1	; 0x802aea <BUZZ_TICK2+0xe>
    4ac2:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Blink_LED_ON+0x9>
    4ac6:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <Blink_LED_ON+0xa>
    4aca:	40 ee       	ldi	r20, 0xE0	; 224
    4acc:	53 e9       	ldi	r21, 0x93	; 147
    4ace:	64 e0       	ldi	r22, 0x04	; 4
    4ad0:	70 e0       	ldi	r23, 0x00	; 0
    4ad2:	40 93 c2 2a 	sts	0x2AC2, r20	; 0x802ac2 <Blink_LED_ON+0x1>
    4ad6:	50 93 c3 2a 	sts	0x2AC3, r21	; 0x802ac3 <Blink_LED_ON+0x2>
    4ada:	60 93 c4 2a 	sts	0x2AC4, r22	; 0x802ac4 <Blink_LED_ON+0x3>
    4ade:	70 93 c5 2a 	sts	0x2AC5, r23	; 0x802ac5 <Blink_LED_ON+0x4>
    4ae2:	10 92 c6 2a 	sts	0x2AC6, r1	; 0x802ac6 <Blink_LED_ON+0x5>
    4ae6:	10 92 c7 2a 	sts	0x2AC7, r1	; 0x802ac7 <Blink_LED_ON+0x6>
    4aea:	10 92 c8 2a 	sts	0x2AC8, r1	; 0x802ac8 <Blink_LED_ON+0x7>
    4aee:	10 92 c9 2a 	sts	0x2AC9, r1	; 0x802ac9 <Blink_LED_ON+0x8>
    4af2:	2c ef       	ldi	r18, 0xFC	; 252
    4af4:	3d e0       	ldi	r19, 0x0D	; 13
    4af6:	20 93 d2 2a 	sts	0x2AD2, r18	; 0x802ad2 <Blink_LED_ON+0x11>
    4afa:	30 93 d3 2a 	sts	0x2AD3, r19	; 0x802ad3 <Blink_LED_ON+0x12>
    4afe:	10 92 c1 2a 	sts	0x2AC1, r1	; 0x802ac1 <Blink_LED_ON>
    4b02:	10 92 d4 2a 	sts	0x2AD4, r1	; 0x802ad4 <Blink_LED_ON+0x13>
    4b06:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <Blink_LED_ON+0x14>
    4b0a:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <Blink_LED_ON+0x15>
    4b0e:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <Blink_LED_ON+0x16>
    4b12:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <Blink_LED_ON+0xb>
    4b16:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <Blink_LED_ON+0xc>
    4b1a:	10 92 ce 2a 	sts	0x2ACE, r1	; 0x802ace <Blink_LED_ON+0xd>
    4b1e:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <Blink_LED_ON+0xe>
    4b22:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <Blink_LED_OFF+0x9>
    4b26:	10 92 b0 2a 	sts	0x2AB0, r1	; 0x802ab0 <Blink_LED_OFF+0xa>
    4b2a:	40 ec       	ldi	r20, 0xC0	; 192
    4b2c:	57 e2       	ldi	r21, 0x27	; 39
    4b2e:	69 e0       	ldi	r22, 0x09	; 9
    4b30:	70 e0       	ldi	r23, 0x00	; 0
    4b32:	40 93 a7 2a 	sts	0x2AA7, r20	; 0x802aa7 <Blink_LED_OFF+0x1>
    4b36:	50 93 a8 2a 	sts	0x2AA8, r21	; 0x802aa8 <Blink_LED_OFF+0x2>
    4b3a:	60 93 a9 2a 	sts	0x2AA9, r22	; 0x802aa9 <Blink_LED_OFF+0x3>
    4b3e:	70 93 aa 2a 	sts	0x2AAA, r23	; 0x802aaa <Blink_LED_OFF+0x4>
    4b42:	10 92 ab 2a 	sts	0x2AAB, r1	; 0x802aab <Blink_LED_OFF+0x5>
    4b46:	10 92 ac 2a 	sts	0x2AAC, r1	; 0x802aac <Blink_LED_OFF+0x6>
    4b4a:	10 92 ad 2a 	sts	0x2AAD, r1	; 0x802aad <Blink_LED_OFF+0x7>
    4b4e:	10 92 ae 2a 	sts	0x2AAE, r1	; 0x802aae <Blink_LED_OFF+0x8>
    4b52:	26 ef       	ldi	r18, 0xF6	; 246
    4b54:	3d e0       	ldi	r19, 0x0D	; 13
    4b56:	20 93 b7 2a 	sts	0x2AB7, r18	; 0x802ab7 <Blink_LED_OFF+0x11>
    4b5a:	30 93 b8 2a 	sts	0x2AB8, r19	; 0x802ab8 <Blink_LED_OFF+0x12>
    4b5e:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <Blink_LED_OFF>
    4b62:	10 92 b9 2a 	sts	0x2AB9, r1	; 0x802ab9 <Blink_LED_OFF+0x13>
    4b66:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <Blink_LED_OFF+0x14>
    4b6a:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <Blink_LED_OFF+0x15>
    4b6e:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <Blink_LED_OFF+0x16>
    4b72:	10 92 b1 2a 	sts	0x2AB1, r1	; 0x802ab1 <Blink_LED_OFF+0xb>
    4b76:	10 92 b2 2a 	sts	0x2AB2, r1	; 0x802ab2 <Blink_LED_OFF+0xc>
    4b7a:	10 92 b3 2a 	sts	0x2AB3, r1	; 0x802ab3 <Blink_LED_OFF+0xd>
    4b7e:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <Blink_LED_OFF+0xe>
    4b82:	10 92 94 2a 	sts	0x2A94, r1	; 0x802a94 <TEMP_UPDATE+0x9>
    4b86:	10 92 95 2a 	sts	0x2A95, r1	; 0x802a95 <TEMP_UPDATE+0xa>
    4b8a:	48 e4       	ldi	r20, 0x48	; 72
    4b8c:	58 ee       	ldi	r21, 0xE8	; 232
    4b8e:	61 e0       	ldi	r22, 0x01	; 1
    4b90:	70 e0       	ldi	r23, 0x00	; 0
    4b92:	40 93 8c 2a 	sts	0x2A8C, r20	; 0x802a8c <TEMP_UPDATE+0x1>
    4b96:	50 93 8d 2a 	sts	0x2A8D, r21	; 0x802a8d <TEMP_UPDATE+0x2>
    4b9a:	60 93 8e 2a 	sts	0x2A8E, r22	; 0x802a8e <TEMP_UPDATE+0x3>
    4b9e:	70 93 8f 2a 	sts	0x2A8F, r23	; 0x802a8f <TEMP_UPDATE+0x4>
    4ba2:	10 92 90 2a 	sts	0x2A90, r1	; 0x802a90 <TEMP_UPDATE+0x5>
    4ba6:	10 92 91 2a 	sts	0x2A91, r1	; 0x802a91 <TEMP_UPDATE+0x6>
    4baa:	10 92 92 2a 	sts	0x2A92, r1	; 0x802a92 <TEMP_UPDATE+0x7>
    4bae:	10 92 93 2a 	sts	0x2A93, r1	; 0x802a93 <TEMP_UPDATE+0x8>
    4bb2:	22 ee       	ldi	r18, 0xE2	; 226
    4bb4:	31 e2       	ldi	r19, 0x21	; 33
    4bb6:	20 93 9c 2a 	sts	0x2A9C, r18	; 0x802a9c <TEMP_UPDATE+0x11>
    4bba:	30 93 9d 2a 	sts	0x2A9D, r19	; 0x802a9d <TEMP_UPDATE+0x12>
    4bbe:	10 92 8b 2a 	sts	0x2A8B, r1	; 0x802a8b <TEMP_UPDATE>
    4bc2:	10 92 9e 2a 	sts	0x2A9E, r1	; 0x802a9e <TEMP_UPDATE+0x13>
    4bc6:	10 92 9f 2a 	sts	0x2A9F, r1	; 0x802a9f <TEMP_UPDATE+0x14>
    4bca:	10 92 a0 2a 	sts	0x2AA0, r1	; 0x802aa0 <TEMP_UPDATE+0x15>
    4bce:	10 92 a1 2a 	sts	0x2AA1, r1	; 0x802aa1 <TEMP_UPDATE+0x16>
    4bd2:	10 92 96 2a 	sts	0x2A96, r1	; 0x802a96 <TEMP_UPDATE+0xb>
    4bd6:	10 92 97 2a 	sts	0x2A97, r1	; 0x802a97 <TEMP_UPDATE+0xc>
    4bda:	10 92 98 2a 	sts	0x2A98, r1	; 0x802a98 <TEMP_UPDATE+0xd>
    4bde:	10 92 99 2a 	sts	0x2A99, r1	; 0x802a99 <TEMP_UPDATE+0xe>
    4be2:	10 92 79 2a 	sts	0x2A79, r1	; 0x802a79 <TEMP_UPDATE_1+0x9>
    4be6:	10 92 7a 2a 	sts	0x2A7A, r1	; 0x802a7a <TEMP_UPDATE_1+0xa>
    4bea:	48 eb       	ldi	r20, 0xB8	; 184
    4bec:	5f ef       	ldi	r21, 0xFF	; 255
    4bee:	61 e0       	ldi	r22, 0x01	; 1
    4bf0:	70 e0       	ldi	r23, 0x00	; 0
    4bf2:	40 93 71 2a 	sts	0x2A71, r20	; 0x802a71 <TEMP_UPDATE_1+0x1>
    4bf6:	50 93 72 2a 	sts	0x2A72, r21	; 0x802a72 <TEMP_UPDATE_1+0x2>
    4bfa:	60 93 73 2a 	sts	0x2A73, r22	; 0x802a73 <TEMP_UPDATE_1+0x3>
    4bfe:	70 93 74 2a 	sts	0x2A74, r23	; 0x802a74 <TEMP_UPDATE_1+0x4>
    4c02:	10 92 75 2a 	sts	0x2A75, r1	; 0x802a75 <TEMP_UPDATE_1+0x5>
    4c06:	10 92 76 2a 	sts	0x2A76, r1	; 0x802a76 <TEMP_UPDATE_1+0x6>
    4c0a:	10 92 77 2a 	sts	0x2A77, r1	; 0x802a77 <TEMP_UPDATE_1+0x7>
    4c0e:	10 92 78 2a 	sts	0x2A78, r1	; 0x802a78 <TEMP_UPDATE_1+0x8>
    4c12:	25 e0       	ldi	r18, 0x05	; 5
    4c14:	3e e0       	ldi	r19, 0x0E	; 14
    4c16:	20 93 81 2a 	sts	0x2A81, r18	; 0x802a81 <TEMP_UPDATE_1+0x11>
    4c1a:	30 93 82 2a 	sts	0x2A82, r19	; 0x802a82 <TEMP_UPDATE_1+0x12>
    4c1e:	10 92 70 2a 	sts	0x2A70, r1	; 0x802a70 <TEMP_UPDATE_1>
    4c22:	10 92 83 2a 	sts	0x2A83, r1	; 0x802a83 <TEMP_UPDATE_1+0x13>
    4c26:	10 92 84 2a 	sts	0x2A84, r1	; 0x802a84 <TEMP_UPDATE_1+0x14>
    4c2a:	10 92 85 2a 	sts	0x2A85, r1	; 0x802a85 <TEMP_UPDATE_1+0x15>
    4c2e:	10 92 86 2a 	sts	0x2A86, r1	; 0x802a86 <TEMP_UPDATE_1+0x16>
    4c32:	10 92 7b 2a 	sts	0x2A7B, r1	; 0x802a7b <TEMP_UPDATE_1+0xb>
    4c36:	10 92 7c 2a 	sts	0x2A7C, r1	; 0x802a7c <TEMP_UPDATE_1+0xc>
    4c3a:	10 92 7d 2a 	sts	0x2A7D, r1	; 0x802a7d <TEMP_UPDATE_1+0xd>
    4c3e:	10 92 7e 2a 	sts	0x2A7E, r1	; 0x802a7e <TEMP_UPDATE_1+0xe>
    4c42:	10 92 5e 2a 	sts	0x2A5E, r1	; 0x802a5e <Alter_Disp+0x9>
    4c46:	10 92 5f 2a 	sts	0x2A5F, r1	; 0x802a5f <Alter_Disp+0xa>
    4c4a:	80 93 56 2a 	sts	0x2A56, r24	; 0x802a56 <Alter_Disp+0x1>
    4c4e:	90 93 57 2a 	sts	0x2A57, r25	; 0x802a57 <Alter_Disp+0x2>
    4c52:	a0 93 58 2a 	sts	0x2A58, r26	; 0x802a58 <Alter_Disp+0x3>
    4c56:	b0 93 59 2a 	sts	0x2A59, r27	; 0x802a59 <Alter_Disp+0x4>
    4c5a:	10 92 5a 2a 	sts	0x2A5A, r1	; 0x802a5a <Alter_Disp+0x5>
    4c5e:	10 92 5b 2a 	sts	0x2A5B, r1	; 0x802a5b <Alter_Disp+0x6>
    4c62:	10 92 5c 2a 	sts	0x2A5C, r1	; 0x802a5c <Alter_Disp+0x7>
    4c66:	10 92 5d 2a 	sts	0x2A5D, r1	; 0x802a5d <Alter_Disp+0x8>
    4c6a:	88 e8       	ldi	r24, 0x88	; 136
    4c6c:	91 e0       	ldi	r25, 0x01	; 1
    4c6e:	80 93 66 2a 	sts	0x2A66, r24	; 0x802a66 <Alter_Disp+0x11>
    4c72:	90 93 67 2a 	sts	0x2A67, r25	; 0x802a67 <Alter_Disp+0x12>
    4c76:	10 92 55 2a 	sts	0x2A55, r1	; 0x802a55 <Alter_Disp>
    4c7a:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <Alter_Disp+0x13>
    4c7e:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <Alter_Disp+0x14>
    4c82:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <Alter_Disp+0x15>
    4c86:	10 92 6b 2a 	sts	0x2A6B, r1	; 0x802a6b <Alter_Disp+0x16>
    4c8a:	10 92 60 2a 	sts	0x2A60, r1	; 0x802a60 <Alter_Disp+0xb>
    4c8e:	10 92 61 2a 	sts	0x2A61, r1	; 0x802a61 <Alter_Disp+0xc>
    4c92:	10 92 62 2a 	sts	0x2A62, r1	; 0x802a62 <Alter_Disp+0xd>
    4c96:	10 92 63 2a 	sts	0x2A63, r1	; 0x802a63 <Alter_Disp+0xe>
    4c9a:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <PID_EXE+0x9>
    4c9e:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <PID_EXE+0xa>
    4ca2:	80 e8       	ldi	r24, 0x80	; 128
    4ca4:	9a e1       	ldi	r25, 0x1A	; 26
    4ca6:	a6 e0       	ldi	r26, 0x06	; 6
    4ca8:	b0 e0       	ldi	r27, 0x00	; 0
    4caa:	80 93 3b 2a 	sts	0x2A3B, r24	; 0x802a3b <PID_EXE+0x1>
    4cae:	90 93 3c 2a 	sts	0x2A3C, r25	; 0x802a3c <PID_EXE+0x2>
    4cb2:	a0 93 3d 2a 	sts	0x2A3D, r26	; 0x802a3d <PID_EXE+0x3>
    4cb6:	b0 93 3e 2a 	sts	0x2A3E, r27	; 0x802a3e <PID_EXE+0x4>
    4cba:	10 92 3f 2a 	sts	0x2A3F, r1	; 0x802a3f <PID_EXE+0x5>
    4cbe:	10 92 40 2a 	sts	0x2A40, r1	; 0x802a40 <PID_EXE+0x6>
    4cc2:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <PID_EXE+0x7>
    4cc6:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <PID_EXE+0x8>
    4cca:	87 ea       	ldi	r24, 0xA7	; 167
    4ccc:	9e e0       	ldi	r25, 0x0E	; 14
    4cce:	80 93 4b 2a 	sts	0x2A4B, r24	; 0x802a4b <PID_EXE+0x11>
    4cd2:	90 93 4c 2a 	sts	0x2A4C, r25	; 0x802a4c <PID_EXE+0x12>
    4cd6:	10 92 3a 2a 	sts	0x2A3A, r1	; 0x802a3a <PID_EXE>
    4cda:	10 92 4d 2a 	sts	0x2A4D, r1	; 0x802a4d <PID_EXE+0x13>
    4cde:	10 92 4e 2a 	sts	0x2A4E, r1	; 0x802a4e <PID_EXE+0x14>
    4ce2:	10 92 4f 2a 	sts	0x2A4F, r1	; 0x802a4f <PID_EXE+0x15>
    4ce6:	10 92 50 2a 	sts	0x2A50, r1	; 0x802a50 <PID_EXE+0x16>
    4cea:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xb>
    4cee:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0xc>
    4cf2:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <PID_EXE+0xd>
    4cf6:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <PID_EXE+0xe>
    4cfa:	c0 90 13 28 	lds	r12, 0x2813	; 0x802813 <Kd>
    4cfe:	d0 90 14 28 	lds	r13, 0x2814	; 0x802814 <Kd+0x1>
    4d02:	e0 90 15 28 	lds	r14, 0x2815	; 0x802815 <Kd+0x2>
    4d06:	f0 90 16 28 	lds	r15, 0x2816	; 0x802816 <Kd+0x3>
    4d0a:	80 90 0f 28 	lds	r8, 0x280F	; 0x80280f <Ki>
    4d0e:	90 90 10 28 	lds	r9, 0x2810	; 0x802810 <Ki+0x1>
    4d12:	a0 90 11 28 	lds	r10, 0x2811	; 0x802811 <Ki+0x2>
    4d16:	b0 90 12 28 	lds	r11, 0x2812	; 0x802812 <Ki+0x3>
    4d1a:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    4d1e:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    4d22:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    4d26:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    4d2a:	86 ef       	ldi	r24, 0xF6	; 246
    4d2c:	99 e2       	ldi	r25, 0x29	; 41
    4d2e:	80 93 1c 2a 	sts	0x2A1C, r24	; 0x802a1c <myPID+0x1e>
    4d32:	90 93 1d 2a 	sts	0x2A1D, r25	; 0x802a1d <myPID+0x1f>
    4d36:	8a ef       	ldi	r24, 0xFA	; 250
    4d38:	99 e2       	ldi	r25, 0x29	; 41
    4d3a:	80 93 1a 2a 	sts	0x2A1A, r24	; 0x802a1a <myPID+0x1c>
    4d3e:	90 93 1b 2a 	sts	0x2A1B, r25	; 0x802a1b <myPID+0x1d>
    4d42:	82 ef       	ldi	r24, 0xF2	; 242
    4d44:	99 e2       	ldi	r25, 0x29	; 41
    4d46:	80 93 1e 2a 	sts	0x2A1E, r24	; 0x802a1e <myPID+0x20>
    4d4a:	90 93 1f 2a 	sts	0x2A1F, r25	; 0x802a1f <myPID+0x21>
    4d4e:	10 92 38 2a 	sts	0x2A38, r1	; 0x802a38 <myPID+0x3a>
    4d52:	10 92 30 2a 	sts	0x2A30, r1	; 0x802a30 <myPID+0x32>
    4d56:	10 92 31 2a 	sts	0x2A31, r1	; 0x802a31 <myPID+0x33>
    4d5a:	10 92 32 2a 	sts	0x2A32, r1	; 0x802a32 <myPID+0x34>
    4d5e:	10 92 33 2a 	sts	0x2A33, r1	; 0x802a33 <myPID+0x35>
    4d62:	80 e0       	ldi	r24, 0x00	; 0
    4d64:	90 e0       	ldi	r25, 0x00	; 0
    4d66:	af e7       	ldi	r26, 0x7F	; 127
    4d68:	b3 e4       	ldi	r27, 0x43	; 67
    4d6a:	80 93 34 2a 	sts	0x2A34, r24	; 0x802a34 <myPID+0x36>
    4d6e:	90 93 35 2a 	sts	0x2A35, r25	; 0x802a35 <myPID+0x37>
    4d72:	a0 93 36 2a 	sts	0x2A36, r26	; 0x802a36 <myPID+0x38>
    4d76:	b0 93 37 2a 	sts	0x2A37, r27	; 0x802a37 <myPID+0x39>
    4d7a:	84 e6       	ldi	r24, 0x64	; 100
    4d7c:	90 e0       	ldi	r25, 0x00	; 0
    4d7e:	a0 e0       	ldi	r26, 0x00	; 0
    4d80:	b0 e0       	ldi	r27, 0x00	; 0
    4d82:	80 93 2c 2a 	sts	0x2A2C, r24	; 0x802a2c <myPID+0x2e>
    4d86:	90 93 2d 2a 	sts	0x2A2D, r25	; 0x802a2d <myPID+0x2f>
    4d8a:	a0 93 2e 2a 	sts	0x2A2E, r26	; 0x802a2e <myPID+0x30>
    4d8e:	b0 93 2f 2a 	sts	0x2A2F, r27	; 0x802a2f <myPID+0x31>
    4d92:	10 92 16 2a 	sts	0x2A16, r1	; 0x802a16 <myPID+0x18>
    4d96:	10 92 17 2a 	sts	0x2A17, r1	; 0x802a17 <myPID+0x19>
    4d9a:	20 e0       	ldi	r18, 0x00	; 0
    4d9c:	30 e0       	ldi	r19, 0x00	; 0
    4d9e:	a9 01       	movw	r20, r18
    4da0:	c3 01       	movw	r24, r6
    4da2:	b2 01       	movw	r22, r4
    4da4:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    4da8:	87 fd       	sbrc	r24, 7
    4daa:	59 c0       	rjmp	.+178    	; 0x4e5e <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x6b2>
    4dac:	20 e0       	ldi	r18, 0x00	; 0
    4dae:	30 e0       	ldi	r19, 0x00	; 0
    4db0:	a9 01       	movw	r20, r18
    4db2:	c5 01       	movw	r24, r10
    4db4:	b4 01       	movw	r22, r8
    4db6:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    4dba:	87 fd       	sbrc	r24, 7
    4dbc:	50 c0       	rjmp	.+160    	; 0x4e5e <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x6b2>
    4dbe:	20 e0       	ldi	r18, 0x00	; 0
    4dc0:	30 e0       	ldi	r19, 0x00	; 0
    4dc2:	a9 01       	movw	r20, r18
    4dc4:	c7 01       	movw	r24, r14
    4dc6:	b6 01       	movw	r22, r12
    4dc8:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    4dcc:	87 fd       	sbrc	r24, 7
    4dce:	47 c0       	rjmp	.+142    	; 0x4e5e <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x6b2>
    4dd0:	c0 93 18 2a 	sts	0x2A18, r28	; 0x802a18 <myPID+0x1a>
    4dd4:	d0 93 19 2a 	sts	0x2A19, r29	; 0x802a19 <myPID+0x1b>
    4dd8:	81 e0       	ldi	r24, 0x01	; 1
    4dda:	80 93 39 2a 	sts	0x2A39, r24	; 0x802a39 <myPID+0x3b>
    4dde:	40 92 fe 29 	sts	0x29FE, r4	; 0x8029fe <myPID>
    4de2:	50 92 ff 29 	sts	0x29FF, r5	; 0x8029ff <myPID+0x1>
    4de6:	60 92 00 2a 	sts	0x2A00, r6	; 0x802a00 <myPID+0x2>
    4dea:	70 92 01 2a 	sts	0x2A01, r7	; 0x802a01 <myPID+0x3>
    4dee:	80 92 02 2a 	sts	0x2A02, r8	; 0x802a02 <myPID+0x4>
    4df2:	90 92 03 2a 	sts	0x2A03, r9	; 0x802a03 <myPID+0x5>
    4df6:	a0 92 04 2a 	sts	0x2A04, r10	; 0x802a04 <myPID+0x6>
    4dfa:	b0 92 05 2a 	sts	0x2A05, r11	; 0x802a05 <myPID+0x7>
    4dfe:	c0 92 06 2a 	sts	0x2A06, r12	; 0x802a06 <myPID+0x8>
    4e02:	d0 92 07 2a 	sts	0x2A07, r13	; 0x802a07 <myPID+0x9>
    4e06:	e0 92 08 2a 	sts	0x2A08, r14	; 0x802a08 <myPID+0xa>
    4e0a:	f0 92 09 2a 	sts	0x2A09, r15	; 0x802a09 <myPID+0xb>
    4e0e:	40 92 0a 2a 	sts	0x2A0A, r4	; 0x802a0a <myPID+0xc>
    4e12:	50 92 0b 2a 	sts	0x2A0B, r5	; 0x802a0b <myPID+0xd>
    4e16:	60 92 0c 2a 	sts	0x2A0C, r6	; 0x802a0c <myPID+0xe>
    4e1a:	70 92 0d 2a 	sts	0x2A0D, r7	; 0x802a0d <myPID+0xf>
    4e1e:	2d ec       	ldi	r18, 0xCD	; 205
    4e20:	3c ec       	ldi	r19, 0xCC	; 204
    4e22:	4c ec       	ldi	r20, 0xCC	; 204
    4e24:	5d e3       	ldi	r21, 0x3D	; 61
    4e26:	c5 01       	movw	r24, r10
    4e28:	b4 01       	movw	r22, r8
    4e2a:	0e 94 40 3b 	call	0x7680	; 0x7680 <__mulsf3>
    4e2e:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x10>
    4e32:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x11>
    4e36:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x12>
    4e3a:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x13>
    4e3e:	2d ec       	ldi	r18, 0xCD	; 205
    4e40:	3c ec       	ldi	r19, 0xCC	; 204
    4e42:	4c ec       	ldi	r20, 0xCC	; 204
    4e44:	5d e3       	ldi	r21, 0x3D	; 61
    4e46:	c7 01       	movw	r24, r14
    4e48:	b6 01       	movw	r22, r12
    4e4a:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    4e4e:	60 93 12 2a 	sts	0x2A12, r22	; 0x802a12 <myPID+0x14>
    4e52:	70 93 13 2a 	sts	0x2A13, r23	; 0x802a13 <myPID+0x15>
    4e56:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <myPID+0x16>
    4e5a:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <myPID+0x17>
    4e5e:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    4e62:	c0 90 2c 2a 	lds	r12, 0x2A2C	; 0x802a2c <myPID+0x2e>
    4e66:	d0 90 2d 2a 	lds	r13, 0x2A2D	; 0x802a2d <myPID+0x2f>
    4e6a:	e0 90 2e 2a 	lds	r14, 0x2A2E	; 0x802a2e <myPID+0x30>
    4e6e:	f0 90 2f 2a 	lds	r15, 0x2A2F	; 0x802a2f <myPID+0x31>
    4e72:	6c 19       	sub	r22, r12
    4e74:	7d 09       	sbc	r23, r13
    4e76:	8e 09       	sbc	r24, r14
    4e78:	9f 09       	sbc	r25, r15
    4e7a:	60 93 20 2a 	sts	0x2A20, r22	; 0x802a20 <myPID+0x22>
    4e7e:	70 93 21 2a 	sts	0x2A21, r23	; 0x802a21 <myPID+0x23>
    4e82:	80 93 22 2a 	sts	0x2A22, r24	; 0x802a22 <myPID+0x24>
    4e86:	90 93 23 2a 	sts	0x2A23, r25	; 0x802a23 <myPID+0x25>
    4e8a:	df 91       	pop	r29
    4e8c:	cf 91       	pop	r28
    4e8e:	ff 90       	pop	r15
    4e90:	ef 90       	pop	r14
    4e92:	df 90       	pop	r13
    4e94:	cf 90       	pop	r12
    4e96:	bf 90       	pop	r11
    4e98:	af 90       	pop	r10
    4e9a:	9f 90       	pop	r9
    4e9c:	8f 90       	pop	r8
    4e9e:	7f 90       	pop	r7
    4ea0:	6f 90       	pop	r6
    4ea2:	5f 90       	pop	r5
    4ea4:	4f 90       	pop	r4
    4ea6:	08 95       	ret

00004ea8 <main>:
main():
    4ea8:	cf 93       	push	r28
    4eaa:	df 93       	push	r29
    4eac:	cd b7       	in	r28, 0x3d	; 61
    4eae:	de b7       	in	r29, 0x3e	; 62
    4eb0:	26 97       	sbiw	r28, 0x06	; 6
    4eb2:	cd bf       	out	0x3d, r28	; 61
    4eb4:	de bf       	out	0x3e, r29	; 62
init():
    4eb6:	88 ed       	ldi	r24, 0xD8	; 216
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	84 bf       	out	0x34, r24	; 52
    4ebc:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    4ec0:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4ec4:	86 60       	ori	r24, 0x06	; 6
    4ec6:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4eca:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    4ece:	81 60       	ori	r24, 0x01	; 1
    4ed0:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    4ed4:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4ed8:	8f 7c       	andi	r24, 0xCF	; 207
    4eda:	80 65       	ori	r24, 0x50	; 80
    4edc:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    4ee0:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    4ee4:	82 e0       	ldi	r24, 0x02	; 2
    4ee6:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    4eea:	81 e0       	ldi	r24, 0x01	; 1
    4eec:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    4ef0:	8e ef       	ldi	r24, 0xFE	; 254
    4ef2:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4ef6:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4efa:	80 e8       	ldi	r24, 0x80	; 128
    4efc:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    4f00:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    4f04:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    4f08:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    4f0c:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    4f10:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    4f14:	8b e0       	ldi	r24, 0x0B	; 11
    4f16:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4f1a:	87 e0       	ldi	r24, 0x07	; 7
    4f1c:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    4f20:	e0 e8       	ldi	r30, 0x80	; 128
    4f22:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    4f24:	37 e0       	ldi	r19, 0x07	; 7
    4f26:	2e ef       	ldi	r18, 0xFE	; 254
    4f28:	90 e8       	ldi	r25, 0x80	; 128
    4f2a:	85 e0       	ldi	r24, 0x05	; 5
    4f2c:	31 83       	std	Z+1, r19	; 0x01
    4f2e:	24 87       	std	Z+12, r18	; 0x0c
    4f30:	95 87       	std	Z+13, r25	; 0x0d
    4f32:	80 83       	st	Z, r24
    4f34:	70 96       	adiw	r30, 0x10	; 16
    4f36:	e0 3c       	cpi	r30, 0xC0	; 192
    4f38:	4a e0       	ldi	r20, 0x0A	; 10
    4f3a:	f4 07       	cpc	r31, r20
    4f3c:	b9 f7       	brne	.-18     	; 0x4f2c <main+0x84>
init():
    4f3e:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    4f42:	8f e7       	ldi	r24, 0x7F	; 127
    4f44:	9e e3       	ldi	r25, 0x3E	; 62
    4f46:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    4f4a:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    4f4e:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4f52:	81 60       	ori	r24, 0x01	; 1
    4f54:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4f58:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4f5c:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4f60:	81 60       	ori	r24, 0x01	; 1
    4f62:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4f66:	78 94       	sei
setup():
    4f68:	47 e2       	ldi	r20, 0x27	; 39
    4f6a:	66 e2       	ldi	r22, 0x26	; 38
    4f6c:	85 e5       	ldi	r24, 0x55	; 85
    4f6e:	99 e2       	ldi	r25, 0x29	; 41
    4f70:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UartClass::pins(unsigned char, unsigned char)>
    4f74:	40 e8       	ldi	r20, 0x80	; 128
    4f76:	55 e2       	ldi	r21, 0x25	; 37
    4f78:	60 e0       	ldi	r22, 0x00	; 0
    4f7a:	70 e0       	ldi	r23, 0x00	; 0
    4f7c:	85 e5       	ldi	r24, 0x55	; 85
    4f7e:	99 e2       	ldi	r25, 0x29	; 41
    4f80:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <UartClass::begin(unsigned long)>
SETUP():
    4f84:	f8 94       	cli
    4f86:	81 e0       	ldi	r24, 0x01	; 1
    4f88:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    4f8c:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    4f90:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4f94:	8e 7f       	andi	r24, 0xFE	; 254
    4f96:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4f9a:	8a ef       	ldi	r24, 0xFA	; 250
    4f9c:	90 e0       	ldi	r25, 0x00	; 0
    4f9e:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4fa2:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4fa6:	8f e0       	ldi	r24, 0x0F	; 15
    4fa8:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4fac:	78 94       	sei
    4fae:	61 e0       	ldi	r22, 0x01	; 1
    4fb0:	8b e0       	ldi	r24, 0x0B	; 11
    4fb2:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fb6:	61 e0       	ldi	r22, 0x01	; 1
    4fb8:	8a e0       	ldi	r24, 0x0A	; 10
    4fba:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fbe:	61 e0       	ldi	r22, 0x01	; 1
    4fc0:	89 e0       	ldi	r24, 0x09	; 9
    4fc2:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fc6:	61 e0       	ldi	r22, 0x01	; 1
    4fc8:	88 e0       	ldi	r24, 0x08	; 8
    4fca:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fce:	61 e0       	ldi	r22, 0x01	; 1
    4fd0:	84 e0       	ldi	r24, 0x04	; 4
    4fd2:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fd6:	61 e0       	ldi	r22, 0x01	; 1
    4fd8:	85 e0       	ldi	r24, 0x05	; 5
    4fda:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fde:	61 e0       	ldi	r22, 0x01	; 1
    4fe0:	86 e0       	ldi	r24, 0x06	; 6
    4fe2:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fe6:	61 e0       	ldi	r22, 0x01	; 1
    4fe8:	87 e0       	ldi	r24, 0x07	; 7
    4fea:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4fee:	61 e0       	ldi	r22, 0x01	; 1
    4ff0:	84 e1       	ldi	r24, 0x14	; 20
    4ff2:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4ff6:	61 e0       	ldi	r22, 0x01	; 1
    4ff8:	83 e1       	ldi	r24, 0x13	; 19
    4ffa:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    4ffe:	61 e0       	ldi	r22, 0x01	; 1
    5000:	82 e1       	ldi	r24, 0x12	; 18
    5002:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    5006:	61 e0       	ldi	r22, 0x01	; 1
    5008:	8e e1       	ldi	r24, 0x1E	; 30
    500a:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    500e:	61 e0       	ldi	r22, 0x01	; 1
    5010:	80 e2       	ldi	r24, 0x20	; 32
    5012:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    5016:	61 e0       	ldi	r22, 0x01	; 1
    5018:	8f e1       	ldi	r24, 0x1F	; 31
    501a:	0e 94 fb 07 	call	0xff6	; 0xff6 <pinMode>
    501e:	61 e0       	ldi	r22, 0x01	; 1
    5020:	88 e0       	ldi	r24, 0x08	; 8
    5022:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    5026:	61 e0       	ldi	r22, 0x01	; 1
    5028:	89 e0       	ldi	r24, 0x09	; 9
    502a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    502e:	61 e0       	ldi	r22, 0x01	; 1
    5030:	8a e0       	ldi	r24, 0x0A	; 10
    5032:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    5036:	61 e0       	ldi	r22, 0x01	; 1
    5038:	8b e0       	ldi	r24, 0x0B	; 11
    503a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    503e:	61 e0       	ldi	r22, 0x01	; 1
    5040:	87 e0       	ldi	r24, 0x07	; 7
    5042:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    5046:	61 e0       	ldi	r22, 0x01	; 1
    5048:	86 e0       	ldi	r24, 0x06	; 6
    504a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    504e:	61 e0       	ldi	r22, 0x01	; 1
    5050:	85 e0       	ldi	r24, 0x05	; 5
    5052:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
    5056:	61 e0       	ldi	r22, 0x01	; 1
    5058:	84 e0       	ldi	r24, 0x04	; 4
    505a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <digitalWrite>
pinMode():
    505e:	61 e0       	ldi	r22, 0x01	; 1
    5060:	8c e0       	ldi	r24, 0x0C	; 12
    5062:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5066:	61 e0       	ldi	r22, 0x01	; 1
    5068:	8d e0       	ldi	r24, 0x0D	; 13
    506a:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
digitalWrite():
    506e:	60 e0       	ldi	r22, 0x00	; 0
    5070:	8c e0       	ldi	r24, 0x0C	; 12
    5072:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    5076:	60 e0       	ldi	r22, 0x00	; 0
    5078:	8d e0       	ldi	r24, 0x0D	; 13
    507a:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SETUP():
    507e:	8f ed       	ldi	r24, 0xDF	; 223
    5080:	9b e2       	ldi	r25, 0x2B	; 43
    5082:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SetOutputLimits():
    5086:	10 92 30 2a 	sts	0x2A30, r1	; 0x802a30 <myPID+0x32>
    508a:	10 92 31 2a 	sts	0x2A31, r1	; 0x802a31 <myPID+0x33>
    508e:	10 92 32 2a 	sts	0x2A32, r1	; 0x802a32 <myPID+0x34>
    5092:	10 92 33 2a 	sts	0x2A33, r1	; 0x802a33 <myPID+0x35>
    5096:	81 2c       	mov	r8, r1
    5098:	00 e8       	ldi	r16, 0x80	; 128
    509a:	90 2e       	mov	r9, r16
    509c:	09 e8       	ldi	r16, 0x89	; 137
    509e:	a0 2e       	mov	r10, r16
    50a0:	04 e4       	ldi	r16, 0x44	; 68
    50a2:	b0 2e       	mov	r11, r16
    50a4:	80 92 34 2a 	sts	0x2A34, r8	; 0x802a34 <myPID+0x36>
    50a8:	90 92 35 2a 	sts	0x2A35, r9	; 0x802a35 <myPID+0x37>
    50ac:	a0 92 36 2a 	sts	0x2A36, r10	; 0x802a36 <myPID+0x38>
    50b0:	b0 92 37 2a 	sts	0x2A37, r11	; 0x802a37 <myPID+0x39>
    50b4:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
    50b8:	88 23       	and	r24, r24
    50ba:	09 f4       	brne	.+2      	; 0x50be <main+0x216>
    50bc:	57 c0       	rjmp	.+174    	; 0x516c <main+0x2c4>
    50be:	00 91 1c 2a 	lds	r16, 0x2A1C	; 0x802a1c <myPID+0x1e>
    50c2:	10 91 1d 2a 	lds	r17, 0x2A1D	; 0x802a1d <myPID+0x1f>
    50c6:	d8 01       	movw	r26, r16
    50c8:	cd 90       	ld	r12, X+
    50ca:	dd 90       	ld	r13, X+
    50cc:	ed 90       	ld	r14, X+
    50ce:	fc 90       	ld	r15, X
    50d0:	a5 01       	movw	r20, r10
    50d2:	94 01       	movw	r18, r8
    50d4:	c7 01       	movw	r24, r14
    50d6:	b6 01       	movw	r22, r12
    50d8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    50dc:	18 16       	cp	r1, r24
    50de:	34 f5       	brge	.+76     	; 0x512c <main+0x284>
    50e0:	f8 01       	movw	r30, r16
    50e2:	80 82       	st	Z, r8
    50e4:	91 82       	std	Z+1, r9	; 0x01
    50e6:	a2 82       	std	Z+2, r10	; 0x02
    50e8:	b3 82       	std	Z+3, r11	; 0x03
    50ea:	80 90 24 2a 	lds	r8, 0x2A24	; 0x802a24 <myPID+0x26>
    50ee:	90 90 25 2a 	lds	r9, 0x2A25	; 0x802a25 <myPID+0x27>
    50f2:	a0 90 26 2a 	lds	r10, 0x2A26	; 0x802a26 <myPID+0x28>
    50f6:	b0 90 27 2a 	lds	r11, 0x2A27	; 0x802a27 <myPID+0x29>
    50fa:	c0 90 34 2a 	lds	r12, 0x2A34	; 0x802a34 <myPID+0x36>
    50fe:	d0 90 35 2a 	lds	r13, 0x2A35	; 0x802a35 <myPID+0x37>
    5102:	e0 90 36 2a 	lds	r14, 0x2A36	; 0x802a36 <myPID+0x38>
    5106:	f0 90 37 2a 	lds	r15, 0x2A37	; 0x802a37 <myPID+0x39>
    510a:	a7 01       	movw	r20, r14
    510c:	96 01       	movw	r18, r12
    510e:	c5 01       	movw	r24, r10
    5110:	b4 01       	movw	r22, r8
    5112:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    5116:	18 16       	cp	r1, r24
    5118:	cc f4       	brge	.+50     	; 0x514c <main+0x2a4>
    511a:	c0 92 24 2a 	sts	0x2A24, r12	; 0x802a24 <myPID+0x26>
    511e:	d0 92 25 2a 	sts	0x2A25, r13	; 0x802a25 <myPID+0x27>
    5122:	e0 92 26 2a 	sts	0x2A26, r14	; 0x802a26 <myPID+0x28>
    5126:	f0 92 27 2a 	sts	0x2A27, r15	; 0x802a27 <myPID+0x29>
    512a:	20 c0       	rjmp	.+64     	; 0x516c <main+0x2c4>
    512c:	20 e0       	ldi	r18, 0x00	; 0
    512e:	30 e0       	ldi	r19, 0x00	; 0
    5130:	a9 01       	movw	r20, r18
    5132:	c7 01       	movw	r24, r14
    5134:	b6 01       	movw	r22, r12
    5136:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    513a:	87 ff       	sbrs	r24, 7
    513c:	d6 cf       	rjmp	.-84     	; 0x50ea <main+0x242>
    513e:	d8 01       	movw	r26, r16
    5140:	1d 92       	st	X+, r1
    5142:	1d 92       	st	X+, r1
    5144:	1d 92       	st	X+, r1
    5146:	1c 92       	st	X, r1
    5148:	13 97       	sbiw	r26, 0x03	; 3
    514a:	cf cf       	rjmp	.-98     	; 0x50ea <main+0x242>
    514c:	c0 90 30 2a 	lds	r12, 0x2A30	; 0x802a30 <myPID+0x32>
    5150:	d0 90 31 2a 	lds	r13, 0x2A31	; 0x802a31 <myPID+0x33>
    5154:	e0 90 32 2a 	lds	r14, 0x2A32	; 0x802a32 <myPID+0x34>
    5158:	f0 90 33 2a 	lds	r15, 0x2A33	; 0x802a33 <myPID+0x35>
    515c:	a7 01       	movw	r20, r14
    515e:	96 01       	movw	r18, r12
    5160:	c5 01       	movw	r24, r10
    5162:	b4 01       	movw	r22, r8
    5164:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    5168:	87 fd       	sbrc	r24, 7
    516a:	d7 cf       	rjmp	.-82     	; 0x511a <main+0x272>
Setup():
    516c:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    5170:	60 93 fd 28 	sts	0x28FD, r22	; 0x8028fd <WINDOW_START_TIME>
    5174:	70 93 fe 28 	sts	0x28FE, r23	; 0x8028fe <WINDOW_START_TIME+0x1>
    5178:	80 93 ff 28 	sts	0x28FF, r24	; 0x8028ff <WINDOW_START_TIME+0x2>
    517c:	90 93 00 29 	sts	0x2900, r25	; 0x802900 <WINDOW_START_TIME+0x3>
SetMode():
    5180:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
    5184:	81 11       	cpse	r24, r1
    5186:	49 c0       	rjmp	.+146    	; 0x521a <main+0x372>
Initialize():
    5188:	e0 91 1c 2a 	lds	r30, 0x2A1C	; 0x802a1c <myPID+0x1e>
    518c:	f0 91 1d 2a 	lds	r31, 0x2A1D	; 0x802a1d <myPID+0x1f>
    5190:	c0 80       	ld	r12, Z
    5192:	d1 80       	ldd	r13, Z+1	; 0x01
    5194:	e2 80       	ldd	r14, Z+2	; 0x02
    5196:	f3 80       	ldd	r15, Z+3	; 0x03
    5198:	c0 92 24 2a 	sts	0x2A24, r12	; 0x802a24 <myPID+0x26>
    519c:	d0 92 25 2a 	sts	0x2A25, r13	; 0x802a25 <myPID+0x27>
    51a0:	e0 92 26 2a 	sts	0x2A26, r14	; 0x802a26 <myPID+0x28>
    51a4:	f0 92 27 2a 	sts	0x2A27, r15	; 0x802a27 <myPID+0x29>
    51a8:	e0 91 1a 2a 	lds	r30, 0x2A1A	; 0x802a1a <myPID+0x1c>
    51ac:	f0 91 1b 2a 	lds	r31, 0x2A1B	; 0x802a1b <myPID+0x1d>
    51b0:	80 81       	ld	r24, Z
    51b2:	91 81       	ldd	r25, Z+1	; 0x01
    51b4:	a2 81       	ldd	r26, Z+2	; 0x02
    51b6:	b3 81       	ldd	r27, Z+3	; 0x03
    51b8:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <myPID+0x2a>
    51bc:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <myPID+0x2b>
    51c0:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <myPID+0x2c>
    51c4:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <myPID+0x2d>
    51c8:	80 90 34 2a 	lds	r8, 0x2A34	; 0x802a34 <myPID+0x36>
    51cc:	90 90 35 2a 	lds	r9, 0x2A35	; 0x802a35 <myPID+0x37>
    51d0:	a0 90 36 2a 	lds	r10, 0x2A36	; 0x802a36 <myPID+0x38>
    51d4:	b0 90 37 2a 	lds	r11, 0x2A37	; 0x802a37 <myPID+0x39>
    51d8:	a5 01       	movw	r20, r10
    51da:	94 01       	movw	r18, r8
    51dc:	c7 01       	movw	r24, r14
    51de:	b6 01       	movw	r22, r12
    51e0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    51e4:	18 16       	cp	r1, r24
    51e6:	4c f4       	brge	.+18     	; 0x51fa <main+0x352>
    51e8:	80 92 24 2a 	sts	0x2A24, r8	; 0x802a24 <myPID+0x26>
    51ec:	90 92 25 2a 	sts	0x2A25, r9	; 0x802a25 <myPID+0x27>
    51f0:	a0 92 26 2a 	sts	0x2A26, r10	; 0x802a26 <myPID+0x28>
    51f4:	b0 92 27 2a 	sts	0x2A27, r11	; 0x802a27 <myPID+0x29>
    51f8:	10 c0       	rjmp	.+32     	; 0x521a <main+0x372>
    51fa:	80 90 30 2a 	lds	r8, 0x2A30	; 0x802a30 <myPID+0x32>
    51fe:	90 90 31 2a 	lds	r9, 0x2A31	; 0x802a31 <myPID+0x33>
    5202:	a0 90 32 2a 	lds	r10, 0x2A32	; 0x802a32 <myPID+0x34>
    5206:	b0 90 33 2a 	lds	r11, 0x2A33	; 0x802a33 <myPID+0x35>
    520a:	a5 01       	movw	r20, r10
    520c:	94 01       	movw	r18, r8
    520e:	c7 01       	movw	r24, r14
    5210:	b6 01       	movw	r22, r12
    5212:	0e 94 ed 39 	call	0x73da	; 0x73da <__cmpsf2>
    5216:	87 fd       	sbrc	r24, 7
    5218:	e7 cf       	rjmp	.-50     	; 0x51e8 <main+0x340>
SetMode():
    521a:	81 e0       	ldi	r24, 0x01	; 1
    521c:	80 93 38 2a 	sts	0x2A38, r24	; 0x802a38 <myPID+0x3a>
pinMode():
    5220:	61 e0       	ldi	r22, 0x01	; 1
    5222:	85 e1       	ldi	r24, 0x15	; 21
    5224:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5228:	61 e0       	ldi	r22, 0x01	; 1
    522a:	88 e1       	ldi	r24, 0x18	; 24
    522c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5230:	61 e0       	ldi	r22, 0x01	; 1
    5232:	89 e1       	ldi	r24, 0x19	; 25
    5234:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5238:	61 e0       	ldi	r22, 0x01	; 1
    523a:	81 e2       	ldi	r24, 0x21	; 33
    523c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
digitalWrite():
    5240:	60 e0       	ldi	r22, 0x00	; 0
    5242:	89 e1       	ldi	r24, 0x19	; 25
    5244:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    5248:	60 e0       	ldi	r22, 0x00	; 0
    524a:	85 e1       	ldi	r24, 0x15	; 21
    524c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    5250:	60 e0       	ldi	r22, 0x00	; 0
    5252:	88 e1       	ldi	r24, 0x18	; 24
    5254:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    5258:	60 e0       	ldi	r22, 0x00	; 0
    525a:	81 e2       	ldi	r24, 0x21	; 33
    525c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
pinMode():
    5260:	61 e0       	ldi	r22, 0x01	; 1
    5262:	8b e1       	ldi	r24, 0x1B	; 27
    5264:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5268:	61 e0       	ldi	r22, 0x01	; 1
    526a:	8c e1       	ldi	r24, 0x1C	; 28
    526c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5270:	61 e0       	ldi	r22, 0x01	; 1
    5272:	8d e1       	ldi	r24, 0x1D	; 29
    5274:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    5278:	61 e0       	ldi	r22, 0x01	; 1
    527a:	8a e1       	ldi	r24, 0x1A	; 26
    527c:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
Setup():
    5280:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    5284:	8b e8       	ldi	r24, 0x8B	; 139
    5286:	9a e2       	ldi	r25, 0x2A	; 42
    5288:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
    528c:	80 e7       	ldi	r24, 0x70	; 112
    528e:	9a e2       	ldi	r25, 0x2A	; 42
    5290:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
    5294:	90 e0       	ldi	r25, 0x00	; 0
    5296:	80 e0       	ldi	r24, 0x00	; 0
    5298:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    529c:	aa 24       	eor	r10, r10
    529e:	a3 94       	inc	r10
    52a0:	81 11       	cpse	r24, r1
    52a2:	01 c0       	rjmp	.+2      	; 0x52a6 <main+0x3fe>
    52a4:	a1 2c       	mov	r10, r1
    52a6:	a0 92 a1 28 	sts	0x28A1, r10	; 0x8028a1 <STIR_VALUE_SET>
    52aa:	81 e0       	ldi	r24, 0x01	; 1
    52ac:	90 e0       	ldi	r25, 0x00	; 0
    52ae:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    52b2:	bb 24       	eor	r11, r11
    52b4:	b3 94       	inc	r11
    52b6:	81 11       	cpse	r24, r1
    52b8:	01 c0       	rjmp	.+2      	; 0x52bc <main+0x414>
    52ba:	b1 2c       	mov	r11, r1
    52bc:	b0 92 53 29 	sts	0x2953, r11	; 0x802953 <DEGREE_VALUE_SET>
    52c0:	82 e0       	ldi	r24, 0x02	; 2
    52c2:	90 e0       	ldi	r25, 0x00	; 0
    52c4:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    52c8:	c8 2e       	mov	r12, r24
    52ca:	d1 2c       	mov	r13, r1
    52cc:	c0 92 12 29 	sts	0x2912, r12	; 0x802912 <SAFE_VALUE_SET_DEG>
    52d0:	d0 92 13 29 	sts	0x2913, r13	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    52d4:	60 e1       	ldi	r22, 0x10	; 16
    52d6:	79 e2       	ldi	r23, 0x29	; 41
    52d8:	83 e0       	ldi	r24, 0x03	; 3
    52da:	90 e0       	ldi	r25, 0x00	; 0
    52dc:	0e 94 2d 10 	call	0x205a	; 0x205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    52e0:	85 e0       	ldi	r24, 0x05	; 5
    52e2:	90 e0       	ldi	r25, 0x00	; 0
    52e4:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    52e8:	e8 2e       	mov	r14, r24
    52ea:	f1 2c       	mov	r15, r1
    52ec:	e0 92 d8 28 	sts	0x28D8, r14	; 0x8028d8 <CAL_SELECT_VALUE>
    52f0:	f0 92 d9 28 	sts	0x28D9, r15	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    52f4:	1a e0       	ldi	r17, 0x0A	; 10
    52f6:	81 2e       	mov	r8, r17
    52f8:	19 e2       	ldi	r17, 0x29	; 41
    52fa:	91 2e       	mov	r9, r17
main():
    52fc:	06 e4       	ldi	r16, 0x46	; 70
    52fe:	10 e0       	ldi	r17, 0x00	; 0
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    5300:	09 83       	std	Y+1, r16	; 0x01
    5302:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    5304:	ce 01       	movw	r24, r28
    5306:	01 96       	adiw	r24, 0x01	; 1
    5308:	0e 94 1d 10 	call	0x203a	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    530c:	f4 01       	movw	r30, r8
    530e:	81 93       	st	Z+, r24
    5310:	4f 01       	movw	r8, r30
_ZN5EEPtrppEv():
    5312:	0f 5f       	subi	r16, 0xFF	; 255
    5314:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    5316:	0a 34       	cpi	r16, 0x4A	; 74
    5318:	11 05       	cpc	r17, r1
    531a:	91 f7       	brne	.-28     	; 0x5300 <main+0x458>
Setup():
    531c:	87 e0       	ldi	r24, 0x07	; 7
    531e:	90 e0       	ldi	r25, 0x00	; 0
    5320:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    5324:	91 e0       	ldi	r25, 0x01	; 1
    5326:	81 11       	cpse	r24, r1
    5328:	01 c0       	rjmp	.+2      	; 0x532c <main+0x484>
    532a:	90 e0       	ldi	r25, 0x00	; 0
    532c:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <SIGN>
    5330:	88 e0       	ldi	r24, 0x08	; 8
    5332:	90 e0       	ldi	r25, 0x00	; 0
    5334:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    5338:	91 e0       	ldi	r25, 0x01	; 1
    533a:	81 11       	cpse	r24, r1
    533c:	01 c0       	rjmp	.+2      	; 0x5340 <main+0x498>
    533e:	90 e0       	ldi	r25, 0x00	; 0
    5340:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    5344:	89 e0       	ldi	r24, 0x09	; 9
    5346:	90 e0       	ldi	r25, 0x00	; 0
    5348:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    534c:	91 e0       	ldi	r25, 0x01	; 1
    534e:	81 11       	cpse	r24, r1
    5350:	01 c0       	rjmp	.+2      	; 0x5354 <main+0x4ac>
    5352:	90 e0       	ldi	r25, 0x00	; 0
    5354:	90 93 e2 28 	sts	0x28E2, r25	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    5358:	60 ed       	ldi	r22, 0xD0	; 208
    535a:	78 e2       	ldi	r23, 0x28	; 40
    535c:	80 e5       	ldi	r24, 0x50	; 80
    535e:	90 e0       	ldi	r25, 0x00	; 0
    5360:	0e 94 52 10 	call	0x20a4	; 0x20a4 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    5364:	6c ec       	ldi	r22, 0xCC	; 204
    5366:	78 e2       	ldi	r23, 0x28	; 40
    5368:	8a e5       	ldi	r24, 0x5A	; 90
    536a:	90 e0       	ldi	r25, 0x00	; 0
    536c:	0e 94 52 10 	call	0x20a4	; 0x20a4 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    5370:	68 ec       	ldi	r22, 0xC8	; 200
    5372:	78 e2       	ldi	r23, 0x28	; 40
    5374:	84 e6       	ldi	r24, 0x64	; 100
    5376:	90 e0       	ldi	r25, 0x00	; 0
    5378:	0e 94 52 10 	call	0x20a4	; 0x20a4 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    537c:	64 ec       	ldi	r22, 0xC4	; 196
    537e:	78 e2       	ldi	r23, 0x28	; 40
    5380:	8e e6       	ldi	r24, 0x6E	; 110
    5382:	90 e0       	ldi	r25, 0x00	; 0
    5384:	0e 94 52 10 	call	0x20a4	; 0x20a4 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5388:	81 e4       	ldi	r24, 0x41	; 65
    538a:	90 e0       	ldi	r25, 0x00	; 0
    538c:	89 83       	std	Y+1, r24	; 0x01
    538e:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    5390:	ce 01       	movw	r24, r28
    5392:	01 96       	adiw	r24, 0x01	; 1
    5394:	0e 94 1d 10 	call	0x203a	; 0x203a <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5398:	80 93 68 28 	sts	0x2868, r24	; 0x802868 <TIME_SOCK_OR_TOTAL>
Setup():
    539c:	67 e5       	ldi	r22, 0x57	; 87
    539e:	78 e2       	ldi	r23, 0x28	; 40
    53a0:	88 e9       	ldi	r24, 0x98	; 152
    53a2:	90 e0       	ldi	r25, 0x00	; 0
    53a4:	0e 94 2d 10 	call	0x205a	; 0x205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    53a8:	65 e5       	ldi	r22, 0x55	; 85
    53aa:	78 e2       	ldi	r23, 0x28	; 40
    53ac:	8a e9       	ldi	r24, 0x9A	; 154
    53ae:	90 e0       	ldi	r25, 0x00	; 0
    53b0:	0e 94 2d 10 	call	0x205a	; 0x205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    53b4:	8f e0       	ldi	r24, 0x0F	; 15
    53b6:	90 e0       	ldi	r25, 0x00	; 0
    53b8:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    53bc:	01 e0       	ldi	r16, 0x01	; 1
    53be:	81 11       	cpse	r24, r1
    53c0:	01 c0       	rjmp	.+2      	; 0x53c4 <main+0x51c>
    53c2:	00 e0       	ldi	r16, 0x00	; 0
    53c4:	00 93 a8 28 	sts	0x28A8, r16	; 0x8028a8 <Proceess_Resume_Enable_Flag>
    53c8:	86 e9       	ldi	r24, 0x96	; 150
    53ca:	90 e0       	ldi	r25, 0x00	; 0
    53cc:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    53d0:	11 e0       	ldi	r17, 0x01	; 1
    53d2:	81 11       	cpse	r24, r1
    53d4:	01 c0       	rjmp	.+2      	; 0x53d8 <main+0x530>
    53d6:	10 e0       	ldi	r17, 0x00	; 0
    53d8:	10 93 0e 29 	sts	0x290E, r17	; 0x80290e <select_product_type>
    53dc:	84 e8       	ldi	r24, 0x84	; 132
    53de:	90 e0       	ldi	r25, 0x00	; 0
    53e0:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    53e4:	91 e0       	ldi	r25, 0x01	; 1
    53e6:	81 11       	cpse	r24, r1
    53e8:	01 c0       	rjmp	.+2      	; 0x53ec <main+0x544>
    53ea:	90 e0       	ldi	r25, 0x00	; 0
    53ec:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <select_heating_type>
    53f0:	2a 2d       	mov	r18, r10
    53f2:	30 e0       	ldi	r19, 0x00	; 0
    53f4:	20 93 21 29 	sts	0x2921, r18	; 0x802921 <SET_LONG_VALUE>
    53f8:	30 93 22 29 	sts	0x2922, r19	; 0x802922 <SET_LONG_VALUE+0x1>
    53fc:	2b 2d       	mov	r18, r11
    53fe:	30 e0       	ldi	r19, 0x00	; 0
    5400:	20 93 23 29 	sts	0x2923, r18	; 0x802923 <SET_LONG_VALUE+0x2>
    5404:	30 93 24 29 	sts	0x2924, r19	; 0x802924 <SET_LONG_VALUE+0x3>
    5408:	c0 92 25 29 	sts	0x2925, r12	; 0x802925 <SET_LONG_VALUE+0x4>
    540c:	d0 92 26 29 	sts	0x2926, r13	; 0x802926 <SET_LONG_VALUE+0x5>
    5410:	20 91 10 29 	lds	r18, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    5414:	30 91 11 29 	lds	r19, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    5418:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
    541c:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
    5420:	e0 92 2d 29 	sts	0x292D, r14	; 0x80292d <SET_LONG_VALUE+0xc>
    5424:	f0 92 2e 29 	sts	0x292E, r15	; 0x80292e <SET_LONG_VALUE+0xd>
    5428:	20 91 68 28 	lds	r18, 0x2868	; 0x802868 <TIME_SOCK_OR_TOTAL>
    542c:	30 e0       	ldi	r19, 0x00	; 0
    542e:	20 93 27 29 	sts	0x2927, r18	; 0x802927 <SET_LONG_VALUE+0x6>
    5432:	30 93 28 29 	sts	0x2928, r19	; 0x802928 <SET_LONG_VALUE+0x7>
    5436:	20 2f       	mov	r18, r16
    5438:	30 e0       	ldi	r19, 0x00	; 0
    543a:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x8>
    543e:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x9>
    5442:	89 2f       	mov	r24, r25
    5444:	90 e0       	ldi	r25, 0x00	; 0
    5446:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
    544a:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
    544e:	81 2f       	mov	r24, r17
    5450:	90 e0       	ldi	r25, 0x00	; 0
    5452:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0xa>
    5456:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0xb>
    545a:	60 e4       	ldi	r22, 0x40	; 64
    545c:	79 e2       	ldi	r23, 0x29	; 41
    545e:	88 e7       	ldi	r24, 0x78	; 120
    5460:	90 e0       	ldi	r25, 0x00	; 0
    5462:	0e 94 2d 10 	call	0x205a	; 0x205a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    5466:	83 e7       	ldi	r24, 0x73	; 115
    5468:	90 e0       	ldi	r25, 0x00	; 0
    546a:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    546e:	90 e0       	ldi	r25, 0x00	; 0
    5470:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
    5474:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
    5478:	85 e7       	ldi	r24, 0x75	; 117
    547a:	90 e0       	ldi	r25, 0x00	; 0
    547c:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    5480:	90 e0       	ldi	r25, 0x00	; 0
    5482:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
    5486:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
    548a:	8d e7       	ldi	r24, 0x7D	; 125
    548c:	90 e0       	ldi	r25, 0x00	; 0
    548e:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    5492:	90 e0       	ldi	r25, 0x00	; 0
    5494:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
    5498:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
    549c:	82 e8       	ldi	r24, 0x82	; 130
    549e:	90 e0       	ldi	r25, 0x00	; 0
    54a0:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    54a4:	90 e0       	ldi	r25, 0x00	; 0
    54a6:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
    54aa:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
    54ae:	87 e8       	ldi	r24, 0x87	; 135
    54b0:	90 e0       	ldi	r25, 0x00	; 0
    54b2:	0e 94 84 10 	call	0x2108	; 0x2108 <EEPROMClass::read(int) [clone .isra.0]>
    54b6:	91 e0       	ldi	r25, 0x01	; 1
    54b8:	81 11       	cpse	r24, r1
    54ba:	01 c0       	rjmp	.+2      	; 0x54be <main+0x616>
    54bc:	90 e0       	ldi	r25, 0x00	; 0
    54be:	90 93 a9 28 	sts	0x28A9, r25	; 0x8028a9 <Process_Interrupt_flag>
setup():
    54c2:	8d e2       	ldi	r24, 0x2D	; 45
    54c4:	9b e2       	ldi	r25, 0x2B	; 43
    54c6:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
pinMode():
    54ca:	62 e0       	ldi	r22, 0x02	; 2
    54cc:	83 e2       	ldi	r24, 0x23	; 35
    54ce:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    54d2:	62 e0       	ldi	r22, 0x02	; 2
    54d4:	85 e2       	ldi	r24, 0x25	; 37
    54d6:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    54da:	62 e0       	ldi	r22, 0x02	; 2
    54dc:	84 e2       	ldi	r24, 0x24	; 36
    54de:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
    54e2:	62 e0       	ldi	r22, 0x02	; 2
    54e4:	82 e2       	ldi	r24, 0x22	; 34
    54e6:	0e 94 c7 07 	call	0xf8e	; 0xf8e <pinMode.part.1>
attachClick():
    54ea:	8c e3       	ldi	r24, 0x3C	; 60
    54ec:	91 e1       	ldi	r25, 0x11	; 17
    54ee:	80 93 b2 2b 	sts	0x2BB2, r24	; 0x802bb2 <button1+0xd>
    54f2:	90 93 b3 2b 	sts	0x2BB3, r25	; 0x802bb3 <button1+0xe>
attachLongPressStart():
    54f6:	87 e9       	ldi	r24, 0x97	; 151
    54f8:	9d e0       	ldi	r25, 0x0D	; 13
    54fa:	80 93 b8 2b 	sts	0x2BB8, r24	; 0x802bb8 <button1+0x13>
    54fe:	90 93 b9 2b 	sts	0x2BB9, r25	; 0x802bb9 <button1+0x14>
attachClick():
    5502:	87 e4       	ldi	r24, 0x47	; 71
    5504:	9d e0       	ldi	r25, 0x0D	; 13
    5506:	80 93 93 2b 	sts	0x2B93, r24	; 0x802b93 <button2+0xd>
    550a:	90 93 94 2b 	sts	0x2B94, r25	; 0x802b94 <button2+0xe>
attachDuringLongPress():
    550e:	80 e3       	ldi	r24, 0x30	; 48
    5510:	9d e0       	ldi	r25, 0x0D	; 13
    5512:	80 93 9d 2b 	sts	0x2B9D, r24	; 0x802b9d <button2+0x17>
    5516:	90 93 9e 2b 	sts	0x2B9E, r25	; 0x802b9e <button2+0x18>
attachLongPressStop():
    551a:	85 e2       	ldi	r24, 0x25	; 37
    551c:	96 e0       	ldi	r25, 0x06	; 6
    551e:	80 93 9b 2b 	sts	0x2B9B, r24	; 0x802b9b <button2+0x15>
    5522:	90 93 9c 2b 	sts	0x2B9C, r25	; 0x802b9c <button2+0x16>
attachClick():
    5526:	81 ed       	ldi	r24, 0xD1	; 209
    5528:	9c e0       	ldi	r25, 0x0C	; 12
    552a:	80 93 74 2b 	sts	0x2B74, r24	; 0x802b74 <button3+0xd>
    552e:	90 93 75 2b 	sts	0x2B75, r25	; 0x802b75 <button3+0xe>
attachDuringLongPress():
    5532:	8a eb       	ldi	r24, 0xBA	; 186
    5534:	9c e0       	ldi	r25, 0x0C	; 12
    5536:	80 93 7e 2b 	sts	0x2B7E, r24	; 0x802b7e <button3+0x17>
    553a:	90 93 7f 2b 	sts	0x2B7F, r25	; 0x802b7f <button3+0x18>
attachLongPressStop():
    553e:	8a e1       	ldi	r24, 0x1A	; 26
    5540:	96 e0       	ldi	r25, 0x06	; 6
    5542:	80 93 7c 2b 	sts	0x2B7C, r24	; 0x802b7c <button3+0x15>
    5546:	90 93 7d 2b 	sts	0x2B7D, r25	; 0x802b7d <button3+0x16>
attachClick():
    554a:	87 e5       	ldi	r24, 0x57	; 87
    554c:	9c e0       	ldi	r25, 0x0C	; 12
    554e:	80 93 55 2b 	sts	0x2B55, r24	; 0x802b55 <button4+0xd>
    5552:	90 93 56 2b 	sts	0x2B56, r25	; 0x802b56 <button4+0xe>
attachLongPressStart():
    5556:	80 e3       	ldi	r24, 0x30	; 48
    5558:	9c e0       	ldi	r25, 0x0C	; 12
    555a:	80 93 5b 2b 	sts	0x2B5B, r24	; 0x802b5b <button4+0x13>
    555e:	90 93 5c 2b 	sts	0x2B5C, r25	; 0x802b5c <button4+0x14>
setup():
    5562:	84 ec       	ldi	r24, 0xC4	; 196
    5564:	9b e2       	ldi	r25, 0x2B	; 43
    5566:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
DISPLAY_DIGIT2():
    556a:	ea e0       	ldi	r30, 0x0A	; 10
    556c:	ee 2e       	mov	r14, r30
    556e:	f1 2c       	mov	r15, r1
    5570:	08 e1       	ldi	r16, 0x18	; 24
    5572:	10 e0       	ldi	r17, 0x00	; 0
    5574:	fe e1       	ldi	r31, 0x1E	; 30
    5576:	4f 2e       	mov	r4, r31
    5578:	51 2c       	mov	r5, r1
SET_LONG_PRESS_FUNCTION():
    557a:	a9 e1       	ldi	r26, 0x19	; 25
    557c:	6a 2e       	mov	r6, r26
    557e:	71 2c       	mov	r7, r1
DISPLAY_DIGIT1():
    5580:	b8 e1       	ldi	r27, 0x18	; 24
    5582:	2b 2e       	mov	r2, r27
    5584:	31 2c       	mov	r3, r1
loop():
    5586:	8d e2       	ldi	r24, 0x2D	; 45
    5588:	9b e2       	ldi	r25, 0x2B	; 43
    558a:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
DISP_UPDATE():
    558e:	8f ed       	ldi	r24, 0xDF	; 223
    5590:	9b e2       	ldi	r25, 0x2B	; 43
    5592:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
loop():
    5596:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
    559a:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    559e:	88 23       	and	r24, r24
    55a0:	a1 f1       	breq	.+104    	; 0x560a <main+0x762>
    55a2:	84 ec       	ldi	r24, 0xC4	; 196
    55a4:	9b e2       	ldi	r25, 0x2B	; 43
    55a6:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
    55aa:	89 e1       	ldi	r24, 0x19	; 25
    55ac:	90 e0       	ldi	r25, 0x00	; 0
    55ae:	0e 94 42 0b 	call	0x1684	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
DISPLAY_DIGIT2():
    55b2:	82 e2       	ldi	r24, 0x22	; 34
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    55ba:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    55be:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits2+0x2>
    55c2:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits2+0x3>
    55c6:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits2+0x4>
    55ca:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits2+0x5>
    55ce:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits2+0x6>
    55d2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    55d6:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    55da:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    55de:	84 e0       	ldi	r24, 0x04	; 4
    55e0:	90 e0       	ldi	r25, 0x00	; 0
    55e2:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    55e6:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    55ea:	10 92 f9 28 	sts	0x28F9, r1	; 0x8028f9 <digits1+0x4>
    55ee:	10 92 fa 28 	sts	0x28FA, r1	; 0x8028fa <digits1+0x5>
    55f2:	82 e0       	ldi	r24, 0x02	; 2
    55f4:	90 e0       	ldi	r25, 0x00	; 0
    55f6:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    55fa:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
loop():
    55fe:	81 e0       	ldi	r24, 0x01	; 1
    5600:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
main():
    5604:	0e 94 95 07 	call	0xf2a	; 0xf2a <serialEventRun()>
    5608:	be cf       	rjmp	.-132    	; 0x5586 <main+0x6de>
stop():
    560a:	10 92 c4 2b 	sts	0x2BC4, r1	; 0x802bc4 <VersionDisplay>
    560e:	10 92 cf 2b 	sts	0x2BCF, r1	; 0x802bcf <VersionDisplay+0xb>
    5612:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <VersionDisplay+0xc>
    5616:	10 92 d1 2b 	sts	0x2BD1, r1	; 0x802bd1 <VersionDisplay+0xd>
    561a:	10 92 d2 2b 	sts	0x2BD2, r1	; 0x802bd2 <VersionDisplay+0xe>
    561e:	10 92 d3 2b 	sts	0x2BD3, r1	; 0x802bd3 <VersionDisplay+0xf>
    5622:	10 92 d4 2b 	sts	0x2BD4, r1	; 0x802bd4 <VersionDisplay+0x10>
loop():
    5626:	20 e0       	ldi	r18, 0x00	; 0
    5628:	30 e0       	ldi	r19, 0x00	; 0
    562a:	40 ef       	ldi	r20, 0xF0	; 240
    562c:	52 e4       	ldi	r21, 0x42	; 66
    562e:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    5632:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    5636:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    563a:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    563e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <__gesf2>
    5642:	87 fd       	sbrc	r24, 7
    5644:	57 c0       	rjmp	.+174    	; 0x56f4 <main+0x84c>
digitalWrite():
    5646:	60 e0       	ldi	r22, 0x00	; 0
    5648:	88 e1       	ldi	r24, 0x18	; 24
    564a:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
Probe_Error():
    564e:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <DOT2_0>
    5652:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT2_2>
    5656:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    565a:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT1_2>
    565e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    5662:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5666:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    566a:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    566e:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    5672:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    5676:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    567a:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    567e:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
digitalWrite():
    5682:	60 e0       	ldi	r22, 0x00	; 0
    5684:	8c e0       	ldi	r24, 0x0C	; 12
    5686:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    568a:	60 e0       	ldi	r22, 0x00	; 0
    568c:	8d e0       	ldi	r24, 0x0D	; 13
    568e:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
Probe_Error():
    5692:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <toggle>
    5696:	88 23       	and	r24, r24
    5698:	11 f4       	brne	.+4      	; 0x569e <main+0x7f6>
    569a:	0c 94 77 39 	jmp	0x72ee	; 0x72ee <main+0x2446>
digitalWrite():
    569e:	61 e0       	ldi	r22, 0x01	; 1
    56a0:	85 e1       	ldi	r24, 0x15	; 21
    56a2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    56a6:	8b e0       	ldi	r24, 0x0B	; 11
    56a8:	90 e0       	ldi	r25, 0x00	; 0
    56aa:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    56ae:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    56b2:	81 e1       	ldi	r24, 0x11	; 17
    56b4:	90 e0       	ldi	r25, 0x00	; 0
    56b6:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    56ba:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    56be:	27 e1       	ldi	r18, 0x17	; 23
    56c0:	30 e0       	ldi	r19, 0x00	; 0
    56c2:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    56c6:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    56ca:	4e e0       	ldi	r20, 0x0E	; 14
    56cc:	50 e0       	ldi	r21, 0x00	; 0
    56ce:	40 93 f3 28 	sts	0x28F3, r20	; 0x8028f3 <digits2+0x6>
    56d2:	50 93 f4 28 	sts	0x28F4, r21	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    56d6:	4f e0       	ldi	r20, 0x0F	; 15
    56d8:	50 e0       	ldi	r21, 0x00	; 0
    56da:	40 93 f5 28 	sts	0x28F5, r20	; 0x8028f5 <digits1>
    56de:	50 93 f6 28 	sts	0x28F6, r21	; 0x8028f6 <digits1+0x1>
    56e2:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    56e6:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    56ea:	20 93 f9 28 	sts	0x28F9, r18	; 0x8028f9 <digits1+0x4>
    56ee:	30 93 fa 28 	sts	0x28FA, r19	; 0x8028fa <digits1+0x5>
    56f2:	43 c6       	rjmp	.+3206   	; 0x637a <main+0x14d2>
digitalRead():
    56f4:	85 e2       	ldi	r24, 0x25	; 37
    56f6:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
    56fa:	d0 90 46 28 	lds	r13, 0x2846	; 0x802846 <but1>
but_check():
    56fe:	81 11       	cpse	r24, r1
    5700:	43 c0       	rjmp	.+134    	; 0x5788 <main+0x8e0>
digitalRead():
    5702:	84 e2       	ldi	r24, 0x24	; 36
    5704:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
but_check():
    5708:	81 11       	cpse	r24, r1
    570a:	3e c0       	rjmp	.+124    	; 0x5788 <main+0x8e0>
    570c:	d1 10       	cpse	r13, r1
    570e:	3c c0       	rjmp	.+120    	; 0x5788 <main+0x8e0>
    5710:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    5714:	60 93 42 28 	sts	0x2842, r22	; 0x802842 <start_tt>
    5718:	70 93 43 28 	sts	0x2843, r23	; 0x802843 <start_tt+0x1>
    571c:	80 93 44 28 	sts	0x2844, r24	; 0x802844 <start_tt+0x2>
    5720:	90 93 45 28 	sts	0x2845, r25	; 0x802845 <start_tt+0x3>
    5724:	81 e0       	ldi	r24, 0x01	; 1
    5726:	80 93 46 28 	sts	0x2846, r24	; 0x802846 <but1>
loop():
    572a:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    572e:	88 23       	and	r24, r24
    5730:	11 f4       	brne	.+4      	; 0x5736 <main+0x88e>
    5732:	0c 94 73 39 	jmp	0x72e6	; 0x72e6 <main+0x243e>
digitalWrite():
    5736:	60 e0       	ldi	r22, 0x00	; 0
    5738:	8c e0       	ldi	r24, 0x0C	; 12
    573a:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    573e:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    5742:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    5746:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    574a:	88 23       	and	r24, r24
    574c:	09 f4       	brne	.+2      	; 0x5750 <main+0x8a8>
    574e:	77 c7       	rjmp	.+3822   	; 0x663e <main+0x1796>
    5750:	e4 31       	cpi	r30, 0x14	; 20
    5752:	f1 05       	cpc	r31, r1
    5754:	08 f0       	brcs	.+2      	; 0x5758 <main+0x8b0>
    5756:	56 cf       	rjmp	.-340    	; 0x5604 <main+0x75c>
    5758:	e0 55       	subi	r30, 0x50	; 80
    575a:	f4 4d       	sbci	r31, 0xD4	; 212
    575c:	0c 94 f8 3b 	jmp	0x77f0	; 0x77f0 <__tablejump2__>
    5760:	18 2c       	mov	r1, r8
    5762:	71 2c       	mov	r7, r1
    5764:	af 2c       	mov	r10, r15
    5766:	1a 2d       	mov	r17, r10
    5768:	7e 2d       	mov	r23, r14
    576a:	cc 2d       	mov	r28, r12
    576c:	23 2e       	mov	r2, r19
    576e:	64 2e       	mov	r6, r20
    5770:	91 2e       	mov	r9, r17
    5772:	de 2e       	mov	r13, r30
    5774:	2d 2f       	mov	r18, r29
    5776:	72 2f       	mov	r23, r18
    5778:	af 2f       	mov	r26, r31
    577a:	28 30       	cpi	r18, 0x08	; 8
    577c:	5a 30       	cpi	r21, 0x0A	; 10
    577e:	d2 30       	cpi	r29, 0x02	; 2
    5780:	d7 30       	cpi	r29, 0x07	; 7
    5782:	2c 31       	cpi	r18, 0x1C	; 28
    5784:	59 31       	cpi	r21, 0x19	; 25
    5786:	8c 31       	cpi	r24, 0x1C	; 28
digitalRead():
    5788:	85 e2       	ldi	r24, 0x25	; 37
    578a:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
but_check():
    578e:	88 23       	and	r24, r24
    5790:	61 f0       	breq	.+24     	; 0x57aa <main+0x902>
    5792:	dd 20       	and	r13, r13
    5794:	09 f4       	brne	.+2      	; 0x5798 <main+0x8f0>
    5796:	c9 cf       	rjmp	.-110    	; 0x572a <main+0x882>
digitalRead():
    5798:	85 e2       	ldi	r24, 0x25	; 37
    579a:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
but_check():
    579e:	81 30       	cpi	r24, 0x01	; 1
    57a0:	09 f0       	breq	.+2      	; 0x57a4 <main+0x8fc>
    57a2:	3f c0       	rjmp	.+126    	; 0x5822 <main+0x97a>
    57a4:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <but1>
    57a8:	c0 cf       	rjmp	.-128    	; 0x572a <main+0x882>
    57aa:	c0 90 54 29 	lds	r12, 0x2954	; 0x802954 <LONG_PRESS>
digitalRead():
    57ae:	84 e2       	ldi	r24, 0x24	; 36
    57b0:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
but_check():
    57b4:	81 11       	cpse	r24, r1
    57b6:	ed cf       	rjmp	.-38     	; 0x5792 <main+0x8ea>
    57b8:	dd 20       	and	r13, r13
    57ba:	09 f4       	brne	.+2      	; 0x57be <main+0x916>
    57bc:	b6 cf       	rjmp	.-148    	; 0x572a <main+0x882>
    57be:	0e 94 8e 09 	call	0x131c	; 0x131c <millis>
    57c2:	80 90 42 28 	lds	r8, 0x2842	; 0x802842 <start_tt>
    57c6:	90 90 43 28 	lds	r9, 0x2843	; 0x802843 <start_tt+0x1>
    57ca:	a0 90 44 28 	lds	r10, 0x2844	; 0x802844 <start_tt+0x2>
    57ce:	b0 90 45 28 	lds	r11, 0x2845	; 0x802845 <start_tt+0x3>
    57d2:	68 19       	sub	r22, r8
    57d4:	79 09       	sbc	r23, r9
    57d6:	8a 09       	sbc	r24, r10
    57d8:	9b 09       	sbc	r25, r11
    57da:	68 3b       	cpi	r22, 0xB8	; 184
    57dc:	7b 40       	sbci	r23, 0x0B	; 11
    57de:	81 05       	cpc	r24, r1
    57e0:	91 05       	cpc	r25, r1
    57e2:	08 f4       	brcc	.+2      	; 0x57e6 <main+0x93e>
    57e4:	a2 cf       	rjmp	.-188    	; 0x572a <main+0x882>
    57e6:	84 ef       	ldi	r24, 0xF4	; 244
    57e8:	91 e0       	ldi	r25, 0x01	; 1
    57ea:	0e 94 42 0b 	call	0x1684	; 0x1684 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.42]>
    57ee:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    57f2:	81 11       	cpse	r24, r1
    57f4:	9a cf       	rjmp	.-204    	; 0x572a <main+0x882>
    57f6:	c1 10       	cpse	r12, r1
    57f8:	9e cf       	rjmp	.-196    	; 0x5736 <main+0x88e>
    57fa:	8e e5       	ldi	r24, 0x5E	; 94
    57fc:	91 e0       	ldi	r25, 0x01	; 1
    57fe:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <i>
    5802:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <i+0x1>
    5806:	81 e0       	ldi	r24, 0x01	; 1
    5808:	80 93 54 29 	sts	0x2954, r24	; 0x802954 <LONG_PRESS>
    580c:	80 93 47 28 	sts	0x2847, r24	; 0x802847 <RST_BUTT>
    5810:	80 93 4a 28 	sts	0x284A, r24	; 0x80284a <Service_Menu>
    5814:	85 e0       	ldi	r24, 0x05	; 5
    5816:	90 e0       	ldi	r25, 0x00	; 0
    5818:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    581c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5820:	84 cf       	rjmp	.-248    	; 0x572a <main+0x882>
digitalRead():
    5822:	84 e2       	ldi	r24, 0x24	; 36
    5824:	0e 94 45 09 	call	0x128a	; 0x128a <digitalRead.part.3>
but_check():
    5828:	81 30       	cpi	r24, 0x01	; 1
    582a:	09 f0       	breq	.+2      	; 0x582e <main+0x986>
    582c:	7e cf       	rjmp	.-260    	; 0x572a <main+0x882>
    582e:	ba cf       	rjmp	.-140    	; 0x57a4 <main+0x8fc>
SET_LONG_PRESS_FUNCTION():
    5830:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5834:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    5838:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    583c:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5840:	8c e0       	ldi	r24, 0x0C	; 12
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5848:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    584c:	80 e1       	ldi	r24, 0x10	; 16
    584e:	90 e0       	ldi	r25, 0x00	; 0
    5850:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5854:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5858:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits2+0x4>
    585c:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits2+0x5>
    5860:	81 e1       	ldi	r24, 0x11	; 17
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5868:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    586c:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5870:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5874:	89 31       	cpi	r24, 0x19	; 25
    5876:	91 05       	cpc	r25, r1
    5878:	4c f4       	brge	.+18     	; 0x588c <main+0x9e4>
DISPLAY_DIGIT1():
    587a:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    587e:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5882:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5886:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    588a:	5c c7       	rjmp	.+3768   	; 0x6744 <main+0x189c>
SET_LONG_PRESS_FUNCTION():
    588c:	20 91 21 29 	lds	r18, 0x2921	; 0x802921 <SET_LONG_VALUE>
    5890:	30 91 22 29 	lds	r19, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    5894:	10 92 f5 28 	sts	0x28F5, r1	; 0x8028f5 <digits1>
    5898:	10 92 f6 28 	sts	0x28F6, r1	; 0x8028f6 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    589c:	23 2b       	or	r18, r19
    589e:	b1 f4       	brne	.+44     	; 0x58cc <main+0xa24>
DISPLAY_DIGIT1():
    58a0:	25 e1       	ldi	r18, 0x15	; 21
    58a2:	30 e0       	ldi	r19, 0x00	; 0
    58a4:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    58a8:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    58ac:	20 93 f9 28 	sts	0x28F9, r18	; 0x8028f9 <digits1+0x4>
    58b0:	30 93 fa 28 	sts	0x28FA, r19	; 0x8028fa <digits1+0x5>
    58b4:	00 93 fb 28 	sts	0x28FB, r16	; 0x8028fb <digits1+0x6>
    58b8:	10 93 fc 28 	sts	0x28FC, r17	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    58bc:	c3 97       	sbiw	r24, 0x33	; 51
    58be:	0c f4       	brge	.+2      	; 0x58c2 <main+0xa1a>
    58c0:	a1 ce       	rjmp	.-702    	; 0x5604 <main+0x75c>
    58c2:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    58c6:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    58ca:	9c ce       	rjmp	.-712    	; 0x5604 <main+0x75c>
DISPLAY_DIGIT1():
    58cc:	24 e1       	ldi	r18, 0x14	; 20
    58ce:	30 e0       	ldi	r19, 0x00	; 0
    58d0:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    58d4:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    58d8:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    58dc:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    58e0:	e9 cf       	rjmp	.-46     	; 0x58b4 <main+0xa0c>
SET_LONG_PRESS_FUNCTION():
    58e2:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    58e6:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    58ea:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
DISPLAY_DIGIT2():
    58ee:	8c e1       	ldi	r24, 0x1C	; 28
    58f0:	90 e0       	ldi	r25, 0x00	; 0
    58f2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    58f6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    58fa:	84 e1       	ldi	r24, 0x14	; 20
    58fc:	90 e0       	ldi	r25, 0x00	; 0
    58fe:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5902:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5906:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits2+0x4>
    590a:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits2+0x5>
    590e:	80 e1       	ldi	r24, 0x10	; 16
    5910:	90 e0       	ldi	r25, 0x00	; 0
    5912:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5916:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    591a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    591e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5922:	89 31       	cpi	r24, 0x19	; 25
    5924:	91 05       	cpc	r25, r1
    5926:	0c f4       	brge	.+2      	; 0x592a <main+0xa82>
    5928:	a8 cf       	rjmp	.-176    	; 0x587a <main+0x9d2>
    592a:	20 91 23 29 	lds	r18, 0x2923	; 0x802923 <SET_LONG_VALUE+0x2>
    592e:	30 91 24 29 	lds	r19, 0x2924	; 0x802924 <SET_LONG_VALUE+0x3>
    5932:	23 2b       	or	r18, r19
    5934:	59 f4       	brne	.+22     	; 0x594c <main+0xaa4>
DISPLAY_DIGIT1():
    5936:	2d e1       	ldi	r18, 0x1D	; 29
    5938:	30 e0       	ldi	r19, 0x00	; 0
    593a:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    593e:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    5942:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x2>
    5946:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x3>
    594a:	c6 cf       	rjmp	.-116    	; 0x58d8 <main+0xa30>
    594c:	2d e1       	ldi	r18, 0x1D	; 29
    594e:	30 e0       	ldi	r19, 0x00	; 0
    5950:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    5954:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    5958:	25 e1       	ldi	r18, 0x15	; 21
    595a:	30 e0       	ldi	r19, 0x00	; 0
    595c:	b9 cf       	rjmp	.-142    	; 0x58d0 <main+0xa28>
SET_LONG_PRESS_FUNCTION():
    595e:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    5962:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
DISPLAY_DIGIT2():
    5966:	8c e0       	ldi	r24, 0x0C	; 12
    5968:	90 e0       	ldi	r25, 0x00	; 0
    596a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    596e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5972:	8d e0       	ldi	r24, 0x0D	; 13
    5974:	90 e0       	ldi	r25, 0x00	; 0
    5976:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    597a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    597e:	85 e1       	ldi	r24, 0x15	; 21
    5980:	90 e0       	ldi	r25, 0x00	; 0
    5982:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5986:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    598a:	8f e0       	ldi	r24, 0x0F	; 15
    598c:	90 e0       	ldi	r25, 0x00	; 0
    598e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5992:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
    5996:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    599a:	20 91 a4 28 	lds	r18, 0x28A4	; 0x8028a4 <i>
    599e:	30 91 a5 28 	lds	r19, 0x28A5	; 0x8028a5 <i+0x1>
    59a2:	29 31       	cpi	r18, 0x19	; 25
    59a4:	31 05       	cpc	r19, r1
    59a6:	d4 f4       	brge	.+52     	; 0x59dc <main+0xb34>
    59a8:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <BLINK_STATS>
    59ac:	91 11       	cpse	r25, r1
    59ae:	11 c0       	rjmp	.+34     	; 0x59d2 <main+0xb2a>
DISPLAY_DIGIT1():
    59b0:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    59b4:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    59b8:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    59bc:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    59c0:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    59c4:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    59c8:	88 23       	and	r24, r24
    59ca:	f1 f0       	breq	.+60     	; 0x5a08 <main+0xb60>
    59cc:	85 e1       	ldi	r24, 0x15	; 21
    59ce:	90 e0       	ldi	r25, 0x00	; 0
    59d0:	7d c0       	rjmp	.+250    	; 0x5acc <main+0xc24>
    59d2:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    59d6:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    59da:	f6 cf       	rjmp	.-20     	; 0x59c8 <main+0xb20>
    59dc:	81 11       	cpse	r24, r1
    59de:	19 c0       	rjmp	.+50     	; 0x5a12 <main+0xb6a>
    59e0:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <SET_LONG_VALUE+0x4>
    59e4:	90 91 26 29 	lds	r25, 0x2926	; 0x802926 <SET_LONG_VALUE+0x5>
    59e8:	2a e0       	ldi	r18, 0x0A	; 10
    59ea:	28 9f       	mul	r18, r24
    59ec:	b0 01       	movw	r22, r0
    59ee:	29 9f       	mul	r18, r25
    59f0:	70 0d       	add	r23, r0
    59f2:	11 24       	eor	r1, r1
    59f4:	07 2e       	mov	r0, r23
    59f6:	00 0c       	add	r0, r0
    59f8:	88 0b       	sbc	r24, r24
    59fa:	99 0b       	sbc	r25, r25
    59fc:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    5a00:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    5a04:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5a08:	e0 92 fb 28 	sts	0x28FB, r14	; 0x8028fb <digits1+0x6>
    5a0c:	f0 92 fc 28 	sts	0x28FC, r15	; 0x8028fc <digits1+0x7>
    5a10:	04 c1       	rjmp	.+520    	; 0x5c1a <main+0xd72>
    5a12:	80 91 49 29 	lds	r24, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    5a16:	90 91 4a 29 	lds	r25, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    5a1a:	2a e0       	ldi	r18, 0x0A	; 10
    5a1c:	28 9f       	mul	r18, r24
    5a1e:	b0 01       	movw	r22, r0
    5a20:	29 9f       	mul	r18, r25
    5a22:	70 0d       	add	r23, r0
    5a24:	11 24       	eor	r1, r1
    5a26:	07 2e       	mov	r0, r23
    5a28:	00 0c       	add	r0, r0
    5a2a:	88 0b       	sbc	r24, r24
    5a2c:	99 0b       	sbc	r25, r25
    5a2e:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    5a32:	cc cf       	rjmp	.-104    	; 0x59cc <main+0xb24>
    5a34:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    5a38:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5a3c:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    5a40:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5a44:	80 e1       	ldi	r24, 0x10	; 16
    5a46:	90 e0       	ldi	r25, 0x00	; 0
    5a48:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5a4c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5a50:	60 92 ef 28 	sts	0x28EF, r6	; 0x8028ef <digits2+0x2>
    5a54:	70 92 f0 28 	sts	0x28F0, r7	; 0x8028f0 <digits2+0x3>
    5a58:	22 e1       	ldi	r18, 0x12	; 18
    5a5a:	30 e0       	ldi	r19, 0x00	; 0
    5a5c:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    5a60:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    5a64:	2f e0       	ldi	r18, 0x0F	; 15
    5a66:	30 e0       	ldi	r19, 0x00	; 0
    5a68:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    5a6c:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5a70:	20 91 a4 28 	lds	r18, 0x28A4	; 0x8028a4 <i>
    5a74:	30 91 a5 28 	lds	r19, 0x28A5	; 0x8028a5 <i+0x1>
    5a78:	29 31       	cpi	r18, 0x19	; 25
    5a7a:	31 05       	cpc	r19, r1
    5a7c:	8c f4       	brge	.+34     	; 0x5aa0 <main+0xbf8>
    5a7e:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5a82:	81 11       	cpse	r24, r1
    5a84:	d3 c3       	rjmp	.+1958   	; 0x622c <main+0x1384>
DISPLAY_DIGIT1():
    5a86:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    5a8a:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5a8e:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5a92:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5a96:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5a9a:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    5a9e:	b9 c0       	rjmp	.+370    	; 0x5c12 <main+0xd6a>
SET_LONG_PRESS_FUNCTION():
    5aa0:	20 91 27 29 	lds	r18, 0x2927	; 0x802927 <SET_LONG_VALUE+0x6>
    5aa4:	30 91 28 29 	lds	r19, 0x2928	; 0x802928 <SET_LONG_VALUE+0x7>
    5aa8:	23 2b       	or	r18, r19
    5aaa:	a9 f4       	brne	.+42     	; 0x5ad6 <main+0xc2e>
DISPLAY_DIGIT1():
    5aac:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5ab0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5ab4:	27 e1       	ldi	r18, 0x17	; 23
    5ab6:	30 e0       	ldi	r19, 0x00	; 0
    5ab8:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    5abc:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    5ac0:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5ac4:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5ac8:	8f e1       	ldi	r24, 0x1F	; 31
    5aca:	90 e0       	ldi	r25, 0x00	; 0
    5acc:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    5ad0:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    5ad4:	a2 c0       	rjmp	.+324    	; 0x5c1a <main+0xd72>
    5ad6:	8c e0       	ldi	r24, 0x0C	; 12
    5ad8:	90 e0       	ldi	r25, 0x00	; 0
    5ada:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5ade:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5ae2:	87 e1       	ldi	r24, 0x17	; 23
    5ae4:	90 e0       	ldi	r25, 0x00	; 0
    5ae6:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    5aea:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    5aee:	8d e0       	ldi	r24, 0x0D	; 13
    5af0:	90 e0       	ldi	r25, 0x00	; 0
    5af2:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5af6:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5afa:	86 cf       	rjmp	.-244    	; 0x5a08 <main+0xb60>
SET_LONG_PRESS_FUNCTION():
    5afc:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5b00:	8b e0       	ldi	r24, 0x0B	; 11
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5b08:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5b0c:	81 e1       	ldi	r24, 0x11	; 17
    5b0e:	90 e0       	ldi	r25, 0x00	; 0
    5b10:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5b14:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5b18:	87 e1       	ldi	r24, 0x17	; 23
    5b1a:	90 e0       	ldi	r25, 0x00	; 0
    5b1c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5b20:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5b24:	8c e0       	ldi	r24, 0x0C	; 12
    5b26:	90 e0       	ldi	r25, 0x00	; 0
    5b28:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5b2c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5b30:	20 91 a4 28 	lds	r18, 0x28A4	; 0x8028a4 <i>
    5b34:	30 91 a5 28 	lds	r19, 0x28A5	; 0x8028a5 <i+0x1>
    5b38:	29 31       	cpi	r18, 0x19	; 25
    5b3a:	31 05       	cpc	r19, r1
    5b3c:	0c f4       	brge	.+2      	; 0x5b40 <main+0xc98>
    5b3e:	9f cf       	rjmp	.-194    	; 0x5a7e <main+0xbd6>
    5b40:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x8>
    5b44:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x9>
    5b48:	23 2b       	or	r18, r19
    5b4a:	89 f4       	brne	.+34     	; 0x5b6e <main+0xcc6>
DISPLAY_DIGIT1():
    5b4c:	20 e2       	ldi	r18, 0x20	; 32
    5b4e:	30 e0       	ldi	r19, 0x00	; 0
    5b50:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    5b54:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    5b58:	60 92 f7 28 	sts	0x28F7, r6	; 0x8028f7 <digits1+0x2>
    5b5c:	70 92 f8 28 	sts	0x28F8, r7	; 0x8028f8 <digits1+0x3>
    5b60:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5b64:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5b68:	8e e0       	ldi	r24, 0x0E	; 14
    5b6a:	90 e0       	ldi	r25, 0x00	; 0
    5b6c:	af cf       	rjmp	.-162    	; 0x5acc <main+0xc24>
    5b6e:	8f e0       	ldi	r24, 0x0F	; 15
    5b70:	90 e0       	ldi	r25, 0x00	; 0
    5b72:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5b76:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5b7a:	84 e1       	ldi	r24, 0x14	; 20
    5b7c:	90 e0       	ldi	r25, 0x00	; 0
    5b7e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    5b82:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    5b86:	8e e0       	ldi	r24, 0x0E	; 14
    5b88:	90 e0       	ldi	r25, 0x00	; 0
    5b8a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5b8e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5b92:	8a e1       	ldi	r24, 0x1A	; 26
    5b94:	90 e0       	ldi	r25, 0x00	; 0
    5b96:	9a cf       	rjmp	.-204    	; 0x5acc <main+0xc24>
SET_LONG_PRESS_FUNCTION():
    5b98:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5b9c:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    5ba0:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5ba4:	8b e0       	ldi	r24, 0x0B	; 11
    5ba6:	90 e0       	ldi	r25, 0x00	; 0
    5ba8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5bac:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5bb0:	81 e1       	ldi	r24, 0x11	; 17
    5bb2:	90 e0       	ldi	r25, 0x00	; 0
    5bb4:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5bb8:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5bbc:	80 e2       	ldi	r24, 0x20	; 32
    5bbe:	90 e0       	ldi	r25, 0x00	; 0
    5bc0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5bc4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5bc8:	80 e1       	ldi	r24, 0x10	; 16
    5bca:	90 e0       	ldi	r25, 0x00	; 0
    5bcc:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5bd0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5bd4:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5bd8:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5bdc:	49 97       	sbiw	r24, 0x19	; 25
    5bde:	0c f4       	brge	.+2      	; 0x5be2 <main+0xd3a>
    5be0:	4e cf       	rjmp	.-356    	; 0x5a7e <main+0xbd6>
    5be2:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0xa>
    5be6:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0xb>
    5bea:	89 2b       	or	r24, r25
    5bec:	d9 f0       	breq	.+54     	; 0x5c24 <main+0xd7c>
DISPLAY_DIGIT1():
    5bee:	84 e2       	ldi	r24, 0x24	; 36
    5bf0:	90 e0       	ldi	r25, 0x00	; 0
    5bf2:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5bf6:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5bfa:	8a e1       	ldi	r24, 0x1A	; 26
    5bfc:	90 e0       	ldi	r25, 0x00	; 0
    5bfe:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    5c02:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    5c06:	8c e0       	ldi	r24, 0x0C	; 12
    5c08:	90 e0       	ldi	r25, 0x00	; 0
    5c0a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5c0e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5c12:	00 93 fb 28 	sts	0x28FB, r16	; 0x8028fb <digits1+0x6>
    5c16:	10 93 fc 28 	sts	0x28FC, r17	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5c1a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5c1e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5c22:	4c ce       	rjmp	.-872    	; 0x58bc <main+0xa14>
DISPLAY_DIGIT1():
    5c24:	84 e2       	ldi	r24, 0x24	; 36
    5c26:	90 e0       	ldi	r25, 0x00	; 0
    5c28:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5c2c:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5c30:	8a e1       	ldi	r24, 0x1A	; 26
    5c32:	90 e0       	ldi	r25, 0x00	; 0
    5c34:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    5c38:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    5c3c:	e0 92 f9 28 	sts	0x28F9, r14	; 0x8028f9 <digits1+0x4>
    5c40:	f0 92 fa 28 	sts	0x28FA, r15	; 0x8028fa <digits1+0x5>
    5c44:	e6 cf       	rjmp	.-52     	; 0x5c12 <main+0xd6a>
SET_LONG_PRESS_FUNCTION():
    5c46:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5c4a:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5c4e:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    5c52:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    5c56:	2d e0       	ldi	r18, 0x0D	; 13
    5c58:	30 e0       	ldi	r19, 0x00	; 0
    5c5a:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    5c5e:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    5c62:	8a e1       	ldi	r24, 0x1A	; 26
    5c64:	90 e0       	ldi	r25, 0x00	; 0
    5c66:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5c6a:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5c6e:	4e e0       	ldi	r20, 0x0E	; 14
    5c70:	50 e0       	ldi	r21, 0x00	; 0
    5c72:	40 93 f3 28 	sts	0x28F3, r20	; 0x8028f3 <digits2+0x6>
    5c76:	50 93 f4 28 	sts	0x28F4, r21	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5c7a:	40 91 a4 28 	lds	r20, 0x28A4	; 0x8028a4 <i>
    5c7e:	50 91 a5 28 	lds	r21, 0x28A5	; 0x8028a5 <i+0x1>
    5c82:	49 31       	cpi	r20, 0x19	; 25
    5c84:	51 05       	cpc	r21, r1
    5c86:	0c f4       	brge	.+2      	; 0x5c8a <main+0xde2>
    5c88:	f8 cd       	rjmp	.-1040   	; 0x587a <main+0x9d2>
    5c8a:	60 91 2d 29 	lds	r22, 0x292D	; 0x80292d <SET_LONG_VALUE+0xc>
    5c8e:	70 91 2e 29 	lds	r23, 0x292E	; 0x80292e <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    5c92:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1>
    5c96:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x1>
    5c9a:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    5c9e:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    5ca2:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    5ca6:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    5caa:	82 e0       	ldi	r24, 0x02	; 2
    5cac:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    5cae:	67 2b       	or	r22, r23
    5cb0:	11 f4       	brne	.+4      	; 0x5cb6 <main+0xe0e>
DISPLAY_DIGIT1():
    5cb2:	81 e0       	ldi	r24, 0x01	; 1
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    5cba:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5cbe:	43 33       	cpi	r20, 0x33	; 51
    5cc0:	51 05       	cpc	r21, r1
    5cc2:	0c f0       	brlt	.+2      	; 0x5cc6 <main+0xe1e>
    5cc4:	fe cd       	rjmp	.-1028   	; 0x58c2 <main+0xa1a>
    5cc6:	9e cc       	rjmp	.-1732   	; 0x5604 <main+0x75c>
    5cc8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    5ccc:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5cd0:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    5cd4:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    5cd8:	8d e0       	ldi	r24, 0x0D	; 13
    5cda:	90 e0       	ldi	r25, 0x00	; 0
    5cdc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5ce0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5ce4:	8a e1       	ldi	r24, 0x1A	; 26
    5ce6:	90 e0       	ldi	r25, 0x00	; 0
    5ce8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5cec:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5cf0:	81 e0       	ldi	r24, 0x01	; 1
    5cf2:	90 e0       	ldi	r25, 0x00	; 0
    5cf4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5cf8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5cfc:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5d00:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5d04:	49 97       	sbiw	r24, 0x19	; 25
    5d06:	04 f5       	brge	.+64     	; 0x5d48 <main+0xea0>
    5d08:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5d0c:	81 11       	cpse	r24, r1
    5d0e:	cd c1       	rjmp	.+922    	; 0x60aa <main+0x1202>
    5d10:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    5d14:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5d18:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5d1c:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5d20:	73 ce       	rjmp	.-794    	; 0x5a08 <main+0xb60>
    5d22:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5d26:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5d2a:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    5d2e:	21 11       	cpse	r18, r1
    5d30:	28 c0       	rjmp	.+80     	; 0x5d82 <main+0xeda>
    5d32:	49 97       	sbiw	r24, 0x19	; 25
    5d34:	4c f4       	brge	.+18     	; 0x5d48 <main+0xea0>
    5d36:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5d3a:	81 11       	cpse	r24, r1
    5d3c:	b6 c1       	rjmp	.+876    	; 0x60aa <main+0x1202>
    5d3e:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5d42:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    5d46:	60 ce       	rjmp	.-832    	; 0x5a08 <main+0xb60>
    5d48:	80 91 2f 29 	lds	r24, 0x292F	; 0x80292f <SET_LONG_VALUE+0xe>
    5d4c:	90 91 30 29 	lds	r25, 0x2930	; 0x802930 <SET_LONG_VALUE+0xf>
    5d50:	24 e6       	ldi	r18, 0x64	; 100
    5d52:	28 9f       	mul	r18, r24
    5d54:	b0 01       	movw	r22, r0
    5d56:	29 9f       	mul	r18, r25
    5d58:	70 0d       	add	r23, r0
    5d5a:	11 24       	eor	r1, r1
    5d5c:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x10>
    5d60:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x11>
    5d64:	4a e0       	ldi	r20, 0x0A	; 10
    5d66:	42 9f       	mul	r20, r18
    5d68:	c0 01       	movw	r24, r0
    5d6a:	43 9f       	mul	r20, r19
    5d6c:	90 0d       	add	r25, r0
    5d6e:	11 24       	eor	r1, r1
    5d70:	68 0f       	add	r22, r24
    5d72:	79 1f       	adc	r23, r25
    5d74:	07 2e       	mov	r0, r23
    5d76:	00 0c       	add	r0, r0
    5d78:	88 0b       	sbc	r24, r24
    5d7a:	99 0b       	sbc	r25, r25
    5d7c:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    5d80:	43 ce       	rjmp	.-890    	; 0x5a08 <main+0xb60>
    5d82:	49 97       	sbiw	r24, 0x19	; 25
    5d84:	b4 f4       	brge	.+44     	; 0x5db2 <main+0xf0a>
    5d86:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5d8a:	81 11       	cpse	r24, r1
    5d8c:	0d c0       	rjmp	.+26     	; 0x5da8 <main+0xf00>
DISPLAY_DIGIT1():
    5d8e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    5d92:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5d96:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5d9a:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5d9e:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5da2:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    5da6:	12 ce       	rjmp	.-988    	; 0x59cc <main+0xb24>
SET_LONG_PRESS_FUNCTION():
    5da8:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    5dac:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    5db0:	0d ce       	rjmp	.-998    	; 0x59cc <main+0xb24>
    5db2:	80 91 4b 29 	lds	r24, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
    5db6:	90 91 4c 29 	lds	r25, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
    5dba:	2f ce       	rjmp	.-930    	; 0x5a1a <main+0xb72>
    5dbc:	dd 24       	eor	r13, r13
    5dbe:	d3 94       	inc	r13
    5dc0:	d0 92 c0 28 	sts	0x28C0, r13	; 0x8028c0 <DOT1_0>
    5dc4:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    5dc8:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    5dcc:	d0 92 b4 28 	sts	0x28B4, r13	; 0x8028b4 <CAL2_START>
DISPLAY_DIGIT2():
    5dd0:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    5dd4:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    5dd8:	8d e0       	ldi	r24, 0x0D	; 13
    5dda:	90 e0       	ldi	r25, 0x00	; 0
    5ddc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5de0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5de4:	8a e1       	ldi	r24, 0x1A	; 26
    5de6:	90 e0       	ldi	r25, 0x00	; 0
    5de8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5dec:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5df0:	82 e0       	ldi	r24, 0x02	; 2
    5df2:	90 e0       	ldi	r25, 0x00	; 0
    5df4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5df8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5dfc:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5e00:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5e04:	49 97       	sbiw	r24, 0x19	; 25
    5e06:	c4 f4       	brge	.+48     	; 0x5e38 <main+0xf90>
    5e08:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5e0c:	81 11       	cpse	r24, r1
    5e0e:	0f c0       	rjmp	.+30     	; 0x5e2e <main+0xf86>
DISPLAY_DIGIT1():
    5e10:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5e14:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5e18:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5e1c:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5e20:	8a e1       	ldi	r24, 0x1A	; 26
    5e22:	90 e0       	ldi	r25, 0x00	; 0
    5e24:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    5e28:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    5e2c:	ed cd       	rjmp	.-1062   	; 0x5a08 <main+0xb60>
    5e2e:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    5e32:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    5e36:	f4 cf       	rjmp	.-24     	; 0x5e20 <main+0xf78>
    5e38:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    5e3c:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    5e40:	2a e0       	ldi	r18, 0x0A	; 10
    5e42:	28 9f       	mul	r18, r24
    5e44:	b0 01       	movw	r22, r0
    5e46:	29 9f       	mul	r18, r25
    5e48:	70 0d       	add	r23, r0
    5e4a:	11 24       	eor	r1, r1
    5e4c:	07 2e       	mov	r0, r23
    5e4e:	00 0c       	add	r0, r0
    5e50:	88 0b       	sbc	r24, r24
    5e52:	99 0b       	sbc	r25, r25
    5e54:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    5e58:	e3 cf       	rjmp	.-58     	; 0x5e20 <main+0xf78>
    5e5a:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    5e5e:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    5e62:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    5e66:	8d e0       	ldi	r24, 0x0D	; 13
    5e68:	90 e0       	ldi	r25, 0x00	; 0
    5e6a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5e6e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5e72:	8a e1       	ldi	r24, 0x1A	; 26
    5e74:	90 e0       	ldi	r25, 0x00	; 0
    5e76:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    5e7a:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    5e7e:	82 e0       	ldi	r24, 0x02	; 2
    5e80:	90 e0       	ldi	r25, 0x00	; 0
    5e82:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    5e86:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5e8a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5e8e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5e92:	49 97       	sbiw	r24, 0x19	; 25
    5e94:	b4 f4       	brge	.+44     	; 0x5ec2 <main+0x101a>
    5e96:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5e9a:	81 11       	cpse	r24, r1
    5e9c:	0d c0       	rjmp	.+26     	; 0x5eb8 <main+0x1010>
DISPLAY_DIGIT1():
    5e9e:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5ea2:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5ea6:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5eaa:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5eae:	40 92 f5 28 	sts	0x28F5, r4	; 0x8028f5 <digits1>
    5eb2:	50 92 f6 28 	sts	0x28F6, r5	; 0x8028f6 <digits1+0x1>
    5eb6:	a8 cd       	rjmp	.-1200   	; 0x5a08 <main+0xb60>
    5eb8:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    5ebc:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    5ec0:	f6 cf       	rjmp	.-20     	; 0x5eae <main+0x1006>
    5ec2:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    5ec6:	90 91 36 29 	lds	r25, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    5eca:	2a e0       	ldi	r18, 0x0A	; 10
    5ecc:	28 9f       	mul	r18, r24
    5ece:	b0 01       	movw	r22, r0
    5ed0:	29 9f       	mul	r18, r25
    5ed2:	70 0d       	add	r23, r0
    5ed4:	11 24       	eor	r1, r1
    5ed6:	07 2e       	mov	r0, r23
    5ed8:	00 0c       	add	r0, r0
    5eda:	88 0b       	sbc	r24, r24
    5edc:	99 0b       	sbc	r25, r25
    5ede:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    5ee2:	e5 cf       	rjmp	.-54     	; 0x5eae <main+0x1006>
    5ee4:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    5ee8:	81 e0       	ldi	r24, 0x01	; 1
    5eea:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
    5eee:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5ef2:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5ef6:	07 2e       	mov	r0, r23
    5ef8:	00 0c       	add	r0, r0
    5efa:	88 0b       	sbc	r24, r24
    5efc:	99 0b       	sbc	r25, r25
    5efe:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    5f02:	8a e1       	ldi	r24, 0x1A	; 26
    5f04:	90 e0       	ldi	r25, 0x00	; 0
    5f06:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5f0a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5f0e:	87 e1       	ldi	r24, 0x17	; 23
    5f10:	90 e0       	ldi	r25, 0x00	; 0
    5f12:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5f16:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5f1a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5f1e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5f22:	49 97       	sbiw	r24, 0x19	; 25
    5f24:	6c f4       	brge	.+26     	; 0x5f40 <main+0x1098>
    5f26:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5f2a:	81 11       	cpse	r24, r1
    5f2c:	7f c1       	rjmp	.+766    	; 0x622c <main+0x1384>
    5f2e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    5f32:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    5f36:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    5f3a:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    5f3e:	6d ce       	rjmp	.-806    	; 0x5c1a <main+0xd72>
    5f40:	80 91 37 29 	lds	r24, 0x2937	; 0x802937 <SET_LONG_VALUE+0x16>
    5f44:	90 91 38 29 	lds	r25, 0x2938	; 0x802938 <SET_LONG_VALUE+0x17>
    5f48:	24 e6       	ldi	r18, 0x64	; 100
    5f4a:	28 9f       	mul	r18, r24
    5f4c:	b0 01       	movw	r22, r0
    5f4e:	29 9f       	mul	r18, r25
    5f50:	70 0d       	add	r23, r0
    5f52:	11 24       	eor	r1, r1
    5f54:	20 91 39 29 	lds	r18, 0x2939	; 0x802939 <SET_LONG_VALUE+0x18>
    5f58:	30 91 3a 29 	lds	r19, 0x293A	; 0x80293a <SET_LONG_VALUE+0x19>
    5f5c:	03 cf       	rjmp	.-506    	; 0x5d64 <main+0xebc>
    5f5e:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    5f62:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5f66:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5f6a:	07 2e       	mov	r0, r23
    5f6c:	00 0c       	add	r0, r0
    5f6e:	88 0b       	sbc	r24, r24
    5f70:	99 0b       	sbc	r25, r25
    5f72:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    5f76:	8a e1       	ldi	r24, 0x1A	; 26
    5f78:	90 e0       	ldi	r25, 0x00	; 0
    5f7a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    5f7e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    5f82:	87 e1       	ldi	r24, 0x17	; 23
    5f84:	90 e0       	ldi	r25, 0x00	; 0
    5f86:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    5f8a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    5f8e:	c0 90 37 29 	lds	r12, 0x2937	; 0x802937 <SET_LONG_VALUE+0x16>
    5f92:	d0 90 38 29 	lds	r13, 0x2938	; 0x802938 <SET_LONG_VALUE+0x17>
    5f96:	a0 90 39 29 	lds	r10, 0x2939	; 0x802939 <SET_LONG_VALUE+0x18>
    5f9a:	b0 90 3a 29 	lds	r11, 0x293A	; 0x80293a <SET_LONG_VALUE+0x19>
    5f9e:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5fa2:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5fa6:	49 97       	sbiw	r24, 0x19	; 25
    5fa8:	f4 f5       	brge	.+124    	; 0x6026 <main+0x117e>
    5faa:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    5fae:	81 11       	cpse	r24, r1
    5fb0:	35 c0       	rjmp	.+106    	; 0x601c <main+0x1174>
    5fb2:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    5fb6:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    5fba:	e0 92 fb 28 	sts	0x28FB, r14	; 0x8028fb <digits1+0x6>
    5fbe:	f0 92 fc 28 	sts	0x28FC, r15	; 0x8028fc <digits1+0x7>
    5fc2:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    5fc6:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    5fca:	c3 97       	sbiw	r24, 0x33	; 51
    5fcc:	24 f0       	brlt	.+8      	; 0x5fd6 <main+0x112e>
    5fce:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    5fd2:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    5fd6:	b5 01       	movw	r22, r10
    5fd8:	bb 0c       	add	r11, r11
    5fda:	88 0b       	sbc	r24, r24
    5fdc:	99 0b       	sbc	r25, r25
    5fde:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    5fe2:	20 e0       	ldi	r18, 0x00	; 0
    5fe4:	30 e0       	ldi	r19, 0x00	; 0
    5fe6:	40 e2       	ldi	r20, 0x20	; 32
    5fe8:	51 e4       	ldi	r21, 0x41	; 65
    5fea:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    5fee:	4b 01       	movw	r8, r22
    5ff0:	5c 01       	movw	r10, r24
    5ff2:	b6 01       	movw	r22, r12
    5ff4:	dd 0c       	add	r13, r13
    5ff6:	88 0b       	sbc	r24, r24
    5ff8:	99 0b       	sbc	r25, r25
    5ffa:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    5ffe:	9b 01       	movw	r18, r22
    6000:	ac 01       	movw	r20, r24
    6002:	c5 01       	movw	r24, r10
    6004:	b4 01       	movw	r22, r8
    6006:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    600a:	60 93 51 28 	sts	0x2851, r22	; 0x802851 <CAL2_CALCULATED_LOW_CAL_VALUE>
    600e:	70 93 52 28 	sts	0x2852, r23	; 0x802852 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    6012:	80 93 53 28 	sts	0x2853, r24	; 0x802853 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    6016:	90 93 54 28 	sts	0x2854, r25	; 0x802854 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    601a:	f4 ca       	rjmp	.-2584   	; 0x5604 <main+0x75c>
    601c:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    6020:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    6024:	ca cf       	rjmp	.-108    	; 0x5fba <main+0x1112>
    6026:	84 e6       	ldi	r24, 0x64	; 100
    6028:	8c 9d       	mul	r24, r12
    602a:	b0 01       	movw	r22, r0
    602c:	8d 9d       	mul	r24, r13
    602e:	70 0d       	add	r23, r0
    6030:	11 24       	eor	r1, r1
    6032:	2a e0       	ldi	r18, 0x0A	; 10
    6034:	2a 9d       	mul	r18, r10
    6036:	c0 01       	movw	r24, r0
    6038:	2b 9d       	mul	r18, r11
    603a:	90 0d       	add	r25, r0
    603c:	11 24       	eor	r1, r1
    603e:	68 0f       	add	r22, r24
    6040:	79 1f       	adc	r23, r25
    6042:	07 2e       	mov	r0, r23
    6044:	00 0c       	add	r0, r0
    6046:	88 0b       	sbc	r24, r24
    6048:	99 0b       	sbc	r25, r25
    604a:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    604e:	b5 cf       	rjmp	.-150    	; 0x5fba <main+0x1112>
    6050:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    6054:	60 91 4f 28 	lds	r22, 0x284F	; 0x80284f <HIGH_CAL_VALUE_SET>
    6058:	70 91 50 28 	lds	r23, 0x2850	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    605c:	07 2e       	mov	r0, r23
    605e:	00 0c       	add	r0, r0
    6060:	88 0b       	sbc	r24, r24
    6062:	99 0b       	sbc	r25, r25
    6064:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    6068:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2>
    606c:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x1>
    6070:	60 92 ef 28 	sts	0x28EF, r6	; 0x8028ef <digits2+0x2>
    6074:	70 92 f0 28 	sts	0x28F0, r7	; 0x8028f0 <digits2+0x3>
    6078:	81 e0       	ldi	r24, 0x01	; 1
    607a:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
    607e:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    6082:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    6086:	49 97       	sbiw	r24, 0x19	; 25
    6088:	0c f4       	brge	.+2      	; 0x608c <main+0x11e4>
    608a:	3e ce       	rjmp	.-900    	; 0x5d08 <main+0xe60>
    608c:	80 91 3b 29 	lds	r24, 0x293B	; 0x80293b <SET_LONG_VALUE+0x1a>
    6090:	90 91 3c 29 	lds	r25, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1b>
    6094:	24 e6       	ldi	r18, 0x64	; 100
    6096:	28 9f       	mul	r18, r24
    6098:	b0 01       	movw	r22, r0
    609a:	29 9f       	mul	r18, r25
    609c:	70 0d       	add	r23, r0
    609e:	11 24       	eor	r1, r1
    60a0:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <SET_LONG_VALUE+0x1c>
    60a4:	30 91 3e 29 	lds	r19, 0x293E	; 0x80293e <SET_LONG_VALUE+0x1d>
    60a8:	5d ce       	rjmp	.-838    	; 0x5d64 <main+0xebc>
    60aa:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    60ae:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    60b2:	aa cc       	rjmp	.-1708   	; 0x5a08 <main+0xb60>
    60b4:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    60b8:	60 91 4f 28 	lds	r22, 0x284F	; 0x80284f <HIGH_CAL_VALUE_SET>
    60bc:	70 91 50 28 	lds	r23, 0x2850	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    60c0:	07 2e       	mov	r0, r23
    60c2:	00 0c       	add	r0, r0
    60c4:	88 0b       	sbc	r24, r24
    60c6:	99 0b       	sbc	r25, r25
    60c8:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    60cc:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2>
    60d0:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x1>
    60d4:	60 92 ef 28 	sts	0x28EF, r6	; 0x8028ef <digits2+0x2>
    60d8:	70 92 f0 28 	sts	0x28F0, r7	; 0x8028f0 <digits2+0x3>
    60dc:	81 e0       	ldi	r24, 0x01	; 1
    60de:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
    60e2:	c0 90 3b 29 	lds	r12, 0x293B	; 0x80293b <SET_LONG_VALUE+0x1a>
    60e6:	d0 90 3c 29 	lds	r13, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1b>
    60ea:	a0 90 3d 29 	lds	r10, 0x293D	; 0x80293d <SET_LONG_VALUE+0x1c>
    60ee:	b0 90 3e 29 	lds	r11, 0x293E	; 0x80293e <SET_LONG_VALUE+0x1d>
    60f2:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    60f6:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    60fa:	49 97       	sbiw	r24, 0x19	; 25
    60fc:	f4 f5       	brge	.+124    	; 0x617a <main+0x12d2>
    60fe:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <BLINK_STATS>
    6102:	81 11       	cpse	r24, r1
    6104:	35 c0       	rjmp	.+106    	; 0x6170 <main+0x12c8>
    6106:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    610a:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    610e:	e0 92 fb 28 	sts	0x28FB, r14	; 0x8028fb <digits1+0x6>
    6112:	f0 92 fc 28 	sts	0x28FC, r15	; 0x8028fc <digits1+0x7>
    6116:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    611a:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    611e:	c3 97       	sbiw	r24, 0x33	; 51
    6120:	24 f0       	brlt	.+8      	; 0x612a <main+0x1282>
    6122:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    6126:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    612a:	b5 01       	movw	r22, r10
    612c:	bb 0c       	add	r11, r11
    612e:	88 0b       	sbc	r24, r24
    6130:	99 0b       	sbc	r25, r25
    6132:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    6136:	20 e0       	ldi	r18, 0x00	; 0
    6138:	30 e0       	ldi	r19, 0x00	; 0
    613a:	40 e2       	ldi	r20, 0x20	; 32
    613c:	51 e4       	ldi	r21, 0x41	; 65
    613e:	0e 94 f1 39 	call	0x73e2	; 0x73e2 <__divsf3>
    6142:	4b 01       	movw	r8, r22
    6144:	5c 01       	movw	r10, r24
    6146:	b6 01       	movw	r22, r12
    6148:	dd 0c       	add	r13, r13
    614a:	88 0b       	sbc	r24, r24
    614c:	99 0b       	sbc	r25, r25
    614e:	0e 94 8c 3a 	call	0x7518	; 0x7518 <__floatsisf>
    6152:	9b 01       	movw	r18, r22
    6154:	ac 01       	movw	r20, r24
    6156:	c5 01       	movw	r24, r10
    6158:	b4 01       	movw	r22, r8
    615a:	0e 94 89 39 	call	0x7312	; 0x7312 <__addsf3>
    615e:	60 93 4b 28 	sts	0x284B, r22	; 0x80284b <CAL2_CALCULATED_HIGH_CAL_VALUE>
    6162:	70 93 4c 28 	sts	0x284C, r23	; 0x80284c <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    6166:	80 93 4d 28 	sts	0x284D, r24	; 0x80284d <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    616a:	90 93 4e 28 	sts	0x284E, r25	; 0x80284e <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    616e:	4a ca       	rjmp	.-2924   	; 0x5604 <main+0x75c>
    6170:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    6174:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    6178:	ca cf       	rjmp	.-108    	; 0x610e <main+0x1266>
    617a:	84 e6       	ldi	r24, 0x64	; 100
    617c:	8c 9d       	mul	r24, r12
    617e:	b0 01       	movw	r22, r0
    6180:	8d 9d       	mul	r24, r13
    6182:	70 0d       	add	r23, r0
    6184:	11 24       	eor	r1, r1
    6186:	2a e0       	ldi	r18, 0x0A	; 10
    6188:	2a 9d       	mul	r18, r10
    618a:	c0 01       	movw	r24, r0
    618c:	2b 9d       	mul	r18, r11
    618e:	90 0d       	add	r25, r0
    6190:	11 24       	eor	r1, r1
    6192:	68 0f       	add	r22, r24
    6194:	79 1f       	adc	r23, r25
    6196:	07 2e       	mov	r0, r23
    6198:	00 0c       	add	r0, r0
    619a:	88 0b       	sbc	r24, r24
    619c:	99 0b       	sbc	r25, r25
    619e:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    61a2:	b5 cf       	rjmp	.-150    	; 0x610e <main+0x1266>
    61a4:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <Service_Menu>
    61a8:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    61ac:	2b ca       	rjmp	.-2986   	; 0x5604 <main+0x75c>
    61ae:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    61b2:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    61b6:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    61ba:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2>
    61be:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x1>
    61c2:	8f e0       	ldi	r24, 0x0F	; 15
    61c4:	90 e0       	ldi	r25, 0x00	; 0
    61c6:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    61ca:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    61ce:	2d e0       	ldi	r18, 0x0D	; 13
    61d0:	30 e0       	ldi	r19, 0x00	; 0
    61d2:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    61d6:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    61da:	80 e1       	ldi	r24, 0x10	; 16
    61dc:	90 e0       	ldi	r25, 0x00	; 0
    61de:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    61e2:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    61e6:	40 91 a4 28 	lds	r20, 0x28A4	; 0x8028a4 <i>
    61ea:	50 91 a5 28 	lds	r21, 0x28A5	; 0x8028a5 <i+0x1>
    61ee:	49 31       	cpi	r20, 0x19	; 25
    61f0:	51 05       	cpc	r21, r1
    61f2:	0c f4       	brge	.+2      	; 0x61f6 <main+0x134e>
    61f4:	44 cc       	rjmp	.-1912   	; 0x5a7e <main+0xbd6>
    61f6:	40 91 41 29 	lds	r20, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    61fa:	50 91 42 29 	lds	r21, 0x2942	; 0x802942 <SET_LONG_VALUE+0x21>
    61fe:	45 2b       	or	r20, r21
    6200:	d1 f4       	brne	.+52     	; 0x6236 <main+0x138e>
DISPLAY_DIGIT1():
    6202:	8c e0       	ldi	r24, 0x0C	; 12
    6204:	90 e0       	ldi	r25, 0x00	; 0
    6206:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    620a:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    620e:	8a e1       	ldi	r24, 0x1A	; 26
    6210:	90 e0       	ldi	r25, 0x00	; 0
    6212:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    6216:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    621a:	87 e1       	ldi	r24, 0x17	; 23
    621c:	90 e0       	ldi	r25, 0x00	; 0
    621e:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    6222:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    6226:	84 e2       	ldi	r24, 0x24	; 36
    6228:	90 e0       	ldi	r25, 0x00	; 0
    622a:	50 cc       	rjmp	.-1888   	; 0x5acc <main+0xc24>
SET_LONG_PRESS_FUNCTION():
    622c:	60 92 a4 28 	sts	0x28A4, r6	; 0x8028a4 <i>
    6230:	70 92 a5 28 	sts	0x28A5, r7	; 0x8028a5 <i+0x1>
    6234:	f2 cc       	rjmp	.-1564   	; 0x5c1a <main+0xd72>
DISPLAY_DIGIT1():
    6236:	45 e1       	ldi	r20, 0x15	; 21
    6238:	50 e0       	ldi	r21, 0x00	; 0
    623a:	40 93 f5 28 	sts	0x28F5, r20	; 0x8028f5 <digits1>
    623e:	50 93 f6 28 	sts	0x28F6, r21	; 0x8028f6 <digits1+0x1>
    6242:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    6246:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    624a:	2c e0       	ldi	r18, 0x0C	; 12
    624c:	30 e0       	ldi	r19, 0x00	; 0
    624e:	20 93 f9 28 	sts	0x28F9, r18	; 0x8028f9 <digits1+0x4>
    6252:	30 93 fa 28 	sts	0x28FA, r19	; 0x8028fa <digits1+0x5>
    6256:	3a cc       	rjmp	.-1932   	; 0x5acc <main+0xc24>
SET_LONG_PRESS_FUNCTION():
    6258:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    625c:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6260:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    6264:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    6268:	80 91 57 28 	lds	r24, 0x2857	; 0x802857 <processLog>
    626c:	90 91 58 28 	lds	r25, 0x2858	; 0x802858 <processLog+0x1>
    6270:	2a e0       	ldi	r18, 0x0A	; 10
    6272:	28 9f       	mul	r18, r24
    6274:	b0 01       	movw	r22, r0
    6276:	29 9f       	mul	r18, r25
    6278:	70 0d       	add	r23, r0
    627a:	11 24       	eor	r1, r1
    627c:	90 e0       	ldi	r25, 0x00	; 0
    627e:	80 e0       	ldi	r24, 0x00	; 0
    6280:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    6284:	40 92 f3 28 	sts	0x28F3, r4	; 0x8028f3 <digits2+0x6>
    6288:	50 92 f4 28 	sts	0x28F4, r5	; 0x8028f4 <digits2+0x7>
    628c:	60 91 55 28 	lds	r22, 0x2855	; 0x802855 <processLogNumberOfTimes>
    6290:	70 91 56 28 	lds	r23, 0x2856	; 0x802856 <processLogNumberOfTimes+0x1>
    6294:	90 e0       	ldi	r25, 0x00	; 0
    6296:	80 e0       	ldi	r24, 0x00	; 0
    6298:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    629c:	8d e0       	ldi	r24, 0x0D	; 13
    629e:	90 e0       	ldi	r25, 0x00	; 0
    62a0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    62a4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    62a8:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <currentMillis>
    62ac:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <currentMillis+0x1>
    62b0:	a9 c9       	rjmp	.-3246   	; 0x5604 <main+0x75c>
    62b2:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    62b6:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    62ba:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    62be:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    62c2:	8c e0       	ldi	r24, 0x0C	; 12
    62c4:	90 e0       	ldi	r25, 0x00	; 0
    62c6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    62ca:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    62ce:	2c e1       	ldi	r18, 0x1C	; 28
    62d0:	30 e0       	ldi	r19, 0x00	; 0
    62d2:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    62d6:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    62da:	41 e1       	ldi	r20, 0x11	; 17
    62dc:	50 e0       	ldi	r21, 0x00	; 0
    62de:	40 93 f1 28 	sts	0x28F1, r20	; 0x8028f1 <digits2+0x4>
    62e2:	50 93 f2 28 	sts	0x28F2, r21	; 0x8028f2 <digits2+0x5>
    62e6:	2f e0       	ldi	r18, 0x0F	; 15
    62e8:	30 e0       	ldi	r19, 0x00	; 0
    62ea:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    62ee:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    62f2:	40 93 f5 28 	sts	0x28F5, r20	; 0x8028f5 <digits1>
    62f6:	50 93 f6 28 	sts	0x28F6, r21	; 0x8028f6 <digits1+0x1>
    62fa:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    62fe:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    6302:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    6306:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    630a:	80 e1       	ldi	r24, 0x10	; 16
    630c:	90 e0       	ldi	r25, 0x00	; 0
    630e:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    6312:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    6316:	c8 cf       	rjmp	.-112    	; 0x62a8 <main+0x1400>
SET_LONG_PRESS_FUNCTION():
    6318:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    631c:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6320:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    6324:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    6328:	80 91 48 28 	lds	r24, 0x2848	; 0x802848 <currentMillis>
    632c:	90 91 49 28 	lds	r25, 0x2849	; 0x802849 <currentMillis+0x1>
    6330:	8f 31       	cpi	r24, 0x1F	; 31
    6332:	91 05       	cpc	r25, r1
    6334:	38 f5       	brcc	.+78     	; 0x6384 <main+0x14dc>
digitalWrite():
    6336:	61 e0       	ldi	r22, 0x01	; 1
    6338:	85 e1       	ldi	r24, 0x15	; 21
    633a:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    633e:	86 e1       	ldi	r24, 0x16	; 22
    6340:	90 e0       	ldi	r25, 0x00	; 0
    6342:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    6346:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    634a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    634e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    6352:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    6356:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    635a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    635e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    6362:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    6366:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    636a:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    636e:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    6372:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    6376:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    637a:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <digits1+0x6>
    637e:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <digits1+0x7>
    6382:	40 c9       	rjmp	.-3456   	; 0x5604 <main+0x75c>
SET_LONG_PRESS_FUNCTION():
    6384:	9c 01       	movw	r18, r24
    6386:	29 52       	subi	r18, 0x29	; 41
    6388:	31 09       	sbc	r19, r1
    638a:	22 38       	cpi	r18, 0x82	; 130
    638c:	31 05       	cpc	r19, r1
    638e:	58 f5       	brcc	.+86     	; 0x63e6 <main+0x153e>
digitalWrite():
    6390:	60 e0       	ldi	r22, 0x00	; 0
    6392:	85 e1       	ldi	r24, 0x15	; 21
    6394:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    6398:	81 e1       	ldi	r24, 0x11	; 17
    639a:	90 e0       	ldi	r25, 0x00	; 0
    639c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    63a0:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    63a4:	8f e0       	ldi	r24, 0x0F	; 15
    63a6:	90 e0       	ldi	r25, 0x00	; 0
    63a8:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    63ac:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    63b0:	2c e0       	ldi	r18, 0x0C	; 12
    63b2:	30 e0       	ldi	r19, 0x00	; 0
    63b4:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    63b8:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    63bc:	20 e1       	ldi	r18, 0x10	; 16
    63be:	30 e0       	ldi	r19, 0x00	; 0
    63c0:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    63c4:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    63c8:	20 e2       	ldi	r18, 0x20	; 32
    63ca:	30 e0       	ldi	r19, 0x00	; 0
    63cc:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    63d0:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    63d4:	27 e1       	ldi	r18, 0x17	; 23
    63d6:	30 e0       	ldi	r19, 0x00	; 0
    63d8:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    63dc:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    63e0:	24 e1       	ldi	r18, 0x14	; 20
    63e2:	30 e0       	ldi	r19, 0x00	; 0
    63e4:	82 c9       	rjmp	.-3324   	; 0x56ea <main+0x842>
SET_LONG_PRESS_FUNCTION():
    63e6:	8b 3a       	cpi	r24, 0xAB	; 171
    63e8:	91 05       	cpc	r25, r1
    63ea:	0c f4       	brge	.+2      	; 0x63ee <main+0x1546>
    63ec:	0b c9       	rjmp	.-3562   	; 0x5604 <main+0x75c>
EEPROM_CLEAR():
    63ee:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <STIR_VALUE_SET>
    63f2:	10 92 53 29 	sts	0x2953, r1	; 0x802953 <DEGREE_VALUE_SET>
    63f6:	23 e6       	ldi	r18, 0x63	; 99
    63f8:	30 e0       	ldi	r19, 0x00	; 0
    63fa:	20 93 12 29 	sts	0x2912, r18	; 0x802912 <SAFE_VALUE_SET_DEG>
    63fe:	30 93 13 29 	sts	0x2913, r19	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    6402:	84 ed       	ldi	r24, 0xD4	; 212
    6404:	90 e0       	ldi	r25, 0x00	; 0
    6406:	80 93 10 29 	sts	0x2910, r24	; 0x802910 <SAFE_VALUE_SET_FAH>
    640a:	90 93 11 29 	sts	0x2911, r25	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    640e:	10 92 d8 28 	sts	0x28D8, r1	; 0x8028d8 <CAL_SELECT_VALUE>
    6412:	10 92 d9 28 	sts	0x28D9, r1	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    6416:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ERROR_CAL1>
    641a:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <ERROR_CAL1+0x1>
    641e:	10 92 0c 29 	sts	0x290C, r1	; 0x80290c <ERROR_CAL1+0x2>
    6422:	10 92 0d 29 	sts	0x290D, r1	; 0x80290d <ERROR_CAL1+0x3>
    6426:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <SIGN>
    642a:	41 e0       	ldi	r20, 0x01	; 1
    642c:	40 93 e7 28 	sts	0x28E7, r20	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    6430:	10 92 e2 28 	sts	0x28E2, r1	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    6434:	4e e1       	ldi	r20, 0x1E	; 30
    6436:	50 e0       	ldi	r21, 0x00	; 0
    6438:	60 e0       	ldi	r22, 0x00	; 0
    643a:	70 e0       	ldi	r23, 0x00	; 0
    643c:	40 93 d0 28 	sts	0x28D0, r20	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
    6440:	50 93 d1 28 	sts	0x28D1, r21	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    6444:	60 93 d2 28 	sts	0x28D2, r22	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    6448:	70 93 d3 28 	sts	0x28D3, r23	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    644c:	44 e5       	ldi	r20, 0x54	; 84
    644e:	50 e0       	ldi	r21, 0x00	; 0
    6450:	60 e0       	ldi	r22, 0x00	; 0
    6452:	70 e0       	ldi	r23, 0x00	; 0
    6454:	40 93 cc 28 	sts	0x28CC, r20	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
    6458:	50 93 cd 28 	sts	0x28CD, r21	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    645c:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    6460:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    6464:	4c e1       	ldi	r20, 0x1C	; 28
    6466:	50 e0       	ldi	r21, 0x00	; 0
    6468:	60 e0       	ldi	r22, 0x00	; 0
    646a:	70 e0       	ldi	r23, 0x00	; 0
    646c:	40 93 c8 28 	sts	0x28C8, r20	; 0x8028c8 <MASTER_LOW_CONV>
    6470:	50 93 c9 28 	sts	0x28C9, r21	; 0x8028c9 <MASTER_LOW_CONV+0x1>
    6474:	60 93 ca 28 	sts	0x28CA, r22	; 0x8028ca <MASTER_LOW_CONV+0x2>
    6478:	70 93 cb 28 	sts	0x28CB, r23	; 0x8028cb <MASTER_LOW_CONV+0x3>
    647c:	42 e5       	ldi	r20, 0x52	; 82
    647e:	50 e0       	ldi	r21, 0x00	; 0
    6480:	60 e0       	ldi	r22, 0x00	; 0
    6482:	70 e0       	ldi	r23, 0x00	; 0
    6484:	40 93 c4 28 	sts	0x28C4, r20	; 0x8028c4 <MASTER_HIGH_CONV>
    6488:	50 93 c5 28 	sts	0x28C5, r21	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
    648c:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
    6490:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
    6494:	10 92 68 28 	sts	0x2868, r1	; 0x802868 <TIME_SOCK_OR_TOTAL>
    6498:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <Proceess_Resume_Enable_Flag>
    649c:	10 92 0e 29 	sts	0x290E, r1	; 0x80290e <select_product_type>
    64a0:	10 92 01 29 	sts	0x2901, r1	; 0x802901 <select_heating_type>
    64a4:	10 92 21 29 	sts	0x2921, r1	; 0x802921 <SET_LONG_VALUE>
    64a8:	10 92 22 29 	sts	0x2922, r1	; 0x802922 <SET_LONG_VALUE+0x1>
    64ac:	10 92 23 29 	sts	0x2923, r1	; 0x802923 <SET_LONG_VALUE+0x2>
    64b0:	10 92 24 29 	sts	0x2924, r1	; 0x802924 <SET_LONG_VALUE+0x3>
    64b4:	20 93 25 29 	sts	0x2925, r18	; 0x802925 <SET_LONG_VALUE+0x4>
    64b8:	30 93 26 29 	sts	0x2926, r19	; 0x802926 <SET_LONG_VALUE+0x5>
    64bc:	80 93 49 29 	sts	0x2949, r24	; 0x802949 <SET_LONG_VALUE+0x28>
    64c0:	90 93 4a 29 	sts	0x294A, r25	; 0x80294a <SET_LONG_VALUE+0x29>
    64c4:	10 92 2d 29 	sts	0x292D, r1	; 0x80292d <SET_LONG_VALUE+0xc>
    64c8:	10 92 2e 29 	sts	0x292E, r1	; 0x80292e <SET_LONG_VALUE+0xd>
    64cc:	10 92 27 29 	sts	0x2927, r1	; 0x802927 <SET_LONG_VALUE+0x6>
    64d0:	10 92 28 29 	sts	0x2928, r1	; 0x802928 <SET_LONG_VALUE+0x7>
    64d4:	10 92 29 29 	sts	0x2929, r1	; 0x802929 <SET_LONG_VALUE+0x8>
    64d8:	10 92 2a 29 	sts	0x292A, r1	; 0x80292a <SET_LONG_VALUE+0x9>
    64dc:	10 92 41 29 	sts	0x2941, r1	; 0x802941 <SET_LONG_VALUE+0x20>
    64e0:	10 92 42 29 	sts	0x2942, r1	; 0x802942 <SET_LONG_VALUE+0x21>
    64e4:	10 92 2b 29 	sts	0x292B, r1	; 0x80292b <SET_LONG_VALUE+0xa>
    64e8:	10 92 2c 29 	sts	0x292C, r1	; 0x80292c <SET_LONG_VALUE+0xb>
    64ec:	10 92 97 28 	sts	0x2897, r1	; 0x802897 <SET_HOUR>
    64f0:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <SET_HOUR+0x1>
    64f4:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <SET_MINUTE>
    64f8:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <SET_MINUTE+0x1>
    64fc:	85 e2       	ldi	r24, 0x25	; 37
    64fe:	90 e0       	ldi	r25, 0x00	; 0
    6500:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
    6504:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
    6508:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0x4>
    650c:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <SET_VALUE+0x5>
    6510:	80 e2       	ldi	r24, 0x20	; 32
    6512:	90 e0       	ldi	r25, 0x00	; 0
    6514:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
    6518:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
    651c:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_VALUE+0x6>
    6520:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_VALUE+0x7>
    6524:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_VALUE+0x8>
    6528:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_VALUE+0x9>
    652c:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Process_Interrupt_flag>
    6530:	60 e0       	ldi	r22, 0x00	; 0
    6532:	81 e0       	ldi	r24, 0x01	; 1
    6534:	90 e0       	ldi	r25, 0x00	; 0
    6536:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    653a:	63 e6       	ldi	r22, 0x63	; 99
    653c:	82 e0       	ldi	r24, 0x02	; 2
    653e:	90 e0       	ldi	r25, 0x00	; 0
    6540:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6544:	60 e1       	ldi	r22, 0x10	; 16
    6546:	79 e2       	ldi	r23, 0x29	; 41
    6548:	83 e0       	ldi	r24, 0x03	; 3
    654a:	90 e0       	ldi	r25, 0x00	; 0
    654c:	0e 94 17 11 	call	0x222e	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    6550:	60 e0       	ldi	r22, 0x00	; 0
    6552:	85 e0       	ldi	r24, 0x05	; 5
    6554:	90 e0       	ldi	r25, 0x00	; 0
    6556:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    655a:	60 e0       	ldi	r22, 0x00	; 0
    655c:	8f e0       	ldi	r24, 0x0F	; 15
    655e:	90 e0       	ldi	r25, 0x00	; 0
    6560:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6564:	0e 94 be 10 	call	0x217c	; 0x217c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>
    6568:	60 e0       	ldi	r22, 0x00	; 0
    656a:	87 e0       	ldi	r24, 0x07	; 7
    656c:	90 e0       	ldi	r25, 0x00	; 0
    656e:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6572:	61 e0       	ldi	r22, 0x01	; 1
    6574:	88 e0       	ldi	r24, 0x08	; 8
    6576:	90 e0       	ldi	r25, 0x00	; 0
    6578:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    657c:	60 e0       	ldi	r22, 0x00	; 0
    657e:	89 e0       	ldi	r24, 0x09	; 9
    6580:	90 e0       	ldi	r25, 0x00	; 0
    6582:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6586:	60 ed       	ldi	r22, 0xD0	; 208
    6588:	78 e2       	ldi	r23, 0x28	; 40
    658a:	80 e5       	ldi	r24, 0x50	; 80
    658c:	90 e0       	ldi	r25, 0x00	; 0
    658e:	0e 94 e5 10 	call	0x21ca	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    6592:	6c ec       	ldi	r22, 0xCC	; 204
    6594:	78 e2       	ldi	r23, 0x28	; 40
    6596:	8a e5       	ldi	r24, 0x5A	; 90
    6598:	90 e0       	ldi	r25, 0x00	; 0
    659a:	0e 94 e5 10 	call	0x21ca	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    659e:	68 ec       	ldi	r22, 0xC8	; 200
    65a0:	78 e2       	ldi	r23, 0x28	; 40
    65a2:	84 e6       	ldi	r24, 0x64	; 100
    65a4:	90 e0       	ldi	r25, 0x00	; 0
    65a6:	0e 94 e5 10 	call	0x21ca	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
    65aa:	64 ec       	ldi	r22, 0xC4	; 196
    65ac:	78 e2       	ldi	r23, 0x28	; 40
    65ae:	8e e6       	ldi	r24, 0x6E	; 110
    65b0:	90 e0       	ldi	r25, 0x00	; 0
    65b2:	0e 94 e5 10 	call	0x21ca	; 0x21ca <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.101]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    65b6:	81 e4       	ldi	r24, 0x41	; 65
    65b8:	90 e0       	ldi	r25, 0x00	; 0
    65ba:	89 83       	std	Y+1, r24	; 0x01
    65bc:	9a 83       	std	Y+2, r25	; 0x02
    65be:	60 91 68 28 	lds	r22, 0x2868	; 0x802868 <TIME_SOCK_OR_TOTAL>
    65c2:	ce 01       	movw	r24, r28
    65c4:	01 96       	adiw	r24, 0x01	; 1
    65c6:	0e 94 ad 10 	call	0x215a	; 0x215a <EERef::update(unsigned char)>
EEPROM_CLEAR():
    65ca:	60 91 16 29 	lds	r22, 0x2916	; 0x802916 <SET_VALUE+0x2>
    65ce:	83 e7       	ldi	r24, 0x73	; 115
    65d0:	90 e0       	ldi	r25, 0x00	; 0
    65d2:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    65d6:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    65da:	85 e7       	ldi	r24, 0x75	; 117
    65dc:	90 e0       	ldi	r25, 0x00	; 0
    65de:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    65e2:	60 e4       	ldi	r22, 0x40	; 64
    65e4:	79 e2       	ldi	r23, 0x29	; 41
    65e6:	88 e7       	ldi	r24, 0x78	; 120
    65e8:	90 e0       	ldi	r25, 0x00	; 0
    65ea:	0e 94 17 11 	call	0x222e	; 0x222e <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.103]>
    65ee:	60 e0       	ldi	r22, 0x00	; 0
    65f0:	8d e7       	ldi	r24, 0x7D	; 125
    65f2:	90 e0       	ldi	r25, 0x00	; 0
    65f4:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    65f8:	60 e0       	ldi	r22, 0x00	; 0
    65fa:	82 e8       	ldi	r24, 0x82	; 130
    65fc:	90 e0       	ldi	r25, 0x00	; 0
    65fe:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6602:	60 e0       	ldi	r22, 0x00	; 0
    6604:	87 e8       	ldi	r24, 0x87	; 135
    6606:	90 e0       	ldi	r25, 0x00	; 0
    6608:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    660c:	60 e0       	ldi	r22, 0x00	; 0
    660e:	86 e9       	ldi	r24, 0x96	; 150
    6610:	90 e0       	ldi	r25, 0x00	; 0
    6612:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6616:	60 e0       	ldi	r22, 0x00	; 0
    6618:	84 e8       	ldi	r24, 0x84	; 132
    661a:	90 e0       	ldi	r25, 0x00	; 0
    661c:	0e 94 ac 10 	call	0x2158	; 0x2158 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6620:	81 e0       	ldi	r24, 0x01	; 1
    6622:	90 e0       	ldi	r25, 0x00	; 0
    6624:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6628:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    662c:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <Service_Menu>
    6630:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <currentMillis>
    6634:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    6638:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    663c:	b5 cd       	rjmp	.-1174   	; 0x61a8 <main+0x1300>
    663e:	e3 31       	cpi	r30, 0x13	; 19
    6640:	f1 05       	cpc	r31, r1
    6642:	10 f0       	brcs	.+4      	; 0x6648 <main+0x17a0>
    6644:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    6648:	e8 5d       	subi	r30, 0xD8	; 216
    664a:	fc 4c       	sbci	r31, 0xCC	; 204
    664c:	0c 94 f8 3b 	jmp	0x77f0	; 0x77f0 <__tablejump2__>
    6650:	3b 33       	cpi	r19, 0x3B	; 59
    6652:	78 33       	cpi	r23, 0x38	; 56
    6654:	b0 33       	cpi	r27, 0x30	; 48
    6656:	01 34       	cpi	r16, 0x41	; 65
    6658:	4c 34       	cpi	r20, 0x4C	; 76
    665a:	79 34       	cpi	r23, 0x49	; 73
    665c:	a8 34       	cpi	r26, 0x48	; 72
    665e:	dc 34       	cpi	r29, 0x4C	; 76
    6660:	2c 35       	cpi	r18, 0x5C	; 92
    6662:	90 35       	cpi	r25, 0x50	; 80
    6664:	c3 35       	cpi	r28, 0x53	; 83
    6666:	f0 35       	cpi	r31, 0x50	; 80
    6668:	95 36       	cpi	r25, 0x65	; 101
    666a:	4e 37       	cpi	r20, 0x7E	; 126
    666c:	ff 37       	cpi	r31, 0x7F	; 127
    666e:	c1 38       	cpi	r28, 0x81	; 129
    6670:	f2 38       	cpi	r31, 0x82	; 130
    6672:	25 39       	cpi	r18, 0x95	; 149
    6674:	45 39       	cpi	r20, 0x95	; 149
    6676:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    667a:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    667e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6682:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6686:	8c e0       	ldi	r24, 0x0C	; 12
    6688:	90 e0       	ldi	r25, 0x00	; 0
    668a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    668e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    6692:	80 e1       	ldi	r24, 0x10	; 16
    6694:	90 e0       	ldi	r25, 0x00	; 0
    6696:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    669a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    669e:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits2+0x4>
    66a2:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits2+0x5>
    66a6:	81 e1       	ldi	r24, 0x11	; 17
    66a8:	90 e0       	ldi	r25, 0x00	; 0
    66aa:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    66ae:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    66b2:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    66b6:	10 92 f5 28 	sts	0x28F5, r1	; 0x8028f5 <digits1>
    66ba:	10 92 f6 28 	sts	0x28F6, r1	; 0x8028f6 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    66be:	81 11       	cpse	r24, r1
    66c0:	10 c0       	rjmp	.+32     	; 0x66e2 <main+0x183a>
DISPLAY_DIGIT1():
    66c2:	85 e1       	ldi	r24, 0x15	; 21
    66c4:	90 e0       	ldi	r25, 0x00	; 0
    66c6:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    66ca:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    66ce:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    66d2:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    66d6:	00 93 fb 28 	sts	0x28FB, r16	; 0x8028fb <digits1+0x6>
    66da:	10 93 fc 28 	sts	0x28FC, r17	; 0x8028fc <digits1+0x7>
    66de:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    66e2:	84 e1       	ldi	r24, 0x14	; 20
    66e4:	90 e0       	ldi	r25, 0x00	; 0
    66e6:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    66ea:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    66ee:	2a c0       	rjmp	.+84     	; 0x6744 <main+0x189c>
SET_LONG_PRESS_FUNCTION():
    66f0:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    66f4:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    66f8:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
DISPLAY_DIGIT2():
    66fc:	8c e1       	ldi	r24, 0x1C	; 28
    66fe:	90 e0       	ldi	r25, 0x00	; 0
    6700:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    6704:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    6708:	84 e1       	ldi	r24, 0x14	; 20
    670a:	90 e0       	ldi	r25, 0x00	; 0
    670c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    6710:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    6714:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits2+0x4>
    6718:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits2+0x5>
    671c:	80 e1       	ldi	r24, 0x10	; 16
    671e:	90 e0       	ldi	r25, 0x00	; 0
    6720:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    6724:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6728:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    672c:	81 11       	cpse	r24, r1
    672e:	0f c0       	rjmp	.+30     	; 0x674e <main+0x18a6>
DISPLAY_DIGIT1():
    6730:	8d e1       	ldi	r24, 0x1D	; 29
    6732:	90 e0       	ldi	r25, 0x00	; 0
    6734:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    6738:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    673c:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x2>
    6740:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x3>
    6744:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    6748:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    674c:	c4 cf       	rjmp	.-120    	; 0x66d6 <main+0x182e>
    674e:	8d e1       	ldi	r24, 0x1D	; 29
    6750:	90 e0       	ldi	r25, 0x00	; 0
    6752:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    6756:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    675a:	85 e1       	ldi	r24, 0x15	; 21
    675c:	90 e0       	ldi	r25, 0x00	; 0
    675e:	c3 cf       	rjmp	.-122    	; 0x66e6 <main+0x183e>
SET_LONG_PRESS_FUNCTION():
    6760:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6764:	8c e0       	ldi	r24, 0x0C	; 12
    6766:	90 e0       	ldi	r25, 0x00	; 0
    6768:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    676c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    6770:	8d e0       	ldi	r24, 0x0D	; 13
    6772:	90 e0       	ldi	r25, 0x00	; 0
    6774:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    6778:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    677c:	75 e1       	ldi	r23, 0x15	; 21
    677e:	c7 2e       	mov	r12, r23
    6780:	d1 2c       	mov	r13, r1
    6782:	c0 92 f1 28 	sts	0x28F1, r12	; 0x8028f1 <digits2+0x4>
    6786:	d0 92 f2 28 	sts	0x28F2, r13	; 0x8028f2 <digits2+0x5>
    678a:	8f e0       	ldi	r24, 0x0F	; 15
    678c:	90 e0       	ldi	r25, 0x00	; 0
    678e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    6792:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6796:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    679a:	81 11       	cpse	r24, r1
    679c:	1a c0       	rjmp	.+52     	; 0x67d2 <main+0x192a>
    679e:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
    67a2:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    67a6:	2a e0       	ldi	r18, 0x0A	; 10
    67a8:	28 9f       	mul	r18, r24
    67aa:	b0 01       	movw	r22, r0
    67ac:	29 9f       	mul	r18, r25
    67ae:	70 0d       	add	r23, r0
    67b0:	11 24       	eor	r1, r1
    67b2:	07 2e       	mov	r0, r23
    67b4:	00 0c       	add	r0, r0
    67b6:	88 0b       	sbc	r24, r24
    67b8:	99 0b       	sbc	r25, r25
    67ba:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    67be:	e0 92 fb 28 	sts	0x28FB, r14	; 0x8028fb <digits1+0x6>
    67c2:	f0 92 fc 28 	sts	0x28FC, r15	; 0x8028fc <digits1+0x7>
    67c6:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    67ca:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    67ce:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    67d2:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    67d6:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    67da:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    67de:	2a e0       	ldi	r18, 0x0A	; 10
    67e0:	28 9f       	mul	r18, r24
    67e2:	b0 01       	movw	r22, r0
    67e4:	29 9f       	mul	r18, r25
    67e6:	70 0d       	add	r23, r0
    67e8:	11 24       	eor	r1, r1
    67ea:	07 2e       	mov	r0, r23
    67ec:	00 0c       	add	r0, r0
    67ee:	88 0b       	sbc	r24, r24
    67f0:	99 0b       	sbc	r25, r25
    67f2:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    67f6:	c0 92 fb 28 	sts	0x28FB, r12	; 0x8028fb <digits1+0x6>
    67fa:	d0 92 fc 28 	sts	0x28FC, r13	; 0x8028fc <digits1+0x7>
    67fe:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    6802:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6806:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    680a:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    680e:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6812:	80 e1       	ldi	r24, 0x10	; 16
    6814:	90 e0       	ldi	r25, 0x00	; 0
    6816:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    681a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    681e:	60 92 ef 28 	sts	0x28EF, r6	; 0x8028ef <digits2+0x2>
    6822:	70 92 f0 28 	sts	0x28F0, r7	; 0x8028f0 <digits2+0x3>
    6826:	22 e1       	ldi	r18, 0x12	; 18
    6828:	30 e0       	ldi	r19, 0x00	; 0
    682a:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    682e:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    6832:	2f e0       	ldi	r18, 0x0F	; 15
    6834:	30 e0       	ldi	r19, 0x00	; 0
    6836:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    683a:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    683e:	20 91 68 28 	lds	r18, 0x2868	; 0x802868 <TIME_SOCK_OR_TOTAL>
    6842:	21 11       	cpse	r18, r1
    6844:	11 c0       	rjmp	.+34     	; 0x6868 <main+0x19c0>
DISPLAY_DIGIT1():
    6846:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    684a:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    684e:	27 e1       	ldi	r18, 0x17	; 23
    6850:	30 e0       	ldi	r19, 0x00	; 0
    6852:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    6856:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    685a:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    685e:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    6862:	8f e1       	ldi	r24, 0x1F	; 31
    6864:	90 e0       	ldi	r25, 0x00	; 0
    6866:	89 cd       	rjmp	.-1262   	; 0x637a <main+0x14d2>
    6868:	8c e0       	ldi	r24, 0x0C	; 12
    686a:	90 e0       	ldi	r25, 0x00	; 0
    686c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1>
    6870:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x1>
    6874:	87 e1       	ldi	r24, 0x17	; 23
    6876:	90 e0       	ldi	r25, 0x00	; 0
    6878:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    687c:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    6880:	8d e0       	ldi	r24, 0x0D	; 13
    6882:	90 e0       	ldi	r25, 0x00	; 0
    6884:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    6888:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    688c:	e0 92 fb 28 	sts	0x28FB, r14	; 0x8028fb <digits1+0x6>
    6890:	f0 92 fc 28 	sts	0x28FC, r15	; 0x8028fc <digits1+0x7>
    6894:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    6898:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    689c:	8d e0       	ldi	r24, 0x0D	; 13
    689e:	90 e0       	ldi	r25, 0x00	; 0
    68a0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    68a4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    68a8:	82 e2       	ldi	r24, 0x22	; 34
    68aa:	90 e0       	ldi	r25, 0x00	; 0
    68ac:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    68b0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    68b4:	80 e1       	ldi	r24, 0x10	; 16
    68b6:	90 e0       	ldi	r25, 0x00	; 0
    68b8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    68bc:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    68c0:	87 e1       	ldi	r24, 0x17	; 23
    68c2:	90 e0       	ldi	r25, 0x00	; 0
    68c4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    68c8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    68cc:	2b e0       	ldi	r18, 0x0B	; 11
    68ce:	30 e0       	ldi	r19, 0x00	; 0
    68d0:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    68d4:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    68d8:	21 e1       	ldi	r18, 0x11	; 17
    68da:	30 e0       	ldi	r19, 0x00	; 0
    68dc:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    68e0:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    68e4:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    68e8:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    68ec:	8c e0       	ldi	r24, 0x0C	; 12
    68ee:	90 e0       	ldi	r25, 0x00	; 0
    68f0:	44 cd       	rjmp	.-1400   	; 0x637a <main+0x14d2>
SET_LONG_PRESS_FUNCTION():
    68f2:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    68f6:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    68fa:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    68fe:	8b e0       	ldi	r24, 0x0B	; 11
    6900:	90 e0       	ldi	r25, 0x00	; 0
    6902:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    6906:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    690a:	21 e1       	ldi	r18, 0x11	; 17
    690c:	30 e0       	ldi	r19, 0x00	; 0
    690e:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    6912:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    6916:	20 e2       	ldi	r18, 0x20	; 32
    6918:	30 e0       	ldi	r19, 0x00	; 0
    691a:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    691e:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    6922:	20 e1       	ldi	r18, 0x10	; 16
    6924:	30 e0       	ldi	r19, 0x00	; 0
    6926:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    692a:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    692e:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    6932:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    6936:	23 e2       	ldi	r18, 0x23	; 35
    6938:	30 e0       	ldi	r19, 0x00	; 0
    693a:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    693e:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    6942:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    6946:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    694a:	8f e0       	ldi	r24, 0x0F	; 15
    694c:	90 e0       	ldi	r25, 0x00	; 0
    694e:	15 cd       	rjmp	.-1494   	; 0x637a <main+0x14d2>
SET_LONG_PRESS_FUNCTION():
    6950:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6954:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    6958:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    695c:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    6960:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    6964:	2d e0       	ldi	r18, 0x0D	; 13
    6966:	30 e0       	ldi	r19, 0x00	; 0
    6968:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    696c:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    6970:	8a e1       	ldi	r24, 0x1A	; 26
    6972:	90 e0       	ldi	r25, 0x00	; 0
    6974:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    6978:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    697c:	4e e0       	ldi	r20, 0x0E	; 14
    697e:	50 e0       	ldi	r21, 0x00	; 0
    6980:	40 93 f3 28 	sts	0x28F3, r20	; 0x8028f3 <digits2+0x6>
    6984:	50 93 f4 28 	sts	0x28F4, r21	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6988:	40 91 d8 28 	lds	r20, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
    698c:	50 91 d9 28 	lds	r21, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    6990:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1>
    6994:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x1>
    6998:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    699c:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    69a0:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <digits1+0x4>
    69a4:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <digits1+0x5>
    69a8:	82 e0       	ldi	r24, 0x02	; 2
    69aa:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    69ac:	45 2b       	or	r20, r21
    69ae:	09 f0       	breq	.+2      	; 0x69b2 <main+0x1b0a>
    69b0:	e4 cc       	rjmp	.-1592   	; 0x637a <main+0x14d2>
DISPLAY_DIGIT1():
    69b2:	81 e0       	ldi	r24, 0x01	; 1
    69b4:	90 e0       	ldi	r25, 0x00	; 0
    69b6:	e1 cc       	rjmp	.-1598   	; 0x637a <main+0x14d2>
SET_LONG_PRESS_FUNCTION():
    69b8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    69bc:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    69c0:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    69c4:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    69c8:	8d e0       	ldi	r24, 0x0D	; 13
    69ca:	90 e0       	ldi	r25, 0x00	; 0
    69cc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    69d0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    69d4:	8a e1       	ldi	r24, 0x1A	; 26
    69d6:	90 e0       	ldi	r25, 0x00	; 0
    69d8:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    69dc:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    69e0:	81 e0       	ldi	r24, 0x01	; 1
    69e2:	90 e0       	ldi	r25, 0x00	; 0
    69e4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    69e8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    69ec:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    69f0:	81 11       	cpse	r24, r1
    69f2:	81 c0       	rjmp	.+258    	; 0x6af6 <main+0x1c4e>
    69f4:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    69f8:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    69fc:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    6a00:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    6a04:	2d ec       	ldi	r18, 0xCD	; 205
    6a06:	3c ec       	ldi	r19, 0xCC	; 204
    6a08:	47 ec       	ldi	r20, 0xC7	; 199
    6a0a:	52 e4       	ldi	r21, 0x42	; 66
    6a0c:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <TEMP_DEG>
    6a10:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    6a14:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    6a18:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    6a1c:	2d d6       	rcall	.+3162   	; 0x7678 <__gesf2>
    6a1e:	18 16       	cp	r1, r24
    6a20:	6c f4       	brge	.+26     	; 0x6a3c <main+0x1b94>
    6a22:	20 e0       	ldi	r18, 0x00	; 0
    6a24:	30 e0       	ldi	r19, 0x00	; 0
    6a26:	40 e2       	ldi	r20, 0x20	; 32
    6a28:	51 e4       	ldi	r21, 0x41	; 65
    6a2a:	c5 01       	movw	r24, r10
    6a2c:	b4 01       	movw	r22, r8
    6a2e:	28 d6       	rcall	.+3152   	; 0x7680 <__mulsf3>
    6a30:	40 d5       	rcall	.+2688   	; 0x74b2 <__fixsfsi>
    6a32:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6a36:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6a3a:	28 cf       	rjmp	.-432    	; 0x688c <main+0x19e4>
    6a3c:	20 e0       	ldi	r18, 0x00	; 0
    6a3e:	30 e0       	ldi	r19, 0x00	; 0
    6a40:	48 ec       	ldi	r20, 0xC8	; 200
    6a42:	52 e4       	ldi	r21, 0x42	; 66
    6a44:	c5 01       	movw	r24, r10
    6a46:	b4 01       	movw	r22, r8
    6a48:	1b d6       	rcall	.+3126   	; 0x7680 <__mulsf3>
    6a4a:	33 d5       	rcall	.+2662   	; 0x74b2 <__fixsfsi>
    6a4c:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6a50:	81 e0       	ldi	r24, 0x01	; 1
    6a52:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
    6a56:	1a cf       	rjmp	.-460    	; 0x688c <main+0x19e4>
    6a58:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6a5c:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6a60:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    6a64:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    6a68:	8d e0       	ldi	r24, 0x0D	; 13
    6a6a:	90 e0       	ldi	r25, 0x00	; 0
    6a6c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    6a70:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    6a74:	8a e1       	ldi	r24, 0x1A	; 26
    6a76:	90 e0       	ldi	r25, 0x00	; 0
    6a78:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    6a7c:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    6a80:	81 e0       	ldi	r24, 0x01	; 1
    6a82:	90 e0       	ldi	r25, 0x00	; 0
    6a84:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    6a88:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6a8c:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6a90:	81 11       	cpse	r24, r1
    6a92:	31 c0       	rjmp	.+98     	; 0x6af6 <main+0x1c4e>
    6a94:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    6a98:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    6a9c:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    6aa0:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
    6aa4:	6b 83       	std	Y+3, r22	; 0x03
    6aa6:	7c 83       	std	Y+4, r23	; 0x04
    6aa8:	8d 83       	std	Y+5, r24	; 0x05
    6aaa:	9e 83       	std	Y+6, r25	; 0x06
    6aac:	20 e0       	ldi	r18, 0x00	; 0
    6aae:	30 e0       	ldi	r19, 0x00	; 0
    6ab0:	48 ec       	ldi	r20, 0xC8	; 200
    6ab2:	52 e4       	ldi	r21, 0x42	; 66
    6ab4:	e5 d5       	rcall	.+3018   	; 0x7680 <__mulsf3>
    6ab6:	fd d4       	rcall	.+2554   	; 0x74b2 <__fixsfsi>
    6ab8:	4b 01       	movw	r8, r22
    6aba:	5c 01       	movw	r10, r24
    6abc:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6ac0:	2d ec       	ldi	r18, 0xCD	; 205
    6ac2:	3c ec       	ldi	r19, 0xCC	; 204
    6ac4:	47 ec       	ldi	r20, 0xC7	; 199
    6ac6:	52 e4       	ldi	r21, 0x42	; 66
    6ac8:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <TEMP_DEG>
    6acc:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    6ad0:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    6ad4:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    6ad8:	cf d5       	rcall	.+2974   	; 0x7678 <__gesf2>
    6ada:	18 16       	cp	r1, r24
    6adc:	4c f4       	brge	.+18     	; 0x6af0 <main+0x1c48>
    6ade:	20 e0       	ldi	r18, 0x00	; 0
    6ae0:	30 e0       	ldi	r19, 0x00	; 0
    6ae2:	40 e2       	ldi	r20, 0x20	; 32
    6ae4:	51 e4       	ldi	r21, 0x41	; 65
    6ae6:	6b 81       	ldd	r22, Y+3	; 0x03
    6ae8:	7c 81       	ldd	r23, Y+4	; 0x04
    6aea:	8d 81       	ldd	r24, Y+5	; 0x05
    6aec:	9e 81       	ldd	r25, Y+6	; 0x06
    6aee:	9f cf       	rjmp	.-194    	; 0x6a2e <main+0x1b86>
    6af0:	c5 01       	movw	r24, r10
    6af2:	b4 01       	movw	r22, r8
    6af4:	ab cf       	rjmp	.-170    	; 0x6a4c <main+0x1ba4>
    6af6:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6afa:	20 e0       	ldi	r18, 0x00	; 0
    6afc:	30 e0       	ldi	r19, 0x00	; 0
    6afe:	40 e2       	ldi	r20, 0x20	; 32
    6b00:	51 e4       	ldi	r21, 0x41	; 65
    6b02:	60 91 de 28 	lds	r22, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
    6b06:	70 91 df 28 	lds	r23, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
    6b0a:	80 91 e0 28 	lds	r24, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    6b0e:	90 91 e1 28 	lds	r25, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    6b12:	b6 d5       	rcall	.+2924   	; 0x7680 <__mulsf3>
    6b14:	ce d4       	rcall	.+2460   	; 0x74b2 <__fixsfsi>
    6b16:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6b1a:	85 e1       	ldi	r24, 0x15	; 21
    6b1c:	90 e0       	ldi	r25, 0x00	; 0
    6b1e:	2d cc       	rjmp	.-1958   	; 0x637a <main+0x14d2>
    6b20:	81 e0       	ldi	r24, 0x01	; 1
    6b22:	80 93 c0 28 	sts	0x28C0, r24	; 0x8028c0 <DOT1_0>
    6b26:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6b2a:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6b2e:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    6b32:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    6b36:	8d e0       	ldi	r24, 0x0D	; 13
    6b38:	90 e0       	ldi	r25, 0x00	; 0
    6b3a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    6b3e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    6b42:	6a e1       	ldi	r22, 0x1A	; 26
    6b44:	c6 2e       	mov	r12, r22
    6b46:	d1 2c       	mov	r13, r1
    6b48:	c0 92 f1 28 	sts	0x28F1, r12	; 0x8028f1 <digits2+0x4>
    6b4c:	d0 92 f2 28 	sts	0x28F2, r13	; 0x8028f2 <digits2+0x5>
    6b50:	82 e0       	ldi	r24, 0x02	; 2
    6b52:	90 e0       	ldi	r25, 0x00	; 0
    6b54:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    6b58:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6b5c:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6b60:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6b64:	2a e0       	ldi	r18, 0x0A	; 10
    6b66:	28 9f       	mul	r18, r24
    6b68:	b0 01       	movw	r22, r0
    6b6a:	29 9f       	mul	r18, r25
    6b6c:	70 0d       	add	r23, r0
    6b6e:	11 24       	eor	r1, r1
    6b70:	07 2e       	mov	r0, r23
    6b72:	00 0c       	add	r0, r0
    6b74:	88 0b       	sbc	r24, r24
    6b76:	99 0b       	sbc	r25, r25
    6b78:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6b7c:	c0 92 f5 28 	sts	0x28F5, r12	; 0x8028f5 <digits1>
    6b80:	d0 92 f6 28 	sts	0x28F6, r13	; 0x8028f6 <digits1+0x1>
    6b84:	83 ce       	rjmp	.-762    	; 0x688c <main+0x19e4>
    6b86:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    6b8a:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    6b8e:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    6b92:	8d e0       	ldi	r24, 0x0D	; 13
    6b94:	90 e0       	ldi	r25, 0x00	; 0
    6b96:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    6b9a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    6b9e:	8a e1       	ldi	r24, 0x1A	; 26
    6ba0:	90 e0       	ldi	r25, 0x00	; 0
    6ba2:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    6ba6:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    6baa:	82 e0       	ldi	r24, 0x02	; 2
    6bac:	90 e0       	ldi	r25, 0x00	; 0
    6bae:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    6bb2:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6bb6:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <HIGH_CAL_VALUE_SET>
    6bba:	90 91 50 28 	lds	r25, 0x2850	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    6bbe:	2a e0       	ldi	r18, 0x0A	; 10
    6bc0:	28 9f       	mul	r18, r24
    6bc2:	b0 01       	movw	r22, r0
    6bc4:	29 9f       	mul	r18, r25
    6bc6:	70 0d       	add	r23, r0
    6bc8:	11 24       	eor	r1, r1
    6bca:	07 2e       	mov	r0, r23
    6bcc:	00 0c       	add	r0, r0
    6bce:	88 0b       	sbc	r24, r24
    6bd0:	99 0b       	sbc	r25, r25
    6bd2:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6bd6:	40 92 f5 28 	sts	0x28F5, r4	; 0x8028f5 <digits1>
    6bda:	50 92 f6 28 	sts	0x28F6, r5	; 0x8028f6 <digits1+0x1>
    6bde:	56 ce       	rjmp	.-852    	; 0x688c <main+0x19e4>
    6be0:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6be4:	81 e0       	ldi	r24, 0x01	; 1
    6be6:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    6bea:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6bee:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
PID_Start():
    6bf2:	8a e3       	ldi	r24, 0x3A	; 58
    6bf4:	9a e2       	ldi	r25, 0x2A	; 42
    6bf6:	0e 94 22 0b 	call	0x1644	; 0x1644 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    6bfa:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    6bfe:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    6c02:	07 2e       	mov	r0, r23
    6c04:	00 0c       	add	r0, r0
    6c06:	88 0b       	sbc	r24, r24
    6c08:	99 0b       	sbc	r25, r25
    6c0a:	86 d4       	rcall	.+2316   	; 0x7518 <__floatsisf>
    6c0c:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6c10:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6c14:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6c18:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
digitalWrite():
    6c1c:	61 e0       	ldi	r22, 0x01	; 1
    6c1e:	81 e2       	ldi	r24, 0x21	; 33
    6c20:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6c24:	3f e0       	ldi	r19, 0x0F	; 15
    6c26:	83 2e       	mov	r8, r19
    6c28:	91 2c       	mov	r9, r1
    6c2a:	4d e0       	ldi	r20, 0x0D	; 13
    6c2c:	a4 2e       	mov	r10, r20
    6c2e:	b1 2c       	mov	r11, r1
    6c30:	50 e1       	ldi	r21, 0x10	; 16
    6c32:	c5 2e       	mov	r12, r21
    6c34:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    6c36:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
    6c3a:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    6c3e:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    6c42:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    6c46:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    6c4a:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    6c4e:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    6c52:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    6c56:	c1 d3       	rcall	.+1922   	; 0x73da <__cmpsf2>
    6c58:	87 ff       	sbrs	r24, 7
    6c5a:	bb c1       	rjmp	.+886    	; 0x6fd2 <main+0x212a>
    6c5c:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <RST_BUTT>
    6c60:	88 23       	and	r24, r24
    6c62:	09 f4       	brne	.+2      	; 0x6c66 <main+0x1dbe>
    6c64:	b6 c1       	rjmp	.+876    	; 0x6fd2 <main+0x212a>
    6c66:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
    6c6a:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    6c6e:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    6c72:	07 2e       	mov	r0, r23
    6c74:	00 0c       	add	r0, r0
    6c76:	88 0b       	sbc	r24, r24
    6c78:	99 0b       	sbc	r25, r25
    6c7a:	4e d4       	rcall	.+2204   	; 0x7518 <__floatsisf>
    6c7c:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6c80:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6c84:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6c88:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    6c8c:	0e 94 9a 09 	call	0x1334	; 0x1334 <Lclass::PID_callingg() [clone .constprop.56]>
digitalWrite():
    6c90:	60 e0       	ldi	r22, 0x00	; 0
    6c92:	8b e1       	ldi	r24, 0x1B	; 27
    6c94:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISP_UPDATE():
    6c98:	8f ed       	ldi	r24, 0xDF	; 223
    6c9a:	9b e2       	ldi	r25, 0x2B	; 43
    6c9c:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    6ca0:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    6ca4:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    6ca8:	89 31       	cpi	r24, 0x19	; 25
    6caa:	91 05       	cpc	r25, r1
    6cac:	3c f5       	brge	.+78     	; 0x6cfc <main+0x1e54>
DISPLAY_DIGIT1():
    6cae:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    6cb2:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    6cb6:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    6cba:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    6cbe:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    6cc2:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    6cc6:	00 93 fb 28 	sts	0x28FB, r16	; 0x8028fb <digits1+0x6>
    6cca:	10 93 fc 28 	sts	0x28FC, r17	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6cce:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6cd2:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6cd6:	07 2e       	mov	r0, r23
    6cd8:	00 0c       	add	r0, r0
    6cda:	88 0b       	sbc	r24, r24
    6cdc:	99 0b       	sbc	r25, r25
    6cde:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    6ce2:	8a e1       	ldi	r24, 0x1A	; 26
    6ce4:	90 e0       	ldi	r25, 0x00	; 0
    6ce6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    6cea:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    6cee:	a7 e1       	ldi	r26, 0x17	; 23
    6cf0:	b0 e0       	ldi	r27, 0x00	; 0
    6cf2:	a0 93 ef 28 	sts	0x28EF, r26	; 0x8028ef <digits2+0x2>
    6cf6:	b0 93 f0 28 	sts	0x28F0, r27	; 0x8028f0 <digits2+0x3>
    6cfa:	9d cf       	rjmp	.-198    	; 0x6c36 <main+0x1d8e>
DISPLAY_DIGIT1():
    6cfc:	40 92 f5 28 	sts	0x28F5, r4	; 0x8028f5 <digits1>
    6d00:	50 92 f6 28 	sts	0x28F6, r5	; 0x8028f6 <digits1+0x1>
    6d04:	80 92 f7 28 	sts	0x28F7, r8	; 0x8028f7 <digits1+0x2>
    6d08:	90 92 f8 28 	sts	0x28F8, r9	; 0x8028f8 <digits1+0x3>
    6d0c:	a0 92 f9 28 	sts	0x28F9, r10	; 0x8028f9 <digits1+0x4>
    6d10:	b0 92 fa 28 	sts	0x28FA, r11	; 0x8028fa <digits1+0x5>
    6d14:	c0 92 fb 28 	sts	0x28FB, r12	; 0x8028fb <digits1+0x6>
    6d18:	d0 92 fc 28 	sts	0x28FC, r13	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6d1c:	c3 97       	sbiw	r24, 0x33	; 51
    6d1e:	bc f2       	brlt	.-82     	; 0x6cce <main+0x1e26>
    6d20:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    6d24:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    6d28:	d2 cf       	rjmp	.-92     	; 0x6cce <main+0x1e26>
digitalWrite():
    6d2a:	61 e0       	ldi	r22, 0x01	; 1
    6d2c:	81 e2       	ldi	r24, 0x21	; 33
    6d2e:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    6d32:	d0 90 67 28 	lds	r13, 0x2867	; 0x802867 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    6d36:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    6d3a:	81 11       	cpse	r24, r1
    6d3c:	9d c0       	rjmp	.+314    	; 0x6e78 <main+0x1fd0>
    6d3e:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <RST_BUTT>
    6d42:	88 23       	and	r24, r24
    6d44:	09 f4       	brne	.+2      	; 0x6d48 <main+0x1ea0>
    6d46:	98 c0       	rjmp	.+304    	; 0x6e78 <main+0x1fd0>
    6d48:	dd 20       	and	r13, r13
    6d4a:	09 f4       	brne	.+2      	; 0x6d4e <main+0x1ea6>
    6d4c:	95 c0       	rjmp	.+298    	; 0x6e78 <main+0x1fd0>
    6d4e:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
    6d52:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    6d56:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    6d5a:	07 2e       	mov	r0, r23
    6d5c:	00 0c       	add	r0, r0
    6d5e:	88 0b       	sbc	r24, r24
    6d60:	99 0b       	sbc	r25, r25
    6d62:	da d3       	rcall	.+1972   	; 0x7518 <__floatsisf>
    6d64:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6d68:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6d6c:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6d70:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
DISP_UPDATE():
    6d74:	8f ed       	ldi	r24, 0xDF	; 223
    6d76:	9b e2       	ldi	r25, 0x2B	; 43
    6d78:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    6d7c:	0e 94 9a 09 	call	0x1334	; 0x1334 <Lclass::PID_callingg() [clone .constprop.56]>
digitalWrite():
    6d80:	60 e0       	ldi	r22, 0x00	; 0
    6d82:	8a e1       	ldi	r24, 0x1A	; 26
    6d84:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    6d88:	61 e0       	ldi	r22, 0x01	; 1
    6d8a:	8b e1       	ldi	r24, 0x1B	; 27
    6d8c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6d90:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6d94:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6d98:	07 2e       	mov	r0, r23
    6d9a:	00 0c       	add	r0, r0
    6d9c:	88 0b       	sbc	r24, r24
    6d9e:	99 0b       	sbc	r25, r25
    6da0:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    6da4:	ea e1       	ldi	r30, 0x1A	; 26
    6da6:	f0 e0       	ldi	r31, 0x00	; 0
    6da8:	e0 93 ed 28 	sts	0x28ED, r30	; 0x8028ed <digits2>
    6dac:	f0 93 ee 28 	sts	0x28EE, r31	; 0x8028ee <digits2+0x1>
    6db0:	47 e1       	ldi	r20, 0x17	; 23
    6db2:	50 e0       	ldi	r21, 0x00	; 0
    6db4:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits2+0x2>
    6db8:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits2+0x3>
    6dbc:	81 e0       	ldi	r24, 0x01	; 1
    6dbe:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    6dc2:	c0 90 a4 28 	lds	r12, 0x28A4	; 0x8028a4 <i>
    6dc6:	d0 90 a5 28 	lds	r13, 0x28A5	; 0x8028a5 <i+0x1>
    6dca:	59 e1       	ldi	r21, 0x19	; 25
    6dcc:	c5 16       	cp	r12, r21
    6dce:	d1 04       	cpc	r13, r1
    6dd0:	bc f4       	brge	.+46     	; 0x6e00 <main+0x1f58>
DISPLAY_DIGIT1():
    6dd2:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1>
    6dd6:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x1>
    6dda:	20 92 f7 28 	sts	0x28F7, r2	; 0x8028f7 <digits1+0x2>
    6dde:	30 92 f8 28 	sts	0x28F8, r3	; 0x8028f8 <digits1+0x3>
    6de2:	20 92 f9 28 	sts	0x28F9, r2	; 0x8028f9 <digits1+0x4>
    6de6:	30 92 fa 28 	sts	0x28FA, r3	; 0x8028fa <digits1+0x5>
    6dea:	20 92 fb 28 	sts	0x28FB, r2	; 0x8028fb <digits1+0x6>
    6dee:	30 92 fc 28 	sts	0x28FC, r3	; 0x8028fc <digits1+0x7>
digitalWrite():
    6df2:	60 e0       	ldi	r22, 0x00	; 0
    6df4:	85 e1       	ldi	r24, 0x15	; 21
    6df6:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6dfa:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6dfe:	99 cf       	rjmp	.-206    	; 0x6d32 <main+0x1e8a>
digitalWrite():
    6e00:	61 e0       	ldi	r22, 0x01	; 1
    6e02:	85 e1       	ldi	r24, 0x15	; 21
    6e04:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    6e08:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    6e0c:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    6e10:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    6e14:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6e18:	2d ec       	ldi	r18, 0xCD	; 205
    6e1a:	3c ec       	ldi	r19, 0xCC	; 204
    6e1c:	47 ec       	ldi	r20, 0xC7	; 199
    6e1e:	52 e4       	ldi	r21, 0x42	; 66
    6e20:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <TEMP_DEG>
    6e24:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    6e28:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    6e2c:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    6e30:	23 d4       	rcall	.+2118   	; 0x7678 <__gesf2>
    6e32:	20 e0       	ldi	r18, 0x00	; 0
    6e34:	30 e0       	ldi	r19, 0x00	; 0
    6e36:	40 e2       	ldi	r20, 0x20	; 32
    6e38:	51 e4       	ldi	r21, 0x41	; 65
    6e3a:	18 16       	cp	r1, r24
    6e3c:	24 f0       	brlt	.+8      	; 0x6e46 <main+0x1f9e>
    6e3e:	20 e0       	ldi	r18, 0x00	; 0
    6e40:	30 e0       	ldi	r19, 0x00	; 0
    6e42:	48 ec       	ldi	r20, 0xC8	; 200
    6e44:	52 e4       	ldi	r21, 0x42	; 66
    6e46:	c5 01       	movw	r24, r10
    6e48:	b4 01       	movw	r22, r8
    6e4a:	1a d4       	rcall	.+2100   	; 0x7680 <__mulsf3>
    6e4c:	32 d3       	rcall	.+1636   	; 0x74b2 <__fixsfsi>
    6e4e:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    6e52:	81 e0       	ldi	r24, 0x01	; 1
    6e54:	80 93 bf 28 	sts	0x28BF, r24	; 0x8028bf <DOT1_1>
    6e58:	6a e0       	ldi	r22, 0x0A	; 10
    6e5a:	70 e0       	ldi	r23, 0x00	; 0
    6e5c:	60 93 fb 28 	sts	0x28FB, r22	; 0x8028fb <digits1+0x6>
    6e60:	70 93 fc 28 	sts	0x28FC, r23	; 0x8028fc <digits1+0x7>
    6e64:	73 e3       	ldi	r23, 0x33	; 51
    6e66:	c7 16       	cp	r12, r23
    6e68:	d1 04       	cpc	r13, r1
    6e6a:	0c f4       	brge	.+2      	; 0x6e6e <main+0x1fc6>
    6e6c:	62 cf       	rjmp	.-316    	; 0x6d32 <main+0x1e8a>
    6e6e:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    6e72:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    6e76:	5d cf       	rjmp	.-326    	; 0x6d32 <main+0x1e8a>
digitalWrite():
    6e78:	60 e0       	ldi	r22, 0x00	; 0
    6e7a:	81 e2       	ldi	r24, 0x21	; 33
    6e7c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6e80:	8b e0       	ldi	r24, 0x0B	; 11
    6e82:	90 e0       	ldi	r25, 0x00	; 0
    6e84:	d1 10       	cpse	r13, r1
    6e86:	b5 c0       	rjmp	.+362    	; 0x6ff2 <main+0x214a>
    6e88:	8d e0       	ldi	r24, 0x0D	; 13
    6e8a:	90 e0       	ldi	r25, 0x00	; 0
    6e8c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6e90:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6e94:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    6e98:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
    6e9c:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6ea0:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    6ea4:	81 e0       	ldi	r24, 0x01	; 1
    6ea6:	80 93 a3 28 	sts	0x28A3, r24	; 0x8028a3 <DOT2_1>
    6eaa:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    6eae:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    6eb2:	07 2e       	mov	r0, r23
    6eb4:	00 0c       	add	r0, r0
    6eb6:	88 0b       	sbc	r24, r24
    6eb8:	99 0b       	sbc	r25, r25
    6eba:	2e d3       	rcall	.+1628   	; 0x7518 <__floatsisf>
    6ebc:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6ec0:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6ec4:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6ec8:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
digitalWrite():
    6ecc:	61 e0       	ldi	r22, 0x01	; 1
    6ece:	81 e2       	ldi	r24, 0x21	; 33
    6ed0:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6ed4:	8f e0       	ldi	r24, 0x0F	; 15
    6ed6:	c8 2e       	mov	r12, r24
    6ed8:	d1 2c       	mov	r13, r1
    6eda:	9d e0       	ldi	r25, 0x0D	; 13
    6edc:	a9 2e       	mov	r10, r25
    6ede:	b1 2c       	mov	r11, r1
    6ee0:	20 e1       	ldi	r18, 0x10	; 16
    6ee2:	82 2e       	mov	r8, r18
    6ee4:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    6ee6:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
    6eea:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    6eee:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    6ef2:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    6ef6:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    6efa:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    6efe:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    6f02:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    6f06:	69 d2       	rcall	.+1234   	; 0x73da <__cmpsf2>
    6f08:	87 ff       	sbrs	r24, 7
    6f0a:	63 c0       	rjmp	.+198    	; 0x6fd2 <main+0x212a>
    6f0c:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <RST_BUTT>
    6f10:	88 23       	and	r24, r24
    6f12:	09 f4       	brne	.+2      	; 0x6f16 <main+0x206e>
    6f14:	5e c0       	rjmp	.+188    	; 0x6fd2 <main+0x212a>
    6f16:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
    6f1a:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    6f1e:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    6f22:	07 2e       	mov	r0, r23
    6f24:	00 0c       	add	r0, r0
    6f26:	88 0b       	sbc	r24, r24
    6f28:	99 0b       	sbc	r25, r25
    6f2a:	f6 d2       	rcall	.+1516   	; 0x7518 <__floatsisf>
    6f2c:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6f30:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6f34:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6f38:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    6f3c:	0e 94 9a 09 	call	0x1334	; 0x1334 <Lclass::PID_callingg() [clone .constprop.56]>
DISP_UPDATE():
    6f40:	8f ed       	ldi	r24, 0xDF	; 223
    6f42:	9b e2       	ldi	r25, 0x2B	; 43
    6f44:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
digitalWrite():
    6f48:	60 e0       	ldi	r22, 0x00	; 0
    6f4a:	8b e1       	ldi	r24, 0x1B	; 27
    6f4c:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6f50:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    6f54:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    6f58:	89 31       	cpi	r24, 0x19	; 25
    6f5a:	91 05       	cpc	r25, r1
    6f5c:	1c f5       	brge	.+70     	; 0x6fa4 <main+0x20fc>
DISPLAY_DIGIT1():
    6f5e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1>
    6f62:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x1>
    6f66:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x2>
    6f6a:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x3>
    6f6e:	00 93 f9 28 	sts	0x28F9, r16	; 0x8028f9 <digits1+0x4>
    6f72:	10 93 fa 28 	sts	0x28FA, r17	; 0x8028fa <digits1+0x5>
    6f76:	00 93 fb 28 	sts	0x28FB, r16	; 0x8028fb <digits1+0x6>
    6f7a:	10 93 fc 28 	sts	0x28FC, r17	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6f7e:	60 91 4f 28 	lds	r22, 0x284F	; 0x80284f <HIGH_CAL_VALUE_SET>
    6f82:	70 91 50 28 	lds	r23, 0x2850	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    6f86:	07 2e       	mov	r0, r23
    6f88:	00 0c       	add	r0, r0
    6f8a:	88 0b       	sbc	r24, r24
    6f8c:	99 0b       	sbc	r25, r25
    6f8e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    6f92:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2>
    6f96:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x1>
    6f9a:	60 92 ef 28 	sts	0x28EF, r6	; 0x8028ef <digits2+0x2>
    6f9e:	70 92 f0 28 	sts	0x28F0, r7	; 0x8028f0 <digits2+0x3>
    6fa2:	a1 cf       	rjmp	.-190    	; 0x6ee6 <main+0x203e>
DISPLAY_DIGIT1():
    6fa4:	40 92 f5 28 	sts	0x28F5, r4	; 0x8028f5 <digits1>
    6fa8:	50 92 f6 28 	sts	0x28F6, r5	; 0x8028f6 <digits1+0x1>
    6fac:	c0 92 f7 28 	sts	0x28F7, r12	; 0x8028f7 <digits1+0x2>
    6fb0:	d0 92 f8 28 	sts	0x28F8, r13	; 0x8028f8 <digits1+0x3>
    6fb4:	a0 92 f9 28 	sts	0x28F9, r10	; 0x8028f9 <digits1+0x4>
    6fb8:	b0 92 fa 28 	sts	0x28FA, r11	; 0x8028fa <digits1+0x5>
    6fbc:	80 92 fb 28 	sts	0x28FB, r8	; 0x8028fb <digits1+0x6>
    6fc0:	90 92 fc 28 	sts	0x28FC, r9	; 0x8028fc <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6fc4:	c3 97       	sbiw	r24, 0x33	; 51
    6fc6:	dc f2       	brlt	.-74     	; 0x6f7e <main+0x20d6>
    6fc8:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    6fcc:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    6fd0:	d6 cf       	rjmp	.-84     	; 0x6f7e <main+0x20d6>
digitalWrite():
    6fd2:	60 e0       	ldi	r22, 0x00	; 0
    6fd4:	81 e2       	ldi	r24, 0x21	; 33
    6fd6:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6fda:	40 92 9f 28 	sts	0x289F, r4	; 0x80289f <SET_MIN>
    6fde:	50 92 a0 28 	sts	0x28A0, r5	; 0x8028a0 <SET_MIN+0x1>
    6fe2:	81 e0       	ldi	r24, 0x01	; 1
    6fe4:	80 93 67 28 	sts	0x2867, r24	; 0x802867 <COUNTDOWN_START>
    6fe8:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    6fec:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    6ff0:	01 96       	adiw	r24, 0x01	; 1
    6ff2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6ff6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6ffa:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
digitalWrite():
    6ffe:	61 e0       	ldi	r22, 0x01	; 1
    7000:	81 e2       	ldi	r24, 0x21	; 33
    7002:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    7006:	d0 90 67 28 	lds	r13, 0x2867	; 0x802867 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    700a:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <Mode_Button_Single_Press_In_Settings>
    700e:	81 11       	cpse	r24, r1
    7010:	a4 c0       	rjmp	.+328    	; 0x715a <main+0x22b2>
    7012:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <RST_BUTT>
    7016:	88 23       	and	r24, r24
    7018:	09 f4       	brne	.+2      	; 0x701c <main+0x2174>
    701a:	9f c0       	rjmp	.+318    	; 0x715a <main+0x22b2>
    701c:	dd 20       	and	r13, r13
    701e:	09 f4       	brne	.+2      	; 0x7022 <main+0x217a>
    7020:	9c c0       	rjmp	.+312    	; 0x715a <main+0x22b2>
    7022:	0e 94 af 04 	call	0x95e	; 0x95e <Mclass::RTD_TEMP_CONV() [clone .constprop.44]>
    7026:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    702a:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    702e:	07 2e       	mov	r0, r23
    7030:	00 0c       	add	r0, r0
    7032:	88 0b       	sbc	r24, r24
    7034:	99 0b       	sbc	r25, r25
    7036:	70 d2       	rcall	.+1248   	; 0x7518 <__floatsisf>
    7038:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    703c:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    7040:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    7044:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    7048:	0e 94 9a 09 	call	0x1334	; 0x1334 <Lclass::PID_callingg() [clone .constprop.56]>
DISP_UPDATE():
    704c:	8f ed       	ldi	r24, 0xDF	; 223
    704e:	9b e2       	ldi	r25, 0x2B	; 43
    7050:	0e 94 c4 0a 	call	0x1588	; 0x1588 <Ticker::update()>
digitalWrite():
    7054:	60 e0       	ldi	r22, 0x00	; 0
    7056:	8a e1       	ldi	r24, 0x1A	; 26
    7058:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    705c:	61 e0       	ldi	r22, 0x01	; 1
    705e:	8b e1       	ldi	r24, 0x1B	; 27
    7060:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    7064:	60 91 4f 28 	lds	r22, 0x284F	; 0x80284f <HIGH_CAL_VALUE_SET>
    7068:	70 91 50 28 	lds	r23, 0x2850	; 0x802850 <HIGH_CAL_VALUE_SET+0x1>
    706c:	07 2e       	mov	r0, r23
    706e:	00 0c       	add	r0, r0
    7070:	88 0b       	sbc	r24, r24
    7072:	99 0b       	sbc	r25, r25
    7074:	0e 94 70 04 	call	0x8e0	; 0x8e0 <Eclass::BREAK_NUMBER2(long) [clone .constprop.46]>
    7078:	8e e1       	ldi	r24, 0x1E	; 30
    707a:	90 e0       	ldi	r25, 0x00	; 0
    707c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    7080:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    7084:	a9 e1       	ldi	r26, 0x19	; 25
    7086:	b0 e0       	ldi	r27, 0x00	; 0
    7088:	a0 93 ef 28 	sts	0x28EF, r26	; 0x8028ef <digits2+0x2>
    708c:	b0 93 f0 28 	sts	0x28F0, r27	; 0x8028f0 <digits2+0x3>
    7090:	dd 24       	eor	r13, r13
    7092:	d3 94       	inc	r13
    7094:	d0 92 a3 28 	sts	0x28A3, r13	; 0x8028a3 <DOT2_1>
    7098:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    709c:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    70a0:	49 97       	sbiw	r24, 0x19	; 25
    70a2:	04 f5       	brge	.+64     	; 0x70e4 <main+0x223c>
DISPLAY_DIGIT1():
    70a4:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1>
    70a8:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x1>
    70ac:	20 92 f7 28 	sts	0x28F7, r2	; 0x8028f7 <digits1+0x2>
    70b0:	30 92 f8 28 	sts	0x28F8, r3	; 0x8028f8 <digits1+0x3>
    70b4:	20 92 f9 28 	sts	0x28F9, r2	; 0x8028f9 <digits1+0x4>
    70b8:	30 92 fa 28 	sts	0x28FA, r3	; 0x8028fa <digits1+0x5>
    70bc:	20 92 fb 28 	sts	0x28FB, r2	; 0x8028fb <digits1+0x6>
    70c0:	30 92 fc 28 	sts	0x28FC, r3	; 0x8028fc <digits1+0x7>
digitalWrite():
    70c4:	60 e0       	ldi	r22, 0x00	; 0
    70c6:	85 e1       	ldi	r24, 0x15	; 21
    70c8:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    70cc:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    70d0:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    70d4:	c3 97       	sbiw	r24, 0x33	; 51
    70d6:	0c f4       	brge	.+2      	; 0x70da <main+0x2232>
    70d8:	96 cf       	rjmp	.-212    	; 0x7006 <main+0x215e>
    70da:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <i>
    70de:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <i+0x1>
    70e2:	91 cf       	rjmp	.-222    	; 0x7006 <main+0x215e>
digitalWrite():
    70e4:	61 e0       	ldi	r22, 0x01	; 1
    70e6:	85 e1       	ldi	r24, 0x15	; 21
    70e8:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
    70ec:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG_RAW>
    70f0:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG_RAW+0x1>
    70f4:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG_RAW+0x2>
    70f8:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    70fc:	2d ec       	ldi	r18, 0xCD	; 205
    70fe:	3c ec       	ldi	r19, 0xCC	; 204
    7100:	47 ec       	ldi	r20, 0xC7	; 199
    7102:	52 e4       	ldi	r21, 0x42	; 66
    7104:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <TEMP_DEG>
    7108:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <TEMP_DEG+0x1>
    710c:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <TEMP_DEG+0x2>
    7110:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <TEMP_DEG+0x3>
    7114:	b1 d2       	rcall	.+1378   	; 0x7678 <__gesf2>
    7116:	18 16       	cp	r1, r24
    7118:	9c f4       	brge	.+38     	; 0x7140 <main+0x2298>
    711a:	20 e0       	ldi	r18, 0x00	; 0
    711c:	30 e0       	ldi	r19, 0x00	; 0
    711e:	40 e2       	ldi	r20, 0x20	; 32
    7120:	51 e4       	ldi	r21, 0x41	; 65
    7122:	c5 01       	movw	r24, r10
    7124:	b4 01       	movw	r22, r8
    7126:	ac d2       	rcall	.+1368   	; 0x7680 <__mulsf3>
    7128:	c4 d1       	rcall	.+904    	; 0x74b2 <__fixsfsi>
    712a:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    712e:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    7132:	ea e0       	ldi	r30, 0x0A	; 10
    7134:	f0 e0       	ldi	r31, 0x00	; 0
    7136:	e0 93 fb 28 	sts	0x28FB, r30	; 0x8028fb <digits1+0x6>
    713a:	f0 93 fc 28 	sts	0x28FC, r31	; 0x8028fc <digits1+0x7>
    713e:	c6 cf       	rjmp	.-116    	; 0x70cc <main+0x2224>
    7140:	20 e0       	ldi	r18, 0x00	; 0
    7142:	30 e0       	ldi	r19, 0x00	; 0
    7144:	48 ec       	ldi	r20, 0xC8	; 200
    7146:	52 e4       	ldi	r21, 0x42	; 66
    7148:	c5 01       	movw	r24, r10
    714a:	b4 01       	movw	r22, r8
    714c:	99 d2       	rcall	.+1330   	; 0x7680 <__mulsf3>
    714e:	b1 d1       	rcall	.+866    	; 0x74b2 <__fixsfsi>
    7150:	0e 94 31 04 	call	0x862	; 0x862 <Eclass::BREAK_NUMBER1(long) [clone .constprop.47]>
    7154:	d0 92 bf 28 	sts	0x28BF, r13	; 0x8028bf <DOT1_1>
    7158:	ec cf       	rjmp	.-40     	; 0x7132 <main+0x228a>
digitalWrite():
    715a:	60 e0       	ldi	r22, 0x00	; 0
    715c:	81 e2       	ldi	r24, 0x21	; 33
    715e:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    7162:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    7166:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    716a:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    716e:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    7172:	dd 20       	and	r13, r13
    7174:	19 f0       	breq	.+6      	; 0x717c <main+0x22d4>
    7176:	8d e0       	ldi	r24, 0x0D	; 13
    7178:	90 e0       	ldi	r25, 0x00	; 0
    717a:	3b cf       	rjmp	.-394    	; 0x6ff2 <main+0x214a>
    717c:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    7180:	89 ce       	rjmp	.-750    	; 0x6e94 <main+0x1fec>
    7182:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    7186:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    718a:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <i>
    718e:	90 91 a5 28 	lds	r25, 0x28A5	; 0x8028a5 <i+0x1>
    7192:	88 3c       	cpi	r24, 0xC8	; 200
    7194:	91 05       	cpc	r25, r1
    7196:	1c f5       	brge	.+70     	; 0x71de <main+0x2336>
DISPLAY_DIGIT2():
    7198:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2>
    719c:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x1>
    71a0:	8d e0       	ldi	r24, 0x0D	; 13
    71a2:	90 e0       	ldi	r25, 0x00	; 0
    71a4:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    71a8:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    71ac:	2a e1       	ldi	r18, 0x1A	; 26
    71ae:	30 e0       	ldi	r19, 0x00	; 0
    71b0:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits2+0x4>
    71b4:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits2+0x5>
    71b8:	2e e0       	ldi	r18, 0x0E	; 14
    71ba:	30 e0       	ldi	r19, 0x00	; 0
    71bc:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits2+0x6>
    71c0:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    71c4:	2c e0       	ldi	r18, 0x0C	; 12
    71c6:	30 e0       	ldi	r19, 0x00	; 0
    71c8:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    71cc:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    71d0:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x2>
    71d4:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x3>
    71d8:	8c e1       	ldi	r24, 0x1C	; 28
    71da:	90 e0       	ldi	r25, 0x00	; 0
    71dc:	b2 cb       	rjmp	.-2204   	; 0x6942 <main+0x1a9a>
SET_LONG_PRESS_FUNCTION():
    71de:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <Service_Menu>
    71e2:	2a ca       	rjmp	.-2988   	; 0x6638 <main+0x1790>
    71e4:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    71e8:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    71ec:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    71f0:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
    71f4:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <select_heating_type>
    71f8:	90 e0       	ldi	r25, 0x00	; 0
    71fa:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
    71fe:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
DISPLAY_DIGIT2():
    7202:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2>
    7206:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x1>
    720a:	2f e0       	ldi	r18, 0x0F	; 15
    720c:	30 e0       	ldi	r19, 0x00	; 0
    720e:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x2>
    7212:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x3>
    7216:	8d e0       	ldi	r24, 0x0D	; 13
    7218:	90 e0       	ldi	r25, 0x00	; 0
    721a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    721e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    7222:	80 e1       	ldi	r24, 0x10	; 16
    7224:	90 e0       	ldi	r25, 0x00	; 0
    7226:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    722a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    722e:	4c e0       	ldi	r20, 0x0C	; 12
    7230:	50 e0       	ldi	r21, 0x00	; 0
    7232:	40 93 f5 28 	sts	0x28F5, r20	; 0x8028f5 <digits1>
    7236:	50 93 f6 28 	sts	0x28F6, r21	; 0x8028f6 <digits1+0x1>
    723a:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    723e:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    7242:	2a e1       	ldi	r18, 0x1A	; 26
    7244:	30 e0       	ldi	r19, 0x00	; 0
    7246:	0c 94 75 2b 	jmp	0x56ea	; 0x56ea <main+0x842>
SET_LONG_PRESS_FUNCTION():
    724a:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    724e:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    7252:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    7256:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    725a:	8a e1       	ldi	r24, 0x1A	; 26
    725c:	90 e0       	ldi	r25, 0x00	; 0
    725e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    7262:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    7266:	87 e1       	ldi	r24, 0x17	; 23
    7268:	90 e0       	ldi	r25, 0x00	; 0
    726a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    726e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    7272:	8b e1       	ldi	r24, 0x1B	; 27
    7274:	90 e0       	ldi	r25, 0x00	; 0
    7276:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits2+0x4>
    727a:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits2+0x5>
    727e:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits2+0x6>
    7282:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits2+0x7>
    7286:	0c 94 3d 2c 	jmp	0x587a	; 0x587a <main+0x9d2>
SET_LONG_PRESS_FUNCTION():
    728a:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    728e:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT1_1>
    7292:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <DOT2_1>
    7296:	0e 94 39 09 	call	0x1272	; 0x1272 <Pclass::ALL_LED_OFF() [clone .constprop.51]>
DISPLAY_DIGIT2():
    729a:	85 e1       	ldi	r24, 0x15	; 21
    729c:	90 e0       	ldi	r25, 0x00	; 0
    729e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2>
    72a2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x1>
    72a6:	8d e0       	ldi	r24, 0x0D	; 13
    72a8:	90 e0       	ldi	r25, 0x00	; 0
    72aa:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x2>
    72ae:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x3>
    72b2:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits2+0x4>
    72b6:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits2+0x5>
    72ba:	80 e1       	ldi	r24, 0x10	; 16
    72bc:	90 e0       	ldi	r25, 0x00	; 0
    72be:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits2+0x6>
    72c2:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits2+0x7>
DISPLAY_DIGIT1():
    72c6:	21 e1       	ldi	r18, 0x11	; 17
    72c8:	30 e0       	ldi	r19, 0x00	; 0
    72ca:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1>
    72ce:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x1>
    72d2:	2f e0       	ldi	r18, 0x0F	; 15
    72d4:	30 e0       	ldi	r19, 0x00	; 0
    72d6:	20 93 f7 28 	sts	0x28F7, r18	; 0x8028f7 <digits1+0x2>
    72da:	30 93 f8 28 	sts	0x28F8, r19	; 0x8028f8 <digits1+0x3>
    72de:	2c e0       	ldi	r18, 0x0C	; 12
    72e0:	30 e0       	ldi	r19, 0x00	; 0
    72e2:	0c 94 75 2b 	jmp	0x56ea	; 0x56ea <main+0x842>
loop():
    72e6:	0e 94 fe 14 	call	0x29fc	; 0x29fc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.34]>
    72ea:	0c 94 02 2b 	jmp	0x5604	; 0x5604 <main+0x75c>
digitalWrite():
    72ee:	60 e0       	ldi	r22, 0x00	; 0
    72f0:	85 e1       	ldi	r24, 0x15	; 21
    72f2:	0e 94 2a 08 	call	0x1054	; 0x1054 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    72f6:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2>
    72fa:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x1>
    72fe:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits2+0x2>
    7302:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits2+0x3>
    7306:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits2+0x4>
    730a:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits2+0x5>
    730e:	b7 cf       	rjmp	.-146    	; 0x727e <main+0x23d6>

00007310 <__subsf3>:
__subsf3():
    7310:	50 58       	subi	r21, 0x80	; 128

00007312 <__addsf3>:
    7312:	bb 27       	eor	r27, r27
    7314:	aa 27       	eor	r26, r26
    7316:	0e d0       	rcall	.+28     	; 0x7334 <__addsf3x>
    7318:	75 c1       	rjmp	.+746    	; 0x7604 <__fp_round>
__addsf3():
    731a:	66 d1       	rcall	.+716    	; 0x75e8 <__fp_pscA>
    731c:	30 f0       	brcs	.+12     	; 0x732a <__addsf3+0x18>
    731e:	6b d1       	rcall	.+726    	; 0x75f6 <__fp_pscB>
    7320:	20 f0       	brcs	.+8      	; 0x732a <__addsf3+0x18>
    7322:	31 f4       	brne	.+12     	; 0x7330 <__addsf3+0x1e>
    7324:	9f 3f       	cpi	r25, 0xFF	; 255
    7326:	11 f4       	brne	.+4      	; 0x732c <__addsf3+0x1a>
    7328:	1e f4       	brtc	.+6      	; 0x7330 <__addsf3+0x1e>
    732a:	5b c1       	rjmp	.+694    	; 0x75e2 <__fp_nan>
    732c:	0e f4       	brtc	.+2      	; 0x7330 <__addsf3+0x1e>
    732e:	e0 95       	com	r30
    7330:	e7 fb       	bst	r30, 7
    7332:	51 c1       	rjmp	.+674    	; 0x75d6 <__fp_inf>

00007334 <__addsf3x>:
__addsf3x():
    7334:	e9 2f       	mov	r30, r25
    7336:	77 d1       	rcall	.+750    	; 0x7626 <__fp_split3>
    7338:	80 f3       	brcs	.-32     	; 0x731a <__addsf3+0x8>
    733a:	ba 17       	cp	r27, r26
    733c:	62 07       	cpc	r22, r18
    733e:	73 07       	cpc	r23, r19
    7340:	84 07       	cpc	r24, r20
    7342:	95 07       	cpc	r25, r21
    7344:	18 f0       	brcs	.+6      	; 0x734c <__addsf3x+0x18>
    7346:	71 f4       	brne	.+28     	; 0x7364 <__addsf3x+0x30>
    7348:	9e f5       	brtc	.+102    	; 0x73b0 <__addsf3x+0x7c>
    734a:	8f c1       	rjmp	.+798    	; 0x766a <__fp_zero>
    734c:	0e f4       	brtc	.+2      	; 0x7350 <__addsf3x+0x1c>
    734e:	e0 95       	com	r30
    7350:	0b 2e       	mov	r0, r27
    7352:	ba 2f       	mov	r27, r26
    7354:	a0 2d       	mov	r26, r0
    7356:	0b 01       	movw	r0, r22
    7358:	b9 01       	movw	r22, r18
    735a:	90 01       	movw	r18, r0
    735c:	0c 01       	movw	r0, r24
    735e:	ca 01       	movw	r24, r20
    7360:	a0 01       	movw	r20, r0
    7362:	11 24       	eor	r1, r1
    7364:	ff 27       	eor	r31, r31
    7366:	59 1b       	sub	r21, r25
    7368:	99 f0       	breq	.+38     	; 0x7390 <__addsf3x+0x5c>
    736a:	59 3f       	cpi	r21, 0xF9	; 249
    736c:	50 f4       	brcc	.+20     	; 0x7382 <__addsf3x+0x4e>
    736e:	50 3e       	cpi	r21, 0xE0	; 224
    7370:	68 f1       	brcs	.+90     	; 0x73cc <__addsf3x+0x98>
    7372:	1a 16       	cp	r1, r26
    7374:	f0 40       	sbci	r31, 0x00	; 0
    7376:	a2 2f       	mov	r26, r18
    7378:	23 2f       	mov	r18, r19
    737a:	34 2f       	mov	r19, r20
    737c:	44 27       	eor	r20, r20
    737e:	58 5f       	subi	r21, 0xF8	; 248
    7380:	f3 cf       	rjmp	.-26     	; 0x7368 <__addsf3x+0x34>
    7382:	46 95       	lsr	r20
    7384:	37 95       	ror	r19
    7386:	27 95       	ror	r18
    7388:	a7 95       	ror	r26
    738a:	f0 40       	sbci	r31, 0x00	; 0
    738c:	53 95       	inc	r21
    738e:	c9 f7       	brne	.-14     	; 0x7382 <__addsf3x+0x4e>
    7390:	7e f4       	brtc	.+30     	; 0x73b0 <__addsf3x+0x7c>
    7392:	1f 16       	cp	r1, r31
    7394:	ba 0b       	sbc	r27, r26
    7396:	62 0b       	sbc	r22, r18
    7398:	73 0b       	sbc	r23, r19
    739a:	84 0b       	sbc	r24, r20
    739c:	ba f0       	brmi	.+46     	; 0x73cc <__addsf3x+0x98>
    739e:	91 50       	subi	r25, 0x01	; 1
    73a0:	a1 f0       	breq	.+40     	; 0x73ca <__addsf3x+0x96>
    73a2:	ff 0f       	add	r31, r31
    73a4:	bb 1f       	adc	r27, r27
    73a6:	66 1f       	adc	r22, r22
    73a8:	77 1f       	adc	r23, r23
    73aa:	88 1f       	adc	r24, r24
    73ac:	c2 f7       	brpl	.-16     	; 0x739e <__addsf3x+0x6a>
    73ae:	0e c0       	rjmp	.+28     	; 0x73cc <__addsf3x+0x98>
    73b0:	ba 0f       	add	r27, r26
    73b2:	62 1f       	adc	r22, r18
    73b4:	73 1f       	adc	r23, r19
    73b6:	84 1f       	adc	r24, r20
    73b8:	48 f4       	brcc	.+18     	; 0x73cc <__addsf3x+0x98>
    73ba:	87 95       	ror	r24
    73bc:	77 95       	ror	r23
    73be:	67 95       	ror	r22
    73c0:	b7 95       	ror	r27
    73c2:	f7 95       	ror	r31
    73c4:	9e 3f       	cpi	r25, 0xFE	; 254
    73c6:	08 f0       	brcs	.+2      	; 0x73ca <__addsf3x+0x96>
    73c8:	b3 cf       	rjmp	.-154    	; 0x7330 <__addsf3+0x1e>
    73ca:	93 95       	inc	r25
    73cc:	88 0f       	add	r24, r24
    73ce:	08 f0       	brcs	.+2      	; 0x73d2 <__addsf3x+0x9e>
    73d0:	99 27       	eor	r25, r25
    73d2:	ee 0f       	add	r30, r30
    73d4:	97 95       	ror	r25
    73d6:	87 95       	ror	r24
    73d8:	08 95       	ret

000073da <__cmpsf2>:
    73da:	d9 d0       	rcall	.+434    	; 0x758e <__fp_cmp>
    73dc:	08 f4       	brcc	.+2      	; 0x73e0 <__cmpsf2+0x6>
    73de:	81 e0       	ldi	r24, 0x01	; 1
    73e0:	08 95       	ret

000073e2 <__divsf3>:
    73e2:	0c d0       	rcall	.+24     	; 0x73fc <__divsf3x>
    73e4:	0f c1       	rjmp	.+542    	; 0x7604 <__fp_round>
    73e6:	07 d1       	rcall	.+526    	; 0x75f6 <__fp_pscB>
    73e8:	40 f0       	brcs	.+16     	; 0x73fa <__divsf3+0x18>
    73ea:	fe d0       	rcall	.+508    	; 0x75e8 <__fp_pscA>
    73ec:	30 f0       	brcs	.+12     	; 0x73fa <__divsf3+0x18>
    73ee:	21 f4       	brne	.+8      	; 0x73f8 <__divsf3+0x16>
    73f0:	5f 3f       	cpi	r21, 0xFF	; 255
    73f2:	19 f0       	breq	.+6      	; 0x73fa <__divsf3+0x18>
    73f4:	f0 c0       	rjmp	.+480    	; 0x75d6 <__fp_inf>
    73f6:	51 11       	cpse	r21, r1
    73f8:	39 c1       	rjmp	.+626    	; 0x766c <__fp_szero>
    73fa:	f3 c0       	rjmp	.+486    	; 0x75e2 <__fp_nan>

000073fc <__divsf3x>:
    73fc:	14 d1       	rcall	.+552    	; 0x7626 <__fp_split3>
    73fe:	98 f3       	brcs	.-26     	; 0x73e6 <__divsf3+0x4>

00007400 <__divsf3_pse>:
__divsf3_pse():
    7400:	99 23       	and	r25, r25
    7402:	c9 f3       	breq	.-14     	; 0x73f6 <__divsf3+0x14>
    7404:	55 23       	and	r21, r21
    7406:	b1 f3       	breq	.-20     	; 0x73f4 <__divsf3+0x12>
    7408:	95 1b       	sub	r25, r21
    740a:	55 0b       	sbc	r21, r21
    740c:	bb 27       	eor	r27, r27
    740e:	aa 27       	eor	r26, r26
    7410:	62 17       	cp	r22, r18
    7412:	73 07       	cpc	r23, r19
    7414:	84 07       	cpc	r24, r20
    7416:	38 f0       	brcs	.+14     	; 0x7426 <__divsf3_pse+0x26>
    7418:	9f 5f       	subi	r25, 0xFF	; 255
    741a:	5f 4f       	sbci	r21, 0xFF	; 255
    741c:	22 0f       	add	r18, r18
    741e:	33 1f       	adc	r19, r19
    7420:	44 1f       	adc	r20, r20
    7422:	aa 1f       	adc	r26, r26
    7424:	a9 f3       	breq	.-22     	; 0x7410 <__divsf3_pse+0x10>
    7426:	33 d0       	rcall	.+102    	; 0x748e <__divsf3_pse+0x8e>
    7428:	0e 2e       	mov	r0, r30
    742a:	3a f0       	brmi	.+14     	; 0x743a <__divsf3_pse+0x3a>
    742c:	e0 e8       	ldi	r30, 0x80	; 128
    742e:	30 d0       	rcall	.+96     	; 0x7490 <__divsf3_pse+0x90>
    7430:	91 50       	subi	r25, 0x01	; 1
    7432:	50 40       	sbci	r21, 0x00	; 0
    7434:	e6 95       	lsr	r30
    7436:	00 1c       	adc	r0, r0
    7438:	ca f7       	brpl	.-14     	; 0x742c <__divsf3_pse+0x2c>
    743a:	29 d0       	rcall	.+82     	; 0x748e <__divsf3_pse+0x8e>
    743c:	fe 2f       	mov	r31, r30
    743e:	27 d0       	rcall	.+78     	; 0x748e <__divsf3_pse+0x8e>
    7440:	66 0f       	add	r22, r22
    7442:	77 1f       	adc	r23, r23
    7444:	88 1f       	adc	r24, r24
    7446:	bb 1f       	adc	r27, r27
    7448:	26 17       	cp	r18, r22
    744a:	37 07       	cpc	r19, r23
    744c:	48 07       	cpc	r20, r24
    744e:	ab 07       	cpc	r26, r27
    7450:	b0 e8       	ldi	r27, 0x80	; 128
    7452:	09 f0       	breq	.+2      	; 0x7456 <__divsf3_pse+0x56>
    7454:	bb 0b       	sbc	r27, r27
    7456:	80 2d       	mov	r24, r0
    7458:	bf 01       	movw	r22, r30
    745a:	ff 27       	eor	r31, r31
    745c:	93 58       	subi	r25, 0x83	; 131
    745e:	5f 4f       	sbci	r21, 0xFF	; 255
    7460:	2a f0       	brmi	.+10     	; 0x746c <__divsf3_pse+0x6c>
    7462:	9e 3f       	cpi	r25, 0xFE	; 254
    7464:	51 05       	cpc	r21, r1
    7466:	68 f0       	brcs	.+26     	; 0x7482 <__divsf3_pse+0x82>
    7468:	b6 c0       	rjmp	.+364    	; 0x75d6 <__fp_inf>
    746a:	00 c1       	rjmp	.+512    	; 0x766c <__fp_szero>
    746c:	5f 3f       	cpi	r21, 0xFF	; 255
    746e:	ec f3       	brlt	.-6      	; 0x746a <__divsf3_pse+0x6a>
    7470:	98 3e       	cpi	r25, 0xE8	; 232
    7472:	dc f3       	brlt	.-10     	; 0x746a <__divsf3_pse+0x6a>
    7474:	86 95       	lsr	r24
    7476:	77 95       	ror	r23
    7478:	67 95       	ror	r22
    747a:	b7 95       	ror	r27
    747c:	f7 95       	ror	r31
    747e:	9f 5f       	subi	r25, 0xFF	; 255
    7480:	c9 f7       	brne	.-14     	; 0x7474 <__divsf3_pse+0x74>
    7482:	88 0f       	add	r24, r24
    7484:	91 1d       	adc	r25, r1
    7486:	96 95       	lsr	r25
    7488:	87 95       	ror	r24
    748a:	97 f9       	bld	r25, 7
    748c:	08 95       	ret
    748e:	e1 e0       	ldi	r30, 0x01	; 1
    7490:	66 0f       	add	r22, r22
    7492:	77 1f       	adc	r23, r23
    7494:	88 1f       	adc	r24, r24
    7496:	bb 1f       	adc	r27, r27
    7498:	62 17       	cp	r22, r18
    749a:	73 07       	cpc	r23, r19
    749c:	84 07       	cpc	r24, r20
    749e:	ba 07       	cpc	r27, r26
    74a0:	20 f0       	brcs	.+8      	; 0x74aa <__divsf3_pse+0xaa>
    74a2:	62 1b       	sub	r22, r18
    74a4:	73 0b       	sbc	r23, r19
    74a6:	84 0b       	sbc	r24, r20
    74a8:	ba 0b       	sbc	r27, r26
    74aa:	ee 1f       	adc	r30, r30
    74ac:	88 f7       	brcc	.-30     	; 0x7490 <__divsf3_pse+0x90>
    74ae:	e0 95       	com	r30
    74b0:	08 95       	ret

000074b2 <__fixsfsi>:
__fixsfsi():
    74b2:	04 d0       	rcall	.+8      	; 0x74bc <__fixunssfsi>
    74b4:	68 94       	set
    74b6:	b1 11       	cpse	r27, r1
    74b8:	d9 c0       	rjmp	.+434    	; 0x766c <__fp_szero>
    74ba:	08 95       	ret

000074bc <__fixunssfsi>:
__fixunssfsi():
    74bc:	bc d0       	rcall	.+376    	; 0x7636 <__fp_splitA>
    74be:	88 f0       	brcs	.+34     	; 0x74e2 <__fixunssfsi+0x26>
    74c0:	9f 57       	subi	r25, 0x7F	; 127
    74c2:	90 f0       	brcs	.+36     	; 0x74e8 <__fixunssfsi+0x2c>
    74c4:	b9 2f       	mov	r27, r25
    74c6:	99 27       	eor	r25, r25
    74c8:	b7 51       	subi	r27, 0x17	; 23
    74ca:	a0 f0       	brcs	.+40     	; 0x74f4 <__fixunssfsi+0x38>
    74cc:	d1 f0       	breq	.+52     	; 0x7502 <__fixunssfsi+0x46>
    74ce:	66 0f       	add	r22, r22
    74d0:	77 1f       	adc	r23, r23
    74d2:	88 1f       	adc	r24, r24
    74d4:	99 1f       	adc	r25, r25
    74d6:	1a f0       	brmi	.+6      	; 0x74de <__fixunssfsi+0x22>
    74d8:	ba 95       	dec	r27
    74da:	c9 f7       	brne	.-14     	; 0x74ce <__fixunssfsi+0x12>
    74dc:	12 c0       	rjmp	.+36     	; 0x7502 <__fixunssfsi+0x46>
    74de:	b1 30       	cpi	r27, 0x01	; 1
    74e0:	81 f0       	breq	.+32     	; 0x7502 <__fixunssfsi+0x46>
    74e2:	c3 d0       	rcall	.+390    	; 0x766a <__fp_zero>
    74e4:	b1 e0       	ldi	r27, 0x01	; 1
    74e6:	08 95       	ret
    74e8:	c0 c0       	rjmp	.+384    	; 0x766a <__fp_zero>
    74ea:	67 2f       	mov	r22, r23
    74ec:	78 2f       	mov	r23, r24
    74ee:	88 27       	eor	r24, r24
    74f0:	b8 5f       	subi	r27, 0xF8	; 248
    74f2:	39 f0       	breq	.+14     	; 0x7502 <__fixunssfsi+0x46>
    74f4:	b9 3f       	cpi	r27, 0xF9	; 249
    74f6:	cc f3       	brlt	.-14     	; 0x74ea <__fixunssfsi+0x2e>
    74f8:	86 95       	lsr	r24
    74fa:	77 95       	ror	r23
    74fc:	67 95       	ror	r22
    74fe:	b3 95       	inc	r27
    7500:	d9 f7       	brne	.-10     	; 0x74f8 <__fixunssfsi+0x3c>
    7502:	3e f4       	brtc	.+14     	; 0x7512 <__fixunssfsi+0x56>
    7504:	90 95       	com	r25
    7506:	80 95       	com	r24
    7508:	70 95       	com	r23
    750a:	61 95       	neg	r22
    750c:	7f 4f       	sbci	r23, 0xFF	; 255
    750e:	8f 4f       	sbci	r24, 0xFF	; 255
    7510:	9f 4f       	sbci	r25, 0xFF	; 255
    7512:	08 95       	ret

00007514 <__floatunsisf>:
__floatunsisf():
    7514:	e8 94       	clt
    7516:	09 c0       	rjmp	.+18     	; 0x752a <__floatsisf+0x12>

00007518 <__floatsisf>:
    7518:	97 fb       	bst	r25, 7
    751a:	3e f4       	brtc	.+14     	; 0x752a <__floatsisf+0x12>
    751c:	90 95       	com	r25
    751e:	80 95       	com	r24
    7520:	70 95       	com	r23
    7522:	61 95       	neg	r22
    7524:	7f 4f       	sbci	r23, 0xFF	; 255
    7526:	8f 4f       	sbci	r24, 0xFF	; 255
    7528:	9f 4f       	sbci	r25, 0xFF	; 255
    752a:	99 23       	and	r25, r25
    752c:	a9 f0       	breq	.+42     	; 0x7558 <__floatsisf+0x40>
    752e:	f9 2f       	mov	r31, r25
    7530:	96 e9       	ldi	r25, 0x96	; 150
    7532:	bb 27       	eor	r27, r27
    7534:	93 95       	inc	r25
    7536:	f6 95       	lsr	r31
    7538:	87 95       	ror	r24
    753a:	77 95       	ror	r23
    753c:	67 95       	ror	r22
    753e:	b7 95       	ror	r27
    7540:	f1 11       	cpse	r31, r1
    7542:	f8 cf       	rjmp	.-16     	; 0x7534 <__floatsisf+0x1c>
    7544:	fa f4       	brpl	.+62     	; 0x7584 <__floatsisf+0x6c>
    7546:	bb 0f       	add	r27, r27
    7548:	11 f4       	brne	.+4      	; 0x754e <__floatsisf+0x36>
    754a:	60 ff       	sbrs	r22, 0
    754c:	1b c0       	rjmp	.+54     	; 0x7584 <__floatsisf+0x6c>
    754e:	6f 5f       	subi	r22, 0xFF	; 255
    7550:	7f 4f       	sbci	r23, 0xFF	; 255
    7552:	8f 4f       	sbci	r24, 0xFF	; 255
    7554:	9f 4f       	sbci	r25, 0xFF	; 255
    7556:	16 c0       	rjmp	.+44     	; 0x7584 <__floatsisf+0x6c>
    7558:	88 23       	and	r24, r24
    755a:	11 f0       	breq	.+4      	; 0x7560 <__floatsisf+0x48>
    755c:	96 e9       	ldi	r25, 0x96	; 150
    755e:	11 c0       	rjmp	.+34     	; 0x7582 <__floatsisf+0x6a>
    7560:	77 23       	and	r23, r23
    7562:	21 f0       	breq	.+8      	; 0x756c <__floatsisf+0x54>
    7564:	9e e8       	ldi	r25, 0x8E	; 142
    7566:	87 2f       	mov	r24, r23
    7568:	76 2f       	mov	r23, r22
    756a:	05 c0       	rjmp	.+10     	; 0x7576 <__floatsisf+0x5e>
    756c:	66 23       	and	r22, r22
    756e:	71 f0       	breq	.+28     	; 0x758c <__floatsisf+0x74>
    7570:	96 e8       	ldi	r25, 0x86	; 134
    7572:	86 2f       	mov	r24, r22
    7574:	70 e0       	ldi	r23, 0x00	; 0
    7576:	60 e0       	ldi	r22, 0x00	; 0
    7578:	2a f0       	brmi	.+10     	; 0x7584 <__floatsisf+0x6c>
    757a:	9a 95       	dec	r25
    757c:	66 0f       	add	r22, r22
    757e:	77 1f       	adc	r23, r23
    7580:	88 1f       	adc	r24, r24
    7582:	da f7       	brpl	.-10     	; 0x757a <__floatsisf+0x62>
    7584:	88 0f       	add	r24, r24
    7586:	96 95       	lsr	r25
    7588:	87 95       	ror	r24
    758a:	97 f9       	bld	r25, 7
    758c:	08 95       	ret

0000758e <__fp_cmp>:
__fp_cmp():
    758e:	99 0f       	add	r25, r25
    7590:	00 08       	sbc	r0, r0
    7592:	55 0f       	add	r21, r21
    7594:	aa 0b       	sbc	r26, r26
    7596:	e0 e8       	ldi	r30, 0x80	; 128
    7598:	fe ef       	ldi	r31, 0xFE	; 254
    759a:	16 16       	cp	r1, r22
    759c:	17 06       	cpc	r1, r23
    759e:	e8 07       	cpc	r30, r24
    75a0:	f9 07       	cpc	r31, r25
    75a2:	c0 f0       	brcs	.+48     	; 0x75d4 <__fp_cmp+0x46>
    75a4:	12 16       	cp	r1, r18
    75a6:	13 06       	cpc	r1, r19
    75a8:	e4 07       	cpc	r30, r20
    75aa:	f5 07       	cpc	r31, r21
    75ac:	98 f0       	brcs	.+38     	; 0x75d4 <__fp_cmp+0x46>
    75ae:	62 1b       	sub	r22, r18
    75b0:	73 0b       	sbc	r23, r19
    75b2:	84 0b       	sbc	r24, r20
    75b4:	95 0b       	sbc	r25, r21
    75b6:	39 f4       	brne	.+14     	; 0x75c6 <__fp_cmp+0x38>
    75b8:	0a 26       	eor	r0, r26
    75ba:	61 f0       	breq	.+24     	; 0x75d4 <__fp_cmp+0x46>
    75bc:	23 2b       	or	r18, r19
    75be:	24 2b       	or	r18, r20
    75c0:	25 2b       	or	r18, r21
    75c2:	21 f4       	brne	.+8      	; 0x75cc <__fp_cmp+0x3e>
    75c4:	08 95       	ret
    75c6:	0a 26       	eor	r0, r26
    75c8:	09 f4       	brne	.+2      	; 0x75cc <__fp_cmp+0x3e>
    75ca:	a1 40       	sbci	r26, 0x01	; 1
    75cc:	a6 95       	lsr	r26
    75ce:	8f ef       	ldi	r24, 0xFF	; 255
    75d0:	81 1d       	adc	r24, r1
    75d2:	81 1d       	adc	r24, r1
    75d4:	08 95       	ret

000075d6 <__fp_inf>:
__fp_inf():
    75d6:	97 f9       	bld	r25, 7
    75d8:	9f 67       	ori	r25, 0x7F	; 127
    75da:	80 e8       	ldi	r24, 0x80	; 128
    75dc:	70 e0       	ldi	r23, 0x00	; 0
    75de:	60 e0       	ldi	r22, 0x00	; 0
    75e0:	08 95       	ret

000075e2 <__fp_nan>:
__fp_nan():
    75e2:	9f ef       	ldi	r25, 0xFF	; 255
    75e4:	80 ec       	ldi	r24, 0xC0	; 192
    75e6:	08 95       	ret

000075e8 <__fp_pscA>:
__fp_pscA():
    75e8:	00 24       	eor	r0, r0
    75ea:	0a 94       	dec	r0
    75ec:	16 16       	cp	r1, r22
    75ee:	17 06       	cpc	r1, r23
    75f0:	18 06       	cpc	r1, r24
    75f2:	09 06       	cpc	r0, r25
    75f4:	08 95       	ret

000075f6 <__fp_pscB>:
__fp_pscB():
    75f6:	00 24       	eor	r0, r0
    75f8:	0a 94       	dec	r0
    75fa:	12 16       	cp	r1, r18
    75fc:	13 06       	cpc	r1, r19
    75fe:	14 06       	cpc	r1, r20
    7600:	05 06       	cpc	r0, r21
    7602:	08 95       	ret

00007604 <__fp_round>:
__fp_round():
    7604:	09 2e       	mov	r0, r25
    7606:	03 94       	inc	r0
    7608:	00 0c       	add	r0, r0
    760a:	11 f4       	brne	.+4      	; 0x7610 <__fp_round+0xc>
    760c:	88 23       	and	r24, r24
    760e:	52 f0       	brmi	.+20     	; 0x7624 <__fp_round+0x20>
    7610:	bb 0f       	add	r27, r27
    7612:	40 f4       	brcc	.+16     	; 0x7624 <__fp_round+0x20>
    7614:	bf 2b       	or	r27, r31
    7616:	11 f4       	brne	.+4      	; 0x761c <__fp_round+0x18>
    7618:	60 ff       	sbrs	r22, 0
    761a:	04 c0       	rjmp	.+8      	; 0x7624 <__fp_round+0x20>
    761c:	6f 5f       	subi	r22, 0xFF	; 255
    761e:	7f 4f       	sbci	r23, 0xFF	; 255
    7620:	8f 4f       	sbci	r24, 0xFF	; 255
    7622:	9f 4f       	sbci	r25, 0xFF	; 255
    7624:	08 95       	ret

00007626 <__fp_split3>:
__fp_split3():
    7626:	57 fd       	sbrc	r21, 7
    7628:	90 58       	subi	r25, 0x80	; 128
    762a:	44 0f       	add	r20, r20
    762c:	55 1f       	adc	r21, r21
    762e:	59 f0       	breq	.+22     	; 0x7646 <__fp_splitA+0x10>
    7630:	5f 3f       	cpi	r21, 0xFF	; 255
    7632:	71 f0       	breq	.+28     	; 0x7650 <__fp_splitA+0x1a>
    7634:	47 95       	ror	r20

00007636 <__fp_splitA>:
    7636:	88 0f       	add	r24, r24
    7638:	97 fb       	bst	r25, 7
    763a:	99 1f       	adc	r25, r25
    763c:	61 f0       	breq	.+24     	; 0x7656 <__fp_splitA+0x20>
    763e:	9f 3f       	cpi	r25, 0xFF	; 255
    7640:	79 f0       	breq	.+30     	; 0x7660 <__fp_splitA+0x2a>
    7642:	87 95       	ror	r24
    7644:	08 95       	ret
    7646:	12 16       	cp	r1, r18
    7648:	13 06       	cpc	r1, r19
    764a:	14 06       	cpc	r1, r20
    764c:	55 1f       	adc	r21, r21
    764e:	f2 cf       	rjmp	.-28     	; 0x7634 <__fp_split3+0xe>
    7650:	46 95       	lsr	r20
    7652:	f1 df       	rcall	.-30     	; 0x7636 <__fp_splitA>
    7654:	08 c0       	rjmp	.+16     	; 0x7666 <__fp_splitA+0x30>
    7656:	16 16       	cp	r1, r22
    7658:	17 06       	cpc	r1, r23
    765a:	18 06       	cpc	r1, r24
    765c:	99 1f       	adc	r25, r25
    765e:	f1 cf       	rjmp	.-30     	; 0x7642 <__fp_splitA+0xc>
    7660:	86 95       	lsr	r24
    7662:	71 05       	cpc	r23, r1
    7664:	61 05       	cpc	r22, r1
    7666:	08 94       	sec
    7668:	08 95       	ret

0000766a <__fp_zero>:
__fp_zero():
    766a:	e8 94       	clt

0000766c <__fp_szero>:
    766c:	bb 27       	eor	r27, r27
    766e:	66 27       	eor	r22, r22
    7670:	77 27       	eor	r23, r23
    7672:	cb 01       	movw	r24, r22
    7674:	97 f9       	bld	r25, 7
    7676:	08 95       	ret

00007678 <__gesf2>:
__gesf2():
    7678:	8a df       	rcall	.-236    	; 0x758e <__fp_cmp>
    767a:	08 f4       	brcc	.+2      	; 0x767e <__gesf2+0x6>
    767c:	8f ef       	ldi	r24, 0xFF	; 255
    767e:	08 95       	ret

00007680 <__mulsf3>:
__mulsf3():
    7680:	0b d0       	rcall	.+22     	; 0x7698 <__mulsf3x>
    7682:	c0 cf       	rjmp	.-128    	; 0x7604 <__fp_round>
    7684:	b1 df       	rcall	.-158    	; 0x75e8 <__fp_pscA>
    7686:	28 f0       	brcs	.+10     	; 0x7692 <__mulsf3+0x12>
    7688:	b6 df       	rcall	.-148    	; 0x75f6 <__fp_pscB>
    768a:	18 f0       	brcs	.+6      	; 0x7692 <__mulsf3+0x12>
    768c:	95 23       	and	r25, r21
    768e:	09 f0       	breq	.+2      	; 0x7692 <__mulsf3+0x12>
    7690:	a2 cf       	rjmp	.-188    	; 0x75d6 <__fp_inf>
    7692:	a7 cf       	rjmp	.-178    	; 0x75e2 <__fp_nan>
    7694:	11 24       	eor	r1, r1
    7696:	ea cf       	rjmp	.-44     	; 0x766c <__fp_szero>

00007698 <__mulsf3x>:
__mulsf3x():
    7698:	c6 df       	rcall	.-116    	; 0x7626 <__fp_split3>
    769a:	a0 f3       	brcs	.-24     	; 0x7684 <__mulsf3+0x4>

0000769c <__mulsf3_pse>:
    769c:	95 9f       	mul	r25, r21
    769e:	d1 f3       	breq	.-12     	; 0x7694 <__mulsf3+0x14>
    76a0:	95 0f       	add	r25, r21
    76a2:	50 e0       	ldi	r21, 0x00	; 0
    76a4:	55 1f       	adc	r21, r21
    76a6:	62 9f       	mul	r22, r18
    76a8:	f0 01       	movw	r30, r0
    76aa:	72 9f       	mul	r23, r18
    76ac:	bb 27       	eor	r27, r27
    76ae:	f0 0d       	add	r31, r0
    76b0:	b1 1d       	adc	r27, r1
    76b2:	63 9f       	mul	r22, r19
    76b4:	aa 27       	eor	r26, r26
    76b6:	f0 0d       	add	r31, r0
    76b8:	b1 1d       	adc	r27, r1
    76ba:	aa 1f       	adc	r26, r26
    76bc:	64 9f       	mul	r22, r20
    76be:	66 27       	eor	r22, r22
    76c0:	b0 0d       	add	r27, r0
    76c2:	a1 1d       	adc	r26, r1
    76c4:	66 1f       	adc	r22, r22
    76c6:	82 9f       	mul	r24, r18
    76c8:	22 27       	eor	r18, r18
    76ca:	b0 0d       	add	r27, r0
    76cc:	a1 1d       	adc	r26, r1
    76ce:	62 1f       	adc	r22, r18
    76d0:	73 9f       	mul	r23, r19
    76d2:	b0 0d       	add	r27, r0
    76d4:	a1 1d       	adc	r26, r1
    76d6:	62 1f       	adc	r22, r18
    76d8:	83 9f       	mul	r24, r19
    76da:	a0 0d       	add	r26, r0
    76dc:	61 1d       	adc	r22, r1
    76de:	22 1f       	adc	r18, r18
    76e0:	74 9f       	mul	r23, r20
    76e2:	33 27       	eor	r19, r19
    76e4:	a0 0d       	add	r26, r0
    76e6:	61 1d       	adc	r22, r1
    76e8:	23 1f       	adc	r18, r19
    76ea:	84 9f       	mul	r24, r20
    76ec:	60 0d       	add	r22, r0
    76ee:	21 1d       	adc	r18, r1
    76f0:	82 2f       	mov	r24, r18
    76f2:	76 2f       	mov	r23, r22
    76f4:	6a 2f       	mov	r22, r26
    76f6:	11 24       	eor	r1, r1
    76f8:	9f 57       	subi	r25, 0x7F	; 127
    76fa:	50 40       	sbci	r21, 0x00	; 0
    76fc:	8a f0       	brmi	.+34     	; 0x7720 <__mulsf3_pse+0x84>
    76fe:	e1 f0       	breq	.+56     	; 0x7738 <__mulsf3_pse+0x9c>
    7700:	88 23       	and	r24, r24
    7702:	4a f0       	brmi	.+18     	; 0x7716 <__mulsf3_pse+0x7a>
    7704:	ee 0f       	add	r30, r30
    7706:	ff 1f       	adc	r31, r31
    7708:	bb 1f       	adc	r27, r27
    770a:	66 1f       	adc	r22, r22
    770c:	77 1f       	adc	r23, r23
    770e:	88 1f       	adc	r24, r24
    7710:	91 50       	subi	r25, 0x01	; 1
    7712:	50 40       	sbci	r21, 0x00	; 0
    7714:	a9 f7       	brne	.-22     	; 0x7700 <__mulsf3_pse+0x64>
    7716:	9e 3f       	cpi	r25, 0xFE	; 254
    7718:	51 05       	cpc	r21, r1
    771a:	70 f0       	brcs	.+28     	; 0x7738 <__mulsf3_pse+0x9c>
    771c:	5c cf       	rjmp	.-328    	; 0x75d6 <__fp_inf>
    771e:	a6 cf       	rjmp	.-180    	; 0x766c <__fp_szero>
    7720:	5f 3f       	cpi	r21, 0xFF	; 255
    7722:	ec f3       	brlt	.-6      	; 0x771e <__mulsf3_pse+0x82>
    7724:	98 3e       	cpi	r25, 0xE8	; 232
    7726:	dc f3       	brlt	.-10     	; 0x771e <__mulsf3_pse+0x82>
    7728:	86 95       	lsr	r24
    772a:	77 95       	ror	r23
    772c:	67 95       	ror	r22
    772e:	b7 95       	ror	r27
    7730:	f7 95       	ror	r31
    7732:	e7 95       	ror	r30
    7734:	9f 5f       	subi	r25, 0xFF	; 255
    7736:	c1 f7       	brne	.-16     	; 0x7728 <__mulsf3_pse+0x8c>
    7738:	fe 2b       	or	r31, r30
    773a:	88 0f       	add	r24, r24
    773c:	91 1d       	adc	r25, r1
    773e:	96 95       	lsr	r25
    7740:	87 95       	ror	r24
    7742:	97 f9       	bld	r25, 7
    7744:	08 95       	ret

00007746 <__unordsf2>:
    7746:	23 df       	rcall	.-442    	; 0x758e <__fp_cmp>
    7748:	88 0b       	sbc	r24, r24
    774a:	99 0b       	sbc	r25, r25
    774c:	08 95       	ret

0000774e <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    774e:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    7750:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    7752:	16 f4       	brtc	.+4      	; 0x7758 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    7754:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    7756:	06 d0       	rcall	.+12     	; 0x7764 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    7758:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    775a:	08 d0       	rcall	.+16     	; 0x776c <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    775c:	65 d0       	rcall	.+202    	; 0x7828 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    775e:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    7760:	05 d0       	rcall	.+10     	; 0x776c <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    7762:	3e f4       	brtc	.+14     	; 0x7772 <__divmodhi4_exit>

00007764 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    7764:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    7766:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    7768:	9f 4f       	sbci	r25, 0xFF	; 255
__divmodhi4_neg1():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    776a:	08 95       	ret

0000776c <__divmodhi4_neg2>:
__divmodhi4_neg2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    776c:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    776e:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    7770:	7f 4f       	sbci	r23, 0xFF	; 255

00007772 <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    7772:	08 95       	ret

00007774 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    7774:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    7776:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    7778:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    777a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    777c:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    777e:	0d c0       	rjmp	.+26     	; 0x779a <__udivmodsi4_ep>

00007780 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    7780:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    7782:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    7784:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    7786:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    7788:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    778a:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    778c:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    778e:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    7790:	20 f0       	brcs	.+8      	; 0x779a <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    7792:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    7794:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7796:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    7798:	f5 0b       	sbc	r31, r21

0000779a <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    779a:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    779c:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    779e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    77a0:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    77a2:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    77a4:	69 f7       	brne	.-38     	; 0x7780 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    77a6:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    77a8:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    77aa:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    77ac:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    77ae:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    77b0:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    77b2:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    77b4:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    77b6:	08 95       	ret

000077b8 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    77b8:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    77ba:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    77bc:	16 f4       	brtc	.+4      	; 0x77c2 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    77be:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    77c0:	0f d0       	rcall	.+30     	; 0x77e0 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    77c2:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    77c4:	05 d0       	rcall	.+10     	; 0x77d0 <__divmodsi4_neg2>
    77c6:	d6 df       	rcall	.-84     	; 0x7774 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    77c8:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    77ca:	02 d0       	rcall	.+4      	; 0x77d0 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    77cc:	46 f4       	brtc	.+16     	; 0x77de <__divmodsi4_exit>
    77ce:	08 c0       	rjmp	.+16     	; 0x77e0 <__negsi2>

000077d0 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    77d0:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    77d2:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    77d4:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    77d6:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    77d8:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    77da:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    77dc:	5f 4f       	sbci	r21, 0xFF	; 255

000077de <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    77de:	08 95       	ret

000077e0 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    77e0:	90 95       	com	r25
    77e2:	80 95       	com	r24
    77e4:	70 95       	com	r23
    77e6:	61 95       	neg	r22
    77e8:	7f 4f       	sbci	r23, 0xFF	; 255
    77ea:	8f 4f       	sbci	r24, 0xFF	; 255
    77ec:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    77ee:	08 95       	ret

000077f0 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    77f0:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    77f2:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    77f4:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    77f6:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    77f8:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    77fa:	09 94       	ijmp

000077fc <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    77fc:	29 d0       	rcall	.+82     	; 0x7850 <__umulhisi3>

000077fe <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    77fe:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    7800:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    7802:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    7804:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    7806:	08 95       	ret

00007808 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    7808:	23 d0       	rcall	.+70     	; 0x7850 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    780a:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    780c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    780e:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    7810:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    7812:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    7814:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    7816:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    7818:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    781a:	08 95       	ret

0000781c <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    781c:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    781e:	f4 cf       	rjmp	.-24     	; 0x7808 <__muluhisi3>

00007820 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    7820:	f3 df       	rcall	.-26     	; 0x7808 <__muluhisi3>
    7822:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    7824:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    7826:	08 95       	ret

00007828 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    7828:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    782a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    782c:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    782e:	07 c0       	rjmp	.+14     	; 0x783e <__udivmodhi4_ep>

00007830 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    7830:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    7832:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    7834:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    7836:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    7838:	10 f0       	brcs	.+4      	; 0x783e <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    783a:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    783c:	b7 0b       	sbc	r27, r23

0000783e <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    783e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    7840:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    7842:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    7844:	a9 f7       	brne	.-22     	; 0x7830 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    7846:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    7848:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    784a:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    784c:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    784e:	08 95       	ret

00007850 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    7850:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    7852:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    7854:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    7856:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    7858:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    785a:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    785c:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    785e:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    7860:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    7862:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    7864:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    7866:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    7868:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    786a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    786c:	08 95       	ret

0000786e <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    786e:	f8 94       	cli

00007870 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    7870:	ff cf       	rjmp	.-2      	; 0x7870 <__stop_program>

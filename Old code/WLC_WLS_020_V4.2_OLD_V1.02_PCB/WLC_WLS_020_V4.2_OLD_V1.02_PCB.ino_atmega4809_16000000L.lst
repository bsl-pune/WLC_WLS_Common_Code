
C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_315410/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 7e 21 	jmp	0x42fc	; 0x42fc <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 56 21 	jmp	0x42ac	; 0x42ac <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 28 21 	jmp	0x4250	; 0x4250 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 02 21 	jmp	0x4204	; 0x4204 <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	13 22       	and	r1, r19

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	ea e5       	ldi	r30, 0x5A	; 90
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	f6 e7       	ldi	r31, 0x76	; 118
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a8 31       	cpi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a8 e1       	ldi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	a6 3f       	cpi	r26, 0xF6	; 246
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 30 3a 	call	0x7460	; 0x7460 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 91 25 	call	0x4b22	; 0x4b22 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 6f 3a 	jmp	0x74de	; 0x74de <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:115
  toggle_ticker.update();
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     2f4:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:116
}
     2f8:	08 95       	ret

000002fa <toggle_fun()>:
toggle_fun():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:37

void toggle_fun();
Ticker toggle_ticker(toggle_fun, 1000, 0, MILLIS);  //Time_speed_show_toggle
void toggle_fun()
{    
   toggle == 0 ? toggle = 1 : toggle = 0;   
     2fa:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <toggle>
     2fe:	81 11       	cpse	r24, r1
     300:	04 c0       	rjmp	.+8      	; 0x30a <toggle_fun()+0x10>
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	80 93 3d 28 	sts	0x283D, r24	; 0x80283d <toggle>
     308:	08 95       	ret
     30a:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <toggle>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:38
}
     30e:	08 95       	ret

00000310 <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Procss.cpp:66
bool select_heating_type=0;
bool checkTempRaised=0; //Siddhesh

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     310:	80 91 83 28 	lds	r24, 0x2883	; 0x802883 <Alternate_Display_Flag>
     314:	88 23       	and	r24, r24
     316:	19 f0       	breq	.+6      	; 0x31e <Alternate_Display()+0xe>
     318:	10 92 83 28 	sts	0x2883, r1	; 0x802883 <Alternate_Display_Flag>
     31c:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Procss.cpp:67
  else                       Alternate_Display_Flag=1;
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	80 93 83 28 	sts	0x2883, r24	; 0x802883 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Procss.cpp:68
}
     324:	08 95       	ret

00000326 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:64
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     326:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
     32a:	88 23       	and	r24, r24
     32c:	09 f4       	brne	.+2      	; 0x330 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xa>
     32e:	5e c0       	rjmp	.+188    	; 0x3ec <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:66
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     330:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     334:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     338:	82 30       	cpi	r24, 0x02	; 2
     33a:	91 05       	cpc	r25, r1
     33c:	71 f4       	brne	.+28     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     33e:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
     342:	22 23       	and	r18, r18
     344:	51 f0       	breq	.+20     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     346:	20 91 45 29 	lds	r18, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
     34a:	30 91 46 29 	lds	r19, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
     34e:	2f 5f       	subi	r18, 0xFF	; 255
     350:	3f 4f       	sbci	r19, 0xFF	; 255
     352:	20 93 45 29 	sts	0x2945, r18	; 0x802945 <SET_LONG_VALUE+0x28>
     356:	30 93 46 29 	sts	0x2946, r19	; 0x802946 <SET_LONG_VALUE+0x29>
     35a:	20 91 45 29 	lds	r18, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
     35e:	30 91 46 29 	lds	r19, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
     362:	25 3d       	cpi	r18, 0xD5	; 213
     364:	31 05       	cpc	r19, r1
     366:	a4 f0       	brlt	.+40     	; 0x390 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x6a>
     368:	24 ed       	ldi	r18, 0xD4	; 212
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	20 93 45 29 	sts	0x2945, r18	; 0x802945 <SET_LONG_VALUE+0x28>
     370:	30 93 46 29 	sts	0x2946, r19	; 0x802946 <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:67
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     374:	20 91 47 29 	lds	r18, 0x2947	; 0x802947 <SET_LONG_VALUE+0x2a>
     378:	30 91 48 29 	lds	r19, 0x2948	; 0x802948 <SET_LONG_VALUE+0x2b>
     37c:	25 3d       	cpi	r18, 0xD5	; 213
     37e:	31 05       	cpc	r19, r1
     380:	cc f0       	brlt	.+50     	; 0x3b4 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x8e>
     382:	84 ed       	ldi	r24, 0xD4	; 212
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	80 93 47 29 	sts	0x2947, r24	; 0x802947 <SET_LONG_VALUE+0x2a>
     38a:	90 93 48 29 	sts	0x2948, r25	; 0x802948 <SET_LONG_VALUE+0x2b>
     38e:	08 95       	ret
     390:	88 30       	cpi	r24, 0x08	; 8
     392:	91 05       	cpc	r25, r1
     394:	79 f7       	brne	.-34     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     396:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
     39a:	22 23       	and	r18, r18
     39c:	59 f3       	breq	.-42     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     39e:	20 91 47 29 	lds	r18, 0x2947	; 0x802947 <SET_LONG_VALUE+0x2a>
     3a2:	30 91 48 29 	lds	r19, 0x2948	; 0x802948 <SET_LONG_VALUE+0x2b>
     3a6:	2f 5f       	subi	r18, 0xFF	; 255
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	20 93 47 29 	sts	0x2947, r18	; 0x802947 <SET_LONG_VALUE+0x2a>
     3ae:	30 93 48 29 	sts	0x2948, r19	; 0x802948 <SET_LONG_VALUE+0x2b>
     3b2:	e0 cf       	rjmp	.-64     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:70
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     3b4:	88 0f       	add	r24, r24
     3b6:	99 1f       	adc	r25, r25
     3b8:	fc 01       	movw	r30, r24
     3ba:	e3 5e       	subi	r30, 0xE3	; 227
     3bc:	f6 4d       	sbci	r31, 0xD6	; 214
     3be:	20 81       	ld	r18, Z
     3c0:	31 81       	ldd	r19, Z+1	; 0x01
     3c2:	2f 5f       	subi	r18, 0xFF	; 255
     3c4:	3f 4f       	sbci	r19, 0xFF	; 255
     3c6:	20 83       	st	Z, r18
     3c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:71
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3ca:	dc 01       	movw	r26, r24
     3cc:	ae 5e       	subi	r26, 0xEE	; 238
     3ce:	b9 44       	sbci	r27, 0x49	; 73
     3d0:	4d 91       	ld	r20, X+
     3d2:	5c 91       	ld	r21, X
     3d4:	42 17       	cp	r20, r18
     3d6:	53 07       	cpc	r21, r19
     3d8:	0c f0       	brlt	.+2      	; 0x3dc <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xb6>
     3da:	8e c0       	rjmp	.+284    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     3dc:	84 51       	subi	r24, 0x14	; 20
     3de:	9a 44       	sbci	r25, 0x4A	; 74
     3e0:	dc 01       	movw	r26, r24
     3e2:	8d 91       	ld	r24, X+
     3e4:	9c 91       	ld	r25, X
     3e6:	80 83       	st	Z, r24
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:76
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3ec:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
     3f0:	81 30       	cpi	r24, 0x01	; 1
     3f2:	b1 f4       	brne	.+44     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:78
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3f4:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
     3f8:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	80 93 12 29 	sts	0x2912, r24	; 0x802912 <SET_VALUE+0x2>
     402:	90 93 13 29 	sts	0x2913, r25	; 0x802913 <SET_VALUE+0x3>
     406:	20 91 0e 29 	lds	r18, 0x290E	; 0x80290e <SAFE_VALUE_SET_DEG>
     40a:	30 91 0f 29 	lds	r19, 0x290F	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
     40e:	28 17       	cp	r18, r24
     410:	39 07       	cpc	r19, r25
     412:	0c f0       	brlt	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	71 c0       	rjmp	.+226    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     416:	10 92 12 29 	sts	0x2912, r1	; 0x802912 <SET_VALUE+0x2>
     41a:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_VALUE+0x3>
     41e:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:80
               }
                else if( ENTER_BUT == 2 )   
     420:	82 30       	cpi	r24, 0x02	; 2
     422:	39 f5       	brne	.+78     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:82
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     424:	80 91 14 29 	lds	r24, 0x2914	; 0x802914 <SET_VALUE+0x4>
     428:	90 91 15 29 	lds	r25, 0x2915	; 0x802915 <SET_VALUE+0x5>
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	8a 30       	cpi	r24, 0x0A	; 10
     430:	91 05       	cpc	r25, r1
     432:	e4 f4       	brge	.+56     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     434:	80 93 14 29 	sts	0x2914, r24	; 0x802914 <SET_VALUE+0x4>
     438:	90 93 15 29 	sts	0x2915, r25	; 0x802915 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:83
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     43c:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
     440:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
     444:	01 96       	adiw	r24, 0x01	; 1
     446:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <SET_LONG_VALUE+0x1f>
     44a:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <SET_LONG_VALUE+0x20>
     44e:	20 91 0c 29 	lds	r18, 0x290C	; 0x80290c <SAFE_VALUE_SET_FAH>
     452:	30 91 0d 29 	lds	r19, 0x290D	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
     456:	28 17       	cp	r18, r24
     458:	39 07       	cpc	r19, r25
     45a:	0c f0       	brlt	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     45c:	4d c0       	rjmp	.+154    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     45e:	80 e2       	ldi	r24, 0x20	; 32
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <SET_LONG_VALUE+0x1f>
     466:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <SET_LONG_VALUE+0x20>
     46a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:82
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     46c:	89 e0       	ldi	r24, 0x09	; 9
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	e1 cf       	rjmp	.-62     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:85
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	91 f4       	brne	.+36     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:87
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     476:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x6>
     47a:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x7>
     47e:	01 96       	adiw	r24, 0x01	; 1
     480:	84 36       	cpi	r24, 0x64	; 100
     482:	91 05       	cpc	r25, r1
     484:	2c f4       	brge	.+10     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     486:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x6>
     48a:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x7>
     48e:	08 95       	ret
     490:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x6>
     494:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0x7>
     498:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:89
               }
               else if( ENTER_BUT == 4 )   
     49a:	84 30       	cpi	r24, 0x04	; 4
     49c:	91 f4       	brne	.+36     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:91
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     49e:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x8>
     4a2:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x9>
     4a6:	01 96       	adiw	r24, 0x01	; 1
     4a8:	8c 33       	cpi	r24, 0x3C	; 60
     4aa:	91 05       	cpc	r25, r1
     4ac:	2c f4       	brge	.+10     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4ae:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x8>
     4b2:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x9>
     4b6:	08 95       	ret
     4b8:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0x8>
     4bc:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <SET_VALUE+0x9>
     4c0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:93
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4c2:	85 30       	cpi	r24, 0x05	; 5
     4c4:	c9 f4       	brne	.+50     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4c6:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <PUMP_FLAG>
     4ca:	88 23       	and	r24, r24
     4cc:	a9 f0       	breq	.+42     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4ce:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
     4d2:	88 23       	and	r24, r24
     4d4:	89 f0       	breq	.+34     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:95
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4d6:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0xa>
     4da:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0xb>
     4de:	01 96       	adiw	r24, 0x01	; 1
     4e0:	82 30       	cpi	r24, 0x02	; 2
     4e2:	91 05       	cpc	r25, r1
     4e4:	2c f4       	brge	.+10     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4e6:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0xa>
     4ea:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0xb>
     4ee:	08 95       	ret
     4f0:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_VALUE+0xa>
     4f4:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:98
               }
  }
}
     4f8:	08 95       	ret

000004fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:102

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4fa:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
     4fe:	88 23       	and	r24, r24
     500:	09 f4       	brne	.+2      	; 0x504 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xa>
     502:	57 c0       	rjmp	.+174    	; 0x5b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:104
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     504:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     508:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     50c:	82 30       	cpi	r24, 0x02	; 2
     50e:	91 05       	cpc	r25, r1
     510:	71 f4       	brne	.+28     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     512:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
     516:	22 23       	and	r18, r18
     518:	51 f0       	breq	.+20     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     51a:	20 91 45 29 	lds	r18, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
     51e:	30 91 46 29 	lds	r19, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
     522:	21 50       	subi	r18, 0x01	; 1
     524:	31 09       	sbc	r19, r1
     526:	20 93 45 29 	sts	0x2945, r18	; 0x802945 <SET_LONG_VALUE+0x28>
     52a:	30 93 46 29 	sts	0x2946, r19	; 0x802946 <SET_LONG_VALUE+0x29>
     52e:	20 91 45 29 	lds	r18, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
     532:	30 91 46 29 	lds	r19, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
     536:	20 32       	cpi	r18, 0x20	; 32
     538:	31 05       	cpc	r19, r1
     53a:	a4 f4       	brge	.+40     	; 0x564 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x6a>
     53c:	20 e2       	ldi	r18, 0x20	; 32
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	20 93 45 29 	sts	0x2945, r18	; 0x802945 <SET_LONG_VALUE+0x28>
     544:	30 93 46 29 	sts	0x2946, r19	; 0x802946 <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:105
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     548:	20 91 47 29 	lds	r18, 0x2947	; 0x802947 <SET_LONG_VALUE+0x2a>
     54c:	30 91 48 29 	lds	r19, 0x2948	; 0x802948 <SET_LONG_VALUE+0x2b>
     550:	20 32       	cpi	r18, 0x20	; 32
     552:	31 05       	cpc	r19, r1
     554:	cc f4       	brge	.+50     	; 0x588 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x8e>
     556:	80 e2       	ldi	r24, 0x20	; 32
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	80 93 47 29 	sts	0x2947, r24	; 0x802947 <SET_LONG_VALUE+0x2a>
     55e:	90 93 48 29 	sts	0x2948, r25	; 0x802948 <SET_LONG_VALUE+0x2b>
     562:	08 95       	ret
     564:	88 30       	cpi	r24, 0x08	; 8
     566:	91 05       	cpc	r25, r1
     568:	79 f7       	brne	.-34     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     56a:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
     56e:	22 23       	and	r18, r18
     570:	59 f3       	breq	.-42     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     572:	20 91 47 29 	lds	r18, 0x2947	; 0x802947 <SET_LONG_VALUE+0x2a>
     576:	30 91 48 29 	lds	r19, 0x2948	; 0x802948 <SET_LONG_VALUE+0x2b>
     57a:	21 50       	subi	r18, 0x01	; 1
     57c:	31 09       	sbc	r19, r1
     57e:	20 93 47 29 	sts	0x2947, r18	; 0x802947 <SET_LONG_VALUE+0x2a>
     582:	30 93 48 29 	sts	0x2948, r19	; 0x802948 <SET_LONG_VALUE+0x2b>
     586:	e0 cf       	rjmp	.-64     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:108
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     588:	88 0f       	add	r24, r24
     58a:	99 1f       	adc	r25, r25
     58c:	fc 01       	movw	r30, r24
     58e:	e3 5e       	subi	r30, 0xE3	; 227
     590:	f6 4d       	sbci	r31, 0xD6	; 214
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	21 50       	subi	r18, 0x01	; 1
     598:	31 09       	sbc	r19, r1
     59a:	20 83       	st	Z, r18
     59c:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:109
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     59e:	37 ff       	sbrs	r19, 7
     5a0:	8c c0       	rjmp	.+280    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     5a2:	8e 53       	subi	r24, 0x3E	; 62
     5a4:	9a 44       	sbci	r25, 0x4A	; 74
     5a6:	dc 01       	movw	r26, r24
     5a8:	8d 91       	ld	r24, X+
     5aa:	9c 91       	ld	r25, X
     5ac:	80 83       	st	Z, r24
     5ae:	91 83       	std	Z+1, r25	; 0x01
     5b0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:114
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     5b2:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	a1 f4       	brne	.+40     	; 0x5e2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:116
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5ba:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
     5be:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
     5c2:	01 97       	sbiw	r24, 0x01	; 1
     5c4:	80 93 12 29 	sts	0x2912, r24	; 0x802912 <SET_VALUE+0x2>
     5c8:	90 93 13 29 	sts	0x2913, r25	; 0x802913 <SET_VALUE+0x3>
     5cc:	97 ff       	sbrs	r25, 7
     5ce:	75 c0       	rjmp	.+234    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     5d0:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <SAFE_VALUE_SET_DEG>
     5d4:	90 91 0f 29 	lds	r25, 0x290F	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
     5d8:	80 93 12 29 	sts	0x2912, r24	; 0x802912 <SET_VALUE+0x2>
     5dc:	90 93 13 29 	sts	0x2913, r25	; 0x802913 <SET_VALUE+0x3>
     5e0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:118
    }
    else if( ENTER_BUT == 2 )   
     5e2:	82 30       	cpi	r24, 0x02	; 2
     5e4:	99 f5       	brne	.+102    	; 0x64c <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:120
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5e6:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
     5ea:	81 11       	cpse	r24, r1
     5ec:	09 c0       	rjmp	.+18     	; 0x600 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x106>
     5ee:	80 91 14 29 	lds	r24, 0x2914	; 0x802914 <SET_VALUE+0x4>
     5f2:	90 91 15 29 	lds	r25, 0x2915	; 0x802915 <SET_VALUE+0x5>
     5f6:	01 97       	sbiw	r24, 0x01	; 1
     5f8:	80 93 14 29 	sts	0x2914, r24	; 0x802914 <SET_VALUE+0x4>
     5fc:	90 93 15 29 	sts	0x2915, r25	; 0x802915 <SET_VALUE+0x5>
     600:	80 91 14 29 	lds	r24, 0x2914	; 0x802914 <SET_VALUE+0x4>
     604:	90 91 15 29 	lds	r25, 0x2915	; 0x802915 <SET_VALUE+0x5>
     608:	97 ff       	sbrs	r25, 7
     60a:	16 c0       	rjmp	.+44     	; 0x638 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x13e>
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	80 93 14 29 	sts	0x2914, r24	; 0x802914 <SET_VALUE+0x4>
     614:	90 93 15 29 	sts	0x2915, r25	; 0x802915 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:121
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     618:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
     61c:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
     620:	80 97       	sbiw	r24, 0x20	; 32
     622:	0c f0       	brlt	.+2      	; 0x626 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x12c>
     624:	4a c0       	rjmp	.+148    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     626:	80 91 0c 29 	lds	r24, 0x290C	; 0x80290c <SAFE_VALUE_SET_FAH>
     62a:	90 91 0d 29 	lds	r25, 0x290D	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
     62e:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <SET_LONG_VALUE+0x1f>
     632:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <SET_LONG_VALUE+0x20>
     636:	08 95       	ret
     638:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
     63c:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <SET_LONG_VALUE+0x1f>
     646:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <SET_LONG_VALUE+0x20>
     64a:	e6 cf       	rjmp	.-52     	; 0x618 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:123
    }
    else if( ENTER_BUT == 3 )   
     64c:	83 30       	cpi	r24, 0x03	; 3
     64e:	79 f4       	brne	.+30     	; 0x66e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:125
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     650:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x6>
     654:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x7>
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	97 fd       	sbrc	r25, 7
     65c:	05 c0       	rjmp	.+10     	; 0x668 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x16e>
     65e:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x6>
     662:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x7>
     666:	08 95       	ret
     668:	83 e6       	ldi	r24, 0x63	; 99
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	f8 cf       	rjmp	.-16     	; 0x65e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:127
    }
    else if( ENTER_BUT == 4 )   
     66e:	84 30       	cpi	r24, 0x04	; 4
     670:	79 f4       	brne	.+30     	; 0x690 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:129
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     672:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x8>
     676:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x9>
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	97 fd       	sbrc	r25, 7
     67e:	05 c0       	rjmp	.+10     	; 0x68a <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x190>
     680:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x8>
     684:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x9>
     688:	08 95       	ret
     68a:	8b e3       	ldi	r24, 0x3B	; 59
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	f8 cf       	rjmp	.-16     	; 0x680 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:131
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     690:	85 30       	cpi	r24, 0x05	; 5
     692:	99 f4       	brne	.+38     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     694:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <PUMP_FLAG>
     698:	88 23       	and	r24, r24
     69a:	79 f0       	breq	.+30     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     69c:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
     6a0:	88 23       	and	r24, r24
     6a2:	59 f0       	breq	.+22     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a4:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0xa>
     6a8:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0xb>
     6ac:	01 97       	sbiw	r24, 0x01	; 1
     6ae:	97 fd       	sbrc	r25, 7
     6b0:	05 c0       	rjmp	.+10     	; 0x6bc <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c2>
     6b2:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0xa>
     6b6:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:136
    }
  }
}
     6ba:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	f8 cf       	rjmp	.-16     	; 0x6b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1b8>

000006c2 <PID::SetTunings(double, double, double) [clone .constprop.44]>:
SetTunings():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:127
}

/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
     6c2:	8f 92       	push	r8
     6c4:	9f 92       	push	r9
     6c6:	af 92       	push	r10
     6c8:	bf 92       	push	r11
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;

   pOn = POn;
   pOnE = POn == P_ON_E;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	20 91 14 2a 	lds	r18, 0x2A14	; 0x802a14 <myPID+0x1a>
     6d8:	30 91 15 2a 	lds	r19, 0x2A15	; 0x802a15 <myPID+0x1b>
     6dc:	21 30       	cpi	r18, 0x01	; 1
     6de:	31 05       	cpc	r19, r1
     6e0:	09 f0       	breq	.+2      	; 0x6e4 <PID::SetTunings(double, double, double) [clone .constprop.44]+0x22>
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	80 93 35 2a 	sts	0x2A35, r24	; 0x802a35 <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
     6e8:	81 2c       	mov	r8, r1
     6ea:	91 2c       	mov	r9, r1
     6ec:	80 ee       	ldi	r24, 0xE0	; 224
     6ee:	a8 2e       	mov	r10, r24
     6f0:	81 e4       	ldi	r24, 0x41	; 65
     6f2:	b8 2e       	mov	r11, r24
     6f4:	80 92 fa 29 	sts	0x29FA, r8	; 0x8029fa <myPID>
     6f8:	90 92 fb 29 	sts	0x29FB, r9	; 0x8029fb <myPID+0x1>
     6fc:	a0 92 fc 29 	sts	0x29FC, r10	; 0x8029fc <myPID+0x2>
     700:	b0 92 fd 29 	sts	0x29FD, r11	; 0x8029fd <myPID+0x3>
     704:	8a e0       	ldi	r24, 0x0A	; 10
     706:	97 ed       	ldi	r25, 0xD7	; 215
     708:	a3 e2       	ldi	r26, 0x23	; 35
     70a:	bc e3       	ldi	r27, 0x3C	; 60
     70c:	80 93 fe 29 	sts	0x29FE, r24	; 0x8029fe <myPID+0x4>
     710:	90 93 ff 29 	sts	0x29FF, r25	; 0x8029ff <myPID+0x5>
     714:	a0 93 00 2a 	sts	0x2A00, r26	; 0x802a00 <myPID+0x6>
     718:	b0 93 01 2a 	sts	0x2A01, r27	; 0x802a01 <myPID+0x7>
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	af e2       	ldi	r26, 0x2F	; 47
     722:	b4 e4       	ldi	r27, 0x44	; 68
     724:	80 93 02 2a 	sts	0x2A02, r24	; 0x802a02 <myPID+0x8>
     728:	90 93 03 2a 	sts	0x2A03, r25	; 0x802a03 <myPID+0x9>
     72c:	a0 93 04 2a 	sts	0x2A04, r26	; 0x802a04 <myPID+0xa>
     730:	b0 93 05 2a 	sts	0x2A05, r27	; 0x802a05 <myPID+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:111

   double SampleTimeInSec = ((double)SampleTime)/1000;
     734:	60 91 28 2a 	lds	r22, 0x2A28	; 0x802a28 <myPID+0x2e>
     738:	70 91 29 2a 	lds	r23, 0x2A29	; 0x802a29 <myPID+0x2f>
     73c:	80 91 2a 2a 	lds	r24, 0x2A2A	; 0x802a2a <myPID+0x30>
     740:	90 91 2b 2a 	lds	r25, 0x2A2B	; 0x802a2b <myPID+0x31>
     744:	0e 94 c6 38 	call	0x718c	; 0x718c <__floatunsisf>
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	4a e7       	ldi	r20, 0x7A	; 122
     74e:	54 e4       	ldi	r21, 0x44	; 68
     750:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     754:	6b 01       	movw	r12, r22
     756:	7c 01       	movw	r14, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112
   kp = Kp;
     758:	80 92 06 2a 	sts	0x2A06, r8	; 0x802a06 <myPID+0xc>
     75c:	90 92 07 2a 	sts	0x2A07, r9	; 0x802a07 <myPID+0xd>
     760:	a0 92 08 2a 	sts	0x2A08, r10	; 0x802a08 <myPID+0xe>
     764:	b0 92 09 2a 	sts	0x2A09, r11	; 0x802a09 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
     768:	2a e0       	ldi	r18, 0x0A	; 10
     76a:	37 ed       	ldi	r19, 0xD7	; 215
     76c:	43 e2       	ldi	r20, 0x23	; 35
     76e:	5c e3       	ldi	r21, 0x3C	; 60
     770:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
     774:	4b 01       	movw	r8, r22
     776:	5c 01       	movw	r10, r24
     778:	80 92 0a 2a 	sts	0x2A0A, r8	; 0x802a0a <myPID+0x10>
     77c:	90 92 0b 2a 	sts	0x2A0B, r9	; 0x802a0b <myPID+0x11>
     780:	a0 92 0c 2a 	sts	0x2A0C, r10	; 0x802a0c <myPID+0x12>
     784:	b0 92 0d 2a 	sts	0x2A0D, r11	; 0x802a0d <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
     788:	a7 01       	movw	r20, r14
     78a:	96 01       	movw	r18, r12
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	8f e2       	ldi	r24, 0x2F	; 47
     792:	94 e4       	ldi	r25, 0x44	; 68
     794:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     798:	6b 01       	movw	r12, r22
     79a:	7c 01       	movw	r14, r24
     79c:	c0 92 0e 2a 	sts	0x2A0E, r12	; 0x802a0e <myPID+0x14>
     7a0:	d0 92 0f 2a 	sts	0x2A0F, r13	; 0x802a0f <myPID+0x15>
     7a4:	e0 92 10 2a 	sts	0x2A10, r14	; 0x802a10 <myPID+0x16>
     7a8:	f0 92 11 2a 	sts	0x2A11, r15	; 0x802a11 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
     7ac:	80 91 12 2a 	lds	r24, 0x2A12	; 0x802a12 <myPID+0x18>
     7b0:	90 91 13 2a 	lds	r25, 0x2A13	; 0x802a13 <myPID+0x19>
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	51 f5       	brne	.+84     	; 0x80c <PID::SetTunings(double, double, double) [clone .constprop.44]+0x14a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	a0 ee       	ldi	r26, 0xE0	; 224
     7be:	b1 ec       	ldi	r27, 0xC1	; 193
     7c0:	80 93 06 2a 	sts	0x2A06, r24	; 0x802a06 <myPID+0xc>
     7c4:	90 93 07 2a 	sts	0x2A07, r25	; 0x802a07 <myPID+0xd>
     7c8:	a0 93 08 2a 	sts	0x2A08, r26	; 0x802a08 <myPID+0xe>
     7cc:	b0 93 09 2a 	sts	0x2A09, r27	; 0x802a09 <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
     7d0:	a5 01       	movw	r20, r10
     7d2:	94 01       	movw	r18, r8
     7d4:	60 e0       	ldi	r22, 0x00	; 0
     7d6:	70 e0       	ldi	r23, 0x00	; 0
     7d8:	cb 01       	movw	r24, r22
     7da:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     7de:	60 93 0a 2a 	sts	0x2A0A, r22	; 0x802a0a <myPID+0x10>
     7e2:	70 93 0b 2a 	sts	0x2A0B, r23	; 0x802a0b <myPID+0x11>
     7e6:	80 93 0c 2a 	sts	0x2A0C, r24	; 0x802a0c <myPID+0x12>
     7ea:	90 93 0d 2a 	sts	0x2A0D, r25	; 0x802a0d <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
     7ee:	a7 01       	movw	r20, r14
     7f0:	96 01       	movw	r18, r12
     7f2:	60 e0       	ldi	r22, 0x00	; 0
     7f4:	70 e0       	ldi	r23, 0x00	; 0
     7f6:	cb 01       	movw	r24, r22
     7f8:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     7fc:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x14>
     800:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x15>
     804:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x16>
     808:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:129
/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
    SetTunings(Kp, Ki, Kd, pOn); 
}
     80c:	ff 90       	pop	r15
     80e:	ef 90       	pop	r14
     810:	df 90       	pop	r13
     812:	cf 90       	pop	r12
     814:	bf 90       	pop	r11
     816:	af 90       	pop	r10
     818:	9f 90       	pop	r9
     81a:	8f 90       	pop	r8
     81c:	08 95       	ret

0000081e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:209
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     81e:	cf 92       	push	r12
     820:	df 92       	push	r13
     822:	ef 92       	push	r14
     824:	ff 92       	push	r15
     826:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:211
{ 
    first_digit = num / 1000;
     828:	28 ee       	ldi	r18, 0xE8	; 232
     82a:	33 e0       	ldi	r19, 0x03	; 3
     82c:	40 e0       	ldi	r20, 0x00	; 0
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	0e 94 14 3a 	call	0x7428	; 0x7428 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:212
    digits1[0] = first_digit;
     834:	e1 ef       	ldi	r30, 0xF1	; 241
     836:	f8 e2       	ldi	r31, 0x28	; 40
     838:	20 83       	st	Z, r18
     83a:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:213
    int first_left = num - (first_digit * 1000);
     83c:	68 ee       	ldi	r22, 0xE8	; 232
     83e:	73 e0       	ldi	r23, 0x03	; 3
     840:	62 9f       	mul	r22, r18
     842:	c0 01       	movw	r24, r0
     844:	63 9f       	mul	r22, r19
     846:	90 0d       	add	r25, r0
     848:	72 9f       	mul	r23, r18
     84a:	90 0d       	add	r25, r0
     84c:	11 24       	eor	r1, r1
     84e:	c8 1a       	sub	r12, r24
     850:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:214
    second_digit = first_left / 100;
     852:	c6 01       	movw	r24, r12
     854:	64 e6       	ldi	r22, 0x64	; 100
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:215
    digits1[1] = second_digit;
     85c:	62 83       	std	Z+2, r22	; 0x02
     85e:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:216
    int second_left = first_left - (second_digit * 100);
     860:	2c e9       	ldi	r18, 0x9C	; 156
     862:	26 03       	mulsu	r18, r22
     864:	c0 01       	movw	r24, r0
     866:	27 9f       	mul	r18, r23
     868:	90 0d       	add	r25, r0
     86a:	11 24       	eor	r1, r1
     86c:	c8 0e       	add	r12, r24
     86e:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:217
    third_digit = second_left / 10;
     870:	c6 01       	movw	r24, r12
     872:	6a e0       	ldi	r22, 0x0A	; 10
     874:	70 e0       	ldi	r23, 0x00	; 0
     876:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:218
    digits1[2] = third_digit;
     87a:	64 83       	std	Z+4, r22	; 0x04
     87c:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:219
    fourth_digit = second_left - (third_digit * 10);
     87e:	26 ef       	ldi	r18, 0xF6	; 246
     880:	26 03       	mulsu	r18, r22
     882:	c0 01       	movw	r24, r0
     884:	27 9f       	mul	r18, r23
     886:	90 0d       	add	r25, r0
     888:	11 24       	eor	r1, r1
     88a:	c8 0e       	add	r12, r24
     88c:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:220
    digits1[3] = fourth_digit;
     88e:	c6 82       	std	Z+6, r12	; 0x06
     890:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:221
}
     892:	ff 90       	pop	r15
     894:	ef 90       	pop	r14
     896:	df 90       	pop	r13
     898:	cf 90       	pop	r12
     89a:	08 95       	ret

0000089c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:223

void Eclass:: BREAK_NUMBER2(long num2) 
     89c:	cf 92       	push	r12
     89e:	df 92       	push	r13
     8a0:	ef 92       	push	r14
     8a2:	ff 92       	push	r15
     8a4:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:225
{ 
    first_digit2 = num2 / 1000;
     8a6:	28 ee       	ldi	r18, 0xE8	; 232
     8a8:	33 e0       	ldi	r19, 0x03	; 3
     8aa:	40 e0       	ldi	r20, 0x00	; 0
     8ac:	50 e0       	ldi	r21, 0x00	; 0
     8ae:	0e 94 14 3a 	call	0x7428	; 0x7428 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:226
    digits2[0] = first_digit2;
     8b2:	e9 ee       	ldi	r30, 0xE9	; 233
     8b4:	f8 e2       	ldi	r31, 0x28	; 40
     8b6:	20 83       	st	Z, r18
     8b8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:227
    int first_left2 = num2 - (first_digit2 * 1000);
     8ba:	68 ee       	ldi	r22, 0xE8	; 232
     8bc:	73 e0       	ldi	r23, 0x03	; 3
     8be:	62 9f       	mul	r22, r18
     8c0:	c0 01       	movw	r24, r0
     8c2:	63 9f       	mul	r22, r19
     8c4:	90 0d       	add	r25, r0
     8c6:	72 9f       	mul	r23, r18
     8c8:	90 0d       	add	r25, r0
     8ca:	11 24       	eor	r1, r1
     8cc:	c8 1a       	sub	r12, r24
     8ce:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:228
    second_digit2 = first_left2 / 100;
     8d0:	c6 01       	movw	r24, r12
     8d2:	64 e6       	ldi	r22, 0x64	; 100
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:229
    digits2[1] = second_digit2;
     8da:	62 83       	std	Z+2, r22	; 0x02
     8dc:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:230
    int second_left2 = first_left2 - (second_digit2 * 100);
     8de:	2c e9       	ldi	r18, 0x9C	; 156
     8e0:	26 03       	mulsu	r18, r22
     8e2:	c0 01       	movw	r24, r0
     8e4:	27 9f       	mul	r18, r23
     8e6:	90 0d       	add	r25, r0
     8e8:	11 24       	eor	r1, r1
     8ea:	c8 0e       	add	r12, r24
     8ec:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:231
    third_digit2 = second_left2 / 10;
     8ee:	c6 01       	movw	r24, r12
     8f0:	6a e0       	ldi	r22, 0x0A	; 10
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:232
    digits2[2] = third_digit2;
     8f8:	64 83       	std	Z+4, r22	; 0x04
     8fa:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:233
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     8fc:	26 ef       	ldi	r18, 0xF6	; 246
     8fe:	26 03       	mulsu	r18, r22
     900:	c0 01       	movw	r24, r0
     902:	27 9f       	mul	r18, r23
     904:	90 0d       	add	r25, r0
     906:	11 24       	eor	r1, r1
     908:	c8 0e       	add	r12, r24
     90a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:234
    digits2[3] = fourth_digit2;
     90c:	c6 82       	std	Z+6, r12	; 0x06
     90e:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:235
}
     910:	ff 90       	pop	r15
     912:	ef 90       	pop	r14
     914:	df 90       	pop	r13
     916:	cf 90       	pop	r12
     918:	08 95       	ret

0000091a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:58
      sample = 0;   AvgVout = 0;   
    }
      avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     91a:	4f 92       	push	r4
     91c:	5f 92       	push	r5
     91e:	6f 92       	push	r6
     920:	7f 92       	push	r7
     922:	8f 92       	push	r8
     924:	9f 92       	push	r9
     926:	af 92       	push	r10
     928:	bf 92       	push	r11
     92a:	cf 92       	push	r12
     92c:	df 92       	push	r13
     92e:	ef 92       	push	r14
     930:	ff 92       	push	r15
     932:	20 e0       	ldi	r18, 0x00	; 0
     934:	30 e0       	ldi	r19, 0x00	; 0
     936:	40 e2       	ldi	r20, 0x20	; 32
     938:	51 e4       	ldi	r21, 0x41	; 65
     93a:	60 91 06 29 	lds	r22, 0x2906	; 0x802906 <ERROR_CAL1>
     93e:	70 91 07 29 	lds	r23, 0x2907	; 0x802907 <ERROR_CAL1+0x1>
     942:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <ERROR_CAL1+0x2>
     946:	90 91 09 29 	lds	r25, 0x2909	; 0x802909 <ERROR_CAL1+0x3>
     94a:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:60
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     94e:	20 91 e8 28 	lds	r18, 0x28E8	; 0x8028e8 <SIGN>
     952:	21 11       	cpse	r18, r1
     954:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:61
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     956:	60 93 e4 28 	sts	0x28E4, r22	; 0x8028e4 <ERROR_CAL>
     95a:	70 93 e5 28 	sts	0x28E5, r23	; 0x8028e5 <ERROR_CAL+0x1>
     95e:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <ERROR_CAL+0x2>
     962:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:63
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     966:	f0 90 e3 28 	lds	r15, 0x28E3	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
     96a:	ff 20       	and	r15, r15
     96c:	09 f4       	brne	.+2      	; 0x970 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x56>
     96e:	55 c0       	rjmp	.+170    	; 0xa1a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x100>
     970:	20 91 e4 28 	lds	r18, 0x28E4	; 0x8028e4 <ERROR_CAL>
     974:	30 91 e5 28 	lds	r19, 0x28E5	; 0x8028e5 <ERROR_CAL+0x1>
     978:	40 91 e6 28 	lds	r20, 0x28E6	; 0x8028e6 <ERROR_CAL+0x2>
     97c:	50 91 e7 28 	lds	r21, 0x28E7	; 0x8028e7 <ERROR_CAL+0x3>
     980:	60 91 fe 28 	lds	r22, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
     984:	70 91 ff 28 	lds	r23, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
     988:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
     98c:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
     990:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
     994:	60 93 df 28 	sts	0x28DF, r22	; 0x8028df <TEMP_DEG_RAW2>
     998:	70 93 e0 28 	sts	0x28E0, r23	; 0x8028e0 <TEMP_DEG_RAW2+0x1>
     99c:	80 93 e1 28 	sts	0x28E1, r24	; 0x8028e1 <TEMP_DEG_RAW2+0x2>
     9a0:	90 93 e2 28 	sts	0x28E2, r25	; 0x8028e2 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:66
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
    
    if (!CAL_SELECT_VALUE)
     9a4:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <CAL_SELECT_VALUE>
     9a8:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
     9ac:	89 2b       	or	r24, r25
     9ae:	09 f0       	breq	.+2      	; 0x9b2 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x98>
     9b0:	7e c0       	rjmp	.+252    	; 0xaae <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:68
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     9b2:	ff 20       	and	r15, r15
     9b4:	09 f4       	brne	.+2      	; 0x9b8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x9e>
     9b6:	50 c0       	rjmp	.+160    	; 0xa58 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:70
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     9b8:	60 91 df 28 	lds	r22, 0x28DF	; 0x8028df <TEMP_DEG_RAW2>
     9bc:	70 91 e0 28 	lds	r23, 0x28E0	; 0x8028e0 <TEMP_DEG_RAW2+0x1>
     9c0:	80 91 e1 28 	lds	r24, 0x28E1	; 0x8028e1 <TEMP_DEG_RAW2+0x2>
     9c4:	90 91 e2 28 	lds	r25, 0x28E2	; 0x8028e2 <TEMP_DEG_RAW2+0x3>
     9c8:	60 93 02 29 	sts	0x2902, r22	; 0x802902 <TEMP_DEG>
     9cc:	70 93 03 29 	sts	0x2903, r23	; 0x802903 <TEMP_DEG+0x1>
     9d0:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <TEMP_DEG+0x2>
     9d4:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:71
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     9d8:	26 e6       	ldi	r18, 0x66	; 102
     9da:	36 e6       	ldi	r19, 0x66	; 102
     9dc:	46 ee       	ldi	r20, 0xE6	; 230
     9de:	5f e3       	ldi	r21, 0x3F	; 63
     9e0:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	40 e0       	ldi	r20, 0x00	; 0
     9ea:	52 e4       	ldi	r21, 0x42	; 66
     9ec:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
     9f0:	60 93 d0 28 	sts	0x28D0, r22	; 0x8028d0 <TEMP_FAH>
     9f4:	70 93 d1 28 	sts	0x28D1, r23	; 0x8028d1 <TEMP_FAH+0x1>
     9f8:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <TEMP_FAH+0x2>
     9fc:	90 93 d3 28 	sts	0x28D3, r25	; 0x8028d3 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:89
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
   }
}
     a00:	ff 90       	pop	r15
     a02:	ef 90       	pop	r14
     a04:	df 90       	pop	r13
     a06:	cf 90       	pop	r12
     a08:	bf 90       	pop	r11
     a0a:	af 90       	pop	r10
     a0c:	9f 90       	pop	r9
     a0e:	8f 90       	pop	r8
     a10:	7f 90       	pop	r7
     a12:	6f 90       	pop	r6
     a14:	5f 90       	pop	r5
     a16:	4f 90       	pop	r4
     a18:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:64
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;//if(ERROR_SET_IN_FAH_FLAG) 
     a1a:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
     a1e:	88 23       	and	r24, r24
     a20:	09 f2       	breq	.-126    	; 0x9a4 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
     a22:	20 91 e4 28 	lds	r18, 0x28E4	; 0x8028e4 <ERROR_CAL>
     a26:	30 91 e5 28 	lds	r19, 0x28E5	; 0x8028e5 <ERROR_CAL+0x1>
     a2a:	40 91 e6 28 	lds	r20, 0x28E6	; 0x8028e6 <ERROR_CAL+0x2>
     a2e:	50 91 e7 28 	lds	r21, 0x28E7	; 0x8028e7 <ERROR_CAL+0x3>
     a32:	60 91 da 28 	lds	r22, 0x28DA	; 0x8028da <TEMP_FAH_RAW>
     a36:	70 91 db 28 	lds	r23, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x1>
     a3a:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_FAH_RAW+0x2>
     a3e:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_FAH_RAW+0x3>
     a42:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
     a46:	60 93 d6 28 	sts	0x28D6, r22	; 0x8028d6 <TEMP_FAH_RAW2>
     a4a:	70 93 d7 28 	sts	0x28D7, r23	; 0x8028d7 <TEMP_FAH_RAW2+0x1>
     a4e:	80 93 d8 28 	sts	0x28D8, r24	; 0x8028d8 <TEMP_FAH_RAW2+0x2>
     a52:	90 93 d9 28 	sts	0x28D9, r25	; 0x8028d9 <TEMP_FAH_RAW2+0x3>
     a56:	a6 cf       	rjmp	.-180    	; 0x9a4 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:73
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     a58:	80 91 de 28 	lds	r24, 0x28DE	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
     a5c:	88 23       	and	r24, r24
     a5e:	81 f2       	breq	.-96     	; 0xa00 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:75
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     a60:	c0 90 d6 28 	lds	r12, 0x28D6	; 0x8028d6 <TEMP_FAH_RAW2>
     a64:	d0 90 d7 28 	lds	r13, 0x28D7	; 0x8028d7 <TEMP_FAH_RAW2+0x1>
     a68:	e0 90 d8 28 	lds	r14, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW2+0x2>
     a6c:	f0 90 d9 28 	lds	r15, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW2+0x3>
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	52 e4       	ldi	r21, 0x42	; 66
     a78:	c7 01       	movw	r24, r14
     a7a:	b6 01       	movw	r22, r12
     a7c:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     a80:	26 e6       	ldi	r18, 0x66	; 102
     a82:	36 e6       	ldi	r19, 0x66	; 102
     a84:	46 ee       	ldi	r20, 0xE6	; 230
     a86:	5f e3       	ldi	r21, 0x3F	; 63
     a88:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     a8c:	60 93 02 29 	sts	0x2902, r22	; 0x802902 <TEMP_DEG>
     a90:	70 93 03 29 	sts	0x2903, r23	; 0x802903 <TEMP_DEG+0x1>
     a94:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <TEMP_DEG+0x2>
     a98:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:76
          TEMP_FAH  =  TEMP_FAH_RAW2;
     a9c:	c0 92 d0 28 	sts	0x28D0, r12	; 0x8028d0 <TEMP_FAH>
     aa0:	d0 92 d1 28 	sts	0x28D1, r13	; 0x8028d1 <TEMP_FAH+0x1>
     aa4:	e0 92 d2 28 	sts	0x28D2, r14	; 0x8028d2 <TEMP_FAH+0x2>
     aa8:	f0 92 d3 28 	sts	0x28D3, r15	; 0x8028d3 <TEMP_FAH+0x3>
     aac:	a9 cf       	rjmp	.-174    	; 0xa00 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     aae:	60 91 cc 28 	lds	r22, 0x28CC	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV>
     ab2:	70 91 cd 28 	lds	r23, 0x28CD	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x1>
     ab6:	80 91 ce 28 	lds	r24, 0x28CE	; 0x8028ce <CAL2_RAW_LOW_VALUE_CONV+0x2>
     aba:	90 91 cf 28 	lds	r25, 0x28CF	; 0x8028cf <CAL2_RAW_LOW_VALUE_CONV+0x3>
     abe:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
     ac2:	20 e0       	ldi	r18, 0x00	; 0
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	40 e2       	ldi	r20, 0x20	; 32
     ac8:	51 e4       	ldi	r21, 0x41	; 65
     aca:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     ace:	4b 01       	movw	r8, r22
     ad0:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:83
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     ad2:	60 91 c4 28 	lds	r22, 0x28C4	; 0x8028c4 <MASTER_LOW_CONV>
     ad6:	70 91 c5 28 	lds	r23, 0x28C5	; 0x8028c5 <MASTER_LOW_CONV+0x1>
     ada:	80 91 c6 28 	lds	r24, 0x28C6	; 0x8028c6 <MASTER_LOW_CONV+0x2>
     ade:	90 91 c7 28 	lds	r25, 0x28C7	; 0x8028c7 <MASTER_LOW_CONV+0x3>
     ae2:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
     ae6:	20 e0       	ldi	r18, 0x00	; 0
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	40 e2       	ldi	r20, 0x20	; 32
     aec:	51 e4       	ldi	r21, 0x41	; 65
     aee:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     af2:	6b 01       	movw	r12, r22
     af4:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:84
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     af6:	60 91 c0 28 	lds	r22, 0x28C0	; 0x8028c0 <MASTER_HIGH_CONV>
     afa:	70 91 c1 28 	lds	r23, 0x28C1	; 0x8028c1 <MASTER_HIGH_CONV+0x1>
     afe:	80 91 c2 28 	lds	r24, 0x28C2	; 0x8028c2 <MASTER_HIGH_CONV+0x2>
     b02:	90 91 c3 28 	lds	r25, 0x28C3	; 0x8028c3 <MASTER_HIGH_CONV+0x3>
     b06:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	40 e2       	ldi	r20, 0x20	; 32
     b10:	51 e4       	ldi	r21, 0x41	; 65
     b12:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     b16:	a7 01       	movw	r20, r14
     b18:	96 01       	movw	r18, r12
     b1a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     b1e:	2b 01       	movw	r4, r22
     b20:	3c 01       	movw	r6, r24
     b22:	a5 01       	movw	r20, r10
     b24:	94 01       	movw	r18, r8
     b26:	60 91 fe 28 	lds	r22, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
     b2a:	70 91 ff 28 	lds	r23, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
     b2e:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
     b32:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
     b36:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     b3a:	9b 01       	movw	r18, r22
     b3c:	ac 01       	movw	r20, r24
     b3e:	c3 01       	movw	r24, r6
     b40:	b2 01       	movw	r22, r4
     b42:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
     b46:	2b 01       	movw	r4, r22
     b48:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:82
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     b4a:	60 91 c8 28 	lds	r22, 0x28C8	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV>
     b4e:	70 91 c9 28 	lds	r23, 0x28C9	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     b52:	80 91 ca 28 	lds	r24, 0x28CA	; 0x8028ca <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     b56:	90 91 cb 28 	lds	r25, 0x28CB	; 0x8028cb <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     b5a:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	40 e2       	ldi	r20, 0x20	; 32
     b64:	51 e4       	ldi	r21, 0x41	; 65
     b66:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     b6a:	a5 01       	movw	r20, r10
     b6c:	94 01       	movw	r18, r8
     b6e:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
     b72:	9b 01       	movw	r18, r22
     b74:	ac 01       	movw	r20, r24
     b76:	c3 01       	movw	r24, r6
     b78:	b2 01       	movw	r22, r4
     b7a:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
     b7e:	a7 01       	movw	r20, r14
     b80:	96 01       	movw	r18, r12
     b82:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
     b86:	6b 01       	movw	r12, r22
     b88:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:85
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
     b8a:	c0 92 02 29 	sts	0x2902, r12	; 0x802902 <TEMP_DEG>
     b8e:	d0 92 03 29 	sts	0x2903, r13	; 0x802903 <TEMP_DEG+0x1>
     b92:	e0 92 04 29 	sts	0x2904, r14	; 0x802904 <TEMP_DEG+0x2>
     b96:	f0 92 05 29 	sts	0x2905, r15	; 0x802905 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:86
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     b9a:	26 e6       	ldi	r18, 0x66	; 102
     b9c:	36 e6       	ldi	r19, 0x66	; 102
     b9e:	46 ee       	ldi	r20, 0xE6	; 230
     ba0:	5f e3       	ldi	r21, 0x3F	; 63
     ba2:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	40 e0       	ldi	r20, 0x00	; 0
     bac:	52 e4       	ldi	r21, 0x42	; 66
     bae:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
     bb2:	60 93 d0 28 	sts	0x28D0, r22	; 0x8028d0 <TEMP_FAH>
     bb6:	70 93 d1 28 	sts	0x28D1, r23	; 0x8028d1 <TEMP_FAH+0x1>
     bba:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <TEMP_FAH+0x2>
     bbe:	90 93 d3 28 	sts	0x28D3, r25	; 0x8028d3 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:87
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	48 ec       	ldi	r20, 0xC8	; 200
     bc8:	52 e4       	ldi	r21, 0x42	; 66
     bca:	c7 01       	movw	r24, r14
     bcc:	b6 01       	movw	r22, r12
     bce:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
     bd2:	87 fd       	sbrc	r24, 7
     bd4:	15 cf       	rjmp	.-470    	; 0xa00 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
     bd6:	8d ec       	ldi	r24, 0xCD	; 205
     bd8:	9c ec       	ldi	r25, 0xCC	; 204
     bda:	a7 ec       	ldi	r26, 0xC7	; 199
     bdc:	b2 e4       	ldi	r27, 0x42	; 66
     bde:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <TEMP_DEG>
     be2:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <TEMP_DEG+0x1>
     be6:	a0 93 04 29 	sts	0x2904, r26	; 0x802904 <TEMP_DEG+0x2>
     bea:	b0 93 05 29 	sts	0x2905, r27	; 0x802905 <TEMP_DEG+0x3>
     bee:	08 cf       	rjmp	.-496    	; 0xa00 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>

00000bf0 <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:518
}
}

void DEC_LONGPRESS_STOP()
{
  if(checkTempRaised==0)
     bf0:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
     bf4:	81 11       	cpse	r24, r1
     bf6:	06 c0       	rjmp	.+12     	; 0xc04 <DEC_LONGPRESS_STOP()+0x14>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:520
  {
  i = 0;
     bf8:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
     bfc:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:521
  BLINK_STATS=0;
     c00:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:523
  }
}
     c04:	08 95       	ret

00000c06 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     c06:	f4 cf       	rjmp	.-24     	; 0xbf0 <DEC_LONGPRESS_STOP()>

00000c08 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     c08:	af 92       	push	r10
     c0a:	bf 92       	push	r11
     c0c:	cf 92       	push	r12
     c0e:	df 92       	push	r13
     c10:	ef 92       	push	r14
     c12:	ff 92       	push	r15
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	6c 01       	movw	r12, r24
     c1e:	7b 01       	movw	r14, r22
     c20:	8b 01       	movw	r16, r22
     c22:	04 0f       	add	r16, r20
     c24:	15 1f       	adc	r17, r21
     c26:	eb 01       	movw	r28, r22
     c28:	5e 01       	movw	r10, r28
     c2a:	ae 18       	sub	r10, r14
     c2c:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     c2e:	c0 17       	cp	r28, r16
     c30:	d1 07       	cpc	r29, r17
     c32:	59 f0       	breq	.+22     	; 0xc4a <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     c34:	69 91       	ld	r22, Y+
     c36:	d6 01       	movw	r26, r12
     c38:	ed 91       	ld	r30, X+
     c3a:	fc 91       	ld	r31, X
     c3c:	01 90       	ld	r0, Z+
     c3e:	f0 81       	ld	r31, Z
     c40:	e0 2d       	mov	r30, r0
     c42:	c6 01       	movw	r24, r12
     c44:	09 95       	icall
     c46:	89 2b       	or	r24, r25
     c48:	79 f7       	brne	.-34     	; 0xc28 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     c4a:	c5 01       	movw	r24, r10
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	1f 91       	pop	r17
     c52:	0f 91       	pop	r16
     c54:	ff 90       	pop	r15
     c56:	ef 90       	pop	r14
     c58:	df 90       	pop	r13
     c5a:	cf 90       	pop	r12
     c5c:	bf 90       	pop	r11
     c5e:	af 90       	pop	r10
     c60:	08 95       	ret

00000c62 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     c62:	fc 01       	movw	r30, r24
     c64:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     c66:	41 8d       	ldd	r20, Z+25	; 0x19
     c68:	25 2f       	mov	r18, r21
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	84 2f       	mov	r24, r20
     c6e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     c70:	82 1b       	sub	r24, r18
     c72:	93 0b       	sbc	r25, r19
     c74:	54 17       	cp	r21, r20
     c76:	10 f0       	brcs	.+4      	; 0xc7c <UartClass::availableForWrite()+0x1a>
     c78:	cf 96       	adiw	r24, 0x3f	; 63
     c7a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     c7c:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     c7e:	08 95       	ret

00000c80 <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     c80:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     c82:	96 89       	ldd	r25, Z+22	; 0x16
     c84:	87 89       	ldd	r24, Z+23	; 0x17
     c86:	98 17       	cp	r25, r24
     c88:	61 f0       	breq	.+24     	; 0xca2 <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     c8a:	a7 89       	ldd	r26, Z+23	; 0x17
     c8c:	ae 0f       	add	r26, r30
     c8e:	bf 2f       	mov	r27, r31
     c90:	b1 1d       	adc	r27, r1
     c92:	5d 96       	adiw	r26, 0x1d	; 29
     c94:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     c96:	97 89       	ldd	r25, Z+23	; 0x17
     c98:	9f 5f       	subi	r25, 0xFF	; 255
     c9a:	9f 73       	andi	r25, 0x3F	; 63
     c9c:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     ca2:	8f ef       	ldi	r24, 0xFF	; 255
     ca4:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     ca6:	08 95       	ret

00000ca8 <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     ca8:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     caa:	96 89       	ldd	r25, Z+22	; 0x16
     cac:	87 89       	ldd	r24, Z+23	; 0x17
     cae:	98 17       	cp	r25, r24
     cb0:	31 f0       	breq	.+12     	; 0xcbe <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     cb2:	87 89       	ldd	r24, Z+23	; 0x17
     cb4:	e8 0f       	add	r30, r24
     cb6:	f1 1d       	adc	r31, r1
     cb8:	85 8d       	ldd	r24, Z+29	; 0x1d
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     cc2:	08 95       	ret

00000cc4 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     cc4:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     cc6:	96 89       	ldd	r25, Z+22	; 0x16
     cc8:	27 89       	ldd	r18, Z+23	; 0x17
     cca:	89 2f       	mov	r24, r25
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	80 5c       	subi	r24, 0xC0	; 192
     cd0:	9f 4f       	sbci	r25, 0xFF	; 255
     cd2:	82 1b       	sub	r24, r18
     cd4:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     cd6:	8f 73       	andi	r24, 0x3F	; 63
     cd8:	99 27       	eor	r25, r25
     cda:	08 95       	ret

00000cdc <Serial2_available()>:
Serial2_available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     cdc:	81 e5       	ldi	r24, 0x51	; 81
     cde:	99 e2       	ldi	r25, 0x29	; 41
     ce0:	f1 df       	rcall	.-30     	; 0xcc4 <UartClass::available()>
     ce2:	21 e0       	ldi	r18, 0x01	; 1
     ce4:	89 2b       	or	r24, r25
     ce6:	09 f4       	brne	.+2      	; 0xcea <Serial2_available()+0xe>
     ce8:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     cea:	82 2f       	mov	r24, r18
     cec:	08 95       	ret

00000cee <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     cf4:	e8 81       	ld	r30, Y
     cf6:	f9 81       	ldd	r31, Y+1	; 0x01
     cf8:	06 80       	ldd	r0, Z+6	; 0x06
     cfa:	f7 81       	ldd	r31, Z+7	; 0x07
     cfc:	e0 2d       	mov	r30, r0
     cfe:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     d00:	ec 85       	ldd	r30, Y+12	; 0x0c
     d02:	fd 85       	ldd	r31, Y+13	; 0x0d
     d04:	86 81       	ldd	r24, Z+6	; 0x06
     d06:	8f 73       	andi	r24, 0x3F	; 63
     d08:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     d0a:	ec 85       	ldd	r30, Y+12	; 0x0c
     d0c:	fd 85       	ldd	r31, Y+13	; 0x0d
     d0e:	85 81       	ldd	r24, Z+5	; 0x05
     d10:	8f 75       	andi	r24, 0x5F	; 95
     d12:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     d14:	8f 89       	ldd	r24, Y+23	; 0x17
     d16:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     d18:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	08 95       	ret

00000d20 <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     d20:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     d22:	61 30       	cpi	r22, 0x01	; 1
     d24:	19 f4       	brne	.+6      	; 0xd2c <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     d26:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     d2c:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     d2e:	66 23       	and	r22, r22
     d30:	d9 f3       	breq	.-10     	; 0xd28 <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     d32:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     d34:	08 95       	ret

00000d36 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     d36:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     d38:	54 96       	adiw	r26, 0x14	; 20
     d3a:	1c 92       	st	X, r1
     d3c:	54 97       	sbiw	r26, 0x14	; 20
     d3e:	54 96       	adiw	r26, 0x14	; 20
     d40:	8c 91       	ld	r24, X
     d42:	54 97       	sbiw	r26, 0x14	; 20
     d44:	82 30       	cpi	r24, 0x02	; 2
     d46:	a0 f4       	brcc	.+40     	; 0xd70 <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     d48:	28 2f       	mov	r18, r24
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	f9 01       	movw	r30, r18
     d4e:	ee 0f       	add	r30, r30
     d50:	ff 1f       	adc	r31, r31
     d52:	e2 0f       	add	r30, r18
     d54:	f3 1f       	adc	r31, r19
     d56:	ea 0f       	add	r30, r26
     d58:	fb 1f       	adc	r31, r27
     d5a:	97 85       	ldd	r25, Z+15	; 0x0f
     d5c:	96 13       	cpse	r25, r22
     d5e:	03 c0       	rjmp	.+6      	; 0xd66 <UartClass::pins(unsigned char, unsigned char)+0x30>
     d60:	96 85       	ldd	r25, Z+14	; 0x0e
     d62:	94 17       	cp	r25, r20
     d64:	49 f0       	breq	.+18     	; 0xd78 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     d66:	8f 5f       	subi	r24, 0xFF	; 255
     d68:	54 96       	adiw	r26, 0x14	; 20
     d6a:	8c 93       	st	X, r24
     d6c:	54 97       	sbiw	r26, 0x14	; 20
     d6e:	e7 cf       	rjmp	.-50     	; 0xd3e <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     d70:	54 96       	adiw	r26, 0x14	; 20
     d72:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     d78:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     d7a:	08 95       	ret

00000d7c <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     d82:	90 8d       	ldd	r25, Z+24	; 0x18
     d84:	81 8d       	ldd	r24, Z+25	; 0x19
     d86:	c4 85       	ldd	r28, Z+12	; 0x0c
     d88:	d5 85       	ldd	r29, Z+13	; 0x0d
     d8a:	98 13       	cpse	r25, r24
     d8c:	06 c0       	rjmp	.+12     	; 0xd9a <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     d8e:	8d 81       	ldd	r24, Y+5	; 0x05
     d90:	8f 7d       	andi	r24, 0xDF	; 223
     d92:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     d9a:	a1 8d       	ldd	r26, Z+25	; 0x19
     d9c:	ae 0f       	add	r26, r30
     d9e:	bf 2f       	mov	r27, r31
     da0:	b1 1d       	adc	r27, r1
     da2:	a3 5a       	subi	r26, 0xA3	; 163
     da4:	bf 4f       	sbci	r27, 0xFF	; 255
     da6:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     da8:	81 8d       	ldd	r24, Z+25	; 0x19
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	01 96       	adiw	r24, 0x01	; 1
     dae:	8f 73       	andi	r24, 0x3F	; 63
     db0:	99 27       	eor	r25, r25
     db2:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     db4:	80 e4       	ldi	r24, 0x40	; 64
     db6:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     db8:	a4 85       	ldd	r26, Z+12	; 0x0c
     dba:	b5 85       	ldd	r27, Z+13	; 0x0d
     dbc:	12 96       	adiw	r26, 0x02	; 2
     dbe:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     dc0:	90 8d       	ldd	r25, Z+24	; 0x18
     dc2:	81 8d       	ldd	r24, Z+25	; 0x19
     dc4:	98 13       	cpse	r25, r24
     dc6:	e6 cf       	rjmp	.-52     	; 0xd94 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     dc8:	a4 85       	ldd	r26, Z+12	; 0x0c
     dca:	b5 85       	ldd	r27, Z+13	; 0x0d
     dcc:	15 96       	adiw	r26, 0x05	; 5
     dce:	8c 91       	ld	r24, X
     dd0:	15 97       	sbiw	r26, 0x05	; 5
     dd2:	8f 7d       	andi	r24, 0xDF	; 223
     dd4:	15 96       	adiw	r26, 0x05	; 5
     dd6:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     dd8:	83 8d       	ldd	r24, Z+27	; 0x1b
     dda:	88 23       	and	r24, r24
     ddc:	d9 f2       	breq	.-74     	; 0xd94 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     dde:	84 8d       	ldd	r24, Z+28	; 0x1c
     de0:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     de4:	13 8e       	std	Z+27, r1	; 0x1b
     de6:	d6 cf       	rjmp	.-84     	; 0xd94 <UartClass::_tx_data_empty_irq()+0x18>

00000de8 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     de8:	dc 01       	movw	r26, r24
     dea:	1c 96       	adiw	r26, 0x0c	; 12
     dec:	ed 91       	ld	r30, X+
     dee:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	07 fe       	sbrs	r0, 7
     df4:	03 c0       	rjmp	.+6      	; 0xdfc <UartClass::_poll_tx_data_empty()+0x14>
     df6:	25 81       	ldd	r18, Z+5	; 0x05
     df8:	25 fd       	sbrc	r18, 5
     dfa:	03 c0       	rjmp	.+6      	; 0xe02 <UartClass::_poll_tx_data_empty()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     dfc:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     dfe:	25 fd       	sbrc	r18, 5
     e00:	bd cf       	rjmp	.-134    	; 0xd7c <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     e02:	08 95       	ret

00000e04 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     e04:	ef 92       	push	r14
     e06:	ff 92       	push	r15
     e08:	0f 93       	push	r16
     e0a:	1f 93       	push	r17
     e0c:	cf 93       	push	r28
     e0e:	df 93       	push	r29
     e10:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     e16:	98 8d       	ldd	r25, Y+24	; 0x18
     e18:	89 8d       	ldd	r24, Y+25	; 0x19
     e1a:	98 13       	cpse	r25, r24
     e1c:	1c c0       	rjmp	.+56     	; 0xe56 <UartClass::write(unsigned char)+0x52>
     e1e:	ac 85       	ldd	r26, Y+12	; 0x0c
     e20:	bd 85       	ldd	r27, Y+13	; 0x0d
     e22:	14 96       	adiw	r26, 0x04	; 4
     e24:	8c 91       	ld	r24, X
     e26:	14 97       	sbiw	r26, 0x04	; 4
     e28:	85 ff       	sbrs	r24, 5
     e2a:	15 c0       	rjmp	.+42     	; 0xe56 <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     e2c:	12 96       	adiw	r26, 0x02	; 2
     e2e:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     e30:	ac 85       	ldd	r26, Y+12	; 0x0c
     e32:	bd 85       	ldd	r27, Y+13	; 0x0d
     e34:	80 e4       	ldi	r24, 0x40	; 64
     e36:	14 96       	adiw	r26, 0x04	; 4
     e38:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     e3a:	ec 85       	ldd	r30, Y+12	; 0x0c
     e3c:	fd 85       	ldd	r31, Y+13	; 0x0d
     e3e:	85 81       	ldd	r24, Z+5	; 0x05
     e40:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     e42:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	df 91       	pop	r29
     e4a:	cf 91       	pop	r28
     e4c:	1f 91       	pop	r17
     e4e:	0f 91       	pop	r16
     e50:	ff 90       	pop	r15
     e52:	ef 90       	pop	r14
     e54:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     e56:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     e5a:	80 ff       	sbrs	r24, 0
     e5c:	08 c0       	rjmp	.+16     	; 0xe6e <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     e5e:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     e62:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     e64:	8a 8d       	ldd	r24, Y+26	; 0x1a
     e66:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	8b 8f       	std	Y+27, r24	; 0x1b
     e6e:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     e70:	08 8d       	ldd	r16, Y+24	; 0x18
     e72:	10 e0       	ldi	r17, 0x00	; 0
     e74:	0f 5f       	subi	r16, 0xFF	; 255
     e76:	1f 4f       	sbci	r17, 0xFF	; 255
     e78:	0f 73       	andi	r16, 0x3F	; 63
     e7a:	11 27       	eor	r17, r17
     e7c:	e0 2e       	mov	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     e7e:	89 8d       	ldd	r24, Y+25	; 0x19
     e80:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <UartClass::write(unsigned char)+0x86>
     e84:	ce 01       	movw	r24, r28
     e86:	b0 df       	rcall	.-160    	; 0xde8 <UartClass::_poll_tx_data_empty()>
     e88:	fa cf       	rjmp	.-12     	; 0xe7e <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     e8a:	e8 8d       	ldd	r30, Y+24	; 0x18
     e8c:	ec 0f       	add	r30, r28
     e8e:	fd 2f       	mov	r31, r29
     e90:	f1 1d       	adc	r31, r1
     e92:	e3 5a       	subi	r30, 0xA3	; 163
     e94:	ff 4f       	sbci	r31, 0xFF	; 255
     e96:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     e98:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     e9a:	ec 85       	ldd	r30, Y+12	; 0x0c
     e9c:	fd 85       	ldd	r31, Y+13	; 0x0d
     e9e:	85 81       	ldd	r24, Z+5	; 0x05
     ea0:	80 62       	ori	r24, 0x20	; 32
     ea2:	cf cf       	rjmp	.-98     	; 0xe42 <UartClass::write(unsigned char)+0x3e>

00000ea4 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     ea8:	fc 01       	movw	r30, r24
     eaa:	25 89       	ldd	r18, Z+21	; 0x15
     eac:	22 23       	and	r18, r18
     eae:	c1 f0       	breq	.+48     	; 0xee0 <UartClass::flush()+0x3c>
     eb0:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     eb2:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     eb6:	80 ff       	sbrs	r24, 0
     eb8:	08 c0       	rjmp	.+16     	; 0xeca <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     eba:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     ebe:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     ec0:	82 8d       	ldd	r24, Z+26	; 0x1a
     ec2:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     eca:	ec 85       	ldd	r30, Y+12	; 0x0c
     ecc:	fd 85       	ldd	r31, Y+13	; 0x0d
     ece:	85 81       	ldd	r24, Z+5	; 0x05
     ed0:	85 fd       	sbrc	r24, 5
     ed2:	03 c0       	rjmp	.+6      	; 0xeda <UartClass::flush()+0x36>
     ed4:	84 81       	ldd	r24, Z+4	; 0x04
     ed6:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     ed8:	03 c0       	rjmp	.+6      	; 0xee0 <UartClass::flush()+0x3c>
     eda:	ce 01       	movw	r24, r28
     edc:	85 df       	rcall	.-246    	; 0xde8 <UartClass::_poll_tx_data_empty()>
     ede:	f5 cf       	rjmp	.-22     	; 0xeca <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     ee0:	df 91       	pop	r29
     ee2:	cf 91       	pop	r28
     ee4:	08 95       	ret

00000ee6 <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	89 2b       	or	r24, r25
     eec:	49 f0       	breq	.+18     	; 0xf00 <serialEventRun()+0x1a>
     eee:	80 e0       	ldi	r24, 0x00	; 0
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	89 2b       	or	r24, r25
     ef4:	29 f0       	breq	.+10     	; 0xf00 <serialEventRun()+0x1a>
     ef6:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     efa:	81 11       	cpse	r24, r1
     efc:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     f00:	80 e0       	ldi	r24, 0x00	; 0
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	89 2b       	or	r24, r25
     f06:	49 f0       	breq	.+18     	; 0xf1a <serialEventRun()+0x34>
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	89 2b       	or	r24, r25
     f0e:	29 f0       	breq	.+10     	; 0xf1a <serialEventRun()+0x34>
     f10:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f14:	81 11       	cpse	r24, r1
     f16:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     f1a:	80 e0       	ldi	r24, 0x00	; 0
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	89 2b       	or	r24, r25
     f20:	21 f0       	breq	.+8      	; 0xf2a <serialEventRun()+0x44>
     f22:	dc de       	rcall	.-584    	; 0xcdc <Serial2_available()>
     f24:	81 11       	cpse	r24, r1
     f26:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
     f2a:	80 e0       	ldi	r24, 0x00	; 0
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	89 2b       	or	r24, r25
     f30:	49 f0       	breq	.+18     	; 0xf44 <serialEventRun()+0x5e>
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	89 2b       	or	r24, r25
     f38:	29 f0       	breq	.+10     	; 0xf44 <serialEventRun()+0x5e>
     f3a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f3e:	81 11       	cpse	r24, r1
     f40:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
     f44:	08 95       	ret

00000f46 <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	08 95       	ret

00000f4a <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     f4a:	cf 93       	push	r28
     f4c:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	fc 01       	movw	r30, r24
     f52:	e7 56       	subi	r30, 0x67	; 103
     f54:	fa 44       	sbci	r31, 0x4A	; 74
     f56:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     f58:	2f 3f       	cpi	r18, 0xFF	; 255
     f5a:	69 f0       	breq	.+26     	; 0xf76 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     f5c:	fc 01       	movw	r30, r24
     f5e:	e0 59       	subi	r30, 0x90	; 144
     f60:	fa 44       	sbci	r31, 0x4A	; 74
     f62:	a0 81       	ld	r26, Z
     f64:	30 e2       	ldi	r19, 0x20	; 32
     f66:	a3 9f       	mul	r26, r19
     f68:	d0 01       	movw	r26, r0
     f6a:	11 24       	eor	r1, r1
     f6c:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     f6e:	61 30       	cpi	r22, 0x01	; 1
     f70:	29 f4       	brne	.+10     	; 0xf7c <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     f72:	11 96       	adiw	r26, 0x01	; 1
     f74:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     f76:	df 91       	pop	r29
     f78:	cf 91       	pop	r28
     f7a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     f7c:	89 5b       	subi	r24, 0xB9	; 185
     f7e:	9a 44       	sbci	r25, 0x4A	; 74
     f80:	ec 01       	movw	r28, r24
     f82:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     f84:	ef 3f       	cpi	r30, 0xFF	; 255
     f86:	81 f0       	breq	.+32     	; 0xfa8 <pinMode.part.1+0x5e>
     f88:	cd 01       	movw	r24, r26
     f8a:	40 96       	adiw	r24, 0x10	; 16
     f8c:	e8 0f       	add	r30, r24
     f8e:	f9 2f       	mov	r31, r25
     f90:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     f92:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     f94:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     f96:	12 96       	adiw	r26, 0x02	; 2
     f98:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     f9a:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     f9c:	62 30       	cpi	r22, 0x02	; 2
     f9e:	39 f4       	brne	.+14     	; 0xfae <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     fa0:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     fa2:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     fa4:	9f bf       	out	0x3f, r25	; 63
     fa6:	e7 cf       	rjmp	.-50     	; 0xf76 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     fac:	f2 cf       	rjmp	.-28     	; 0xf92 <pinMode.part.1+0x48>
     fae:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     fb0:	f8 cf       	rjmp	.-16     	; 0xfa2 <pinMode.part.1+0x58>

00000fb2 <pinMode>:
pinMode():
     fb2:	89 32       	cpi	r24, 0x29	; 41
     fb4:	08 f4       	brcc	.+2      	; 0xfb8 <pinMode+0x6>
     fb6:	c9 cf       	rjmp	.-110    	; 0xf4a <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     fb8:	08 95       	ret

00000fba <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	fc 01       	movw	r30, r24
     fbe:	e2 5e       	subi	r30, 0xE2	; 226
     fc0:	fa 44       	sbci	r31, 0x4A	; 74
     fc2:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     fc4:	ee 23       	and	r30, r30
     fc6:	19 f1       	breq	.+70     	; 0x100e <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     fc8:	e1 30       	cpi	r30, 0x01	; 1
     fca:	21 f0       	breq	.+8      	; 0xfd4 <turnOffPWM.part.0+0x1a>
     fcc:	00 f1       	brcs	.+64     	; 0x100e <turnOffPWM.part.0+0x54>
     fce:	e6 30       	cpi	r30, 0x06	; 6
     fd0:	a8 f0       	brcs	.+42     	; 0xffc <turnOffPWM.part.0+0x42>
     fd2:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     fd4:	89 5b       	subi	r24, 0xB9	; 185
     fd6:	9a 44       	sbci	r25, 0x4A	; 74
     fd8:	fc 01       	movw	r30, r24
     fda:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     fdc:	23 30       	cpi	r18, 0x03	; 3
     fde:	08 f0       	brcs	.+2      	; 0xfe2 <turnOffPWM.part.0+0x28>
     fe0:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     fe2:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	01 c0       	rjmp	.+2      	; 0xfee <turnOffPWM.part.0+0x34>
     fec:	88 0f       	add	r24, r24
     fee:	2a 95       	dec	r18
     ff0:	ea f7       	brpl	.-6      	; 0xfec <turnOffPWM.part.0+0x32>
     ff2:	80 95       	com	r24
     ff4:	83 23       	and	r24, r19
     ff6:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     ffa:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
     ffc:	80 e1       	ldi	r24, 0x10	; 16
     ffe:	e8 9f       	mul	r30, r24
    1000:	f0 01       	movw	r30, r0
    1002:	11 24       	eor	r1, r1
    1004:	e0 5a       	subi	r30, 0xA0	; 160
    1006:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    1008:	81 81       	ldd	r24, Z+1	; 0x01
    100a:	8f 7e       	andi	r24, 0xEF	; 239
    100c:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
    100e:	08 95       	ret

00001010 <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
    1010:	0f 93       	push	r16
    1012:	1f 93       	push	r17
    1014:	cf 93       	push	r28
    1016:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1018:	c8 2f       	mov	r28, r24
    101a:	d0 e0       	ldi	r29, 0x00	; 0
    101c:	fe 01       	movw	r30, r28
    101e:	e7 56       	subi	r30, 0x67	; 103
    1020:	fa 44       	sbci	r31, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
    1022:	00 81       	ld	r16, Z
    1024:	0f 3f       	cpi	r16, 0xFF	; 255
    1026:	99 f0       	breq	.+38     	; 0x104e <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1028:	16 2f       	mov	r17, r22
turnOffPWM():
    102a:	89 32       	cpi	r24, 0x29	; 41
    102c:	08 f4       	brcc	.+2      	; 0x1030 <digitalWrite.part.2+0x20>
    102e:	c5 df       	rcall	.-118    	; 0xfba <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1030:	fe 01       	movw	r30, r28
    1032:	e0 59       	subi	r30, 0x90	; 144
    1034:	fa 44       	sbci	r31, 0x4A	; 74
    1036:	e0 81       	ld	r30, Z
    1038:	80 e2       	ldi	r24, 0x20	; 32
    103a:	e8 9f       	mul	r30, r24
    103c:	f0 01       	movw	r30, r0
    103e:	11 24       	eor	r1, r1
    1040:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
    1042:	80 81       	ld	r24, Z
    1044:	80 23       	and	r24, r16
    1046:	51 f0       	breq	.+20     	; 0x105c <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
    1048:	11 11       	cpse	r17, r1
    104a:	06 c0       	rjmp	.+12     	; 0x1058 <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
    104c:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    104e:	df 91       	pop	r29
    1050:	cf 91       	pop	r28
    1052:	1f 91       	pop	r17
    1054:	0f 91       	pop	r16
    1056:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
    1058:	05 83       	std	Z+5, r16	; 0x05
    105a:	f9 cf       	rjmp	.-14     	; 0x104e <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    105c:	c9 5b       	subi	r28, 0xB9	; 185
    105e:	da 44       	sbci	r29, 0x4A	; 74
    1060:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1062:	30 97       	sbiw	r30, 0x00	; 0
    1064:	71 f0       	breq	.+28     	; 0x1082 <digitalWrite.part.2+0x72>
    1066:	8f 3f       	cpi	r24, 0xFF	; 255
    1068:	61 f0       	breq	.+24     	; 0x1082 <digitalWrite.part.2+0x72>
    106a:	70 96       	adiw	r30, 0x10	; 16
    106c:	e8 0f       	add	r30, r24
    106e:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    1070:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
    1072:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    1074:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
    1076:	11 11       	cpse	r17, r1
    1078:	07 c0       	rjmp	.+14     	; 0x1088 <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    107a:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    107c:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
    107e:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    1080:	e6 cf       	rjmp	.-52     	; 0x104e <digitalWrite.part.2+0x3e>
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1086:	f4 cf       	rjmp	.-24     	; 0x1070 <digitalWrite.part.2+0x60>
    1088:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    108a:	f8 cf       	rjmp	.-16     	; 0x107c <digitalWrite.part.2+0x6c>

0000108c <digitalWrite>:
digitalWrite():
    108c:	89 32       	cpi	r24, 0x29	; 41
    108e:	08 f4       	brcc	.+2      	; 0x1092 <digitalWrite+0x6>
    1090:	bf cf       	rjmp	.-130    	; 0x1010 <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    1092:	08 95       	ret

00001094 <OneButton::OneButton(int, int) [clone .constprop.13]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
    1094:	0f 93       	push	r16
    1096:	1f 93       	push	r17
    1098:	cf 93       	push	r28
    109a:	df 93       	push	r29
    109c:	ec 01       	movw	r28, r24
    109e:	16 2f       	mov	r17, r22
    10a0:	07 2f       	mov	r16, r23
    10a2:	82 e3       	ldi	r24, 0x32	; 50
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
    10a8:	9f 83       	std	Y+7, r25	; 0x07
    10aa:	60 e0       	ldi	r22, 0x00	; 0
    10ac:	81 2f       	mov	r24, r17
    10ae:	81 df       	rcall	.-254    	; 0xfb2 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
    10b0:	18 83       	st	Y, r17
    10b2:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
    10b4:	88 e5       	ldi	r24, 0x58	; 88
    10b6:	92 e0       	ldi	r25, 0x02	; 2
    10b8:	8a 83       	std	Y+2, r24	; 0x02
    10ba:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
    10bc:	88 ee       	ldi	r24, 0xE8	; 232
    10be:	93 e0       	ldi	r25, 0x03	; 3
    10c0:	8c 83       	std	Y+4, r24	; 0x04
    10c2:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
    10c4:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
    10c6:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
    10c8:	1c 86       	std	Y+12, r1	; 0x0c
    10ca:	81 e0       	ldi	r24, 0x01	; 1
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
    10d0:	99 87       	std	Y+9, r25	; 0x09
    10d2:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
    10d4:	1b 86       	std	Y+11, r1	; 0x0b
    10d6:	61 e0       	ldi	r22, 0x01	; 1
    10d8:	81 2f       	mov	r24, r17
    10da:	d8 df       	rcall	.-80     	; 0x108c <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
    10dc:	1f 86       	std	Y+15, r1	; 0x0f
    10de:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
    10e0:	19 8a       	std	Y+17, r1	; 0x11
    10e2:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
    10e4:	1b 8a       	std	Y+19, r1	; 0x13
    10e6:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
    10e8:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
    10ea:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
    10ec:	1f 8a       	std	Y+23, r1	; 0x17
    10ee:	18 8e       	std	Y+24, r1	; 0x18
    10f0:	df 91       	pop	r29
    10f2:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:195
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
    10f4:	1f 91       	pop	r17
    10f6:	0f 91       	pop	r16
    10f8:	08 95       	ret

000010fa <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:196
    digitalWrite(CA_6, HIGH);
    10fa:	61 e0       	ldi	r22, 0x01	; 1
    10fc:	8b e0       	ldi	r24, 0x0B	; 11
    10fe:	c6 df       	rcall	.-116    	; 0x108c <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:197
    digitalWrite(CA_7, HIGH);
    1100:	61 e0       	ldi	r22, 0x01	; 1
    1102:	8a e0       	ldi	r24, 0x0A	; 10
    1104:	c3 df       	rcall	.-122    	; 0x108c <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:198
    digitalWrite(CA_8, HIGH);
    1106:	61 e0       	ldi	r22, 0x01	; 1
    1108:	89 e0       	ldi	r24, 0x09	; 9
    110a:	c0 df       	rcall	.-128    	; 0x108c <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:203
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
    110c:	61 e0       	ldi	r22, 0x01	; 1
    110e:	88 e0       	ldi	r24, 0x08	; 8
    1110:	bd cf       	rjmp	.-134    	; 0x108c <digitalWrite>

00001112 <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
    1112:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:204
    digitalWrite(CA_3, HIGH);
    1114:	87 e0       	ldi	r24, 0x07	; 7
    1116:	ba df       	rcall	.-140    	; 0x108c <digitalWrite>
    1118:	61 e0       	ldi	r22, 0x01	; 1
    111a:	86 e0       	ldi	r24, 0x06	; 6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:205
    digitalWrite(CA_2, HIGH);
    111c:	b7 df       	rcall	.-146    	; 0x108c <digitalWrite>
    111e:	61 e0       	ldi	r22, 0x01	; 1
    1120:	85 e0       	ldi	r24, 0x05	; 5
    1122:	b4 df       	rcall	.-152    	; 0x108c <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/led.cpp:206
    digitalWrite(CA_1, HIGH);
    1124:	61 e0       	ldi	r22, 0x01	; 1
    1126:	84 e0       	ldi	r24, 0x04	; 4
    1128:	b1 cf       	rjmp	.-158    	; 0x108c <digitalWrite>

0000112a <UartClass::begin(unsigned long, unsigned int)>:
begin():
    112a:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
    112c:	bf 92       	push	r11
    112e:	cf 92       	push	r12
    1130:	df 92       	push	r13
    1132:	ef 92       	push	r14
    1134:	ff 92       	push	r15
    1136:	0f 93       	push	r16
    1138:	1f 93       	push	r17
    113a:	cf 93       	push	r28
    113c:	df 93       	push	r29
    113e:	ec 01       	movw	r28, r24
    1140:	6a 01       	movw	r12, r20
    1142:	7b 01       	movw	r14, r22
    1144:	a2 2e       	mov	r10, r18
    1146:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
    1148:	88 23       	and	r24, r24
    114a:	39 f0       	breq	.+14     	; 0x115a <UartClass::begin(unsigned long, unsigned int)+0x30>
    114c:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
    114e:	f9 81       	ldd	r31, Y+1	; 0x01
    1150:	06 88       	ldd	r0, Z+22	; 0x16
    1152:	f7 89       	ldd	r31, Z+23	; 0x17
    1154:	e0 2d       	mov	r30, r0
    1156:	ce 01       	movw	r24, r28
    1158:	09 95       	icall
    115a:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
    115c:	10 e0       	ldi	r17, 0x00	; 0
    115e:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
    1160:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
    1162:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
    1164:	70 e2       	ldi	r23, 0x20	; 32
    1166:	81 ea       	ldi	r24, 0xA1	; 161
    1168:	97 e0       	ldi	r25, 0x07	; 7
    116a:	a7 01       	movw	r20, r14
    116c:	96 01       	movw	r18, r12
    116e:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <__udivmodsi4>
    1172:	69 01       	movw	r12, r18
    1174:	7a 01       	movw	r14, r20
    1176:	8f ef       	ldi	r24, 0xFF	; 255
    1178:	c8 1a       	sub	r12, r24
    117a:	d8 0a       	sbc	r13, r24
    117c:	e8 0a       	sbc	r14, r24
    117e:	f8 0a       	sbc	r15, r24
    1180:	f6 94       	lsr	r15
    1182:	e7 94       	ror	r14
    1184:	d7 94       	ror	r13
    1186:	c7 94       	ror	r12
    1188:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    118a:	fd 85       	ldd	r31, Y+13	; 0x0d
    118c:	86 81       	ldd	r24, Z+6	; 0x06
    118e:	8d 7f       	andi	r24, 0xFD	; 253
    1190:	86 83       	std	Z+6, r24	; 0x06
    1192:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    1194:	fd 85       	ldd	r31, Y+13	; 0x0d
    1196:	86 81       	ldd	r24, Z+6	; 0x06
    1198:	86 83       	std	Z+6, r24	; 0x06
    119a:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    119c:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    11a0:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    11a2:	00 0c       	add	r0, r0
    11a4:	bb 0b       	sbc	r27, r27
    11a6:	a7 01       	movw	r20, r14
    11a8:	96 01       	movw	r18, r12
    11aa:	0e 94 46 3a 	call	0x748c	; 0x748c <__mulshisi3>
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	34 e0       	ldi	r19, 0x04	; 4
    11b2:	40 e0       	ldi	r20, 0x00	; 0
    11b4:	50 e0       	ldi	r21, 0x00	; 0
    11b6:	0e 94 14 3a 	call	0x7428	; 0x7428 <__divmodsi4>
    11ba:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    11bc:	fd 85       	ldd	r31, Y+13	; 0x0d
    11be:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    11c0:	d3 1e       	adc	r13, r19
    11c2:	e4 1e       	adc	r14, r20
    11c4:	f5 1e       	adc	r15, r21
    11c6:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    11c8:	d1 86       	std	Z+9, r13	; 0x09
    11ca:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    11cc:	fd 85       	ldd	r31, Y+13	; 0x0d
    11ce:	a7 82       	std	Z+7, r10	; 0x07
    11d0:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    11d2:	fd 85       	ldd	r31, Y+13	; 0x0d
    11d4:	86 81       	ldd	r24, Z+6	; 0x06
    11d6:	80 6c       	ori	r24, 0xC0	; 192
    11d8:	86 83       	std	Z+6, r24	; 0x06
    11da:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    11dc:	fd 85       	ldd	r31, Y+13	; 0x0d
    11de:	85 81       	ldd	r24, Z+5	; 0x05
    11e0:	80 68       	ori	r24, 0x80	; 128
    11e2:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    11e4:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    11e8:	8b 89       	ldd	r24, Y+19	; 0x13
    11ea:	80 95       	com	r24
    11ec:	89 23       	and	r24, r25
    11ee:	98 01       	movw	r18, r16
    11f0:	22 0f       	add	r18, r18
    11f2:	33 1f       	adc	r19, r19
    11f4:	02 0f       	add	r16, r18
    11f6:	13 1f       	adc	r17, r19
    11f8:	c0 0f       	add	r28, r16
    11fa:	d1 1f       	adc	r29, r17
    11fc:	98 89       	ldd	r25, Y+16	; 0x10
    11fe:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    1200:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1204:	62 e0       	ldi	r22, 0x02	; 2
    1206:	8e 85       	ldd	r24, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    1208:	d4 de       	rcall	.-600    	; 0xfb2 <pinMode>
    120a:	61 e0       	ldi	r22, 0x01	; 1
    120c:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    120e:	3e df       	rcall	.-388    	; 0x108c <digitalWrite>
    1210:	61 e0       	ldi	r22, 0x01	; 1
    1212:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    1214:	ce de       	rcall	.-612    	; 0xfb2 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    1216:	bf be       	out	0x3f, r11	; 63
    1218:	df 91       	pop	r29
    121a:	cf 91       	pop	r28
    121c:	1f 91       	pop	r17
    121e:	0f 91       	pop	r16
    1220:	ff 90       	pop	r15
    1222:	ef 90       	pop	r14
    1224:	df 90       	pop	r13
    1226:	cf 90       	pop	r12
    1228:	bf 90       	pop	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Procss.cpp:1253
            break;                 
      }      
  }  
}

void Pclass :: ALL_LED_OFF()
    122a:	af 90       	pop	r10
    122c:	08 95       	ret

0000122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>:
digitalWrite():
    122e:	61 e0       	ldi	r22, 0x01	; 1
    1230:	8a e1       	ldi	r24, 0x1A	; 26
    1232:	ee de       	rcall	.-548    	; 0x1010 <digitalWrite.part.2>
    1234:	61 e0       	ldi	r22, 0x01	; 1
    1236:	8d e1       	ldi	r24, 0x1D	; 29
    1238:	eb de       	rcall	.-554    	; 0x1010 <digitalWrite.part.2>
    123a:	61 e0       	ldi	r22, 0x01	; 1
    123c:	8c e1       	ldi	r24, 0x1C	; 28
    123e:	e8 de       	rcall	.-560    	; 0x1010 <digitalWrite.part.2>
    1240:	61 e0       	ldi	r22, 0x01	; 1
    1242:	8b e1       	ldi	r24, 0x1B	; 27
    1244:	e5 ce       	rjmp	.-566    	; 0x1010 <digitalWrite.part.2>

00001246 <digitalRead.part.3>:
digitalRead.part.3():
    1246:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    1248:	1f 93       	push	r17
    124a:	cf 93       	push	r28
    124c:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    124e:	10 e0       	ldi	r17, 0x00	; 0
    1250:	f8 01       	movw	r30, r16
    1252:	e7 56       	subi	r30, 0x67	; 103
    1254:	fa 44       	sbci	r31, 0x4A	; 74
    1256:	c0 81       	ld	r28, Z
    1258:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    125a:	81 f0       	breq	.+32     	; 0x127c <digitalRead.part.3+0x36>
turnOffPWM():
    125c:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    125e:	08 f4       	brcc	.+2      	; 0x1262 <digitalRead.part.3+0x1c>
    1260:	ac de       	rcall	.-680    	; 0xfba <turnOffPWM.part.0>
digitalRead.part.3():
    1262:	f8 01       	movw	r30, r16
    1264:	e0 59       	subi	r30, 0x90	; 144
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1266:	fa 44       	sbci	r31, 0x4A	; 74
    1268:	e0 81       	ld	r30, Z
    126a:	80 e2       	ldi	r24, 0x20	; 32
    126c:	e8 9f       	mul	r30, r24
    126e:	f0 01       	movw	r30, r0
    1270:	11 24       	eor	r1, r1
    1272:	fc 5f       	subi	r31, 0xFC	; 252
    1274:	80 85       	ldd	r24, Z+8	; 0x08
    1276:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	09 f4       	brne	.+2      	; 0x127e <digitalRead.part.3+0x38>
    127c:	80 e0       	ldi	r24, 0x00	; 0
    127e:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    1280:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    1282:	0f 91       	pop	r16
    1284:	08 95       	ret

00001286 <micros>:
micros():
    1286:	8f b7       	in	r24, 0x3f	; 63
    1288:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    128a:	20 91 39 28 	lds	r18, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    128e:	30 91 3a 28 	lds	r19, 0x283A	; 0x80283a <timer_millis+0x1>
    1292:	40 91 3b 28 	lds	r20, 0x283B	; 0x80283b <timer_millis+0x2>
    1296:	50 91 3c 28 	lds	r21, 0x283C	; 0x80283c <timer_millis+0x3>
    129a:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    129e:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12a2:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    12a6:	90 ff       	sbrs	r25, 0
    12a8:	08 c0       	rjmp	.+16     	; 0x12ba <micros+0x34>
    12aa:	2f 5f       	subi	r18, 0xFF	; 255
    12ac:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    12ae:	4f 4f       	sbci	r20, 0xFF	; 255
    12b0:	5f 4f       	sbci	r21, 0xFF	; 255
    12b2:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    12b6:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12ba:	8f bf       	out	0x3f, r24	; 63
    12bc:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    12be:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    12c0:	0e 94 3c 3a 	call	0x7478	; 0x7478 <__muluhisi3>
    12c4:	24 e0       	ldi	r18, 0x04	; 4
    12c6:	f6 95       	lsr	r31
    12c8:	e7 95       	ror	r30
    12ca:	2a 95       	dec	r18
    12cc:	e1 f7       	brne	.-8      	; 0x12c6 <micros+0x40>
    12ce:	6e 0f       	add	r22, r30
    12d0:	7f 1f       	adc	r23, r31
    12d2:	81 1d       	adc	r24, r1
    12d4:	91 1d       	adc	r25, r1
    12d6:	08 95       	ret

000012d8 <millis>:
millis():
    12d8:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    12da:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    12dc:	60 91 39 28 	lds	r22, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    12e0:	70 91 3a 28 	lds	r23, 0x283A	; 0x80283a <timer_millis+0x1>
    12e4:	80 91 3b 28 	lds	r24, 0x283B	; 0x80283b <timer_millis+0x2>
    12e8:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <timer_millis+0x3>
    12ec:	2f bf       	out	0x3f, r18	; 63
    12ee:	08 95       	ret

000012f0 <Lclass::PID_callingg() [clone .constprop.43]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    12f0:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    12f2:	1f 93       	push	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:35
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    12f4:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:37
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    12f8:	81 11       	cpse	r24, r1
    12fa:	7c c0       	rjmp	.+248    	; 0x13f4 <Lclass::PID_callingg() [clone .constprop.43]+0x104>
    12fc:	80 91 02 29 	lds	r24, 0x2902	; 0x802902 <TEMP_DEG>
    1300:	90 91 03 29 	lds	r25, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    1304:	a0 91 04 29 	lds	r26, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    1308:	b0 91 05 29 	lds	r27, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    130c:	80 93 f6 29 	sts	0x29F6, r24	; 0x8029f6 <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:38
  else               PID_INPUT = TEMP_DEG_RAW;
    1310:	90 93 f7 29 	sts	0x29F7, r25	; 0x8029f7 <PID_INPUT+0x1>
    1314:	a0 93 f8 29 	sts	0x29F8, r26	; 0x8029f8 <PID_INPUT+0x2>
    1318:	b0 93 f9 29 	sts	0x29F9, r27	; 0x8029f9 <PID_INPUT+0x3>
    131c:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <select_heating_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:43


//-------------------------------------------------------slow_Heating-------------------------------------------------------------//

if(select_heating_type==0)
    1320:	81 11       	cpse	r24, r1
    1322:	87 c0       	rjmp	.+270    	; 0x1432 <Lclass::PID_callingg() [clone .constprop.43]+0x142>
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:48
{
//        Serial2.println("Product Slow");
        if(PID_SETPOINT < 51)
          {
            Kp= 28; Ki=0.010; Kd=700;  //Ring Heater <51
    1328:	a0 ee       	ldi	r26, 0xE0	; 224
    132a:	b1 e4       	ldi	r27, 0x41	; 65
    132c:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    1330:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1334:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1338:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    133c:	8a e0       	ldi	r24, 0x0A	; 10
    133e:	97 ed       	ldi	r25, 0xD7	; 215
    1340:	a3 e2       	ldi	r26, 0x23	; 35
    1342:	bc e3       	ldi	r27, 0x3C	; 60
    1344:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    1348:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    134c:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    1350:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    1354:	80 e0       	ldi	r24, 0x00	; 0
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	af e2       	ldi	r26, 0x2F	; 47
    135a:	b4 e4       	ldi	r27, 0x44	; 68
    135c:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    1360:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    1364:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    1368:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:49
            myPID.SetTunings(Kp, Ki, Kd);    
    136c:	aa d9       	rcall	.-3244   	; 0x6c2 <PID::SetTunings(double, double, double) [clone .constprop.44]>
    136e:	b4 df       	rcall	.-152    	; 0x12d8 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:57
          {
             Kp= 28; Ki=0.010; Kd=700;  //Ring Heater >51
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1370:	00 91 f9 28 	lds	r16, 0x28F9	; 0x8028f9 <WINDOW_START_TIME>
    1374:	10 91 fa 28 	lds	r17, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x1>
    1378:	20 91 fb 28 	lds	r18, 0x28FB	; 0x8028fb <WINDOW_START_TIME+0x2>
    137c:	30 91 fc 28 	lds	r19, 0x28FC	; 0x8028fc <WINDOW_START_TIME+0x3>
    1380:	ab 01       	movw	r20, r22
    1382:	bc 01       	movw	r22, r24
    1384:	40 1b       	sub	r20, r16
    1386:	51 0b       	sbc	r21, r17
    1388:	62 0b       	sbc	r22, r18
    138a:	73 0b       	sbc	r23, r19
    138c:	49 3e       	cpi	r20, 0xE9	; 233
    138e:	53 40       	sbci	r21, 0x03	; 3
    1390:	61 05       	cpc	r22, r1
    1392:	71 05       	cpc	r23, r1
    1394:	70 f0       	brcs	.+28     	; 0x13b2 <Lclass::PID_callingg() [clone .constprop.43]+0xc2>
    1396:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:58
                         WINDOW_START_TIME += WINDOW_SIZE;
    1398:	c8 01       	movw	r24, r16
    139a:	88 51       	subi	r24, 0x18	; 24
    139c:	9c 4f       	sbci	r25, 0xFC	; 252
    139e:	af 4f       	sbci	r26, 0xFF	; 255
    13a0:	bf 4f       	sbci	r27, 0xFF	; 255
    13a2:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <WINDOW_START_TIME>
    13a6:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <WINDOW_START_TIME+0x1>
    13aa:	a0 93 fb 28 	sts	0x28FB, r26	; 0x8028fb <WINDOW_START_TIME+0x2>
    13ae:	b0 93 fc 28 	sts	0x28FC, r27	; 0x8028fc <WINDOW_START_TIME+0x3>
    13b2:	92 df       	rcall	.-220    	; 0x12d8 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:62
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    13b4:	00 91 f9 28 	lds	r16, 0x28F9	; 0x8028f9 <WINDOW_START_TIME>
    13b8:	10 91 fa 28 	lds	r17, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x1>
    13bc:	20 91 fb 28 	lds	r18, 0x28FB	; 0x8028fb <WINDOW_START_TIME+0x2>
    13c0:	30 91 fc 28 	lds	r19, 0x28FC	; 0x8028fc <WINDOW_START_TIME+0x3>
    13c4:	60 1b       	sub	r22, r16
    13c6:	71 0b       	sbc	r23, r17
    13c8:	82 0b       	sbc	r24, r18
    13ca:	93 0b       	sbc	r25, r19
    13cc:	0e 94 c6 38 	call	0x718c	; 0x718c <__floatunsisf>
    13d0:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_OUTPUT>
    13d4:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_OUTPUT+0x1>
    13d8:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_OUTPUT+0x2>
    13dc:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_OUTPUT+0x3>
    13e0:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    13e4:	18 16       	cp	r1, r24
    13e6:	7c f4       	brge	.+30     	; 0x1406 <Lclass::PID_callingg() [clone .constprop.43]+0x116>
digitalWrite():
    13e8:	60 e0       	ldi	r22, 0x00	; 0
    13ea:	81 e2       	ldi	r24, 0x21	; 33
    13ec:	11 de       	rcall	.-990    	; 0x1010 <digitalWrite.part.2>
PID_callingg():
    13ee:	1f 91       	pop	r17
    13f0:	0f 91       	pop	r16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    13f2:	08 95       	ret
    13f4:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:38
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    13f8:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    13fc:	a0 91 00 29 	lds	r26, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    1400:	b0 91 01 29 	lds	r27, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    1404:	83 cf       	rjmp	.-250    	; 0x130c <Lclass::PID_callingg() [clone .constprop.43]+0x1c>
    1406:	20 91 ee 29 	lds	r18, 0x29EE	; 0x8029ee <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:65
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    140a:	30 91 ef 29 	lds	r19, 0x29EF	; 0x8029ef <PID_SETPOINT+0x1>
    140e:	40 91 f0 29 	lds	r20, 0x29F0	; 0x8029f0 <PID_SETPOINT+0x2>
    1412:	50 91 f1 29 	lds	r21, 0x29F1	; 0x8029f1 <PID_SETPOINT+0x3>
    1416:	60 91 f6 29 	lds	r22, 0x29F6	; 0x8029f6 <PID_INPUT>
    141a:	70 91 f7 29 	lds	r23, 0x29F7	; 0x8029f7 <PID_INPUT+0x1>
    141e:	80 91 f8 29 	lds	r24, 0x29F8	; 0x8029f8 <PID_INPUT+0x2>
    1422:	90 91 f9 29 	lds	r25, 0x29F9	; 0x8029f9 <PID_INPUT+0x3>
    1426:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    142a:	87 ff       	sbrs	r24, 7
    142c:	dd cf       	rjmp	.-70     	; 0x13e8 <Lclass::PID_callingg() [clone .constprop.43]+0xf8>
digitalWrite():
    142e:	61 e0       	ldi	r22, 0x01	; 1
    1430:	dc cf       	rjmp	.-72     	; 0x13ea <Lclass::PID_callingg() [clone .constprop.43]+0xfa>
PID_callingg():
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:76
 
  {
//          Serial2.println("Product Fast");
            if(PID_SETPOINT < 51)
          {
            Kp= 28; Ki=0.010; Kd=700;  //Ring Heater <51 
    1436:	a0 ee       	ldi	r26, 0xE0	; 224
    1438:	b1 e4       	ldi	r27, 0x41	; 65
    143a:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    143e:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1442:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1446:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    144a:	8a e0       	ldi	r24, 0x0A	; 10
    144c:	97 ed       	ldi	r25, 0xD7	; 215
    144e:	a3 e2       	ldi	r26, 0x23	; 35
    1450:	bc e3       	ldi	r27, 0x3C	; 60
    1452:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    1456:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    145a:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    145e:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	af e2       	ldi	r26, 0x2F	; 47
    1468:	b4 e4       	ldi	r27, 0x44	; 68
    146a:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    146e:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    1472:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    1476:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:77
            myPID.SetTunings(Kp, Ki, Kd);    
    147a:	23 d9       	rcall	.-3514   	; 0x6c2 <PID::SetTunings(double, double, double) [clone .constprop.44]>
    147c:	2d df       	rcall	.-422    	; 0x12d8 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:85
          {
            Kp= 28; Ki=0.010; Kd=700;  //Ring Heater >51    Kp= 25; Ki=0.010; Kd=650;
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    147e:	00 91 f9 28 	lds	r16, 0x28F9	; 0x8028f9 <WINDOW_START_TIME>
    1482:	10 91 fa 28 	lds	r17, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x1>
    1486:	20 91 fb 28 	lds	r18, 0x28FB	; 0x8028fb <WINDOW_START_TIME+0x2>
    148a:	30 91 fc 28 	lds	r19, 0x28FC	; 0x8028fc <WINDOW_START_TIME+0x3>
    148e:	ab 01       	movw	r20, r22
    1490:	bc 01       	movw	r22, r24
    1492:	40 1b       	sub	r20, r16
    1494:	51 0b       	sbc	r21, r17
    1496:	62 0b       	sbc	r22, r18
    1498:	73 0b       	sbc	r23, r19
    149a:	49 3e       	cpi	r20, 0xE9	; 233
    149c:	53 40       	sbci	r21, 0x03	; 3
    149e:	61 05       	cpc	r22, r1
    14a0:	71 05       	cpc	r23, r1
    14a2:	70 f0       	brcs	.+28     	; 0x14c0 <Lclass::PID_callingg() [clone .constprop.43]+0x1d0>
    14a4:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:86
                         WINDOW_START_TIME += WINDOW_SIZE;
    14a6:	c8 01       	movw	r24, r16
    14a8:	88 51       	subi	r24, 0x18	; 24
    14aa:	9c 4f       	sbci	r25, 0xFC	; 252
    14ac:	af 4f       	sbci	r26, 0xFF	; 255
    14ae:	bf 4f       	sbci	r27, 0xFF	; 255
    14b0:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <WINDOW_START_TIME>
    14b4:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <WINDOW_START_TIME+0x1>
    14b8:	a0 93 fb 28 	sts	0x28FB, r26	; 0x8028fb <WINDOW_START_TIME+0x2>
    14bc:	b0 93 fc 28 	sts	0x28FC, r27	; 0x8028fc <WINDOW_START_TIME+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:90
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    14c0:	0b df       	rcall	.-490    	; 0x12d8 <millis>
    14c2:	00 91 f9 28 	lds	r16, 0x28F9	; 0x8028f9 <WINDOW_START_TIME>
    14c6:	10 91 fa 28 	lds	r17, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x1>
    14ca:	20 91 fb 28 	lds	r18, 0x28FB	; 0x8028fb <WINDOW_START_TIME+0x2>
    14ce:	30 91 fc 28 	lds	r19, 0x28FC	; 0x8028fc <WINDOW_START_TIME+0x3>
    14d2:	60 1b       	sub	r22, r16
    14d4:	71 0b       	sbc	r23, r17
    14d6:	82 0b       	sbc	r24, r18
    14d8:	93 0b       	sbc	r25, r19
    14da:	0e 94 c6 38 	call	0x718c	; 0x718c <__floatunsisf>
    14de:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_OUTPUT>
    14e2:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_OUTPUT+0x1>
    14e6:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_OUTPUT+0x2>
    14ea:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_OUTPUT+0x3>
    14ee:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    14f2:	18 16       	cp	r1, r24
    14f4:	2c f4       	brge	.+10     	; 0x1500 <Lclass::PID_callingg() [clone .constprop.43]+0x210>
digitalWrite():
    14f6:	60 e0       	ldi	r22, 0x00	; 0
    14f8:	81 e2       	ldi	r24, 0x21	; 33
PID_callingg():
    14fa:	1f 91       	pop	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    14fc:	0f 91       	pop	r16
digitalWrite():
    14fe:	88 cd       	rjmp	.-1264   	; 0x1010 <digitalWrite.part.2>
PID_callingg():
    1500:	20 91 ee 29 	lds	r18, 0x29EE	; 0x8029ee <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:93
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    1504:	30 91 ef 29 	lds	r19, 0x29EF	; 0x8029ef <PID_SETPOINT+0x1>
    1508:	40 91 f0 29 	lds	r20, 0x29F0	; 0x8029f0 <PID_SETPOINT+0x2>
    150c:	50 91 f1 29 	lds	r21, 0x29F1	; 0x8029f1 <PID_SETPOINT+0x3>
    1510:	60 91 f6 29 	lds	r22, 0x29F6	; 0x8029f6 <PID_INPUT>
    1514:	70 91 f7 29 	lds	r23, 0x29F7	; 0x8029f7 <PID_INPUT+0x1>
    1518:	80 91 f8 29 	lds	r24, 0x29F8	; 0x8029f8 <PID_INPUT+0x2>
    151c:	90 91 f9 29 	lds	r25, 0x29F9	; 0x8029f9 <PID_INPUT+0x3>
    1520:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    1524:	87 ff       	sbrs	r24, 7
    1526:	e7 cf       	rjmp	.-50     	; 0x14f6 <Lclass::PID_callingg() [clone .constprop.43]+0x206>
digitalWrite():
    1528:	61 e0       	ldi	r22, 0x01	; 1
    152a:	e6 cf       	rjmp	.-52     	; 0x14f8 <Lclass::PID_callingg() [clone .constprop.43]+0x208>

0000152c <Ticker::update()>:
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    152c:	0f 93       	push	r16
    152e:	1f 93       	push	r17
    1530:	cf 93       	push	r28
    1532:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    1534:	fc 01       	movw	r30, r24
    1536:	20 81       	ld	r18, Z
    1538:	22 23       	and	r18, r18
    153a:	09 f4       	brne	.+2      	; 0x153e <Ticker::update()+0x12>
    153c:	50 c0       	rjmp	.+160    	; 0x15de <Ticker::update()+0xb2>
    153e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    1540:	81 85       	ldd	r24, Z+9	; 0x09
    1542:	92 85       	ldd	r25, Z+10	; 0x0a
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	b9 f5       	brne	.+110    	; 0x15b6 <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    1548:	c7 de       	rcall	.-626    	; 0x12d8 <millis>
    154a:	0b 89       	ldd	r16, Y+19	; 0x13
    154c:	1c 89       	ldd	r17, Y+20	; 0x14
    154e:	2d 89       	ldd	r18, Y+21	; 0x15
    1550:	3e 89       	ldd	r19, Y+22	; 0x16
    1552:	60 1b       	sub	r22, r16
    1554:	71 0b       	sbc	r23, r17
    1556:	82 0b       	sbc	r24, r18
    1558:	93 0b       	sbc	r25, r19
    155a:	09 81       	ldd	r16, Y+1	; 0x01
    155c:	1a 81       	ldd	r17, Y+2	; 0x02
    155e:	2b 81       	ldd	r18, Y+3	; 0x03
    1560:	3c 81       	ldd	r19, Y+4	; 0x04
    1562:	60 17       	cp	r22, r16
    1564:	71 07       	cpc	r23, r17
    1566:	82 07       	cpc	r24, r18
    1568:	93 07       	cpc	r25, r19
    156a:	c8 f1       	brcs	.+114    	; 0x15de <Ticker::update()+0xb2>
    156c:	b5 de       	rcall	.-662    	; 0x12d8 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    156e:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    1570:	7c 8b       	std	Y+20, r23	; 0x14
    1572:	8d 8b       	std	Y+21, r24	; 0x15
    1574:	9e 8b       	std	Y+22, r25	; 0x16
    1576:	8b 85       	ldd	r24, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    1578:	9c 85       	ldd	r25, Y+12	; 0x0c
    157a:	ad 85       	ldd	r26, Y+13	; 0x0d
    157c:	be 85       	ldd	r27, Y+14	; 0x0e
    157e:	4d 81       	ldd	r20, Y+5	; 0x05
    1580:	5e 81       	ldd	r21, Y+6	; 0x06
    1582:	6f 81       	ldd	r22, Y+7	; 0x07
    1584:	78 85       	ldd	r23, Y+8	; 0x08
    1586:	48 1b       	sub	r20, r24
    1588:	59 0b       	sbc	r21, r25
    158a:	6a 0b       	sbc	r22, r26
    158c:	7b 0b       	sbc	r23, r27
    158e:	41 30       	cpi	r20, 0x01	; 1
    1590:	51 05       	cpc	r21, r1
    1592:	61 05       	cpc	r22, r1
    1594:	71 05       	cpc	r23, r1
    1596:	09 f4       	brne	.+2      	; 0x159a <Ticker::update()+0x6e>
    1598:	18 82       	st	Y, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    159a:	01 96       	adiw	r24, 0x01	; 1
    159c:	a1 1d       	adc	r26, r1
    159e:	b1 1d       	adc	r27, r1
    15a0:	8b 87       	std	Y+11, r24	; 0x0b
    15a2:	9c 87       	std	Y+12, r25	; 0x0c
    15a4:	ad 87       	std	Y+13, r26	; 0x0d
    15a6:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    15a8:	e9 89       	ldd	r30, Y+17	; 0x11
    15aa:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    15ac:	df 91       	pop	r29
    15ae:	cf 91       	pop	r28
    15b0:	1f 91       	pop	r17
    15b2:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    15b4:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    15b6:	67 de       	rcall	.-818    	; 0x1286 <micros>
    15b8:	0b 89       	ldd	r16, Y+19	; 0x13
    15ba:	1c 89       	ldd	r17, Y+20	; 0x14
    15bc:	2d 89       	ldd	r18, Y+21	; 0x15
    15be:	3e 89       	ldd	r19, Y+22	; 0x16
    15c0:	60 1b       	sub	r22, r16
    15c2:	71 0b       	sbc	r23, r17
    15c4:	82 0b       	sbc	r24, r18
    15c6:	93 0b       	sbc	r25, r19
    15c8:	09 81       	ldd	r16, Y+1	; 0x01
    15ca:	1a 81       	ldd	r17, Y+2	; 0x02
    15cc:	2b 81       	ldd	r18, Y+3	; 0x03
    15ce:	3c 81       	ldd	r19, Y+4	; 0x04
    15d0:	60 17       	cp	r22, r16
    15d2:	71 07       	cpc	r23, r17
    15d4:	82 07       	cpc	r24, r18
    15d6:	93 07       	cpc	r25, r19
    15d8:	10 f0       	brcs	.+4      	; 0x15de <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    15da:	55 de       	rcall	.-854    	; 0x1286 <micros>
    15dc:	c8 cf       	rjmp	.-112    	; 0x156e <Ticker::update()+0x42>
update():
    15de:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    15e0:	cf 91       	pop	r28
    15e2:	1f 91       	pop	r17
    15e4:	0f 91       	pop	r16
    15e6:	08 95       	ret

000015e8 <Ticker::start()>:
start():
    15e8:	cf 93       	push	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    15ea:	df 93       	push	r29
    15ec:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    15ee:	21 89       	ldd	r18, Z+17	; 0x11
    15f0:	32 89       	ldd	r19, Z+18	; 0x12
    15f2:	23 2b       	or	r18, r19
    15f4:	a1 f0       	breq	.+40     	; 0x161e <Ticker::start()+0x36>
    15f6:	ec 01       	movw	r28, r24
    15f8:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    15fa:	92 85       	ldd	r25, Z+10	; 0x0a
    15fc:	01 97       	sbiw	r24, 0x01	; 1
    15fe:	91 f4       	brne	.+36     	; 0x1624 <Ticker::start()+0x3c>
    1600:	6b de       	rcall	.-810    	; 0x12d8 <millis>
    1602:	6b 8b       	std	Y+19, r22	; 0x13
    1604:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    1606:	8d 8b       	std	Y+21, r24	; 0x15
    1608:	9e 8b       	std	Y+22, r25	; 0x16
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	88 83       	st	Y, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    160e:	1b 86       	std	Y+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    1610:	1c 86       	std	Y+12, r1	; 0x0c
    1612:	1d 86       	std	Y+13, r1	; 0x0d
    1614:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	8f 87       	std	Y+15, r24	; 0x0f
    161c:	98 8b       	std	Y+16, r25	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    161e:	df 91       	pop	r29
    1620:	cf 91       	pop	r28
    1622:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    1624:	30 de       	rcall	.-928    	; 0x1286 <micros>
    1626:	ed cf       	rjmp	.-38     	; 0x1602 <Ticker::start()+0x1a>

00001628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>:
BUZZ_INTERVAL():
    1628:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:62
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
{
  BUZZ.interval(i);
    162a:	bc 01       	movw	r22, r24
    162c:	99 0f       	add	r25, r25
    162e:	88 0b       	sbc	r24, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    1630:	99 0b       	sbc	r25, r25
interval():
    1632:	20 91 17 2b 	lds	r18, 0x2B17	; 0x802b17 <BUZZ+0x9>
    1636:	30 91 18 2b 	lds	r19, 0x2B18	; 0x802b18 <BUZZ+0xa>
    163a:	23 2b       	or	r18, r19
    163c:	21 f4       	brne	.+8      	; 0x1646 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]+0x1e>
    163e:	28 ee       	ldi	r18, 0xE8	; 232
    1640:	33 e0       	ldi	r19, 0x03	; 3
    1642:	0e 94 36 3a 	call	0x746c	; 0x746c <__usmulhisi3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    1646:	60 93 0f 2b 	sts	0x2B0F, r22	; 0x802b0f <BUZZ+0x1>
    164a:	70 93 10 2b 	sts	0x2B10, r23	; 0x802b10 <BUZZ+0x2>
    164e:	80 93 11 2b 	sts	0x2B11, r24	; 0x802b11 <BUZZ+0x3>
    1652:	90 93 12 2b 	sts	0x2B12, r25	; 0x802b12 <BUZZ+0x4>
digitalWrite():
    1656:	61 e0       	ldi	r22, 0x01	; 1
    1658:	85 e1       	ldi	r24, 0x15	; 21
    165a:	da dc       	rcall	.-1612   	; 0x1010 <digitalWrite.part.2>
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    165c:	8e e0       	ldi	r24, 0x0E	; 14
    165e:	9b e2       	ldi	r25, 0x2B	; 43
    1660:	c3 cf       	rjmp	.-122    	; 0x15e8 <Ticker::start()>

00001662 <OneButton::tick()>:
tick():
    1662:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    1664:	df 92       	push	r13
    1666:	ef 92       	push	r14
    1668:	ff 92       	push	r15
    166a:	0f 93       	push	r16
    166c:	1f 93       	push	r17
    166e:	cf 93       	push	r28
    1670:	df 93       	push	r29
    1672:	ec 01       	movw	r28, r24
    1674:	88 81       	ld	r24, Y
digitalRead():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    1676:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1678:	f8 f4       	brcc	.+62     	; 0x16b8 <OneButton::tick()+0x56>
    167a:	e5 dd       	rcall	.-1078   	; 0x1246 <digitalRead.part.3>
tick():
    167c:	08 2f       	mov	r16, r24
    167e:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    1680:	2b de       	rcall	.-938    	; 0x12d8 <millis>
    1682:	29 8d       	ldd	r18, Y+25	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    1684:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1686:	21 15       	cp	r18, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    1688:	31 05       	cpc	r19, r1
    168a:	c1 f4       	brne	.+48     	; 0x16bc <OneButton::tick()+0x5a>
    168c:	2a 85       	ldd	r18, Y+10	; 0x0a
    168e:	3b 85       	ldd	r19, Y+11	; 0x0b
    1690:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    1692:	31 07       	cpc	r19, r17
    1694:	41 f4       	brne	.+16     	; 0x16a6 <OneButton::tick()+0x44>
    1696:	21 e0       	ldi	r18, 0x01	; 1
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	29 8f       	std	Y+25, r18	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    169c:	3a 8f       	std	Y+26, r19	; 0x1a
    169e:	6b 8f       	std	Y+27, r22	; 0x1b
    16a0:	7c 8f       	std	Y+28, r23	; 0x1c
    16a2:	8d 8f       	std	Y+29, r24	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    16a4:	9e 8f       	std	Y+30, r25	; 0x1e
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    16ac:	0f 91       	pop	r16
    16ae:	ff 90       	pop	r15
    16b0:	ef 90       	pop	r14
    16b2:	df 90       	pop	r13
    16b4:	cf 90       	pop	r12
    16b6:	08 95       	ret
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	e0 cf       	rjmp	.-64     	; 0x167c <OneButton::tick()+0x1a>
    16bc:	21 30       	cpi	r18, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    16be:	31 05       	cpc	r19, r1
    16c0:	09 f0       	breq	.+2      	; 0x16c4 <OneButton::tick()+0x62>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    16c2:	51 c0       	rjmp	.+162    	; 0x1766 <OneButton::tick()+0x104>
    16c4:	28 85       	ldd	r18, Y+8	; 0x08
    16c6:	39 85       	ldd	r19, Y+9	; 0x09
    16c8:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    16ca:	31 07       	cpc	r19, r17
    16cc:	e9 f4       	brne	.+58     	; 0x1708 <OneButton::tick()+0xa6>
    16ce:	0b 8d       	ldd	r16, Y+27	; 0x1b
    16d0:	1c 8d       	ldd	r17, Y+28	; 0x1c
    16d2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16d4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16d6:	ab 01       	movw	r20, r22
    16d8:	bc 01       	movw	r22, r24
    16da:	40 1b       	sub	r20, r16
    16dc:	51 0b       	sbc	r21, r17
    16de:	62 0b       	sbc	r22, r18
    16e0:	73 0b       	sbc	r23, r19
    16e2:	8e 81       	ldd	r24, Y+6	; 0x06
    16e4:	9f 81       	ldd	r25, Y+7	; 0x07
    16e6:	09 2e       	mov	r0, r25
    16e8:	00 0c       	add	r0, r0
    16ea:	aa 0b       	sbc	r26, r26
    16ec:	bb 0b       	sbc	r27, r27
    16ee:	48 17       	cp	r20, r24
    16f0:	59 07       	cpc	r21, r25
    16f2:	6a 07       	cpc	r22, r26
    16f4:	7b 07       	cpc	r23, r27
    16f6:	18 f4       	brcc	.+6      	; 0x16fe <OneButton::tick()+0x9c>
    16f8:	19 8e       	std	Y+25, r1	; 0x19
    16fa:	1a 8e       	std	Y+26, r1	; 0x1a
    16fc:	d4 cf       	rjmp	.-88     	; 0x16a6 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    16fe:	82 e0       	ldi	r24, 0x02	; 2
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	89 8f       	std	Y+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    1704:	9a 8f       	std	Y+26, r25	; 0x1a
    1706:	cf cf       	rjmp	.-98     	; 0x16a6 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    1708:	2a 85       	ldd	r18, Y+10	; 0x0a
    170a:	3b 85       	ldd	r19, Y+11	; 0x0b
    170c:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    170e:	31 07       	cpc	r19, r17
    1710:	51 f6       	brne	.-108    	; 0x16a6 <OneButton::tick()+0x44>
    1712:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1714:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1716:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1718:	3e 8d       	ldd	r19, Y+30	; 0x1e
    171a:	ab 01       	movw	r20, r22
    171c:	bc 01       	movw	r22, r24
    171e:	40 1b       	sub	r20, r16
    1720:	51 0b       	sbc	r21, r17
    1722:	62 0b       	sbc	r22, r18
    1724:	73 0b       	sbc	r23, r19
    1726:	8c 81       	ldd	r24, Y+4	; 0x04
    1728:	9d 81       	ldd	r25, Y+5	; 0x05
    172a:	09 2e       	mov	r0, r25
    172c:	00 0c       	add	r0, r0
    172e:	aa 0b       	sbc	r26, r26
    1730:	bb 0b       	sbc	r27, r27
    1732:	84 17       	cp	r24, r20
    1734:	95 07       	cpc	r25, r21
    1736:	a6 07       	cpc	r26, r22
    1738:	b7 07       	cpc	r27, r23
    173a:	08 f0       	brcs	.+2      	; 0x173e <OneButton::tick()+0xdc>
    173c:	b4 cf       	rjmp	.-152    	; 0x16a6 <OneButton::tick()+0x44>
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	8c 87       	std	Y+12, r24	; 0x0c
    1742:	e9 89       	ldd	r30, Y+17	; 0x11
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    1744:	fa 89       	ldd	r31, Y+18	; 0x12
    1746:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    1748:	09 f0       	breq	.+2      	; 0x174c <OneButton::tick()+0xea>
    174a:	09 95       	icall
    174c:	eb 89       	ldd	r30, Y+19	; 0x13
    174e:	fc 89       	ldd	r31, Y+20	; 0x14
    1750:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    1752:	09 f0       	breq	.+2      	; 0x1756 <OneButton::tick()+0xf4>
    1754:	09 95       	icall
    1756:	ef 89       	ldd	r30, Y+23	; 0x17
    1758:	f8 8d       	ldd	r31, Y+24	; 0x18
    175a:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    175c:	09 f0       	breq	.+2      	; 0x1760 <OneButton::tick()+0xfe>
    175e:	09 95       	icall
    1760:	86 e0       	ldi	r24, 0x06	; 6
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	ce cf       	rjmp	.-100    	; 0x1702 <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    1766:	22 30       	cpi	r18, 0x02	; 2
    1768:	31 05       	cpc	r19, r1
    176a:	19 f5       	brne	.+70     	; 0x17b2 <OneButton::tick()+0x150>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    176c:	cb 8c       	ldd	r12, Y+27	; 0x1b
    176e:	dc 8c       	ldd	r13, Y+28	; 0x1c
    1770:	ed 8c       	ldd	r14, Y+29	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    1772:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1774:	6c 19       	sub	r22, r12
    1776:	7d 09       	sbc	r23, r13
    1778:	8e 09       	sbc	r24, r14
    177a:	9f 09       	sbc	r25, r15
    177c:	ca 80       	ldd	r12, Y+2	; 0x02
    177e:	db 80       	ldd	r13, Y+3	; 0x03
    1780:	0d 2c       	mov	r0, r13
    1782:	00 0c       	add	r0, r0
    1784:	ee 08       	sbc	r14, r14
    1786:	ff 08       	sbc	r15, r15
    1788:	c6 16       	cp	r12, r22
    178a:	d7 06       	cpc	r13, r23
    178c:	e8 06       	cpc	r14, r24
    178e:	f9 06       	cpc	r15, r25
    1790:	38 f4       	brcc	.+14     	; 0x17a0 <OneButton::tick()+0x13e>
    1792:	ed 85       	ldd	r30, Y+13	; 0x0d
    1794:	fe 85       	ldd	r31, Y+14	; 0x0e
    1796:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    1798:	09 f4       	brne	.+2      	; 0x179c <OneButton::tick()+0x13a>
    179a:	ae cf       	rjmp	.-164    	; 0x16f8 <OneButton::tick()+0x96>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    179c:	09 95       	icall
    179e:	ac cf       	rjmp	.-168    	; 0x16f8 <OneButton::tick()+0x96>
    17a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    17a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    17a4:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    17a6:	91 07       	cpc	r25, r17
    17a8:	09 f0       	breq	.+2      	; 0x17ac <OneButton::tick()+0x14a>
    17aa:	7d cf       	rjmp	.-262    	; 0x16a6 <OneButton::tick()+0x44>
    17ac:	83 e0       	ldi	r24, 0x03	; 3
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	a8 cf       	rjmp	.-176    	; 0x1702 <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    17b2:	23 30       	cpi	r18, 0x03	; 3
    17b4:	31 05       	cpc	r19, r1
    17b6:	49 f4       	brne	.+18     	; 0x17ca <OneButton::tick()+0x168>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    17b8:	88 85       	ldd	r24, Y+8	; 0x08
    17ba:	99 85       	ldd	r25, Y+9	; 0x09
    17bc:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    17be:	91 07       	cpc	r25, r17
    17c0:	09 f0       	breq	.+2      	; 0x17c4 <OneButton::tick()+0x162>
    17c2:	71 cf       	rjmp	.-286    	; 0x16a6 <OneButton::tick()+0x44>
    17c4:	ef 85       	ldd	r30, Y+15	; 0x0f
    17c6:	f8 89       	ldd	r31, Y+16	; 0x10
    17c8:	e6 cf       	rjmp	.-52     	; 0x1796 <OneButton::tick()+0x134>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    17ca:	26 30       	cpi	r18, 0x06	; 6
    17cc:	31 05       	cpc	r19, r1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <OneButton::tick()+0x170>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    17d0:	6a cf       	rjmp	.-300    	; 0x16a6 <OneButton::tick()+0x44>
    17d2:	88 85       	ldd	r24, Y+8	; 0x08
    17d4:	99 85       	ldd	r25, Y+9	; 0x09
    17d6:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    17d8:	91 07       	cpc	r25, r17
    17da:	21 f4       	brne	.+8      	; 0x17e4 <OneButton::tick()+0x182>
    17dc:	1c 86       	std	Y+12, r1	; 0x0c
    17de:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    17e0:	fe 89       	ldd	r31, Y+22	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    17e2:	d9 cf       	rjmp	.-78     	; 0x1796 <OneButton::tick()+0x134>
    17e4:	81 e0       	ldi	r24, 0x01	; 1
    17e6:	8c 87       	std	Y+12, r24	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    17e8:	ef 89       	ldd	r30, Y+23	; 0x17
    17ea:	f8 8d       	ldd	r31, Y+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    17ec:	30 97       	sbiw	r30, 0x00	; 0
    17ee:	09 f4       	brne	.+2      	; 0x17f2 <OneButton::tick()+0x190>
    17f0:	5a cf       	rjmp	.-332    	; 0x16a6 <OneButton::tick()+0x44>
    17f2:	df 91       	pop	r29
    17f4:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	ff 90       	pop	r15
    17fc:	ef 90       	pop	r14
    17fe:	df 90       	pop	r13
    1800:	cf 90       	pop	r12
    1802:	09 94       	ijmp

00001804 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
    1804:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:591
}
}

void RESET_LONG_PRESS_START()
{
  if(checkTempRaised==0)
    1808:	81 11       	cpse	r24, r1
    180a:	22 c0       	rjmp	.+68     	; 0x1850 <RESET_LONG_PRESS_START()+0x4c>
    180c:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:593
  {
  if (!LONG_PRESS )   
    1810:	81 11       	cpse	r24, r1
    1812:	16 c0       	rjmp	.+44     	; 0x1840 <RESET_LONG_PRESS_START()+0x3c>
    1814:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:595
  {
  if(!ENTER_BUT)
    1818:	81 11       	cpse	r24, r1
    181a:	0b c0       	rjmp	.+22     	; 0x1832 <RESET_LONG_PRESS_START()+0x2e>
    181c:	10 92 43 28 	sts	0x2843, r1	; 0x802843 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:597
  {
    RST_BUTT = 0;    
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:599
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    1824:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1828:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    182c:	88 ec       	ldi	r24, 0xC8	; 200
    182e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:612
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    1830:	fb ce       	rjmp	.-522    	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    1832:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
    1836:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:603
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
    183a:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <SET_MIN+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:604
      SET_MIN = 0;
    183e:	f6 cf       	rjmp	.-20     	; 0x182c <RESET_LONG_PRESS_START()+0x28>
    1840:	80 91 46 28 	lds	r24, 0x2846	; 0x802846 <Service_Menu>
    1844:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:609
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    1846:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <Service_Menu>
    184a:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <LONG_PRESS>
    184e:	ee cf       	rjmp	.-36     	; 0x182c <RESET_LONG_PRESS_START()+0x28>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:610
    LONG_PRESS = 0;
    1850:	08 95       	ret

00001852 <RESET_CLICK()>:
RESET_CLICK():
    1852:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:614
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    1856:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:559
  }
}

void RESET_CLICK()
{
  if(checkTempRaised==0)
    1858:	5e c0       	rjmp	.+188    	; 0x1916 <RESET_CLICK()+0xc4>
    185a:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    185e:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:561
  {
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    1862:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1866:	21 11       	cpse	r18, r1
    1868:	03 c0       	rjmp	.+6      	; 0x1870 <RESET_CLICK()+0x1e>
    186a:	88 30       	cpi	r24, 0x08	; 8
    186c:	91 05       	cpc	r25, r1
    186e:	29 f0       	breq	.+10     	; 0x187a <RESET_CLICK()+0x28>
    1870:	ac 01       	movw	r20, r24
    1872:	4d 7f       	andi	r20, 0xFD	; 253
    1874:	4c 30       	cpi	r20, 0x0C	; 12
    1876:	51 05       	cpc	r21, r1
    1878:	b9 f5       	brne	.+110    	; 0x18e8 <RESET_CLICK()+0x96>
    187a:	01 97       	sbiw	r24, 0x01	; 1
    187c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:564
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    1880:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1884:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
    1888:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:575
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    188a:	2b c0       	rjmp	.+86     	; 0x18e2 <RESET_CLICK()+0x90>
    188c:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
    1890:	22 23       	and	r18, r18
    1892:	d9 f1       	breq	.+118    	; 0x190a <RESET_CLICK()+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:577
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    1894:	82 30       	cpi	r24, 0x02	; 2
    1896:	c9 f5       	brne	.+114    	; 0x190a <RESET_CLICK()+0xb8>
    1898:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
    189c:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:579
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    18a0:	85 30       	cpi	r24, 0x05	; 5
    18a2:	f9 f4       	brne	.+62     	; 0x18e2 <RESET_CLICK()+0x90>
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	40 e8       	ldi	r20, 0x80	; 128
    18aa:	5f e3       	ldi	r21, 0x3F	; 63
    18ac:	60 91 ac 28 	lds	r22, 0x28AC	; 0x8028ac <RATE_OF_HEATING>
    18b0:	70 91 ad 28 	lds	r23, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x1>
    18b4:	80 91 ae 28 	lds	r24, 0x28AE	; 0x8028ae <RATE_OF_HEATING+0x2>
    18b8:	90 91 af 28 	lds	r25, 0x28AF	; 0x8028af <RATE_OF_HEATING+0x3>
    18bc:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    18c0:	87 fd       	sbrc	r24, 7
    18c2:	0f c0       	rjmp	.+30     	; 0x18e2 <RESET_CLICK()+0x90>
    18c4:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    18c8:	88 23       	and	r24, r24
    18ca:	59 f0       	breq	.+22     	; 0x18e2 <RESET_CLICK()+0x90>
    18cc:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:581
   {
     RATE_OF_HEATING =0;
    18d0:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x1>
    18d4:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <RATE_OF_HEATING+0x2>
    18d8:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <RATE_OF_HEATING+0x3>
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:582
     CHECK_RATE_OF_HEATING =1;
    18e2:	82 e3       	ldi	r24, 0x32	; 50
    18e4:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:585
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    18e6:	a0 ce       	rjmp	.-704    	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    18e8:	8b 30       	cpi	r24, 0x0B	; 11
    18ea:	91 05       	cpc	r25, r1
    18ec:	11 f0       	breq	.+4      	; 0x18f2 <RESET_CLICK()+0xa0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:567
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    18ee:	0d 97       	sbiw	r24, 0x0d	; 13
    18f0:	21 f4       	brne	.+8      	; 0x18fa <RESET_CLICK()+0xa8>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:569
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat )    
          Mode_Button_Single_Press_In_Settings =1;
    18f8:	c5 cf       	rjmp	.-118    	; 0x1884 <RESET_CLICK()+0x32>
    18fa:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    18fe:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:572
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    1900:	09 f4       	brne	.+2      	; 0x1904 <RESET_CLICK()+0xb2>
    1902:	c0 cf       	rjmp	.-128    	; 0x1884 <RESET_CLICK()+0x32>
    1904:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    1908:	bd cf       	rjmp	.-134    	; 0x1884 <RESET_CLICK()+0x32>
    190a:	81 50       	subi	r24, 0x01	; 1
    190c:	84 30       	cpi	r24, 0x04	; 4
    190e:	30 f6       	brcc	.-116    	; 0x189c <RESET_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:578
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    1910:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <ENTER_BUT>
    1914:	c3 cf       	rjmp	.-122    	; 0x189c <RESET_CLICK()+0x4a>
    1916:	08 95       	ret

00001918 <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    1918:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:587
     CHECK_RATE_OF_HEATING =1;
   }
  }
   Tick.BUZZ_INTERVAL(50); 
}
}
    191c:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:501
}
}

void DEC_LONGPRESS()
{ 
  if(checkTempRaised==0)
    191e:	12 c0       	rjmp	.+36     	; 0x1944 <DEC_LONGPRESS()+0x2c>
    1920:	80 91 42 28 	lds	r24, 0x2842	; 0x802842 <but1>
    1924:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:503
  {
  if(!but1)
    1926:	0e c0       	rjmp	.+28     	; 0x1944 <DEC_LONGPRESS()+0x2c>
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:505
  {
    BLINK_STATS=1;
    192e:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
    1932:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:506
    INC5++;
    1934:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    1938:	89 31       	cpi	r24, 0x19	; 25
    193a:	24 f0       	brlt	.+8      	; 0x1944 <DEC_LONGPRESS()+0x2c>
    193c:	0e 94 7d 02 	call	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:507
    if (INC5 >= 25)
    1940:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:509
    {
      Butn.SET_CHANGE_DOWN();
    1944:	08 95       	ret

00001946 <DEC_CLICK()>:
DEC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:510
      INC5 = 0;
    1946:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:514
    }
  }
}
}
    194a:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:461
  }
}

void DEC_CLICK()
{ 
  if(checkTempRaised==0)
    194c:	5a c0       	rjmp	.+180    	; 0x1a02 <DEC_CLICK()+0xbc>
    194e:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
    1952:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:463
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1954:	09 f4       	brne	.+2      	; 0x1958 <DEC_CLICK()+0x12>
    1956:	53 c0       	rjmp	.+166    	; 0x19fe <DEC_CLICK()+0xb8>
    1958:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    195c:	81 11       	cpse	r24, r1
    195e:	4f c0       	rjmp	.+158    	; 0x19fe <DEC_CLICK()+0xb8>
    1960:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1964:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1968:	20 91 46 28 	lds	r18, 0x2846	; 0x802846 <Service_Menu>
    196c:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:465
  {
    if(!Service_Menu){
    196e:	19 c0       	rjmp	.+50     	; 0x19a2 <DEC_CLICK()+0x5c>
    1970:	01 96       	adiw	r24, 0x01	; 1
    1972:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:466
        SELECTION_PARAMETER++;
    1976:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    197a:	20 91 0a 29 	lds	r18, 0x290A	; 0x80290a <select_product_type>
    197e:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:468

      if(select_product_type )
    1980:	39 f0       	breq	.+14     	; 0x1990 <DEC_CLICK()+0x4a>
    1982:	05 97       	sbiw	r24, 0x05	; 5
    1984:	f4 f1       	brlt	.+124    	; 0x1a02 <DEC_CLICK()+0xbc>
    1986:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:470
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
    198a:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    198e:	08 95       	ret
    1990:	05 97       	sbiw	r24, 0x05	; 5
    1992:	bc f1       	brlt	.+110    	; 0x1a02 <DEC_CLICK()+0xbc>
    1994:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:474
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    199c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:480
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
    19a0:	08 95       	ret
    19a2:	86 30       	cpi	r24, 0x06	; 6
    19a4:	91 05       	cpc	r25, r1
    19a6:	19 f4       	brne	.+6      	; 0x19ae <DEC_CLICK()+0x68>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:479
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
    19a8:	88 e0       	ldi	r24, 0x08	; 8
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	f5 cf       	rjmp	.-22     	; 0x1998 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:480
                   SELECTION_PARAMETER = Cal1_Point;
    19ae:	20 91 b0 28 	lds	r18, 0x28B0	; 0x8028b0 <CAL2_START>
    19b2:	89 30       	cpi	r24, 0x09	; 9
    19b4:	91 05       	cpc	r25, r1
    19b6:	39 f4       	brne	.+14     	; 0x19c6 <DEC_CLICK()+0x80>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:481
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    19b8:	8b e0       	ldi	r24, 0x0B	; 11
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:482
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
    19be:	ec cf       	rjmp	.-40     	; 0x1998 <DEC_CLICK()+0x52>
    19c0:	80 e1       	ldi	r24, 0x10	; 16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:481
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	e9 cf       	rjmp	.-46     	; 0x1998 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:484
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Slow_Fast_Heating;
    19c6:	21 11       	cpse	r18, r1
    19c8:	06 c0       	rjmp	.+12     	; 0x19d6 <DEC_CLICK()+0x90>
    19ca:	89 30       	cpi	r24, 0x09	; 9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:483
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
    19cc:	91 05       	cpc	r25, r1
    19ce:	4c f0       	brlt	.+18     	; 0x19e2 <DEC_CLICK()+0x9c>
    19d0:	80 31       	cpi	r24, 0x10	; 16
    19d2:	91 05       	cpc	r25, r1
    19d4:	ac f3       	brlt	.-22     	; 0x19c0 <DEC_CLICK()+0x7a>
    19d6:	80 31       	cpi	r24, 0x10	; 16
    19d8:	91 05       	cpc	r25, r1
    19da:	19 f4       	brne	.+6      	; 0x19e2 <DEC_CLICK()+0x9c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:485
                       SELECTION_PARAMETER = Slow_Fast_Heating;
      else if(SELECTION_PARAMETER ==  Slow_Fast_Heating)            
    19dc:	81 e1       	ldi	r24, 0x11	; 17
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	db cf       	rjmp	.-74     	; 0x1998 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:486
              SELECTION_PARAMETER = Log;                  
    19e2:	81 31       	cpi	r24, 0x11	; 17
    19e4:	91 05       	cpc	r25, r1
    19e6:	19 f4       	brne	.+6      	; 0x19ee <DEC_CLICK()+0xa8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:487
      else if(SELECTION_PARAMETER ==  Log)            
    19e8:	82 e1       	ldi	r24, 0x12	; 18
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	d5 cf       	rjmp	.-86     	; 0x1998 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:488
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
    19ee:	82 31       	cpi	r24, 0x12	; 18
    19f0:	91 05       	cpc	r25, r1
    19f2:	1c f0       	brlt	.+6      	; 0x19fa <DEC_CLICK()+0xb4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:489
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
    19f4:	85 e0       	ldi	r24, 0x05	; 5
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	cf cf       	rjmp	.-98     	; 0x1998 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:490
              SELECTION_PARAMETER = Product_Selection_Parameter;
    19fa:	01 96       	adiw	r24, 0x01	; 1
    19fc:	cd cf       	rjmp	.-102    	; 0x1998 <DEC_CLICK()+0x52>
    19fe:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:492
      else                                                 
             SELECTION_PARAMETER++;             
    1a02:	08 95       	ret

00001a04 <INC_LONGPRESS()>:
INC_LONGPRESS():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:495
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
    1a04:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:497
}
}
    1a08:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:435
}
}

void INC_LONGPRESS()
{
  if(checkTempRaised==0)
    1a0a:	12 c0       	rjmp	.+36     	; 0x1a30 <INC_LONGPRESS()+0x2c>
    1a0c:	80 91 42 28 	lds	r24, 0x2842	; 0x802842 <but1>
    1a10:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:437
  {
  if(!but1)
    1a12:	0e c0       	rjmp	.+28     	; 0x1a30 <INC_LONGPRESS()+0x2c>
    1a14:	81 e0       	ldi	r24, 0x01	; 1
    1a16:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:439
  {
    BLINK_STATS=1;
    1a1a:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
    1a1e:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:440
    INC5++;
    1a20:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    1a24:	89 31       	cpi	r24, 0x19	; 25
    1a26:	24 f0       	brlt	.+8      	; 0x1a30 <INC_LONGPRESS()+0x2c>
    1a28:	0e 94 93 01 	call	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:441
    if (INC5 >= 25)
    1a2c:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:443
    {
      Butn.SET_CHANGE_UP();
    1a30:	08 95       	ret

00001a32 <INC_CLICK()>:
INC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:444
      INC5 = 0;
    1a32:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:448
    }
  }
}
}
    1a36:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:390
  button4.tick();  
}

void INC_CLICK()
{ 
  if(checkTempRaised==0)
    1a38:	26 c0       	rjmp	.+76     	; 0x1a86 <INC_CLICK()+0x54>
    1a3a:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
    1a3e:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:392
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1a40:	09 f4       	brne	.+2      	; 0x1a44 <INC_CLICK()+0x12>
    1a42:	45 c0       	rjmp	.+138    	; 0x1ace <INC_CLICK()+0x9c>
    1a44:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    1a48:	81 11       	cpse	r24, r1
    1a4a:	41 c0       	rjmp	.+130    	; 0x1ace <INC_CLICK()+0x9c>
    1a4c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1a50:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a54:	20 91 46 28 	lds	r18, 0x2846	; 0x802846 <Service_Menu>
    1a58:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:394
  {    
    if(!Service_Menu)
    1a5a:	16 c0       	rjmp	.+44     	; 0x1a88 <INC_CLICK()+0x56>
    1a5c:	01 97       	sbiw	r24, 0x01	; 1
    1a5e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:396
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
    1a62:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a66:	20 91 0a 29 	lds	r18, 0x290A	; 0x80290a <select_product_type>
    1a6a:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:397
      if(select_product_type )
    1a6c:	49 f0       	breq	.+18     	; 0x1a80 <INC_CLICK()+0x4e>
    1a6e:	97 ff       	sbrs	r25, 7
    1a70:	0a c0       	rjmp	.+20     	; 0x1a86 <INC_CLICK()+0x54>
    1a72:	84 e0       	ldi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:399
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1a7a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:409
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
    1a7e:	08 95       	ret
    1a80:	18 16       	cp	r1, r24
    1a82:	19 06       	cpc	r1, r25
    1a84:	b4 f7       	brge	.-20     	; 0x1a72 <INC_CLICK()+0x40>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:403
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
    1a86:	08 95       	ret
    1a88:	88 30       	cpi	r24, 0x08	; 8
    1a8a:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:431
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
}
    1a8c:	19 f4       	brne	.+6      	; 0x1a94 <INC_CLICK()+0x62>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:408
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
    1a8e:	86 e0       	ldi	r24, 0x06	; 6
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	f1 cf       	rjmp	.-30     	; 0x1a76 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:409
                              SELECTION_PARAMETER = Calibration_Selection;
    1a94:	8b 30       	cpi	r24, 0x0B	; 11
    1a96:	91 05       	cpc	r25, r1
    1a98:	19 f4       	brne	.+6      	; 0x1aa0 <INC_CLICK()+0x6e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:411
                              
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
    1a9a:	89 e0       	ldi	r24, 0x09	; 9
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	eb cf       	rjmp	.-42     	; 0x1a76 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:412
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
    1aa0:	81 31       	cpi	r24, 0x11	; 17
    1aa2:	91 05       	cpc	r25, r1
    1aa4:	19 f4       	brne	.+6      	; 0x1aac <INC_CLICK()+0x7a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:414
                                
      else if(SELECTION_PARAMETER == Log)   
    1aa6:	80 e1       	ldi	r24, 0x10	; 16
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	e5 cf       	rjmp	.-54     	; 0x1a76 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:415
                                SELECTION_PARAMETER = Slow_Fast_Heating;
    1aac:	82 31       	cpi	r24, 0x12	; 18
    1aae:	91 05       	cpc	r25, r1
    1ab0:	19 f4       	brne	.+6      	; 0x1ab8 <INC_CLICK()+0x86>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:417
                                                         
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
    1ab2:	81 e1       	ldi	r24, 0x11	; 17
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	df cf       	rjmp	.-66     	; 0x1a76 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:418
                                SELECTION_PARAMETER = Log;
    1ab8:	80 31       	cpi	r24, 0x10	; 16
    1aba:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:420
                                
      else if(SELECTION_PARAMETER == Slow_Fast_Heating)   
    1abc:	71 f3       	breq	.-36     	; 0x1a9a <INC_CLICK()+0x68>
    1abe:	86 30       	cpi	r24, 0x06	; 6
    1ac0:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:423
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;  
                                                              
      else if (SELECTION_PARAMETER < Calibration_Selection)
    1ac2:	1c f4       	brge	.+6      	; 0x1aca <INC_CLICK()+0x98>
    1ac4:	82 e1       	ldi	r24, 0x12	; 18
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:424
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
    1ac8:	d6 cf       	rjmp	.-84     	; 0x1a76 <INC_CLICK()+0x44>
    1aca:	01 97       	sbiw	r24, 0x01	; 1
    1acc:	d4 cf       	rjmp	.-88     	; 0x1a76 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:425
      else                      SELECTION_PARAMETER--;      
    1ace:	0c 94 93 01 	jmp	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>

00001ad2 <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:429
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
    1ad2:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:363
}
}

void MODE_LONG_PRESS_START()
{ 
  if(checkTempRaised==0)
    1ad6:	81 11       	cpse	r24, r1
    1ad8:	25 c0       	rjmp	.+74     	; 0x1b24 <MODE_LONG_PRESS_START()+0x52>
    1ada:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:365
  {
  if (!ENTER_BUT)
    1ade:	81 11       	cpse	r24, r1
    1ae0:	17 c0       	rjmp	.+46     	; 0x1b10 <MODE_LONG_PRESS_START()+0x3e>
    1ae2:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:367
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    1ae6:	81 11       	cpse	r24, r1
    1ae8:	13 c0       	rjmp	.+38     	; 0x1b10 <MODE_LONG_PRESS_START()+0x3e>
    1aea:	8e e5       	ldi	r24, 0x5E	; 94
    1aec:	91 e0       	ldi	r25, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:369
    {
      i = 350;
    1aee:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    1af2:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    1af6:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:370
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    1afa:	88 23       	and	r24, r24
    1afc:	61 f0       	breq	.+24     	; 0x1b16 <MODE_LONG_PRESS_START()+0x44>
    1afe:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1b02:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:372
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	80 93 50 29 	sts	0x2950, r24	; 0x802950 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:373
      RST_BUTT = 1;
    1b0c:	80 93 43 28 	sts	0x2843, r24	; 0x802843 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:376
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
    1b10:	88 ec       	ldi	r24, 0xC8	; 200
    1b12:	90 e0       	ldi	r25, 0x00	; 0
    1b14:	89 cd       	rjmp	.-1262   	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:371
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    1b16:	81 e0       	ldi	r24, 0x01	; 1
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1b1e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1b22:	f1 cf       	rjmp	.-30     	; 0x1b06 <MODE_LONG_PRESS_START()+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:378
      RST_BUTT = 1;
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    1b24:	08 95       	ret

00001b26 <UartClass::begin(unsigned long)>:
begin():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1b26:	dc 01       	movw	r26, r24
    1b28:	ed 91       	ld	r30, X+
    1b2a:	fc 91       	ld	r31, X
    1b2c:	04 88       	ldd	r0, Z+20	; 0x14
    1b2e:	f5 89       	ldd	r31, Z+21	; 0x15
    1b30:	e0 2d       	mov	r30, r0
    1b32:	23 e0       	ldi	r18, 0x03	; 3
    1b34:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1b36:	09 94       	ijmp

00001b38 <STOP_BUZZER()>:
stop():
    1b38:	ee e0       	ldi	r30, 0x0E	; 14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1b3a:	fb e2       	ldi	r31, 0x2B	; 43
    1b3c:	10 82       	st	Z, r1
    1b3e:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1b40:	14 86       	std	Z+12, r1	; 0x0c
    1b42:	15 86       	std	Z+13, r1	; 0x0d
    1b44:	16 86       	std	Z+14, r1	; 0x0e
    1b46:	17 86       	std	Z+15, r1	; 0x0f
    1b48:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
    1b4a:	60 e0       	ldi	r22, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1b4c:	85 e1       	ldi	r24, 0x15	; 21
    1b4e:	60 ca       	rjmp	.-2880   	; 0x1010 <digitalWrite.part.2>

00001b50 <STOP_BUZZER1()>:
STOP_BUZZER1():
    1b50:	88 ed       	ldi	r24, 0xD8	; 216
    1b52:	9a e2       	ldi	r25, 0x2A	; 42
    1b54:	49 dd       	rcall	.-1390   	; 0x15e8 <Ticker::start()>
digitalWrite():
    1b56:	61 e0       	ldi	r22, 0x01	; 1
    1b58:	85 e1       	ldi	r24, 0x15	; 21
    1b5a:	5a ca       	rjmp	.-2892   	; 0x1010 <digitalWrite.part.2>

00001b5c <STOP_BUZZER2()>:
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1b5c:	60 e0       	ldi	r22, 0x00	; 0
    1b5e:	85 e1       	ldi	r24, 0x15	; 21
    1b60:	57 da       	rcall	.-2898   	; 0x1010 <digitalWrite.part.2>
STOP_BUZZER2():
    1b62:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <REPETATION_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1b66:	88 23       	and	r24, r24
    1b68:	49 f0       	breq	.+18     	; 0x1b7c <STOP_BUZZER2()+0x20>
    1b6a:	80 91 b7 28 	lds	r24, 0x28B7	; 0x8028b7 <FOR_REP>
    1b6e:	90 91 b8 28 	lds	r25, 0x28B8	; 0x8028b8 <FOR_REP+0x1>
    1b72:	01 96       	adiw	r24, 0x01	; 1
    1b74:	80 93 b7 28 	sts	0x28B7, r24	; 0x8028b7 <FOR_REP>
    1b78:	90 93 b8 28 	sts	0x28B8, r25	; 0x8028b8 <FOR_REP+0x1>
    1b7c:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <FOR_REP2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:71
   FOR_REP2++;
    1b80:	90 91 ba 28 	lds	r25, 0x28BA	; 0x8028ba <FOR_REP2+0x1>
    1b84:	01 96       	adiw	r24, 0x01	; 1
    1b86:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <FOR_REP2>
    1b8a:	90 93 ba 28 	sts	0x28BA, r25	; 0x8028ba <FOR_REP2+0x1>
    1b8e:	08 95       	ret

00001b90 <LED_off()>:
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:72
}
    1b90:	60 e0       	ldi	r22, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:55
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1b92:	8a e1       	ldi	r24, 0x1A	; 26
    1b94:	3d da       	rcall	.-2950   	; 0x1010 <digitalWrite.part.2>
LED_off():
    1b96:	8d eb       	ldi	r24, 0xBD	; 189
    1b98:	9a e2       	ldi	r25, 0x2A	; 42
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    1b9a:	26 cd       	rjmp	.-1460   	; 0x15e8 <Ticker::start()>

00001b9c <LED_on()>:
digitalWrite():
    1b9c:	61 e0       	ldi	r22, 0x01	; 1
    1b9e:	8a e1       	ldi	r24, 0x1A	; 26
    1ba0:	37 da       	rcall	.-2962   	; 0x1010 <digitalWrite.part.2>
LED_on():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1ba2:	80 91 b1 28 	lds	r24, 0x28B1	; 0x8028b1 <Blinking_Freq>
    1ba6:	8f 5f       	subi	r24, 0xFF	; 255
    1ba8:	80 93 b1 28 	sts	0x28B1, r24	; 0x8028b1 <Blinking_Freq>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:51
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    1bac:	08 95       	ret

00001bae <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    1bae:	8f 92       	push	r8
    1bb0:	9f 92       	push	r9
    1bb2:	af 92       	push	r10
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Tick.cpp:52
}
    1bb4:	bf 92       	push	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:39
{  
  TEMP_UPDATE.start();
}

void RTD_TEMP_CAL()
{
    1bb6:	cf 92       	push	r12
    1bb8:	df 92       	push	r13
    1bba:	ef 92       	push	r14
    1bbc:	ff 92       	push	r15
    1bbe:	cf 93       	push	r28
    1bc0:	df 93       	push	r29
    1bc2:	c0 91 24 28 	lds	r28, 0x2824	; 0x802824 <sample>
    1bc6:	d0 91 25 28 	lds	r29, 0x2825	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:40
    sample++;
    1bca:	21 96       	adiw	r28, 0x01	; 1
    1bcc:	c0 93 24 28 	sts	0x2824, r28	; 0x802824 <sample>
    1bd0:	d0 93 25 28 	sts	0x2825, r29	; 0x802825 <sample+0x1>
analogRead():
    1bd4:	81 e0       	ldi	r24, 0x01	; 1
    1bd6:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1bda:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1bde:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1be2:	80 ff       	sbrs	r24, 0
    1be4:	fc cf       	rjmp	.-8      	; 0x1bde <RTD_TEMP_CAL()+0x30>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1be6:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1bea:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1bee:	07 2e       	mov	r0, r23
    1bf0:	00 0c       	add	r0, r0
    1bf2:	88 0b       	sbc	r24, r24
    1bf4:	99 0b       	sbc	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:41
    AvgVout = analogRead(A1);
    1bf6:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    1bfa:	20 91 20 28 	lds	r18, 0x2820	; 0x802820 <TotalVout>
    1bfe:	30 91 21 28 	lds	r19, 0x2821	; 0x802821 <TotalVout+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:42
    TotalVout  += AvgVout ;  // Vout;
    1c02:	40 91 22 28 	lds	r20, 0x2822	; 0x802822 <TotalVout+0x2>
    1c06:	50 91 23 28 	lds	r21, 0x2823	; 0x802823 <TotalVout+0x3>
    1c0a:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1c0e:	6b 01       	movw	r12, r22
    1c10:	7c 01       	movw	r14, r24
    1c12:	c0 92 20 28 	sts	0x2820, r12	; 0x802820 <TotalVout>
    1c16:	d0 92 21 28 	sts	0x2821, r13	; 0x802821 <TotalVout+0x1>
    1c1a:	e0 92 22 28 	sts	0x2822, r14	; 0x802822 <TotalVout+0x2>
    1c1e:	f0 92 23 28 	sts	0x2823, r15	; 0x802823 <TotalVout+0x3>
    1c22:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    1c26:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:43
    if(sample >= avrage_val)
    1c2a:	c6 17       	cp	r28, r22
    1c2c:	d7 07       	cpc	r29, r23
    1c2e:	0c f4       	brge	.+2      	; 0x1c32 <RTD_TEMP_CAL()+0x84>
    1c30:	76 c0       	rjmp	.+236    	; 0x1d1e <RTD_TEMP_CAL()+0x170>
    1c32:	07 2e       	mov	r0, r23
    1c34:	00 0c       	add	r0, r0
    1c36:	88 0b       	sbc	r24, r24
    1c38:	99 0b       	sbc	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:45
    {
      TotalVout /= avrage_val;
    1c3a:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    1c3e:	9b 01       	movw	r18, r22
    1c40:	ac 01       	movw	r20, r24
    1c42:	c7 01       	movw	r24, r14
    1c44:	b6 01       	movw	r22, r12
    1c46:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1c4a:	60 93 20 28 	sts	0x2820, r22	; 0x802820 <TotalVout>
    1c4e:	70 93 21 28 	sts	0x2821, r23	; 0x802821 <TotalVout+0x1>
    1c52:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <TotalVout+0x2>
    1c56:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <TotalVout+0x3>
    1c5a:	20 e0       	ldi	r18, 0x00	; 0
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	40 ea       	ldi	r20, 0xA0	; 160
    1c60:	50 e4       	ldi	r21, 0x40	; 64
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:46
      float Vout = ((TotalVout * Vs) / 1023.0);                                      // Voltage conversion
    1c62:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1c66:	20 e0       	ldi	r18, 0x00	; 0
    1c68:	30 ec       	ldi	r19, 0xC0	; 192
    1c6a:	4f e7       	ldi	r20, 0x7F	; 127
    1c6c:	54 e4       	ldi	r21, 0x44	; 68
    1c6e:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	30 e0       	ldi	r19, 0x00	; 0
    1c76:	40 e2       	ldi	r20, 0x20	; 32
    1c78:	51 e4       	ldi	r21, 0x41	; 65
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:47
      Vin = Vout / 10;                                                               // Gain
    1c7a:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1c7e:	28 eb       	ldi	r18, 0xB8	; 184
    1c80:	3f e8       	ldi	r19, 0x8F	; 143
    1c82:	40 e6       	ldi	r20, 0x60	; 96
    1c84:	5f e3       	ldi	r21, 0x3F	; 63
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:48
      Rt = ((Vb + Vin) * Rc) / (Vs - (Vb + Vin));   //   Va = Vb + Vin 
    1c86:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1c8a:	6b 01       	movw	r12, r22
    1c8c:	7c 01       	movw	r14, r24
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	4b ee       	ldi	r20, 0xEB	; 235
    1c94:	53 e4       	ldi	r21, 0x43	; 67
    1c96:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1c9a:	4b 01       	movw	r8, r22
    1c9c:	5c 01       	movw	r10, r24
    1c9e:	a7 01       	movw	r20, r14
    1ca0:	96 01       	movw	r18, r12
    1ca2:	60 e0       	ldi	r22, 0x00	; 0
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	80 ea       	ldi	r24, 0xA0	; 160
    1ca8:	90 e4       	ldi	r25, 0x40	; 64
    1caa:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1cae:	9b 01       	movw	r18, r22
    1cb0:	ac 01       	movw	r20, r24
    1cb2:	c5 01       	movw	r24, r10
    1cb4:	b4 01       	movw	r22, r8
    1cb6:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1cba:	20 e0       	ldi	r18, 0x00	; 0
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	48 ec       	ldi	r20, 0xC8	; 200
    1cc0:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:49
      TEMP_DEG_RAW = ((Rt / Rb) - 1) / (Alpha);         // alpha is temp coefficient for paltinum
    1cc2:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1cc6:	20 e0       	ldi	r18, 0x00	; 0
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	40 e8       	ldi	r20, 0x80	; 128
    1ccc:	5f e3       	ldi	r21, 0x3F	; 63
    1cce:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1cd2:	28 e4       	ldi	r18, 0x48	; 72
    1cd4:	30 e5       	ldi	r19, 0x50	; 80
    1cd6:	4c e7       	ldi	r20, 0x7C	; 124
    1cd8:	5b e3       	ldi	r21, 0x3B	; 59
    1cda:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1cde:	60 93 fe 28 	sts	0x28FE, r22	; 0x8028fe <TEMP_DEG_RAW>
    1ce2:	70 93 ff 28 	sts	0x28FF, r23	; 0x8028ff <TEMP_DEG_RAW+0x1>
    1ce6:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <TEMP_DEG_RAW+0x2>
    1cea:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <TEMP_DEG_RAW+0x3>
    1cee:	26 e6       	ldi	r18, 0x66	; 102
    1cf0:	36 e6       	ldi	r19, 0x66	; 102
    1cf2:	46 ee       	ldi	r20, 0xE6	; 230
    1cf4:	5f e3       	ldi	r21, 0x3F	; 63
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:52
//      Serial2.println("Product Temp."); //;Serial2.println("\t");
//      Serial2.print(TEMP_DEG_RAW); Serial2.print("\t"); Serial2.println(TEMP_DEG_RAW_1);
      TEMP_FAH_RAW = (( TEMP_DEG_RAW * 1.8 ) + 32);
    1cf6:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1cfa:	20 e0       	ldi	r18, 0x00	; 0
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	40 e0       	ldi	r20, 0x00	; 0
    1d00:	52 e4       	ldi	r21, 0x42	; 66
    1d02:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1d06:	60 93 da 28 	sts	0x28DA, r22	; 0x8028da <TEMP_FAH_RAW>
    1d0a:	70 93 db 28 	sts	0x28DB, r23	; 0x8028db <TEMP_FAH_RAW+0x1>
    1d0e:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <TEMP_FAH_RAW+0x2>
    1d12:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <TEMP_FAH_RAW+0x3>
    1d16:	10 92 24 28 	sts	0x2824, r1	; 0x802824 <sample>
    1d1a:	10 92 25 28 	sts	0x2825, r1	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:53
      sample = 0;   AvgVout = 0;   
    1d1e:	82 e3       	ldi	r24, 0x32	; 50
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:55
    }
      avrage_val = 50;
    1d26:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    1d2a:	df 91       	pop	r29
    1d2c:	cf 91       	pop	r28
    1d2e:	ff 90       	pop	r15
    1d30:	ef 90       	pop	r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Temp.cpp:56
}
    1d32:	df 90       	pop	r13
    1d34:	cf 90       	pop	r12
    1d36:	bf 90       	pop	r11
    1d38:	af 90       	pop	r10
    1d3a:	9f 90       	pop	r9
    1d3c:	8f 90       	pop	r8
    1d3e:	08 95       	ret

00001d40 <RTD_TEMP_CAL_1()>:
RTD_TEMP_CAL_1():
    1d40:	cf 93       	push	r28
    1d42:	df 93       	push	r29
    1d44:	c0 91 1e 28 	lds	r28, 0x281E	; 0x80281e <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:27
{  
  TEMP_UPDATE_1.start();
}

void RTD_TEMP_CAL_1()
{
    1d48:	d0 91 1f 28 	lds	r29, 0x281F	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:28
    sample_1++;
    1d4c:	21 96       	adiw	r28, 0x01	; 1
    1d4e:	c0 93 1e 28 	sts	0x281E, r28	; 0x80281e <sample_1>
    1d52:	d0 93 1f 28 	sts	0x281F, r29	; 0x80281f <sample_1+0x1>
analogRead():
    1d56:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1d5a:	81 e0       	ldi	r24, 0x01	; 1
    1d5c:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1d60:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1d64:	80 ff       	sbrs	r24, 0
    1d66:	fc cf       	rjmp	.-8      	; 0x1d60 <RTD_TEMP_CAL_1()+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1d68:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1d6c:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL_1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1d70:	07 2e       	mov	r0, r23
    1d72:	00 0c       	add	r0, r0
    1d74:	88 0b       	sbc	r24, r24
    1d76:	99 0b       	sbc	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:29
    AvgVout_1 = analogRead(A0);
    1d78:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    1d7c:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TotalVout_1>
    1d80:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:30
    TotalVout_1  += AvgVout_1 ; 
    1d84:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TotalVout_1+0x2>
    1d88:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TotalVout_1+0x3>
    1d8c:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1d90:	69 97       	sbiw	r28, 0x19	; 25
    1d92:	5c f4       	brge	.+22     	; 0x1daa <RTD_TEMP_CAL_1()+0x6a>
    1d94:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:31
    if(sample_1 >= avrage_val_1)
    1d98:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:30

void RTD_TEMP_CAL_1()
{
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    1d9c:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1da0:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:40
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    }
}
    1daa:	20 e0       	ldi	r18, 0x00	; 0
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:33
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    if(sample_1 >= avrage_val_1)
    {
      TotalVout_1 /= avrage_val_1;
    1db0:	51 e4       	ldi	r21, 0x41	; 65
    1db2:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    1db6:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
    1dba:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
    1dbe:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1dc2:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1dc6:	10 92 1e 28 	sts	0x281E, r1	; 0x80281e <sample_1>
    1dca:	10 92 1f 28 	sts	0x281F, r1	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Safety_probe.cpp:38
      float Vout1 = ((TotalVout_1 * Vs1) / 1023.0); // Voltage conversion
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    1dce:	ea cf       	rjmp	.-44     	; 0x1da4 <RTD_TEMP_CAL_1()+0x64>

00001dd0 <PID_RUN()>:
PID_RUN():
    1dd0:	3f 92       	push	r3
    1dd2:	4f 92       	push	r4
    1dd4:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:31
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1dd6:	6f 92       	push	r6
    1dd8:	7f 92       	push	r7
    1dda:	8f 92       	push	r8
    1ddc:	9f 92       	push	r9
    1dde:	af 92       	push	r10
    1de0:	bf 92       	push	r11
    1de2:	cf 92       	push	r12
    1de4:	df 92       	push	r13
    1de6:	ef 92       	push	r14
    1de8:	ff 92       	push	r15
    1dea:	0f 93       	push	r16
    1dec:	1f 93       	push	r17
    1dee:	cf 93       	push	r28
    1df0:	df 93       	push	r29
    1df2:	cd b7       	in	r28, 0x3d	; 61
    1df4:	de b7       	in	r29, 0x3e	; 62
    1df6:	2e 97       	sbiw	r28, 0x0e	; 14
    1df8:	cd bf       	out	0x3d, r28	; 61
    1dfa:	de bf       	out	0x3e, r29	; 62
Compute():
    1dfc:	80 91 34 2a 	lds	r24, 0x2A34	; 0x802a34 <myPID+0x3a>
    1e00:	88 23       	and	r24, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1e02:	09 f4       	brne	.+2      	; 0x1e06 <PID_RUN()+0x36>
    1e04:	29 c1       	rjmp	.+594    	; 0x2058 <PID_RUN()+0x288>
    1e06:	68 da       	rcall	.-2864   	; 0x12d8 <millis>
    1e08:	6d 83       	std	Y+5, r22	; 0x05
    1e0a:	7e 83       	std	Y+6, r23	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1e0c:	8f 83       	std	Y+7, r24	; 0x07
    1e0e:	98 87       	std	Y+8, r25	; 0x08
    1e10:	80 91 1c 2a 	lds	r24, 0x2A1C	; 0x802a1c <myPID+0x22>
    1e14:	90 91 1d 2a 	lds	r25, 0x2A1D	; 0x802a1d <myPID+0x23>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1e18:	a0 91 1e 2a 	lds	r26, 0x2A1E	; 0x802a1e <myPID+0x24>
    1e1c:	b0 91 1f 2a 	lds	r27, 0x2A1F	; 0x802a1f <myPID+0x25>
    1e20:	4d 81       	ldd	r20, Y+5	; 0x05
    1e22:	5e 81       	ldd	r21, Y+6	; 0x06
    1e24:	6f 81       	ldd	r22, Y+7	; 0x07
    1e26:	78 85       	ldd	r23, Y+8	; 0x08
    1e28:	48 1b       	sub	r20, r24
    1e2a:	59 0b       	sbc	r21, r25
    1e2c:	6a 0b       	sbc	r22, r26
    1e2e:	7b 0b       	sbc	r23, r27
    1e30:	80 91 28 2a 	lds	r24, 0x2A28	; 0x802a28 <myPID+0x2e>
    1e34:	90 91 29 2a 	lds	r25, 0x2A29	; 0x802a29 <myPID+0x2f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1e38:	a0 91 2a 2a 	lds	r26, 0x2A2A	; 0x802a2a <myPID+0x30>
    1e3c:	b0 91 2b 2a 	lds	r27, 0x2A2B	; 0x802a2b <myPID+0x31>
    1e40:	48 17       	cp	r20, r24
    1e42:	59 07       	cpc	r21, r25
    1e44:	6a 07       	cpc	r22, r26
    1e46:	7b 07       	cpc	r23, r27
    1e48:	08 f4       	brcc	.+2      	; 0x1e4c <PID_RUN()+0x7c>
    1e4a:	06 c1       	rjmp	.+524    	; 0x2058 <PID_RUN()+0x288>
    1e4c:	e0 91 16 2a 	lds	r30, 0x2A16	; 0x802a16 <myPID+0x1c>
    1e50:	f0 91 17 2a 	lds	r31, 0x2A17	; 0x802a17 <myPID+0x1d>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1e54:	80 81       	ld	r24, Z
    1e56:	91 81       	ldd	r25, Z+1	; 0x01
    1e58:	a2 81       	ldd	r26, Z+2	; 0x02
    1e5a:	b3 81       	ldd	r27, Z+3	; 0x03
    1e5c:	89 83       	std	Y+1, r24	; 0x01
    1e5e:	9a 83       	std	Y+2, r25	; 0x02
    1e60:	ab 83       	std	Y+3, r26	; 0x03
    1e62:	bc 83       	std	Y+4, r27	; 0x04
    1e64:	e0 91 1a 2a 	lds	r30, 0x2A1A	; 0x802a1a <myPID+0x20>
    1e68:	f0 91 1b 2a 	lds	r31, 0x2A1B	; 0x802a1b <myPID+0x21>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1e6c:	9c 01       	movw	r18, r24
    1e6e:	ad 01       	movw	r20, r26
    1e70:	60 81       	ld	r22, Z
    1e72:	71 81       	ldd	r23, Z+1	; 0x01
    1e74:	82 81       	ldd	r24, Z+2	; 0x02
    1e76:	93 81       	ldd	r25, Z+3	; 0x03
    1e78:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1e7c:	4b 01       	movw	r8, r22
    1e7e:	5c 01       	movw	r10, r24
    1e80:	20 91 24 2a 	lds	r18, 0x2A24	; 0x802a24 <myPID+0x2a>
    1e84:	30 91 25 2a 	lds	r19, 0x2A25	; 0x802a25 <myPID+0x2b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1e88:	40 91 26 2a 	lds	r20, 0x2A26	; 0x802a26 <myPID+0x2c>
    1e8c:	50 91 27 2a 	lds	r21, 0x2A27	; 0x802a27 <myPID+0x2d>
    1e90:	69 81       	ldd	r22, Y+1	; 0x01
    1e92:	7a 81       	ldd	r23, Y+2	; 0x02
    1e94:	8b 81       	ldd	r24, Y+3	; 0x03
    1e96:	9c 81       	ldd	r25, Y+4	; 0x04
    1e98:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1e9c:	6b 01       	movw	r12, r22
    1e9e:	7c 01       	movw	r14, r24
    1ea0:	20 91 0a 2a 	lds	r18, 0x2A0A	; 0x802a0a <myPID+0x10>
    1ea4:	30 91 0b 2a 	lds	r19, 0x2A0B	; 0x802a0b <myPID+0x11>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1ea8:	40 91 0c 2a 	lds	r20, 0x2A0C	; 0x802a0c <myPID+0x12>
    1eac:	50 91 0d 2a 	lds	r21, 0x2A0D	; 0x802a0d <myPID+0x13>
    1eb0:	c5 01       	movw	r24, r10
    1eb2:	b4 01       	movw	r22, r8
    1eb4:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1eb8:	20 91 20 2a 	lds	r18, 0x2A20	; 0x802a20 <myPID+0x26>
    1ebc:	30 91 21 2a 	lds	r19, 0x2A21	; 0x802a21 <myPID+0x27>
    1ec0:	40 91 22 2a 	lds	r20, 0x2A22	; 0x802a22 <myPID+0x28>
    1ec4:	50 91 23 2a 	lds	r21, 0x2A23	; 0x802a23 <myPID+0x29>
    1ec8:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1ecc:	2b 01       	movw	r4, r22
    1ece:	3c 01       	movw	r6, r24
    1ed0:	40 92 20 2a 	sts	0x2A20, r4	; 0x802a20 <myPID+0x26>
    1ed4:	50 92 21 2a 	sts	0x2A21, r5	; 0x802a21 <myPID+0x27>
    1ed8:	60 92 22 2a 	sts	0x2A22, r6	; 0x802a22 <myPID+0x28>
    1edc:	70 92 23 2a 	sts	0x2A23, r7	; 0x802a23 <myPID+0x29>
    1ee0:	30 90 35 2a 	lds	r3, 0x2A35	; 0x802a35 <myPID+0x3b>
    1ee4:	31 10       	cpse	r3, r1
    1ee6:	1a c0       	rjmp	.+52     	; 0x1f1c <PID_RUN()+0x14c>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1ee8:	20 91 06 2a 	lds	r18, 0x2A06	; 0x802a06 <myPID+0xc>
    1eec:	30 91 07 2a 	lds	r19, 0x2A07	; 0x802a07 <myPID+0xd>
    1ef0:	40 91 08 2a 	lds	r20, 0x2A08	; 0x802a08 <myPID+0xe>
    1ef4:	50 91 09 2a 	lds	r21, 0x2A09	; 0x802a09 <myPID+0xf>
    1ef8:	c7 01       	movw	r24, r14
    1efa:	b6 01       	movw	r22, r12
    1efc:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1f00:	9b 01       	movw	r18, r22
    1f02:	ac 01       	movw	r20, r24
    1f04:	c3 01       	movw	r24, r6
    1f06:	b2 01       	movw	r22, r4
    1f08:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1f0c:	60 93 20 2a 	sts	0x2A20, r22	; 0x802a20 <myPID+0x26>
    1f10:	70 93 21 2a 	sts	0x2A21, r23	; 0x802a21 <myPID+0x27>
    1f14:	80 93 22 2a 	sts	0x2A22, r24	; 0x802a22 <myPID+0x28>
    1f18:	90 93 23 2a 	sts	0x2A23, r25	; 0x802a23 <myPID+0x29>
    1f1c:	40 90 20 2a 	lds	r4, 0x2A20	; 0x802a20 <myPID+0x26>
    1f20:	50 90 21 2a 	lds	r5, 0x2A21	; 0x802a21 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1f24:	60 90 22 2a 	lds	r6, 0x2A22	; 0x802a22 <myPID+0x28>
    1f28:	70 90 23 2a 	lds	r7, 0x2A23	; 0x802a23 <myPID+0x29>
    1f2c:	10 91 30 2a 	lds	r17, 0x2A30	; 0x802a30 <myPID+0x36>
    1f30:	90 91 31 2a 	lds	r25, 0x2A31	; 0x802a31 <myPID+0x37>
    1f34:	9e 87       	std	Y+14, r25	; 0x0e
    1f36:	a0 91 32 2a 	lds	r26, 0x2A32	; 0x802a32 <myPID+0x38>
    1f3a:	ad 87       	std	Y+13, r26	; 0x0d
    1f3c:	00 91 33 2a 	lds	r16, 0x2A33	; 0x802a33 <myPID+0x39>
    1f40:	21 2f       	mov	r18, r17
    1f42:	39 2f       	mov	r19, r25
    1f44:	4a 2f       	mov	r20, r26
    1f46:	50 2f       	mov	r21, r16
    1f48:	c3 01       	movw	r24, r6
    1f4a:	b2 01       	movw	r22, r4
    1f4c:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    1f50:	18 16       	cp	r1, r24
    1f52:	0c f0       	brlt	.+2      	; 0x1f56 <PID_RUN()+0x186>
    1f54:	96 c0       	rjmp	.+300    	; 0x2082 <PID_RUN()+0x2b2>
    1f56:	81 2f       	mov	r24, r17
    1f58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f5a:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f5c:	b0 2f       	mov	r27, r16
    1f5e:	80 93 20 2a 	sts	0x2A20, r24	; 0x802a20 <myPID+0x26>
    1f62:	90 93 21 2a 	sts	0x2A21, r25	; 0x802a21 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1f66:	a0 93 22 2a 	sts	0x2A22, r26	; 0x802a22 <myPID+0x28>
    1f6a:	b0 93 23 2a 	sts	0x2A23, r27	; 0x802a23 <myPID+0x29>
    1f6e:	33 20       	and	r3, r3
    1f70:	09 f4       	brne	.+2      	; 0x1f74 <PID_RUN()+0x1a4>
    1f72:	a0 c0       	rjmp	.+320    	; 0x20b4 <PID_RUN()+0x2e4>
    1f74:	20 91 06 2a 	lds	r18, 0x2A06	; 0x802a06 <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1f78:	30 91 07 2a 	lds	r19, 0x2A07	; 0x802a07 <myPID+0xd>
    1f7c:	40 91 08 2a 	lds	r20, 0x2A08	; 0x802a08 <myPID+0xe>
    1f80:	50 91 09 2a 	lds	r21, 0x2A09	; 0x802a09 <myPID+0xf>
    1f84:	c5 01       	movw	r24, r10
    1f86:	b4 01       	movw	r22, r8
    1f88:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1f8c:	4b 01       	movw	r8, r22
    1f8e:	5c 01       	movw	r10, r24
    1f90:	20 91 0e 2a 	lds	r18, 0x2A0E	; 0x802a0e <myPID+0x14>
    1f94:	30 91 0f 2a 	lds	r19, 0x2A0F	; 0x802a0f <myPID+0x15>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1f98:	40 91 10 2a 	lds	r20, 0x2A10	; 0x802a10 <myPID+0x16>
    1f9c:	50 91 11 2a 	lds	r21, 0x2A11	; 0x802a11 <myPID+0x17>
    1fa0:	c7 01       	movw	r24, r14
    1fa2:	b6 01       	movw	r22, r12
    1fa4:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    1fa8:	9b 01       	movw	r18, r22
    1faa:	ac 01       	movw	r20, r24
    1fac:	60 91 20 2a 	lds	r22, 0x2A20	; 0x802a20 <myPID+0x26>
    1fb0:	70 91 21 2a 	lds	r23, 0x2A21	; 0x802a21 <myPID+0x27>
    1fb4:	80 91 22 2a 	lds	r24, 0x2A22	; 0x802a22 <myPID+0x28>
    1fb8:	90 91 23 2a 	lds	r25, 0x2A23	; 0x802a23 <myPID+0x29>
    1fbc:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    1fc0:	a5 01       	movw	r20, r10
    1fc2:	94 01       	movw	r18, r8
    1fc4:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    1fc8:	6b 01       	movw	r12, r22
    1fca:	7c 01       	movw	r14, r24
    1fcc:	9b 01       	movw	r18, r22
    1fce:	ac 01       	movw	r20, r24
    1fd0:	61 2f       	mov	r22, r17
    1fd2:	7e 85       	ldd	r23, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1fd4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fd6:	90 2f       	mov	r25, r16
    1fd8:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    1fdc:	87 fd       	sbrc	r24, 7
    1fde:	18 c0       	rjmp	.+48     	; 0x2010 <PID_RUN()+0x240>
    1fe0:	10 91 2c 2a 	lds	r17, 0x2A2C	; 0x802a2c <myPID+0x32>
    1fe4:	90 91 2d 2a 	lds	r25, 0x2A2D	; 0x802a2d <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1fe8:	9e 87       	std	Y+14, r25	; 0x0e
    1fea:	a0 91 2e 2a 	lds	r26, 0x2A2E	; 0x802a2e <myPID+0x34>
    1fee:	ad 87       	std	Y+13, r26	; 0x0d
    1ff0:	00 91 2f 2a 	lds	r16, 0x2A2F	; 0x802a2f <myPID+0x35>
    1ff4:	21 2f       	mov	r18, r17
    1ff6:	39 2f       	mov	r19, r25
    1ff8:	4a 2f       	mov	r20, r26
    1ffa:	50 2f       	mov	r21, r16
    1ffc:	b6 01       	movw	r22, r12
    1ffe:	c7 01       	movw	r24, r14
    2000:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2004:	87 fd       	sbrc	r24, 7
    2006:	04 c0       	rjmp	.+8      	; 0x2010 <PID_RUN()+0x240>
PID_RUN():
    2008:	1c 2d       	mov	r17, r12
    200a:	de 86       	std	Y+14, r13	; 0x0e
    200c:	ed 86       	std	Y+13, r14	; 0x0d
    200e:	0f 2d       	mov	r16, r15
Compute():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    2010:	e0 91 18 2a 	lds	r30, 0x2A18	; 0x802a18 <myPID+0x1e>
    2014:	f0 91 19 2a 	lds	r31, 0x2A19	; 0x802a19 <myPID+0x1f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    2018:	81 2f       	mov	r24, r17
    201a:	9e 85       	ldd	r25, Y+14	; 0x0e
    201c:	ad 85       	ldd	r26, Y+13	; 0x0d
    201e:	b0 2f       	mov	r27, r16
    2020:	80 83       	st	Z, r24
    2022:	91 83       	std	Z+1, r25	; 0x01
    2024:	a2 83       	std	Z+2, r26	; 0x02
    2026:	b3 83       	std	Z+3, r27	; 0x03
    2028:	89 81       	ldd	r24, Y+1	; 0x01
    202a:	9a 81       	ldd	r25, Y+2	; 0x02
    202c:	ab 81       	ldd	r26, Y+3	; 0x03
    202e:	bc 81       	ldd	r27, Y+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    2030:	80 93 24 2a 	sts	0x2A24, r24	; 0x802a24 <myPID+0x2a>
    2034:	90 93 25 2a 	sts	0x2A25, r25	; 0x802a25 <myPID+0x2b>
    2038:	a0 93 26 2a 	sts	0x2A26, r26	; 0x802a26 <myPID+0x2c>
    203c:	b0 93 27 2a 	sts	0x2A27, r27	; 0x802a27 <myPID+0x2d>
    2040:	8d 81       	ldd	r24, Y+5	; 0x05
    2042:	9e 81       	ldd	r25, Y+6	; 0x06
    2044:	af 81       	ldd	r26, Y+7	; 0x07
    2046:	b8 85       	ldd	r27, Y+8	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    2048:	80 93 1c 2a 	sts	0x2A1C, r24	; 0x802a1c <myPID+0x22>
    204c:	90 93 1d 2a 	sts	0x2A1D, r25	; 0x802a1d <myPID+0x23>
    2050:	a0 93 1e 2a 	sts	0x2A1E, r26	; 0x802a1e <myPID+0x24>
    2054:	b0 93 1f 2a 	sts	0x2A1F, r27	; 0x802a1f <myPID+0x25>
PID_RUN():
    2058:	2e 96       	adiw	r28, 0x0e	; 14
    205a:	cd bf       	out	0x3d, r28	; 61
    205c:	de bf       	out	0x3e, r29	; 62
    205e:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Pid.cpp:33
   myPID.Compute();  
}
    2060:	cf 91       	pop	r28
    2062:	1f 91       	pop	r17
    2064:	0f 91       	pop	r16
    2066:	ff 90       	pop	r15
    2068:	ef 90       	pop	r14
    206a:	df 90       	pop	r13
    206c:	cf 90       	pop	r12
    206e:	bf 90       	pop	r11
    2070:	af 90       	pop	r10
    2072:	9f 90       	pop	r9
    2074:	8f 90       	pop	r8
    2076:	7f 90       	pop	r7
    2078:	6f 90       	pop	r6
    207a:	5f 90       	pop	r5
    207c:	4f 90       	pop	r4
    207e:	3f 90       	pop	r3
    2080:	08 95       	ret
Compute():
    2082:	80 91 2c 2a 	lds	r24, 0x2A2C	; 0x802a2c <myPID+0x32>
    2086:	90 91 2d 2a 	lds	r25, 0x2A2D	; 0x802a2d <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    208a:	a0 91 2e 2a 	lds	r26, 0x2A2E	; 0x802a2e <myPID+0x34>
    208e:	b0 91 2f 2a 	lds	r27, 0x2A2F	; 0x802a2f <myPID+0x35>
    2092:	89 87       	std	Y+9, r24	; 0x09
    2094:	9a 87       	std	Y+10, r25	; 0x0a
    2096:	ab 87       	std	Y+11, r26	; 0x0b
    2098:	bc 87       	std	Y+12, r27	; 0x0c
    209a:	9c 01       	movw	r18, r24
    209c:	ad 01       	movw	r20, r26
    209e:	c3 01       	movw	r24, r6
    20a0:	b2 01       	movw	r22, r4
    20a2:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    20a6:	87 ff       	sbrs	r24, 7
    20a8:	62 cf       	rjmp	.-316    	; 0x1f6e <PID_RUN()+0x19e>
    20aa:	89 85       	ldd	r24, Y+9	; 0x09
    20ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ae:	ab 85       	ldd	r26, Y+11	; 0x0b
    20b0:	bc 85       	ldd	r27, Y+12	; 0x0c
    20b2:	55 cf       	rjmp	.-342    	; 0x1f5e <PID_RUN()+0x18e>
PID_RUN():
    20b4:	81 2c       	mov	r8, r1
    20b6:	91 2c       	mov	r9, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    20b8:	54 01       	movw	r10, r8
    20ba:	6a cf       	rjmp	.-300    	; 0x1f90 <PID_RUN()+0x1c0>

000020bc <EERef::operator*() const>:
operator*():
    20bc:	fc 01       	movw	r30, r24
    20be:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    20c0:	91 81       	ldd	r25, Z+1	; 0x01
    20c2:	fc 01       	movw	r30, r24
    20c4:	ff 27       	eor	r31, r31
    20c6:	90 fd       	sbrc	r25, 0
    20c8:	06 c0       	rjmp	.+12     	; 0x20d6 <EERef::operator*() const+0x1a>
    20ca:	80 e0       	ldi	r24, 0x00	; 0
    20cc:	94 e1       	ldi	r25, 0x14	; 20
    20ce:	e8 2b       	or	r30, r24
    20d0:	f9 2b       	or	r31, r25
    20d2:	80 81       	ld	r24, Z
    20d4:	08 95       	ret
    20d6:	80 e0       	ldi	r24, 0x00	; 0
    20d8:	93 e1       	ldi	r25, 0x13	; 19
    20da:	f9 cf       	rjmp	.-14     	; 0x20ce <EERef::operator*() const+0x12>

000020dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20dc:	ef 92       	push	r14
    20de:	ff 92       	push	r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    20e0:	0f 93       	push	r16
    20e2:	1f 93       	push	r17
    20e4:	cf 93       	push	r28
    20e6:	df 93       	push	r29
    20e8:	00 d0       	rcall	.+0      	; 0x20ea <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    20ea:	cd b7       	in	r28, 0x3d	; 61
    20ec:	de b7       	in	r29, 0x3e	; 62
    20ee:	8c 01       	movw	r16, r24
    20f0:	7b 01       	movw	r14, r22
    20f2:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20f4:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20f6:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20f8:	01 96       	adiw	r24, 0x01	; 1
    20fa:	e0 df       	rcall	.-64     	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20fc:	f7 01       	movw	r30, r14
    20fe:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2100:	0f 5f       	subi	r16, 0xFF	; 255
    2102:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2104:	09 83       	std	Y+1, r16	; 0x01
    2106:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2108:	ce 01       	movw	r24, r28
    210a:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    210c:	d7 df       	rcall	.-82     	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    210e:	f7 01       	movw	r30, r14
    2110:	81 83       	std	Z+1, r24	; 0x01
    2112:	c7 01       	movw	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2114:	0f 90       	pop	r0
    2116:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2118:	df 91       	pop	r29
    211a:	cf 91       	pop	r28
    211c:	1f 91       	pop	r17
    211e:	0f 91       	pop	r16
    2120:	ff 90       	pop	r15
    2122:	ef 90       	pop	r14
    2124:	08 95       	ret

00002126 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2126:	af 92       	push	r10
    2128:	bf 92       	push	r11
    212a:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    212c:	df 92       	push	r13
    212e:	ef 92       	push	r14
    2130:	ff 92       	push	r15
    2132:	0f 93       	push	r16
    2134:	1f 93       	push	r17
    2136:	cf 93       	push	r28
    2138:	df 93       	push	r29
    213a:	00 d0       	rcall	.+0      	; 0x213c <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    213c:	cd b7       	in	r28, 0x3d	; 61
    213e:	de b7       	in	r29, 0x3e	; 62
    2140:	8b 01       	movw	r16, r22
    2142:	6b 01       	movw	r12, r22
    2144:	24 e0       	ldi	r18, 0x04	; 4
    2146:	c2 0e       	add	r12, r18
    2148:	d1 1c       	adc	r13, r1
    214a:	7b 01       	movw	r14, r22
    214c:	5c 01       	movw	r10, r24
    214e:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2150:	b7 0a       	sbc	r11, r23
    2152:	c5 01       	movw	r24, r10
    2154:	8e 0d       	add	r24, r14
    2156:	9f 1d       	adc	r25, r15
    2158:	89 83       	std	Y+1, r24	; 0x01
    215a:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    215c:	ce 01       	movw	r24, r28
    215e:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2160:	ad df       	rcall	.-166    	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2162:	f7 01       	movw	r30, r14
    2164:	81 93       	st	Z+, r24
    2166:	7f 01       	movw	r14, r30
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2168:	ec 15       	cp	r30, r12
    216a:	fd 05       	cpc	r31, r13
    216c:	91 f7       	brne	.-28     	; 0x2152 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    216e:	c8 01       	movw	r24, r16
    2170:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2172:	0f 90       	pop	r0
    2174:	df 91       	pop	r29
    2176:	cf 91       	pop	r28
    2178:	1f 91       	pop	r17
    217a:	0f 91       	pop	r16
    217c:	ff 90       	pop	r15
    217e:	ef 90       	pop	r14
    2180:	df 90       	pop	r13
    2182:	cf 90       	pop	r12
    2184:	bf 90       	pop	r11
    2186:	af 90       	pop	r10
    2188:	08 95       	ret

0000218a <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    218a:	cf 93       	push	r28
    218c:	df 93       	push	r29
    218e:	00 d0       	rcall	.+0      	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]+0x6>
    2190:	cd b7       	in	r28, 0x3d	; 61
    2192:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    2194:	89 83       	std	Y+1, r24	; 0x01
    2196:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2198:	ce 01       	movw	r24, r28
    219a:	01 96       	adiw	r24, 0x01	; 1
    219c:	8f df       	rcall	.-226    	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
    219e:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    21a0:	0f 90       	pop	r0
    21a2:	df 91       	pop	r29
    21a4:	cf 91       	pop	r28
    21a6:	08 95       	ret

000021a8 <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    21a8:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    21aa:	ff 27       	eor	r31, r31
    21ac:	90 fd       	sbrc	r25, 0
    21ae:	12 c0       	rjmp	.+36     	; 0x21d4 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    21b0:	80 e0       	ldi	r24, 0x00	; 0
    21b2:	94 e1       	ldi	r25, 0x14	; 20
    21b4:	e8 2b       	or	r30, r24
    21b6:	f9 2b       	or	r31, r25
    21b8:	60 83       	st	Z, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    21ba:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:39
  cli();
    21bc:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    21be:	9d e9       	ldi	r25, 0x9D	; 157
    21c0:	23 e0       	ldi	r18, 0x03	; 3
    21c2:	94 bf       	out	0x34, r25	; 52
    21c4:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:41
  SREG = oldSREG;
    21c8:	8f bf       	out	0x3f, r24	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    21ca:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    21ce:	81 fd       	sbrc	r24, 1
    21d0:	fc cf       	rjmp	.-8      	; 0x21ca <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    21d2:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    21d4:	80 e0       	ldi	r24, 0x00	; 0
    21d6:	93 e1       	ldi	r25, 0x13	; 19
    21d8:	ed cf       	rjmp	.-38     	; 0x21b4 <nvm_write_byte(unsigned int, unsigned char)+0xc>

000021da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>:
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    21da:	e6 cf       	rjmp	.-52     	; 0x21a8 <nvm_write_byte(unsigned int, unsigned char)>

000021dc <EERef::update(unsigned char)>:
update():
    21dc:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21de:	cf 93       	push	r28
    21e0:	df 93       	push	r29
    21e2:	ec 01       	movw	r28, r24
    21e4:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    21e6:	6a df       	rcall	.-300    	; 0x20bc <EERef::operator*() const>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    21e8:	81 17       	cp	r24, r17
    21ea:	21 f0       	breq	.+8      	; 0x21f4 <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21ec:	61 2f       	mov	r22, r17
    21ee:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    21f0:	99 81       	ldd	r25, Y+1	; 0x01
    21f2:	da df       	rcall	.-76     	; 0x21a8 <nvm_write_byte(unsigned int, unsigned char)>
update():
    21f4:	ce 01       	movw	r24, r28
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21fa:	1f 91       	pop	r17
    21fc:	08 95       	ret

000021fe <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    21fe:	ef 92       	push	r14
    2200:	ff 92       	push	r15
    2202:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2204:	1f 93       	push	r17
    2206:	cf 93       	push	r28
    2208:	df 93       	push	r29
    220a:	00 d0       	rcall	.+0      	; 0x220c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0xe>
    220c:	cd b7       	in	r28, 0x3d	; 61
    220e:	de b7       	in	r29, 0x3e	; 62
    2210:	86 e0       	ldi	r24, 0x06	; 6
    2212:	e8 2e       	mov	r14, r24
    2214:	89 e2       	ldi	r24, 0x29	; 41
    2216:	f8 2e       	mov	r15, r24
    2218:	06 e4       	ldi	r16, 0x46	; 70
    221a:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    221c:	09 83       	std	Y+1, r16	; 0x01
    221e:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2220:	f7 01       	movw	r30, r14
    2222:	61 91       	ld	r22, Z+
    2224:	7f 01       	movw	r14, r30
    2226:	ce 01       	movw	r24, r28
    2228:	01 96       	adiw	r24, 0x01	; 1
    222a:	d8 df       	rcall	.-80     	; 0x21dc <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    222c:	0f 5f       	subi	r16, 0xFF	; 255
    222e:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    2230:	0a 34       	cpi	r16, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2232:	11 05       	cpc	r17, r1
    2234:	99 f7       	brne	.-26     	; 0x221c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2236:	86 e0       	ldi	r24, 0x06	; 6
    2238:	99 e2       	ldi	r25, 0x29	; 41
    223a:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    223c:	0f 90       	pop	r0
    223e:	df 91       	pop	r29
    2240:	cf 91       	pop	r28
    2242:	1f 91       	pop	r17
    2244:	0f 91       	pop	r16
    2246:	ff 90       	pop	r15
    2248:	ef 90       	pop	r14
    224a:	08 95       	ret

0000224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    224c:	af 92       	push	r10
    224e:	bf 92       	push	r11
    2250:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2252:	df 92       	push	r13
    2254:	ef 92       	push	r14
    2256:	ff 92       	push	r15
    2258:	0f 93       	push	r16
    225a:	1f 93       	push	r17
    225c:	cf 93       	push	r28
    225e:	df 93       	push	r29
    2260:	00 d0       	rcall	.+0      	; 0x2262 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]+0x16>
    2262:	cd b7       	in	r28, 0x3d	; 61
    2264:	de b7       	in	r29, 0x3e	; 62
    2266:	8b 01       	movw	r16, r22
    2268:	6b 01       	movw	r12, r22
    226a:	24 e0       	ldi	r18, 0x04	; 4
    226c:	c2 0e       	add	r12, r18
    226e:	d1 1c       	adc	r13, r1
    2270:	7b 01       	movw	r14, r22
    2272:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2274:	a6 1a       	sub	r10, r22
    2276:	b7 0a       	sbc	r11, r23
    2278:	c5 01       	movw	r24, r10
    227a:	8e 0d       	add	r24, r14
    227c:	9f 1d       	adc	r25, r15
    227e:	89 83       	std	Y+1, r24	; 0x01
    2280:	9a 83       	std	Y+2, r25	; 0x02
    2282:	f7 01       	movw	r30, r14
    2284:	61 91       	ld	r22, Z+
    2286:	7f 01       	movw	r14, r30
    2288:	ce 01       	movw	r24, r28
    228a:	01 96       	adiw	r24, 0x01	; 1
    228c:	a7 df       	rcall	.-178    	; 0x21dc <EERef::update(unsigned char)>
    228e:	ec 14       	cp	r14, r12
    2290:	fd 04       	cpc	r15, r13
    2292:	91 f7       	brne	.-28     	; 0x2278 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]+0x2c>
    2294:	c8 01       	movw	r24, r16
    2296:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2298:	0f 90       	pop	r0
    229a:	df 91       	pop	r29
    229c:	cf 91       	pop	r28
    229e:	1f 91       	pop	r17
    22a0:	0f 91       	pop	r16
    22a2:	ff 90       	pop	r15
    22a4:	ef 90       	pop	r14
    22a6:	df 90       	pop	r13
    22a8:	cf 90       	pop	r12
    22aa:	bf 90       	pop	r11
    22ac:	af 90       	pop	r10
    22ae:	08 95       	ret

000022b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    22b0:	ef 92       	push	r14
    22b2:	ff 92       	push	r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    22b4:	0f 93       	push	r16
    22b6:	1f 93       	push	r17
    22b8:	cf 93       	push	r28
    22ba:	df 93       	push	r29
    22bc:	00 d0       	rcall	.+0      	; 0x22be <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]+0xe>
    22be:	cd b7       	in	r28, 0x3d	; 61
    22c0:	de b7       	in	r29, 0x3e	; 62
    22c2:	8c 01       	movw	r16, r24
    22c4:	7b 01       	movw	r14, r22
    22c6:	89 83       	std	Y+1, r24	; 0x01
    22c8:	9a 83       	std	Y+2, r25	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    22ca:	fb 01       	movw	r30, r22
    22cc:	60 81       	ld	r22, Z
    22ce:	ce 01       	movw	r24, r28
    22d0:	01 96       	adiw	r24, 0x01	; 1
    22d2:	84 df       	rcall	.-248    	; 0x21dc <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    22d4:	0f 5f       	subi	r16, 0xFF	; 255
    22d6:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    22d8:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    22da:	1a 83       	std	Y+2, r17	; 0x02
    22dc:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    22de:	61 81       	ldd	r22, Z+1	; 0x01
    22e0:	ce 01       	movw	r24, r28
    22e2:	01 96       	adiw	r24, 0x01	; 1
    22e4:	7b df       	rcall	.-266    	; 0x21dc <EERef::update(unsigned char)>
    22e6:	c7 01       	movw	r24, r14
    22e8:	0f 90       	pop	r0
    22ea:	0f 90       	pop	r0
    22ec:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    22ee:	cf 91       	pop	r28
    22f0:	1f 91       	pop	r17
    22f2:	0f 91       	pop	r16
    22f4:	ff 90       	pop	r15
    22f6:	ef 90       	pop	r14
    22f8:	08 95       	ret

000022fa <MODE_CLICK()>:
MODE_CLICK():
    22fa:	2f 92       	push	r2
    22fc:	3f 92       	push	r3
    22fe:	4f 92       	push	r4
    2300:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:147
//     REP++;
//   }
}

void MODE_CLICK()
{
    2302:	6f 92       	push	r6
    2304:	7f 92       	push	r7
    2306:	8f 92       	push	r8
    2308:	9f 92       	push	r9
    230a:	af 92       	push	r10
    230c:	bf 92       	push	r11
    230e:	cf 92       	push	r12
    2310:	df 92       	push	r13
    2312:	ef 92       	push	r14
    2314:	ff 92       	push	r15
    2316:	0f 93       	push	r16
    2318:	1f 93       	push	r17
    231a:	cf 93       	push	r28
    231c:	df 93       	push	r29
    231e:	00 d0       	rcall	.+0      	; 0x2320 <MODE_CLICK()+0x26>
    2320:	1f 92       	push	r1
    2322:	cd b7       	in	r28, 0x3d	; 61
    2324:	de b7       	in	r29, 0x3e	; 62
    2326:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
    232a:	81 11       	cpse	r24, r1
    232c:	58 c0       	rjmp	.+176    	; 0x23de <MODE_CLICK()+0xe4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:148
  if(checkTempRaised==0)
    232e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <BLINK_STATS>
    2332:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:150
  {
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    2336:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:151
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    2338:	6a c0       	rjmp	.+212    	; 0x240e <MODE_CLICK()+0x114>
    233a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    233e:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:153
  {
    i = 0;
    2342:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
    2346:	84 30       	cpi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:155
         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    2348:	31 f4       	brne	.+12     	; 0x2356 <MODE_CLICK()+0x5c>
    234a:	20 91 9b 28 	lds	r18, 0x289B	; 0x80289b <SET_MIN>
    234e:	30 91 9c 28 	lds	r19, 0x289C	; 0x80289c <SET_MIN+0x1>
    2352:	23 2b       	or	r18, r19
    2354:	51 f0       	breq	.+20     	; 0x236a <MODE_CLICK()+0x70>
    2356:	90 91 4f 29 	lds	r25, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:156
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    235a:	99 23       	and	r25, r25
    235c:	09 f4       	brne	.+2      	; 0x2360 <MODE_CLICK()+0x66>
    235e:	55 c0       	rjmp	.+170    	; 0x240a <MODE_CLICK()+0x110>
    2360:	81 11       	cpse	r24, r1
    2362:	53 c0       	rjmp	.+166    	; 0x240a <MODE_CLICK()+0x110>
    2364:	82 e0       	ldi	r24, 0x02	; 2
    2366:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:161
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    236a:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:348
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    236e:	85 30       	cpi	r24, 0x05	; 5
    2370:	0c f4       	brge	.+2      	; 0x2374 <MODE_CLICK()+0x7a>
    2372:	80 c3       	rjmp	.+1792   	; 0x2a74 <MODE_CLICK()+0x77a>
    2374:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
    2378:	88 23       	and	r24, r24
    237a:	01 f1       	breq	.+64     	; 0x23bc <MODE_CLICK()+0xc2>
    237c:	85 e0       	ldi	r24, 0x05	; 5
    237e:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:350
   {
      ENTER_BUT = 5;  
    2382:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:351
      if(PUMP_FLAG)   PUMP_FLAG=0;
    2386:	88 23       	and	r24, r24
    2388:	09 f4       	brne	.+2      	; 0x238c <MODE_CLICK()+0x92>
    238a:	70 c3       	rjmp	.+1760   	; 0x2a6c <MODE_CLICK()+0x772>
    238c:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <PUMP_FLAG>
Save_Pump_Data():
    2390:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Eeprom.cpp:67
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    2394:	81 11       	cpse	r24, r1
    2396:	12 c0       	rjmp	.+36     	; 0x23bc <MODE_CLICK()+0xc2>
    2398:	61 e0       	ldi	r22, 0x01	; 1
    239a:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Eeprom.cpp:69
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    239e:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0xb>
    23a2:	89 2b       	or	r24, r25
    23a4:	09 f4       	brne	.+2      	; 0x23a8 <MODE_CLICK()+0xae>
    23a6:	60 e0       	ldi	r22, 0x00	; 0
    23a8:	60 93 9d 28 	sts	0x289D, r22	; 0x80289d <STIR_VALUE_SET>
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	80 e0       	ldi	r24, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/Eeprom.cpp:70
      EEPROM.write(0, STIR_VALUE_SET);
    23b0:	14 df       	rcall	.-472    	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
MODE_CLICK():
    23b2:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
    23b6:	85 30       	cpi	r24, 0x05	; 5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:356
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); //Siddhesh
   }
   
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    23b8:	0c f4       	brge	.+2      	; 0x23bc <MODE_CLICK()+0xc2>
    23ba:	5c c3       	rjmp	.+1720   	; 0x2a74 <MODE_CLICK()+0x77a>
    23bc:	00 91 b4 28 	lds	r16, 0x28B4	; 0x8028b4 <REP1>
    23c0:	10 91 b5 28 	lds	r17, 0x28B5	; 0x8028b5 <REP1+0x1>
    23c4:	10 16       	cp	r1, r16
    23c6:	11 06       	cpc	r1, r17
    23c8:	0c f4       	brge	.+2      	; 0x23cc <MODE_CLICK()+0xd2>
    23ca:	54 c3       	rjmp	.+1704   	; 0x2a74 <MODE_CLICK()+0x77a>
    23cc:	88 ee       	ldi	r24, 0xE8	; 232
    23ce:	93 e0       	ldi	r25, 0x03	; 3
    23d0:	2b d9       	rcall	.-3498   	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    23d2:	0f 5f       	subi	r16, 0xFF	; 255
    23d4:	1f 4f       	sbci	r17, 0xFF	; 255
    23d6:	00 93 b4 28 	sts	0x28B4, r16	; 0x8028b4 <REP1>
    23da:	10 93 b5 28 	sts	0x28B5, r17	; 0x8028b5 <REP1+0x1>
    23de:	23 96       	adiw	r28, 0x03	; 3
    23e0:	cd bf       	out	0x3d, r28	; 61
    23e2:	de bf       	out	0x3e, r29	; 62
    23e4:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:359
   else                           Tick.BUZZ_INTERVAL(50);               //short pree   
}
}
    23e6:	cf 91       	pop	r28
    23e8:	1f 91       	pop	r17
    23ea:	0f 91       	pop	r16
    23ec:	ff 90       	pop	r15
    23ee:	ef 90       	pop	r14
    23f0:	df 90       	pop	r13
    23f2:	cf 90       	pop	r12
    23f4:	bf 90       	pop	r11
    23f6:	af 90       	pop	r10
    23f8:	9f 90       	pop	r9
    23fa:	8f 90       	pop	r8
    23fc:	7f 90       	pop	r7
    23fe:	6f 90       	pop	r6
    2400:	5f 90       	pop	r5
    2402:	4f 90       	pop	r4
    2404:	3f 90       	pop	r3
    2406:	2f 90       	pop	r2
    2408:	08 95       	ret
    240a:	8f 5f       	subi	r24, 0xFF	; 255
    240c:	ac cf       	rjmp	.-168    	; 0x2366 <MODE_CLICK()+0x6c>
    240e:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:161
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    2412:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2416:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    241a:	81 11       	cpse	r24, r1
    241c:	09 c1       	rjmp	.+530    	; 0x2630 <MODE_CLICK()+0x336>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:166
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    241e:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <STIR_VALUE_SET>
    2422:	90 e0       	ldi	r25, 0x00	; 0
    2424:	80 93 1d 29 	sts	0x291D, r24	; 0x80291d <SET_LONG_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:168
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; 
    2428:	90 93 1e 29 	sts	0x291E, r25	; 0x80291e <SET_LONG_VALUE+0x1>
    242c:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    2430:	2b 83       	std	Y+3, r18	; 0x03
    2432:	82 2f       	mov	r24, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:169
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	80 93 1f 29 	sts	0x291F, r24	; 0x80291f <SET_LONG_VALUE+0x2>
    243a:	90 93 20 29 	sts	0x2920, r25	; 0x802920 <SET_LONG_VALUE+0x3>
    243e:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    2442:	90 e0       	ldi	r25, 0x00	; 0
    2444:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <SET_LONG_VALUE+0x8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:170
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    2448:	90 93 26 29 	sts	0x2926, r25	; 0x802926 <SET_LONG_VALUE+0x9>
    244c:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <select_heating_type>
    2450:	90 e0       	ldi	r25, 0x00	; 0
    2452:	80 93 3d 29 	sts	0x293D, r24	; 0x80293d <SET_LONG_VALUE+0x20>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:171
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; // New feature added
    2456:	90 93 3e 29 	sts	0x293E, r25	; 0x80293e <SET_LONG_VALUE+0x21>
    245a:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	80 93 27 29 	sts	0x2927, r24	; 0x802927 <SET_LONG_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:172
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
    2464:	90 93 28 29 	sts	0x2928, r25	; 0x802928 <SET_LONG_VALUE+0xb>
    2468:	21 11       	cpse	r18, r1
    246a:	99 c0       	rjmp	.+306    	; 0x259e <MODE_CLICK()+0x2a4>
    246c:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <SAFE_VALUE_SET_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:174
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    2470:	90 91 0f 29 	lds	r25, 0x290F	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
    2474:	80 93 21 29 	sts	0x2921, r24	; 0x802921 <SET_LONG_VALUE+0x4>
    2478:	90 93 22 29 	sts	0x2922, r25	; 0x802922 <SET_LONG_VALUE+0x5>
    247c:	80 91 d4 28 	lds	r24, 0x28D4	; 0x8028d4 <CAL_SELECT_VALUE>
    2480:	90 91 d5 28 	lds	r25, 0x28D5	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:177
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    2484:	80 93 29 29 	sts	0x2929, r24	; 0x802929 <SET_LONG_VALUE+0xc>
    2488:	90 93 2a 29 	sts	0x292A, r25	; 0x80292a <SET_LONG_VALUE+0xd>
    248c:	c0 90 fe 28 	lds	r12, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    2490:	d0 90 ff 28 	lds	r13, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    2494:	e0 90 00 29 	lds	r14, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    2498:	f0 90 01 29 	lds	r15, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    249c:	c7 01       	movw	r24, r14
    249e:	b6 01       	movw	r22, r12
    24a0:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    24a4:	4b 01       	movw	r8, r22
    24a6:	20 e0       	ldi	r18, 0x00	; 0
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	40 e2       	ldi	r20, 0x20	; 32
    24ac:	51 e4       	ldi	r21, 0x41	; 65
    24ae:	c7 01       	movw	r24, r14
    24b0:	b6 01       	movw	r22, r12
    24b2:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    24b6:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    24ba:	2b 01       	movw	r4, r22
    24bc:	cb 01       	movw	r24, r22
    24be:	6a e0       	ldi	r22, 0x0A	; 10
    24c0:	70 e0       	ldi	r23, 0x00	; 0
    24c2:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
    24c6:	1c 01       	movw	r2, r24
    24c8:	8b 81       	ldd	r24, Y+3	; 0x03
    24ca:	81 11       	cpse	r24, r1
    24cc:	7e c0       	rjmp	.+252    	; 0x25ca <MODE_CLICK()+0x2d0>
    24ce:	20 e0       	ldi	r18, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:178
      if (!DEGREE_VALUE_SET)
    24d0:	30 e0       	ldi	r19, 0x00	; 0
    24d2:	48 ec       	ldi	r20, 0xC8	; 200
    24d4:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:180
      {
        if(TEMP_DEG_RAW<100)
    24d6:	c7 01       	movw	r24, r14
    24d8:	b6 01       	movw	r22, r12
    24da:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    24de:	87 ff       	sbrs	r24, 7
    24e0:	67 c0       	rjmp	.+206    	; 0x25b0 <MODE_CLICK()+0x2b6>
    24e2:	80 92 2b 29 	sts	0x292B, r8	; 0x80292b <SET_LONG_VALUE+0xe>
    24e6:	90 92 2c 29 	sts	0x292C, r9	; 0x80292c <SET_LONG_VALUE+0xf>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:182
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    24ea:	40 92 32 28 	sts	0x2832, r4	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    24ee:	50 92 33 28 	sts	0x2833, r5	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:183
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    24f2:	20 92 2d 29 	sts	0x292D, r2	; 0x80292d <SET_LONG_VALUE+0x10>
    24f6:	30 92 2e 29 	sts	0x292E, r3	; 0x80292e <SET_LONG_VALUE+0x11>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:185
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    24fa:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    24fe:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:198
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    2502:	80 93 2f 29 	sts	0x292F, r24	; 0x80292f <SET_LONG_VALUE+0x12>
    2506:	90 93 30 29 	sts	0x2930, r25	; 0x802930 <SET_LONG_VALUE+0x13>
    250a:	80 92 33 29 	sts	0x2933, r8	; 0x802933 <SET_LONG_VALUE+0x16>
    250e:	90 92 34 29 	sts	0x2934, r9	; 0x802934 <SET_LONG_VALUE+0x17>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:199
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    2512:	20 92 35 29 	sts	0x2935, r2	; 0x802935 <SET_LONG_VALUE+0x18>
    2516:	30 92 36 29 	sts	0x2936, r3	; 0x802936 <SET_LONG_VALUE+0x19>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:202
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    251a:	0c 30       	cpi	r16, 0x0C	; 12
    251c:	11 05       	cpc	r17, r1
    251e:	09 f0       	breq	.+2      	; 0x2522 <MODE_CLICK()+0x228>
    2520:	6d c0       	rjmp	.+218    	; 0x25fc <MODE_CLICK()+0x302>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:204
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    2522:	c0 92 2a 28 	sts	0x282A, r12	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    2526:	d0 92 2b 28 	sts	0x282B, r13	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    252a:	e0 92 2c 28 	sts	0x282C, r14	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    252e:	f0 92 2d 28 	sts	0x282D, r15	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    2532:	20 e0       	ldi	r18, 0x00	; 0
    2534:	30 e0       	ldi	r19, 0x00	; 0
    2536:	48 ec       	ldi	r20, 0xC8	; 200
    2538:	52 e4       	ldi	r21, 0x42	; 66
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:207
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    253a:	c7 01       	movw	r24, r14
    253c:	b6 01       	movw	r22, r12
    253e:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2542:	87 ff       	sbrs	r24, 7
    2544:	68 c0       	rjmp	.+208    	; 0x2616 <MODE_CLICK()+0x31c>
    2546:	80 92 37 29 	sts	0x2937, r8	; 0x802937 <SET_LONG_VALUE+0x1a>
    254a:	90 92 38 29 	sts	0x2938, r9	; 0x802938 <SET_LONG_VALUE+0x1b>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:209
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    254e:	20 92 39 29 	sts	0x2939, r2	; 0x802939 <SET_LONG_VALUE+0x1c>
    2552:	30 92 3a 29 	sts	0x293A, r3	; 0x80293a <SET_LONG_VALUE+0x1d>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:211
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    2556:	80 91 64 28 	lds	r24, 0x2864	; 0x802864 <TIME_SOCK_OR_TOTAL>
    255a:	90 e0       	ldi	r25, 0x00	; 0
    255c:	80 93 23 29 	sts	0x2923, r24	; 0x802923 <SET_LONG_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:219
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    2560:	90 93 24 29 	sts	0x2924, r25	; 0x802924 <SET_LONG_VALUE+0x7>
    2564:	02 31       	cpi	r16, 0x12	; 18
    2566:	11 05       	cpc	r17, r1
    2568:	21 f4       	brne	.+8      	; 0x2572 <MODE_CLICK()+0x278>
    256a:	10 92 44 28 	sts	0x2844, r1	; 0x802844 <currentMillis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:220
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    256e:	10 92 45 28 	sts	0x2845, r1	; 0x802845 <currentMillis+0x1>
    2572:	2b 81       	ldd	r18, Y+3	; 0x03
    2574:	21 11       	cpse	r18, r1
    2576:	09 c0       	rjmp	.+18     	; 0x258a <MODE_CLICK()+0x290>
    2578:	08 30       	cpi	r16, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:222
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    257a:	11 05       	cpc	r17, r1
    257c:	31 f4       	brne	.+12     	; 0x258a <MODE_CLICK()+0x290>
    257e:	87 e0       	ldi	r24, 0x07	; 7
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2586:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    258a:	81 e0       	ldi	r24, 0x01	; 1
    258c:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    2590:	8a e1       	ldi	r24, 0x1A	; 26
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:224
      
      Mode_Button_Single_Press_In_Settings = 1;
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:346
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    2598:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    259c:	e6 ce       	rjmp	.-564    	; 0x236a <MODE_CLICK()+0x70>
    259e:	80 91 0c 29 	lds	r24, 0x290C	; 0x80290c <SAFE_VALUE_SET_FAH>
    25a2:	90 91 0d 29 	lds	r25, 0x290D	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:175
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; // New feature added
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    25a6:	80 93 45 29 	sts	0x2945, r24	; 0x802945 <SET_LONG_VALUE+0x28>
    25aa:	90 93 46 29 	sts	0x2946, r25	; 0x802946 <SET_LONG_VALUE+0x29>
    25ae:	66 cf       	rjmp	.-308    	; 0x247c <MODE_CLICK()+0x182>
    25b0:	83 e6       	ldi	r24, 0x63	; 99
    25b2:	90 e0       	ldi	r25, 0x00	; 0
    25b4:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0xe>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_020_V4.2_OLD_V1.02_PCB/WLC_WLS_020_V4.2_OLD_V1.02_PCB.ino:189
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    25b8:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0xf>
    25bc:	89 e0       	ldi	r24, 0x09	; 9
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	80 93 2d 29 	sts	0x292D, r24	; 0x80292d <SET_LONG_VALUE+0x10>
    25c4:	90 93 2e 29 	sts	0x292E, r25	; 0x80292e <SET_LONG_VALUE+0x11>
    25c8:	98 cf       	rjmp	.-208    	; 0x24fa <MODE_CLICK()+0x200>
    25ca:	40 90 da 28 	lds	r4, 0x28DA	; 0x8028da <TEMP_FAH_RAW>
    25ce:	50 90 db 28 	lds	r5, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x1>
    25d2:	60 90 dc 28 	lds	r6, 0x28DC	; 0x8028dc <TEMP_FAH_RAW+0x2>
    25d6:	70 90 dd 28 	lds	r7, 0x28DD	; 0x8028dd <TEMP_FAH_RAW+0x3>
    25da:	c3 01       	movw	r24, r6
    25dc:	b2 01       	movw	r22, r4
    25de:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    25e2:	60 93 47 29 	sts	0x2947, r22	; 0x802947 <SET_LONG_VALUE+0x2a>
    25e6:	70 93 48 29 	sts	0x2948, r23	; 0x802948 <SET_LONG_VALUE+0x2b>
    25ea:	40 92 2e 28 	sts	0x282E, r4	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    25ee:	50 92 2f 28 	sts	0x282F, r5	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    25f2:	60 92 30 28 	sts	0x2830, r6	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    25f6:	70 92 31 28 	sts	0x2831, r7	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    25fa:	7f cf       	rjmp	.-258    	; 0x24fa <MODE_CLICK()+0x200>
    25fc:	0e 30       	cpi	r16, 0x0E	; 14
    25fe:	11 05       	cpc	r17, r1
    2600:	09 f0       	breq	.+2      	; 0x2604 <MODE_CLICK()+0x30a>
    2602:	97 cf       	rjmp	.-210    	; 0x2532 <MODE_CLICK()+0x238>
    2604:	c0 92 26 28 	sts	0x2826, r12	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    2608:	d0 92 27 28 	sts	0x2827, r13	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    260c:	e0 92 28 28 	sts	0x2828, r14	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    2610:	f0 92 29 28 	sts	0x2829, r15	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2614:	8e cf       	rjmp	.-228    	; 0x2532 <MODE_CLICK()+0x238>
    2616:	83 e6       	ldi	r24, 0x63	; 99
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	80 93 37 29 	sts	0x2937, r24	; 0x802937 <SET_LONG_VALUE+0x1a>
    261e:	90 93 38 29 	sts	0x2938, r25	; 0x802938 <SET_LONG_VALUE+0x1b>
    2622:	89 e0       	ldi	r24, 0x09	; 9
    2624:	90 e0       	ldi	r25, 0x00	; 0
    2626:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1c>
    262a:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x1d>
    262e:	93 cf       	rjmp	.-218    	; 0x2556 <MODE_CLICK()+0x25c>
    2630:	01 31       	cpi	r16, 0x11	; 17
    2632:	11 05       	cpc	r17, r1
    2634:	18 f5       	brcc	.+70     	; 0x267c <MODE_CLICK()+0x382>
    2636:	f8 01       	movw	r30, r16
    2638:	e0 5e       	subi	r30, 0xE0	; 224
    263a:	fc 4e       	sbci	r31, 0xEC	; 236
    263c:	0c 94 30 3a 	jmp	0x7460	; 0x7460 <__tablejump2__>
    2640:	31 13       	cpse	r19, r17
    2642:	5e 13       	cpse	r21, r30
    2644:	6b 13       	cpse	r22, r27
    2646:	17 15       	cp	r17, r7
    2648:	88 13       	cpse	r24, r24
    264a:	95 13       	cpse	r25, r21
    264c:	af 13       	cpse	r26, r31
    264e:	3e 13       	cpse	r19, r30
    2650:	ba 13       	cpse	r27, r26
    2652:	6a 14       	cp	r6, r10
    2654:	78 14       	cp	r7, r8
    2656:	3e 13       	cpse	r19, r30
    2658:	91 14       	cp	r9, r1
    265a:	3e 13       	cpse	r19, r30
    265c:	a2 14       	cp	r10, r2
    265e:	3e 13       	cpse	r19, r30
    2660:	a2 13       	cpse	r26, r18
    2662:	61 e0       	ldi	r22, 0x01	; 1
    2664:	80 91 1d 29 	lds	r24, 0x291D	; 0x80291d <SET_LONG_VALUE>
    2668:	90 91 1e 29 	lds	r25, 0x291E	; 0x80291e <SET_LONG_VALUE+0x1>
    266c:	89 2b       	or	r24, r25
    266e:	09 f4       	brne	.+2      	; 0x2672 <MODE_CLICK()+0x378>
    2670:	60 e0       	ldi	r22, 0x00	; 0
    2672:	60 93 9d 28 	sts	0x289D, r22	; 0x80289d <STIR_VALUE_SET>
    2676:	90 e0       	ldi	r25, 0x00	; 0
    2678:	80 e0       	ldi	r24, 0x00	; 0
    267a:	af dd       	rcall	.-1186   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    267c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    2680:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2684:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    2688:	21 11       	cpse	r18, r1
    268a:	03 c0       	rjmp	.+6      	; 0x2692 <MODE_CLICK()+0x398>
    268c:	87 30       	cpi	r24, 0x07	; 7
    268e:	91 05       	cpc	r25, r1
    2690:	61 f0       	breq	.+24     	; 0x26aa <MODE_CLICK()+0x3b0>
    2692:	9c 01       	movw	r18, r24
    2694:	2d 7f       	andi	r18, 0xFD	; 253
    2696:	29 30       	cpi	r18, 0x09	; 9
    2698:	31 05       	cpc	r19, r1
    269a:	39 f0       	breq	.+14     	; 0x26aa <MODE_CLICK()+0x3b0>
    269c:	8d 30       	cpi	r24, 0x0D	; 13
    269e:	91 05       	cpc	r25, r1
    26a0:	21 f0       	breq	.+8      	; 0x26aa <MODE_CLICK()+0x3b0>
    26a2:	82 31       	cpi	r24, 0x12	; 18
    26a4:	91 05       	cpc	r25, r1
    26a6:	09 f0       	breq	.+2      	; 0x26aa <MODE_CLICK()+0x3b0>
    26a8:	d4 c1       	rjmp	.+936    	; 0x2a52 <MODE_CLICK()+0x758>
    26aa:	21 e0       	ldi	r18, 0x01	; 1
    26ac:	20 93 a9 28 	sts	0x28A9, r18	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    26b0:	01 96       	adiw	r24, 0x01	; 1
    26b2:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    26b6:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    26ba:	6a cf       	rjmp	.-300    	; 0x2590 <MODE_CLICK()+0x296>
    26bc:	61 e0       	ldi	r22, 0x01	; 1
    26be:	80 91 1f 29 	lds	r24, 0x291F	; 0x80291f <SET_LONG_VALUE+0x2>
    26c2:	90 91 20 29 	lds	r25, 0x2920	; 0x802920 <SET_LONG_VALUE+0x3>
    26c6:	89 2b       	or	r24, r25
    26c8:	09 f4       	brne	.+2      	; 0x26cc <MODE_CLICK()+0x3d2>
    26ca:	60 e0       	ldi	r22, 0x00	; 0
    26cc:	60 93 4f 29 	sts	0x294F, r22	; 0x80294f <DEGREE_VALUE_SET>
    26d0:	81 e0       	ldi	r24, 0x01	; 1
    26d2:	90 e0       	ldi	r25, 0x00	; 0
    26d4:	d2 cf       	rjmp	.-92     	; 0x267a <MODE_CLICK()+0x380>
    26d6:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    26da:	81 11       	cpse	r24, r1
    26dc:	0b c0       	rjmp	.+22     	; 0x26f4 <MODE_CLICK()+0x3fa>
    26de:	60 91 21 29 	lds	r22, 0x2921	; 0x802921 <SET_LONG_VALUE+0x4>
    26e2:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x5>
    26e6:	60 93 0e 29 	sts	0x290E, r22	; 0x80290e <SAFE_VALUE_SET_DEG>
    26ea:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
    26ee:	82 e0       	ldi	r24, 0x02	; 2
    26f0:	90 e0       	ldi	r25, 0x00	; 0
    26f2:	c3 cf       	rjmp	.-122    	; 0x267a <MODE_CLICK()+0x380>
    26f4:	80 91 45 29 	lds	r24, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
    26f8:	90 91 46 29 	lds	r25, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
    26fc:	80 93 0c 29 	sts	0x290C, r24	; 0x80290c <SAFE_VALUE_SET_FAH>
    2700:	90 93 0d 29 	sts	0x290D, r25	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
    2704:	6c e0       	ldi	r22, 0x0C	; 12
    2706:	79 e2       	ldi	r23, 0x29	; 41
    2708:	83 e0       	ldi	r24, 0x03	; 3
    270a:	90 e0       	ldi	r25, 0x00	; 0
    270c:	d1 dd       	rcall	.-1118   	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    270e:	b6 cf       	rjmp	.-148    	; 0x267c <MODE_CLICK()+0x382>
    2710:	61 e0       	ldi	r22, 0x01	; 1
    2712:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <SET_LONG_VALUE+0x8>
    2716:	90 91 26 29 	lds	r25, 0x2926	; 0x802926 <SET_LONG_VALUE+0x9>
    271a:	89 2b       	or	r24, r25
    271c:	09 f4       	brne	.+2      	; 0x2720 <MODE_CLICK()+0x426>
    271e:	60 e0       	ldi	r22, 0x00	; 0
    2720:	60 93 a4 28 	sts	0x28A4, r22	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    2724:	8f e0       	ldi	r24, 0x0F	; 15
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	58 dd       	rcall	.-1360   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    272a:	61 e0       	ldi	r22, 0x01	; 1
    272c:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0xa>
    2730:	90 91 28 29 	lds	r25, 0x2928	; 0x802928 <SET_LONG_VALUE+0xb>
    2734:	89 2b       	or	r24, r25
    2736:	09 f4       	brne	.+2      	; 0x273a <MODE_CLICK()+0x440>
    2738:	60 e0       	ldi	r22, 0x00	; 0
    273a:	60 93 0a 29 	sts	0x290A, r22	; 0x80290a <select_product_type>
    273e:	86 e9       	ldi	r24, 0x96	; 150
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	9b cf       	rjmp	.-202    	; 0x267a <MODE_CLICK()+0x380>
    2744:	61 e0       	ldi	r22, 0x01	; 1
    2746:	80 91 3d 29 	lds	r24, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    274a:	90 91 3e 29 	lds	r25, 0x293E	; 0x80293e <SET_LONG_VALUE+0x21>
    274e:	89 2b       	or	r24, r25
    2750:	09 f4       	brne	.+2      	; 0x2754 <MODE_CLICK()+0x45a>
    2752:	60 e0       	ldi	r22, 0x00	; 0
    2754:	60 93 fd 28 	sts	0x28FD, r22	; 0x8028fd <select_heating_type>
    2758:	84 e8       	ldi	r24, 0x84	; 132
    275a:	90 e0       	ldi	r25, 0x00	; 0
    275c:	8e cf       	rjmp	.-228    	; 0x267a <MODE_CLICK()+0x380>
    275e:	60 91 29 29 	lds	r22, 0x2929	; 0x802929 <SET_LONG_VALUE+0xc>
    2762:	80 91 2a 29 	lds	r24, 0x292A	; 0x80292a <SET_LONG_VALUE+0xd>
    2766:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <CAL_SELECT_VALUE>
    276a:	80 93 d5 28 	sts	0x28D5, r24	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
    276e:	85 e0       	ldi	r24, 0x05	; 5
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	83 cf       	rjmp	.-250    	; 0x267a <MODE_CLICK()+0x380>
    2774:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    2778:	81 11       	cpse	r24, r1
    277a:	87 c0       	rjmp	.+270    	; 0x288a <MODE_CLICK()+0x590>
    277c:	60 91 2d 29 	lds	r22, 0x292D	; 0x80292d <SET_LONG_VALUE+0x10>
    2780:	70 91 2e 29 	lds	r23, 0x292E	; 0x80292e <SET_LONG_VALUE+0x11>
    2784:	07 2e       	mov	r0, r23
    2786:	00 0c       	add	r0, r0
    2788:	88 0b       	sbc	r24, r24
    278a:	99 0b       	sbc	r25, r25
    278c:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    2790:	20 e0       	ldi	r18, 0x00	; 0
    2792:	30 e0       	ldi	r19, 0x00	; 0
    2794:	40 e2       	ldi	r20, 0x20	; 32
    2796:	51 e4       	ldi	r21, 0x41	; 65
    2798:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    279c:	6b 01       	movw	r12, r22
    279e:	7c 01       	movw	r14, r24
    27a0:	60 91 2b 29 	lds	r22, 0x292B	; 0x80292b <SET_LONG_VALUE+0xe>
    27a4:	70 91 2c 29 	lds	r23, 0x292C	; 0x80292c <SET_LONG_VALUE+0xf>
    27a8:	07 2e       	mov	r0, r23
    27aa:	00 0c       	add	r0, r0
    27ac:	88 0b       	sbc	r24, r24
    27ae:	99 0b       	sbc	r25, r25
    27b0:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    27b4:	9b 01       	movw	r18, r22
    27b6:	ac 01       	movw	r20, r24
    27b8:	c7 01       	movw	r24, r14
    27ba:	b6 01       	movw	r22, r12
    27bc:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    27c0:	20 e0       	ldi	r18, 0x00	; 0
    27c2:	30 e0       	ldi	r19, 0x00	; 0
    27c4:	40 e2       	ldi	r20, 0x20	; 32
    27c6:	51 e4       	ldi	r21, 0x41	; 65
    27c8:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    27cc:	6b 01       	movw	r12, r22
    27ce:	7c 01       	movw	r14, r24
    27d0:	60 91 32 28 	lds	r22, 0x2832	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    27d4:	70 91 33 28 	lds	r23, 0x2833	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    27d8:	07 2e       	mov	r0, r23
    27da:	00 0c       	add	r0, r0
    27dc:	88 0b       	sbc	r24, r24
    27de:	99 0b       	sbc	r25, r25
    27e0:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    27e4:	9b 01       	movw	r18, r22
    27e6:	ac 01       	movw	r20, r24
    27e8:	c7 01       	movw	r24, r14
    27ea:	b6 01       	movw	r22, r12
    27ec:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    27f0:	20 e0       	ldi	r18, 0x00	; 0
    27f2:	30 e0       	ldi	r19, 0x00	; 0
    27f4:	40 e2       	ldi	r20, 0x20	; 32
    27f6:	51 e4       	ldi	r21, 0x41	; 65
    27f8:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    27fc:	60 93 e4 28 	sts	0x28E4, r22	; 0x8028e4 <ERROR_CAL>
    2800:	70 93 e5 28 	sts	0x28E5, r23	; 0x8028e5 <ERROR_CAL+0x1>
    2804:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <ERROR_CAL+0x2>
    2808:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <ERROR_CAL+0x3>
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	80 93 e3 28 	sts	0x28E3, r24	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
    2812:	10 92 de 28 	sts	0x28DE, r1	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
    2816:	80 90 e4 28 	lds	r8, 0x28E4	; 0x8028e4 <ERROR_CAL>
    281a:	90 90 e5 28 	lds	r9, 0x28E5	; 0x8028e5 <ERROR_CAL+0x1>
    281e:	a0 90 e6 28 	lds	r10, 0x28E6	; 0x8028e6 <ERROR_CAL+0x2>
    2822:	b0 90 e7 28 	lds	r11, 0x28E7	; 0x8028e7 <ERROR_CAL+0x3>
    2826:	20 e0       	ldi	r18, 0x00	; 0
    2828:	30 e0       	ldi	r19, 0x00	; 0
    282a:	40 e2       	ldi	r20, 0x20	; 32
    282c:	51 e4       	ldi	r21, 0x41	; 65
    282e:	c5 01       	movw	r24, r10
    2830:	b4 01       	movw	r22, r8
    2832:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    2836:	6b 01       	movw	r12, r22
    2838:	7c 01       	movw	r14, r24
    283a:	20 e0       	ldi	r18, 0x00	; 0
    283c:	30 e0       	ldi	r19, 0x00	; 0
    283e:	a9 01       	movw	r20, r18
    2840:	c5 01       	movw	r24, r10
    2842:	b4 01       	movw	r22, r8
    2844:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2848:	87 ff       	sbrs	r24, 7
    284a:	41 c0       	rjmp	.+130    	; 0x28ce <MODE_CLICK()+0x5d4>
    284c:	81 e0       	ldi	r24, 0x01	; 1
    284e:	80 93 e8 28 	sts	0x28E8, r24	; 0x8028e8 <SIGN>
    2852:	f7 fa       	bst	r15, 7
    2854:	f0 94       	com	r15
    2856:	f7 f8       	bld	r15, 7
    2858:	f0 94       	com	r15
    285a:	c0 92 06 29 	sts	0x2906, r12	; 0x802906 <ERROR_CAL1>
    285e:	d0 92 07 29 	sts	0x2907, r13	; 0x802907 <ERROR_CAL1+0x1>
    2862:	e0 92 08 29 	sts	0x2908, r14	; 0x802908 <ERROR_CAL1+0x2>
    2866:	f0 92 09 29 	sts	0x2909, r15	; 0x802909 <ERROR_CAL1+0x3>
    286a:	c9 dc       	rcall	.-1646   	; 0x21fe <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    286c:	60 91 e8 28 	lds	r22, 0x28E8	; 0x8028e8 <SIGN>
    2870:	87 e0       	ldi	r24, 0x07	; 7
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	b2 dc       	rcall	.-1692   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2876:	60 91 e3 28 	lds	r22, 0x28E3	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
    287a:	88 e0       	ldi	r24, 0x08	; 8
    287c:	90 e0       	ldi	r25, 0x00	; 0
    287e:	ad dc       	rcall	.-1702   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2880:	60 91 de 28 	lds	r22, 0x28DE	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
    2884:	89 e0       	ldi	r24, 0x09	; 9
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	f8 ce       	rjmp	.-528    	; 0x267a <MODE_CLICK()+0x380>
    288a:	60 91 45 29 	lds	r22, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
    288e:	70 91 46 29 	lds	r23, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
    2892:	07 2e       	mov	r0, r23
    2894:	00 0c       	add	r0, r0
    2896:	88 0b       	sbc	r24, r24
    2898:	99 0b       	sbc	r25, r25
    289a:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    289e:	20 91 2e 28 	lds	r18, 0x282E	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    28a2:	30 91 2f 28 	lds	r19, 0x282F	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    28a6:	40 91 30 28 	lds	r20, 0x2830	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    28aa:	50 91 31 28 	lds	r21, 0x2831	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    28ae:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    28b2:	60 93 e4 28 	sts	0x28E4, r22	; 0x8028e4 <ERROR_CAL>
    28b6:	70 93 e5 28 	sts	0x28E5, r23	; 0x8028e5 <ERROR_CAL+0x1>
    28ba:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <ERROR_CAL+0x2>
    28be:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <ERROR_CAL+0x3>
    28c2:	10 92 e3 28 	sts	0x28E3, r1	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
    28c6:	81 e0       	ldi	r24, 0x01	; 1
    28c8:	80 93 de 28 	sts	0x28DE, r24	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
    28cc:	a4 cf       	rjmp	.-184    	; 0x2816 <MODE_CLICK()+0x51c>
    28ce:	10 92 e8 28 	sts	0x28E8, r1	; 0x8028e8 <SIGN>
    28d2:	c3 cf       	rjmp	.-122    	; 0x285a <MODE_CLICK()+0x560>
    28d4:	80 91 2f 29 	lds	r24, 0x292F	; 0x80292f <SET_LONG_VALUE+0x12>
    28d8:	90 91 30 29 	lds	r25, 0x2930	; 0x802930 <SET_LONG_VALUE+0x13>
    28dc:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    28e0:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    28e4:	0a 96       	adiw	r24, 0x0a	; 10
    28e6:	80 93 31 29 	sts	0x2931, r24	; 0x802931 <SET_LONG_VALUE+0x14>
    28ea:	90 93 32 29 	sts	0x2932, r25	; 0x802932 <SET_LONG_VALUE+0x15>
    28ee:	c6 ce       	rjmp	.-628    	; 0x267c <MODE_CLICK()+0x382>
    28f0:	80 91 31 29 	lds	r24, 0x2931	; 0x802931 <SET_LONG_VALUE+0x14>
    28f4:	90 91 32 29 	lds	r25, 0x2932	; 0x802932 <SET_LONG_VALUE+0x15>
    28f8:	80 93 4b 28 	sts	0x284B, r24	; 0x80284b <HIGH_CAL_VALUE_SET>
    28fc:	90 93 4c 28 	sts	0x284C, r25	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    2900:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    2904:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    2908:	a0 91 00 29 	lds	r26, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    290c:	b0 91 01 29 	lds	r27, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    2910:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    2914:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2918:	a0 93 2c 28 	sts	0x282C, r26	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    291c:	b0 93 2d 28 	sts	0x282D, r27	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    2920:	ad ce       	rjmp	.-678    	; 0x267c <MODE_CLICK()+0x382>
    2922:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    2926:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    292a:	a0 91 00 29 	lds	r26, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    292e:	b0 91 01 29 	lds	r27, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    2932:	80 93 26 28 	sts	0x2826, r24	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    2936:	90 93 27 28 	sts	0x2827, r25	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    293a:	a0 93 28 28 	sts	0x2828, r26	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    293e:	b0 93 29 28 	sts	0x2829, r27	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2942:	9c ce       	rjmp	.-712    	; 0x267c <MODE_CLICK()+0x382>
    2944:	20 e0       	ldi	r18, 0x00	; 0
    2946:	30 e0       	ldi	r19, 0x00	; 0
    2948:	40 e2       	ldi	r20, 0x20	; 32
    294a:	51 e4       	ldi	r21, 0x41	; 65
    294c:	60 91 2a 28 	lds	r22, 0x282A	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    2950:	70 91 2b 28 	lds	r23, 0x282B	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2954:	80 91 2c 28 	lds	r24, 0x282C	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    2958:	90 91 2d 28 	lds	r25, 0x282D	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    295c:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    2960:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    2964:	60 93 cc 28 	sts	0x28CC, r22	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV>
    2968:	70 93 cd 28 	sts	0x28CD, r23	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x1>
    296c:	80 93 ce 28 	sts	0x28CE, r24	; 0x8028ce <CAL2_RAW_LOW_VALUE_CONV+0x2>
    2970:	90 93 cf 28 	sts	0x28CF, r25	; 0x8028cf <CAL2_RAW_LOW_VALUE_CONV+0x3>
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e0       	ldi	r19, 0x00	; 0
    2978:	40 e2       	ldi	r20, 0x20	; 32
    297a:	51 e4       	ldi	r21, 0x41	; 65
    297c:	60 91 26 28 	lds	r22, 0x2826	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    2980:	70 91 27 28 	lds	r23, 0x2827	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    2984:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    2988:	90 91 29 28 	lds	r25, 0x2829	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    298c:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    2990:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    2994:	60 93 c8 28 	sts	0x28C8, r22	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV>
    2998:	70 93 c9 28 	sts	0x28C9, r23	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    299c:	80 93 ca 28 	sts	0x28CA, r24	; 0x8028ca <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    29a0:	90 93 cb 28 	sts	0x28CB, r25	; 0x8028cb <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    29a4:	6c ec       	ldi	r22, 0xCC	; 204
    29a6:	78 e2       	ldi	r23, 0x28	; 40
    29a8:	80 e5       	ldi	r24, 0x50	; 80
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	4f dc       	rcall	.-1890   	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    29ae:	68 ec       	ldi	r22, 0xC8	; 200
    29b0:	78 e2       	ldi	r23, 0x28	; 40
    29b2:	8a e5       	ldi	r24, 0x5A	; 90
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	4a dc       	rcall	.-1900   	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    29b8:	20 e0       	ldi	r18, 0x00	; 0
    29ba:	30 e0       	ldi	r19, 0x00	; 0
    29bc:	40 e2       	ldi	r20, 0x20	; 32
    29be:	51 e4       	ldi	r21, 0x41	; 65
    29c0:	60 91 4d 28 	lds	r22, 0x284D	; 0x80284d <CAL2_CALCULATED_LOW_CAL_VALUE>
    29c4:	70 91 4e 28 	lds	r23, 0x284E	; 0x80284e <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    29c8:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    29cc:	90 91 50 28 	lds	r25, 0x2850	; 0x802850 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    29d0:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    29d4:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    29d8:	60 93 c4 28 	sts	0x28C4, r22	; 0x8028c4 <MASTER_LOW_CONV>
    29dc:	70 93 c5 28 	sts	0x28C5, r23	; 0x8028c5 <MASTER_LOW_CONV+0x1>
    29e0:	80 93 c6 28 	sts	0x28C6, r24	; 0x8028c6 <MASTER_LOW_CONV+0x2>
    29e4:	90 93 c7 28 	sts	0x28C7, r25	; 0x8028c7 <MASTER_LOW_CONV+0x3>
    29e8:	20 e0       	ldi	r18, 0x00	; 0
    29ea:	30 e0       	ldi	r19, 0x00	; 0
    29ec:	40 e2       	ldi	r20, 0x20	; 32
    29ee:	51 e4       	ldi	r21, 0x41	; 65
    29f0:	60 91 47 28 	lds	r22, 0x2847	; 0x802847 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    29f4:	70 91 48 28 	lds	r23, 0x2848	; 0x802848 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    29f8:	80 91 49 28 	lds	r24, 0x2849	; 0x802849 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    29fc:	90 91 4a 28 	lds	r25, 0x284A	; 0x80284a <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    2a00:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    2a04:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    2a08:	60 93 c0 28 	sts	0x28C0, r22	; 0x8028c0 <MASTER_HIGH_CONV>
    2a0c:	70 93 c1 28 	sts	0x28C1, r23	; 0x8028c1 <MASTER_HIGH_CONV+0x1>
    2a10:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <MASTER_HIGH_CONV+0x2>
    2a14:	90 93 c3 28 	sts	0x28C3, r25	; 0x8028c3 <MASTER_HIGH_CONV+0x3>
    2a18:	64 ec       	ldi	r22, 0xC4	; 196
    2a1a:	78 e2       	ldi	r23, 0x28	; 40
    2a1c:	84 e6       	ldi	r24, 0x64	; 100
    2a1e:	90 e0       	ldi	r25, 0x00	; 0
    2a20:	15 dc       	rcall	.-2006   	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    2a22:	60 ec       	ldi	r22, 0xC0	; 192
    2a24:	78 e2       	ldi	r23, 0x28	; 40
    2a26:	8e e6       	ldi	r24, 0x6E	; 110
    2a28:	90 e0       	ldi	r25, 0x00	; 0
    2a2a:	10 dc       	rcall	.-2016   	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    2a2c:	27 ce       	rjmp	.-946    	; 0x267c <MODE_CLICK()+0x382>
    2a2e:	61 e0       	ldi	r22, 0x01	; 1
    2a30:	80 91 23 29 	lds	r24, 0x2923	; 0x802923 <SET_LONG_VALUE+0x6>
    2a34:	90 91 24 29 	lds	r25, 0x2924	; 0x802924 <SET_LONG_VALUE+0x7>
    2a38:	89 2b       	or	r24, r25
    2a3a:	09 f4       	brne	.+2      	; 0x2a3e <MODE_CLICK()+0x744>
    2a3c:	60 e0       	ldi	r22, 0x00	; 0
    2a3e:	60 93 64 28 	sts	0x2864, r22	; 0x802864 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    2a42:	81 e4       	ldi	r24, 0x41	; 65
    2a44:	90 e0       	ldi	r25, 0x00	; 0
    2a46:	89 83       	std	Y+1, r24	; 0x01
    2a48:	9a 83       	std	Y+2, r25	; 0x02
    2a4a:	ce 01       	movw	r24, r28
    2a4c:	01 96       	adiw	r24, 0x01	; 1
    2a4e:	c6 db       	rcall	.-2164   	; 0x21dc <EERef::update(unsigned char)>
    2a50:	15 ce       	rjmp	.-982    	; 0x267c <MODE_CLICK()+0x382>
MODE_CLICK():
    2a52:	9c 01       	movw	r18, r24
    2a54:	2b 7f       	andi	r18, 0xFB	; 251
    2a56:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    2a5a:	2a 30       	cpi	r18, 0x0A	; 10
    2a5c:	31 05       	cpc	r19, r1
    2a5e:	09 f4       	brne	.+2      	; 0x2a62 <MODE_CLICK()+0x768>
    2a60:	27 ce       	rjmp	.-946    	; 0x26b0 <MODE_CLICK()+0x3b6>
    2a62:	8c 30       	cpi	r24, 0x0C	; 12
    2a64:	91 05       	cpc	r25, r1
    2a66:	09 f0       	breq	.+2      	; 0x2a6a <MODE_CLICK()+0x770>
    2a68:	93 cd       	rjmp	.-1242   	; 0x2590 <MODE_CLICK()+0x296>
    2a6a:	22 ce       	rjmp	.-956    	; 0x26b0 <MODE_CLICK()+0x3b6>
    2a6c:	81 e0       	ldi	r24, 0x01	; 1
    2a6e:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <PUMP_FLAG>
    2a72:	8e cc       	rjmp	.-1764   	; 0x2390 <MODE_CLICK()+0x96>
    2a74:	82 e3       	ldi	r24, 0x32	; 50
    2a76:	90 e0       	ldi	r25, 0x00	; 0
    2a78:	0e 94 14 0b 	call	0x1628	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    2a7c:	b0 cc       	rjmp	.-1696   	; 0x23de <MODE_CLICK()+0xe4>

00002a7e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]>:
SET_SHORT_PRESS_FUNCTION():
    2a7e:	2f 92       	push	r2
    2a80:	3f 92       	push	r3
    2a82:	4f 92       	push	r4
    2a84:	5f 92       	push	r5
    2a86:	6f 92       	push	r6
    2a88:	7f 92       	push	r7
    2a8a:	8f 92       	push	r8
    2a8c:	9f 92       	push	r9
    2a8e:	af 92       	push	r10
    2a90:	bf 92       	push	r11
    2a92:	cf 92       	push	r12
    2a94:	df 92       	push	r13
    2a96:	ef 92       	push	r14
    2a98:	ff 92       	push	r15
    2a9a:	0f 93       	push	r16
    2a9c:	1f 93       	push	r17
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	c0 91 1c 29 	lds	r28, 0x291C	; 0x80291c <ENTER_BUT>
    2aa6:	c2 30       	cpi	r28, 0x02	; 2
    2aa8:	09 f4       	brne	.+2      	; 0x2aac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2e>
    2aaa:	3c c6       	rjmp	.+3192   	; 0x3724 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xca6>
    2aac:	cc f4       	brge	.+50     	; 0x2ae0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x62>
    2aae:	cc 23       	and	r28, r28
    2ab0:	09 f4       	brne	.+2      	; 0x2ab4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x36>
    2ab2:	bc c3       	rjmp	.+1912   	; 0x322c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x7ae>
    2ab4:	c1 30       	cpi	r28, 0x01	; 1
    2ab6:	09 f4       	brne	.+2      	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    2ab8:	b6 c5       	rjmp	.+2924   	; 0x3626 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xba8>
    2aba:	df 91       	pop	r29
    2abc:	cf 91       	pop	r28
    2abe:	1f 91       	pop	r17
    2ac0:	0f 91       	pop	r16
    2ac2:	ff 90       	pop	r15
    2ac4:	ef 90       	pop	r14
    2ac6:	df 90       	pop	r13
    2ac8:	cf 90       	pop	r12
    2aca:	bf 90       	pop	r11
    2acc:	af 90       	pop	r10
    2ace:	9f 90       	pop	r9
    2ad0:	8f 90       	pop	r8
    2ad2:	7f 90       	pop	r7
    2ad4:	6f 90       	pop	r6
    2ad6:	5f 90       	pop	r5
    2ad8:	4f 90       	pop	r4
    2ada:	3f 90       	pop	r3
    2adc:	2f 90       	pop	r2
    2ade:	08 95       	ret
    2ae0:	c4 30       	cpi	r28, 0x04	; 4
    2ae2:	09 f4       	brne	.+2      	; 0x2ae6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x68>
    2ae4:	26 c7       	rjmp	.+3660   	; 0x3932 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xeb4>
    2ae6:	0c f4       	brge	.+2      	; 0x2aea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x6c>
    2ae8:	a0 c6       	rjmp	.+3392   	; 0x382a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xdac>
    2aea:	c5 30       	cpi	r28, 0x05	; 5
    2aec:	31 f7       	brne	.-52     	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    2aee:	c0 90 12 29 	lds	r12, 0x2912	; 0x802912 <SET_VALUE+0x2>
    2af2:	d0 90 13 29 	lds	r13, 0x2913	; 0x802913 <SET_VALUE+0x3>
    2af6:	60 91 14 29 	lds	r22, 0x2914	; 0x802914 <SET_VALUE+0x4>
    2afa:	70 91 15 29 	lds	r23, 0x2915	; 0x802915 <SET_VALUE+0x5>
    2afe:	07 2e       	mov	r0, r23
    2b00:	00 0c       	add	r0, r0
    2b02:	88 0b       	sbc	r24, r24
    2b04:	99 0b       	sbc	r25, r25
    2b06:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    2b0a:	20 e0       	ldi	r18, 0x00	; 0
    2b0c:	30 e0       	ldi	r19, 0x00	; 0
    2b0e:	40 e2       	ldi	r20, 0x20	; 32
    2b10:	51 e4       	ldi	r21, 0x41	; 65
    2b12:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    2b16:	4b 01       	movw	r8, r22
    2b18:	5c 01       	movw	r10, r24
    2b1a:	b6 01       	movw	r22, r12
    2b1c:	dd 0c       	add	r13, r13
    2b1e:	88 0b       	sbc	r24, r24
    2b20:	99 0b       	sbc	r25, r25
    2b22:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    2b26:	9b 01       	movw	r18, r22
    2b28:	ac 01       	movw	r20, r24
    2b2a:	c5 01       	movw	r24, r10
    2b2c:	b4 01       	movw	r22, r8
    2b2e:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    2b32:	4b 01       	movw	r8, r22
    2b34:	5c 01       	movw	r10, r24
    2b36:	80 92 97 28 	sts	0x2897, r8	; 0x802897 <SET_TEMP_DEG>
    2b3a:	90 92 98 28 	sts	0x2898, r9	; 0x802898 <SET_TEMP_DEG+0x1>
    2b3e:	a0 92 99 28 	sts	0x2899, r10	; 0x802899 <SET_TEMP_DEG+0x2>
    2b42:	b0 92 9a 28 	sts	0x289A, r11	; 0x80289a <SET_TEMP_DEG+0x3>
    2b46:	c0 91 3c 29 	lds	r28, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
    2b4a:	d0 91 3d 29 	lds	r29, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    2b4e:	c0 93 95 28 	sts	0x2895, r28	; 0x802895 <SET_TEMP_FAH>
    2b52:	d0 93 96 28 	sts	0x2896, r29	; 0x802896 <SET_TEMP_FAH+0x1>
    2b56:	e0 90 16 29 	lds	r14, 0x2916	; 0x802916 <SET_VALUE+0x6>
    2b5a:	f0 90 17 29 	lds	r15, 0x2917	; 0x802917 <SET_VALUE+0x7>
    2b5e:	e0 92 93 28 	sts	0x2893, r14	; 0x802893 <SET_HOUR>
    2b62:	f0 92 94 28 	sts	0x2894, r15	; 0x802894 <SET_HOUR+0x1>
    2b66:	00 91 18 29 	lds	r16, 0x2918	; 0x802918 <SET_VALUE+0x8>
    2b6a:	10 91 19 29 	lds	r17, 0x2919	; 0x802919 <SET_VALUE+0x9>
    2b6e:	00 93 91 28 	sts	0x2891, r16	; 0x802891 <SET_MINUTE>
    2b72:	10 93 92 28 	sts	0x2892, r17	; 0x802892 <SET_MINUTE+0x1>
    2b76:	2c e3       	ldi	r18, 0x3C	; 60
    2b78:	2e 9d       	mul	r18, r14
    2b7a:	c0 01       	movw	r24, r0
    2b7c:	2f 9d       	mul	r18, r15
    2b7e:	90 0d       	add	r25, r0
    2b80:	11 24       	eor	r1, r1
    2b82:	80 0f       	add	r24, r16
    2b84:	91 1f       	adc	r25, r17
    2b86:	80 93 9b 28 	sts	0x289B, r24	; 0x80289b <SET_MIN>
    2b8a:	90 93 9c 28 	sts	0x289C, r25	; 0x80289c <SET_MIN+0x1>
    2b8e:	81 e0       	ldi	r24, 0x01	; 1
    2b90:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    2b94:	6c 2d       	mov	r22, r12
    2b96:	83 e7       	ldi	r24, 0x73	; 115
    2b98:	90 e0       	ldi	r25, 0x00	; 0
    2b9a:	1f db       	rcall	.-2498   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b9c:	60 91 14 29 	lds	r22, 0x2914	; 0x802914 <SET_VALUE+0x4>
    2ba0:	85 e7       	ldi	r24, 0x75	; 117
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	1a db       	rcall	.-2508   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2ba6:	6c e3       	ldi	r22, 0x3C	; 60
    2ba8:	79 e2       	ldi	r23, 0x29	; 41
    2baa:	88 e7       	ldi	r24, 0x78	; 120
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	80 db       	rcall	.-2304   	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    2bb0:	6e 2d       	mov	r22, r14
    2bb2:	8d e7       	ldi	r24, 0x7D	; 125
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	11 db       	rcall	.-2526   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2bb8:	60 2f       	mov	r22, r16
    2bba:	82 e8       	ldi	r24, 0x82	; 130
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	0d db       	rcall	.-2534   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
Process_Time_Set_On_Eeprom():
    2bc0:	61 e0       	ldi	r22, 0x01	; 1
    2bc2:	87 e8       	ldi	r24, 0x87	; 135
    2bc4:	90 e0       	ldi	r25, 0x00	; 0
    2bc6:	09 db       	rcall	.-2542   	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2bc8:	10 91 4f 29 	lds	r17, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    2bcc:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <FILL_BATH_ERROR_NOT_CLEAR>
    2bd0:	81 11       	cpse	r24, r1
    2bd2:	1b c0       	rjmp	.+54     	; 0x2c0a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x18c>
    2bd4:	11 11       	cpse	r17, r1
    2bd6:	4f c7       	rjmp	.+3742   	; 0x3a76 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xff8>
    2bd8:	20 e0       	ldi	r18, 0x00	; 0
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	40 e2       	ldi	r20, 0x20	; 32
    2bde:	51 e4       	ldi	r21, 0x41	; 65
    2be0:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG>
    2be4:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    2be8:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    2bec:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    2bf0:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    2bf4:	9b 01       	movw	r18, r22
    2bf6:	ac 01       	movw	r20, r24
    2bf8:	c5 01       	movw	r24, r10
    2bfa:	b4 01       	movw	r22, r8
    2bfc:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    2c00:	87 ff       	sbrs	r24, 7
    2c02:	03 c0       	rjmp	.+6      	; 0x2c0a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x18c>
    2c04:	81 e0       	ldi	r24, 0x01	; 1
    2c06:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <FILL_BATH_ERROR_NOT_CLEAR>
    2c0a:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <FILL_BATH_ERROR_NOT_CLEAR>
    2c0e:	88 23       	and	r24, r24
    2c10:	09 f4       	brne	.+2      	; 0x2c14 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x196>
    2c12:	4c c7       	rjmp	.+3736   	; 0x3aac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x102e>
    2c14:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING>
    2c18:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x1>
    2c1c:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <RATE_OF_HEATING+0x2>
    2c20:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <RATE_OF_HEATING+0x3>
    2c24:	81 e0       	ldi	r24, 0x01	; 1
    2c26:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    2c2a:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <FILL_BATH_ERROR_NOT_CLEAR>
    2c2e:	11 11       	cpse	r17, r1
    2c30:	5e c7       	rjmp	.+3772   	; 0x3aee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1070>
    2c32:	80 91 97 28 	lds	r24, 0x2897	; 0x802897 <SET_TEMP_DEG>
    2c36:	90 91 98 28 	lds	r25, 0x2898	; 0x802898 <SET_TEMP_DEG+0x1>
    2c3a:	a0 91 99 28 	lds	r26, 0x2899	; 0x802899 <SET_TEMP_DEG+0x2>
    2c3e:	b0 91 9a 28 	lds	r27, 0x289A	; 0x80289a <SET_TEMP_DEG+0x3>
    2c42:	80 93 84 28 	sts	0x2884, r24	; 0x802884 <PID_SETPOINT_To_Show>
    2c46:	90 93 85 28 	sts	0x2885, r25	; 0x802885 <PID_SETPOINT_To_Show+0x1>
    2c4a:	a0 93 86 28 	sts	0x2886, r26	; 0x802886 <PID_SETPOINT_To_Show+0x2>
    2c4e:	b0 93 87 28 	sts	0x2887, r27	; 0x802887 <PID_SETPOINT_To_Show+0x3>
    2c52:	80 93 ee 29 	sts	0x29EE, r24	; 0x8029ee <PID_SETPOINT>
    2c56:	90 93 ef 29 	sts	0x29EF, r25	; 0x8029ef <PID_SETPOINT+0x1>
    2c5a:	a0 93 f0 29 	sts	0x29F0, r26	; 0x8029f0 <PID_SETPOINT+0x2>
    2c5e:	b0 93 f1 29 	sts	0x29F1, r27	; 0x8029f1 <PID_SETPOINT+0x3>
    2c62:	81 e5       	ldi	r24, 0x51	; 81
    2c64:	9a e2       	ldi	r25, 0x2A	; 42
    2c66:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
    2c6a:	81 e0       	ldi	r24, 0x01	; 1
    2c6c:	80 93 83 28 	sts	0x2883, r24	; 0x802883 <Alternate_Display_Flag>
digitalWrite():
    2c70:	61 e0       	ldi	r22, 0x01	; 1
    2c72:	88 e1       	ldi	r24, 0x18	; 24
    2c74:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c78:	01 e0       	ldi	r16, 0x01	; 1
    2c7a:	10 e0       	ldi	r17, 0x00	; 0
    2c7c:	8c e3       	ldi	r24, 0x3C	; 60
    2c7e:	28 2e       	mov	r2, r24
    2c80:	31 2c       	mov	r3, r1
    2c82:	c5 e1       	ldi	r28, 0x15	; 21
    2c84:	d0 e0       	ldi	r29, 0x00	; 0
    2c86:	80 91 9b 28 	lds	r24, 0x289B	; 0x80289b <SET_MIN>
    2c8a:	90 91 9c 28 	lds	r25, 0x289C	; 0x80289c <SET_MIN+0x1>
    2c8e:	18 16       	cp	r1, r24
    2c90:	19 06       	cpc	r1, r25
    2c92:	14 f0       	brlt	.+4      	; 0x2c98 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x21a>
    2c94:	0c 94 73 1f 	jmp	0x3ee6	; 0x3ee6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1468>
toggle_ticker_update():
    2c98:	89 e2       	ldi	r24, 0x29	; 41
    2c9a:	9b e2       	ldi	r25, 0x2B	; 43
    2c9c:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2ca0:	20 e0       	ldi	r18, 0x00	; 0
    2ca2:	30 e0       	ldi	r19, 0x00	; 0
    2ca4:	40 e2       	ldi	r20, 0x20	; 32
    2ca6:	51 e4       	ldi	r21, 0x41	; 65
    2ca8:	60 91 97 28 	lds	r22, 0x2897	; 0x802897 <SET_TEMP_DEG>
    2cac:	70 91 98 28 	lds	r23, 0x2898	; 0x802898 <SET_TEMP_DEG+0x1>
    2cb0:	80 91 99 28 	lds	r24, 0x2899	; 0x802899 <SET_TEMP_DEG+0x2>
    2cb4:	90 91 9a 28 	lds	r25, 0x289A	; 0x80289a <SET_TEMP_DEG+0x3>
    2cb8:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    2cbc:	20 91 02 29 	lds	r18, 0x2902	; 0x802902 <TEMP_DEG>
    2cc0:	30 91 03 29 	lds	r19, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    2cc4:	40 91 04 29 	lds	r20, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    2cc8:	50 91 05 29 	lds	r21, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    2ccc:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2cd0:	87 ff       	sbrs	r24, 7
    2cd2:	04 c0       	rjmp	.+8      	; 0x2cdc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x25e>
    2cd4:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    2cd8:	88 23       	and	r24, r24
    2cda:	e9 f0       	breq	.+58     	; 0x2d16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x298>
    2cdc:	60 91 95 28 	lds	r22, 0x2895	; 0x802895 <SET_TEMP_FAH>
    2ce0:	70 91 96 28 	lds	r23, 0x2896	; 0x802896 <SET_TEMP_FAH+0x1>
    2ce4:	66 5f       	subi	r22, 0xF6	; 246
    2ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ce8:	07 2e       	mov	r0, r23
    2cea:	00 0c       	add	r0, r0
    2cec:	88 0b       	sbc	r24, r24
    2cee:	99 0b       	sbc	r25, r25
    2cf0:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    2cf4:	20 91 d0 28 	lds	r18, 0x28D0	; 0x8028d0 <TEMP_FAH>
    2cf8:	30 91 d1 28 	lds	r19, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    2cfc:	40 91 d2 28 	lds	r20, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    2d00:	50 91 d3 28 	lds	r21, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    2d04:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2d08:	87 ff       	sbrs	r24, 7
    2d0a:	18 c7       	rjmp	.+3632   	; 0x3b3c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x10be>
    2d0c:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    2d10:	88 23       	and	r24, r24
    2d12:	09 f4       	brne	.+2      	; 0x2d16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x298>
    2d14:	13 c7       	rjmp	.+3622   	; 0x3b3c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x10be>
    2d16:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    2d1a:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    2d1e:	81 e0       	ldi	r24, 0x01	; 1
    2d20:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <checkTempRaised>
digitalWrite():
    2d24:	60 e0       	ldi	r22, 0x00	; 0
    2d26:	88 e1       	ldi	r24, 0x18	; 24
    2d28:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2d2c:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
    2d30:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN>
    2d34:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <SET_MIN+0x1>
digitalWrite():
    2d38:	61 e0       	ldi	r22, 0x01	; 1
    2d3a:	8d e1       	ldi	r24, 0x1D	; 29
    2d3c:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    2d40:	60 e0       	ldi	r22, 0x00	; 0
    2d42:	8b e1       	ldi	r24, 0x1B	; 27
    2d44:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2d48:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
DISP_UPDATE():
    2d4c:	8b ed       	ldi	r24, 0xDB	; 219
    2d4e:	9b e2       	ldi	r25, 0x2B	; 43
    2d50:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2d54:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <STIR_VALUE_SET>
    2d58:	88 23       	and	r24, r24
    2d5a:	29 f0       	breq	.+10     	; 0x2d66 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2e8>
    2d5c:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
digitalWrite():
    2d60:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    2d62:	81 11       	cpse	r24, r1
    2d64:	01 c0       	rjmp	.+2      	; 0x2d68 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2ea>
digitalWrite():
    2d66:	60 e0       	ldi	r22, 0x00	; 0
    2d68:	89 e1       	ldi	r24, 0x19	; 25
    2d6a:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2d6e:	b0 90 a8 28 	lds	r11, 0x28A8	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    2d72:	b1 10       	cpse	r11, r1
    2d74:	0a c0       	rjmp	.+20     	; 0x2d8a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x30c>
    2d76:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    2d7a:	60 93 7f 28 	sts	0x287F, r22	; 0x80287f <STOP_COUNT_VALUE>
    2d7e:	70 93 80 28 	sts	0x2880, r23	; 0x802880 <STOP_COUNT_VALUE+0x1>
    2d82:	80 93 81 28 	sts	0x2881, r24	; 0x802881 <STOP_COUNT_VALUE+0x2>
    2d86:	90 93 82 28 	sts	0x2882, r25	; 0x802882 <STOP_COUNT_VALUE+0x3>
    2d8a:	c0 90 7f 28 	lds	r12, 0x287F	; 0x80287f <STOP_COUNT_VALUE>
    2d8e:	d0 90 80 28 	lds	r13, 0x2880	; 0x802880 <STOP_COUNT_VALUE+0x1>
    2d92:	e0 90 81 28 	lds	r14, 0x2881	; 0x802881 <STOP_COUNT_VALUE+0x2>
    2d96:	f0 90 82 28 	lds	r15, 0x2882	; 0x802882 <STOP_COUNT_VALUE+0x3>
    2d9a:	80 91 88 28 	lds	r24, 0x2888	; 0x802888 <START_COUNT_VALUE>
    2d9e:	90 91 89 28 	lds	r25, 0x2889	; 0x802889 <START_COUNT_VALUE+0x1>
    2da2:	a0 91 8a 28 	lds	r26, 0x288A	; 0x80288a <START_COUNT_VALUE+0x2>
    2da6:	b0 91 8b 28 	lds	r27, 0x288B	; 0x80288b <START_COUNT_VALUE+0x3>
    2daa:	c8 1a       	sub	r12, r24
    2dac:	d9 0a       	sbc	r13, r25
    2dae:	ea 0a       	sbc	r14, r26
    2db0:	fb 0a       	sbc	r15, r27
    2db2:	20 e2       	ldi	r18, 0x20	; 32
    2db4:	c2 16       	cp	r12, r18
    2db6:	2f eb       	ldi	r18, 0xBF	; 191
    2db8:	d2 06       	cpc	r13, r18
    2dba:	22 e0       	ldi	r18, 0x02	; 2
    2dbc:	e2 06       	cpc	r14, r18
    2dbe:	f1 04       	cpc	r15, r1
    2dc0:	08 f4       	brcc	.+2      	; 0x2dc4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x346>
    2dc2:	51 c0       	rjmp	.+162    	; 0x2e66 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3e8>
    2dc4:	b1 10       	cpse	r11, r1
    2dc6:	4f c0       	rjmp	.+158    	; 0x2e66 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3e8>
    2dc8:	80 90 fe 28 	lds	r8, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    2dcc:	90 90 ff 28 	lds	r9, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    2dd0:	a0 90 00 29 	lds	r10, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    2dd4:	b0 90 01 29 	lds	r11, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    2dd8:	20 91 8c 28 	lds	r18, 0x288C	; 0x80288c <TEMP_VALUE_INITIAL>
    2ddc:	30 91 8d 28 	lds	r19, 0x288D	; 0x80288d <TEMP_VALUE_INITIAL+0x1>
    2de0:	40 91 8e 28 	lds	r20, 0x288E	; 0x80288e <TEMP_VALUE_INITIAL+0x2>
    2de4:	50 91 8f 28 	lds	r21, 0x288F	; 0x80288f <TEMP_VALUE_INITIAL+0x3>
    2de8:	c5 01       	movw	r24, r10
    2dea:	b4 01       	movw	r22, r8
    2dec:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    2df0:	2b 01       	movw	r4, r22
    2df2:	3c 01       	movw	r6, r24
    2df4:	c7 01       	movw	r24, r14
    2df6:	b6 01       	movw	r22, r12
    2df8:	20 e6       	ldi	r18, 0x60	; 96
    2dfa:	3a ee       	ldi	r19, 0xEA	; 234
    2dfc:	40 e0       	ldi	r20, 0x00	; 0
    2dfe:	50 e0       	ldi	r21, 0x00	; 0
    2e00:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <__udivmodsi4>
    2e04:	ca 01       	movw	r24, r20
    2e06:	b9 01       	movw	r22, r18
    2e08:	0e 94 c6 38 	call	0x718c	; 0x718c <__floatunsisf>
    2e0c:	9b 01       	movw	r18, r22
    2e0e:	ac 01       	movw	r20, r24
    2e10:	c3 01       	movw	r24, r6
    2e12:	b2 01       	movw	r22, r4
    2e14:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    2e18:	60 93 ac 28 	sts	0x28AC, r22	; 0x8028ac <RATE_OF_HEATING>
    2e1c:	70 93 ad 28 	sts	0x28AD, r23	; 0x8028ad <RATE_OF_HEATING+0x1>
    2e20:	80 93 ae 28 	sts	0x28AE, r24	; 0x8028ae <RATE_OF_HEATING+0x2>
    2e24:	90 93 af 28 	sts	0x28AF, r25	; 0x8028af <RATE_OF_HEATING+0x3>
    2e28:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    2e2c:	60 93 7b 28 	sts	0x287B, r22	; 0x80287b <PREVIOUS_COOLING_RATE_TIME>
    2e30:	70 93 7c 28 	sts	0x287C, r23	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x1>
    2e34:	80 93 7d 28 	sts	0x287D, r24	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x2>
    2e38:	90 93 7e 28 	sts	0x287E, r25	; 0x80287e <PREVIOUS_COOLING_RATE_TIME+0x3>
    2e3c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    2e40:	60 93 77 28 	sts	0x2877, r22	; 0x802877 <CAL_OF_10_MIN>
    2e44:	70 93 78 28 	sts	0x2878, r23	; 0x802878 <CAL_OF_10_MIN+0x1>
    2e48:	80 93 79 28 	sts	0x2879, r24	; 0x802879 <CAL_OF_10_MIN+0x2>
    2e4c:	90 93 7a 28 	sts	0x287A, r25	; 0x80287a <CAL_OF_10_MIN+0x3>
    2e50:	80 92 73 28 	sts	0x2873, r8	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE>
    2e54:	90 92 74 28 	sts	0x2874, r9	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2e58:	a0 92 75 28 	sts	0x2875, r10	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2e5c:	b0 92 76 28 	sts	0x2876, r11	; 0x802876 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2e60:	81 e0       	ldi	r24, 0x01	; 1
    2e62:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    2e66:	c0 90 ac 28 	lds	r12, 0x28AC	; 0x8028ac <RATE_OF_HEATING>
    2e6a:	d0 90 ad 28 	lds	r13, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x1>
    2e6e:	e0 90 ae 28 	lds	r14, 0x28AE	; 0x8028ae <RATE_OF_HEATING+0x2>
    2e72:	f0 90 af 28 	lds	r15, 0x28AF	; 0x8028af <RATE_OF_HEATING+0x3>
    2e76:	20 e0       	ldi	r18, 0x00	; 0
    2e78:	30 e0       	ldi	r19, 0x00	; 0
    2e7a:	40 e8       	ldi	r20, 0x80	; 128
    2e7c:	5f e3       	ldi	r21, 0x3F	; 63
    2e7e:	c7 01       	movw	r24, r14
    2e80:	b6 01       	movw	r22, r12
    2e82:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    2e86:	87 fd       	sbrc	r24, 7
    2e88:	a0 c6       	rjmp	.+3392   	; 0x3bca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x114c>
    2e8a:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    2e8e:	88 23       	and	r24, r24
    2e90:	09 f4       	brne	.+2      	; 0x2e94 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x416>
    2e92:	a1 c0       	rjmp	.+322    	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x558>
digitalWrite():
    2e94:	60 e0       	ldi	r22, 0x00	; 0
    2e96:	81 e2       	ldi	r24, 0x21	; 33
    2e98:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
stop():
    2e9c:	10 92 36 2a 	sts	0x2A36, r1	; 0x802a36 <PID_EXE>
    2ea0:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <PID_EXE+0xb>
    2ea4:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <PID_EXE+0xc>
    2ea8:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <PID_EXE+0xd>
    2eac:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <PID_EXE+0xe>
    2eb0:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xf>
    2eb4:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2eb8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    2ebc:	6b 01       	movw	r12, r22
    2ebe:	7c 01       	movw	r14, r24
    2ec0:	c0 92 6f 28 	sts	0x286F, r12	; 0x80286f <CURRENT_COOLING_RATE_TIME>
    2ec4:	d0 92 70 28 	sts	0x2870, r13	; 0x802870 <CURRENT_COOLING_RATE_TIME+0x1>
    2ec8:	e0 92 71 28 	sts	0x2871, r14	; 0x802871 <CURRENT_COOLING_RATE_TIME+0x2>
    2ecc:	f0 92 72 28 	sts	0x2872, r15	; 0x802872 <CURRENT_COOLING_RATE_TIME+0x3>
    2ed0:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <EXECUTE_PID_LOOP>
    2ed4:	80 90 fe 28 	lds	r8, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    2ed8:	90 90 ff 28 	lds	r9, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    2edc:	a0 90 00 29 	lds	r10, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    2ee0:	b0 90 01 29 	lds	r11, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    2ee4:	80 92 6b 28 	sts	0x286B, r8	; 0x80286b <CURRENT_TEMP_COOLING_RATE>
    2ee8:	90 92 6c 28 	sts	0x286C, r9	; 0x80286c <CURRENT_TEMP_COOLING_RATE+0x1>
    2eec:	a0 92 6d 28 	sts	0x286D, r10	; 0x80286d <CURRENT_TEMP_COOLING_RATE+0x2>
    2ef0:	b0 92 6e 28 	sts	0x286E, r11	; 0x80286e <CURRENT_TEMP_COOLING_RATE+0x3>
    2ef4:	80 91 7b 28 	lds	r24, 0x287B	; 0x80287b <PREVIOUS_COOLING_RATE_TIME>
    2ef8:	90 91 7c 28 	lds	r25, 0x287C	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x1>
    2efc:	a0 91 7d 28 	lds	r26, 0x287D	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x2>
    2f00:	b0 91 7e 28 	lds	r27, 0x287E	; 0x80287e <PREVIOUS_COOLING_RATE_TIME+0x3>
    2f04:	26 01       	movw	r4, r12
    2f06:	37 01       	movw	r6, r14
    2f08:	48 1a       	sub	r4, r24
    2f0a:	59 0a       	sbc	r5, r25
    2f0c:	6a 0a       	sbc	r6, r26
    2f0e:	7b 0a       	sbc	r7, r27
    2f10:	d3 01       	movw	r26, r6
    2f12:	c2 01       	movw	r24, r4
    2f14:	80 36       	cpi	r24, 0x60	; 96
    2f16:	9a 4e       	sbci	r25, 0xEA	; 234
    2f18:	a1 05       	cpc	r26, r1
    2f1a:	b1 05       	cpc	r27, r1
    2f1c:	09 f0       	breq	.+2      	; 0x2f20 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4a2>
    2f1e:	5b c0       	rjmp	.+182    	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x558>
    2f20:	20 91 73 28 	lds	r18, 0x2873	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE>
    2f24:	30 91 74 28 	lds	r19, 0x2874	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2f28:	40 91 75 28 	lds	r20, 0x2875	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2f2c:	50 91 76 28 	lds	r21, 0x2876	; 0x802876 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2f30:	c5 01       	movw	r24, r10
    2f32:	b4 01       	movw	r22, r8
    2f34:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    2f38:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2f3c:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2f40:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2f44:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2f48:	50 58       	subi	r21, 0x80	; 128
    2f4a:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    2f4e:	18 16       	cp	r1, r24
    2f50:	0c f4       	brge	.+2      	; 0x2f54 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4d6>
    2f52:	17 c6       	rjmp	.+3118   	; 0x3b82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1104>
    2f54:	80 91 69 28 	lds	r24, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT>
    2f58:	90 91 6a 28 	lds	r25, 0x286A	; 0x80286a <COOLING_CYCLE_COUNT+0x1>
    2f5c:	18 16       	cp	r1, r24
    2f5e:	19 06       	cpc	r1, r25
    2f60:	0c f4       	brge	.+2      	; 0x2f64 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x4e6>
    2f62:	ef c5       	rjmp	.+3038   	; 0x3b42 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x10c4>
    2f64:	01 96       	adiw	r24, 0x01	; 1
    2f66:	80 93 69 28 	sts	0x2869, r24	; 0x802869 <COOLING_CYCLE_COUNT>
    2f6a:	90 93 6a 28 	sts	0x286A, r25	; 0x80286a <COOLING_CYCLE_COUNT+0x1>
    2f6e:	8a e0       	ldi	r24, 0x0A	; 10
    2f70:	97 ed       	ldi	r25, 0xD7	; 215
    2f72:	a3 e2       	ldi	r26, 0x23	; 35
    2f74:	bc e3       	ldi	r27, 0x3C	; 60
    2f76:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2f7a:	90 93 06 28 	sts	0x2806, r25	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2f7e:	a0 93 07 28 	sts	0x2807, r26	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2f82:	b0 93 08 28 	sts	0x2808, r27	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2f86:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    2f8a:	60 93 65 28 	sts	0x2865, r22	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME>
    2f8e:	70 93 66 28 	sts	0x2866, r23	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2f92:	80 93 67 28 	sts	0x2867, r24	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2f96:	90 93 68 28 	sts	0x2868, r25	; 0x802868 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2f9a:	80 91 69 28 	lds	r24, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT>
    2f9e:	90 91 6a 28 	lds	r25, 0x286A	; 0x80286a <COOLING_CYCLE_COUNT+0x1>
    2fa2:	02 97       	sbiw	r24, 0x02	; 2
    2fa4:	41 f4       	brne	.+16     	; 0x2fb6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x538>
    2fa6:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING>
    2faa:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x1>
    2fae:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <RATE_OF_HEATING+0x2>
    2fb2:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <RATE_OF_HEATING+0x3>
    2fb6:	c0 92 7b 28 	sts	0x287B, r12	; 0x80287b <PREVIOUS_COOLING_RATE_TIME>
    2fba:	d0 92 7c 28 	sts	0x287C, r13	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x1>
    2fbe:	e0 92 7d 28 	sts	0x287D, r14	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x2>
    2fc2:	f0 92 7e 28 	sts	0x287E, r15	; 0x80287e <PREVIOUS_COOLING_RATE_TIME+0x3>
    2fc6:	80 92 73 28 	sts	0x2873, r8	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE>
    2fca:	90 92 74 28 	sts	0x2874, r9	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2fce:	a0 92 75 28 	sts	0x2875, r10	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2fd2:	b0 92 76 28 	sts	0x2876, r11	; 0x802876 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2fd6:	80 90 02 29 	lds	r8, 0x2902	; 0x802902 <TEMP_DEG>
    2fda:	90 90 03 29 	lds	r9, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    2fde:	a0 90 04 29 	lds	r10, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    2fe2:	b0 90 05 29 	lds	r11, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    2fe6:	c0 90 84 28 	lds	r12, 0x2884	; 0x802884 <PID_SETPOINT_To_Show>
    2fea:	d0 90 85 28 	lds	r13, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x1>
    2fee:	e0 90 86 28 	lds	r14, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x2>
    2ff2:	f0 90 87 28 	lds	r15, 0x2887	; 0x802887 <PID_SETPOINT_To_Show+0x3>
    2ff6:	80 91 64 28 	lds	r24, 0x2864	; 0x802864 <TIME_SOCK_OR_TOTAL>
    2ffa:	81 11       	cpse	r24, r1
    2ffc:	03 c6       	rjmp	.+3078   	; 0x3c04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1186>
    2ffe:	81 e0       	ldi	r24, 0x01	; 1
    3000:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <COUNTDOWN_START>
    3004:	a7 01       	movw	r20, r14
    3006:	96 01       	movw	r18, r12
    3008:	c5 01       	movw	r24, r10
    300a:	b4 01       	movw	r22, r8
    300c:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    3010:	87 fd       	sbrc	r24, 7
    3012:	04 c0       	rjmp	.+8      	; 0x301c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x59e>
    3014:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    3018:	88 23       	and	r24, r24
    301a:	99 f0       	breq	.+38     	; 0x3042 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5c4>
    301c:	a7 01       	movw	r20, r14
    301e:	96 01       	movw	r18, r12
    3020:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <TEMP_FAH>
    3024:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    3028:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    302c:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    3030:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    3034:	87 fd       	sbrc	r24, 7
    3036:	52 c0       	rjmp	.+164    	; 0x30dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x65e>
    3038:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    303c:	88 23       	and	r24, r24
    303e:	09 f4       	brne	.+2      	; 0x3042 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5c4>
    3040:	4d c0       	rjmp	.+154    	; 0x30dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x65e>
interval():
    3042:	80 91 e1 2a 	lds	r24, 0x2AE1	; 0x802ae1 <BUZZ_TICK2+0x9>
    3046:	90 91 e2 2a 	lds	r25, 0x2AE2	; 0x802ae2 <BUZZ_TICK2+0xa>
    304a:	89 2b       	or	r24, r25
    304c:	09 f4       	brne	.+2      	; 0x3050 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5d2>
    304e:	14 c6       	rjmp	.+3112   	; 0x3c78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11fa>
    3050:	80 e9       	ldi	r24, 0x90	; 144
    3052:	91 e0       	ldi	r25, 0x01	; 1
    3054:	a0 e0       	ldi	r26, 0x00	; 0
    3056:	b0 e0       	ldi	r27, 0x00	; 0
    3058:	80 93 d9 2a 	sts	0x2AD9, r24	; 0x802ad9 <BUZZ_TICK2+0x1>
    305c:	90 93 da 2a 	sts	0x2ADA, r25	; 0x802ada <BUZZ_TICK2+0x2>
    3060:	a0 93 db 2a 	sts	0x2ADB, r26	; 0x802adb <BUZZ_TICK2+0x3>
    3064:	b0 93 dc 2a 	sts	0x2ADC, r27	; 0x802adc <BUZZ_TICK2+0x4>
    3068:	80 91 fc 2a 	lds	r24, 0x2AFC	; 0x802afc <BUZZ_TICK1+0x9>
    306c:	90 91 fd 2a 	lds	r25, 0x2AFD	; 0x802afd <BUZZ_TICK1+0xa>
    3070:	89 2b       	or	r24, r25
    3072:	09 f4       	brne	.+2      	; 0x3076 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5f8>
    3074:	06 c6       	rjmp	.+3084   	; 0x3c82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1204>
    3076:	80 e2       	ldi	r24, 0x20	; 32
    3078:	93 e0       	ldi	r25, 0x03	; 3
    307a:	a0 e0       	ldi	r26, 0x00	; 0
    307c:	b0 e0       	ldi	r27, 0x00	; 0
    307e:	80 93 f4 2a 	sts	0x2AF4, r24	; 0x802af4 <BUZZ_TICK1+0x1>
    3082:	90 93 f5 2a 	sts	0x2AF5, r25	; 0x802af5 <BUZZ_TICK1+0x2>
    3086:	a0 93 f6 2a 	sts	0x2AF6, r26	; 0x802af6 <BUZZ_TICK1+0x3>
    308a:	b0 93 f7 2a 	sts	0x2AF7, r27	; 0x802af7 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    308e:	80 91 b2 28 	lds	r24, 0x28B2	; 0x8028b2 <REP>
    3092:	90 91 b3 28 	lds	r25, 0x28B3	; 0x8028b3 <REP+0x1>
    3096:	89 2b       	or	r24, r25
    3098:	59 f4       	brne	.+22     	; 0x30b0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x632>
    309a:	81 e0       	ldi	r24, 0x01	; 1
    309c:	80 93 aa 28 	sts	0x28AA, r24	; 0x8028aa <REPETATION_FLAG>
BUZZ_TICK_START():
    30a0:	83 ef       	ldi	r24, 0xF3	; 243
    30a2:	9a e2       	ldi	r25, 0x2A	; 42
    30a4:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    30a8:	00 93 b2 28 	sts	0x28B2, r16	; 0x8028b2 <REP>
    30ac:	10 93 b3 28 	sts	0x28B3, r17	; 0x8028b3 <REP+0x1>
    30b0:	80 91 b7 28 	lds	r24, 0x28B7	; 0x8028b7 <FOR_REP>
    30b4:	90 91 b8 28 	lds	r25, 0x28B8	; 0x8028b8 <FOR_REP+0x1>
    30b8:	02 97       	sbiw	r24, 0x02	; 2
    30ba:	81 f4       	brne	.+32     	; 0x30dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x65e>
stop():
    30bc:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <BUZZ_TICK1>
    30c0:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <BUZZ_TICK1+0xb>
    30c4:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <BUZZ_TICK1+0xc>
    30c8:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <BUZZ_TICK1+0xd>
    30cc:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <BUZZ_TICK1+0xe>
    30d0:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xf>
    30d4:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    30d8:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <REPETATION_FLAG>
    30dc:	80 91 9b 28 	lds	r24, 0x289B	; 0x80289b <SET_MIN>
    30e0:	90 91 9c 28 	lds	r25, 0x289C	; 0x80289c <SET_MIN+0x1>
    30e4:	b1 01       	movw	r22, r2
    30e6:	0e 94 df 39 	call	0x73be	; 0x73be <__divmodhi4>
    30ea:	6b 01       	movw	r12, r22
    30ec:	7c 01       	movw	r14, r24
    30ee:	60 93 93 28 	sts	0x2893, r22	; 0x802893 <SET_HOUR>
    30f2:	70 93 94 28 	sts	0x2894, r23	; 0x802894 <SET_HOUR+0x1>
    30f6:	80 93 61 28 	sts	0x2861, r24	; 0x802861 <REMAIN_MIN>
    30fa:	90 93 62 28 	sts	0x2862, r25	; 0x802862 <REMAIN_MIN+0x1>
    30fe:	20 e0       	ldi	r18, 0x00	; 0
    3100:	30 e0       	ldi	r19, 0x00	; 0
    3102:	40 e8       	ldi	r20, 0x80	; 128
    3104:	5f e3       	ldi	r21, 0x3F	; 63
    3106:	60 91 5d 28 	lds	r22, 0x285D	; 0x80285d <DISP_INC>
    310a:	70 91 5e 28 	lds	r23, 0x285E	; 0x80285e <DISP_INC+0x1>
    310e:	80 91 5f 28 	lds	r24, 0x285F	; 0x80285f <DISP_INC+0x2>
    3112:	90 91 60 28 	lds	r25, 0x2860	; 0x802860 <DISP_INC+0x3>
    3116:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    311a:	60 93 5d 28 	sts	0x285D, r22	; 0x80285d <DISP_INC>
    311e:	70 93 5e 28 	sts	0x285E, r23	; 0x80285e <DISP_INC+0x1>
    3122:	80 93 5f 28 	sts	0x285F, r24	; 0x80285f <DISP_INC+0x2>
    3126:	90 93 60 28 	sts	0x2860, r25	; 0x802860 <DISP_INC+0x3>
    312a:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    312e:	20 e0       	ldi	r18, 0x00	; 0
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	40 e8       	ldi	r20, 0x80	; 128
    3134:	5f e3       	ldi	r21, 0x3F	; 63
    3136:	60 91 ac 28 	lds	r22, 0x28AC	; 0x8028ac <RATE_OF_HEATING>
    313a:	70 91 ad 28 	lds	r23, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x1>
    313e:	80 91 ae 28 	lds	r24, 0x28AE	; 0x8028ae <RATE_OF_HEATING+0x2>
    3142:	90 91 af 28 	lds	r25, 0x28AF	; 0x8028af <RATE_OF_HEATING+0x3>
    3146:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    314a:	87 fd       	sbrc	r24, 7
    314c:	a9 c5       	rjmp	.+2898   	; 0x3ca0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1222>
    314e:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3152:	81 e0       	ldi	r24, 0x01	; 1
    3154:	80 93 b6 28 	sts	0x28B6, r24	; 0x8028b6 <IN_ERROR>
    3158:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <REPETATION_FLAG>
    315c:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3160:	60 e0       	ldi	r22, 0x00	; 0
    3162:	8d e0       	ldi	r24, 0x0D	; 13
    3164:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3168:	c0 93 e9 28 	sts	0x28E9, r28	; 0x8028e9 <digits2>
    316c:	d0 93 ea 28 	sts	0x28EA, r29	; 0x8028ea <digits2+0x1>
    3170:	89 e1       	ldi	r24, 0x19	; 25
    3172:	90 e0       	ldi	r25, 0x00	; 0
    3174:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    3178:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    317c:	8a e1       	ldi	r24, 0x1A	; 26
    317e:	90 e0       	ldi	r25, 0x00	; 0
    3180:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    3184:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    3188:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    318c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    3190:	8e e0       	ldi	r24, 0x0E	; 14
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    3198:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    319c:	8d e0       	ldi	r24, 0x0D	; 13
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    31a4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    31a8:	80 e1       	ldi	r24, 0x10	; 16
    31aa:	90 e0       	ldi	r25, 0x00	; 0
    31ac:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    31b0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    31b4:	8e e1       	ldi	r24, 0x1E	; 30
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    31bc:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
interval():
    31c0:	80 91 e1 2a 	lds	r24, 0x2AE1	; 0x802ae1 <BUZZ_TICK2+0x9>
    31c4:	90 91 e2 2a 	lds	r25, 0x2AE2	; 0x802ae2 <BUZZ_TICK2+0xa>
    31c8:	89 2b       	or	r24, r25
    31ca:	09 f4       	brne	.+2      	; 0x31ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x750>
    31cc:	5f c5       	rjmp	.+2750   	; 0x3c8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x120e>
    31ce:	88 ee       	ldi	r24, 0xE8	; 232
    31d0:	93 e0       	ldi	r25, 0x03	; 3
    31d2:	a0 e0       	ldi	r26, 0x00	; 0
    31d4:	b0 e0       	ldi	r27, 0x00	; 0
    31d6:	80 93 d9 2a 	sts	0x2AD9, r24	; 0x802ad9 <BUZZ_TICK2+0x1>
    31da:	90 93 da 2a 	sts	0x2ADA, r25	; 0x802ada <BUZZ_TICK2+0x2>
    31de:	a0 93 db 2a 	sts	0x2ADB, r26	; 0x802adb <BUZZ_TICK2+0x3>
    31e2:	b0 93 dc 2a 	sts	0x2ADC, r27	; 0x802adc <BUZZ_TICK2+0x4>
    31e6:	80 91 fc 2a 	lds	r24, 0x2AFC	; 0x802afc <BUZZ_TICK1+0x9>
    31ea:	90 91 fd 2a 	lds	r25, 0x2AFD	; 0x802afd <BUZZ_TICK1+0xa>
    31ee:	89 2b       	or	r24, r25
    31f0:	09 f4       	brne	.+2      	; 0x31f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x776>
    31f2:	51 c5       	rjmp	.+2722   	; 0x3c96 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1218>
    31f4:	80 ed       	ldi	r24, 0xD0	; 208
    31f6:	97 e0       	ldi	r25, 0x07	; 7
    31f8:	a0 e0       	ldi	r26, 0x00	; 0
    31fa:	b0 e0       	ldi	r27, 0x00	; 0
    31fc:	80 93 f4 2a 	sts	0x2AF4, r24	; 0x802af4 <BUZZ_TICK1+0x1>
    3200:	90 93 f5 2a 	sts	0x2AF5, r25	; 0x802af5 <BUZZ_TICK1+0x2>
    3204:	a0 93 f6 2a 	sts	0x2AF6, r26	; 0x802af6 <BUZZ_TICK1+0x3>
    3208:	b0 93 f7 2a 	sts	0x2AF7, r27	; 0x802af7 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    320c:	80 91 b2 28 	lds	r24, 0x28B2	; 0x8028b2 <REP>
    3210:	90 91 b3 28 	lds	r25, 0x28B3	; 0x8028b3 <REP+0x1>
    3214:	89 2b       	or	r24, r25
    3216:	09 f0       	breq	.+2      	; 0x321a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x79c>
    3218:	36 cd       	rjmp	.-1428   	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
BUZZ_TICK_START():
    321a:	83 ef       	ldi	r24, 0xF3	; 243
    321c:	9a e2       	ldi	r25, 0x2A	; 42
    321e:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3222:	00 93 b2 28 	sts	0x28B2, r16	; 0x8028b2 <REP>
    3226:	10 93 b3 28 	sts	0x28B3, r17	; 0x8028b3 <REP+0x1>
    322a:	2d cd       	rjmp	.-1446   	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
    322c:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT2_0>
    3230:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <DOT2_2>
    3234:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT1_2>
    3238:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    323c:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    3240:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <FOR_REP2>
    3244:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <FOR_REP2+0x1>
    3248:	10 92 b7 28 	sts	0x28B7, r1	; 0x8028b7 <FOR_REP>
    324c:	10 92 b8 28 	sts	0x28B8, r1	; 0x8028b8 <FOR_REP+0x1>
    3250:	10 92 b6 28 	sts	0x28B6, r1	; 0x8028b6 <IN_ERROR>
    3254:	10 92 b4 28 	sts	0x28B4, r1	; 0x8028b4 <REP1>
    3258:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <REP1+0x1>
    325c:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <REP>
    3260:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <REP+0x1>
    3264:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <Blinking_Freq>
    3268:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <CAL2_START>
    326c:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <PUMP_FLAG>
    3270:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING>
    3274:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x1>
    3278:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <RATE_OF_HEATING+0x2>
    327c:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <RATE_OF_HEATING+0x3>
    3280:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <EXECUTE_PID_LOOP>
    3284:	10 92 ee 29 	sts	0x29EE, r1	; 0x8029ee <PID_SETPOINT>
    3288:	10 92 ef 29 	sts	0x29EF, r1	; 0x8029ef <PID_SETPOINT+0x1>
    328c:	10 92 f0 29 	sts	0x29F0, r1	; 0x8029f0 <PID_SETPOINT+0x2>
    3290:	10 92 f1 29 	sts	0x29F1, r1	; 0x8029f1 <PID_SETPOINT+0x3>
    3294:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <REPETATION_FLAG>
    3298:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    329c:	81 e0       	ldi	r24, 0x01	; 1
    329e:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <CHECK_RATE_OF_HEATING>
stop():
    32a2:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <BUZZ_TICK1>
    32a6:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <BUZZ_TICK1+0xb>
    32aa:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <BUZZ_TICK1+0xc>
    32ae:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <BUZZ_TICK1+0xd>
    32b2:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <BUZZ_TICK1+0xe>
    32b6:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xf>
    32ba:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    32be:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <soak_once_flag>
digitalWrite():
    32c2:	60 e0       	ldi	r22, 0x00	; 0
    32c4:	89 e1       	ldi	r24, 0x19	; 25
    32c6:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
stop():
    32ca:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <Blink_LED_ON>
    32ce:	10 92 c8 2a 	sts	0x2AC8, r1	; 0x802ac8 <Blink_LED_ON+0xb>
    32d2:	10 92 c9 2a 	sts	0x2AC9, r1	; 0x802ac9 <Blink_LED_ON+0xc>
    32d6:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Blink_LED_ON+0xd>
    32da:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <Blink_LED_ON+0xe>
    32de:	10 92 cc 2a 	sts	0x2ACC, r1	; 0x802acc <Blink_LED_ON+0xf>
    32e2:	10 92 cd 2a 	sts	0x2ACD, r1	; 0x802acd <Blink_LED_ON+0x10>
    32e6:	10 92 a2 2a 	sts	0x2AA2, r1	; 0x802aa2 <Blink_LED_OFF>
    32ea:	10 92 ad 2a 	sts	0x2AAD, r1	; 0x802aad <Blink_LED_OFF+0xb>
    32ee:	10 92 ae 2a 	sts	0x2AAE, r1	; 0x802aae <Blink_LED_OFF+0xc>
    32f2:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <Blink_LED_OFF+0xd>
    32f6:	10 92 b0 2a 	sts	0x2AB0, r1	; 0x802ab0 <Blink_LED_OFF+0xe>
    32fa:	10 92 b1 2a 	sts	0x2AB1, r1	; 0x802ab1 <Blink_LED_OFF+0xf>
    32fe:	10 92 b2 2a 	sts	0x2AB2, r1	; 0x802ab2 <Blink_LED_OFF+0x10>
digitalWrite():
    3302:	60 e0       	ldi	r22, 0x00	; 0
    3304:	81 e2       	ldi	r24, 0x21	; 33
    3306:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
stop():
    330a:	10 92 36 2a 	sts	0x2A36, r1	; 0x802a36 <PID_EXE>
    330e:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <PID_EXE+0xb>
    3312:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <PID_EXE+0xc>
    3316:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <PID_EXE+0xd>
    331a:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <PID_EXE+0xe>
    331e:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xf>
    3322:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    3326:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    332a:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <checkTempRaised>
    332e:	81 11       	cpse	r24, r1
    3330:	f4 c0       	rjmp	.+488    	; 0x351a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa9c>
    3332:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <Process_Interrupt_flag>
    3336:	88 23       	and	r24, r24
    3338:	09 f4       	brne	.+2      	; 0x333c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8be>
    333a:	93 c0       	rjmp	.+294    	; 0x3462 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9e4>
    333c:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    3340:	88 23       	and	r24, r24
    3342:	09 f4       	brne	.+2      	; 0x3346 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8c8>
    3344:	8e c0       	rjmp	.+284    	; 0x3462 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9e4>
    3346:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <z>
    334a:	90 91 a3 28 	lds	r25, 0x28A3	; 0x8028a3 <z+0x1>
    334e:	03 97       	sbiw	r24, 0x03	; 3
    3350:	0c f0       	brlt	.+2      	; 0x3354 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x8d6>
    3352:	83 c0       	rjmp	.+262    	; 0x345a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9dc>
    3354:	c0 91 a0 28 	lds	r28, 0x28A0	; 0x8028a0 <i>
    3358:	d0 91 a1 28 	lds	r29, 0x28A1	; 0x8028a1 <i+0x1>
    335c:	cb 34       	cpi	r28, 0x4B	; 75
    335e:	d1 05       	cpc	r29, r1
    3360:	e4 f5       	brge	.+120    	; 0x33da <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x95c>
digitalWrite():
    3362:	61 e0       	ldi	r22, 0x01	; 1
    3364:	85 e1       	ldi	r24, 0x15	; 21
    3366:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    336a:	88 e1       	ldi	r24, 0x18	; 24
    336c:	90 e0       	ldi	r25, 0x00	; 0
    336e:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    3372:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    3376:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    337a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    337e:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    3382:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    3386:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    338a:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
DISPLAY_DIGIT2():
    338e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    3392:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    3396:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    339a:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    339e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    33a2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    33a6:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    33aa:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
digitalWrite():
    33ae:	60 e0       	ldi	r22, 0x00	; 0
    33b0:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    33b2:	df 91       	pop	r29
    33b4:	cf 91       	pop	r28
    33b6:	1f 91       	pop	r17
    33b8:	0f 91       	pop	r16
    33ba:	ff 90       	pop	r15
    33bc:	ef 90       	pop	r14
    33be:	df 90       	pop	r13
    33c0:	cf 90       	pop	r12
    33c2:	bf 90       	pop	r11
    33c4:	af 90       	pop	r10
    33c6:	9f 90       	pop	r9
    33c8:	8f 90       	pop	r8
    33ca:	7f 90       	pop	r7
    33cc:	6f 90       	pop	r6
    33ce:	5f 90       	pop	r5
    33d0:	4f 90       	pop	r4
    33d2:	3f 90       	pop	r3
    33d4:	2f 90       	pop	r2
digitalWrite():
    33d6:	0c 94 08 08 	jmp	0x1010	; 0x1010 <digitalWrite.part.2>
    33da:	60 e0       	ldi	r22, 0x00	; 0
    33dc:	85 e1       	ldi	r24, 0x15	; 21
    33de:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    33e2:	8b e0       	ldi	r24, 0x0B	; 11
    33e4:	90 e0       	ldi	r25, 0x00	; 0
    33e6:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    33ea:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    33ee:	21 e1       	ldi	r18, 0x11	; 17
    33f0:	30 e0       	ldi	r19, 0x00	; 0
    33f2:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    33f6:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    33fa:	87 e1       	ldi	r24, 0x17	; 23
    33fc:	90 e0       	ldi	r25, 0x00	; 0
    33fe:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    3402:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    3406:	8c e0       	ldi	r24, 0x0C	; 12
    3408:	90 e0       	ldi	r25, 0x00	; 0
    340a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    340e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    3412:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    3416:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    341a:	80 e1       	ldi	r24, 0x10	; 16
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    3422:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    3426:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1+0x4>
    342a:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x5>
    342e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    3432:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    3436:	c7 39       	cpi	r28, 0x97	; 151
    3438:	d1 05       	cpc	r29, r1
    343a:	0c f4       	brge	.+2      	; 0x343e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x9c0>
    343c:	b8 cf       	rjmp	.-144    	; 0x33ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x930>
    343e:	80 91 a2 28 	lds	r24, 0x28A2	; 0x8028a2 <z>
    3442:	90 91 a3 28 	lds	r25, 0x28A3	; 0x8028a3 <z+0x1>
    3446:	01 96       	adiw	r24, 0x01	; 1
    3448:	80 93 a2 28 	sts	0x28A2, r24	; 0x8028a2 <z>
    344c:	90 93 a3 28 	sts	0x28A3, r25	; 0x8028a3 <z+0x1>
    3450:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    3454:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    3458:	aa cf       	rjmp	.-172    	; 0x33ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x930>
    345a:	85 e0       	ldi	r24, 0x05	; 5
    345c:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <ENTER_BUT>
    3460:	a6 cf       	rjmp	.-180    	; 0x33ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x930>
    3462:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    3466:	81 11       	cpse	r24, r1
    3468:	3d c0       	rjmp	.+122    	; 0x34e4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa66>
    346a:	c0 90 02 29 	lds	r12, 0x2902	; 0x802902 <TEMP_DEG>
    346e:	d0 90 03 29 	lds	r13, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    3472:	e0 90 04 29 	lds	r14, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    3476:	f0 90 05 29 	lds	r15, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    347a:	2d ec       	ldi	r18, 0xCD	; 205
    347c:	3c ec       	ldi	r19, 0xCC	; 204
    347e:	47 ec       	ldi	r20, 0xC7	; 199
    3480:	52 e4       	ldi	r21, 0x42	; 66
    3482:	c7 01       	movw	r24, r14
    3484:	b6 01       	movw	r22, r12
    3486:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    348a:	18 16       	cp	r1, r24
    348c:	dc f4       	brge	.+54     	; 0x34c4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa46>
    348e:	20 e0       	ldi	r18, 0x00	; 0
    3490:	30 e0       	ldi	r19, 0x00	; 0
    3492:	40 e2       	ldi	r20, 0x20	; 32
    3494:	51 e4       	ldi	r21, 0x41	; 65
    3496:	c7 01       	movw	r24, r14
    3498:	b6 01       	movw	r22, r12
    349a:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    349e:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    34a2:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    34a6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    34aa:	8a e0       	ldi	r24, 0x0A	; 10
    34ac:	90 e0       	ldi	r25, 0x00	; 0
    34ae:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    34b2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    34b6:	60 e0       	ldi	r22, 0x00	; 0
    34b8:	70 e0       	ldi	r23, 0x00	; 0
    34ba:	cb 01       	movw	r24, r22
    34bc:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
digitalWrite():
    34c0:	61 e0       	ldi	r22, 0x01	; 1
    34c2:	76 cf       	rjmp	.-276    	; 0x33b0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x932>
SET_SHORT_PRESS_FUNCTION():
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	48 ec       	ldi	r20, 0xC8	; 200
    34ca:	52 e4       	ldi	r21, 0x42	; 66
    34cc:	c7 01       	movw	r24, r14
    34ce:	b6 01       	movw	r22, r12
    34d0:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    34d4:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    34d8:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    34dc:	81 e0       	ldi	r24, 0x01	; 1
    34de:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    34e2:	e3 cf       	rjmp	.-58     	; 0x34aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa2c>
    34e4:	20 e0       	ldi	r18, 0x00	; 0
    34e6:	30 e0       	ldi	r19, 0x00	; 0
    34e8:	40 e2       	ldi	r20, 0x20	; 32
    34ea:	51 e4       	ldi	r21, 0x41	; 65
    34ec:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <TEMP_FAH>
    34f0:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    34f4:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    34f8:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    34fc:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    3500:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    3504:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3508:	85 e1       	ldi	r24, 0x15	; 21
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3510:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3514:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3518:	ce cf       	rjmp	.-100    	; 0x34b6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xa38>
digitalWrite():
    351a:	60 e0       	ldi	r22, 0x00	; 0
    351c:	88 e1       	ldi	r24, 0x18	; 24
    351e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3522:	61 e0       	ldi	r22, 0x01	; 1
    3524:	8d e1       	ldi	r24, 0x1D	; 29
    3526:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    352a:	61 e0       	ldi	r22, 0x01	; 1
    352c:	8c e1       	ldi	r24, 0x1C	; 28
    352e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3532:	61 e0       	ldi	r22, 0x01	; 1
    3534:	8b e1       	ldi	r24, 0x1B	; 27
    3536:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    353a:	60 e0       	ldi	r22, 0x00	; 0
    353c:	8a e1       	ldi	r24, 0x1A	; 26
    353e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3542:	60 e0       	ldi	r22, 0x00	; 0
    3544:	8d e0       	ldi	r24, 0x0D	; 13
    3546:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    354a:	60 e0       	ldi	r22, 0x00	; 0
    354c:	8c e0       	ldi	r24, 0x0C	; 12
    354e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3552:	c0 91 a0 28 	lds	r28, 0x28A0	; 0x8028a0 <i>
    3556:	d0 91 a1 28 	lds	r29, 0x28A1	; 0x8028a1 <i+0x1>
    355a:	c9 31       	cpi	r28, 0x19	; 25
    355c:	d1 05       	cpc	r29, r1
    355e:	3c f5       	brge	.+78     	; 0x35ae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb30>
digitalWrite():
    3560:	60 e0       	ldi	r22, 0x00	; 0
    3562:	85 e1       	ldi	r24, 0x15	; 21
    3564:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3568:	88 e1       	ldi	r24, 0x18	; 24
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    3570:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    3574:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    3578:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    357c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    3580:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    3584:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3588:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    358c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    3590:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    3594:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    3598:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    359c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    35a0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    35a4:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    35a8:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    35ac:	86 ca       	rjmp	.-2804   	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
digitalWrite():
    35ae:	61 e0       	ldi	r22, 0x01	; 1
    35b0:	85 e1       	ldi	r24, 0x15	; 21
    35b2:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    35b6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
DISPLAY_DIGIT2():
    35ba:	8c e0       	ldi	r24, 0x0C	; 12
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    35c2:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    35c6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    35ca:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    35ce:	81 e1       	ldi	r24, 0x11	; 17
    35d0:	90 e0       	ldi	r25, 0x00	; 0
    35d2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    35d6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    35da:	88 e1       	ldi	r24, 0x18	; 24
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    35e2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    35e6:	85 e1       	ldi	r24, 0x15	; 21
    35e8:	90 e0       	ldi	r25, 0x00	; 0
    35ea:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    35ee:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    35f2:	8d e0       	ldi	r24, 0x0D	; 13
    35f4:	90 e0       	ldi	r25, 0x00	; 0
    35f6:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    35fa:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    35fe:	89 e1       	ldi	r24, 0x19	; 25
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    3606:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    360a:	8a e1       	ldi	r24, 0x1A	; 26
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    3612:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    3616:	e3 97       	sbiw	r28, 0x33	; 51
    3618:	0c f4       	brge	.+2      	; 0x361c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb9e>
    361a:	4f ca       	rjmp	.-2914   	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    361c:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    3620:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    3624:	4a ca       	rjmp	.-2924   	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    3626:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    362a:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
digitalWrite():
    362e:	60 e0       	ldi	r22, 0x00	; 0
    3630:	8d e1       	ldi	r24, 0x1D	; 29
    3632:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3636:	61 e0       	ldi	r22, 0x01	; 1
    3638:	8c e0       	ldi	r24, 0x0C	; 12
    363a:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    363e:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    3642:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    3646:	49 97       	sbiw	r24, 0x19	; 25
    3648:	0c f0       	brlt	.+2      	; 0x364c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xbce>
    364a:	4d c0       	rjmp	.+154    	; 0x36e6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc68>
    364c:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    3650:	81 11       	cpse	r24, r1
    3652:	42 c0       	rjmp	.+132    	; 0x36d8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xc5a>
    3654:	88 e1       	ldi	r24, 0x18	; 24
    3656:	90 e0       	ldi	r25, 0x00	; 0
    3658:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    365c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    3660:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    3664:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    3668:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    366c:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    3670:	c3 97       	sbiw	r24, 0x33	; 51
    3672:	24 f0       	brlt	.+8      	; 0x367c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xbfe>
    3674:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    3678:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    367c:	8a e0       	ldi	r24, 0x0A	; 10
    367e:	90 e0       	ldi	r25, 0x00	; 0
    3680:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3684:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3688:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x6>
    368c:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x7>
    3690:	24 e6       	ldi	r18, 0x64	; 100
    3692:	28 9f       	mul	r18, r24
    3694:	b0 01       	movw	r22, r0
    3696:	29 9f       	mul	r18, r25
    3698:	70 0d       	add	r23, r0
    369a:	11 24       	eor	r1, r1
    369c:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x8>
    36a0:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x9>
    36a4:	68 0f       	add	r22, r24
    36a6:	79 1f       	adc	r23, r25
    36a8:	07 2e       	mov	r0, r23
    36aa:	00 0c       	add	r0, r0
    36ac:	88 0b       	sbc	r24, r24
    36ae:	99 0b       	sbc	r25, r25
    36b0:	df 91       	pop	r29
    36b2:	cf 91       	pop	r28
    36b4:	1f 91       	pop	r17
    36b6:	0f 91       	pop	r16
    36b8:	ff 90       	pop	r15
    36ba:	ef 90       	pop	r14
    36bc:	df 90       	pop	r13
    36be:	cf 90       	pop	r12
    36c0:	bf 90       	pop	r11
    36c2:	af 90       	pop	r10
    36c4:	9f 90       	pop	r9
    36c6:	8f 90       	pop	r8
    36c8:	7f 90       	pop	r7
    36ca:	6f 90       	pop	r6
    36cc:	5f 90       	pop	r5
    36ce:	4f 90       	pop	r4
    36d0:	3f 90       	pop	r3
    36d2:	2f 90       	pop	r2
    36d4:	0c 94 0f 04 	jmp	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    36d8:	89 e1       	ldi	r24, 0x19	; 25
    36da:	90 e0       	ldi	r25, 0x00	; 0
    36dc:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    36e0:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    36e4:	c1 cf       	rjmp	.-126    	; 0x3668 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xbea>
    36e6:	c0 93 9f 28 	sts	0x289F, r28	; 0x80289f <DOT2_1>
    36ea:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
    36ee:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
    36f2:	24 e6       	ldi	r18, 0x64	; 100
    36f4:	28 9f       	mul	r18, r24
    36f6:	b0 01       	movw	r22, r0
    36f8:	29 9f       	mul	r18, r25
    36fa:	70 0d       	add	r23, r0
    36fc:	11 24       	eor	r1, r1
    36fe:	20 91 14 29 	lds	r18, 0x2914	; 0x802914 <SET_VALUE+0x4>
    3702:	30 91 15 29 	lds	r19, 0x2915	; 0x802915 <SET_VALUE+0x5>
    3706:	4a e0       	ldi	r20, 0x0A	; 10
    3708:	42 9f       	mul	r20, r18
    370a:	c0 01       	movw	r24, r0
    370c:	43 9f       	mul	r20, r19
    370e:	90 0d       	add	r25, r0
    3710:	11 24       	eor	r1, r1
    3712:	68 0f       	add	r22, r24
    3714:	79 1f       	adc	r23, r25
    3716:	07 2e       	mov	r0, r23
    3718:	00 0c       	add	r0, r0
    371a:	88 0b       	sbc	r24, r24
    371c:	99 0b       	sbc	r25, r25
    371e:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3722:	a2 cf       	rjmp	.-188    	; 0x3668 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xbea>
    3724:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x6>
    3728:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x7>
    372c:	14 e6       	ldi	r17, 0x64	; 100
    372e:	18 9f       	mul	r17, r24
    3730:	b0 01       	movw	r22, r0
    3732:	19 9f       	mul	r17, r25
    3734:	70 0d       	add	r23, r0
    3736:	11 24       	eor	r1, r1
    3738:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x8>
    373c:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x9>
    3740:	68 0f       	add	r22, r24
    3742:	79 1f       	adc	r23, r25
    3744:	07 2e       	mov	r0, r23
    3746:	00 0c       	add	r0, r0
    3748:	88 0b       	sbc	r24, r24
    374a:	99 0b       	sbc	r25, r25
    374c:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3750:	c0 91 a0 28 	lds	r28, 0x28A0	; 0x8028a0 <i>
    3754:	d0 91 a1 28 	lds	r29, 0x28A1	; 0x8028a1 <i+0x1>
    3758:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    375c:	81 11       	cpse	r24, r1
    375e:	38 c0       	rjmp	.+112    	; 0x37d0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd52>
    3760:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
    3764:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
    3768:	18 9f       	mul	r17, r24
    376a:	b0 01       	movw	r22, r0
    376c:	19 9f       	mul	r17, r25
    376e:	70 0d       	add	r23, r0
    3770:	11 24       	eor	r1, r1
    3772:	20 91 14 29 	lds	r18, 0x2914	; 0x802914 <SET_VALUE+0x4>
    3776:	30 91 15 29 	lds	r19, 0x2915	; 0x802915 <SET_VALUE+0x5>
    377a:	4a e0       	ldi	r20, 0x0A	; 10
    377c:	42 9f       	mul	r20, r18
    377e:	c0 01       	movw	r24, r0
    3780:	43 9f       	mul	r20, r19
    3782:	90 0d       	add	r25, r0
    3784:	11 24       	eor	r1, r1
    3786:	68 0f       	add	r22, r24
    3788:	79 1f       	adc	r23, r25
    378a:	07 2e       	mov	r0, r23
    378c:	00 0c       	add	r0, r0
    378e:	88 0b       	sbc	r24, r24
    3790:	99 0b       	sbc	r25, r25
    3792:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3796:	8a e0       	ldi	r24, 0x0A	; 10
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    379e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    37a8:	69 97       	sbiw	r28, 0x19	; 25
    37aa:	54 f4       	brge	.+20     	; 0x37c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd42>
    37ac:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    37b0:	81 11       	cpse	r24, r1
    37b2:	94 c0       	rjmp	.+296    	; 0x38dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe5e>
    37b4:	88 e1       	ldi	r24, 0x18	; 24
    37b6:	90 e0       	ldi	r25, 0x00	; 0
    37b8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    37bc:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    37c0:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    37c4:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    37c8:	c3 97       	sbiw	r24, 0x33	; 51
    37ca:	0c f0       	brlt	.+2      	; 0x37ce <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd50>
    37cc:	27 cf       	rjmp	.-434    	; 0x361c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xb9e>
    37ce:	75 c9       	rjmp	.-3350   	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
digitalWrite():
    37d0:	60 e0       	ldi	r22, 0x00	; 0
    37d2:	8d e1       	ldi	r24, 0x1D	; 29
    37d4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    37d8:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
    37dc:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    37e0:	2a e0       	ldi	r18, 0x0A	; 10
    37e2:	28 9f       	mul	r18, r24
    37e4:	b0 01       	movw	r22, r0
    37e6:	29 9f       	mul	r18, r25
    37e8:	70 0d       	add	r23, r0
    37ea:	11 24       	eor	r1, r1
    37ec:	07 2e       	mov	r0, r23
    37ee:	00 0c       	add	r0, r0
    37f0:	88 0b       	sbc	r24, r24
    37f2:	99 0b       	sbc	r25, r25
    37f4:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    37f8:	85 e1       	ldi	r24, 0x15	; 21
    37fa:	90 e0       	ldi	r25, 0x00	; 0
    37fc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3800:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3804:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3808:	69 97       	sbiw	r28, 0x19	; 25
    380a:	d4 f6       	brge	.-76     	; 0x37c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd42>
    380c:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    3810:	81 11       	cpse	r24, r1
    3812:	64 c0       	rjmp	.+200    	; 0x38dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe5e>
    3814:	88 e1       	ldi	r24, 0x18	; 24
    3816:	90 e0       	ldi	r25, 0x00	; 0
    3818:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    381c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    3820:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    3824:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    3828:	c7 cf       	rjmp	.-114    	; 0x37b8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd3a>
    382a:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    382e:	81 11       	cpse	r24, r1
    3830:	3c c0       	rjmp	.+120    	; 0x38aa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe2c>
    3832:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
    3836:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
    383a:	24 e6       	ldi	r18, 0x64	; 100
    383c:	28 9f       	mul	r18, r24
    383e:	b0 01       	movw	r22, r0
    3840:	29 9f       	mul	r18, r25
    3842:	70 0d       	add	r23, r0
    3844:	11 24       	eor	r1, r1
    3846:	20 91 14 29 	lds	r18, 0x2914	; 0x802914 <SET_VALUE+0x4>
    384a:	30 91 15 29 	lds	r19, 0x2915	; 0x802915 <SET_VALUE+0x5>
    384e:	4a e0       	ldi	r20, 0x0A	; 10
    3850:	42 9f       	mul	r20, r18
    3852:	c0 01       	movw	r24, r0
    3854:	43 9f       	mul	r20, r19
    3856:	90 0d       	add	r25, r0
    3858:	11 24       	eor	r1, r1
    385a:	68 0f       	add	r22, r24
    385c:	79 1f       	adc	r23, r25
    385e:	07 2e       	mov	r0, r23
    3860:	00 0c       	add	r0, r0
    3862:	88 0b       	sbc	r24, r24
    3864:	99 0b       	sbc	r25, r25
    3866:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    386a:	8a e0       	ldi	r24, 0x0A	; 10
    386c:	90 e0       	ldi	r25, 0x00	; 0
    386e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3872:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3876:	81 e0       	ldi	r24, 0x01	; 1
    3878:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    387c:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    3880:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    3884:	49 97       	sbiw	r24, 0x19	; 25
    3886:	8c f5       	brge	.+98     	; 0x38ea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe6c>
    3888:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    388c:	81 11       	cpse	r24, r1
    388e:	26 c0       	rjmp	.+76     	; 0x38dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xe5e>
    3890:	88 e1       	ldi	r24, 0x18	; 24
    3892:	90 e0       	ldi	r25, 0x00	; 0
    3894:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    3898:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    389c:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    38a0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    38a4:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    38a8:	8b cf       	rjmp	.-234    	; 0x37c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd42>
    38aa:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
    38ae:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    38b2:	2a e0       	ldi	r18, 0x0A	; 10
    38b4:	28 9f       	mul	r18, r24
    38b6:	b0 01       	movw	r22, r0
    38b8:	29 9f       	mul	r18, r25
    38ba:	70 0d       	add	r23, r0
    38bc:	11 24       	eor	r1, r1
    38be:	07 2e       	mov	r0, r23
    38c0:	00 0c       	add	r0, r0
    38c2:	88 0b       	sbc	r24, r24
    38c4:	99 0b       	sbc	r25, r25
    38c6:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    38ca:	85 e1       	ldi	r24, 0x15	; 21
    38cc:	90 e0       	ldi	r25, 0x00	; 0
    38ce:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    38d2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    38d6:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    38da:	d0 cf       	rjmp	.-96     	; 0x387c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xdfe>
    38dc:	89 e1       	ldi	r24, 0x19	; 25
    38de:	90 e0       	ldi	r25, 0x00	; 0
    38e0:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    38e4:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    38e8:	6b cf       	rjmp	.-298    	; 0x37c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd42>
    38ea:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    38ee:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
    38f2:	08 2e       	mov	r0, r24
    38f4:	00 0c       	add	r0, r0
    38f6:	99 0b       	sbc	r25, r25
    38f8:	fc 01       	movw	r30, r24
    38fa:	ee 0f       	add	r30, r30
    38fc:	ff 1f       	adc	r31, r31
    38fe:	e0 5f       	subi	r30, 0xF0	; 240
    3900:	f6 4d       	sbci	r31, 0xD6	; 214
    3902:	20 81       	ld	r18, Z
    3904:	31 81       	ldd	r19, Z+1	; 0x01
    3906:	44 e6       	ldi	r20, 0x64	; 100
    3908:	42 9f       	mul	r20, r18
    390a:	b0 01       	movw	r22, r0
    390c:	43 9f       	mul	r20, r19
    390e:	70 0d       	add	r23, r0
    3910:	11 24       	eor	r1, r1
    3912:	88 0f       	add	r24, r24
    3914:	99 1f       	adc	r25, r25
    3916:	fc 01       	movw	r30, r24
    3918:	ee 5e       	subi	r30, 0xEE	; 238
    391a:	f6 4d       	sbci	r31, 0xD6	; 214
    391c:	80 81       	ld	r24, Z
    391e:	91 81       	ldd	r25, Z+1	; 0x01
    3920:	68 0f       	add	r22, r24
    3922:	79 1f       	adc	r23, r25
    3924:	07 2e       	mov	r0, r23
    3926:	00 0c       	add	r0, r0
    3928:	88 0b       	sbc	r24, r24
    392a:	99 0b       	sbc	r25, r25
    392c:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3930:	47 cf       	rjmp	.-370    	; 0x37c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xd42>
    3932:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    3936:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    393a:	81 11       	cpse	r24, r1
    393c:	7c c0       	rjmp	.+248    	; 0x3a36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfb8>
    393e:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SET_VALUE+0x2>
    3942:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SET_VALUE+0x3>
    3946:	24 e6       	ldi	r18, 0x64	; 100
    3948:	28 9f       	mul	r18, r24
    394a:	b0 01       	movw	r22, r0
    394c:	29 9f       	mul	r18, r25
    394e:	70 0d       	add	r23, r0
    3950:	11 24       	eor	r1, r1
    3952:	20 91 14 29 	lds	r18, 0x2914	; 0x802914 <SET_VALUE+0x4>
    3956:	30 91 15 29 	lds	r19, 0x2915	; 0x802915 <SET_VALUE+0x5>
    395a:	4a e0       	ldi	r20, 0x0A	; 10
    395c:	42 9f       	mul	r20, r18
    395e:	c0 01       	movw	r24, r0
    3960:	43 9f       	mul	r20, r19
    3962:	90 0d       	add	r25, r0
    3964:	11 24       	eor	r1, r1
    3966:	68 0f       	add	r22, r24
    3968:	79 1f       	adc	r23, r25
    396a:	07 2e       	mov	r0, r23
    396c:	00 0c       	add	r0, r0
    396e:	88 0b       	sbc	r24, r24
    3970:	99 0b       	sbc	r25, r25
    3972:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3976:	8a e0       	ldi	r24, 0x0A	; 10
    3978:	90 e0       	ldi	r25, 0x00	; 0
    397a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    397e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3982:	81 e0       	ldi	r24, 0x01	; 1
    3984:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    3988:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x6>
    398c:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x7>
    3990:	24 e6       	ldi	r18, 0x64	; 100
    3992:	28 9f       	mul	r18, r24
    3994:	b0 01       	movw	r22, r0
    3996:	29 9f       	mul	r18, r25
    3998:	70 0d       	add	r23, r0
    399a:	11 24       	eor	r1, r1
    399c:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x8>
    39a0:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x9>
    39a4:	68 0f       	add	r22, r24
    39a6:	79 1f       	adc	r23, r25
    39a8:	07 2e       	mov	r0, r23
    39aa:	00 0c       	add	r0, r0
    39ac:	88 0b       	sbc	r24, r24
    39ae:	99 0b       	sbc	r25, r25
    39b0:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    39b4:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    39b8:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    39bc:	49 97       	sbiw	r24, 0x19	; 25
    39be:	74 f4       	brge	.+28     	; 0x39dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf5e>
    39c0:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    39c4:	81 11       	cpse	r24, r1
    39c6:	50 c0       	rjmp	.+160    	; 0x3a68 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xfea>
    39c8:	88 e1       	ldi	r24, 0x18	; 24
    39ca:	90 e0       	ldi	r25, 0x00	; 0
    39cc:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    39d0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    39d4:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    39d8:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    39dc:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    39e0:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    39e4:	c3 97       	sbiw	r24, 0x33	; 51
    39e6:	24 f0       	brlt	.+8      	; 0x39f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf72>
    39e8:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    39ec:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    39f0:	10 92 b4 28 	sts	0x28B4, r1	; 0x8028b4 <REP1>
    39f4:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <REP1+0x1>
    39f8:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <STIR_VALUE_SET>
    39fc:	90 e0       	ldi	r25, 0x00	; 0
    39fe:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0xa>
    3a02:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0xb>
    3a06:	81 e0       	ldi	r24, 0x01	; 1
    3a08:	80 93 0b 29 	sts	0x290B, r24	; 0x80290b <PUMP_FLAG>
    3a0c:	20 91 16 29 	lds	r18, 0x2916	; 0x802916 <SET_VALUE+0x6>
    3a10:	30 91 17 29 	lds	r19, 0x2917	; 0x802917 <SET_VALUE+0x7>
    3a14:	4c e3       	ldi	r20, 0x3C	; 60
    3a16:	42 9f       	mul	r20, r18
    3a18:	c0 01       	movw	r24, r0
    3a1a:	43 9f       	mul	r20, r19
    3a1c:	90 0d       	add	r25, r0
    3a1e:	11 24       	eor	r1, r1
    3a20:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x8>
    3a24:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x9>
    3a28:	82 0f       	add	r24, r18
    3a2a:	93 1f       	adc	r25, r19
    3a2c:	80 93 9b 28 	sts	0x289B, r24	; 0x80289b <SET_MIN>
    3a30:	90 93 9c 28 	sts	0x289C, r25	; 0x80289c <SET_MIN+0x1>
    3a34:	42 c8       	rjmp	.-3964   	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    3a36:	80 91 3c 29 	lds	r24, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1f>
    3a3a:	90 91 3d 29 	lds	r25, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    3a3e:	2a e0       	ldi	r18, 0x0A	; 10
    3a40:	28 9f       	mul	r18, r24
    3a42:	b0 01       	movw	r22, r0
    3a44:	29 9f       	mul	r18, r25
    3a46:	70 0d       	add	r23, r0
    3a48:	11 24       	eor	r1, r1
    3a4a:	07 2e       	mov	r0, r23
    3a4c:	00 0c       	add	r0, r0
    3a4e:	88 0b       	sbc	r24, r24
    3a50:	99 0b       	sbc	r25, r25
    3a52:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3a56:	85 e1       	ldi	r24, 0x15	; 21
    3a58:	90 e0       	ldi	r25, 0x00	; 0
    3a5a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3a5e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3a62:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3a66:	90 cf       	rjmp	.-224    	; 0x3988 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf0a>
    3a68:	89 e1       	ldi	r24, 0x19	; 25
    3a6a:	90 e0       	ldi	r25, 0x00	; 0
    3a6c:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    3a70:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    3a74:	b3 cf       	rjmp	.-154    	; 0x39dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0xf5e>
    3a76:	be 01       	movw	r22, r28
    3a78:	dd 0f       	add	r29, r29
    3a7a:	88 0b       	sbc	r24, r24
    3a7c:	99 0b       	sbc	r25, r25
    3a7e:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    3a82:	6b 01       	movw	r12, r22
    3a84:	7c 01       	movw	r14, r24
    3a86:	20 e0       	ldi	r18, 0x00	; 0
    3a88:	30 e0       	ldi	r19, 0x00	; 0
    3a8a:	40 e7       	ldi	r20, 0x70	; 112
    3a8c:	51 e4       	ldi	r21, 0x41	; 65
    3a8e:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <TEMP_FAH>
    3a92:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    3a96:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    3a9a:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    3a9e:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    3aa2:	9b 01       	movw	r18, r22
    3aa4:	ac 01       	movw	r20, r24
    3aa6:	c7 01       	movw	r24, r14
    3aa8:	b6 01       	movw	r22, r12
    3aaa:	a8 c8       	rjmp	.-3760   	; 0x2bfc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x17e>
    3aac:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <CHECK_RATE_OF_HEATING>
digitalWrite():
    3ab0:	61 e0       	ldi	r22, 0x01	; 1
    3ab2:	81 e2       	ldi	r24, 0x21	; 33
    3ab4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3ab8:	80 91 fe 28 	lds	r24, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    3abc:	90 91 ff 28 	lds	r25, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    3ac0:	a0 91 00 29 	lds	r26, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    3ac4:	b0 91 01 29 	lds	r27, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    3ac8:	80 93 8c 28 	sts	0x288C, r24	; 0x80288c <TEMP_VALUE_INITIAL>
    3acc:	90 93 8d 28 	sts	0x288D, r25	; 0x80288d <TEMP_VALUE_INITIAL+0x1>
    3ad0:	a0 93 8e 28 	sts	0x288E, r26	; 0x80288e <TEMP_VALUE_INITIAL+0x2>
    3ad4:	b0 93 8f 28 	sts	0x288F, r27	; 0x80288f <TEMP_VALUE_INITIAL+0x3>
    3ad8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    3adc:	60 93 88 28 	sts	0x2888, r22	; 0x802888 <START_COUNT_VALUE>
    3ae0:	70 93 89 28 	sts	0x2889, r23	; 0x802889 <START_COUNT_VALUE+0x1>
    3ae4:	80 93 8a 28 	sts	0x288A, r24	; 0x80288a <START_COUNT_VALUE+0x2>
    3ae8:	90 93 8b 28 	sts	0x288B, r25	; 0x80288b <START_COUNT_VALUE+0x3>
    3aec:	a0 c8       	rjmp	.-3776   	; 0x2c2e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1b0>
    3aee:	60 91 95 28 	lds	r22, 0x2895	; 0x802895 <SET_TEMP_FAH>
    3af2:	70 91 96 28 	lds	r23, 0x2896	; 0x802896 <SET_TEMP_FAH+0x1>
    3af6:	07 2e       	mov	r0, r23
    3af8:	00 0c       	add	r0, r0
    3afa:	88 0b       	sbc	r24, r24
    3afc:	99 0b       	sbc	r25, r25
    3afe:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    3b02:	60 93 84 28 	sts	0x2884, r22	; 0x802884 <PID_SETPOINT_To_Show>
    3b06:	70 93 85 28 	sts	0x2885, r23	; 0x802885 <PID_SETPOINT_To_Show+0x1>
    3b0a:	80 93 86 28 	sts	0x2886, r24	; 0x802886 <PID_SETPOINT_To_Show+0x2>
    3b0e:	90 93 87 28 	sts	0x2887, r25	; 0x802887 <PID_SETPOINT_To_Show+0x3>
    3b12:	20 e0       	ldi	r18, 0x00	; 0
    3b14:	30 e0       	ldi	r19, 0x00	; 0
    3b16:	40 e0       	ldi	r20, 0x00	; 0
    3b18:	52 e4       	ldi	r21, 0x42	; 66
    3b1a:	0e 94 c4 37 	call	0x6f88	; 0x6f88 <__subsf3>
    3b1e:	26 e6       	ldi	r18, 0x66	; 102
    3b20:	36 e6       	ldi	r19, 0x66	; 102
    3b22:	46 ee       	ldi	r20, 0xE6	; 230
    3b24:	5f e3       	ldi	r21, 0x3F	; 63
    3b26:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    3b2a:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    3b2e:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    3b32:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    3b36:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
    3b3a:	93 c8       	rjmp	.-3802   	; 0x2c62 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1e4>
    3b3c:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <checkTempRaised>
    3b40:	fb c8       	rjmp	.-3594   	; 0x2d38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x2ba>
    3b42:	40 91 65 28 	lds	r20, 0x2865	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME>
    3b46:	50 91 66 28 	lds	r21, 0x2866	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    3b4a:	60 91 67 28 	lds	r22, 0x2867	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    3b4e:	70 91 68 28 	lds	r23, 0x2868	; 0x802868 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    3b52:	26 01       	movw	r4, r12
    3b54:	37 01       	movw	r6, r14
    3b56:	44 1a       	sub	r4, r20
    3b58:	55 0a       	sbc	r5, r21
    3b5a:	66 0a       	sbc	r6, r22
    3b5c:	77 0a       	sbc	r7, r23
    3b5e:	b3 01       	movw	r22, r6
    3b60:	a2 01       	movw	r20, r4
    3b62:	40 39       	cpi	r20, 0x90	; 144
    3b64:	5f 45       	sbci	r21, 0x5F	; 95
    3b66:	61 40       	sbci	r22, 0x01	; 1
    3b68:	71 05       	cpc	r23, r1
    3b6a:	30 f4       	brcc	.+12     	; 0x3b78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x10fa>
    3b6c:	01 96       	adiw	r24, 0x01	; 1
    3b6e:	80 93 69 28 	sts	0x2869, r24	; 0x802869 <COOLING_CYCLE_COUNT>
    3b72:	90 93 6a 28 	sts	0x286A, r25	; 0x80286a <COOLING_CYCLE_COUNT+0x1>
    3b76:	11 ca       	rjmp	.-3038   	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x51c>
    3b78:	10 92 69 28 	sts	0x2869, r1	; 0x802869 <COOLING_CYCLE_COUNT>
    3b7c:	10 92 6a 28 	sts	0x286A, r1	; 0x80286a <COOLING_CYCLE_COUNT+0x1>
    3b80:	0c ca       	rjmp	.-3048   	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x51c>
    3b82:	80 91 77 28 	lds	r24, 0x2877	; 0x802877 <CAL_OF_10_MIN>
    3b86:	90 91 78 28 	lds	r25, 0x2878	; 0x802878 <CAL_OF_10_MIN+0x1>
    3b8a:	a0 91 79 28 	lds	r26, 0x2879	; 0x802879 <CAL_OF_10_MIN+0x2>
    3b8e:	b0 91 7a 28 	lds	r27, 0x287A	; 0x80287a <CAL_OF_10_MIN+0x3>
    3b92:	26 01       	movw	r4, r12
    3b94:	37 01       	movw	r6, r14
    3b96:	48 1a       	sub	r4, r24
    3b98:	59 0a       	sbc	r5, r25
    3b9a:	6a 0a       	sbc	r6, r26
    3b9c:	7b 0a       	sbc	r7, r27
    3b9e:	d3 01       	movw	r26, r6
    3ba0:	c2 01       	movw	r24, r4
    3ba2:	81 3a       	cpi	r24, 0xA1	; 161
    3ba4:	98 46       	sbci	r25, 0x68	; 104
    3ba6:	a6 40       	sbci	r26, 0x06	; 6
    3ba8:	b1 05       	cpc	r27, r1
    3baa:	08 f4       	brcc	.+2      	; 0x3bae <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1130>
    3bac:	f6 c9       	rjmp	.-3092   	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x51c>
    3bae:	81 e0       	ldi	r24, 0x01	; 1
    3bb0:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    3bb4:	60 e0       	ldi	r22, 0x00	; 0
    3bb6:	85 e1       	ldi	r24, 0x15	; 21
    3bb8:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3bbc:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
    3bc0:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN>
    3bc4:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <SET_MIN+0x1>
    3bc8:	e8 c9       	rjmp	.-3120   	; 0x2f9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x51c>
    3bca:	20 e0       	ldi	r18, 0x00	; 0
    3bcc:	30 e0       	ldi	r19, 0x00	; 0
    3bce:	40 e8       	ldi	r20, 0x80	; 128
    3bd0:	5f e3       	ldi	r21, 0x3F	; 63
    3bd2:	c7 01       	movw	r24, r14
    3bd4:	b6 01       	movw	r22, r12
    3bd6:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    3bda:	87 ff       	sbrs	r24, 7
    3bdc:	fc c9       	rjmp	.-3080   	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x558>
    3bde:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <CHECK_RATE_OF_HEATING>
    3be2:	88 23       	and	r24, r24
    3be4:	09 f4       	brne	.+2      	; 0x3be8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x116a>
    3be6:	f7 c9       	rjmp	.-3090   	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x558>
    3be8:	80 91 ab 28 	lds	r24, 0x28AB	; 0x8028ab <EXECUTE_PID_LOOP>
    3bec:	81 11       	cpse	r24, r1
    3bee:	07 c0       	rjmp	.+14     	; 0x3bfe <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1180>
PID_Start():
    3bf0:	86 e3       	ldi	r24, 0x36	; 54
    3bf2:	9a e2       	ldi	r25, 0x2A	; 42
    3bf4:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3bf8:	81 e0       	ldi	r24, 0x01	; 1
    3bfa:	80 93 ab 28 	sts	0x28AB, r24	; 0x8028ab <EXECUTE_PID_LOOP>
    3bfe:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Lclass::PID_callingg() [clone .constprop.43]>
    3c02:	e9 c9       	rjmp	.-3118   	; 0x2fd6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x558>
    3c04:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    3c08:	81 11       	cpse	r24, r1
    3c0a:	1d c0       	rjmp	.+58     	; 0x3c46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11c8>
    3c0c:	a7 01       	movw	r20, r14
    3c0e:	96 01       	movw	r18, r12
    3c10:	c5 01       	movw	r24, r10
    3c12:	b4 01       	movw	r22, r8
    3c14:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    3c18:	87 fd       	sbrc	r24, 7
    3c1a:	06 c0       	rjmp	.+12     	; 0x3c28 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11aa>
    3c1c:	81 e0       	ldi	r24, 0x01	; 1
    3c1e:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <COUNTDOWN_START>
    3c22:	80 93 a7 28 	sts	0x28A7, r24	; 0x8028a7 <soak_once_flag>
    3c26:	ee c9       	rjmp	.-3108   	; 0x3004 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x586>
    3c28:	a7 01       	movw	r20, r14
    3c2a:	96 01       	movw	r18, r12
    3c2c:	c5 01       	movw	r24, r10
    3c2e:	b4 01       	movw	r22, r8
    3c30:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    3c34:	87 ff       	sbrs	r24, 7
    3c36:	e5 c1       	rjmp	.+970    	; 0x4002 <__RODATA_PM_OFFSET__+0x2>
    3c38:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <soak_once_flag>
    3c3c:	81 11       	cpse	r24, r1
    3c3e:	e2 c9       	rjmp	.-3132   	; 0x3004 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x586>
    3c40:	10 92 63 28 	sts	0x2863, r1	; 0x802863 <COUNTDOWN_START>
    3c44:	df c9       	rjmp	.-3138   	; 0x3004 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x586>
    3c46:	40 90 d0 28 	lds	r4, 0x28D0	; 0x8028d0 <TEMP_FAH>
    3c4a:	50 90 d1 28 	lds	r5, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    3c4e:	60 90 d2 28 	lds	r6, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    3c52:	70 90 d3 28 	lds	r7, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    3c56:	a7 01       	movw	r20, r14
    3c58:	96 01       	movw	r18, r12
    3c5a:	c3 01       	movw	r24, r6
    3c5c:	b2 01       	movw	r22, r4
    3c5e:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    3c62:	87 ff       	sbrs	r24, 7
    3c64:	db cf       	rjmp	.-74     	; 0x3c1c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x119e>
    3c66:	a7 01       	movw	r20, r14
    3c68:	96 01       	movw	r18, r12
    3c6a:	c3 01       	movw	r24, r6
    3c6c:	b2 01       	movw	r22, r4
    3c6e:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    3c72:	87 fd       	sbrc	r24, 7
    3c74:	e1 cf       	rjmp	.-62     	; 0x3c38 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x11ba>
    3c76:	c6 c9       	rjmp	.-3188   	; 0x3004 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x586>
    3c78:	80 e8       	ldi	r24, 0x80	; 128
    3c7a:	9a e1       	ldi	r25, 0x1A	; 26
    3c7c:	a6 e0       	ldi	r26, 0x06	; 6
    3c7e:	b0 e0       	ldi	r27, 0x00	; 0
    3c80:	eb c9       	rjmp	.-3114   	; 0x3058 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5da>
    3c82:	80 e0       	ldi	r24, 0x00	; 0
    3c84:	95 e3       	ldi	r25, 0x35	; 53
    3c86:	ac e0       	ldi	r26, 0x0C	; 12
    3c88:	b0 e0       	ldi	r27, 0x00	; 0
    3c8a:	f9 c9       	rjmp	.-3086   	; 0x307e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x600>
    3c8c:	80 e4       	ldi	r24, 0x40	; 64
    3c8e:	92 e4       	ldi	r25, 0x42	; 66
    3c90:	af e0       	ldi	r26, 0x0F	; 15
    3c92:	b0 e0       	ldi	r27, 0x00	; 0
    3c94:	a0 ca       	rjmp	.-2752   	; 0x31d6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x758>
    3c96:	80 e8       	ldi	r24, 0x80	; 128
    3c98:	94 e8       	ldi	r25, 0x84	; 132
    3c9a:	ae e1       	ldi	r26, 0x1E	; 30
    3c9c:	b0 e0       	ldi	r27, 0x00	; 0
    3c9e:	ae ca       	rjmp	.-2724   	; 0x31fc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x77e>
    3ca0:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <PUMP_FLAG>
    3ca4:	88 23       	and	r24, r24
    3ca6:	09 f4       	brne	.+2      	; 0x3caa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x122c>
    3ca8:	4e c0       	rjmp	.+156    	; 0x3d46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12c8>
    3caa:	80 91 0a 29 	lds	r24, 0x290A	; 0x80290a <select_product_type>
    3cae:	88 23       	and	r24, r24
    3cb0:	09 f4       	brne	.+2      	; 0x3cb4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1236>
    3cb2:	49 c0       	rjmp	.+146    	; 0x3d46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12c8>
    3cb4:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3cb8:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    3cbc:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3cc0:	60 e0       	ldi	r22, 0x00	; 0
    3cc2:	8c e0       	ldi	r24, 0x0C	; 12
    3cc4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3cc8:	8c e0       	ldi	r24, 0x0C	; 12
    3cca:	90 e0       	ldi	r25, 0x00	; 0
    3ccc:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    3cd0:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    3cd4:	80 e1       	ldi	r24, 0x10	; 16
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    3cdc:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    3ce0:	89 e1       	ldi	r24, 0x19	; 25
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    3ce8:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    3cec:	81 e1       	ldi	r24, 0x11	; 17
    3cee:	90 e0       	ldi	r25, 0x00	; 0
    3cf0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3cf4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    3cf8:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0xa>
    3cfc:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    3d00:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <digits1>
    3d04:	10 92 f2 28 	sts	0x28F2, r1	; 0x8028f2 <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    3d08:	89 2b       	or	r24, r25
    3d0a:	81 f4       	brne	.+32     	; 0x3d2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12ae>
DISPLAY_DIGIT1():
    3d0c:	c0 93 f3 28 	sts	0x28F3, r28	; 0x8028f3 <digits1+0x2>
    3d10:	d0 93 f4 28 	sts	0x28F4, r29	; 0x8028f4 <digits1+0x3>
    3d14:	c0 93 f5 28 	sts	0x28F5, r28	; 0x8028f5 <digits1+0x4>
    3d18:	d0 93 f6 28 	sts	0x28F6, r29	; 0x8028f6 <digits1+0x5>
    3d1c:	88 e1       	ldi	r24, 0x18	; 24
    3d1e:	90 e0       	ldi	r25, 0x00	; 0
    3d20:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    3d24:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    3d28:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
    3d2c:	84 e1       	ldi	r24, 0x14	; 20
    3d2e:	90 e0       	ldi	r25, 0x00	; 0
    3d30:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    3d34:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    3d38:	88 e1       	ldi	r24, 0x18	; 24
    3d3a:	90 e0       	ldi	r25, 0x00	; 0
    3d3c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    3d40:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    3d44:	ed cf       	rjmp	.-38     	; 0x3d20 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12a2>
SET_SHORT_PRESS_FUNCTION():
    3d46:	80 91 5b 28 	lds	r24, 0x285B	; 0x80285b <TIMER_LED_BLINK>
    3d4a:	90 91 5c 28 	lds	r25, 0x285C	; 0x80285c <TIMER_LED_BLINK+0x1>
    3d4e:	9c 01       	movw	r18, r24
    3d50:	2f 5f       	subi	r18, 0xFF	; 255
    3d52:	3f 4f       	sbci	r19, 0xFF	; 255
    3d54:	20 93 5b 28 	sts	0x285B, r18	; 0x80285b <TIMER_LED_BLINK>
    3d58:	30 93 5c 28 	sts	0x285C, r19	; 0x80285c <TIMER_LED_BLINK+0x1>
digitalWrite():
    3d5c:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    3d5e:	28 39       	cpi	r18, 0x98	; 152
    3d60:	38 40       	sbci	r19, 0x08	; 8
    3d62:	38 f0       	brcs	.+14     	; 0x3d72 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12f4>
    3d64:	87 59       	subi	r24, 0x97	; 151
    3d66:	98 40       	sbci	r25, 0x08	; 8
    3d68:	88 39       	cpi	r24, 0x98	; 152
    3d6a:	98 40       	sbci	r25, 0x08	; 8
    3d6c:	08 f0       	brcs	.+2      	; 0x3d70 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12f2>
    3d6e:	55 c0       	rjmp	.+170    	; 0x3e1a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x139c>
digitalWrite():
    3d70:	60 e0       	ldi	r22, 0x00	; 0
    3d72:	8c e0       	ldi	r24, 0x0C	; 12
    3d74:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3d78:	80 91 b6 28 	lds	r24, 0x28B6	; 0x8028b6 <IN_ERROR>
    3d7c:	88 23       	and	r24, r24
    3d7e:	71 f0       	breq	.+28     	; 0x3d9c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x131e>
stop():
    3d80:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <BUZZ_TICK1>
    3d84:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <BUZZ_TICK1+0xb>
    3d88:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <BUZZ_TICK1+0xc>
    3d8c:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <BUZZ_TICK1+0xd>
    3d90:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <BUZZ_TICK1+0xe>
    3d94:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <BUZZ_TICK1+0xf>
    3d98:	10 92 03 2b 	sts	0x2B03, r1	; 0x802b03 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    3d9c:	84 e6       	ldi	r24, 0x64	; 100
    3d9e:	8c 9d       	mul	r24, r12
    3da0:	b0 01       	movw	r22, r0
    3da2:	8d 9d       	mul	r24, r13
    3da4:	70 0d       	add	r23, r0
    3da6:	11 24       	eor	r1, r1
    3da8:	6e 0d       	add	r22, r14
    3daa:	7f 1d       	adc	r23, r15
    3dac:	07 2e       	mov	r0, r23
    3dae:	00 0c       	add	r0, r0
    3db0:	88 0b       	sbc	r24, r24
    3db2:	99 0b       	sbc	r25, r25
    3db4:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3db8:	81 e5       	ldi	r24, 0x51	; 81
    3dba:	9a e2       	ldi	r25, 0x2A	; 42
    3dbc:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    3dc0:	80 91 83 28 	lds	r24, 0x2883	; 0x802883 <Alternate_Display_Flag>
    3dc4:	88 23       	and	r24, r24
    3dc6:	f1 f1       	breq	.+124    	; 0x3e44 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x13c6>
digitalWrite():
    3dc8:	61 e0       	ldi	r22, 0x01	; 1
    3dca:	8c e1       	ldi	r24, 0x1C	; 28
    3dcc:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3dd0:	60 e0       	ldi	r22, 0x00	; 0
    3dd2:	8d e1       	ldi	r24, 0x1D	; 29
    3dd4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3dd8:	60 91 84 28 	lds	r22, 0x2884	; 0x802884 <PID_SETPOINT_To_Show>
    3ddc:	70 91 85 28 	lds	r23, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x1>
    3de0:	80 91 86 28 	lds	r24, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x2>
    3de4:	90 91 87 28 	lds	r25, 0x2887	; 0x802887 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    3de8:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    3dec:	21 11       	cpse	r18, r1
    3dee:	1a c0       	rjmp	.+52     	; 0x3e24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x13a6>
    3df0:	20 e0       	ldi	r18, 0x00	; 0
    3df2:	30 e0       	ldi	r19, 0x00	; 0
    3df4:	48 ec       	ldi	r20, 0xC8	; 200
    3df6:	52 e4       	ldi	r21, 0x42	; 66
    3df8:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    3dfc:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    3e00:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3e04:	8a e0       	ldi	r24, 0x0A	; 10
    3e06:	90 e0       	ldi	r25, 0x00	; 0
    3e08:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3e0c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3e10:	81 e0       	ldi	r24, 0x01	; 1
    3e12:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    3e16:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
    3e1a:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <TIMER_LED_BLINK>
    3e1e:	10 92 5c 28 	sts	0x285C, r1	; 0x80285c <TIMER_LED_BLINK+0x1>
    3e22:	aa cf       	rjmp	.-172    	; 0x3d78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x12fa>
    3e24:	20 e0       	ldi	r18, 0x00	; 0
    3e26:	30 e0       	ldi	r19, 0x00	; 0
    3e28:	40 e2       	ldi	r20, 0x20	; 32
    3e2a:	51 e4       	ldi	r21, 0x41	; 65
    3e2c:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    3e30:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    3e34:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3e38:	c0 93 ef 28 	sts	0x28EF, r28	; 0x8028ef <digits2+0x6>
    3e3c:	d0 93 f0 28 	sts	0x28F0, r29	; 0x8028f0 <digits2+0x7>
    3e40:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
digitalWrite():
    3e44:	60 e0       	ldi	r22, 0x00	; 0
    3e46:	8c e1       	ldi	r24, 0x1C	; 28
    3e48:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    3e4c:	61 e0       	ldi	r22, 0x01	; 1
    3e4e:	8d e1       	ldi	r24, 0x1D	; 29
    3e50:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3e54:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    3e58:	81 11       	cpse	r24, r1
    3e5a:	38 c0       	rjmp	.+112    	; 0x3ecc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x144e>
    3e5c:	c0 90 02 29 	lds	r12, 0x2902	; 0x802902 <TEMP_DEG>
    3e60:	d0 90 03 29 	lds	r13, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    3e64:	e0 90 04 29 	lds	r14, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    3e68:	f0 90 05 29 	lds	r15, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    3e6c:	2d ec       	ldi	r18, 0xCD	; 205
    3e6e:	3c ec       	ldi	r19, 0xCC	; 204
    3e70:	47 ec       	ldi	r20, 0xC7	; 199
    3e72:	52 e4       	ldi	r21, 0x42	; 66
    3e74:	c7 01       	movw	r24, r14
    3e76:	b6 01       	movw	r22, r12
    3e78:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    3e7c:	18 16       	cp	r1, r24
    3e7e:	b4 f4       	brge	.+44     	; 0x3eac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x142e>
    3e80:	20 e0       	ldi	r18, 0x00	; 0
    3e82:	30 e0       	ldi	r19, 0x00	; 0
    3e84:	40 e2       	ldi	r20, 0x20	; 32
    3e86:	51 e4       	ldi	r21, 0x41	; 65
    3e88:	c7 01       	movw	r24, r14
    3e8a:	b6 01       	movw	r22, r12
    3e8c:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    3e90:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    3e94:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3e98:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    3e9c:	8a e0       	ldi	r24, 0x0A	; 10
    3e9e:	90 e0       	ldi	r25, 0x00	; 0
    3ea0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    3ea4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    3ea8:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x208>
    3eac:	20 e0       	ldi	r18, 0x00	; 0
    3eae:	30 e0       	ldi	r19, 0x00	; 0
    3eb0:	48 ec       	ldi	r20, 0xC8	; 200
    3eb2:	52 e4       	ldi	r21, 0x42	; 66
    3eb4:	c7 01       	movw	r24, r14
    3eb6:	b6 01       	movw	r22, r12
    3eb8:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    3ebc:	0e 94 95 38 	call	0x712a	; 0x712a <__fixsfsi>
    3ec0:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3ec4:	81 e0       	ldi	r24, 0x01	; 1
    3ec6:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    3eca:	e8 cf       	rjmp	.-48     	; 0x3e9c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x141e>
    3ecc:	20 e0       	ldi	r18, 0x00	; 0
    3ece:	30 e0       	ldi	r19, 0x00	; 0
    3ed0:	40 e2       	ldi	r20, 0x20	; 32
    3ed2:	51 e4       	ldi	r21, 0x41	; 65
    3ed4:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <TEMP_FAH>
    3ed8:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <TEMP_FAH+0x1>
    3edc:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <TEMP_FAH+0x2>
    3ee0:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <TEMP_FAH+0x3>
    3ee4:	a3 cf       	rjmp	.-186    	; 0x3e2c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x13ae>
digitalWrite():
    3ee6:	60 e0       	ldi	r22, 0x00	; 0
    3ee8:	88 e1       	ldi	r24, 0x18	; 24
    3eea:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3eee:	60 e0       	ldi	r22, 0x00	; 0
    3ef0:	80 ea       	ldi	r24, 0xA0	; 160
    3ef2:	90 e0       	ldi	r25, 0x00	; 0
    3ef4:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3ef8:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
LED_On_Call():
    3efc:	82 ea       	ldi	r24, 0xA2	; 162
    3efe:	9a e2       	ldi	r25, 0x2A	; 42
    3f00:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3f04:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
    3f08:	60 e0       	ldi	r22, 0x00	; 0
    3f0a:	87 e8       	ldi	r24, 0x87	; 135
    3f0c:	90 e0       	ldi	r25, 0x00	; 0
    3f0e:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
SET_SHORT_PRESS_FUNCTION():
    3f12:	60 91 57 28 	lds	r22, 0x2857	; 0x802857 <actualRunMin>
    3f16:	70 91 58 28 	lds	r23, 0x2858	; 0x802858 <actualRunMin+0x1>
    3f1a:	80 91 59 28 	lds	r24, 0x2859	; 0x802859 <actualRunMin+0x2>
    3f1e:	90 91 5a 28 	lds	r25, 0x285A	; 0x80285a <actualRunMin+0x3>
    3f22:	2c e3       	ldi	r18, 0x3C	; 60
    3f24:	30 e0       	ldi	r19, 0x00	; 0
    3f26:	40 e0       	ldi	r20, 0x00	; 0
    3f28:	50 e0       	ldi	r21, 0x00	; 0
    3f2a:	0e 94 f2 39 	call	0x73e4	; 0x73e4 <__udivmodsi4>
    3f2e:	69 01       	movw	r12, r18
    3f30:	20 93 55 28 	sts	0x2855, r18	; 0x802855 <actualRunHours>
    3f34:	30 93 56 28 	sts	0x2856, r19	; 0x802856 <actualRunHours+0x1>
    3f38:	63 e5       	ldi	r22, 0x53	; 83
    3f3a:	78 e2       	ldi	r23, 0x28	; 40
    3f3c:	88 e9       	ldi	r24, 0x98	; 152
    3f3e:	90 e0       	ldi	r25, 0x00	; 0
    3f40:	0e 94 6e 10 	call	0x20dc	; 0x20dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    3f44:	20 91 53 28 	lds	r18, 0x2853	; 0x802853 <processLog>
    3f48:	30 91 54 28 	lds	r19, 0x2854	; 0x802854 <processLog+0x1>
    3f4c:	2c 0d       	add	r18, r12
    3f4e:	3d 1d       	adc	r19, r13
    3f50:	20 93 53 28 	sts	0x2853, r18	; 0x802853 <processLog>
    3f54:	30 93 54 28 	sts	0x2854, r19	; 0x802854 <processLog+0x1>
    3f58:	2f 30       	cpi	r18, 0x0F	; 15
    3f5a:	37 42       	sbci	r19, 0x27	; 39
    3f5c:	68 f0       	brcs	.+26     	; 0x3f78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x14fa>
    3f5e:	80 91 51 28 	lds	r24, 0x2851	; 0x802851 <processLogNumberOfTimes>
    3f62:	90 91 52 28 	lds	r25, 0x2852	; 0x802852 <processLogNumberOfTimes+0x1>
    3f66:	01 96       	adiw	r24, 0x01	; 1
    3f68:	80 93 51 28 	sts	0x2851, r24	; 0x802851 <processLogNumberOfTimes>
    3f6c:	90 93 52 28 	sts	0x2852, r25	; 0x802852 <processLogNumberOfTimes+0x1>
    3f70:	10 92 53 28 	sts	0x2853, r1	; 0x802853 <processLog>
    3f74:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <processLog+0x1>
    3f78:	63 e5       	ldi	r22, 0x53	; 83
    3f7a:	78 e2       	ldi	r23, 0x28	; 40
    3f7c:	88 e9       	ldi	r24, 0x98	; 152
    3f7e:	90 e0       	ldi	r25, 0x00	; 0
    3f80:	0e 94 58 11 	call	0x22b0	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    3f84:	61 e5       	ldi	r22, 0x51	; 81
    3f86:	78 e2       	ldi	r23, 0x28	; 40
    3f88:	8a e9       	ldi	r24, 0x9A	; 154
    3f8a:	90 e0       	ldi	r25, 0x00	; 0
    3f8c:	0e 94 58 11 	call	0x22b0	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    3f90:	10 92 55 28 	sts	0x2855, r1	; 0x802855 <actualRunHours>
    3f94:	10 92 56 28 	sts	0x2856, r1	; 0x802856 <actualRunHours+0x1>
    3f98:	10 92 57 28 	sts	0x2857, r1	; 0x802857 <actualRunMin>
    3f9c:	10 92 58 28 	sts	0x2858, r1	; 0x802858 <actualRunMin+0x1>
    3fa0:	10 92 59 28 	sts	0x2859, r1	; 0x802859 <actualRunMin+0x2>
    3fa4:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <actualRunMin+0x3>
stop():
    3fa8:	10 92 51 2a 	sts	0x2A51, r1	; 0x802a51 <Alter_Disp>
    3fac:	10 92 5c 2a 	sts	0x2A5C, r1	; 0x802a5c <Alter_Disp+0xb>
    3fb0:	10 92 5d 2a 	sts	0x2A5D, r1	; 0x802a5d <Alter_Disp+0xc>
    3fb4:	10 92 5e 2a 	sts	0x2A5E, r1	; 0x802a5e <Alter_Disp+0xd>
    3fb8:	10 92 5f 2a 	sts	0x2A5F, r1	; 0x802a5f <Alter_Disp+0xe>
    3fbc:	10 92 60 2a 	sts	0x2A60, r1	; 0x802a60 <Alter_Disp+0xf>
    3fc0:	10 92 61 2a 	sts	0x2A61, r1	; 0x802a61 <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    3fc4:	80 91 b1 28 	lds	r24, 0x28B1	; 0x8028b1 <Blinking_Freq>
    3fc8:	83 30       	cpi	r24, 0x03	; 3
    3fca:	b8 f4       	brcc	.+46     	; 0x3ffa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x157c>
    3fcc:	84 ef       	ldi	r24, 0xF4	; 244
    3fce:	91 e0       	ldi	r25, 0x01	; 1
    3fd0:	0e 94 14 0b 	call	0x1628	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
stop():
    3fd4:	10 92 36 2a 	sts	0x2A36, r1	; 0x802a36 <PID_EXE>
    3fd8:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <PID_EXE+0xb>
    3fdc:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <PID_EXE+0xc>
    3fe0:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <PID_EXE+0xd>
    3fe4:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <PID_EXE+0xe>
    3fe8:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <PID_EXE+0xf>
    3fec:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <PID_EXE+0x10>
DISP_UPDATE():
    3ff0:	8b ed       	ldi	r24, 0xDB	; 219
    3ff2:	9b e2       	ldi	r25, 0x2B	; 43
    3ff4:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    3ff8:	e5 cf       	rjmp	.-54     	; 0x3fc4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x1546>
SET_SHORT_PRESS_FUNCTION():
    3ffa:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
    3ffe:	0c 94 5d 15 	jmp	0x2aba	; 0x2aba <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x3c>
    4002:	a7 01       	movw	r20, r14
    4004:	96 01       	movw	r18, r12
    4006:	c5 01       	movw	r24, r10
    4008:	b4 01       	movw	r22, r8
    400a:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    400e:	87 ff       	sbrs	r24, 7
    4010:	01 c0       	rjmp	.+2      	; 0x4014 <__RODATA_PM_OFFSET__+0x14>
    4012:	04 c8       	rjmp	.-4088   	; 0x301c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x59e>
    4014:	16 c8       	rjmp	.-4052   	; 0x3042 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]+0x5c4>

00004016 <shiftOut.constprop.7>:
shiftOut():
    4016:	ef 92       	push	r14
    4018:	ff 92       	push	r15
    401a:	0f 93       	push	r16
    401c:	1f 93       	push	r17
    401e:	cf 93       	push	r28
    4020:	df 93       	push	r29
    4022:	e8 2e       	mov	r14, r24
    4024:	f6 2e       	mov	r15, r22
    4026:	d0 e0       	ldi	r29, 0x00	; 0
    4028:	c0 e0       	ldi	r28, 0x00	; 0
    402a:	04 2f       	mov	r16, r20
    402c:	10 e0       	ldi	r17, 0x00	; 0
    402e:	b8 01       	movw	r22, r16
    4030:	0c 2e       	mov	r0, r28
    4032:	02 c0       	rjmp	.+4      	; 0x4038 <shiftOut.constprop.7+0x22>
    4034:	75 95       	asr	r23
    4036:	67 95       	ror	r22
    4038:	0a 94       	dec	r0
    403a:	e2 f7       	brpl	.-8      	; 0x4034 <shiftOut.constprop.7+0x1e>
    403c:	61 70       	andi	r22, 0x01	; 1
    403e:	8e 2d       	mov	r24, r14
    4040:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4044:	61 e0       	ldi	r22, 0x01	; 1
    4046:	8f 2d       	mov	r24, r15
    4048:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    404c:	60 e0       	ldi	r22, 0x00	; 0
    404e:	8f 2d       	mov	r24, r15
    4050:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4054:	21 96       	adiw	r28, 0x01	; 1
    4056:	c8 30       	cpi	r28, 0x08	; 8
    4058:	d1 05       	cpc	r29, r1
    405a:	49 f7       	brne	.-46     	; 0x402e <shiftOut.constprop.7+0x18>
    405c:	df 91       	pop	r29
    405e:	cf 91       	pop	r28
    4060:	1f 91       	pop	r17
    4062:	0f 91       	pop	r16
    4064:	ff 90       	pop	r15
    4066:	ef 90       	pop	r14
    4068:	08 95       	ret

0000406a <DISP_REFRESH()>:
DISP_REFRESH():
    406a:	0f 93       	push	r16
    406c:	1f 93       	push	r17
    406e:	cf 93       	push	r28
    4070:	df 93       	push	r29
    4072:	0e 94 7d 08 	call	0x10fa	; 0x10fa <Eclass::cathode_high1() [clone .constprop.6]>
    4076:	0e 94 89 08 	call	0x1112	; 0x1112 <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    407a:	0e 94 89 08 	call	0x1112	; 0x1112 <Eclass::cathode_high2() [clone .constprop.4]>
    407e:	60 e0       	ldi	r22, 0x00	; 0
    4080:	80 e2       	ldi	r24, 0x20	; 32
    4082:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4086:	c0 91 35 28 	lds	r28, 0x2835	; 0x802835 <count2>
    408a:	d0 91 36 28 	lds	r29, 0x2836	; 0x802836 <count2+0x1>
    408e:	80 91 bf 28 	lds	r24, 0x28BF	; 0x8028bf <DOT2_0>
    4092:	8e 01       	movw	r16, r28
    4094:	00 0f       	add	r16, r16
    4096:	11 1f       	adc	r17, r17
    4098:	88 23       	and	r24, r24
    409a:	31 f0       	breq	.+12     	; 0x40a8 <DISP_REFRESH()+0x3e>
    409c:	e0 91 e9 28 	lds	r30, 0x28E9	; 0x8028e9 <digits2>
    40a0:	f0 91 ea 28 	lds	r31, 0x28EA	; 0x8028ea <digits2+0x1>
    40a4:	20 97       	sbiw	r28, 0x00	; 0
    40a6:	c1 f0       	breq	.+48     	; 0x40d8 <DISP_REFRESH()+0x6e>
    40a8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <DOT2_1>
    40ac:	88 23       	and	r24, r24
    40ae:	39 f0       	breq	.+14     	; 0x40be <DISP_REFRESH()+0x54>
    40b0:	e0 91 eb 28 	lds	r30, 0x28EB	; 0x8028eb <digits2+0x2>
    40b4:	f0 91 ec 28 	lds	r31, 0x28EC	; 0x8028ec <digits2+0x3>
    40b8:	c1 30       	cpi	r28, 0x01	; 1
    40ba:	d1 05       	cpc	r29, r1
    40bc:	69 f0       	breq	.+26     	; 0x40d8 <DISP_REFRESH()+0x6e>
    40be:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <DOT2_2>
    40c2:	88 23       	and	r24, r24
    40c4:	09 f4       	brne	.+2      	; 0x40c8 <DISP_REFRESH()+0x5e>
    40c6:	80 c0       	rjmp	.+256    	; 0x41c8 <DISP_REFRESH()+0x15e>
    40c8:	c2 30       	cpi	r28, 0x02	; 2
    40ca:	d1 05       	cpc	r29, r1
    40cc:	09 f0       	breq	.+2      	; 0x40d0 <DISP_REFRESH()+0x66>
    40ce:	7c c0       	rjmp	.+248    	; 0x41c8 <DISP_REFRESH()+0x15e>
    40d0:	e0 91 ed 28 	lds	r30, 0x28ED	; 0x8028ed <digits2+0x4>
    40d4:	f0 91 ee 28 	lds	r31, 0x28EE	; 0x8028ee <digits2+0x5>
    40d8:	ea 50       	subi	r30, 0x0A	; 10
    40da:	fb 44       	sbci	r31, 0x4B	; 75
    40dc:	40 81       	ld	r20, Z
    40de:	41 60       	ori	r20, 0x01	; 1
    40e0:	6e e1       	ldi	r22, 0x1E	; 30
    40e2:	8f e1       	ldi	r24, 0x1F	; 31
    40e4:	98 df       	rcall	.-208    	; 0x4016 <shiftOut.constprop.7>
    40e6:	f8 01       	movw	r30, r16
    40e8:	ee 51       	subi	r30, 0x1E	; 30
    40ea:	fb 44       	sbci	r31, 0x4B	; 75
    40ec:	60 e0       	ldi	r22, 0x00	; 0
    40ee:	80 81       	ld	r24, Z
    40f0:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    40f4:	61 e0       	ldi	r22, 0x01	; 1
    40f6:	80 e2       	ldi	r24, 0x20	; 32
    40f8:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    40fc:	21 96       	adiw	r28, 0x01	; 1
    40fe:	c4 30       	cpi	r28, 0x04	; 4
    4100:	d1 05       	cpc	r29, r1
    4102:	0c f0       	brlt	.+2      	; 0x4106 <DISP_REFRESH()+0x9c>
    4104:	6b c0       	rjmp	.+214    	; 0x41dc <DISP_REFRESH()+0x172>
    4106:	c0 93 35 28 	sts	0x2835, r28	; 0x802835 <count2>
    410a:	d0 93 36 28 	sts	0x2836, r29	; 0x802836 <count2+0x1>
DISPLAY_NUMBER1():
    410e:	0e 94 7d 08 	call	0x10fa	; 0x10fa <Eclass::cathode_high1() [clone .constprop.6]>
    4112:	60 e0       	ldi	r22, 0x00	; 0
    4114:	83 e1       	ldi	r24, 0x13	; 19
    4116:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    411a:	c0 91 37 28 	lds	r28, 0x2837	; 0x802837 <count1>
    411e:	d0 91 38 28 	lds	r29, 0x2838	; 0x802838 <count1+0x1>
    4122:	80 91 bc 28 	lds	r24, 0x28BC	; 0x8028bc <DOT1_0>
    4126:	8e 01       	movw	r16, r28
    4128:	00 0f       	add	r16, r16
    412a:	11 1f       	adc	r17, r17
    412c:	88 23       	and	r24, r24
    412e:	31 f0       	breq	.+12     	; 0x413c <DISP_REFRESH()+0xd2>
    4130:	e0 91 f1 28 	lds	r30, 0x28F1	; 0x8028f1 <digits1>
    4134:	f0 91 f2 28 	lds	r31, 0x28F2	; 0x8028f2 <digits1+0x1>
    4138:	20 97       	sbiw	r28, 0x00	; 0
    413a:	c1 f0       	breq	.+48     	; 0x416c <DISP_REFRESH()+0x102>
    413c:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <DOT1_1>
    4140:	88 23       	and	r24, r24
    4142:	39 f0       	breq	.+14     	; 0x4152 <DISP_REFRESH()+0xe8>
    4144:	e0 91 f3 28 	lds	r30, 0x28F3	; 0x8028f3 <digits1+0x2>
    4148:	f0 91 f4 28 	lds	r31, 0x28F4	; 0x8028f4 <digits1+0x3>
    414c:	c1 30       	cpi	r28, 0x01	; 1
    414e:	d1 05       	cpc	r29, r1
    4150:	69 f0       	breq	.+26     	; 0x416c <DISP_REFRESH()+0x102>
    4152:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <DOT1_2>
    4156:	88 23       	and	r24, r24
    4158:	09 f4       	brne	.+2      	; 0x415c <DISP_REFRESH()+0xf2>
    415a:	45 c0       	rjmp	.+138    	; 0x41e6 <DISP_REFRESH()+0x17c>
    415c:	c2 30       	cpi	r28, 0x02	; 2
    415e:	d1 05       	cpc	r29, r1
    4160:	09 f0       	breq	.+2      	; 0x4164 <DISP_REFRESH()+0xfa>
    4162:	41 c0       	rjmp	.+130    	; 0x41e6 <DISP_REFRESH()+0x17c>
    4164:	e0 91 f5 28 	lds	r30, 0x28F5	; 0x8028f5 <digits1+0x4>
    4168:	f0 91 f6 28 	lds	r31, 0x28F6	; 0x8028f6 <digits1+0x5>
    416c:	ea 50       	subi	r30, 0x0A	; 10
    416e:	fb 44       	sbci	r31, 0x4B	; 75
    4170:	40 81       	ld	r20, Z
    4172:	41 60       	ori	r20, 0x01	; 1
    4174:	64 e1       	ldi	r22, 0x14	; 20
    4176:	82 e1       	ldi	r24, 0x12	; 18
    4178:	4e df       	rcall	.-356    	; 0x4016 <shiftOut.constprop.7>
    417a:	f8 01       	movw	r30, r16
    417c:	e4 51       	subi	r30, 0x14	; 20
    417e:	fb 44       	sbci	r31, 0x4B	; 75
    4180:	60 e0       	ldi	r22, 0x00	; 0
    4182:	80 81       	ld	r24, Z
    4184:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4188:	61 e0       	ldi	r22, 0x01	; 1
    418a:	83 e1       	ldi	r24, 0x13	; 19
    418c:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4190:	21 96       	adiw	r28, 0x01	; 1
    4192:	c4 30       	cpi	r28, 0x04	; 4
    4194:	d1 05       	cpc	r29, r1
    4196:	8c f5       	brge	.+98     	; 0x41fa <DISP_REFRESH()+0x190>
    4198:	c0 93 37 28 	sts	0x2837, r28	; 0x802837 <count1>
    419c:	d0 93 38 28 	sts	0x2838, r29	; 0x802838 <count1+0x1>
Button_Tick_Update():
    41a0:	81 ea       	ldi	r24, 0xA1	; 161
    41a2:	9b e2       	ldi	r25, 0x2B	; 43
    41a4:	0e 94 31 0b 	call	0x1662	; 0x1662 <OneButton::tick()>
    41a8:	82 e8       	ldi	r24, 0x82	; 130
    41aa:	9b e2       	ldi	r25, 0x2B	; 43
    41ac:	0e 94 31 0b 	call	0x1662	; 0x1662 <OneButton::tick()>
    41b0:	83 e6       	ldi	r24, 0x63	; 99
    41b2:	9b e2       	ldi	r25, 0x2B	; 43
    41b4:	0e 94 31 0b 	call	0x1662	; 0x1662 <OneButton::tick()>
    41b8:	84 e4       	ldi	r24, 0x44	; 68
    41ba:	9b e2       	ldi	r25, 0x2B	; 43
DISP_REFRESH():
    41bc:	df 91       	pop	r29
    41be:	cf 91       	pop	r28
    41c0:	1f 91       	pop	r17
    41c2:	0f 91       	pop	r16
Button_Tick_Update():
    41c4:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <OneButton::tick()>
DISPLAY_NUMBER2():
    41c8:	f8 01       	movw	r30, r16
    41ca:	e7 51       	subi	r30, 0x17	; 23
    41cc:	f7 4d       	sbci	r31, 0xD7	; 215
    41ce:	01 90       	ld	r0, Z+
    41d0:	f0 81       	ld	r31, Z
    41d2:	e0 2d       	mov	r30, r0
    41d4:	ea 50       	subi	r30, 0x0A	; 10
    41d6:	fb 44       	sbci	r31, 0x4B	; 75
    41d8:	40 81       	ld	r20, Z
    41da:	82 cf       	rjmp	.-252    	; 0x40e0 <DISP_REFRESH()+0x76>
    41dc:	10 92 35 28 	sts	0x2835, r1	; 0x802835 <count2>
    41e0:	10 92 36 28 	sts	0x2836, r1	; 0x802836 <count2+0x1>
    41e4:	94 cf       	rjmp	.-216    	; 0x410e <DISP_REFRESH()+0xa4>
DISPLAY_NUMBER1():
    41e6:	f8 01       	movw	r30, r16
    41e8:	ef 50       	subi	r30, 0x0F	; 15
    41ea:	f7 4d       	sbci	r31, 0xD7	; 215
    41ec:	01 90       	ld	r0, Z+
    41ee:	f0 81       	ld	r31, Z
    41f0:	e0 2d       	mov	r30, r0
    41f2:	ea 50       	subi	r30, 0x0A	; 10
    41f4:	fb 44       	sbci	r31, 0x4B	; 75
    41f6:	40 81       	ld	r20, Z
    41f8:	bd cf       	rjmp	.-134    	; 0x4174 <DISP_REFRESH()+0x10a>
    41fa:	10 92 37 28 	sts	0x2837, r1	; 0x802837 <count1>
    41fe:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <count1+0x1>
    4202:	ce cf       	rjmp	.-100    	; 0x41a0 <DISP_REFRESH()+0x136>

00004204 <__vector_32>:
__vector_32():
    4204:	1f 92       	push	r1
    4206:	0f 92       	push	r0
    4208:	0f b6       	in	r0, 0x3f	; 63
    420a:	0f 92       	push	r0
    420c:	11 24       	eor	r1, r1
    420e:	2f 93       	push	r18
    4210:	3f 93       	push	r19
    4212:	4f 93       	push	r20
    4214:	5f 93       	push	r21
    4216:	6f 93       	push	r22
    4218:	7f 93       	push	r23
    421a:	8f 93       	push	r24
    421c:	9f 93       	push	r25
    421e:	af 93       	push	r26
    4220:	bf 93       	push	r27
    4222:	ef 93       	push	r30
    4224:	ff 93       	push	r31
    4226:	81 e5       	ldi	r24, 0x51	; 81
    4228:	99 e2       	ldi	r25, 0x29	; 41
    422a:	0e 94 be 06 	call	0xd7c	; 0xd7c <UartClass::_tx_data_empty_irq()>
    422e:	ff 91       	pop	r31
    4230:	ef 91       	pop	r30
    4232:	bf 91       	pop	r27
    4234:	af 91       	pop	r26
    4236:	9f 91       	pop	r25
    4238:	8f 91       	pop	r24
    423a:	7f 91       	pop	r23
    423c:	6f 91       	pop	r22
    423e:	5f 91       	pop	r21
    4240:	4f 91       	pop	r20
    4242:	3f 91       	pop	r19
    4244:	2f 91       	pop	r18
    4246:	0f 90       	pop	r0
    4248:	0f be       	out	0x3f, r0	; 63
    424a:	0f 90       	pop	r0
    424c:	1f 90       	pop	r1
    424e:	18 95       	reti

00004250 <__vector_31>:
__vector_31():
    4250:	1f 92       	push	r1
    4252:	0f 92       	push	r0
    4254:	0f b6       	in	r0, 0x3f	; 63
    4256:	0f 92       	push	r0
    4258:	11 24       	eor	r1, r1
    425a:	2f 93       	push	r18
    425c:	8f 93       	push	r24
    425e:	9f 93       	push	r25
    4260:	ef 93       	push	r30
    4262:	ff 93       	push	r31
_rx_complete_irq():
    4264:	e0 91 5d 29 	lds	r30, 0x295D	; 0x80295d <Serial2+0xc>
    4268:	f0 91 5e 29 	lds	r31, 0x295E	; 0x80295e <Serial2+0xd>
    426c:	81 81       	ldd	r24, Z+1	; 0x01
    426e:	81 fd       	sbrc	r24, 1
    4270:	1b c0       	rjmp	.+54     	; 0x42a8 <__vector_31+0x58>
    4272:	90 81       	ld	r25, Z
    4274:	80 91 67 29 	lds	r24, 0x2967	; 0x802967 <Serial2+0x16>
    4278:	8f 5f       	subi	r24, 0xFF	; 255
    427a:	8f 73       	andi	r24, 0x3F	; 63
    427c:	20 91 68 29 	lds	r18, 0x2968	; 0x802968 <Serial2+0x17>
    4280:	82 17       	cp	r24, r18
    4282:	41 f0       	breq	.+16     	; 0x4294 <__vector_31+0x44>
    4284:	e0 91 67 29 	lds	r30, 0x2967	; 0x802967 <Serial2+0x16>
    4288:	f0 e0       	ldi	r31, 0x00	; 0
    428a:	ef 5a       	subi	r30, 0xAF	; 175
    428c:	f6 4d       	sbci	r31, 0xD6	; 214
    428e:	95 8f       	std	Z+29, r25	; 0x1d
    4290:	80 93 67 29 	sts	0x2967, r24	; 0x802967 <Serial2+0x16>
__vector_31():
    4294:	ff 91       	pop	r31
    4296:	ef 91       	pop	r30
    4298:	9f 91       	pop	r25
    429a:	8f 91       	pop	r24
    429c:	2f 91       	pop	r18
    429e:	0f 90       	pop	r0
    42a0:	0f be       	out	0x3f, r0	; 63
    42a2:	0f 90       	pop	r0
    42a4:	1f 90       	pop	r1
    42a6:	18 95       	reti
_rx_complete_irq():
    42a8:	80 81       	ld	r24, Z
    42aa:	f4 cf       	rjmp	.-24     	; 0x4294 <__vector_31+0x44>

000042ac <__vector_25>:
__vector_25():
    42ac:	1f 92       	push	r1
    42ae:	0f 92       	push	r0
    42b0:	0f b6       	in	r0, 0x3f	; 63
    42b2:	0f 92       	push	r0
    42b4:	11 24       	eor	r1, r1
    42b6:	8f 93       	push	r24
    42b8:	9f 93       	push	r25
    42ba:	af 93       	push	r26
    42bc:	bf 93       	push	r27
    42be:	80 91 39 28 	lds	r24, 0x2839	; 0x802839 <timer_millis>
    42c2:	90 91 3a 28 	lds	r25, 0x283A	; 0x80283a <timer_millis+0x1>
    42c6:	a0 91 3b 28 	lds	r26, 0x283B	; 0x80283b <timer_millis+0x2>
    42ca:	b0 91 3c 28 	lds	r27, 0x283C	; 0x80283c <timer_millis+0x3>
    42ce:	01 96       	adiw	r24, 0x01	; 1
    42d0:	a1 1d       	adc	r26, r1
    42d2:	b1 1d       	adc	r27, r1
    42d4:	80 93 39 28 	sts	0x2839, r24	; 0x802839 <timer_millis>
    42d8:	90 93 3a 28 	sts	0x283A, r25	; 0x80283a <timer_millis+0x1>
    42dc:	a0 93 3b 28 	sts	0x283B, r26	; 0x80283b <timer_millis+0x2>
    42e0:	b0 93 3c 28 	sts	0x283C, r27	; 0x80283c <timer_millis+0x3>
    42e4:	81 e0       	ldi	r24, 0x01	; 1
    42e6:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    42ea:	bf 91       	pop	r27
    42ec:	af 91       	pop	r26
    42ee:	9f 91       	pop	r25
    42f0:	8f 91       	pop	r24
    42f2:	0f 90       	pop	r0
    42f4:	0f be       	out	0x3f, r0	; 63
    42f6:	0f 90       	pop	r0
    42f8:	1f 90       	pop	r1
    42fa:	18 95       	reti

000042fc <__vector_7>:
__vector_7():
    42fc:	1f 92       	push	r1
    42fe:	0f 92       	push	r0
    4300:	0f b6       	in	r0, 0x3f	; 63
    4302:	0f 92       	push	r0
    4304:	11 24       	eor	r1, r1
    4306:	2f 93       	push	r18
    4308:	3f 93       	push	r19
    430a:	4f 93       	push	r20
    430c:	5f 93       	push	r21
    430e:	6f 93       	push	r22
    4310:	7f 93       	push	r23
    4312:	8f 93       	push	r24
    4314:	9f 93       	push	r25
    4316:	af 93       	push	r26
    4318:	bf 93       	push	r27
    431a:	ef 93       	push	r30
    431c:	ff 93       	push	r31
TICKER_UPDATE():
    431e:	8e e0       	ldi	r24, 0x0E	; 14
    4320:	9b e2       	ldi	r25, 0x2B	; 43
    4322:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
PID_Tick_Update():
    4326:	86 e3       	ldi	r24, 0x36	; 54
    4328:	9a e2       	ldi	r25, 0x2A	; 42
    432a:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
Rtd_Temp_Update():
    432e:	87 e8       	ldi	r24, 0x87	; 135
    4330:	9a e2       	ldi	r25, 0x2A	; 42
    4332:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
Rtd_Temp_Update_1():
    4336:	8c e6       	ldi	r24, 0x6C	; 108
    4338:	9a e2       	ldi	r25, 0x2A	; 42
    433a:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
TICKER_UPDATE():
    433e:	83 ef       	ldi	r24, 0xF3	; 243
    4340:	9a e2       	ldi	r25, 0x2A	; 42
    4342:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    4346:	88 ed       	ldi	r24, 0xD8	; 216
    4348:	9a e2       	ldi	r25, 0x2A	; 42
    434a:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    434e:	8d eb       	ldi	r24, 0xBD	; 189
    4350:	9a e2       	ldi	r25, 0x2A	; 42
    4352:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    4356:	82 ea       	ldi	r24, 0xA2	; 162
    4358:	9a e2       	ldi	r25, 0x2A	; 42
    435a:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
__vector_7():
    435e:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    4362:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    4366:	01 96       	adiw	r24, 0x01	; 1
    4368:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    436c:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
TIME_CAL():
    4370:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <COUNTDOWN_START>
    4374:	88 23       	and	r24, r24
    4376:	81 f1       	breq	.+96     	; 0x43d8 <__vector_7+0xdc>
    4378:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <__data_end>
    437c:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <__data_end+0x1>
    4380:	01 96       	adiw	r24, 0x01	; 1
    4382:	80 93 18 28 	sts	0x2818, r24	; 0x802818 <__data_end>
    4386:	90 93 19 28 	sts	0x2819, r25	; 0x802819 <__data_end+0x1>
    438a:	80 3b       	cpi	r24, 0xB0	; 176
    438c:	9e 40       	sbci	r25, 0x0E	; 14
    438e:	21 f5       	brne	.+72     	; 0x43d8 <__vector_7+0xdc>
    4390:	80 91 57 28 	lds	r24, 0x2857	; 0x802857 <actualRunMin>
    4394:	90 91 58 28 	lds	r25, 0x2858	; 0x802858 <actualRunMin+0x1>
    4398:	a0 91 59 28 	lds	r26, 0x2859	; 0x802859 <actualRunMin+0x2>
    439c:	b0 91 5a 28 	lds	r27, 0x285A	; 0x80285a <actualRunMin+0x3>
    43a0:	01 96       	adiw	r24, 0x01	; 1
    43a2:	a1 1d       	adc	r26, r1
    43a4:	b1 1d       	adc	r27, r1
    43a6:	80 93 57 28 	sts	0x2857, r24	; 0x802857 <actualRunMin>
    43aa:	90 93 58 28 	sts	0x2858, r25	; 0x802858 <actualRunMin+0x1>
    43ae:	a0 93 59 28 	sts	0x2859, r26	; 0x802859 <actualRunMin+0x2>
    43b2:	b0 93 5a 28 	sts	0x285A, r27	; 0x80285a <actualRunMin+0x3>
    43b6:	80 91 9b 28 	lds	r24, 0x289B	; 0x80289b <SET_MIN>
    43ba:	90 91 9c 28 	lds	r25, 0x289C	; 0x80289c <SET_MIN+0x1>
    43be:	01 97       	sbiw	r24, 0x01	; 1
    43c0:	80 93 9b 28 	sts	0x289B, r24	; 0x80289b <SET_MIN>
    43c4:	90 93 9c 28 	sts	0x289C, r25	; 0x80289c <SET_MIN+0x1>
    43c8:	10 92 18 28 	sts	0x2818, r1	; 0x802818 <__data_end>
    43cc:	10 92 19 28 	sts	0x2819, r1	; 0x802819 <__data_end+0x1>
    43d0:	89 2b       	or	r24, r25
    43d2:	11 f4       	brne	.+4      	; 0x43d8 <__vector_7+0xdc>
    43d4:	10 92 63 28 	sts	0x2863, r1	; 0x802863 <COUNTDOWN_START>
__vector_7():
    43d8:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    43dc:	88 23       	and	r24, r24
    43de:	79 f0       	breq	.+30     	; 0x43fe <__vector_7+0x102>
    43e0:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    43e4:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    43e8:	43 97       	sbiw	r24, 0x13	; 19
    43ea:	49 f4       	brne	.+18     	; 0x43fe <__vector_7+0x102>
    43ec:	80 91 44 28 	lds	r24, 0x2844	; 0x802844 <currentMillis>
    43f0:	90 91 45 28 	lds	r25, 0x2845	; 0x802845 <currentMillis+0x1>
    43f4:	01 96       	adiw	r24, 0x01	; 1
    43f6:	80 93 44 28 	sts	0x2844, r24	; 0x802844 <currentMillis>
    43fa:	90 93 45 28 	sts	0x2845, r25	; 0x802845 <currentMillis+0x1>
    43fe:	81 e0       	ldi	r24, 0x01	; 1
    4400:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    4404:	ff 91       	pop	r31
    4406:	ef 91       	pop	r30
    4408:	bf 91       	pop	r27
    440a:	af 91       	pop	r26
    440c:	9f 91       	pop	r25
    440e:	8f 91       	pop	r24
    4410:	7f 91       	pop	r23
    4412:	6f 91       	pop	r22
    4414:	5f 91       	pop	r21
    4416:	4f 91       	pop	r20
    4418:	3f 91       	pop	r19
    441a:	2f 91       	pop	r18
    441c:	0f 90       	pop	r0
    441e:	0f be       	out	0x3f, r0	; 63
    4420:	0f 90       	pop	r0
    4422:	1f 90       	pop	r1
    4424:	18 95       	reti

00004426 <global constructors keyed to 65535_0_Butn.cpp.o.4193>:
_GLOBAL__I_65535_0_Butn.cpp.o.4193():
    4426:	4f 92       	push	r4
    4428:	5f 92       	push	r5
    442a:	6f 92       	push	r6
    442c:	7f 92       	push	r7
    442e:	8f 92       	push	r8
    4430:	9f 92       	push	r9
    4432:	af 92       	push	r10
    4434:	bf 92       	push	r11
    4436:	cf 92       	push	r12
    4438:	df 92       	push	r13
    443a:	ef 92       	push	r14
    443c:	ff 92       	push	r15
    443e:	cf 93       	push	r28
    4440:	df 93       	push	r29
    4442:	10 92 53 29 	sts	0x2953, r1	; 0x802953 <Serial2+0x2>
    4446:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <Serial2+0x3>
    444a:	88 ee       	ldi	r24, 0xE8	; 232
    444c:	48 2e       	mov	r4, r24
    444e:	83 e0       	ldi	r24, 0x03	; 3
    4450:	58 2e       	mov	r5, r24
    4452:	61 2c       	mov	r6, r1
    4454:	71 2c       	mov	r7, r1
    4456:	40 92 55 29 	sts	0x2955, r4	; 0x802955 <Serial2+0x4>
    445a:	50 92 56 29 	sts	0x2956, r5	; 0x802956 <Serial2+0x5>
    445e:	60 92 57 29 	sts	0x2957, r6	; 0x802957 <Serial2+0x6>
    4462:	70 92 58 29 	sts	0x2958, r7	; 0x802958 <Serial2+0x7>
    4466:	80 e4       	ldi	r24, 0x40	; 64
    4468:	96 eb       	ldi	r25, 0xB6	; 182
    446a:	80 93 51 29 	sts	0x2951, r24	; 0x802951 <Serial2>
    446e:	90 93 52 29 	sts	0x2952, r25	; 0x802952 <Serial2+0x1>
    4472:	80 e4       	ldi	r24, 0x40	; 64
    4474:	98 e0       	ldi	r25, 0x08	; 8
    4476:	80 93 5d 29 	sts	0x295D, r24	; 0x80295d <Serial2+0xc>
    447a:	90 93 5e 29 	sts	0x295E, r25	; 0x80295e <Serial2+0xd>
    447e:	83 e2       	ldi	r24, 0x23	; 35
    4480:	80 93 5f 29 	sts	0x295F, r24	; 0x80295f <Serial2+0xe>
    4484:	82 e2       	ldi	r24, 0x22	; 34
    4486:	80 93 60 29 	sts	0x2960, r24	; 0x802960 <Serial2+0xf>
    448a:	10 92 61 29 	sts	0x2961, r1	; 0x802961 <Serial2+0x10>
    448e:	87 e2       	ldi	r24, 0x27	; 39
    4490:	80 93 62 29 	sts	0x2962, r24	; 0x802962 <Serial2+0x11>
    4494:	86 e2       	ldi	r24, 0x26	; 38
    4496:	80 93 63 29 	sts	0x2963, r24	; 0x802963 <Serial2+0x12>
    449a:	80 e1       	ldi	r24, 0x10	; 16
    449c:	80 93 64 29 	sts	0x2964, r24	; 0x802964 <Serial2+0x13>
    44a0:	10 92 65 29 	sts	0x2965, r1	; 0x802965 <Serial2+0x14>
    44a4:	10 92 66 29 	sts	0x2966, r1	; 0x802966 <Serial2+0x15>
    44a8:	10 92 67 29 	sts	0x2967, r1	; 0x802967 <Serial2+0x16>
    44ac:	10 92 68 29 	sts	0x2968, r1	; 0x802968 <Serial2+0x17>
    44b0:	10 92 69 29 	sts	0x2969, r1	; 0x802969 <Serial2+0x18>
    44b4:	10 92 6a 29 	sts	0x296A, r1	; 0x80296a <Serial2+0x19>
    44b8:	80 e2       	ldi	r24, 0x20	; 32
    44ba:	80 93 6b 29 	sts	0x296B, r24	; 0x80296b <Serial2+0x1a>
    44be:	10 92 6c 29 	sts	0x296C, r1	; 0x80296c <Serial2+0x1b>
    44c2:	10 92 6d 29 	sts	0x296D, r1	; 0x80296d <Serial2+0x1c>
    44c6:	82 e0       	ldi	r24, 0x02	; 2
    44c8:	90 e0       	ldi	r25, 0x00	; 0
    44ca:	80 93 e4 2b 	sts	0x2BE4, r24	; 0x802be4 <DISP+0x9>
    44ce:	90 93 e5 2b 	sts	0x2BE5, r25	; 0x802be5 <DISP+0xa>
    44d2:	80 e8       	ldi	r24, 0x80	; 128
    44d4:	9c e0       	ldi	r25, 0x0C	; 12
    44d6:	a0 e0       	ldi	r26, 0x00	; 0
    44d8:	b0 e0       	ldi	r27, 0x00	; 0
    44da:	80 93 dc 2b 	sts	0x2BDC, r24	; 0x802bdc <DISP+0x1>
    44de:	90 93 dd 2b 	sts	0x2BDD, r25	; 0x802bdd <DISP+0x2>
    44e2:	a0 93 de 2b 	sts	0x2BDE, r26	; 0x802bde <DISP+0x3>
    44e6:	b0 93 df 2b 	sts	0x2BDF, r27	; 0x802bdf <DISP+0x4>
    44ea:	10 92 e0 2b 	sts	0x2BE0, r1	; 0x802be0 <DISP+0x5>
    44ee:	10 92 e1 2b 	sts	0x2BE1, r1	; 0x802be1 <DISP+0x6>
    44f2:	10 92 e2 2b 	sts	0x2BE2, r1	; 0x802be2 <DISP+0x7>
    44f6:	10 92 e3 2b 	sts	0x2BE3, r1	; 0x802be3 <DISP+0x8>
    44fa:	85 e3       	ldi	r24, 0x35	; 53
    44fc:	90 e2       	ldi	r25, 0x20	; 32
    44fe:	80 93 ec 2b 	sts	0x2BEC, r24	; 0x802bec <DISP+0x11>
    4502:	90 93 ed 2b 	sts	0x2BED, r25	; 0x802bed <DISP+0x12>
    4506:	10 92 db 2b 	sts	0x2BDB, r1	; 0x802bdb <DISP>
    450a:	10 92 ee 2b 	sts	0x2BEE, r1	; 0x802bee <DISP+0x13>
    450e:	10 92 ef 2b 	sts	0x2BEF, r1	; 0x802bef <DISP+0x14>
    4512:	10 92 f0 2b 	sts	0x2BF0, r1	; 0x802bf0 <DISP+0x15>
    4516:	10 92 f1 2b 	sts	0x2BF1, r1	; 0x802bf1 <DISP+0x16>
    451a:	10 92 e6 2b 	sts	0x2BE6, r1	; 0x802be6 <DISP+0xb>
    451e:	10 92 e7 2b 	sts	0x2BE7, r1	; 0x802be7 <DISP+0xc>
    4522:	10 92 e8 2b 	sts	0x2BE8, r1	; 0x802be8 <DISP+0xd>
    4526:	10 92 e9 2b 	sts	0x2BE9, r1	; 0x802be9 <DISP+0xe>
    452a:	10 92 c9 2b 	sts	0x2BC9, r1	; 0x802bc9 <VersionDisplay+0x9>
    452e:	10 92 ca 2b 	sts	0x2BCA, r1	; 0x802bca <VersionDisplay+0xa>
    4532:	90 e4       	ldi	r25, 0x40	; 64
    4534:	89 2e       	mov	r8, r25
    4536:	92 e4       	ldi	r25, 0x42	; 66
    4538:	99 2e       	mov	r9, r25
    453a:	9f e0       	ldi	r25, 0x0F	; 15
    453c:	a9 2e       	mov	r10, r25
    453e:	b1 2c       	mov	r11, r1
    4540:	80 92 c1 2b 	sts	0x2BC1, r8	; 0x802bc1 <VersionDisplay+0x1>
    4544:	90 92 c2 2b 	sts	0x2BC2, r9	; 0x802bc2 <VersionDisplay+0x2>
    4548:	a0 92 c3 2b 	sts	0x2BC3, r10	; 0x802bc3 <VersionDisplay+0x3>
    454c:	b0 92 c4 2b 	sts	0x2BC4, r11	; 0x802bc4 <VersionDisplay+0x4>
    4550:	c1 2c       	mov	r12, r1
    4552:	d1 2c       	mov	r13, r1
    4554:	76 01       	movw	r14, r12
    4556:	c3 94       	inc	r12
    4558:	c0 92 c5 2b 	sts	0x2BC5, r12	; 0x802bc5 <VersionDisplay+0x5>
    455c:	d0 92 c6 2b 	sts	0x2BC6, r13	; 0x802bc6 <VersionDisplay+0x6>
    4560:	e0 92 c7 2b 	sts	0x2BC7, r14	; 0x802bc7 <VersionDisplay+0x7>
    4564:	f0 92 c8 2b 	sts	0x2BC8, r15	; 0x802bc8 <VersionDisplay+0x8>
    4568:	8a e7       	ldi	r24, 0x7A	; 122
    456a:	91 e0       	ldi	r25, 0x01	; 1
    456c:	80 93 d1 2b 	sts	0x2BD1, r24	; 0x802bd1 <VersionDisplay+0x11>
    4570:	90 93 d2 2b 	sts	0x2BD2, r25	; 0x802bd2 <VersionDisplay+0x12>
    4574:	10 92 c0 2b 	sts	0x2BC0, r1	; 0x802bc0 <VersionDisplay>
    4578:	10 92 d3 2b 	sts	0x2BD3, r1	; 0x802bd3 <VersionDisplay+0x13>
    457c:	10 92 d4 2b 	sts	0x2BD4, r1	; 0x802bd4 <VersionDisplay+0x14>
    4580:	10 92 d5 2b 	sts	0x2BD5, r1	; 0x802bd5 <VersionDisplay+0x15>
    4584:	10 92 d6 2b 	sts	0x2BD6, r1	; 0x802bd6 <VersionDisplay+0x16>
    4588:	10 92 cb 2b 	sts	0x2BCB, r1	; 0x802bcb <VersionDisplay+0xb>
    458c:	10 92 cc 2b 	sts	0x2BCC, r1	; 0x802bcc <VersionDisplay+0xc>
    4590:	10 92 cd 2b 	sts	0x2BCD, r1	; 0x802bcd <VersionDisplay+0xd>
    4594:	10 92 ce 2b 	sts	0x2BCE, r1	; 0x802bce <VersionDisplay+0xe>
    4598:	63 e2       	ldi	r22, 0x23	; 35
    459a:	70 e0       	ldi	r23, 0x00	; 0
    459c:	81 ea       	ldi	r24, 0xA1	; 161
    459e:	9b e2       	ldi	r25, 0x2B	; 43
    45a0:	0e 94 4a 08 	call	0x1094	; 0x1094 <OneButton::OneButton(int, int) [clone .constprop.13]>
    45a4:	65 e2       	ldi	r22, 0x25	; 37
    45a6:	70 e0       	ldi	r23, 0x00	; 0
    45a8:	82 e8       	ldi	r24, 0x82	; 130
    45aa:	9b e2       	ldi	r25, 0x2B	; 43
    45ac:	0e 94 4a 08 	call	0x1094	; 0x1094 <OneButton::OneButton(int, int) [clone .constprop.13]>
    45b0:	64 e2       	ldi	r22, 0x24	; 36
    45b2:	70 e0       	ldi	r23, 0x00	; 0
    45b4:	83 e6       	ldi	r24, 0x63	; 99
    45b6:	9b e2       	ldi	r25, 0x2B	; 43
    45b8:	0e 94 4a 08 	call	0x1094	; 0x1094 <OneButton::OneButton(int, int) [clone .constprop.13]>
    45bc:	62 e2       	ldi	r22, 0x22	; 34
    45be:	70 e0       	ldi	r23, 0x00	; 0
    45c0:	84 e4       	ldi	r24, 0x44	; 68
    45c2:	9b e2       	ldi	r25, 0x2B	; 43
    45c4:	0e 94 4a 08 	call	0x1094	; 0x1094 <OneButton::OneButton(int, int) [clone .constprop.13]>
    45c8:	c1 e0       	ldi	r28, 0x01	; 1
    45ca:	d0 e0       	ldi	r29, 0x00	; 0
    45cc:	c0 93 32 2b 	sts	0x2B32, r28	; 0x802b32 <toggle_ticker+0x9>
    45d0:	d0 93 33 2b 	sts	0x2B33, r29	; 0x802b33 <toggle_ticker+0xa>
    45d4:	40 92 2a 2b 	sts	0x2B2A, r4	; 0x802b2a <toggle_ticker+0x1>
    45d8:	50 92 2b 2b 	sts	0x2B2B, r5	; 0x802b2b <toggle_ticker+0x2>
    45dc:	60 92 2c 2b 	sts	0x2B2C, r6	; 0x802b2c <toggle_ticker+0x3>
    45e0:	70 92 2d 2b 	sts	0x2B2D, r7	; 0x802b2d <toggle_ticker+0x4>
    45e4:	10 92 2e 2b 	sts	0x2B2E, r1	; 0x802b2e <toggle_ticker+0x5>
    45e8:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <toggle_ticker+0x6>
    45ec:	10 92 30 2b 	sts	0x2B30, r1	; 0x802b30 <toggle_ticker+0x7>
    45f0:	10 92 31 2b 	sts	0x2B31, r1	; 0x802b31 <toggle_ticker+0x8>
    45f4:	8d e7       	ldi	r24, 0x7D	; 125
    45f6:	91 e0       	ldi	r25, 0x01	; 1
    45f8:	80 93 3a 2b 	sts	0x2B3A, r24	; 0x802b3a <toggle_ticker+0x11>
    45fc:	90 93 3b 2b 	sts	0x2B3B, r25	; 0x802b3b <toggle_ticker+0x12>
    4600:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <toggle_ticker>
    4604:	10 92 3c 2b 	sts	0x2B3C, r1	; 0x802b3c <toggle_ticker+0x13>
    4608:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <toggle_ticker+0x14>
    460c:	10 92 3e 2b 	sts	0x2B3E, r1	; 0x802b3e <toggle_ticker+0x15>
    4610:	10 92 3f 2b 	sts	0x2B3F, r1	; 0x802b3f <toggle_ticker+0x16>
    4614:	10 92 34 2b 	sts	0x2B34, r1	; 0x802b34 <toggle_ticker+0xb>
    4618:	10 92 35 2b 	sts	0x2B35, r1	; 0x802b35 <toggle_ticker+0xc>
    461c:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <toggle_ticker+0xd>
    4620:	10 92 37 2b 	sts	0x2B37, r1	; 0x802b37 <toggle_ticker+0xe>
    4624:	10 92 17 2b 	sts	0x2B17, r1	; 0x802b17 <BUZZ+0x9>
    4628:	10 92 18 2b 	sts	0x2B18, r1	; 0x802b18 <BUZZ+0xa>
    462c:	80 ea       	ldi	r24, 0xA0	; 160
    462e:	96 e8       	ldi	r25, 0x86	; 134
    4630:	a1 e0       	ldi	r26, 0x01	; 1
    4632:	b0 e0       	ldi	r27, 0x00	; 0
    4634:	80 93 0f 2b 	sts	0x2B0F, r24	; 0x802b0f <BUZZ+0x1>
    4638:	90 93 10 2b 	sts	0x2B10, r25	; 0x802b10 <BUZZ+0x2>
    463c:	a0 93 11 2b 	sts	0x2B11, r26	; 0x802b11 <BUZZ+0x3>
    4640:	b0 93 12 2b 	sts	0x2B12, r27	; 0x802b12 <BUZZ+0x4>
    4644:	c0 92 13 2b 	sts	0x2B13, r12	; 0x802b13 <BUZZ+0x5>
    4648:	d0 92 14 2b 	sts	0x2B14, r13	; 0x802b14 <BUZZ+0x6>
    464c:	e0 92 15 2b 	sts	0x2B15, r14	; 0x802b15 <BUZZ+0x7>
    4650:	f0 92 16 2b 	sts	0x2B16, r15	; 0x802b16 <BUZZ+0x8>
    4654:	8c e9       	ldi	r24, 0x9C	; 156
    4656:	9d e0       	ldi	r25, 0x0D	; 13
    4658:	80 93 1f 2b 	sts	0x2B1F, r24	; 0x802b1f <BUZZ+0x11>
    465c:	90 93 20 2b 	sts	0x2B20, r25	; 0x802b20 <BUZZ+0x12>
    4660:	10 92 0e 2b 	sts	0x2B0E, r1	; 0x802b0e <BUZZ>
    4664:	10 92 21 2b 	sts	0x2B21, r1	; 0x802b21 <BUZZ+0x13>
    4668:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <BUZZ+0x14>
    466c:	10 92 23 2b 	sts	0x2B23, r1	; 0x802b23 <BUZZ+0x15>
    4670:	10 92 24 2b 	sts	0x2B24, r1	; 0x802b24 <BUZZ+0x16>
    4674:	10 92 19 2b 	sts	0x2B19, r1	; 0x802b19 <BUZZ+0xb>
    4678:	10 92 1a 2b 	sts	0x2B1A, r1	; 0x802b1a <BUZZ+0xc>
    467c:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <BUZZ+0xd>
    4680:	10 92 1c 2b 	sts	0x2B1C, r1	; 0x802b1c <BUZZ+0xe>
    4684:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <BUZZ_TICK1+0x9>
    4688:	10 92 fd 2a 	sts	0x2AFD, r1	; 0x802afd <BUZZ_TICK1+0xa>
    468c:	80 e8       	ldi	r24, 0x80	; 128
    468e:	94 e8       	ldi	r25, 0x84	; 132
    4690:	ae e1       	ldi	r26, 0x1E	; 30
    4692:	b0 e0       	ldi	r27, 0x00	; 0
    4694:	80 93 f4 2a 	sts	0x2AF4, r24	; 0x802af4 <BUZZ_TICK1+0x1>
    4698:	90 93 f5 2a 	sts	0x2AF5, r25	; 0x802af5 <BUZZ_TICK1+0x2>
    469c:	a0 93 f6 2a 	sts	0x2AF6, r26	; 0x802af6 <BUZZ_TICK1+0x3>
    46a0:	b0 93 f7 2a 	sts	0x2AF7, r27	; 0x802af7 <BUZZ_TICK1+0x4>
    46a4:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <BUZZ_TICK1+0x5>
    46a8:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <BUZZ_TICK1+0x6>
    46ac:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <BUZZ_TICK1+0x7>
    46b0:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <BUZZ_TICK1+0x8>
    46b4:	28 ea       	ldi	r18, 0xA8	; 168
    46b6:	3d e0       	ldi	r19, 0x0D	; 13
    46b8:	20 93 04 2b 	sts	0x2B04, r18	; 0x802b04 <BUZZ_TICK1+0x11>
    46bc:	30 93 05 2b 	sts	0x2B05, r19	; 0x802b05 <BUZZ_TICK1+0x12>
    46c0:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <BUZZ_TICK1>
    46c4:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <BUZZ_TICK1+0x13>
    46c8:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <BUZZ_TICK1+0x14>
    46cc:	10 92 08 2b 	sts	0x2B08, r1	; 0x802b08 <BUZZ_TICK1+0x15>
    46d0:	10 92 09 2b 	sts	0x2B09, r1	; 0x802b09 <BUZZ_TICK1+0x16>
    46d4:	10 92 fe 2a 	sts	0x2AFE, r1	; 0x802afe <BUZZ_TICK1+0xb>
    46d8:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <BUZZ_TICK1+0xc>
    46dc:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <BUZZ_TICK1+0xd>
    46e0:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <BUZZ_TICK1+0xe>
    46e4:	10 92 e1 2a 	sts	0x2AE1, r1	; 0x802ae1 <BUZZ_TICK2+0x9>
    46e8:	10 92 e2 2a 	sts	0x2AE2, r1	; 0x802ae2 <BUZZ_TICK2+0xa>
    46ec:	80 92 d9 2a 	sts	0x2AD9, r8	; 0x802ad9 <BUZZ_TICK2+0x1>
    46f0:	90 92 da 2a 	sts	0x2ADA, r9	; 0x802ada <BUZZ_TICK2+0x2>
    46f4:	a0 92 db 2a 	sts	0x2ADB, r10	; 0x802adb <BUZZ_TICK2+0x3>
    46f8:	b0 92 dc 2a 	sts	0x2ADC, r11	; 0x802adc <BUZZ_TICK2+0x4>
    46fc:	c0 92 dd 2a 	sts	0x2ADD, r12	; 0x802add <BUZZ_TICK2+0x5>
    4700:	d0 92 de 2a 	sts	0x2ADE, r13	; 0x802ade <BUZZ_TICK2+0x6>
    4704:	e0 92 df 2a 	sts	0x2ADF, r14	; 0x802adf <BUZZ_TICK2+0x7>
    4708:	f0 92 e0 2a 	sts	0x2AE0, r15	; 0x802ae0 <BUZZ_TICK2+0x8>
    470c:	2e ea       	ldi	r18, 0xAE	; 174
    470e:	3d e0       	ldi	r19, 0x0D	; 13
    4710:	20 93 e9 2a 	sts	0x2AE9, r18	; 0x802ae9 <BUZZ_TICK2+0x11>
    4714:	30 93 ea 2a 	sts	0x2AEA, r19	; 0x802aea <BUZZ_TICK2+0x12>
    4718:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <BUZZ_TICK2>
    471c:	10 92 eb 2a 	sts	0x2AEB, r1	; 0x802aeb <BUZZ_TICK2+0x13>
    4720:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <BUZZ_TICK2+0x14>
    4724:	10 92 ed 2a 	sts	0x2AED, r1	; 0x802aed <BUZZ_TICK2+0x15>
    4728:	10 92 ee 2a 	sts	0x2AEE, r1	; 0x802aee <BUZZ_TICK2+0x16>
    472c:	10 92 e3 2a 	sts	0x2AE3, r1	; 0x802ae3 <BUZZ_TICK2+0xb>
    4730:	10 92 e4 2a 	sts	0x2AE4, r1	; 0x802ae4 <BUZZ_TICK2+0xc>
    4734:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <BUZZ_TICK2+0xd>
    4738:	10 92 e6 2a 	sts	0x2AE6, r1	; 0x802ae6 <BUZZ_TICK2+0xe>
    473c:	10 92 c6 2a 	sts	0x2AC6, r1	; 0x802ac6 <Blink_LED_ON+0x9>
    4740:	10 92 c7 2a 	sts	0x2AC7, r1	; 0x802ac7 <Blink_LED_ON+0xa>
    4744:	40 ee       	ldi	r20, 0xE0	; 224
    4746:	53 e9       	ldi	r21, 0x93	; 147
    4748:	64 e0       	ldi	r22, 0x04	; 4
    474a:	70 e0       	ldi	r23, 0x00	; 0
    474c:	40 93 be 2a 	sts	0x2ABE, r20	; 0x802abe <Blink_LED_ON+0x1>
    4750:	50 93 bf 2a 	sts	0x2ABF, r21	; 0x802abf <Blink_LED_ON+0x2>
    4754:	60 93 c0 2a 	sts	0x2AC0, r22	; 0x802ac0 <Blink_LED_ON+0x3>
    4758:	70 93 c1 2a 	sts	0x2AC1, r23	; 0x802ac1 <Blink_LED_ON+0x4>
    475c:	10 92 c2 2a 	sts	0x2AC2, r1	; 0x802ac2 <Blink_LED_ON+0x5>
    4760:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <Blink_LED_ON+0x6>
    4764:	10 92 c4 2a 	sts	0x2AC4, r1	; 0x802ac4 <Blink_LED_ON+0x7>
    4768:	10 92 c5 2a 	sts	0x2AC5, r1	; 0x802ac5 <Blink_LED_ON+0x8>
    476c:	2e ec       	ldi	r18, 0xCE	; 206
    476e:	3d e0       	ldi	r19, 0x0D	; 13
    4770:	20 93 ce 2a 	sts	0x2ACE, r18	; 0x802ace <Blink_LED_ON+0x11>
    4774:	30 93 cf 2a 	sts	0x2ACF, r19	; 0x802acf <Blink_LED_ON+0x12>
    4778:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <Blink_LED_ON>
    477c:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <Blink_LED_ON+0x13>
    4780:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <Blink_LED_ON+0x14>
    4784:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <Blink_LED_ON+0x15>
    4788:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <Blink_LED_ON+0x16>
    478c:	10 92 c8 2a 	sts	0x2AC8, r1	; 0x802ac8 <Blink_LED_ON+0xb>
    4790:	10 92 c9 2a 	sts	0x2AC9, r1	; 0x802ac9 <Blink_LED_ON+0xc>
    4794:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Blink_LED_ON+0xd>
    4798:	10 92 cb 2a 	sts	0x2ACB, r1	; 0x802acb <Blink_LED_ON+0xe>
    479c:	10 92 ab 2a 	sts	0x2AAB, r1	; 0x802aab <Blink_LED_OFF+0x9>
    47a0:	10 92 ac 2a 	sts	0x2AAC, r1	; 0x802aac <Blink_LED_OFF+0xa>
    47a4:	40 ec       	ldi	r20, 0xC0	; 192
    47a6:	57 e2       	ldi	r21, 0x27	; 39
    47a8:	69 e0       	ldi	r22, 0x09	; 9
    47aa:	70 e0       	ldi	r23, 0x00	; 0
    47ac:	40 93 a3 2a 	sts	0x2AA3, r20	; 0x802aa3 <Blink_LED_OFF+0x1>
    47b0:	50 93 a4 2a 	sts	0x2AA4, r21	; 0x802aa4 <Blink_LED_OFF+0x2>
    47b4:	60 93 a5 2a 	sts	0x2AA5, r22	; 0x802aa5 <Blink_LED_OFF+0x3>
    47b8:	70 93 a6 2a 	sts	0x2AA6, r23	; 0x802aa6 <Blink_LED_OFF+0x4>
    47bc:	10 92 a7 2a 	sts	0x2AA7, r1	; 0x802aa7 <Blink_LED_OFF+0x5>
    47c0:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <Blink_LED_OFF+0x6>
    47c4:	10 92 a9 2a 	sts	0x2AA9, r1	; 0x802aa9 <Blink_LED_OFF+0x7>
    47c8:	10 92 aa 2a 	sts	0x2AAA, r1	; 0x802aaa <Blink_LED_OFF+0x8>
    47cc:	28 ec       	ldi	r18, 0xC8	; 200
    47ce:	3d e0       	ldi	r19, 0x0D	; 13
    47d0:	20 93 b3 2a 	sts	0x2AB3, r18	; 0x802ab3 <Blink_LED_OFF+0x11>
    47d4:	30 93 b4 2a 	sts	0x2AB4, r19	; 0x802ab4 <Blink_LED_OFF+0x12>
    47d8:	10 92 a2 2a 	sts	0x2AA2, r1	; 0x802aa2 <Blink_LED_OFF>
    47dc:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <Blink_LED_OFF+0x13>
    47e0:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <Blink_LED_OFF+0x14>
    47e4:	10 92 b7 2a 	sts	0x2AB7, r1	; 0x802ab7 <Blink_LED_OFF+0x15>
    47e8:	10 92 b8 2a 	sts	0x2AB8, r1	; 0x802ab8 <Blink_LED_OFF+0x16>
    47ec:	10 92 ad 2a 	sts	0x2AAD, r1	; 0x802aad <Blink_LED_OFF+0xb>
    47f0:	10 92 ae 2a 	sts	0x2AAE, r1	; 0x802aae <Blink_LED_OFF+0xc>
    47f4:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <Blink_LED_OFF+0xd>
    47f8:	10 92 b0 2a 	sts	0x2AB0, r1	; 0x802ab0 <Blink_LED_OFF+0xe>
    47fc:	10 92 90 2a 	sts	0x2A90, r1	; 0x802a90 <TEMP_UPDATE+0x9>
    4800:	10 92 91 2a 	sts	0x2A91, r1	; 0x802a91 <TEMP_UPDATE+0xa>
    4804:	48 e4       	ldi	r20, 0x48	; 72
    4806:	58 ee       	ldi	r21, 0xE8	; 232
    4808:	61 e0       	ldi	r22, 0x01	; 1
    480a:	70 e0       	ldi	r23, 0x00	; 0
    480c:	40 93 88 2a 	sts	0x2A88, r20	; 0x802a88 <TEMP_UPDATE+0x1>
    4810:	50 93 89 2a 	sts	0x2A89, r21	; 0x802a89 <TEMP_UPDATE+0x2>
    4814:	60 93 8a 2a 	sts	0x2A8A, r22	; 0x802a8a <TEMP_UPDATE+0x3>
    4818:	70 93 8b 2a 	sts	0x2A8B, r23	; 0x802a8b <TEMP_UPDATE+0x4>
    481c:	10 92 8c 2a 	sts	0x2A8C, r1	; 0x802a8c <TEMP_UPDATE+0x5>
    4820:	10 92 8d 2a 	sts	0x2A8D, r1	; 0x802a8d <TEMP_UPDATE+0x6>
    4824:	10 92 8e 2a 	sts	0x2A8E, r1	; 0x802a8e <TEMP_UPDATE+0x7>
    4828:	10 92 8f 2a 	sts	0x2A8F, r1	; 0x802a8f <TEMP_UPDATE+0x8>
    482c:	27 ed       	ldi	r18, 0xD7	; 215
    482e:	3d e0       	ldi	r19, 0x0D	; 13
    4830:	20 93 98 2a 	sts	0x2A98, r18	; 0x802a98 <TEMP_UPDATE+0x11>
    4834:	30 93 99 2a 	sts	0x2A99, r19	; 0x802a99 <TEMP_UPDATE+0x12>
    4838:	10 92 87 2a 	sts	0x2A87, r1	; 0x802a87 <TEMP_UPDATE>
    483c:	10 92 9a 2a 	sts	0x2A9A, r1	; 0x802a9a <TEMP_UPDATE+0x13>
    4840:	10 92 9b 2a 	sts	0x2A9B, r1	; 0x802a9b <TEMP_UPDATE+0x14>
    4844:	10 92 9c 2a 	sts	0x2A9C, r1	; 0x802a9c <TEMP_UPDATE+0x15>
    4848:	10 92 9d 2a 	sts	0x2A9D, r1	; 0x802a9d <TEMP_UPDATE+0x16>
    484c:	10 92 92 2a 	sts	0x2A92, r1	; 0x802a92 <TEMP_UPDATE+0xb>
    4850:	10 92 93 2a 	sts	0x2A93, r1	; 0x802a93 <TEMP_UPDATE+0xc>
    4854:	10 92 94 2a 	sts	0x2A94, r1	; 0x802a94 <TEMP_UPDATE+0xd>
    4858:	10 92 95 2a 	sts	0x2A95, r1	; 0x802a95 <TEMP_UPDATE+0xe>
    485c:	10 92 75 2a 	sts	0x2A75, r1	; 0x802a75 <TEMP_UPDATE_1+0x9>
    4860:	10 92 76 2a 	sts	0x2A76, r1	; 0x802a76 <TEMP_UPDATE_1+0xa>
    4864:	48 eb       	ldi	r20, 0xB8	; 184
    4866:	5f ef       	ldi	r21, 0xFF	; 255
    4868:	61 e0       	ldi	r22, 0x01	; 1
    486a:	70 e0       	ldi	r23, 0x00	; 0
    486c:	40 93 6d 2a 	sts	0x2A6D, r20	; 0x802a6d <TEMP_UPDATE_1+0x1>
    4870:	50 93 6e 2a 	sts	0x2A6E, r21	; 0x802a6e <TEMP_UPDATE_1+0x2>
    4874:	60 93 6f 2a 	sts	0x2A6F, r22	; 0x802a6f <TEMP_UPDATE_1+0x3>
    4878:	70 93 70 2a 	sts	0x2A70, r23	; 0x802a70 <TEMP_UPDATE_1+0x4>
    487c:	10 92 71 2a 	sts	0x2A71, r1	; 0x802a71 <TEMP_UPDATE_1+0x5>
    4880:	10 92 72 2a 	sts	0x2A72, r1	; 0x802a72 <TEMP_UPDATE_1+0x6>
    4884:	10 92 73 2a 	sts	0x2A73, r1	; 0x802a73 <TEMP_UPDATE_1+0x7>
    4888:	10 92 74 2a 	sts	0x2A74, r1	; 0x802a74 <TEMP_UPDATE_1+0x8>
    488c:	20 ea       	ldi	r18, 0xA0	; 160
    488e:	3e e0       	ldi	r19, 0x0E	; 14
    4890:	20 93 7d 2a 	sts	0x2A7D, r18	; 0x802a7d <TEMP_UPDATE_1+0x11>
    4894:	30 93 7e 2a 	sts	0x2A7E, r19	; 0x802a7e <TEMP_UPDATE_1+0x12>
    4898:	10 92 6c 2a 	sts	0x2A6C, r1	; 0x802a6c <TEMP_UPDATE_1>
    489c:	10 92 7f 2a 	sts	0x2A7F, r1	; 0x802a7f <TEMP_UPDATE_1+0x13>
    48a0:	10 92 80 2a 	sts	0x2A80, r1	; 0x802a80 <TEMP_UPDATE_1+0x14>
    48a4:	10 92 81 2a 	sts	0x2A81, r1	; 0x802a81 <TEMP_UPDATE_1+0x15>
    48a8:	10 92 82 2a 	sts	0x2A82, r1	; 0x802a82 <TEMP_UPDATE_1+0x16>
    48ac:	10 92 77 2a 	sts	0x2A77, r1	; 0x802a77 <TEMP_UPDATE_1+0xb>
    48b0:	10 92 78 2a 	sts	0x2A78, r1	; 0x802a78 <TEMP_UPDATE_1+0xc>
    48b4:	10 92 79 2a 	sts	0x2A79, r1	; 0x802a79 <TEMP_UPDATE_1+0xd>
    48b8:	10 92 7a 2a 	sts	0x2A7A, r1	; 0x802a7a <TEMP_UPDATE_1+0xe>
    48bc:	10 92 5a 2a 	sts	0x2A5A, r1	; 0x802a5a <Alter_Disp+0x9>
    48c0:	10 92 5b 2a 	sts	0x2A5B, r1	; 0x802a5b <Alter_Disp+0xa>
    48c4:	80 93 52 2a 	sts	0x2A52, r24	; 0x802a52 <Alter_Disp+0x1>
    48c8:	90 93 53 2a 	sts	0x2A53, r25	; 0x802a53 <Alter_Disp+0x2>
    48cc:	a0 93 54 2a 	sts	0x2A54, r26	; 0x802a54 <Alter_Disp+0x3>
    48d0:	b0 93 55 2a 	sts	0x2A55, r27	; 0x802a55 <Alter_Disp+0x4>
    48d4:	10 92 56 2a 	sts	0x2A56, r1	; 0x802a56 <Alter_Disp+0x5>
    48d8:	10 92 57 2a 	sts	0x2A57, r1	; 0x802a57 <Alter_Disp+0x6>
    48dc:	10 92 58 2a 	sts	0x2A58, r1	; 0x802a58 <Alter_Disp+0x7>
    48e0:	10 92 59 2a 	sts	0x2A59, r1	; 0x802a59 <Alter_Disp+0x8>
    48e4:	88 e8       	ldi	r24, 0x88	; 136
    48e6:	91 e0       	ldi	r25, 0x01	; 1
    48e8:	80 93 62 2a 	sts	0x2A62, r24	; 0x802a62 <Alter_Disp+0x11>
    48ec:	90 93 63 2a 	sts	0x2A63, r25	; 0x802a63 <Alter_Disp+0x12>
    48f0:	10 92 51 2a 	sts	0x2A51, r1	; 0x802a51 <Alter_Disp>
    48f4:	10 92 64 2a 	sts	0x2A64, r1	; 0x802a64 <Alter_Disp+0x13>
    48f8:	10 92 65 2a 	sts	0x2A65, r1	; 0x802a65 <Alter_Disp+0x14>
    48fc:	10 92 66 2a 	sts	0x2A66, r1	; 0x802a66 <Alter_Disp+0x15>
    4900:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <Alter_Disp+0x16>
    4904:	10 92 5c 2a 	sts	0x2A5C, r1	; 0x802a5c <Alter_Disp+0xb>
    4908:	10 92 5d 2a 	sts	0x2A5D, r1	; 0x802a5d <Alter_Disp+0xc>
    490c:	10 92 5e 2a 	sts	0x2A5E, r1	; 0x802a5e <Alter_Disp+0xd>
    4910:	10 92 5f 2a 	sts	0x2A5F, r1	; 0x802a5f <Alter_Disp+0xe>
    4914:	10 92 3f 2a 	sts	0x2A3F, r1	; 0x802a3f <PID_EXE+0x9>
    4918:	10 92 40 2a 	sts	0x2A40, r1	; 0x802a40 <PID_EXE+0xa>
    491c:	80 e8       	ldi	r24, 0x80	; 128
    491e:	9a e1       	ldi	r25, 0x1A	; 26
    4920:	a6 e0       	ldi	r26, 0x06	; 6
    4922:	b0 e0       	ldi	r27, 0x00	; 0
    4924:	80 93 37 2a 	sts	0x2A37, r24	; 0x802a37 <PID_EXE+0x1>
    4928:	90 93 38 2a 	sts	0x2A38, r25	; 0x802a38 <PID_EXE+0x2>
    492c:	a0 93 39 2a 	sts	0x2A39, r26	; 0x802a39 <PID_EXE+0x3>
    4930:	b0 93 3a 2a 	sts	0x2A3A, r27	; 0x802a3a <PID_EXE+0x4>
    4934:	10 92 3b 2a 	sts	0x2A3B, r1	; 0x802a3b <PID_EXE+0x5>
    4938:	10 92 3c 2a 	sts	0x2A3C, r1	; 0x802a3c <PID_EXE+0x6>
    493c:	10 92 3d 2a 	sts	0x2A3D, r1	; 0x802a3d <PID_EXE+0x7>
    4940:	10 92 3e 2a 	sts	0x2A3E, r1	; 0x802a3e <PID_EXE+0x8>
    4944:	88 ee       	ldi	r24, 0xE8	; 232
    4946:	9e e0       	ldi	r25, 0x0E	; 14
    4948:	80 93 47 2a 	sts	0x2A47, r24	; 0x802a47 <PID_EXE+0x11>
    494c:	90 93 48 2a 	sts	0x2A48, r25	; 0x802a48 <PID_EXE+0x12>
    4950:	10 92 36 2a 	sts	0x2A36, r1	; 0x802a36 <PID_EXE>
    4954:	10 92 49 2a 	sts	0x2A49, r1	; 0x802a49 <PID_EXE+0x13>
    4958:	10 92 4a 2a 	sts	0x2A4A, r1	; 0x802a4a <PID_EXE+0x14>
    495c:	10 92 4b 2a 	sts	0x2A4B, r1	; 0x802a4b <PID_EXE+0x15>
    4960:	10 92 4c 2a 	sts	0x2A4C, r1	; 0x802a4c <PID_EXE+0x16>
    4964:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <PID_EXE+0xb>
    4968:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <PID_EXE+0xc>
    496c:	10 92 43 2a 	sts	0x2A43, r1	; 0x802a43 <PID_EXE+0xd>
    4970:	10 92 44 2a 	sts	0x2A44, r1	; 0x802a44 <PID_EXE+0xe>
    4974:	c0 90 13 28 	lds	r12, 0x2813	; 0x802813 <Kd>
    4978:	d0 90 14 28 	lds	r13, 0x2814	; 0x802814 <Kd+0x1>
    497c:	e0 90 15 28 	lds	r14, 0x2815	; 0x802815 <Kd+0x2>
    4980:	f0 90 16 28 	lds	r15, 0x2816	; 0x802816 <Kd+0x3>
    4984:	80 90 0f 28 	lds	r8, 0x280F	; 0x80280f <Ki>
    4988:	90 90 10 28 	lds	r9, 0x2810	; 0x802810 <Ki+0x1>
    498c:	a0 90 11 28 	lds	r10, 0x2811	; 0x802811 <Ki+0x2>
    4990:	b0 90 12 28 	lds	r11, 0x2812	; 0x802812 <Ki+0x3>
    4994:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    4998:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    499c:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    49a0:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    49a4:	82 ef       	ldi	r24, 0xF2	; 242
    49a6:	99 e2       	ldi	r25, 0x29	; 41
    49a8:	80 93 18 2a 	sts	0x2A18, r24	; 0x802a18 <myPID+0x1e>
    49ac:	90 93 19 2a 	sts	0x2A19, r25	; 0x802a19 <myPID+0x1f>
    49b0:	86 ef       	ldi	r24, 0xF6	; 246
    49b2:	99 e2       	ldi	r25, 0x29	; 41
    49b4:	80 93 16 2a 	sts	0x2A16, r24	; 0x802a16 <myPID+0x1c>
    49b8:	90 93 17 2a 	sts	0x2A17, r25	; 0x802a17 <myPID+0x1d>
    49bc:	8e ee       	ldi	r24, 0xEE	; 238
    49be:	99 e2       	ldi	r25, 0x29	; 41
    49c0:	80 93 1a 2a 	sts	0x2A1A, r24	; 0x802a1a <myPID+0x20>
    49c4:	90 93 1b 2a 	sts	0x2A1B, r25	; 0x802a1b <myPID+0x21>
    49c8:	10 92 34 2a 	sts	0x2A34, r1	; 0x802a34 <myPID+0x3a>
    49cc:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <myPID+0x32>
    49d0:	10 92 2d 2a 	sts	0x2A2D, r1	; 0x802a2d <myPID+0x33>
    49d4:	10 92 2e 2a 	sts	0x2A2E, r1	; 0x802a2e <myPID+0x34>
    49d8:	10 92 2f 2a 	sts	0x2A2F, r1	; 0x802a2f <myPID+0x35>
    49dc:	80 e0       	ldi	r24, 0x00	; 0
    49de:	90 e0       	ldi	r25, 0x00	; 0
    49e0:	af e7       	ldi	r26, 0x7F	; 127
    49e2:	b3 e4       	ldi	r27, 0x43	; 67
    49e4:	80 93 30 2a 	sts	0x2A30, r24	; 0x802a30 <myPID+0x36>
    49e8:	90 93 31 2a 	sts	0x2A31, r25	; 0x802a31 <myPID+0x37>
    49ec:	a0 93 32 2a 	sts	0x2A32, r26	; 0x802a32 <myPID+0x38>
    49f0:	b0 93 33 2a 	sts	0x2A33, r27	; 0x802a33 <myPID+0x39>
    49f4:	84 e6       	ldi	r24, 0x64	; 100
    49f6:	90 e0       	ldi	r25, 0x00	; 0
    49f8:	a0 e0       	ldi	r26, 0x00	; 0
    49fa:	b0 e0       	ldi	r27, 0x00	; 0
    49fc:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <myPID+0x2e>
    4a00:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <myPID+0x2f>
    4a04:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <myPID+0x30>
    4a08:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <myPID+0x31>
    4a0c:	10 92 12 2a 	sts	0x2A12, r1	; 0x802a12 <myPID+0x18>
    4a10:	10 92 13 2a 	sts	0x2A13, r1	; 0x802a13 <myPID+0x19>
    4a14:	20 e0       	ldi	r18, 0x00	; 0
    4a16:	30 e0       	ldi	r19, 0x00	; 0
    4a18:	a9 01       	movw	r20, r18
    4a1a:	c3 01       	movw	r24, r6
    4a1c:	b2 01       	movw	r22, r4
    4a1e:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4a22:	87 fd       	sbrc	r24, 7
    4a24:	59 c0       	rjmp	.+178    	; 0x4ad8 <global constructors keyed to 65535_0_Butn.cpp.o.4193+0x6b2>
    4a26:	20 e0       	ldi	r18, 0x00	; 0
    4a28:	30 e0       	ldi	r19, 0x00	; 0
    4a2a:	a9 01       	movw	r20, r18
    4a2c:	c5 01       	movw	r24, r10
    4a2e:	b4 01       	movw	r22, r8
    4a30:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4a34:	87 fd       	sbrc	r24, 7
    4a36:	50 c0       	rjmp	.+160    	; 0x4ad8 <global constructors keyed to 65535_0_Butn.cpp.o.4193+0x6b2>
    4a38:	20 e0       	ldi	r18, 0x00	; 0
    4a3a:	30 e0       	ldi	r19, 0x00	; 0
    4a3c:	a9 01       	movw	r20, r18
    4a3e:	c7 01       	movw	r24, r14
    4a40:	b6 01       	movw	r22, r12
    4a42:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4a46:	87 fd       	sbrc	r24, 7
    4a48:	47 c0       	rjmp	.+142    	; 0x4ad8 <global constructors keyed to 65535_0_Butn.cpp.o.4193+0x6b2>
    4a4a:	c0 93 14 2a 	sts	0x2A14, r28	; 0x802a14 <myPID+0x1a>
    4a4e:	d0 93 15 2a 	sts	0x2A15, r29	; 0x802a15 <myPID+0x1b>
    4a52:	81 e0       	ldi	r24, 0x01	; 1
    4a54:	80 93 35 2a 	sts	0x2A35, r24	; 0x802a35 <myPID+0x3b>
    4a58:	40 92 fa 29 	sts	0x29FA, r4	; 0x8029fa <myPID>
    4a5c:	50 92 fb 29 	sts	0x29FB, r5	; 0x8029fb <myPID+0x1>
    4a60:	60 92 fc 29 	sts	0x29FC, r6	; 0x8029fc <myPID+0x2>
    4a64:	70 92 fd 29 	sts	0x29FD, r7	; 0x8029fd <myPID+0x3>
    4a68:	80 92 fe 29 	sts	0x29FE, r8	; 0x8029fe <myPID+0x4>
    4a6c:	90 92 ff 29 	sts	0x29FF, r9	; 0x8029ff <myPID+0x5>
    4a70:	a0 92 00 2a 	sts	0x2A00, r10	; 0x802a00 <myPID+0x6>
    4a74:	b0 92 01 2a 	sts	0x2A01, r11	; 0x802a01 <myPID+0x7>
    4a78:	c0 92 02 2a 	sts	0x2A02, r12	; 0x802a02 <myPID+0x8>
    4a7c:	d0 92 03 2a 	sts	0x2A03, r13	; 0x802a03 <myPID+0x9>
    4a80:	e0 92 04 2a 	sts	0x2A04, r14	; 0x802a04 <myPID+0xa>
    4a84:	f0 92 05 2a 	sts	0x2A05, r15	; 0x802a05 <myPID+0xb>
    4a88:	40 92 06 2a 	sts	0x2A06, r4	; 0x802a06 <myPID+0xc>
    4a8c:	50 92 07 2a 	sts	0x2A07, r5	; 0x802a07 <myPID+0xd>
    4a90:	60 92 08 2a 	sts	0x2A08, r6	; 0x802a08 <myPID+0xe>
    4a94:	70 92 09 2a 	sts	0x2A09, r7	; 0x802a09 <myPID+0xf>
    4a98:	2d ec       	ldi	r18, 0xCD	; 205
    4a9a:	3c ec       	ldi	r19, 0xCC	; 204
    4a9c:	4c ec       	ldi	r20, 0xCC	; 204
    4a9e:	5d e3       	ldi	r21, 0x3D	; 61
    4aa0:	c5 01       	movw	r24, r10
    4aa2:	b4 01       	movw	r22, r8
    4aa4:	0e 94 7c 39 	call	0x72f8	; 0x72f8 <__mulsf3>
    4aa8:	60 93 0a 2a 	sts	0x2A0A, r22	; 0x802a0a <myPID+0x10>
    4aac:	70 93 0b 2a 	sts	0x2A0B, r23	; 0x802a0b <myPID+0x11>
    4ab0:	80 93 0c 2a 	sts	0x2A0C, r24	; 0x802a0c <myPID+0x12>
    4ab4:	90 93 0d 2a 	sts	0x2A0D, r25	; 0x802a0d <myPID+0x13>
    4ab8:	2d ec       	ldi	r18, 0xCD	; 205
    4aba:	3c ec       	ldi	r19, 0xCC	; 204
    4abc:	4c ec       	ldi	r20, 0xCC	; 204
    4abe:	5d e3       	ldi	r21, 0x3D	; 61
    4ac0:	c7 01       	movw	r24, r14
    4ac2:	b6 01       	movw	r22, r12
    4ac4:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    4ac8:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x14>
    4acc:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x15>
    4ad0:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x16>
    4ad4:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x17>
    4ad8:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    4adc:	c0 90 28 2a 	lds	r12, 0x2A28	; 0x802a28 <myPID+0x2e>
    4ae0:	d0 90 29 2a 	lds	r13, 0x2A29	; 0x802a29 <myPID+0x2f>
    4ae4:	e0 90 2a 2a 	lds	r14, 0x2A2A	; 0x802a2a <myPID+0x30>
    4ae8:	f0 90 2b 2a 	lds	r15, 0x2A2B	; 0x802a2b <myPID+0x31>
    4aec:	6c 19       	sub	r22, r12
    4aee:	7d 09       	sbc	r23, r13
    4af0:	8e 09       	sbc	r24, r14
    4af2:	9f 09       	sbc	r25, r15
    4af4:	60 93 1c 2a 	sts	0x2A1C, r22	; 0x802a1c <myPID+0x22>
    4af8:	70 93 1d 2a 	sts	0x2A1D, r23	; 0x802a1d <myPID+0x23>
    4afc:	80 93 1e 2a 	sts	0x2A1E, r24	; 0x802a1e <myPID+0x24>
    4b00:	90 93 1f 2a 	sts	0x2A1F, r25	; 0x802a1f <myPID+0x25>
    4b04:	df 91       	pop	r29
    4b06:	cf 91       	pop	r28
    4b08:	ff 90       	pop	r15
    4b0a:	ef 90       	pop	r14
    4b0c:	df 90       	pop	r13
    4b0e:	cf 90       	pop	r12
    4b10:	bf 90       	pop	r11
    4b12:	af 90       	pop	r10
    4b14:	9f 90       	pop	r9
    4b16:	8f 90       	pop	r8
    4b18:	7f 90       	pop	r7
    4b1a:	6f 90       	pop	r6
    4b1c:	5f 90       	pop	r5
    4b1e:	4f 90       	pop	r4
    4b20:	08 95       	ret

00004b22 <main>:
main():
    4b22:	cf 93       	push	r28
    4b24:	df 93       	push	r29
    4b26:	cd b7       	in	r28, 0x3d	; 61
    4b28:	de b7       	in	r29, 0x3e	; 62
    4b2a:	26 97       	sbiw	r28, 0x06	; 6
    4b2c:	cd bf       	out	0x3d, r28	; 61
    4b2e:	de bf       	out	0x3e, r29	; 62
init():
    4b30:	88 ed       	ldi	r24, 0xD8	; 216
    4b32:	90 e0       	ldi	r25, 0x00	; 0
    4b34:	84 bf       	out	0x34, r24	; 52
    4b36:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    4b3a:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4b3e:	86 60       	ori	r24, 0x06	; 6
    4b40:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4b44:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    4b48:	81 60       	ori	r24, 0x01	; 1
    4b4a:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    4b4e:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4b52:	8f 7c       	andi	r24, 0xCF	; 207
    4b54:	80 65       	ori	r24, 0x50	; 80
    4b56:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    4b5a:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    4b5e:	82 e0       	ldi	r24, 0x02	; 2
    4b60:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    4b64:	81 e0       	ldi	r24, 0x01	; 1
    4b66:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    4b6a:	8e ef       	ldi	r24, 0xFE	; 254
    4b6c:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4b70:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4b74:	80 e8       	ldi	r24, 0x80	; 128
    4b76:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    4b7a:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    4b7e:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    4b82:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    4b86:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    4b8a:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    4b8e:	8b e0       	ldi	r24, 0x0B	; 11
    4b90:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4b94:	87 e0       	ldi	r24, 0x07	; 7
    4b96:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    4b9a:	e0 e8       	ldi	r30, 0x80	; 128
    4b9c:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    4b9e:	37 e0       	ldi	r19, 0x07	; 7
    4ba0:	2e ef       	ldi	r18, 0xFE	; 254
    4ba2:	90 e8       	ldi	r25, 0x80	; 128
    4ba4:	85 e0       	ldi	r24, 0x05	; 5
    4ba6:	31 83       	std	Z+1, r19	; 0x01
    4ba8:	24 87       	std	Z+12, r18	; 0x0c
    4baa:	95 87       	std	Z+13, r25	; 0x0d
    4bac:	80 83       	st	Z, r24
    4bae:	70 96       	adiw	r30, 0x10	; 16
    4bb0:	e0 3c       	cpi	r30, 0xC0	; 192
    4bb2:	4a e0       	ldi	r20, 0x0A	; 10
    4bb4:	f4 07       	cpc	r31, r20
    4bb6:	b9 f7       	brne	.-18     	; 0x4ba6 <main+0x84>
init():
    4bb8:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    4bbc:	8f e7       	ldi	r24, 0x7F	; 127
    4bbe:	9e e3       	ldi	r25, 0x3E	; 62
    4bc0:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    4bc4:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    4bc8:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4bcc:	81 60       	ori	r24, 0x01	; 1
    4bce:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4bd2:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4bd6:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4bda:	81 60       	ori	r24, 0x01	; 1
    4bdc:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4be0:	78 94       	sei
setup():
    4be2:	47 e2       	ldi	r20, 0x27	; 39
    4be4:	66 e2       	ldi	r22, 0x26	; 38
    4be6:	81 e5       	ldi	r24, 0x51	; 81
    4be8:	99 e2       	ldi	r25, 0x29	; 41
    4bea:	0e 94 9b 06 	call	0xd36	; 0xd36 <UartClass::pins(unsigned char, unsigned char)>
    4bee:	40 e8       	ldi	r20, 0x80	; 128
    4bf0:	55 e2       	ldi	r21, 0x25	; 37
    4bf2:	60 e0       	ldi	r22, 0x00	; 0
    4bf4:	70 e0       	ldi	r23, 0x00	; 0
    4bf6:	81 e5       	ldi	r24, 0x51	; 81
    4bf8:	99 e2       	ldi	r25, 0x29	; 41
    4bfa:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <UartClass::begin(unsigned long)>
SETUP():
    4bfe:	f8 94       	cli
    4c00:	81 e0       	ldi	r24, 0x01	; 1
    4c02:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    4c06:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    4c0a:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4c0e:	8e 7f       	andi	r24, 0xFE	; 254
    4c10:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4c14:	8a ef       	ldi	r24, 0xFA	; 250
    4c16:	90 e0       	ldi	r25, 0x00	; 0
    4c18:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4c1c:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4c20:	8f e0       	ldi	r24, 0x0F	; 15
    4c22:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4c26:	78 94       	sei
    4c28:	61 e0       	ldi	r22, 0x01	; 1
    4c2a:	8b e0       	ldi	r24, 0x0B	; 11
    4c2c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c30:	61 e0       	ldi	r22, 0x01	; 1
    4c32:	8a e0       	ldi	r24, 0x0A	; 10
    4c34:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c38:	61 e0       	ldi	r22, 0x01	; 1
    4c3a:	89 e0       	ldi	r24, 0x09	; 9
    4c3c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c40:	61 e0       	ldi	r22, 0x01	; 1
    4c42:	88 e0       	ldi	r24, 0x08	; 8
    4c44:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c48:	61 e0       	ldi	r22, 0x01	; 1
    4c4a:	84 e0       	ldi	r24, 0x04	; 4
    4c4c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c50:	61 e0       	ldi	r22, 0x01	; 1
    4c52:	85 e0       	ldi	r24, 0x05	; 5
    4c54:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c58:	61 e0       	ldi	r22, 0x01	; 1
    4c5a:	86 e0       	ldi	r24, 0x06	; 6
    4c5c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c60:	61 e0       	ldi	r22, 0x01	; 1
    4c62:	87 e0       	ldi	r24, 0x07	; 7
    4c64:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c68:	61 e0       	ldi	r22, 0x01	; 1
    4c6a:	84 e1       	ldi	r24, 0x14	; 20
    4c6c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c70:	61 e0       	ldi	r22, 0x01	; 1
    4c72:	83 e1       	ldi	r24, 0x13	; 19
    4c74:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c78:	61 e0       	ldi	r22, 0x01	; 1
    4c7a:	82 e1       	ldi	r24, 0x12	; 18
    4c7c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c80:	61 e0       	ldi	r22, 0x01	; 1
    4c82:	8e e1       	ldi	r24, 0x1E	; 30
    4c84:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c88:	61 e0       	ldi	r22, 0x01	; 1
    4c8a:	80 e2       	ldi	r24, 0x20	; 32
    4c8c:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c90:	61 e0       	ldi	r22, 0x01	; 1
    4c92:	8f e1       	ldi	r24, 0x1F	; 31
    4c94:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <pinMode>
    4c98:	61 e0       	ldi	r22, 0x01	; 1
    4c9a:	88 e0       	ldi	r24, 0x08	; 8
    4c9c:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4ca0:	61 e0       	ldi	r22, 0x01	; 1
    4ca2:	89 e0       	ldi	r24, 0x09	; 9
    4ca4:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4ca8:	61 e0       	ldi	r22, 0x01	; 1
    4caa:	8a e0       	ldi	r24, 0x0A	; 10
    4cac:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4cb0:	61 e0       	ldi	r22, 0x01	; 1
    4cb2:	8b e0       	ldi	r24, 0x0B	; 11
    4cb4:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4cb8:	61 e0       	ldi	r22, 0x01	; 1
    4cba:	87 e0       	ldi	r24, 0x07	; 7
    4cbc:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4cc0:	61 e0       	ldi	r22, 0x01	; 1
    4cc2:	86 e0       	ldi	r24, 0x06	; 6
    4cc4:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4cc8:	61 e0       	ldi	r22, 0x01	; 1
    4cca:	85 e0       	ldi	r24, 0x05	; 5
    4ccc:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
    4cd0:	61 e0       	ldi	r22, 0x01	; 1
    4cd2:	84 e0       	ldi	r24, 0x04	; 4
    4cd4:	0e 94 46 08 	call	0x108c	; 0x108c <digitalWrite>
pinMode():
    4cd8:	61 e0       	ldi	r22, 0x01	; 1
    4cda:	8c e0       	ldi	r24, 0x0C	; 12
    4cdc:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ce0:	61 e0       	ldi	r22, 0x01	; 1
    4ce2:	8d e0       	ldi	r24, 0x0D	; 13
    4ce4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
digitalWrite():
    4ce8:	60 e0       	ldi	r22, 0x00	; 0
    4cea:	8c e0       	ldi	r24, 0x0C	; 12
    4cec:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    4cf0:	60 e0       	ldi	r22, 0x00	; 0
    4cf2:	8d e0       	ldi	r24, 0x0D	; 13
    4cf4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SETUP():
    4cf8:	8b ed       	ldi	r24, 0xDB	; 219
    4cfa:	9b e2       	ldi	r25, 0x2B	; 43
    4cfc:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SetOutputLimits():
    4d00:	10 92 2c 2a 	sts	0x2A2C, r1	; 0x802a2c <myPID+0x32>
    4d04:	10 92 2d 2a 	sts	0x2A2D, r1	; 0x802a2d <myPID+0x33>
    4d08:	10 92 2e 2a 	sts	0x2A2E, r1	; 0x802a2e <myPID+0x34>
    4d0c:	10 92 2f 2a 	sts	0x2A2F, r1	; 0x802a2f <myPID+0x35>
    4d10:	81 2c       	mov	r8, r1
    4d12:	91 2c       	mov	r9, r1
    4d14:	0a e7       	ldi	r16, 0x7A	; 122
    4d16:	a0 2e       	mov	r10, r16
    4d18:	04 e4       	ldi	r16, 0x44	; 68
    4d1a:	b0 2e       	mov	r11, r16
    4d1c:	80 92 30 2a 	sts	0x2A30, r8	; 0x802a30 <myPID+0x36>
    4d20:	90 92 31 2a 	sts	0x2A31, r9	; 0x802a31 <myPID+0x37>
    4d24:	a0 92 32 2a 	sts	0x2A32, r10	; 0x802a32 <myPID+0x38>
    4d28:	b0 92 33 2a 	sts	0x2A33, r11	; 0x802a33 <myPID+0x39>
    4d2c:	80 91 34 2a 	lds	r24, 0x2A34	; 0x802a34 <myPID+0x3a>
    4d30:	88 23       	and	r24, r24
    4d32:	09 f4       	brne	.+2      	; 0x4d36 <main+0x214>
    4d34:	57 c0       	rjmp	.+174    	; 0x4de4 <main+0x2c2>
    4d36:	00 91 18 2a 	lds	r16, 0x2A18	; 0x802a18 <myPID+0x1e>
    4d3a:	10 91 19 2a 	lds	r17, 0x2A19	; 0x802a19 <myPID+0x1f>
    4d3e:	d8 01       	movw	r26, r16
    4d40:	cd 90       	ld	r12, X+
    4d42:	dd 90       	ld	r13, X+
    4d44:	ed 90       	ld	r14, X+
    4d46:	fc 90       	ld	r15, X
    4d48:	a5 01       	movw	r20, r10
    4d4a:	94 01       	movw	r18, r8
    4d4c:	c7 01       	movw	r24, r14
    4d4e:	b6 01       	movw	r22, r12
    4d50:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    4d54:	18 16       	cp	r1, r24
    4d56:	34 f5       	brge	.+76     	; 0x4da4 <main+0x282>
    4d58:	f8 01       	movw	r30, r16
    4d5a:	80 82       	st	Z, r8
    4d5c:	91 82       	std	Z+1, r9	; 0x01
    4d5e:	a2 82       	std	Z+2, r10	; 0x02
    4d60:	b3 82       	std	Z+3, r11	; 0x03
    4d62:	80 90 20 2a 	lds	r8, 0x2A20	; 0x802a20 <myPID+0x26>
    4d66:	90 90 21 2a 	lds	r9, 0x2A21	; 0x802a21 <myPID+0x27>
    4d6a:	a0 90 22 2a 	lds	r10, 0x2A22	; 0x802a22 <myPID+0x28>
    4d6e:	b0 90 23 2a 	lds	r11, 0x2A23	; 0x802a23 <myPID+0x29>
    4d72:	c0 90 30 2a 	lds	r12, 0x2A30	; 0x802a30 <myPID+0x36>
    4d76:	d0 90 31 2a 	lds	r13, 0x2A31	; 0x802a31 <myPID+0x37>
    4d7a:	e0 90 32 2a 	lds	r14, 0x2A32	; 0x802a32 <myPID+0x38>
    4d7e:	f0 90 33 2a 	lds	r15, 0x2A33	; 0x802a33 <myPID+0x39>
    4d82:	a7 01       	movw	r20, r14
    4d84:	96 01       	movw	r18, r12
    4d86:	c5 01       	movw	r24, r10
    4d88:	b4 01       	movw	r22, r8
    4d8a:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    4d8e:	18 16       	cp	r1, r24
    4d90:	cc f4       	brge	.+50     	; 0x4dc4 <main+0x2a2>
    4d92:	c0 92 20 2a 	sts	0x2A20, r12	; 0x802a20 <myPID+0x26>
    4d96:	d0 92 21 2a 	sts	0x2A21, r13	; 0x802a21 <myPID+0x27>
    4d9a:	e0 92 22 2a 	sts	0x2A22, r14	; 0x802a22 <myPID+0x28>
    4d9e:	f0 92 23 2a 	sts	0x2A23, r15	; 0x802a23 <myPID+0x29>
    4da2:	20 c0       	rjmp	.+64     	; 0x4de4 <main+0x2c2>
    4da4:	20 e0       	ldi	r18, 0x00	; 0
    4da6:	30 e0       	ldi	r19, 0x00	; 0
    4da8:	a9 01       	movw	r20, r18
    4daa:	c7 01       	movw	r24, r14
    4dac:	b6 01       	movw	r22, r12
    4dae:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4db2:	87 ff       	sbrs	r24, 7
    4db4:	d6 cf       	rjmp	.-84     	; 0x4d62 <main+0x240>
    4db6:	d8 01       	movw	r26, r16
    4db8:	1d 92       	st	X+, r1
    4dba:	1d 92       	st	X+, r1
    4dbc:	1d 92       	st	X+, r1
    4dbe:	1c 92       	st	X, r1
    4dc0:	13 97       	sbiw	r26, 0x03	; 3
    4dc2:	cf cf       	rjmp	.-98     	; 0x4d62 <main+0x240>
    4dc4:	c0 90 2c 2a 	lds	r12, 0x2A2C	; 0x802a2c <myPID+0x32>
    4dc8:	d0 90 2d 2a 	lds	r13, 0x2A2D	; 0x802a2d <myPID+0x33>
    4dcc:	e0 90 2e 2a 	lds	r14, 0x2A2E	; 0x802a2e <myPID+0x34>
    4dd0:	f0 90 2f 2a 	lds	r15, 0x2A2F	; 0x802a2f <myPID+0x35>
    4dd4:	a7 01       	movw	r20, r14
    4dd6:	96 01       	movw	r18, r12
    4dd8:	c5 01       	movw	r24, r10
    4dda:	b4 01       	movw	r22, r8
    4ddc:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4de0:	87 fd       	sbrc	r24, 7
    4de2:	d7 cf       	rjmp	.-82     	; 0x4d92 <main+0x270>
Setup():
    4de4:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    4de8:	60 93 f9 28 	sts	0x28F9, r22	; 0x8028f9 <WINDOW_START_TIME>
    4dec:	70 93 fa 28 	sts	0x28FA, r23	; 0x8028fa <WINDOW_START_TIME+0x1>
    4df0:	80 93 fb 28 	sts	0x28FB, r24	; 0x8028fb <WINDOW_START_TIME+0x2>
    4df4:	90 93 fc 28 	sts	0x28FC, r25	; 0x8028fc <WINDOW_START_TIME+0x3>
SetMode():
    4df8:	80 91 34 2a 	lds	r24, 0x2A34	; 0x802a34 <myPID+0x3a>
    4dfc:	81 11       	cpse	r24, r1
    4dfe:	49 c0       	rjmp	.+146    	; 0x4e92 <main+0x370>
Initialize():
    4e00:	e0 91 18 2a 	lds	r30, 0x2A18	; 0x802a18 <myPID+0x1e>
    4e04:	f0 91 19 2a 	lds	r31, 0x2A19	; 0x802a19 <myPID+0x1f>
    4e08:	c0 80       	ld	r12, Z
    4e0a:	d1 80       	ldd	r13, Z+1	; 0x01
    4e0c:	e2 80       	ldd	r14, Z+2	; 0x02
    4e0e:	f3 80       	ldd	r15, Z+3	; 0x03
    4e10:	c0 92 20 2a 	sts	0x2A20, r12	; 0x802a20 <myPID+0x26>
    4e14:	d0 92 21 2a 	sts	0x2A21, r13	; 0x802a21 <myPID+0x27>
    4e18:	e0 92 22 2a 	sts	0x2A22, r14	; 0x802a22 <myPID+0x28>
    4e1c:	f0 92 23 2a 	sts	0x2A23, r15	; 0x802a23 <myPID+0x29>
    4e20:	e0 91 16 2a 	lds	r30, 0x2A16	; 0x802a16 <myPID+0x1c>
    4e24:	f0 91 17 2a 	lds	r31, 0x2A17	; 0x802a17 <myPID+0x1d>
    4e28:	80 81       	ld	r24, Z
    4e2a:	91 81       	ldd	r25, Z+1	; 0x01
    4e2c:	a2 81       	ldd	r26, Z+2	; 0x02
    4e2e:	b3 81       	ldd	r27, Z+3	; 0x03
    4e30:	80 93 24 2a 	sts	0x2A24, r24	; 0x802a24 <myPID+0x2a>
    4e34:	90 93 25 2a 	sts	0x2A25, r25	; 0x802a25 <myPID+0x2b>
    4e38:	a0 93 26 2a 	sts	0x2A26, r26	; 0x802a26 <myPID+0x2c>
    4e3c:	b0 93 27 2a 	sts	0x2A27, r27	; 0x802a27 <myPID+0x2d>
    4e40:	80 90 30 2a 	lds	r8, 0x2A30	; 0x802a30 <myPID+0x36>
    4e44:	90 90 31 2a 	lds	r9, 0x2A31	; 0x802a31 <myPID+0x37>
    4e48:	a0 90 32 2a 	lds	r10, 0x2A32	; 0x802a32 <myPID+0x38>
    4e4c:	b0 90 33 2a 	lds	r11, 0x2A33	; 0x802a33 <myPID+0x39>
    4e50:	a5 01       	movw	r20, r10
    4e52:	94 01       	movw	r18, r8
    4e54:	c7 01       	movw	r24, r14
    4e56:	b6 01       	movw	r22, r12
    4e58:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    4e5c:	18 16       	cp	r1, r24
    4e5e:	4c f4       	brge	.+18     	; 0x4e72 <main+0x350>
    4e60:	80 92 20 2a 	sts	0x2A20, r8	; 0x802a20 <myPID+0x26>
    4e64:	90 92 21 2a 	sts	0x2A21, r9	; 0x802a21 <myPID+0x27>
    4e68:	a0 92 22 2a 	sts	0x2A22, r10	; 0x802a22 <myPID+0x28>
    4e6c:	b0 92 23 2a 	sts	0x2A23, r11	; 0x802a23 <myPID+0x29>
    4e70:	10 c0       	rjmp	.+32     	; 0x4e92 <main+0x370>
    4e72:	80 90 2c 2a 	lds	r8, 0x2A2C	; 0x802a2c <myPID+0x32>
    4e76:	90 90 2d 2a 	lds	r9, 0x2A2D	; 0x802a2d <myPID+0x33>
    4e7a:	a0 90 2e 2a 	lds	r10, 0x2A2E	; 0x802a2e <myPID+0x34>
    4e7e:	b0 90 2f 2a 	lds	r11, 0x2A2F	; 0x802a2f <myPID+0x35>
    4e82:	a5 01       	movw	r20, r10
    4e84:	94 01       	movw	r18, r8
    4e86:	c7 01       	movw	r24, r14
    4e88:	b6 01       	movw	r22, r12
    4e8a:	0e 94 29 38 	call	0x7052	; 0x7052 <__cmpsf2>
    4e8e:	87 fd       	sbrc	r24, 7
    4e90:	e7 cf       	rjmp	.-50     	; 0x4e60 <main+0x33e>
SetMode():
    4e92:	81 e0       	ldi	r24, 0x01	; 1
    4e94:	80 93 34 2a 	sts	0x2A34, r24	; 0x802a34 <myPID+0x3a>
pinMode():
    4e98:	61 e0       	ldi	r22, 0x01	; 1
    4e9a:	85 e1       	ldi	r24, 0x15	; 21
    4e9c:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ea0:	61 e0       	ldi	r22, 0x01	; 1
    4ea2:	81 e2       	ldi	r24, 0x21	; 33
    4ea4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ea8:	61 e0       	ldi	r22, 0x01	; 1
    4eaa:	89 e1       	ldi	r24, 0x19	; 25
    4eac:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4eb0:	61 e0       	ldi	r22, 0x01	; 1
    4eb2:	88 e1       	ldi	r24, 0x18	; 24
    4eb4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
digitalWrite():
    4eb8:	60 e0       	ldi	r22, 0x00	; 0
    4eba:	89 e1       	ldi	r24, 0x19	; 25
    4ebc:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    4ec0:	60 e0       	ldi	r22, 0x00	; 0
    4ec2:	85 e1       	ldi	r24, 0x15	; 21
    4ec4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    4ec8:	60 e0       	ldi	r22, 0x00	; 0
    4eca:	81 e2       	ldi	r24, 0x21	; 33
    4ecc:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    4ed0:	60 e0       	ldi	r22, 0x00	; 0
    4ed2:	88 e1       	ldi	r24, 0x18	; 24
    4ed4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
pinMode():
    4ed8:	61 e0       	ldi	r22, 0x01	; 1
    4eda:	8b e1       	ldi	r24, 0x1B	; 27
    4edc:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ee0:	61 e0       	ldi	r22, 0x01	; 1
    4ee2:	8c e1       	ldi	r24, 0x1C	; 28
    4ee4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ee8:	61 e0       	ldi	r22, 0x01	; 1
    4eea:	8d e1       	ldi	r24, 0x1D	; 29
    4eec:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    4ef0:	61 e0       	ldi	r22, 0x01	; 1
    4ef2:	8a e1       	ldi	r24, 0x1A	; 26
    4ef4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
Setup():
    4ef8:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    4efc:	87 e8       	ldi	r24, 0x87	; 135
    4efe:	9a e2       	ldi	r25, 0x2A	; 42
    4f00:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
    4f04:	8c e6       	ldi	r24, 0x6C	; 108
    4f06:	9a e2       	ldi	r25, 0x2A	; 42
    4f08:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
    4f0c:	90 e0       	ldi	r25, 0x00	; 0
    4f0e:	80 e0       	ldi	r24, 0x00	; 0
    4f10:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4f14:	aa 24       	eor	r10, r10
    4f16:	a3 94       	inc	r10
    4f18:	81 11       	cpse	r24, r1
    4f1a:	01 c0       	rjmp	.+2      	; 0x4f1e <main+0x3fc>
    4f1c:	a1 2c       	mov	r10, r1
    4f1e:	a0 92 9d 28 	sts	0x289D, r10	; 0x80289d <STIR_VALUE_SET>
    4f22:	81 e0       	ldi	r24, 0x01	; 1
    4f24:	90 e0       	ldi	r25, 0x00	; 0
    4f26:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4f2a:	bb 24       	eor	r11, r11
    4f2c:	b3 94       	inc	r11
    4f2e:	81 11       	cpse	r24, r1
    4f30:	01 c0       	rjmp	.+2      	; 0x4f34 <main+0x412>
    4f32:	b1 2c       	mov	r11, r1
    4f34:	b0 92 4f 29 	sts	0x294F, r11	; 0x80294f <DEGREE_VALUE_SET>
    4f38:	82 e0       	ldi	r24, 0x02	; 2
    4f3a:	90 e0       	ldi	r25, 0x00	; 0
    4f3c:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4f40:	c8 2e       	mov	r12, r24
    4f42:	d1 2c       	mov	r13, r1
    4f44:	c0 92 0e 29 	sts	0x290E, r12	; 0x80290e <SAFE_VALUE_SET_DEG>
    4f48:	d0 92 0f 29 	sts	0x290F, r13	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
    4f4c:	6c e0       	ldi	r22, 0x0C	; 12
    4f4e:	79 e2       	ldi	r23, 0x29	; 41
    4f50:	83 e0       	ldi	r24, 0x03	; 3
    4f52:	90 e0       	ldi	r25, 0x00	; 0
    4f54:	0e 94 6e 10 	call	0x20dc	; 0x20dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4f58:	85 e0       	ldi	r24, 0x05	; 5
    4f5a:	90 e0       	ldi	r25, 0x00	; 0
    4f5c:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4f60:	e8 2e       	mov	r14, r24
    4f62:	f1 2c       	mov	r15, r1
    4f64:	e0 92 d4 28 	sts	0x28D4, r14	; 0x8028d4 <CAL_SELECT_VALUE>
    4f68:	f0 92 d5 28 	sts	0x28D5, r15	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
    4f6c:	16 e0       	ldi	r17, 0x06	; 6
    4f6e:	81 2e       	mov	r8, r17
    4f70:	19 e2       	ldi	r17, 0x29	; 41
    4f72:	91 2e       	mov	r9, r17
main():
    4f74:	06 e4       	ldi	r16, 0x46	; 70
    4f76:	10 e0       	ldi	r17, 0x00	; 0
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4f78:	09 83       	std	Y+1, r16	; 0x01
    4f7a:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    4f7c:	ce 01       	movw	r24, r28
    4f7e:	01 96       	adiw	r24, 0x01	; 1
    4f80:	0e 94 5e 10 	call	0x20bc	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4f84:	f4 01       	movw	r30, r8
    4f86:	81 93       	st	Z+, r24
    4f88:	4f 01       	movw	r8, r30
_ZN5EEPtrppEv():
    4f8a:	0f 5f       	subi	r16, 0xFF	; 255
    4f8c:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4f8e:	0a 34       	cpi	r16, 0x4A	; 74
    4f90:	11 05       	cpc	r17, r1
    4f92:	91 f7       	brne	.-28     	; 0x4f78 <main+0x456>
Setup():
    4f94:	87 e0       	ldi	r24, 0x07	; 7
    4f96:	90 e0       	ldi	r25, 0x00	; 0
    4f98:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4f9c:	91 e0       	ldi	r25, 0x01	; 1
    4f9e:	81 11       	cpse	r24, r1
    4fa0:	01 c0       	rjmp	.+2      	; 0x4fa4 <main+0x482>
    4fa2:	90 e0       	ldi	r25, 0x00	; 0
    4fa4:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <SIGN>
    4fa8:	88 e0       	ldi	r24, 0x08	; 8
    4faa:	90 e0       	ldi	r25, 0x00	; 0
    4fac:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4fb0:	91 e0       	ldi	r25, 0x01	; 1
    4fb2:	81 11       	cpse	r24, r1
    4fb4:	01 c0       	rjmp	.+2      	; 0x4fb8 <main+0x496>
    4fb6:	90 e0       	ldi	r25, 0x00	; 0
    4fb8:	90 93 e3 28 	sts	0x28E3, r25	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
    4fbc:	89 e0       	ldi	r24, 0x09	; 9
    4fbe:	90 e0       	ldi	r25, 0x00	; 0
    4fc0:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    4fc4:	91 e0       	ldi	r25, 0x01	; 1
    4fc6:	81 11       	cpse	r24, r1
    4fc8:	01 c0       	rjmp	.+2      	; 0x4fcc <main+0x4aa>
    4fca:	90 e0       	ldi	r25, 0x00	; 0
    4fcc:	90 93 de 28 	sts	0x28DE, r25	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
    4fd0:	6c ec       	ldi	r22, 0xCC	; 204
    4fd2:	78 e2       	ldi	r23, 0x28	; 40
    4fd4:	80 e5       	ldi	r24, 0x50	; 80
    4fd6:	90 e0       	ldi	r25, 0x00	; 0
    4fd8:	0e 94 93 10 	call	0x2126	; 0x2126 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4fdc:	68 ec       	ldi	r22, 0xC8	; 200
    4fde:	78 e2       	ldi	r23, 0x28	; 40
    4fe0:	8a e5       	ldi	r24, 0x5A	; 90
    4fe2:	90 e0       	ldi	r25, 0x00	; 0
    4fe4:	0e 94 93 10 	call	0x2126	; 0x2126 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4fe8:	64 ec       	ldi	r22, 0xC4	; 196
    4fea:	78 e2       	ldi	r23, 0x28	; 40
    4fec:	84 e6       	ldi	r24, 0x64	; 100
    4fee:	90 e0       	ldi	r25, 0x00	; 0
    4ff0:	0e 94 93 10 	call	0x2126	; 0x2126 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4ff4:	60 ec       	ldi	r22, 0xC0	; 192
    4ff6:	78 e2       	ldi	r23, 0x28	; 40
    4ff8:	8e e6       	ldi	r24, 0x6E	; 110
    4ffa:	90 e0       	ldi	r25, 0x00	; 0
    4ffc:	0e 94 93 10 	call	0x2126	; 0x2126 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5000:	81 e4       	ldi	r24, 0x41	; 65
    5002:	90 e0       	ldi	r25, 0x00	; 0
    5004:	89 83       	std	Y+1, r24	; 0x01
    5006:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    5008:	ce 01       	movw	r24, r28
    500a:	01 96       	adiw	r24, 0x01	; 1
    500c:	0e 94 5e 10 	call	0x20bc	; 0x20bc <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5010:	80 93 64 28 	sts	0x2864, r24	; 0x802864 <TIME_SOCK_OR_TOTAL>
Setup():
    5014:	63 e5       	ldi	r22, 0x53	; 83
    5016:	78 e2       	ldi	r23, 0x28	; 40
    5018:	88 e9       	ldi	r24, 0x98	; 152
    501a:	90 e0       	ldi	r25, 0x00	; 0
    501c:	0e 94 6e 10 	call	0x20dc	; 0x20dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    5020:	61 e5       	ldi	r22, 0x51	; 81
    5022:	78 e2       	ldi	r23, 0x28	; 40
    5024:	8a e9       	ldi	r24, 0x9A	; 154
    5026:	90 e0       	ldi	r25, 0x00	; 0
    5028:	0e 94 6e 10 	call	0x20dc	; 0x20dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    502c:	8f e0       	ldi	r24, 0x0F	; 15
    502e:	90 e0       	ldi	r25, 0x00	; 0
    5030:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    5034:	01 e0       	ldi	r16, 0x01	; 1
    5036:	81 11       	cpse	r24, r1
    5038:	01 c0       	rjmp	.+2      	; 0x503c <main+0x51a>
    503a:	00 e0       	ldi	r16, 0x00	; 0
    503c:	00 93 a4 28 	sts	0x28A4, r16	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    5040:	86 e9       	ldi	r24, 0x96	; 150
    5042:	90 e0       	ldi	r25, 0x00	; 0
    5044:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    5048:	11 e0       	ldi	r17, 0x01	; 1
    504a:	81 11       	cpse	r24, r1
    504c:	01 c0       	rjmp	.+2      	; 0x5050 <main+0x52e>
    504e:	10 e0       	ldi	r17, 0x00	; 0
    5050:	10 93 0a 29 	sts	0x290A, r17	; 0x80290a <select_product_type>
    5054:	84 e8       	ldi	r24, 0x84	; 132
    5056:	90 e0       	ldi	r25, 0x00	; 0
    5058:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    505c:	91 e0       	ldi	r25, 0x01	; 1
    505e:	81 11       	cpse	r24, r1
    5060:	01 c0       	rjmp	.+2      	; 0x5064 <main+0x542>
    5062:	90 e0       	ldi	r25, 0x00	; 0
    5064:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <select_heating_type>
    5068:	2a 2d       	mov	r18, r10
    506a:	30 e0       	ldi	r19, 0x00	; 0
    506c:	20 93 1d 29 	sts	0x291D, r18	; 0x80291d <SET_LONG_VALUE>
    5070:	30 93 1e 29 	sts	0x291E, r19	; 0x80291e <SET_LONG_VALUE+0x1>
    5074:	2b 2d       	mov	r18, r11
    5076:	30 e0       	ldi	r19, 0x00	; 0
    5078:	20 93 1f 29 	sts	0x291F, r18	; 0x80291f <SET_LONG_VALUE+0x2>
    507c:	30 93 20 29 	sts	0x2920, r19	; 0x802920 <SET_LONG_VALUE+0x3>
    5080:	c0 92 21 29 	sts	0x2921, r12	; 0x802921 <SET_LONG_VALUE+0x4>
    5084:	d0 92 22 29 	sts	0x2922, r13	; 0x802922 <SET_LONG_VALUE+0x5>
    5088:	20 91 0c 29 	lds	r18, 0x290C	; 0x80290c <SAFE_VALUE_SET_FAH>
    508c:	30 91 0d 29 	lds	r19, 0x290D	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
    5090:	20 93 45 29 	sts	0x2945, r18	; 0x802945 <SET_LONG_VALUE+0x28>
    5094:	30 93 46 29 	sts	0x2946, r19	; 0x802946 <SET_LONG_VALUE+0x29>
    5098:	e0 92 29 29 	sts	0x2929, r14	; 0x802929 <SET_LONG_VALUE+0xc>
    509c:	f0 92 2a 29 	sts	0x292A, r15	; 0x80292a <SET_LONG_VALUE+0xd>
    50a0:	20 91 64 28 	lds	r18, 0x2864	; 0x802864 <TIME_SOCK_OR_TOTAL>
    50a4:	30 e0       	ldi	r19, 0x00	; 0
    50a6:	20 93 23 29 	sts	0x2923, r18	; 0x802923 <SET_LONG_VALUE+0x6>
    50aa:	30 93 24 29 	sts	0x2924, r19	; 0x802924 <SET_LONG_VALUE+0x7>
    50ae:	20 2f       	mov	r18, r16
    50b0:	30 e0       	ldi	r19, 0x00	; 0
    50b2:	20 93 25 29 	sts	0x2925, r18	; 0x802925 <SET_LONG_VALUE+0x8>
    50b6:	30 93 26 29 	sts	0x2926, r19	; 0x802926 <SET_LONG_VALUE+0x9>
    50ba:	89 2f       	mov	r24, r25
    50bc:	90 e0       	ldi	r25, 0x00	; 0
    50be:	80 93 3d 29 	sts	0x293D, r24	; 0x80293d <SET_LONG_VALUE+0x20>
    50c2:	90 93 3e 29 	sts	0x293E, r25	; 0x80293e <SET_LONG_VALUE+0x21>
    50c6:	81 2f       	mov	r24, r17
    50c8:	90 e0       	ldi	r25, 0x00	; 0
    50ca:	80 93 27 29 	sts	0x2927, r24	; 0x802927 <SET_LONG_VALUE+0xa>
    50ce:	90 93 28 29 	sts	0x2928, r25	; 0x802928 <SET_LONG_VALUE+0xb>
    50d2:	6c e3       	ldi	r22, 0x3C	; 60
    50d4:	79 e2       	ldi	r23, 0x29	; 41
    50d6:	88 e7       	ldi	r24, 0x78	; 120
    50d8:	90 e0       	ldi	r25, 0x00	; 0
    50da:	0e 94 6e 10 	call	0x20dc	; 0x20dc <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    50de:	83 e7       	ldi	r24, 0x73	; 115
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    50e6:	90 e0       	ldi	r25, 0x00	; 0
    50e8:	80 93 12 29 	sts	0x2912, r24	; 0x802912 <SET_VALUE+0x2>
    50ec:	90 93 13 29 	sts	0x2913, r25	; 0x802913 <SET_VALUE+0x3>
    50f0:	85 e7       	ldi	r24, 0x75	; 117
    50f2:	90 e0       	ldi	r25, 0x00	; 0
    50f4:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    50f8:	90 e0       	ldi	r25, 0x00	; 0
    50fa:	80 93 14 29 	sts	0x2914, r24	; 0x802914 <SET_VALUE+0x4>
    50fe:	90 93 15 29 	sts	0x2915, r25	; 0x802915 <SET_VALUE+0x5>
    5102:	8d e7       	ldi	r24, 0x7D	; 125
    5104:	90 e0       	ldi	r25, 0x00	; 0
    5106:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    510a:	90 e0       	ldi	r25, 0x00	; 0
    510c:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x6>
    5110:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x7>
    5114:	82 e8       	ldi	r24, 0x82	; 130
    5116:	90 e0       	ldi	r25, 0x00	; 0
    5118:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    511c:	90 e0       	ldi	r25, 0x00	; 0
    511e:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x8>
    5122:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x9>
    5126:	87 e8       	ldi	r24, 0x87	; 135
    5128:	90 e0       	ldi	r25, 0x00	; 0
    512a:	0e 94 c5 10 	call	0x218a	; 0x218a <EEPROMClass::read(int) [clone .isra.0]>
    512e:	91 e0       	ldi	r25, 0x01	; 1
    5130:	81 11       	cpse	r24, r1
    5132:	01 c0       	rjmp	.+2      	; 0x5136 <main+0x614>
    5134:	90 e0       	ldi	r25, 0x00	; 0
    5136:	90 93 a5 28 	sts	0x28A5, r25	; 0x8028a5 <Process_Interrupt_flag>
setup():
    513a:	89 e2       	ldi	r24, 0x29	; 41
    513c:	9b e2       	ldi	r25, 0x2B	; 43
    513e:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
pinMode():
    5142:	62 e0       	ldi	r22, 0x02	; 2
    5144:	83 e2       	ldi	r24, 0x23	; 35
    5146:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    514a:	62 e0       	ldi	r22, 0x02	; 2
    514c:	85 e2       	ldi	r24, 0x25	; 37
    514e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    5152:	62 e0       	ldi	r22, 0x02	; 2
    5154:	84 e2       	ldi	r24, 0x24	; 36
    5156:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
    515a:	62 e0       	ldi	r22, 0x02	; 2
    515c:	82 e2       	ldi	r24, 0x22	; 34
    515e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <pinMode.part.1>
attachClick():
    5162:	8d e7       	ldi	r24, 0x7D	; 125
    5164:	91 e1       	ldi	r25, 0x11	; 17
    5166:	80 93 ae 2b 	sts	0x2BAE, r24	; 0x802bae <button1+0xd>
    516a:	90 93 af 2b 	sts	0x2BAF, r25	; 0x802baf <button1+0xe>
attachLongPressStart():
    516e:	89 e6       	ldi	r24, 0x69	; 105
    5170:	9d e0       	ldi	r25, 0x0D	; 13
    5172:	80 93 b4 2b 	sts	0x2BB4, r24	; 0x802bb4 <button1+0x13>
    5176:	90 93 b5 2b 	sts	0x2BB5, r25	; 0x802bb5 <button1+0x14>
attachClick():
    517a:	89 e1       	ldi	r24, 0x19	; 25
    517c:	9d e0       	ldi	r25, 0x0D	; 13
    517e:	80 93 8f 2b 	sts	0x2B8F, r24	; 0x802b8f <button2+0xd>
    5182:	90 93 90 2b 	sts	0x2B90, r25	; 0x802b90 <button2+0xe>
attachDuringLongPress():
    5186:	82 e0       	ldi	r24, 0x02	; 2
    5188:	9d e0       	ldi	r25, 0x0D	; 13
    518a:	80 93 99 2b 	sts	0x2B99, r24	; 0x802b99 <button2+0x17>
    518e:	90 93 9a 2b 	sts	0x2B9A, r25	; 0x802b9a <button2+0x18>
attachLongPressStop():
    5192:	83 e0       	ldi	r24, 0x03	; 3
    5194:	96 e0       	ldi	r25, 0x06	; 6
    5196:	80 93 97 2b 	sts	0x2B97, r24	; 0x802b97 <button2+0x15>
    519a:	90 93 98 2b 	sts	0x2B98, r25	; 0x802b98 <button2+0x16>
attachClick():
    519e:	83 ea       	ldi	r24, 0xA3	; 163
    51a0:	9c e0       	ldi	r25, 0x0C	; 12
    51a2:	80 93 70 2b 	sts	0x2B70, r24	; 0x802b70 <button3+0xd>
    51a6:	90 93 71 2b 	sts	0x2B71, r25	; 0x802b71 <button3+0xe>
attachDuringLongPress():
    51aa:	8c e8       	ldi	r24, 0x8C	; 140
    51ac:	9c e0       	ldi	r25, 0x0C	; 12
    51ae:	80 93 7a 2b 	sts	0x2B7A, r24	; 0x802b7a <button3+0x17>
    51b2:	90 93 7b 2b 	sts	0x2B7B, r25	; 0x802b7b <button3+0x18>
attachLongPressStop():
    51b6:	88 ef       	ldi	r24, 0xF8	; 248
    51b8:	95 e0       	ldi	r25, 0x05	; 5
    51ba:	80 93 78 2b 	sts	0x2B78, r24	; 0x802b78 <button3+0x15>
    51be:	90 93 79 2b 	sts	0x2B79, r25	; 0x802b79 <button3+0x16>
attachClick():
    51c2:	89 e2       	ldi	r24, 0x29	; 41
    51c4:	9c e0       	ldi	r25, 0x0C	; 12
    51c6:	80 93 51 2b 	sts	0x2B51, r24	; 0x802b51 <button4+0xd>
    51ca:	90 93 52 2b 	sts	0x2B52, r25	; 0x802b52 <button4+0xe>
attachLongPressStart():
    51ce:	82 e0       	ldi	r24, 0x02	; 2
    51d0:	9c e0       	ldi	r25, 0x0C	; 12
    51d2:	80 93 57 2b 	sts	0x2B57, r24	; 0x802b57 <button4+0x13>
    51d6:	90 93 58 2b 	sts	0x2B58, r25	; 0x802b58 <button4+0x14>
setup():
    51da:	80 ec       	ldi	r24, 0xC0	; 192
    51dc:	9b e2       	ldi	r25, 0x2B	; 43
    51de:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
DISPLAY_DIGIT2():
    51e2:	ea e0       	ldi	r30, 0x0A	; 10
    51e4:	ee 2e       	mov	r14, r30
    51e6:	f1 2c       	mov	r15, r1
    51e8:	08 e1       	ldi	r16, 0x18	; 24
    51ea:	10 e0       	ldi	r17, 0x00	; 0
    51ec:	fe e1       	ldi	r31, 0x1E	; 30
    51ee:	4f 2e       	mov	r4, r31
    51f0:	51 2c       	mov	r5, r1
SET_LONG_PRESS_FUNCTION():
    51f2:	a9 e1       	ldi	r26, 0x19	; 25
    51f4:	6a 2e       	mov	r6, r26
    51f6:	71 2c       	mov	r7, r1
DISPLAY_DIGIT1():
    51f8:	b8 e1       	ldi	r27, 0x18	; 24
    51fa:	2b 2e       	mov	r2, r27
    51fc:	31 2c       	mov	r3, r1
loop():
    51fe:	89 e2       	ldi	r24, 0x29	; 41
    5200:	9b e2       	ldi	r25, 0x2B	; 43
    5202:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
DISP_UPDATE():
    5206:	8b ed       	ldi	r24, 0xDB	; 219
    5208:	9b e2       	ldi	r25, 0x2B	; 43
    520a:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
loop():
    520e:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    5212:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    5216:	88 23       	and	r24, r24
    5218:	a1 f1       	breq	.+104    	; 0x5282 <main+0x760>
    521a:	80 ec       	ldi	r24, 0xC0	; 192
    521c:	9b e2       	ldi	r25, 0x2B	; 43
    521e:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
    5222:	89 e1       	ldi	r24, 0x19	; 25
    5224:	90 e0       	ldi	r25, 0x00	; 0
    5226:	0e 94 14 0b 	call	0x1628	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
DISPLAY_DIGIT2():
    522a:	82 e2       	ldi	r24, 0x22	; 34
    522c:	90 e0       	ldi	r25, 0x00	; 0
    522e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5232:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5236:	00 93 eb 28 	sts	0x28EB, r16	; 0x8028eb <digits2+0x2>
    523a:	10 93 ec 28 	sts	0x28EC, r17	; 0x8028ec <digits2+0x3>
    523e:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x4>
    5242:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x5>
    5246:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits2+0x6>
    524a:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    524e:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    5252:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5256:	84 e0       	ldi	r24, 0x04	; 4
    5258:	90 e0       	ldi	r25, 0x00	; 0
    525a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    525e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    5262:	10 92 f5 28 	sts	0x28F5, r1	; 0x8028f5 <digits1+0x4>
    5266:	10 92 f6 28 	sts	0x28F6, r1	; 0x8028f6 <digits1+0x5>
    526a:	82 e0       	ldi	r24, 0x02	; 2
    526c:	90 e0       	ldi	r25, 0x00	; 0
    526e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    5272:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
loop():
    5276:	81 e0       	ldi	r24, 0x01	; 1
    5278:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
main():
    527c:	0e 94 73 07 	call	0xee6	; 0xee6 <serialEventRun()>
    5280:	be cf       	rjmp	.-132    	; 0x51fe <main+0x6dc>
stop():
    5282:	10 92 c0 2b 	sts	0x2BC0, r1	; 0x802bc0 <VersionDisplay>
    5286:	10 92 cb 2b 	sts	0x2BCB, r1	; 0x802bcb <VersionDisplay+0xb>
    528a:	10 92 cc 2b 	sts	0x2BCC, r1	; 0x802bcc <VersionDisplay+0xc>
    528e:	10 92 cd 2b 	sts	0x2BCD, r1	; 0x802bcd <VersionDisplay+0xd>
    5292:	10 92 ce 2b 	sts	0x2BCE, r1	; 0x802bce <VersionDisplay+0xe>
    5296:	10 92 cf 2b 	sts	0x2BCF, r1	; 0x802bcf <VersionDisplay+0xf>
    529a:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <VersionDisplay+0x10>
loop():
    529e:	20 e0       	ldi	r18, 0x00	; 0
    52a0:	30 e0       	ldi	r19, 0x00	; 0
    52a2:	40 ef       	ldi	r20, 0xF0	; 240
    52a4:	52 e4       	ldi	r21, 0x42	; 66
    52a6:	60 91 fe 28 	lds	r22, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    52aa:	70 91 ff 28 	lds	r23, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    52ae:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    52b2:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    52b6:	0e 94 78 39 	call	0x72f0	; 0x72f0 <__gesf2>
    52ba:	87 fd       	sbrc	r24, 7
    52bc:	57 c0       	rjmp	.+174    	; 0x536c <main+0x84a>
digitalWrite():
    52be:	60 e0       	ldi	r22, 0x00	; 0
    52c0:	81 e2       	ldi	r24, 0x21	; 33
    52c2:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
Probe_Error():
    52c6:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <DOT2_0>
    52ca:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <DOT2_2>
    52ce:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    52d2:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT1_2>
    52d6:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    52da:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    52de:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    52e2:	10 92 ee 29 	sts	0x29EE, r1	; 0x8029ee <PID_SETPOINT>
    52e6:	10 92 ef 29 	sts	0x29EF, r1	; 0x8029ef <PID_SETPOINT+0x1>
    52ea:	10 92 f0 29 	sts	0x29F0, r1	; 0x8029f0 <PID_SETPOINT+0x2>
    52ee:	10 92 f1 29 	sts	0x29F1, r1	; 0x8029f1 <PID_SETPOINT+0x3>
    52f2:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <LONG_PRESS>
    52f6:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <ENTER_BUT>
digitalWrite():
    52fa:	60 e0       	ldi	r22, 0x00	; 0
    52fc:	8c e0       	ldi	r24, 0x0C	; 12
    52fe:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    5302:	60 e0       	ldi	r22, 0x00	; 0
    5304:	8d e0       	ldi	r24, 0x0D	; 13
    5306:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
Probe_Error():
    530a:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <toggle>
    530e:	88 23       	and	r24, r24
    5310:	11 f4       	brne	.+4      	; 0x5316 <main+0x7f4>
    5312:	0c 94 b3 37 	jmp	0x6f66	; 0x6f66 <main+0x2444>
digitalWrite():
    5316:	61 e0       	ldi	r22, 0x01	; 1
    5318:	85 e1       	ldi	r24, 0x15	; 21
    531a:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    531e:	8b e0       	ldi	r24, 0x0B	; 11
    5320:	90 e0       	ldi	r25, 0x00	; 0
    5322:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5326:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    532a:	81 e1       	ldi	r24, 0x11	; 17
    532c:	90 e0       	ldi	r25, 0x00	; 0
    532e:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5332:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5336:	27 e1       	ldi	r18, 0x17	; 23
    5338:	30 e0       	ldi	r19, 0x00	; 0
    533a:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    533e:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    5342:	4e e0       	ldi	r20, 0x0E	; 14
    5344:	50 e0       	ldi	r21, 0x00	; 0
    5346:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits2+0x6>
    534a:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    534e:	4f e0       	ldi	r20, 0x0F	; 15
    5350:	50 e0       	ldi	r21, 0x00	; 0
    5352:	40 93 f1 28 	sts	0x28F1, r20	; 0x8028f1 <digits1>
    5356:	50 93 f2 28 	sts	0x28F2, r21	; 0x8028f2 <digits1+0x1>
    535a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    535e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    5362:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1+0x4>
    5366:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x5>
    536a:	43 c6       	rjmp	.+3206   	; 0x5ff2 <main+0x14d0>
digitalRead():
    536c:	85 e2       	ldi	r24, 0x25	; 37
    536e:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
    5372:	d0 90 42 28 	lds	r13, 0x2842	; 0x802842 <but1>
but_check():
    5376:	81 11       	cpse	r24, r1
    5378:	43 c0       	rjmp	.+134    	; 0x5400 <main+0x8de>
digitalRead():
    537a:	84 e2       	ldi	r24, 0x24	; 36
    537c:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
but_check():
    5380:	81 11       	cpse	r24, r1
    5382:	3e c0       	rjmp	.+124    	; 0x5400 <main+0x8de>
    5384:	d1 10       	cpse	r13, r1
    5386:	3c c0       	rjmp	.+120    	; 0x5400 <main+0x8de>
    5388:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    538c:	60 93 3e 28 	sts	0x283E, r22	; 0x80283e <start_tt>
    5390:	70 93 3f 28 	sts	0x283F, r23	; 0x80283f <start_tt+0x1>
    5394:	80 93 40 28 	sts	0x2840, r24	; 0x802840 <start_tt+0x2>
    5398:	90 93 41 28 	sts	0x2841, r25	; 0x802841 <start_tt+0x3>
    539c:	81 e0       	ldi	r24, 0x01	; 1
    539e:	80 93 42 28 	sts	0x2842, r24	; 0x802842 <but1>
loop():
    53a2:	80 91 50 29 	lds	r24, 0x2950	; 0x802950 <LONG_PRESS>
    53a6:	88 23       	and	r24, r24
    53a8:	11 f4       	brne	.+4      	; 0x53ae <main+0x88c>
    53aa:	0c 94 af 37 	jmp	0x6f5e	; 0x6f5e <main+0x243c>
digitalWrite():
    53ae:	60 e0       	ldi	r22, 0x00	; 0
    53b0:	8c e0       	ldi	r24, 0x0C	; 12
    53b2:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    53b6:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    53ba:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    53be:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    53c2:	88 23       	and	r24, r24
    53c4:	09 f4       	brne	.+2      	; 0x53c8 <main+0x8a6>
    53c6:	77 c7       	rjmp	.+3822   	; 0x62b6 <main+0x1794>
    53c8:	e4 31       	cpi	r30, 0x14	; 20
    53ca:	f1 05       	cpc	r31, r1
    53cc:	08 f0       	brcs	.+2      	; 0x53d0 <main+0x8ae>
    53ce:	56 cf       	rjmp	.-340    	; 0x527c <main+0x75a>
    53d0:	e4 51       	subi	r30, 0x14	; 20
    53d2:	f6 4d       	sbci	r31, 0xD6	; 214
    53d4:	0c 94 30 3a 	jmp	0x7460	; 0x7460 <__tablejump2__>
    53d8:	54 2a       	or	r5, r20
    53da:	ad 2a       	or	r10, r29
    53dc:	eb 2a       	or	r14, r27
    53de:	56 2b       	or	r21, r22
    53e0:	ba 2b       	or	r27, r26
    53e2:	08 2c       	mov	r0, r8
    53e4:	5f 2c       	mov	r5, r15
    53e6:	a0 2c       	mov	r10, r0
    53e8:	cd 2c       	mov	r12, r13
    53ea:	1a 2d       	mov	r17, r10
    53ec:	69 2d       	mov	r22, r9
    53ee:	ae 2d       	mov	r26, r14
    53f0:	eb 2d       	mov	r30, r11
    53f2:	64 2e       	mov	r6, r20
    53f4:	96 2e       	mov	r9, r22
    53f6:	0e 2f       	mov	r16, r30
    53f8:	13 2f       	mov	r17, r19
    53fa:	68 2f       	mov	r22, r24
    53fc:	95 2f       	mov	r25, r21
    53fe:	c8 2f       	mov	r28, r24
digitalRead():
    5400:	85 e2       	ldi	r24, 0x25	; 37
    5402:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
but_check():
    5406:	88 23       	and	r24, r24
    5408:	61 f0       	breq	.+24     	; 0x5422 <main+0x900>
    540a:	dd 20       	and	r13, r13
    540c:	09 f4       	brne	.+2      	; 0x5410 <main+0x8ee>
    540e:	c9 cf       	rjmp	.-110    	; 0x53a2 <main+0x880>
digitalRead():
    5410:	85 e2       	ldi	r24, 0x25	; 37
    5412:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
but_check():
    5416:	81 30       	cpi	r24, 0x01	; 1
    5418:	09 f0       	breq	.+2      	; 0x541c <main+0x8fa>
    541a:	3f c0       	rjmp	.+126    	; 0x549a <main+0x978>
    541c:	10 92 42 28 	sts	0x2842, r1	; 0x802842 <but1>
    5420:	c0 cf       	rjmp	.-128    	; 0x53a2 <main+0x880>
    5422:	c0 90 50 29 	lds	r12, 0x2950	; 0x802950 <LONG_PRESS>
digitalRead():
    5426:	84 e2       	ldi	r24, 0x24	; 36
    5428:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
but_check():
    542c:	81 11       	cpse	r24, r1
    542e:	ed cf       	rjmp	.-38     	; 0x540a <main+0x8e8>
    5430:	dd 20       	and	r13, r13
    5432:	09 f4       	brne	.+2      	; 0x5436 <main+0x914>
    5434:	b6 cf       	rjmp	.-148    	; 0x53a2 <main+0x880>
    5436:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <millis>
    543a:	80 90 3e 28 	lds	r8, 0x283E	; 0x80283e <start_tt>
    543e:	90 90 3f 28 	lds	r9, 0x283F	; 0x80283f <start_tt+0x1>
    5442:	a0 90 40 28 	lds	r10, 0x2840	; 0x802840 <start_tt+0x2>
    5446:	b0 90 41 28 	lds	r11, 0x2841	; 0x802841 <start_tt+0x3>
    544a:	68 19       	sub	r22, r8
    544c:	79 09       	sbc	r23, r9
    544e:	8a 09       	sbc	r24, r10
    5450:	9b 09       	sbc	r25, r11
    5452:	68 3b       	cpi	r22, 0xB8	; 184
    5454:	7b 40       	sbci	r23, 0x0B	; 11
    5456:	81 05       	cpc	r24, r1
    5458:	91 05       	cpc	r25, r1
    545a:	08 f4       	brcc	.+2      	; 0x545e <main+0x93c>
    545c:	a2 cf       	rjmp	.-188    	; 0x53a2 <main+0x880>
    545e:	84 ef       	ldi	r24, 0xF4	; 244
    5460:	91 e0       	ldi	r25, 0x01	; 1
    5462:	0e 94 14 0b 	call	0x1628	; 0x1628 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    5466:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <ENTER_BUT>
    546a:	81 11       	cpse	r24, r1
    546c:	9a cf       	rjmp	.-204    	; 0x53a2 <main+0x880>
    546e:	c1 10       	cpse	r12, r1
    5470:	9e cf       	rjmp	.-196    	; 0x53ae <main+0x88c>
    5472:	8e e5       	ldi	r24, 0x5E	; 94
    5474:	91 e0       	ldi	r25, 0x01	; 1
    5476:	80 93 a0 28 	sts	0x28A0, r24	; 0x8028a0 <i>
    547a:	90 93 a1 28 	sts	0x28A1, r25	; 0x8028a1 <i+0x1>
    547e:	81 e0       	ldi	r24, 0x01	; 1
    5480:	80 93 50 29 	sts	0x2950, r24	; 0x802950 <LONG_PRESS>
    5484:	80 93 43 28 	sts	0x2843, r24	; 0x802843 <RST_BUTT>
    5488:	80 93 46 28 	sts	0x2846, r24	; 0x802846 <Service_Menu>
    548c:	85 e0       	ldi	r24, 0x05	; 5
    548e:	90 e0       	ldi	r25, 0x00	; 0
    5490:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5494:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5498:	84 cf       	rjmp	.-248    	; 0x53a2 <main+0x880>
digitalRead():
    549a:	84 e2       	ldi	r24, 0x24	; 36
    549c:	0e 94 23 09 	call	0x1246	; 0x1246 <digitalRead.part.3>
but_check():
    54a0:	81 30       	cpi	r24, 0x01	; 1
    54a2:	09 f0       	breq	.+2      	; 0x54a6 <main+0x984>
    54a4:	7e cf       	rjmp	.-260    	; 0x53a2 <main+0x880>
    54a6:	ba cf       	rjmp	.-140    	; 0x541c <main+0x8fa>
SET_LONG_PRESS_FUNCTION():
    54a8:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    54ac:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    54b0:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    54b4:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    54b8:	8c e0       	ldi	r24, 0x0C	; 12
    54ba:	90 e0       	ldi	r25, 0x00	; 0
    54bc:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    54c0:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    54c4:	80 e1       	ldi	r24, 0x10	; 16
    54c6:	90 e0       	ldi	r25, 0x00	; 0
    54c8:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    54cc:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    54d0:	60 92 ed 28 	sts	0x28ED, r6	; 0x8028ed <digits2+0x4>
    54d4:	70 92 ee 28 	sts	0x28EE, r7	; 0x8028ee <digits2+0x5>
    54d8:	81 e1       	ldi	r24, 0x11	; 17
    54da:	90 e0       	ldi	r25, 0x00	; 0
    54dc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    54e0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    54e4:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    54e8:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    54ec:	89 31       	cpi	r24, 0x19	; 25
    54ee:	91 05       	cpc	r25, r1
    54f0:	4c f4       	brge	.+18     	; 0x5504 <main+0x9e2>
DISPLAY_DIGIT1():
    54f2:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    54f6:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    54fa:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    54fe:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5502:	5c c7       	rjmp	.+3768   	; 0x63bc <main+0x189a>
SET_LONG_PRESS_FUNCTION():
    5504:	20 91 1d 29 	lds	r18, 0x291D	; 0x80291d <SET_LONG_VALUE>
    5508:	30 91 1e 29 	lds	r19, 0x291E	; 0x80291e <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    550c:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <digits1>
    5510:	10 92 f2 28 	sts	0x28F2, r1	; 0x8028f2 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    5514:	23 2b       	or	r18, r19
    5516:	b1 f4       	brne	.+44     	; 0x5544 <main+0xa22>
DISPLAY_DIGIT1():
    5518:	25 e1       	ldi	r18, 0x15	; 21
    551a:	30 e0       	ldi	r19, 0x00	; 0
    551c:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    5520:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    5524:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1+0x4>
    5528:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x5>
    552c:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x6>
    5530:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5534:	c3 97       	sbiw	r24, 0x33	; 51
    5536:	0c f4       	brge	.+2      	; 0x553a <main+0xa18>
    5538:	a1 ce       	rjmp	.-702    	; 0x527c <main+0x75a>
    553a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    553e:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    5542:	9c ce       	rjmp	.-712    	; 0x527c <main+0x75a>
DISPLAY_DIGIT1():
    5544:	24 e1       	ldi	r18, 0x14	; 20
    5546:	30 e0       	ldi	r19, 0x00	; 0
    5548:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    554c:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    5550:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5554:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    5558:	e9 cf       	rjmp	.-46     	; 0x552c <main+0xa0a>
SET_LONG_PRESS_FUNCTION():
    555a:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    555e:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5562:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
DISPLAY_DIGIT2():
    5566:	8c e1       	ldi	r24, 0x1C	; 28
    5568:	90 e0       	ldi	r25, 0x00	; 0
    556a:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    556e:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5572:	84 e1       	ldi	r24, 0x14	; 20
    5574:	90 e0       	ldi	r25, 0x00	; 0
    5576:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    557a:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    557e:	60 92 ed 28 	sts	0x28ED, r6	; 0x8028ed <digits2+0x4>
    5582:	70 92 ee 28 	sts	0x28EE, r7	; 0x8028ee <digits2+0x5>
    5586:	80 e1       	ldi	r24, 0x10	; 16
    5588:	90 e0       	ldi	r25, 0x00	; 0
    558a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    558e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5592:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5596:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    559a:	89 31       	cpi	r24, 0x19	; 25
    559c:	91 05       	cpc	r25, r1
    559e:	0c f4       	brge	.+2      	; 0x55a2 <main+0xa80>
    55a0:	a8 cf       	rjmp	.-176    	; 0x54f2 <main+0x9d0>
    55a2:	20 91 1f 29 	lds	r18, 0x291F	; 0x80291f <SET_LONG_VALUE+0x2>
    55a6:	30 91 20 29 	lds	r19, 0x2920	; 0x802920 <SET_LONG_VALUE+0x3>
    55aa:	23 2b       	or	r18, r19
    55ac:	59 f4       	brne	.+22     	; 0x55c4 <main+0xaa2>
DISPLAY_DIGIT1():
    55ae:	2d e1       	ldi	r18, 0x1D	; 29
    55b0:	30 e0       	ldi	r19, 0x00	; 0
    55b2:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    55b6:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    55ba:	e0 92 f3 28 	sts	0x28F3, r14	; 0x8028f3 <digits1+0x2>
    55be:	f0 92 f4 28 	sts	0x28F4, r15	; 0x8028f4 <digits1+0x3>
    55c2:	c6 cf       	rjmp	.-116    	; 0x5550 <main+0xa2e>
    55c4:	2d e1       	ldi	r18, 0x1D	; 29
    55c6:	30 e0       	ldi	r19, 0x00	; 0
    55c8:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    55cc:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    55d0:	25 e1       	ldi	r18, 0x15	; 21
    55d2:	30 e0       	ldi	r19, 0x00	; 0
    55d4:	b9 cf       	rjmp	.-142    	; 0x5548 <main+0xa26>
SET_LONG_PRESS_FUNCTION():
    55d6:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    55da:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
DISPLAY_DIGIT2():
    55de:	8c e0       	ldi	r24, 0x0C	; 12
    55e0:	90 e0       	ldi	r25, 0x00	; 0
    55e2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    55e6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    55ea:	8d e0       	ldi	r24, 0x0D	; 13
    55ec:	90 e0       	ldi	r25, 0x00	; 0
    55ee:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    55f2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    55f6:	85 e1       	ldi	r24, 0x15	; 21
    55f8:	90 e0       	ldi	r25, 0x00	; 0
    55fa:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    55fe:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5602:	8f e0       	ldi	r24, 0x0F	; 15
    5604:	90 e0       	ldi	r25, 0x00	; 0
    5606:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    560a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
    560e:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    5612:	20 91 a0 28 	lds	r18, 0x28A0	; 0x8028a0 <i>
    5616:	30 91 a1 28 	lds	r19, 0x28A1	; 0x8028a1 <i+0x1>
    561a:	29 31       	cpi	r18, 0x19	; 25
    561c:	31 05       	cpc	r19, r1
    561e:	d4 f4       	brge	.+52     	; 0x5654 <main+0xb32>
    5620:	90 91 9e 28 	lds	r25, 0x289E	; 0x80289e <BLINK_STATS>
    5624:	91 11       	cpse	r25, r1
    5626:	11 c0       	rjmp	.+34     	; 0x564a <main+0xb28>
DISPLAY_DIGIT1():
    5628:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    562c:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5630:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5634:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5638:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    563c:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5640:	88 23       	and	r24, r24
    5642:	f1 f0       	breq	.+60     	; 0x5680 <main+0xb5e>
    5644:	85 e1       	ldi	r24, 0x15	; 21
    5646:	90 e0       	ldi	r25, 0x00	; 0
    5648:	7d c0       	rjmp	.+250    	; 0x5744 <main+0xc22>
    564a:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    564e:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5652:	f6 cf       	rjmp	.-20     	; 0x5640 <main+0xb1e>
    5654:	81 11       	cpse	r24, r1
    5656:	19 c0       	rjmp	.+50     	; 0x568a <main+0xb68>
    5658:	80 91 21 29 	lds	r24, 0x2921	; 0x802921 <SET_LONG_VALUE+0x4>
    565c:	90 91 22 29 	lds	r25, 0x2922	; 0x802922 <SET_LONG_VALUE+0x5>
    5660:	2a e0       	ldi	r18, 0x0A	; 10
    5662:	28 9f       	mul	r18, r24
    5664:	b0 01       	movw	r22, r0
    5666:	29 9f       	mul	r18, r25
    5668:	70 0d       	add	r23, r0
    566a:	11 24       	eor	r1, r1
    566c:	07 2e       	mov	r0, r23
    566e:	00 0c       	add	r0, r0
    5670:	88 0b       	sbc	r24, r24
    5672:	99 0b       	sbc	r25, r25
    5674:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5678:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    567c:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5680:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x6>
    5684:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x7>
    5688:	04 c1       	rjmp	.+520    	; 0x5892 <main+0xd70>
    568a:	80 91 45 29 	lds	r24, 0x2945	; 0x802945 <SET_LONG_VALUE+0x28>
    568e:	90 91 46 29 	lds	r25, 0x2946	; 0x802946 <SET_LONG_VALUE+0x29>
    5692:	2a e0       	ldi	r18, 0x0A	; 10
    5694:	28 9f       	mul	r18, r24
    5696:	b0 01       	movw	r22, r0
    5698:	29 9f       	mul	r18, r25
    569a:	70 0d       	add	r23, r0
    569c:	11 24       	eor	r1, r1
    569e:	07 2e       	mov	r0, r23
    56a0:	00 0c       	add	r0, r0
    56a2:	88 0b       	sbc	r24, r24
    56a4:	99 0b       	sbc	r25, r25
    56a6:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    56aa:	cc cf       	rjmp	.-104    	; 0x5644 <main+0xb22>
    56ac:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    56b0:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    56b4:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    56b8:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    56bc:	80 e1       	ldi	r24, 0x10	; 16
    56be:	90 e0       	ldi	r25, 0x00	; 0
    56c0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    56c4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    56c8:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x2>
    56cc:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x3>
    56d0:	22 e1       	ldi	r18, 0x12	; 18
    56d2:	30 e0       	ldi	r19, 0x00	; 0
    56d4:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    56d8:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    56dc:	2f e0       	ldi	r18, 0x0F	; 15
    56de:	30 e0       	ldi	r19, 0x00	; 0
    56e0:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    56e4:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    56e8:	20 91 a0 28 	lds	r18, 0x28A0	; 0x8028a0 <i>
    56ec:	30 91 a1 28 	lds	r19, 0x28A1	; 0x8028a1 <i+0x1>
    56f0:	29 31       	cpi	r18, 0x19	; 25
    56f2:	31 05       	cpc	r19, r1
    56f4:	8c f4       	brge	.+34     	; 0x5718 <main+0xbf6>
    56f6:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    56fa:	81 11       	cpse	r24, r1
    56fc:	d3 c3       	rjmp	.+1958   	; 0x5ea4 <main+0x1382>
DISPLAY_DIGIT1():
    56fe:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    5702:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5706:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    570a:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    570e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5712:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    5716:	b9 c0       	rjmp	.+370    	; 0x588a <main+0xd68>
SET_LONG_PRESS_FUNCTION():
    5718:	20 91 23 29 	lds	r18, 0x2923	; 0x802923 <SET_LONG_VALUE+0x6>
    571c:	30 91 24 29 	lds	r19, 0x2924	; 0x802924 <SET_LONG_VALUE+0x7>
    5720:	23 2b       	or	r18, r19
    5722:	a9 f4       	brne	.+42     	; 0x574e <main+0xc2c>
DISPLAY_DIGIT1():
    5724:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5728:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    572c:	27 e1       	ldi	r18, 0x17	; 23
    572e:	30 e0       	ldi	r19, 0x00	; 0
    5730:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    5734:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    5738:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    573c:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5740:	8f e1       	ldi	r24, 0x1F	; 31
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    5748:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    574c:	a2 c0       	rjmp	.+324    	; 0x5892 <main+0xd70>
    574e:	8c e0       	ldi	r24, 0x0C	; 12
    5750:	90 e0       	ldi	r25, 0x00	; 0
    5752:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5756:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    575a:	87 e1       	ldi	r24, 0x17	; 23
    575c:	90 e0       	ldi	r25, 0x00	; 0
    575e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    5762:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    5766:	8d e0       	ldi	r24, 0x0D	; 13
    5768:	90 e0       	ldi	r25, 0x00	; 0
    576a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    576e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5772:	86 cf       	rjmp	.-244    	; 0x5680 <main+0xb5e>
SET_LONG_PRESS_FUNCTION():
    5774:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5778:	8b e0       	ldi	r24, 0x0B	; 11
    577a:	90 e0       	ldi	r25, 0x00	; 0
    577c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5780:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5784:	81 e1       	ldi	r24, 0x11	; 17
    5786:	90 e0       	ldi	r25, 0x00	; 0
    5788:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    578c:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5790:	87 e1       	ldi	r24, 0x17	; 23
    5792:	90 e0       	ldi	r25, 0x00	; 0
    5794:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    5798:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    579c:	8c e0       	ldi	r24, 0x0C	; 12
    579e:	90 e0       	ldi	r25, 0x00	; 0
    57a0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    57a4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    57a8:	20 91 a0 28 	lds	r18, 0x28A0	; 0x8028a0 <i>
    57ac:	30 91 a1 28 	lds	r19, 0x28A1	; 0x8028a1 <i+0x1>
    57b0:	29 31       	cpi	r18, 0x19	; 25
    57b2:	31 05       	cpc	r19, r1
    57b4:	0c f4       	brge	.+2      	; 0x57b8 <main+0xc96>
    57b6:	9f cf       	rjmp	.-194    	; 0x56f6 <main+0xbd4>
    57b8:	20 91 25 29 	lds	r18, 0x2925	; 0x802925 <SET_LONG_VALUE+0x8>
    57bc:	30 91 26 29 	lds	r19, 0x2926	; 0x802926 <SET_LONG_VALUE+0x9>
    57c0:	23 2b       	or	r18, r19
    57c2:	89 f4       	brne	.+34     	; 0x57e6 <main+0xcc4>
DISPLAY_DIGIT1():
    57c4:	20 e2       	ldi	r18, 0x20	; 32
    57c6:	30 e0       	ldi	r19, 0x00	; 0
    57c8:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    57cc:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    57d0:	60 92 f3 28 	sts	0x28F3, r6	; 0x8028f3 <digits1+0x2>
    57d4:	70 92 f4 28 	sts	0x28F4, r7	; 0x8028f4 <digits1+0x3>
    57d8:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    57dc:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    57e0:	8e e0       	ldi	r24, 0x0E	; 14
    57e2:	90 e0       	ldi	r25, 0x00	; 0
    57e4:	af cf       	rjmp	.-162    	; 0x5744 <main+0xc22>
    57e6:	8f e0       	ldi	r24, 0x0F	; 15
    57e8:	90 e0       	ldi	r25, 0x00	; 0
    57ea:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    57ee:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    57f2:	84 e1       	ldi	r24, 0x14	; 20
    57f4:	90 e0       	ldi	r25, 0x00	; 0
    57f6:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    57fa:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    57fe:	8e e0       	ldi	r24, 0x0E	; 14
    5800:	90 e0       	ldi	r25, 0x00	; 0
    5802:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    5806:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    580a:	8a e1       	ldi	r24, 0x1A	; 26
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	9a cf       	rjmp	.-204    	; 0x5744 <main+0xc22>
SET_LONG_PRESS_FUNCTION():
    5810:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5814:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    5818:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    581c:	8b e0       	ldi	r24, 0x0B	; 11
    581e:	90 e0       	ldi	r25, 0x00	; 0
    5820:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5824:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5828:	81 e1       	ldi	r24, 0x11	; 17
    582a:	90 e0       	ldi	r25, 0x00	; 0
    582c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5830:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5834:	80 e2       	ldi	r24, 0x20	; 32
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    583c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5840:	80 e1       	ldi	r24, 0x10	; 16
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5848:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    584c:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5850:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5854:	49 97       	sbiw	r24, 0x19	; 25
    5856:	0c f4       	brge	.+2      	; 0x585a <main+0xd38>
    5858:	4e cf       	rjmp	.-356    	; 0x56f6 <main+0xbd4>
    585a:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0xa>
    585e:	90 91 28 29 	lds	r25, 0x2928	; 0x802928 <SET_LONG_VALUE+0xb>
    5862:	89 2b       	or	r24, r25
    5864:	d9 f0       	breq	.+54     	; 0x589c <main+0xd7a>
DISPLAY_DIGIT1():
    5866:	84 e2       	ldi	r24, 0x24	; 36
    5868:	90 e0       	ldi	r25, 0x00	; 0
    586a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    586e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    5872:	8a e1       	ldi	r24, 0x1A	; 26
    5874:	90 e0       	ldi	r25, 0x00	; 0
    5876:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    587a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    587e:	8c e0       	ldi	r24, 0x0C	; 12
    5880:	90 e0       	ldi	r25, 0x00	; 0
    5882:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    5886:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    588a:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x6>
    588e:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5892:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5896:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    589a:	4c ce       	rjmp	.-872    	; 0x5534 <main+0xa12>
DISPLAY_DIGIT1():
    589c:	84 e2       	ldi	r24, 0x24	; 36
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    58a4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    58a8:	8a e1       	ldi	r24, 0x1A	; 26
    58aa:	90 e0       	ldi	r25, 0x00	; 0
    58ac:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    58b0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    58b4:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x4>
    58b8:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x5>
    58bc:	e6 cf       	rjmp	.-52     	; 0x588a <main+0xd68>
SET_LONG_PRESS_FUNCTION():
    58be:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    58c2:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    58c6:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    58ca:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    58ce:	2d e0       	ldi	r18, 0x0D	; 13
    58d0:	30 e0       	ldi	r19, 0x00	; 0
    58d2:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    58d6:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    58da:	8a e1       	ldi	r24, 0x1A	; 26
    58dc:	90 e0       	ldi	r25, 0x00	; 0
    58de:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    58e2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    58e6:	4e e0       	ldi	r20, 0x0E	; 14
    58e8:	50 e0       	ldi	r21, 0x00	; 0
    58ea:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits2+0x6>
    58ee:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    58f2:	40 91 a0 28 	lds	r20, 0x28A0	; 0x8028a0 <i>
    58f6:	50 91 a1 28 	lds	r21, 0x28A1	; 0x8028a1 <i+0x1>
    58fa:	49 31       	cpi	r20, 0x19	; 25
    58fc:	51 05       	cpc	r21, r1
    58fe:	0c f4       	brge	.+2      	; 0x5902 <main+0xde0>
    5900:	f8 cd       	rjmp	.-1040   	; 0x54f2 <main+0x9d0>
    5902:	60 91 29 29 	lds	r22, 0x2929	; 0x802929 <SET_LONG_VALUE+0xc>
    5906:	70 91 2a 29 	lds	r23, 0x292A	; 0x80292a <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    590a:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1>
    590e:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x1>
    5912:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    5916:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    591a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    591e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5922:	82 e0       	ldi	r24, 0x02	; 2
    5924:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    5926:	67 2b       	or	r22, r23
    5928:	11 f4       	brne	.+4      	; 0x592e <main+0xe0c>
DISPLAY_DIGIT1():
    592a:	81 e0       	ldi	r24, 0x01	; 1
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    5932:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    5936:	43 33       	cpi	r20, 0x33	; 51
    5938:	51 05       	cpc	r21, r1
    593a:	0c f0       	brlt	.+2      	; 0x593e <main+0xe1c>
    593c:	fe cd       	rjmp	.-1028   	; 0x553a <main+0xa18>
    593e:	9e cc       	rjmp	.-1732   	; 0x527c <main+0x75a>
    5940:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    5944:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5948:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    594c:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    5950:	8d e0       	ldi	r24, 0x0D	; 13
    5952:	90 e0       	ldi	r25, 0x00	; 0
    5954:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5958:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    595c:	8a e1       	ldi	r24, 0x1A	; 26
    595e:	90 e0       	ldi	r25, 0x00	; 0
    5960:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    5964:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5968:	81 e0       	ldi	r24, 0x01	; 1
    596a:	90 e0       	ldi	r25, 0x00	; 0
    596c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5970:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5974:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5978:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    597c:	49 97       	sbiw	r24, 0x19	; 25
    597e:	04 f5       	brge	.+64     	; 0x59c0 <main+0xe9e>
    5980:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5984:	81 11       	cpse	r24, r1
    5986:	cd c1       	rjmp	.+922    	; 0x5d22 <main+0x1200>
    5988:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    598c:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5990:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5994:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5998:	73 ce       	rjmp	.-794    	; 0x5680 <main+0xb5e>
    599a:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    599e:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    59a2:	20 91 4f 29 	lds	r18, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    59a6:	21 11       	cpse	r18, r1
    59a8:	28 c0       	rjmp	.+80     	; 0x59fa <main+0xed8>
    59aa:	49 97       	sbiw	r24, 0x19	; 25
    59ac:	4c f4       	brge	.+18     	; 0x59c0 <main+0xe9e>
    59ae:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    59b2:	81 11       	cpse	r24, r1
    59b4:	b6 c1       	rjmp	.+876    	; 0x5d22 <main+0x1200>
    59b6:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    59ba:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    59be:	60 ce       	rjmp	.-832    	; 0x5680 <main+0xb5e>
    59c0:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0xe>
    59c4:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0xf>
    59c8:	24 e6       	ldi	r18, 0x64	; 100
    59ca:	28 9f       	mul	r18, r24
    59cc:	b0 01       	movw	r22, r0
    59ce:	29 9f       	mul	r18, r25
    59d0:	70 0d       	add	r23, r0
    59d2:	11 24       	eor	r1, r1
    59d4:	20 91 2d 29 	lds	r18, 0x292D	; 0x80292d <SET_LONG_VALUE+0x10>
    59d8:	30 91 2e 29 	lds	r19, 0x292E	; 0x80292e <SET_LONG_VALUE+0x11>
    59dc:	4a e0       	ldi	r20, 0x0A	; 10
    59de:	42 9f       	mul	r20, r18
    59e0:	c0 01       	movw	r24, r0
    59e2:	43 9f       	mul	r20, r19
    59e4:	90 0d       	add	r25, r0
    59e6:	11 24       	eor	r1, r1
    59e8:	68 0f       	add	r22, r24
    59ea:	79 1f       	adc	r23, r25
    59ec:	07 2e       	mov	r0, r23
    59ee:	00 0c       	add	r0, r0
    59f0:	88 0b       	sbc	r24, r24
    59f2:	99 0b       	sbc	r25, r25
    59f4:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    59f8:	43 ce       	rjmp	.-890    	; 0x5680 <main+0xb5e>
    59fa:	49 97       	sbiw	r24, 0x19	; 25
    59fc:	b4 f4       	brge	.+44     	; 0x5a2a <main+0xf08>
    59fe:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5a02:	81 11       	cpse	r24, r1
    5a04:	0d c0       	rjmp	.+26     	; 0x5a20 <main+0xefe>
DISPLAY_DIGIT1():
    5a06:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    5a0a:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5a0e:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5a12:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5a16:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5a1a:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    5a1e:	12 ce       	rjmp	.-988    	; 0x5644 <main+0xb22>
SET_LONG_PRESS_FUNCTION():
    5a20:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5a24:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5a28:	0d ce       	rjmp	.-998    	; 0x5644 <main+0xb22>
    5a2a:	80 91 47 29 	lds	r24, 0x2947	; 0x802947 <SET_LONG_VALUE+0x2a>
    5a2e:	90 91 48 29 	lds	r25, 0x2948	; 0x802948 <SET_LONG_VALUE+0x2b>
    5a32:	2f ce       	rjmp	.-930    	; 0x5692 <main+0xb70>
    5a34:	dd 24       	eor	r13, r13
    5a36:	d3 94       	inc	r13
    5a38:	d0 92 bc 28 	sts	0x28BC, r13	; 0x8028bc <DOT1_0>
    5a3c:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5a40:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5a44:	d0 92 b0 28 	sts	0x28B0, r13	; 0x8028b0 <CAL2_START>
DISPLAY_DIGIT2():
    5a48:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    5a4c:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    5a50:	8d e0       	ldi	r24, 0x0D	; 13
    5a52:	90 e0       	ldi	r25, 0x00	; 0
    5a54:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5a58:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5a5c:	8a e1       	ldi	r24, 0x1A	; 26
    5a5e:	90 e0       	ldi	r25, 0x00	; 0
    5a60:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    5a64:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5a68:	82 e0       	ldi	r24, 0x02	; 2
    5a6a:	90 e0       	ldi	r25, 0x00	; 0
    5a6c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5a70:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5a74:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5a78:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5a7c:	49 97       	sbiw	r24, 0x19	; 25
    5a7e:	c4 f4       	brge	.+48     	; 0x5ab0 <main+0xf8e>
    5a80:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5a84:	81 11       	cpse	r24, r1
    5a86:	0f c0       	rjmp	.+30     	; 0x5aa6 <main+0xf84>
DISPLAY_DIGIT1():
    5a88:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5a8c:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5a90:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5a94:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5a98:	8a e1       	ldi	r24, 0x1A	; 26
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
    5a9c:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5aa0:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    5aa4:	ed cd       	rjmp	.-1062   	; 0x5680 <main+0xb5e>
    5aa6:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5aaa:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5aae:	f4 cf       	rjmp	.-24     	; 0x5a98 <main+0xf76>
    5ab0:	80 91 2f 29 	lds	r24, 0x292F	; 0x80292f <SET_LONG_VALUE+0x12>
    5ab4:	90 91 30 29 	lds	r25, 0x2930	; 0x802930 <SET_LONG_VALUE+0x13>
    5ab8:	2a e0       	ldi	r18, 0x0A	; 10
    5aba:	28 9f       	mul	r18, r24
    5abc:	b0 01       	movw	r22, r0
    5abe:	29 9f       	mul	r18, r25
    5ac0:	70 0d       	add	r23, r0
    5ac2:	11 24       	eor	r1, r1
    5ac4:	07 2e       	mov	r0, r23
    5ac6:	00 0c       	add	r0, r0
    5ac8:	88 0b       	sbc	r24, r24
    5aca:	99 0b       	sbc	r25, r25
    5acc:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5ad0:	e3 cf       	rjmp	.-58     	; 0x5a98 <main+0xf76>
    5ad2:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5ad6:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    5ada:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    5ade:	8d e0       	ldi	r24, 0x0D	; 13
    5ae0:	90 e0       	ldi	r25, 0x00	; 0
    5ae2:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5ae6:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5aea:	8a e1       	ldi	r24, 0x1A	; 26
    5aec:	90 e0       	ldi	r25, 0x00	; 0
    5aee:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    5af2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5af6:	82 e0       	ldi	r24, 0x02	; 2
    5af8:	90 e0       	ldi	r25, 0x00	; 0
    5afa:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5afe:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5b02:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5b06:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5b0a:	49 97       	sbiw	r24, 0x19	; 25
    5b0c:	b4 f4       	brge	.+44     	; 0x5b3a <main+0x1018>
    5b0e:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5b12:	81 11       	cpse	r24, r1
    5b14:	0d c0       	rjmp	.+26     	; 0x5b30 <main+0x100e>
DISPLAY_DIGIT1():
    5b16:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5b1a:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5b1e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5b22:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5b26:	40 92 f1 28 	sts	0x28F1, r4	; 0x8028f1 <digits1>
    5b2a:	50 92 f2 28 	sts	0x28F2, r5	; 0x8028f2 <digits1+0x1>
    5b2e:	a8 cd       	rjmp	.-1200   	; 0x5680 <main+0xb5e>
    5b30:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5b34:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5b38:	f6 cf       	rjmp	.-20     	; 0x5b26 <main+0x1004>
    5b3a:	80 91 31 29 	lds	r24, 0x2931	; 0x802931 <SET_LONG_VALUE+0x14>
    5b3e:	90 91 32 29 	lds	r25, 0x2932	; 0x802932 <SET_LONG_VALUE+0x15>
    5b42:	2a e0       	ldi	r18, 0x0A	; 10
    5b44:	28 9f       	mul	r18, r24
    5b46:	b0 01       	movw	r22, r0
    5b48:	29 9f       	mul	r18, r25
    5b4a:	70 0d       	add	r23, r0
    5b4c:	11 24       	eor	r1, r1
    5b4e:	07 2e       	mov	r0, r23
    5b50:	00 0c       	add	r0, r0
    5b52:	88 0b       	sbc	r24, r24
    5b54:	99 0b       	sbc	r25, r25
    5b56:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5b5a:	e5 cf       	rjmp	.-54     	; 0x5b26 <main+0x1004>
    5b5c:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5b60:	81 e0       	ldi	r24, 0x01	; 1
    5b62:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
    5b66:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5b6a:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5b6e:	07 2e       	mov	r0, r23
    5b70:	00 0c       	add	r0, r0
    5b72:	88 0b       	sbc	r24, r24
    5b74:	99 0b       	sbc	r25, r25
    5b76:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5b7a:	8a e1       	ldi	r24, 0x1A	; 26
    5b7c:	90 e0       	ldi	r25, 0x00	; 0
    5b7e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5b82:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5b86:	87 e1       	ldi	r24, 0x17	; 23
    5b88:	90 e0       	ldi	r25, 0x00	; 0
    5b8a:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5b8e:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5b92:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5b96:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5b9a:	49 97       	sbiw	r24, 0x19	; 25
    5b9c:	6c f4       	brge	.+26     	; 0x5bb8 <main+0x1096>
    5b9e:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5ba2:	81 11       	cpse	r24, r1
    5ba4:	7f c1       	rjmp	.+766    	; 0x5ea4 <main+0x1382>
    5ba6:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    5baa:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    5bae:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    5bb2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    5bb6:	6d ce       	rjmp	.-806    	; 0x5892 <main+0xd70>
    5bb8:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x16>
    5bbc:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x17>
    5bc0:	24 e6       	ldi	r18, 0x64	; 100
    5bc2:	28 9f       	mul	r18, r24
    5bc4:	b0 01       	movw	r22, r0
    5bc6:	29 9f       	mul	r18, r25
    5bc8:	70 0d       	add	r23, r0
    5bca:	11 24       	eor	r1, r1
    5bcc:	20 91 35 29 	lds	r18, 0x2935	; 0x802935 <SET_LONG_VALUE+0x18>
    5bd0:	30 91 36 29 	lds	r19, 0x2936	; 0x802936 <SET_LONG_VALUE+0x19>
    5bd4:	03 cf       	rjmp	.-506    	; 0x59dc <main+0xeba>
    5bd6:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5bda:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5bde:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5be2:	07 2e       	mov	r0, r23
    5be4:	00 0c       	add	r0, r0
    5be6:	88 0b       	sbc	r24, r24
    5be8:	99 0b       	sbc	r25, r25
    5bea:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5bee:	8a e1       	ldi	r24, 0x1A	; 26
    5bf0:	90 e0       	ldi	r25, 0x00	; 0
    5bf2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5bf6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5bfa:	87 e1       	ldi	r24, 0x17	; 23
    5bfc:	90 e0       	ldi	r25, 0x00	; 0
    5bfe:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5c02:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5c06:	c0 90 33 29 	lds	r12, 0x2933	; 0x802933 <SET_LONG_VALUE+0x16>
    5c0a:	d0 90 34 29 	lds	r13, 0x2934	; 0x802934 <SET_LONG_VALUE+0x17>
    5c0e:	a0 90 35 29 	lds	r10, 0x2935	; 0x802935 <SET_LONG_VALUE+0x18>
    5c12:	b0 90 36 29 	lds	r11, 0x2936	; 0x802936 <SET_LONG_VALUE+0x19>
    5c16:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5c1a:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5c1e:	49 97       	sbiw	r24, 0x19	; 25
    5c20:	f4 f5       	brge	.+124    	; 0x5c9e <main+0x117c>
    5c22:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5c26:	81 11       	cpse	r24, r1
    5c28:	35 c0       	rjmp	.+106    	; 0x5c94 <main+0x1172>
    5c2a:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5c2e:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    5c32:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x6>
    5c36:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x7>
    5c3a:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5c3e:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5c42:	c3 97       	sbiw	r24, 0x33	; 51
    5c44:	24 f0       	brlt	.+8      	; 0x5c4e <main+0x112c>
    5c46:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    5c4a:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    5c4e:	b5 01       	movw	r22, r10
    5c50:	bb 0c       	add	r11, r11
    5c52:	88 0b       	sbc	r24, r24
    5c54:	99 0b       	sbc	r25, r25
    5c56:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    5c5a:	20 e0       	ldi	r18, 0x00	; 0
    5c5c:	30 e0       	ldi	r19, 0x00	; 0
    5c5e:	40 e2       	ldi	r20, 0x20	; 32
    5c60:	51 e4       	ldi	r21, 0x41	; 65
    5c62:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    5c66:	4b 01       	movw	r8, r22
    5c68:	5c 01       	movw	r10, r24
    5c6a:	b6 01       	movw	r22, r12
    5c6c:	dd 0c       	add	r13, r13
    5c6e:	88 0b       	sbc	r24, r24
    5c70:	99 0b       	sbc	r25, r25
    5c72:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    5c76:	9b 01       	movw	r18, r22
    5c78:	ac 01       	movw	r20, r24
    5c7a:	c5 01       	movw	r24, r10
    5c7c:	b4 01       	movw	r22, r8
    5c7e:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    5c82:	60 93 4d 28 	sts	0x284D, r22	; 0x80284d <CAL2_CALCULATED_LOW_CAL_VALUE>
    5c86:	70 93 4e 28 	sts	0x284E, r23	; 0x80284e <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    5c8a:	80 93 4f 28 	sts	0x284F, r24	; 0x80284f <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    5c8e:	90 93 50 28 	sts	0x2850, r25	; 0x802850 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    5c92:	f4 ca       	rjmp	.-2584   	; 0x527c <main+0x75a>
    5c94:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5c98:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5c9c:	ca cf       	rjmp	.-108    	; 0x5c32 <main+0x1110>
    5c9e:	84 e6       	ldi	r24, 0x64	; 100
    5ca0:	8c 9d       	mul	r24, r12
    5ca2:	b0 01       	movw	r22, r0
    5ca4:	8d 9d       	mul	r24, r13
    5ca6:	70 0d       	add	r23, r0
    5ca8:	11 24       	eor	r1, r1
    5caa:	2a e0       	ldi	r18, 0x0A	; 10
    5cac:	2a 9d       	mul	r18, r10
    5cae:	c0 01       	movw	r24, r0
    5cb0:	2b 9d       	mul	r18, r11
    5cb2:	90 0d       	add	r25, r0
    5cb4:	11 24       	eor	r1, r1
    5cb6:	68 0f       	add	r22, r24
    5cb8:	79 1f       	adc	r23, r25
    5cba:	07 2e       	mov	r0, r23
    5cbc:	00 0c       	add	r0, r0
    5cbe:	88 0b       	sbc	r24, r24
    5cc0:	99 0b       	sbc	r25, r25
    5cc2:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5cc6:	b5 cf       	rjmp	.-150    	; 0x5c32 <main+0x1110>
    5cc8:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5ccc:	60 91 4b 28 	lds	r22, 0x284B	; 0x80284b <HIGH_CAL_VALUE_SET>
    5cd0:	70 91 4c 28 	lds	r23, 0x284C	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    5cd4:	07 2e       	mov	r0, r23
    5cd6:	00 0c       	add	r0, r0
    5cd8:	88 0b       	sbc	r24, r24
    5cda:	99 0b       	sbc	r25, r25
    5cdc:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5ce0:	40 92 e9 28 	sts	0x28E9, r4	; 0x8028e9 <digits2>
    5ce4:	50 92 ea 28 	sts	0x28EA, r5	; 0x8028ea <digits2+0x1>
    5ce8:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x2>
    5cec:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x3>
    5cf0:	81 e0       	ldi	r24, 0x01	; 1
    5cf2:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
    5cf6:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5cfa:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5cfe:	49 97       	sbiw	r24, 0x19	; 25
    5d00:	0c f4       	brge	.+2      	; 0x5d04 <main+0x11e2>
    5d02:	3e ce       	rjmp	.-900    	; 0x5980 <main+0xe5e>
    5d04:	80 91 37 29 	lds	r24, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1a>
    5d08:	90 91 38 29 	lds	r25, 0x2938	; 0x802938 <SET_LONG_VALUE+0x1b>
    5d0c:	24 e6       	ldi	r18, 0x64	; 100
    5d0e:	28 9f       	mul	r18, r24
    5d10:	b0 01       	movw	r22, r0
    5d12:	29 9f       	mul	r18, r25
    5d14:	70 0d       	add	r23, r0
    5d16:	11 24       	eor	r1, r1
    5d18:	20 91 39 29 	lds	r18, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1c>
    5d1c:	30 91 3a 29 	lds	r19, 0x293A	; 0x80293a <SET_LONG_VALUE+0x1d>
    5d20:	5d ce       	rjmp	.-838    	; 0x59dc <main+0xeba>
    5d22:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5d26:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5d2a:	aa cc       	rjmp	.-1708   	; 0x5680 <main+0xb5e>
    5d2c:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5d30:	60 91 4b 28 	lds	r22, 0x284B	; 0x80284b <HIGH_CAL_VALUE_SET>
    5d34:	70 91 4c 28 	lds	r23, 0x284C	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    5d38:	07 2e       	mov	r0, r23
    5d3a:	00 0c       	add	r0, r0
    5d3c:	88 0b       	sbc	r24, r24
    5d3e:	99 0b       	sbc	r25, r25
    5d40:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5d44:	40 92 e9 28 	sts	0x28E9, r4	; 0x8028e9 <digits2>
    5d48:	50 92 ea 28 	sts	0x28EA, r5	; 0x8028ea <digits2+0x1>
    5d4c:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x2>
    5d50:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x3>
    5d54:	81 e0       	ldi	r24, 0x01	; 1
    5d56:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
    5d5a:	c0 90 37 29 	lds	r12, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1a>
    5d5e:	d0 90 38 29 	lds	r13, 0x2938	; 0x802938 <SET_LONG_VALUE+0x1b>
    5d62:	a0 90 39 29 	lds	r10, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1c>
    5d66:	b0 90 3a 29 	lds	r11, 0x293A	; 0x80293a <SET_LONG_VALUE+0x1d>
    5d6a:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5d6e:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5d72:	49 97       	sbiw	r24, 0x19	; 25
    5d74:	f4 f5       	brge	.+124    	; 0x5df2 <main+0x12d0>
    5d76:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <BLINK_STATS>
    5d7a:	81 11       	cpse	r24, r1
    5d7c:	35 c0       	rjmp	.+106    	; 0x5de8 <main+0x12c6>
    5d7e:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    5d82:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    5d86:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x6>
    5d8a:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x7>
    5d8e:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    5d92:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    5d96:	c3 97       	sbiw	r24, 0x33	; 51
    5d98:	24 f0       	brlt	.+8      	; 0x5da2 <main+0x1280>
    5d9a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    5d9e:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    5da2:	b5 01       	movw	r22, r10
    5da4:	bb 0c       	add	r11, r11
    5da6:	88 0b       	sbc	r24, r24
    5da8:	99 0b       	sbc	r25, r25
    5daa:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    5dae:	20 e0       	ldi	r18, 0x00	; 0
    5db0:	30 e0       	ldi	r19, 0x00	; 0
    5db2:	40 e2       	ldi	r20, 0x20	; 32
    5db4:	51 e4       	ldi	r21, 0x41	; 65
    5db6:	0e 94 2d 38 	call	0x705a	; 0x705a <__divsf3>
    5dba:	4b 01       	movw	r8, r22
    5dbc:	5c 01       	movw	r10, r24
    5dbe:	b6 01       	movw	r22, r12
    5dc0:	dd 0c       	add	r13, r13
    5dc2:	88 0b       	sbc	r24, r24
    5dc4:	99 0b       	sbc	r25, r25
    5dc6:	0e 94 c8 38 	call	0x7190	; 0x7190 <__floatsisf>
    5dca:	9b 01       	movw	r18, r22
    5dcc:	ac 01       	movw	r20, r24
    5dce:	c5 01       	movw	r24, r10
    5dd0:	b4 01       	movw	r22, r8
    5dd2:	0e 94 c5 37 	call	0x6f8a	; 0x6f8a <__addsf3>
    5dd6:	60 93 47 28 	sts	0x2847, r22	; 0x802847 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    5dda:	70 93 48 28 	sts	0x2848, r23	; 0x802848 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    5dde:	80 93 49 28 	sts	0x2849, r24	; 0x802849 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    5de2:	90 93 4a 28 	sts	0x284A, r25	; 0x80284a <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    5de6:	4a ca       	rjmp	.-2924   	; 0x527c <main+0x75a>
    5de8:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5dec:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5df0:	ca cf       	rjmp	.-108    	; 0x5d86 <main+0x1264>
    5df2:	84 e6       	ldi	r24, 0x64	; 100
    5df4:	8c 9d       	mul	r24, r12
    5df6:	b0 01       	movw	r22, r0
    5df8:	8d 9d       	mul	r24, r13
    5dfa:	70 0d       	add	r23, r0
    5dfc:	11 24       	eor	r1, r1
    5dfe:	2a e0       	ldi	r18, 0x0A	; 10
    5e00:	2a 9d       	mul	r18, r10
    5e02:	c0 01       	movw	r24, r0
    5e04:	2b 9d       	mul	r18, r11
    5e06:	90 0d       	add	r25, r0
    5e08:	11 24       	eor	r1, r1
    5e0a:	68 0f       	add	r22, r24
    5e0c:	79 1f       	adc	r23, r25
    5e0e:	07 2e       	mov	r0, r23
    5e10:	00 0c       	add	r0, r0
    5e12:	88 0b       	sbc	r24, r24
    5e14:	99 0b       	sbc	r25, r25
    5e16:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5e1a:	b5 cf       	rjmp	.-150    	; 0x5d86 <main+0x1264>
    5e1c:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <Service_Menu>
    5e20:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <LONG_PRESS>
    5e24:	2b ca       	rjmp	.-2986   	; 0x527c <main+0x75a>
    5e26:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5e2a:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    5e2e:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5e32:	40 92 e9 28 	sts	0x28E9, r4	; 0x8028e9 <digits2>
    5e36:	50 92 ea 28 	sts	0x28EA, r5	; 0x8028ea <digits2+0x1>
    5e3a:	8f e0       	ldi	r24, 0x0F	; 15
    5e3c:	90 e0       	ldi	r25, 0x00	; 0
    5e3e:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5e42:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5e46:	2d e0       	ldi	r18, 0x0D	; 13
    5e48:	30 e0       	ldi	r19, 0x00	; 0
    5e4a:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    5e4e:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    5e52:	80 e1       	ldi	r24, 0x10	; 16
    5e54:	90 e0       	ldi	r25, 0x00	; 0
    5e56:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5e5a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5e5e:	40 91 a0 28 	lds	r20, 0x28A0	; 0x8028a0 <i>
    5e62:	50 91 a1 28 	lds	r21, 0x28A1	; 0x8028a1 <i+0x1>
    5e66:	49 31       	cpi	r20, 0x19	; 25
    5e68:	51 05       	cpc	r21, r1
    5e6a:	0c f4       	brge	.+2      	; 0x5e6e <main+0x134c>
    5e6c:	44 cc       	rjmp	.-1912   	; 0x56f6 <main+0xbd4>
    5e6e:	40 91 3d 29 	lds	r20, 0x293D	; 0x80293d <SET_LONG_VALUE+0x20>
    5e72:	50 91 3e 29 	lds	r21, 0x293E	; 0x80293e <SET_LONG_VALUE+0x21>
    5e76:	45 2b       	or	r20, r21
    5e78:	d1 f4       	brne	.+52     	; 0x5eae <main+0x138c>
DISPLAY_DIGIT1():
    5e7a:	8c e0       	ldi	r24, 0x0C	; 12
    5e7c:	90 e0       	ldi	r25, 0x00	; 0
    5e7e:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5e82:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    5e86:	8a e1       	ldi	r24, 0x1A	; 26
    5e88:	90 e0       	ldi	r25, 0x00	; 0
    5e8a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    5e8e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    5e92:	87 e1       	ldi	r24, 0x17	; 23
    5e94:	90 e0       	ldi	r25, 0x00	; 0
    5e96:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    5e9a:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5e9e:	84 e2       	ldi	r24, 0x24	; 36
    5ea0:	90 e0       	ldi	r25, 0x00	; 0
    5ea2:	50 cc       	rjmp	.-1888   	; 0x5744 <main+0xc22>
SET_LONG_PRESS_FUNCTION():
    5ea4:	60 92 a0 28 	sts	0x28A0, r6	; 0x8028a0 <i>
    5ea8:	70 92 a1 28 	sts	0x28A1, r7	; 0x8028a1 <i+0x1>
    5eac:	f2 cc       	rjmp	.-1564   	; 0x5892 <main+0xd70>
DISPLAY_DIGIT1():
    5eae:	45 e1       	ldi	r20, 0x15	; 21
    5eb0:	50 e0       	ldi	r21, 0x00	; 0
    5eb2:	40 93 f1 28 	sts	0x28F1, r20	; 0x8028f1 <digits1>
    5eb6:	50 93 f2 28 	sts	0x28F2, r21	; 0x8028f2 <digits1+0x1>
    5eba:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    5ebe:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    5ec2:	2c e0       	ldi	r18, 0x0C	; 12
    5ec4:	30 e0       	ldi	r19, 0x00	; 0
    5ec6:	20 93 f5 28 	sts	0x28F5, r18	; 0x8028f5 <digits1+0x4>
    5eca:	30 93 f6 28 	sts	0x28F6, r19	; 0x8028f6 <digits1+0x5>
    5ece:	3a cc       	rjmp	.-1932   	; 0x5744 <main+0xc22>
SET_LONG_PRESS_FUNCTION():
    5ed0:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    5ed4:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5ed8:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    5edc:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5ee0:	80 91 53 28 	lds	r24, 0x2853	; 0x802853 <processLog>
    5ee4:	90 91 54 28 	lds	r25, 0x2854	; 0x802854 <processLog+0x1>
    5ee8:	2a e0       	ldi	r18, 0x0A	; 10
    5eea:	28 9f       	mul	r18, r24
    5eec:	b0 01       	movw	r22, r0
    5eee:	29 9f       	mul	r18, r25
    5ef0:	70 0d       	add	r23, r0
    5ef2:	11 24       	eor	r1, r1
    5ef4:	90 e0       	ldi	r25, 0x00	; 0
    5ef6:	80 e0       	ldi	r24, 0x00	; 0
    5ef8:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5efc:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits2+0x6>
    5f00:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits2+0x7>
    5f04:	60 91 51 28 	lds	r22, 0x2851	; 0x802851 <processLogNumberOfTimes>
    5f08:	70 91 52 28 	lds	r23, 0x2852	; 0x802852 <processLogNumberOfTimes+0x1>
    5f0c:	90 e0       	ldi	r25, 0x00	; 0
    5f0e:	80 e0       	ldi	r24, 0x00	; 0
    5f10:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5f14:	8d e0       	ldi	r24, 0x0D	; 13
    5f16:	90 e0       	ldi	r25, 0x00	; 0
    5f18:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5f1c:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    5f20:	10 92 44 28 	sts	0x2844, r1	; 0x802844 <currentMillis>
    5f24:	10 92 45 28 	sts	0x2845, r1	; 0x802845 <currentMillis+0x1>
    5f28:	a9 c9       	rjmp	.-3246   	; 0x527c <main+0x75a>
    5f2a:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    5f2e:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5f32:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    5f36:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5f3a:	8c e0       	ldi	r24, 0x0C	; 12
    5f3c:	90 e0       	ldi	r25, 0x00	; 0
    5f3e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5f42:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5f46:	2c e1       	ldi	r18, 0x1C	; 28
    5f48:	30 e0       	ldi	r19, 0x00	; 0
    5f4a:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    5f4e:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    5f52:	41 e1       	ldi	r20, 0x11	; 17
    5f54:	50 e0       	ldi	r21, 0x00	; 0
    5f56:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x4>
    5f5a:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x5>
    5f5e:	2f e0       	ldi	r18, 0x0F	; 15
    5f60:	30 e0       	ldi	r19, 0x00	; 0
    5f62:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    5f66:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    5f6a:	40 93 f1 28 	sts	0x28F1, r20	; 0x8028f1 <digits1>
    5f6e:	50 93 f2 28 	sts	0x28F2, r21	; 0x8028f2 <digits1+0x1>
    5f72:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    5f76:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    5f7a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    5f7e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5f82:	80 e1       	ldi	r24, 0x10	; 16
    5f84:	90 e0       	ldi	r25, 0x00	; 0
    5f86:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    5f8a:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    5f8e:	c8 cf       	rjmp	.-112    	; 0x5f20 <main+0x13fe>
SET_LONG_PRESS_FUNCTION():
    5f90:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    5f94:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    5f98:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    5f9c:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5fa0:	80 91 44 28 	lds	r24, 0x2844	; 0x802844 <currentMillis>
    5fa4:	90 91 45 28 	lds	r25, 0x2845	; 0x802845 <currentMillis+0x1>
    5fa8:	8f 31       	cpi	r24, 0x1F	; 31
    5faa:	91 05       	cpc	r25, r1
    5fac:	38 f5       	brcc	.+78     	; 0x5ffc <main+0x14da>
digitalWrite():
    5fae:	61 e0       	ldi	r22, 0x01	; 1
    5fb0:	85 e1       	ldi	r24, 0x15	; 21
    5fb2:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5fb6:	86 e1       	ldi	r24, 0x16	; 22
    5fb8:	90 e0       	ldi	r25, 0x00	; 0
    5fba:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    5fbe:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    5fc2:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    5fc6:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    5fca:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    5fce:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    5fd2:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    5fd6:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    5fda:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    5fde:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    5fe2:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    5fe6:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    5fea:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    5fee:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    5ff2:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <digits1+0x6>
    5ff6:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <digits1+0x7>
    5ffa:	40 c9       	rjmp	.-3456   	; 0x527c <main+0x75a>
SET_LONG_PRESS_FUNCTION():
    5ffc:	9c 01       	movw	r18, r24
    5ffe:	29 52       	subi	r18, 0x29	; 41
    6000:	31 09       	sbc	r19, r1
    6002:	22 38       	cpi	r18, 0x82	; 130
    6004:	31 05       	cpc	r19, r1
    6006:	58 f5       	brcc	.+86     	; 0x605e <main+0x153c>
digitalWrite():
    6008:	60 e0       	ldi	r22, 0x00	; 0
    600a:	85 e1       	ldi	r24, 0x15	; 21
    600c:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    6010:	81 e1       	ldi	r24, 0x11	; 17
    6012:	90 e0       	ldi	r25, 0x00	; 0
    6014:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6018:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    601c:	8f e0       	ldi	r24, 0x0F	; 15
    601e:	90 e0       	ldi	r25, 0x00	; 0
    6020:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6024:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6028:	2c e0       	ldi	r18, 0x0C	; 12
    602a:	30 e0       	ldi	r19, 0x00	; 0
    602c:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    6030:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    6034:	20 e1       	ldi	r18, 0x10	; 16
    6036:	30 e0       	ldi	r19, 0x00	; 0
    6038:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    603c:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    6040:	20 e2       	ldi	r18, 0x20	; 32
    6042:	30 e0       	ldi	r19, 0x00	; 0
    6044:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    6048:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    604c:	27 e1       	ldi	r18, 0x17	; 23
    604e:	30 e0       	ldi	r19, 0x00	; 0
    6050:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    6054:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    6058:	24 e1       	ldi	r18, 0x14	; 20
    605a:	30 e0       	ldi	r19, 0x00	; 0
    605c:	82 c9       	rjmp	.-3324   	; 0x5362 <main+0x840>
SET_LONG_PRESS_FUNCTION():
    605e:	8b 3a       	cpi	r24, 0xAB	; 171
    6060:	91 05       	cpc	r25, r1
    6062:	0c f4       	brge	.+2      	; 0x6066 <main+0x1544>
    6064:	0b c9       	rjmp	.-3562   	; 0x527c <main+0x75a>
EEPROM_CLEAR():
    6066:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <STIR_VALUE_SET>
    606a:	10 92 4f 29 	sts	0x294F, r1	; 0x80294f <DEGREE_VALUE_SET>
    606e:	23 e6       	ldi	r18, 0x63	; 99
    6070:	30 e0       	ldi	r19, 0x00	; 0
    6072:	20 93 0e 29 	sts	0x290E, r18	; 0x80290e <SAFE_VALUE_SET_DEG>
    6076:	30 93 0f 29 	sts	0x290F, r19	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
    607a:	84 ed       	ldi	r24, 0xD4	; 212
    607c:	90 e0       	ldi	r25, 0x00	; 0
    607e:	80 93 0c 29 	sts	0x290C, r24	; 0x80290c <SAFE_VALUE_SET_FAH>
    6082:	90 93 0d 29 	sts	0x290D, r25	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
    6086:	10 92 d4 28 	sts	0x28D4, r1	; 0x8028d4 <CAL_SELECT_VALUE>
    608a:	10 92 d5 28 	sts	0x28D5, r1	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
    608e:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <ERROR_CAL1>
    6092:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <ERROR_CAL1+0x1>
    6096:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <ERROR_CAL1+0x2>
    609a:	10 92 09 29 	sts	0x2909, r1	; 0x802909 <ERROR_CAL1+0x3>
    609e:	10 92 e8 28 	sts	0x28E8, r1	; 0x8028e8 <SIGN>
    60a2:	41 e0       	ldi	r20, 0x01	; 1
    60a4:	40 93 e3 28 	sts	0x28E3, r20	; 0x8028e3 <ERROR_SET_IN_DEG_FLAG>
    60a8:	10 92 de 28 	sts	0x28DE, r1	; 0x8028de <ERROR_SET_IN_FAH_FLAG>
    60ac:	4e e1       	ldi	r20, 0x1E	; 30
    60ae:	50 e0       	ldi	r21, 0x00	; 0
    60b0:	60 e0       	ldi	r22, 0x00	; 0
    60b2:	70 e0       	ldi	r23, 0x00	; 0
    60b4:	40 93 cc 28 	sts	0x28CC, r20	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV>
    60b8:	50 93 cd 28 	sts	0x28CD, r21	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x1>
    60bc:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <CAL2_RAW_LOW_VALUE_CONV+0x2>
    60c0:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <CAL2_RAW_LOW_VALUE_CONV+0x3>
    60c4:	44 e5       	ldi	r20, 0x54	; 84
    60c6:	50 e0       	ldi	r21, 0x00	; 0
    60c8:	60 e0       	ldi	r22, 0x00	; 0
    60ca:	70 e0       	ldi	r23, 0x00	; 0
    60cc:	40 93 c8 28 	sts	0x28C8, r20	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV>
    60d0:	50 93 c9 28 	sts	0x28C9, r21	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    60d4:	60 93 ca 28 	sts	0x28CA, r22	; 0x8028ca <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    60d8:	70 93 cb 28 	sts	0x28CB, r23	; 0x8028cb <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    60dc:	4c e1       	ldi	r20, 0x1C	; 28
    60de:	50 e0       	ldi	r21, 0x00	; 0
    60e0:	60 e0       	ldi	r22, 0x00	; 0
    60e2:	70 e0       	ldi	r23, 0x00	; 0
    60e4:	40 93 c4 28 	sts	0x28C4, r20	; 0x8028c4 <MASTER_LOW_CONV>
    60e8:	50 93 c5 28 	sts	0x28C5, r21	; 0x8028c5 <MASTER_LOW_CONV+0x1>
    60ec:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <MASTER_LOW_CONV+0x2>
    60f0:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <MASTER_LOW_CONV+0x3>
    60f4:	42 e5       	ldi	r20, 0x52	; 82
    60f6:	50 e0       	ldi	r21, 0x00	; 0
    60f8:	60 e0       	ldi	r22, 0x00	; 0
    60fa:	70 e0       	ldi	r23, 0x00	; 0
    60fc:	40 93 c0 28 	sts	0x28C0, r20	; 0x8028c0 <MASTER_HIGH_CONV>
    6100:	50 93 c1 28 	sts	0x28C1, r21	; 0x8028c1 <MASTER_HIGH_CONV+0x1>
    6104:	60 93 c2 28 	sts	0x28C2, r22	; 0x8028c2 <MASTER_HIGH_CONV+0x2>
    6108:	70 93 c3 28 	sts	0x28C3, r23	; 0x8028c3 <MASTER_HIGH_CONV+0x3>
    610c:	10 92 64 28 	sts	0x2864, r1	; 0x802864 <TIME_SOCK_OR_TOTAL>
    6110:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    6114:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <select_product_type>
    6118:	10 92 fd 28 	sts	0x28FD, r1	; 0x8028fd <select_heating_type>
    611c:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_LONG_VALUE>
    6120:	10 92 1e 29 	sts	0x291E, r1	; 0x80291e <SET_LONG_VALUE+0x1>
    6124:	10 92 1f 29 	sts	0x291F, r1	; 0x80291f <SET_LONG_VALUE+0x2>
    6128:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <SET_LONG_VALUE+0x3>
    612c:	20 93 21 29 	sts	0x2921, r18	; 0x802921 <SET_LONG_VALUE+0x4>
    6130:	30 93 22 29 	sts	0x2922, r19	; 0x802922 <SET_LONG_VALUE+0x5>
    6134:	80 93 45 29 	sts	0x2945, r24	; 0x802945 <SET_LONG_VALUE+0x28>
    6138:	90 93 46 29 	sts	0x2946, r25	; 0x802946 <SET_LONG_VALUE+0x29>
    613c:	10 92 29 29 	sts	0x2929, r1	; 0x802929 <SET_LONG_VALUE+0xc>
    6140:	10 92 2a 29 	sts	0x292A, r1	; 0x80292a <SET_LONG_VALUE+0xd>
    6144:	10 92 23 29 	sts	0x2923, r1	; 0x802923 <SET_LONG_VALUE+0x6>
    6148:	10 92 24 29 	sts	0x2924, r1	; 0x802924 <SET_LONG_VALUE+0x7>
    614c:	10 92 25 29 	sts	0x2925, r1	; 0x802925 <SET_LONG_VALUE+0x8>
    6150:	10 92 26 29 	sts	0x2926, r1	; 0x802926 <SET_LONG_VALUE+0x9>
    6154:	10 92 3d 29 	sts	0x293D, r1	; 0x80293d <SET_LONG_VALUE+0x20>
    6158:	10 92 3e 29 	sts	0x293E, r1	; 0x80293e <SET_LONG_VALUE+0x21>
    615c:	10 92 27 29 	sts	0x2927, r1	; 0x802927 <SET_LONG_VALUE+0xa>
    6160:	10 92 28 29 	sts	0x2928, r1	; 0x802928 <SET_LONG_VALUE+0xb>
    6164:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <SET_HOUR>
    6168:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <SET_HOUR+0x1>
    616c:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <SET_MINUTE>
    6170:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <SET_MINUTE+0x1>
    6174:	85 e2       	ldi	r24, 0x25	; 37
    6176:	90 e0       	ldi	r25, 0x00	; 0
    6178:	80 93 12 29 	sts	0x2912, r24	; 0x802912 <SET_VALUE+0x2>
    617c:	90 93 13 29 	sts	0x2913, r25	; 0x802913 <SET_VALUE+0x3>
    6180:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_VALUE+0x4>
    6184:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_VALUE+0x5>
    6188:	80 e2       	ldi	r24, 0x20	; 32
    618a:	90 e0       	ldi	r25, 0x00	; 0
    618c:	80 93 3c 29 	sts	0x293C, r24	; 0x80293c <SET_LONG_VALUE+0x1f>
    6190:	90 93 3d 29 	sts	0x293D, r25	; 0x80293d <SET_LONG_VALUE+0x20>
    6194:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x6>
    6198:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0x7>
    619c:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0x8>
    61a0:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <SET_VALUE+0x9>
    61a4:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <Process_Interrupt_flag>
    61a8:	60 e0       	ldi	r22, 0x00	; 0
    61aa:	81 e0       	ldi	r24, 0x01	; 1
    61ac:	90 e0       	ldi	r25, 0x00	; 0
    61ae:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61b2:	63 e6       	ldi	r22, 0x63	; 99
    61b4:	82 e0       	ldi	r24, 0x02	; 2
    61b6:	90 e0       	ldi	r25, 0x00	; 0
    61b8:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61bc:	6c e0       	ldi	r22, 0x0C	; 12
    61be:	79 e2       	ldi	r23, 0x29	; 41
    61c0:	83 e0       	ldi	r24, 0x03	; 3
    61c2:	90 e0       	ldi	r25, 0x00	; 0
    61c4:	0e 94 58 11 	call	0x22b0	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    61c8:	60 e0       	ldi	r22, 0x00	; 0
    61ca:	85 e0       	ldi	r24, 0x05	; 5
    61cc:	90 e0       	ldi	r25, 0x00	; 0
    61ce:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61d2:	60 e0       	ldi	r22, 0x00	; 0
    61d4:	8f e0       	ldi	r24, 0x0F	; 15
    61d6:	90 e0       	ldi	r25, 0x00	; 0
    61d8:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61dc:	0e 94 ff 10 	call	0x21fe	; 0x21fe <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    61e0:	60 e0       	ldi	r22, 0x00	; 0
    61e2:	87 e0       	ldi	r24, 0x07	; 7
    61e4:	90 e0       	ldi	r25, 0x00	; 0
    61e6:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61ea:	61 e0       	ldi	r22, 0x01	; 1
    61ec:	88 e0       	ldi	r24, 0x08	; 8
    61ee:	90 e0       	ldi	r25, 0x00	; 0
    61f0:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61f4:	60 e0       	ldi	r22, 0x00	; 0
    61f6:	89 e0       	ldi	r24, 0x09	; 9
    61f8:	90 e0       	ldi	r25, 0x00	; 0
    61fa:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    61fe:	6c ec       	ldi	r22, 0xCC	; 204
    6200:	78 e2       	ldi	r23, 0x28	; 40
    6202:	80 e5       	ldi	r24, 0x50	; 80
    6204:	90 e0       	ldi	r25, 0x00	; 0
    6206:	0e 94 26 11 	call	0x224c	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    620a:	68 ec       	ldi	r22, 0xC8	; 200
    620c:	78 e2       	ldi	r23, 0x28	; 40
    620e:	8a e5       	ldi	r24, 0x5A	; 90
    6210:	90 e0       	ldi	r25, 0x00	; 0
    6212:	0e 94 26 11 	call	0x224c	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    6216:	64 ec       	ldi	r22, 0xC4	; 196
    6218:	78 e2       	ldi	r23, 0x28	; 40
    621a:	84 e6       	ldi	r24, 0x64	; 100
    621c:	90 e0       	ldi	r25, 0x00	; 0
    621e:	0e 94 26 11 	call	0x224c	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
    6222:	60 ec       	ldi	r22, 0xC0	; 192
    6224:	78 e2       	ldi	r23, 0x28	; 40
    6226:	8e e6       	ldi	r24, 0x6E	; 110
    6228:	90 e0       	ldi	r25, 0x00	; 0
    622a:	0e 94 26 11 	call	0x224c	; 0x224c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.88]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    622e:	81 e4       	ldi	r24, 0x41	; 65
    6230:	90 e0       	ldi	r25, 0x00	; 0
    6232:	89 83       	std	Y+1, r24	; 0x01
    6234:	9a 83       	std	Y+2, r25	; 0x02
    6236:	60 91 64 28 	lds	r22, 0x2864	; 0x802864 <TIME_SOCK_OR_TOTAL>
    623a:	ce 01       	movw	r24, r28
    623c:	01 96       	adiw	r24, 0x01	; 1
    623e:	0e 94 ee 10 	call	0x21dc	; 0x21dc <EERef::update(unsigned char)>
EEPROM_CLEAR():
    6242:	60 91 12 29 	lds	r22, 0x2912	; 0x802912 <SET_VALUE+0x2>
    6246:	83 e7       	ldi	r24, 0x73	; 115
    6248:	90 e0       	ldi	r25, 0x00	; 0
    624a:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    624e:	60 91 14 29 	lds	r22, 0x2914	; 0x802914 <SET_VALUE+0x4>
    6252:	85 e7       	ldi	r24, 0x75	; 117
    6254:	90 e0       	ldi	r25, 0x00	; 0
    6256:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    625a:	6c e3       	ldi	r22, 0x3C	; 60
    625c:	79 e2       	ldi	r23, 0x29	; 41
    625e:	88 e7       	ldi	r24, 0x78	; 120
    6260:	90 e0       	ldi	r25, 0x00	; 0
    6262:	0e 94 58 11 	call	0x22b0	; 0x22b0 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.90]>
    6266:	60 e0       	ldi	r22, 0x00	; 0
    6268:	8d e7       	ldi	r24, 0x7D	; 125
    626a:	90 e0       	ldi	r25, 0x00	; 0
    626c:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6270:	60 e0       	ldi	r22, 0x00	; 0
    6272:	82 e8       	ldi	r24, 0x82	; 130
    6274:	90 e0       	ldi	r25, 0x00	; 0
    6276:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    627a:	60 e0       	ldi	r22, 0x00	; 0
    627c:	87 e8       	ldi	r24, 0x87	; 135
    627e:	90 e0       	ldi	r25, 0x00	; 0
    6280:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6284:	60 e0       	ldi	r22, 0x00	; 0
    6286:	86 e9       	ldi	r24, 0x96	; 150
    6288:	90 e0       	ldi	r25, 0x00	; 0
    628a:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    628e:	60 e0       	ldi	r22, 0x00	; 0
    6290:	84 e8       	ldi	r24, 0x84	; 132
    6292:	90 e0       	ldi	r25, 0x00	; 0
    6294:	0e 94 ed 10 	call	0x21da	; 0x21da <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6298:	81 e0       	ldi	r24, 0x01	; 1
    629a:	90 e0       	ldi	r25, 0x00	; 0
    629c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    62a0:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    62a4:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <Service_Menu>
    62a8:	10 92 44 28 	sts	0x2844, r1	; 0x802844 <currentMillis>
    62ac:	10 92 45 28 	sts	0x2845, r1	; 0x802845 <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    62b0:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    62b4:	b5 cd       	rjmp	.-1174   	; 0x5e20 <main+0x12fe>
    62b6:	e3 31       	cpi	r30, 0x13	; 19
    62b8:	f1 05       	cpc	r31, r1
    62ba:	10 f0       	brcs	.+4      	; 0x62c0 <main+0x179e>
    62bc:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    62c0:	ec 59       	subi	r30, 0x9C	; 156
    62c2:	fe 4c       	sbci	r31, 0xCE	; 206
    62c4:	0c 94 30 3a 	jmp	0x7460	; 0x7460 <__tablejump2__>
    62c8:	77 31       	cpi	r23, 0x17	; 23
    62ca:	b4 31       	cpi	r27, 0x14	; 20
    62cc:	ec 31       	cpi	r30, 0x1C	; 28
    62ce:	3d 32       	cpi	r19, 0x2D	; 45
    62d0:	88 32       	cpi	r24, 0x28	; 40
    62d2:	b5 32       	cpi	r27, 0x25	; 37
    62d4:	e4 32       	cpi	r30, 0x24	; 36
    62d6:	18 33       	cpi	r17, 0x38	; 56
    62d8:	68 33       	cpi	r22, 0x38	; 56
    62da:	cc 33       	cpi	r28, 0x3C	; 60
    62dc:	ff 33       	cpi	r31, 0x3F	; 63
    62de:	2c 34       	cpi	r18, 0x4C	; 76
    62e0:	d1 34       	cpi	r29, 0x41	; 65
    62e2:	8a 35       	cpi	r24, 0x5A	; 90
    62e4:	3b 36       	cpi	r19, 0x6B	; 107
    62e6:	fd 36       	cpi	r31, 0x6D	; 109
    62e8:	2e 37       	cpi	r18, 0x7E	; 126
    62ea:	61 37       	cpi	r22, 0x71	; 113
    62ec:	81 37       	cpi	r24, 0x71	; 113
    62ee:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    62f2:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    62f6:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    62fa:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    62fe:	8c e0       	ldi	r24, 0x0C	; 12
    6300:	90 e0       	ldi	r25, 0x00	; 0
    6302:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6306:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    630a:	80 e1       	ldi	r24, 0x10	; 16
    630c:	90 e0       	ldi	r25, 0x00	; 0
    630e:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6312:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6316:	60 92 ed 28 	sts	0x28ED, r6	; 0x8028ed <digits2+0x4>
    631a:	70 92 ee 28 	sts	0x28EE, r7	; 0x8028ee <digits2+0x5>
    631e:	81 e1       	ldi	r24, 0x11	; 17
    6320:	90 e0       	ldi	r25, 0x00	; 0
    6322:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6326:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    632a:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    632e:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <digits1>
    6332:	10 92 f2 28 	sts	0x28F2, r1	; 0x8028f2 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    6336:	81 11       	cpse	r24, r1
    6338:	10 c0       	rjmp	.+32     	; 0x635a <main+0x1838>
DISPLAY_DIGIT1():
    633a:	85 e1       	ldi	r24, 0x15	; 21
    633c:	90 e0       	ldi	r25, 0x00	; 0
    633e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    6342:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    6346:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    634a:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    634e:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x6>
    6352:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x7>
    6356:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    635a:	84 e1       	ldi	r24, 0x14	; 20
    635c:	90 e0       	ldi	r25, 0x00	; 0
    635e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    6362:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    6366:	2a c0       	rjmp	.+84     	; 0x63bc <main+0x189a>
SET_LONG_PRESS_FUNCTION():
    6368:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    636c:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6370:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
DISPLAY_DIGIT2():
    6374:	8c e1       	ldi	r24, 0x1C	; 28
    6376:	90 e0       	ldi	r25, 0x00	; 0
    6378:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    637c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6380:	84 e1       	ldi	r24, 0x14	; 20
    6382:	90 e0       	ldi	r25, 0x00	; 0
    6384:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6388:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    638c:	60 92 ed 28 	sts	0x28ED, r6	; 0x8028ed <digits2+0x4>
    6390:	70 92 ee 28 	sts	0x28EE, r7	; 0x8028ee <digits2+0x5>
    6394:	80 e1       	ldi	r24, 0x10	; 16
    6396:	90 e0       	ldi	r25, 0x00	; 0
    6398:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    639c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    63a0:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    63a4:	81 11       	cpse	r24, r1
    63a6:	0f c0       	rjmp	.+30     	; 0x63c6 <main+0x18a4>
DISPLAY_DIGIT1():
    63a8:	8d e1       	ldi	r24, 0x1D	; 29
    63aa:	90 e0       	ldi	r25, 0x00	; 0
    63ac:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    63b0:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    63b4:	e0 92 f3 28 	sts	0x28F3, r14	; 0x8028f3 <digits1+0x2>
    63b8:	f0 92 f4 28 	sts	0x28F4, r15	; 0x8028f4 <digits1+0x3>
    63bc:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    63c0:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    63c4:	c4 cf       	rjmp	.-120    	; 0x634e <main+0x182c>
    63c6:	8d e1       	ldi	r24, 0x1D	; 29
    63c8:	90 e0       	ldi	r25, 0x00	; 0
    63ca:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    63ce:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    63d2:	85 e1       	ldi	r24, 0x15	; 21
    63d4:	90 e0       	ldi	r25, 0x00	; 0
    63d6:	c3 cf       	rjmp	.-122    	; 0x635e <main+0x183c>
SET_LONG_PRESS_FUNCTION():
    63d8:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    63dc:	8c e0       	ldi	r24, 0x0C	; 12
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    63e4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    63e8:	8d e0       	ldi	r24, 0x0D	; 13
    63ea:	90 e0       	ldi	r25, 0x00	; 0
    63ec:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    63f0:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    63f4:	75 e1       	ldi	r23, 0x15	; 21
    63f6:	c7 2e       	mov	r12, r23
    63f8:	d1 2c       	mov	r13, r1
    63fa:	c0 92 ed 28 	sts	0x28ED, r12	; 0x8028ed <digits2+0x4>
    63fe:	d0 92 ee 28 	sts	0x28EE, r13	; 0x8028ee <digits2+0x5>
    6402:	8f e0       	ldi	r24, 0x0F	; 15
    6404:	90 e0       	ldi	r25, 0x00	; 0
    6406:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    640a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    640e:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    6412:	81 11       	cpse	r24, r1
    6414:	1a c0       	rjmp	.+52     	; 0x644a <main+0x1928>
    6416:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <SAFE_VALUE_SET_DEG>
    641a:	90 91 0f 29 	lds	r25, 0x290F	; 0x80290f <SAFE_VALUE_SET_DEG+0x1>
    641e:	2a e0       	ldi	r18, 0x0A	; 10
    6420:	28 9f       	mul	r18, r24
    6422:	b0 01       	movw	r22, r0
    6424:	29 9f       	mul	r18, r25
    6426:	70 0d       	add	r23, r0
    6428:	11 24       	eor	r1, r1
    642a:	07 2e       	mov	r0, r23
    642c:	00 0c       	add	r0, r0
    642e:	88 0b       	sbc	r24, r24
    6430:	99 0b       	sbc	r25, r25
    6432:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6436:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x6>
    643a:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x7>
    643e:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    6442:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    6446:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    644a:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    644e:	80 91 0c 29 	lds	r24, 0x290C	; 0x80290c <SAFE_VALUE_SET_FAH>
    6452:	90 91 0d 29 	lds	r25, 0x290D	; 0x80290d <SAFE_VALUE_SET_FAH+0x1>
    6456:	2a e0       	ldi	r18, 0x0A	; 10
    6458:	28 9f       	mul	r18, r24
    645a:	b0 01       	movw	r22, r0
    645c:	29 9f       	mul	r18, r25
    645e:	70 0d       	add	r23, r0
    6460:	11 24       	eor	r1, r1
    6462:	07 2e       	mov	r0, r23
    6464:	00 0c       	add	r0, r0
    6466:	88 0b       	sbc	r24, r24
    6468:	99 0b       	sbc	r25, r25
    646a:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    646e:	c0 92 f7 28 	sts	0x28F7, r12	; 0x8028f7 <digits1+0x6>
    6472:	d0 92 f8 28 	sts	0x28F8, r13	; 0x8028f8 <digits1+0x7>
    6476:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    647a:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    647e:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6482:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6486:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    648a:	80 e1       	ldi	r24, 0x10	; 16
    648c:	90 e0       	ldi	r25, 0x00	; 0
    648e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6492:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6496:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x2>
    649a:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x3>
    649e:	22 e1       	ldi	r18, 0x12	; 18
    64a0:	30 e0       	ldi	r19, 0x00	; 0
    64a2:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    64a6:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    64aa:	2f e0       	ldi	r18, 0x0F	; 15
    64ac:	30 e0       	ldi	r19, 0x00	; 0
    64ae:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    64b2:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    64b6:	20 91 64 28 	lds	r18, 0x2864	; 0x802864 <TIME_SOCK_OR_TOTAL>
    64ba:	21 11       	cpse	r18, r1
    64bc:	11 c0       	rjmp	.+34     	; 0x64e0 <main+0x19be>
DISPLAY_DIGIT1():
    64be:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    64c2:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    64c6:	27 e1       	ldi	r18, 0x17	; 23
    64c8:	30 e0       	ldi	r19, 0x00	; 0
    64ca:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    64ce:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    64d2:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    64d6:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    64da:	8f e1       	ldi	r24, 0x1F	; 31
    64dc:	90 e0       	ldi	r25, 0x00	; 0
    64de:	89 cd       	rjmp	.-1262   	; 0x5ff2 <main+0x14d0>
    64e0:	8c e0       	ldi	r24, 0x0C	; 12
    64e2:	90 e0       	ldi	r25, 0x00	; 0
    64e4:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1>
    64e8:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x1>
    64ec:	87 e1       	ldi	r24, 0x17	; 23
    64ee:	90 e0       	ldi	r25, 0x00	; 0
    64f0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    64f4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    64f8:	8d e0       	ldi	r24, 0x0D	; 13
    64fa:	90 e0       	ldi	r25, 0x00	; 0
    64fc:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    6500:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    6504:	e0 92 f7 28 	sts	0x28F7, r14	; 0x8028f7 <digits1+0x6>
    6508:	f0 92 f8 28 	sts	0x28F8, r15	; 0x8028f8 <digits1+0x7>
    650c:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    6510:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6514:	8d e0       	ldi	r24, 0x0D	; 13
    6516:	90 e0       	ldi	r25, 0x00	; 0
    6518:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    651c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6520:	82 e2       	ldi	r24, 0x22	; 34
    6522:	90 e0       	ldi	r25, 0x00	; 0
    6524:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6528:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    652c:	80 e1       	ldi	r24, 0x10	; 16
    652e:	90 e0       	ldi	r25, 0x00	; 0
    6530:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    6534:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    6538:	87 e1       	ldi	r24, 0x17	; 23
    653a:	90 e0       	ldi	r25, 0x00	; 0
    653c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6540:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    6544:	2b e0       	ldi	r18, 0x0B	; 11
    6546:	30 e0       	ldi	r19, 0x00	; 0
    6548:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    654c:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    6550:	21 e1       	ldi	r18, 0x11	; 17
    6552:	30 e0       	ldi	r19, 0x00	; 0
    6554:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    6558:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    655c:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    6560:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    6564:	8c e0       	ldi	r24, 0x0C	; 12
    6566:	90 e0       	ldi	r25, 0x00	; 0
    6568:	44 cd       	rjmp	.-1400   	; 0x5ff2 <main+0x14d0>
SET_LONG_PRESS_FUNCTION():
    656a:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    656e:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6572:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6576:	8b e0       	ldi	r24, 0x0B	; 11
    6578:	90 e0       	ldi	r25, 0x00	; 0
    657a:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    657e:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6582:	21 e1       	ldi	r18, 0x11	; 17
    6584:	30 e0       	ldi	r19, 0x00	; 0
    6586:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    658a:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    658e:	20 e2       	ldi	r18, 0x20	; 32
    6590:	30 e0       	ldi	r19, 0x00	; 0
    6592:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    6596:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    659a:	20 e1       	ldi	r18, 0x10	; 16
    659c:	30 e0       	ldi	r19, 0x00	; 0
    659e:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    65a2:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    65a6:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    65aa:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    65ae:	23 e2       	ldi	r18, 0x23	; 35
    65b0:	30 e0       	ldi	r19, 0x00	; 0
    65b2:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    65b6:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    65ba:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    65be:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    65c2:	8f e0       	ldi	r24, 0x0F	; 15
    65c4:	90 e0       	ldi	r25, 0x00	; 0
    65c6:	15 cd       	rjmp	.-1494   	; 0x5ff2 <main+0x14d0>
SET_LONG_PRESS_FUNCTION():
    65c8:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    65cc:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    65d0:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    65d4:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    65d8:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    65dc:	2d e0       	ldi	r18, 0x0D	; 13
    65de:	30 e0       	ldi	r19, 0x00	; 0
    65e0:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    65e4:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    65e8:	8a e1       	ldi	r24, 0x1A	; 26
    65ea:	90 e0       	ldi	r25, 0x00	; 0
    65ec:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    65f0:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    65f4:	4e e0       	ldi	r20, 0x0E	; 14
    65f6:	50 e0       	ldi	r21, 0x00	; 0
    65f8:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits2+0x6>
    65fc:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6600:	40 91 d4 28 	lds	r20, 0x28D4	; 0x8028d4 <CAL_SELECT_VALUE>
    6604:	50 91 d5 28 	lds	r21, 0x28D5	; 0x8028d5 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    6608:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1>
    660c:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x1>
    6610:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    6614:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    6618:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x4>
    661c:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x5>
    6620:	82 e0       	ldi	r24, 0x02	; 2
    6622:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    6624:	45 2b       	or	r20, r21
    6626:	09 f0       	breq	.+2      	; 0x662a <main+0x1b08>
    6628:	e4 cc       	rjmp	.-1592   	; 0x5ff2 <main+0x14d0>
DISPLAY_DIGIT1():
    662a:	81 e0       	ldi	r24, 0x01	; 1
    662c:	90 e0       	ldi	r25, 0x00	; 0
    662e:	e1 cc       	rjmp	.-1598   	; 0x5ff2 <main+0x14d0>
SET_LONG_PRESS_FUNCTION():
    6630:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    6634:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6638:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    663c:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    6640:	8d e0       	ldi	r24, 0x0D	; 13
    6642:	90 e0       	ldi	r25, 0x00	; 0
    6644:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6648:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    664c:	8a e1       	ldi	r24, 0x1A	; 26
    664e:	90 e0       	ldi	r25, 0x00	; 0
    6650:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    6654:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    6658:	81 e0       	ldi	r24, 0x01	; 1
    665a:	90 e0       	ldi	r25, 0x00	; 0
    665c:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6660:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6664:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    6668:	81 11       	cpse	r24, r1
    666a:	81 c0       	rjmp	.+258    	; 0x676e <main+0x1c4c>
    666c:	80 90 fe 28 	lds	r8, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    6670:	90 90 ff 28 	lds	r9, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    6674:	a0 90 00 29 	lds	r10, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    6678:	b0 90 01 29 	lds	r11, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    667c:	2d ec       	ldi	r18, 0xCD	; 205
    667e:	3c ec       	ldi	r19, 0xCC	; 204
    6680:	47 ec       	ldi	r20, 0xC7	; 199
    6682:	52 e4       	ldi	r21, 0x42	; 66
    6684:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG>
    6688:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    668c:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    6690:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    6694:	2d d6       	rcall	.+3162   	; 0x72f0 <__gesf2>
    6696:	18 16       	cp	r1, r24
    6698:	6c f4       	brge	.+26     	; 0x66b4 <main+0x1b92>
    669a:	20 e0       	ldi	r18, 0x00	; 0
    669c:	30 e0       	ldi	r19, 0x00	; 0
    669e:	40 e2       	ldi	r20, 0x20	; 32
    66a0:	51 e4       	ldi	r21, 0x41	; 65
    66a2:	c5 01       	movw	r24, r10
    66a4:	b4 01       	movw	r22, r8
    66a6:	28 d6       	rcall	.+3152   	; 0x72f8 <__mulsf3>
    66a8:	40 d5       	rcall	.+2688   	; 0x712a <__fixsfsi>
    66aa:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    66ae:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    66b2:	28 cf       	rjmp	.-432    	; 0x6504 <main+0x19e2>
    66b4:	20 e0       	ldi	r18, 0x00	; 0
    66b6:	30 e0       	ldi	r19, 0x00	; 0
    66b8:	48 ec       	ldi	r20, 0xC8	; 200
    66ba:	52 e4       	ldi	r21, 0x42	; 66
    66bc:	c5 01       	movw	r24, r10
    66be:	b4 01       	movw	r22, r8
    66c0:	1b d6       	rcall	.+3126   	; 0x72f8 <__mulsf3>
    66c2:	33 d5       	rcall	.+2662   	; 0x712a <__fixsfsi>
    66c4:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    66c8:	81 e0       	ldi	r24, 0x01	; 1
    66ca:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
    66ce:	1a cf       	rjmp	.-460    	; 0x6504 <main+0x19e2>
    66d0:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    66d4:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    66d8:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    66dc:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    66e0:	8d e0       	ldi	r24, 0x0D	; 13
    66e2:	90 e0       	ldi	r25, 0x00	; 0
    66e4:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    66e8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    66ec:	8a e1       	ldi	r24, 0x1A	; 26
    66ee:	90 e0       	ldi	r25, 0x00	; 0
    66f0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    66f4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    66f8:	81 e0       	ldi	r24, 0x01	; 1
    66fa:	90 e0       	ldi	r25, 0x00	; 0
    66fc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6700:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6704:	80 91 4f 29 	lds	r24, 0x294F	; 0x80294f <DEGREE_VALUE_SET>
    6708:	81 11       	cpse	r24, r1
    670a:	31 c0       	rjmp	.+98     	; 0x676e <main+0x1c4c>
    670c:	60 91 fe 28 	lds	r22, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    6710:	70 91 ff 28 	lds	r23, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    6714:	80 91 00 29 	lds	r24, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    6718:	90 91 01 29 	lds	r25, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
    671c:	6b 83       	std	Y+3, r22	; 0x03
    671e:	7c 83       	std	Y+4, r23	; 0x04
    6720:	8d 83       	std	Y+5, r24	; 0x05
    6722:	9e 83       	std	Y+6, r25	; 0x06
    6724:	20 e0       	ldi	r18, 0x00	; 0
    6726:	30 e0       	ldi	r19, 0x00	; 0
    6728:	48 ec       	ldi	r20, 0xC8	; 200
    672a:	52 e4       	ldi	r21, 0x42	; 66
    672c:	e5 d5       	rcall	.+3018   	; 0x72f8 <__mulsf3>
    672e:	fd d4       	rcall	.+2554   	; 0x712a <__fixsfsi>
    6730:	4b 01       	movw	r8, r22
    6732:	5c 01       	movw	r10, r24
    6734:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6738:	2d ec       	ldi	r18, 0xCD	; 205
    673a:	3c ec       	ldi	r19, 0xCC	; 204
    673c:	47 ec       	ldi	r20, 0xC7	; 199
    673e:	52 e4       	ldi	r21, 0x42	; 66
    6740:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG>
    6744:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    6748:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    674c:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    6750:	cf d5       	rcall	.+2974   	; 0x72f0 <__gesf2>
    6752:	18 16       	cp	r1, r24
    6754:	4c f4       	brge	.+18     	; 0x6768 <main+0x1c46>
    6756:	20 e0       	ldi	r18, 0x00	; 0
    6758:	30 e0       	ldi	r19, 0x00	; 0
    675a:	40 e2       	ldi	r20, 0x20	; 32
    675c:	51 e4       	ldi	r21, 0x41	; 65
    675e:	6b 81       	ldd	r22, Y+3	; 0x03
    6760:	7c 81       	ldd	r23, Y+4	; 0x04
    6762:	8d 81       	ldd	r24, Y+5	; 0x05
    6764:	9e 81       	ldd	r25, Y+6	; 0x06
    6766:	9f cf       	rjmp	.-194    	; 0x66a6 <main+0x1b84>
    6768:	c5 01       	movw	r24, r10
    676a:	b4 01       	movw	r22, r8
    676c:	ab cf       	rjmp	.-170    	; 0x66c4 <main+0x1ba2>
    676e:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6772:	20 e0       	ldi	r18, 0x00	; 0
    6774:	30 e0       	ldi	r19, 0x00	; 0
    6776:	40 e2       	ldi	r20, 0x20	; 32
    6778:	51 e4       	ldi	r21, 0x41	; 65
    677a:	60 91 da 28 	lds	r22, 0x28DA	; 0x8028da <TEMP_FAH_RAW>
    677e:	70 91 db 28 	lds	r23, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x1>
    6782:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <TEMP_FAH_RAW+0x2>
    6786:	90 91 dd 28 	lds	r25, 0x28DD	; 0x8028dd <TEMP_FAH_RAW+0x3>
    678a:	b6 d5       	rcall	.+2924   	; 0x72f8 <__mulsf3>
    678c:	ce d4       	rcall	.+2460   	; 0x712a <__fixsfsi>
    678e:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6792:	85 e1       	ldi	r24, 0x15	; 21
    6794:	90 e0       	ldi	r25, 0x00	; 0
    6796:	2d cc       	rjmp	.-1958   	; 0x5ff2 <main+0x14d0>
    6798:	81 e0       	ldi	r24, 0x01	; 1
    679a:	80 93 bc 28 	sts	0x28BC, r24	; 0x8028bc <DOT1_0>
    679e:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    67a2:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    67a6:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    67aa:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    67ae:	8d e0       	ldi	r24, 0x0D	; 13
    67b0:	90 e0       	ldi	r25, 0x00	; 0
    67b2:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    67b6:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    67ba:	6a e1       	ldi	r22, 0x1A	; 26
    67bc:	c6 2e       	mov	r12, r22
    67be:	d1 2c       	mov	r13, r1
    67c0:	c0 92 ed 28 	sts	0x28ED, r12	; 0x8028ed <digits2+0x4>
    67c4:	d0 92 ee 28 	sts	0x28EE, r13	; 0x8028ee <digits2+0x5>
    67c8:	82 e0       	ldi	r24, 0x02	; 2
    67ca:	90 e0       	ldi	r25, 0x00	; 0
    67cc:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    67d0:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    67d4:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    67d8:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    67dc:	2a e0       	ldi	r18, 0x0A	; 10
    67de:	28 9f       	mul	r18, r24
    67e0:	b0 01       	movw	r22, r0
    67e2:	29 9f       	mul	r18, r25
    67e4:	70 0d       	add	r23, r0
    67e6:	11 24       	eor	r1, r1
    67e8:	07 2e       	mov	r0, r23
    67ea:	00 0c       	add	r0, r0
    67ec:	88 0b       	sbc	r24, r24
    67ee:	99 0b       	sbc	r25, r25
    67f0:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    67f4:	c0 92 f1 28 	sts	0x28F1, r12	; 0x8028f1 <digits1>
    67f8:	d0 92 f2 28 	sts	0x28F2, r13	; 0x8028f2 <digits1+0x1>
    67fc:	83 ce       	rjmp	.-762    	; 0x6504 <main+0x19e2>
    67fe:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6802:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    6806:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    680a:	8d e0       	ldi	r24, 0x0D	; 13
    680c:	90 e0       	ldi	r25, 0x00	; 0
    680e:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6812:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6816:	8a e1       	ldi	r24, 0x1A	; 26
    6818:	90 e0       	ldi	r25, 0x00	; 0
    681a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    681e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    6822:	82 e0       	ldi	r24, 0x02	; 2
    6824:	90 e0       	ldi	r25, 0x00	; 0
    6826:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    682a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    682e:	80 91 4b 28 	lds	r24, 0x284B	; 0x80284b <HIGH_CAL_VALUE_SET>
    6832:	90 91 4c 28 	lds	r25, 0x284C	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    6836:	2a e0       	ldi	r18, 0x0A	; 10
    6838:	28 9f       	mul	r18, r24
    683a:	b0 01       	movw	r22, r0
    683c:	29 9f       	mul	r18, r25
    683e:	70 0d       	add	r23, r0
    6840:	11 24       	eor	r1, r1
    6842:	07 2e       	mov	r0, r23
    6844:	00 0c       	add	r0, r0
    6846:	88 0b       	sbc	r24, r24
    6848:	99 0b       	sbc	r25, r25
    684a:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    684e:	40 92 f1 28 	sts	0x28F1, r4	; 0x8028f1 <digits1>
    6852:	50 92 f2 28 	sts	0x28F2, r5	; 0x8028f2 <digits1+0x1>
    6856:	56 ce       	rjmp	.-852    	; 0x6504 <main+0x19e2>
    6858:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    685c:	81 e0       	ldi	r24, 0x01	; 1
    685e:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    6862:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6866:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
PID_Start():
    686a:	86 e3       	ldi	r24, 0x36	; 54
    686c:	9a e2       	ldi	r25, 0x2A	; 42
    686e:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    6872:	60 91 2f 29 	lds	r22, 0x292F	; 0x80292f <SET_LONG_VALUE+0x12>
    6876:	70 91 30 29 	lds	r23, 0x2930	; 0x802930 <SET_LONG_VALUE+0x13>
    687a:	07 2e       	mov	r0, r23
    687c:	00 0c       	add	r0, r0
    687e:	88 0b       	sbc	r24, r24
    6880:	99 0b       	sbc	r25, r25
    6882:	86 d4       	rcall	.+2316   	; 0x7190 <__floatsisf>
    6884:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    6888:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    688c:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    6890:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
digitalWrite():
    6894:	61 e0       	ldi	r22, 0x01	; 1
    6896:	88 e1       	ldi	r24, 0x18	; 24
    6898:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    689c:	3f e0       	ldi	r19, 0x0F	; 15
    689e:	83 2e       	mov	r8, r19
    68a0:	91 2c       	mov	r9, r1
    68a2:	4d e0       	ldi	r20, 0x0D	; 13
    68a4:	a4 2e       	mov	r10, r20
    68a6:	b1 2c       	mov	r11, r1
    68a8:	50 e1       	ldi	r21, 0x10	; 16
    68aa:	c5 2e       	mov	r12, r21
    68ac:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    68ae:	20 91 ee 29 	lds	r18, 0x29EE	; 0x8029ee <PID_SETPOINT>
    68b2:	30 91 ef 29 	lds	r19, 0x29EF	; 0x8029ef <PID_SETPOINT+0x1>
    68b6:	40 91 f0 29 	lds	r20, 0x29F0	; 0x8029f0 <PID_SETPOINT+0x2>
    68ba:	50 91 f1 29 	lds	r21, 0x29F1	; 0x8029f1 <PID_SETPOINT+0x3>
    68be:	60 91 f6 29 	lds	r22, 0x29F6	; 0x8029f6 <PID_INPUT>
    68c2:	70 91 f7 29 	lds	r23, 0x29F7	; 0x8029f7 <PID_INPUT+0x1>
    68c6:	80 91 f8 29 	lds	r24, 0x29F8	; 0x8029f8 <PID_INPUT+0x2>
    68ca:	90 91 f9 29 	lds	r25, 0x29F9	; 0x8029f9 <PID_INPUT+0x3>
    68ce:	c1 d3       	rcall	.+1922   	; 0x7052 <__cmpsf2>
    68d0:	87 ff       	sbrs	r24, 7
    68d2:	bb c1       	rjmp	.+886    	; 0x6c4a <main+0x2128>
    68d4:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <RST_BUTT>
    68d8:	88 23       	and	r24, r24
    68da:	09 f4       	brne	.+2      	; 0x68de <main+0x1dbc>
    68dc:	b6 c1       	rjmp	.+876    	; 0x6c4a <main+0x2128>
    68de:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    68e2:	60 91 2f 29 	lds	r22, 0x292F	; 0x80292f <SET_LONG_VALUE+0x12>
    68e6:	70 91 30 29 	lds	r23, 0x2930	; 0x802930 <SET_LONG_VALUE+0x13>
    68ea:	07 2e       	mov	r0, r23
    68ec:	00 0c       	add	r0, r0
    68ee:	88 0b       	sbc	r24, r24
    68f0:	99 0b       	sbc	r25, r25
    68f2:	4e d4       	rcall	.+2204   	; 0x7190 <__floatsisf>
    68f4:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    68f8:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    68fc:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    6900:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
    6904:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    6908:	60 e0       	ldi	r22, 0x00	; 0
    690a:	8b e1       	ldi	r24, 0x1B	; 27
    690c:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISP_UPDATE():
    6910:	8b ed       	ldi	r24, 0xDB	; 219
    6912:	9b e2       	ldi	r25, 0x2B	; 43
    6914:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    6918:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    691c:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    6920:	89 31       	cpi	r24, 0x19	; 25
    6922:	91 05       	cpc	r25, r1
    6924:	3c f5       	brge	.+78     	; 0x6974 <main+0x1e52>
DISPLAY_DIGIT1():
    6926:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    692a:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    692e:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    6932:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    6936:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    693a:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    693e:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x6>
    6942:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6946:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    694a:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    694e:	07 2e       	mov	r0, r23
    6950:	00 0c       	add	r0, r0
    6952:	88 0b       	sbc	r24, r24
    6954:	99 0b       	sbc	r25, r25
    6956:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    695a:	8a e1       	ldi	r24, 0x1A	; 26
    695c:	90 e0       	ldi	r25, 0x00	; 0
    695e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6962:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6966:	a7 e1       	ldi	r26, 0x17	; 23
    6968:	b0 e0       	ldi	r27, 0x00	; 0
    696a:	a0 93 eb 28 	sts	0x28EB, r26	; 0x8028eb <digits2+0x2>
    696e:	b0 93 ec 28 	sts	0x28EC, r27	; 0x8028ec <digits2+0x3>
    6972:	9d cf       	rjmp	.-198    	; 0x68ae <main+0x1d8c>
DISPLAY_DIGIT1():
    6974:	40 92 f1 28 	sts	0x28F1, r4	; 0x8028f1 <digits1>
    6978:	50 92 f2 28 	sts	0x28F2, r5	; 0x8028f2 <digits1+0x1>
    697c:	80 92 f3 28 	sts	0x28F3, r8	; 0x8028f3 <digits1+0x2>
    6980:	90 92 f4 28 	sts	0x28F4, r9	; 0x8028f4 <digits1+0x3>
    6984:	a0 92 f5 28 	sts	0x28F5, r10	; 0x8028f5 <digits1+0x4>
    6988:	b0 92 f6 28 	sts	0x28F6, r11	; 0x8028f6 <digits1+0x5>
    698c:	c0 92 f7 28 	sts	0x28F7, r12	; 0x8028f7 <digits1+0x6>
    6990:	d0 92 f8 28 	sts	0x28F8, r13	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6994:	c3 97       	sbiw	r24, 0x33	; 51
    6996:	bc f2       	brlt	.-82     	; 0x6946 <main+0x1e24>
    6998:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    699c:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    69a0:	d2 cf       	rjmp	.-92     	; 0x6946 <main+0x1e24>
digitalWrite():
    69a2:	61 e0       	ldi	r22, 0x01	; 1
    69a4:	88 e1       	ldi	r24, 0x18	; 24
    69a6:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    69aa:	d0 90 63 28 	lds	r13, 0x2863	; 0x802863 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    69ae:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    69b2:	81 11       	cpse	r24, r1
    69b4:	9d c0       	rjmp	.+314    	; 0x6af0 <main+0x1fce>
    69b6:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <RST_BUTT>
    69ba:	88 23       	and	r24, r24
    69bc:	09 f4       	brne	.+2      	; 0x69c0 <main+0x1e9e>
    69be:	98 c0       	rjmp	.+304    	; 0x6af0 <main+0x1fce>
    69c0:	dd 20       	and	r13, r13
    69c2:	09 f4       	brne	.+2      	; 0x69c6 <main+0x1ea4>
    69c4:	95 c0       	rjmp	.+298    	; 0x6af0 <main+0x1fce>
    69c6:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    69ca:	60 91 2f 29 	lds	r22, 0x292F	; 0x80292f <SET_LONG_VALUE+0x12>
    69ce:	70 91 30 29 	lds	r23, 0x2930	; 0x802930 <SET_LONG_VALUE+0x13>
    69d2:	07 2e       	mov	r0, r23
    69d4:	00 0c       	add	r0, r0
    69d6:	88 0b       	sbc	r24, r24
    69d8:	99 0b       	sbc	r25, r25
    69da:	da d3       	rcall	.+1972   	; 0x7190 <__floatsisf>
    69dc:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    69e0:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    69e4:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    69e8:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
DISP_UPDATE():
    69ec:	8b ed       	ldi	r24, 0xDB	; 219
    69ee:	9b e2       	ldi	r25, 0x2B	; 43
    69f0:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    69f4:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    69f8:	60 e0       	ldi	r22, 0x00	; 0
    69fa:	8a e1       	ldi	r24, 0x1A	; 26
    69fc:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    6a00:	61 e0       	ldi	r22, 0x01	; 1
    6a02:	8b e1       	ldi	r24, 0x1B	; 27
    6a04:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6a08:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6a0c:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    6a10:	07 2e       	mov	r0, r23
    6a12:	00 0c       	add	r0, r0
    6a14:	88 0b       	sbc	r24, r24
    6a16:	99 0b       	sbc	r25, r25
    6a18:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6a1c:	ea e1       	ldi	r30, 0x1A	; 26
    6a1e:	f0 e0       	ldi	r31, 0x00	; 0
    6a20:	e0 93 e9 28 	sts	0x28E9, r30	; 0x8028e9 <digits2>
    6a24:	f0 93 ea 28 	sts	0x28EA, r31	; 0x8028ea <digits2+0x1>
    6a28:	47 e1       	ldi	r20, 0x17	; 23
    6a2a:	50 e0       	ldi	r21, 0x00	; 0
    6a2c:	40 93 eb 28 	sts	0x28EB, r20	; 0x8028eb <digits2+0x2>
    6a30:	50 93 ec 28 	sts	0x28EC, r21	; 0x8028ec <digits2+0x3>
    6a34:	81 e0       	ldi	r24, 0x01	; 1
    6a36:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    6a3a:	c0 90 a0 28 	lds	r12, 0x28A0	; 0x8028a0 <i>
    6a3e:	d0 90 a1 28 	lds	r13, 0x28A1	; 0x8028a1 <i+0x1>
    6a42:	59 e1       	ldi	r21, 0x19	; 25
    6a44:	c5 16       	cp	r12, r21
    6a46:	d1 04       	cpc	r13, r1
    6a48:	bc f4       	brge	.+46     	; 0x6a78 <main+0x1f56>
DISPLAY_DIGIT1():
    6a4a:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1>
    6a4e:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x1>
    6a52:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x2>
    6a56:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x3>
    6a5a:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x4>
    6a5e:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x5>
    6a62:	20 92 f7 28 	sts	0x28F7, r2	; 0x8028f7 <digits1+0x6>
    6a66:	30 92 f8 28 	sts	0x28F8, r3	; 0x8028f8 <digits1+0x7>
digitalWrite():
    6a6a:	60 e0       	ldi	r22, 0x00	; 0
    6a6c:	85 e1       	ldi	r24, 0x15	; 21
    6a6e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6a72:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6a76:	99 cf       	rjmp	.-206    	; 0x69aa <main+0x1e88>
digitalWrite():
    6a78:	61 e0       	ldi	r22, 0x01	; 1
    6a7a:	85 e1       	ldi	r24, 0x15	; 21
    6a7c:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    6a80:	80 90 fe 28 	lds	r8, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    6a84:	90 90 ff 28 	lds	r9, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    6a88:	a0 90 00 29 	lds	r10, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    6a8c:	b0 90 01 29 	lds	r11, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6a90:	2d ec       	ldi	r18, 0xCD	; 205
    6a92:	3c ec       	ldi	r19, 0xCC	; 204
    6a94:	47 ec       	ldi	r20, 0xC7	; 199
    6a96:	52 e4       	ldi	r21, 0x42	; 66
    6a98:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG>
    6a9c:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    6aa0:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    6aa4:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    6aa8:	23 d4       	rcall	.+2118   	; 0x72f0 <__gesf2>
    6aaa:	20 e0       	ldi	r18, 0x00	; 0
    6aac:	30 e0       	ldi	r19, 0x00	; 0
    6aae:	40 e2       	ldi	r20, 0x20	; 32
    6ab0:	51 e4       	ldi	r21, 0x41	; 65
    6ab2:	18 16       	cp	r1, r24
    6ab4:	24 f0       	brlt	.+8      	; 0x6abe <main+0x1f9c>
    6ab6:	20 e0       	ldi	r18, 0x00	; 0
    6ab8:	30 e0       	ldi	r19, 0x00	; 0
    6aba:	48 ec       	ldi	r20, 0xC8	; 200
    6abc:	52 e4       	ldi	r21, 0x42	; 66
    6abe:	c5 01       	movw	r24, r10
    6ac0:	b4 01       	movw	r22, r8
    6ac2:	1a d4       	rcall	.+2100   	; 0x72f8 <__mulsf3>
    6ac4:	32 d3       	rcall	.+1636   	; 0x712a <__fixsfsi>
    6ac6:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6aca:	81 e0       	ldi	r24, 0x01	; 1
    6acc:	80 93 bb 28 	sts	0x28BB, r24	; 0x8028bb <DOT1_1>
    6ad0:	6a e0       	ldi	r22, 0x0A	; 10
    6ad2:	70 e0       	ldi	r23, 0x00	; 0
    6ad4:	60 93 f7 28 	sts	0x28F7, r22	; 0x8028f7 <digits1+0x6>
    6ad8:	70 93 f8 28 	sts	0x28F8, r23	; 0x8028f8 <digits1+0x7>
    6adc:	73 e3       	ldi	r23, 0x33	; 51
    6ade:	c7 16       	cp	r12, r23
    6ae0:	d1 04       	cpc	r13, r1
    6ae2:	0c f4       	brge	.+2      	; 0x6ae6 <main+0x1fc4>
    6ae4:	62 cf       	rjmp	.-316    	; 0x69aa <main+0x1e88>
    6ae6:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    6aea:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    6aee:	5d cf       	rjmp	.-326    	; 0x69aa <main+0x1e88>
digitalWrite():
    6af0:	60 e0       	ldi	r22, 0x00	; 0
    6af2:	88 e1       	ldi	r24, 0x18	; 24
    6af4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6af8:	8b e0       	ldi	r24, 0x0B	; 11
    6afa:	90 e0       	ldi	r25, 0x00	; 0
    6afc:	d1 10       	cpse	r13, r1
    6afe:	b5 c0       	rjmp	.+362    	; 0x6c6a <main+0x2148>
    6b00:	8d e0       	ldi	r24, 0x0D	; 13
    6b02:	90 e0       	ldi	r25, 0x00	; 0
    6b04:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6b08:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6b0c:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    6b10:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
    6b14:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    6b18:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6b1c:	81 e0       	ldi	r24, 0x01	; 1
    6b1e:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <DOT2_1>
    6b22:	60 91 31 29 	lds	r22, 0x2931	; 0x802931 <SET_LONG_VALUE+0x14>
    6b26:	70 91 32 29 	lds	r23, 0x2932	; 0x802932 <SET_LONG_VALUE+0x15>
    6b2a:	07 2e       	mov	r0, r23
    6b2c:	00 0c       	add	r0, r0
    6b2e:	88 0b       	sbc	r24, r24
    6b30:	99 0b       	sbc	r25, r25
    6b32:	2e d3       	rcall	.+1628   	; 0x7190 <__floatsisf>
    6b34:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    6b38:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    6b3c:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    6b40:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
digitalWrite():
    6b44:	61 e0       	ldi	r22, 0x01	; 1
    6b46:	88 e1       	ldi	r24, 0x18	; 24
    6b48:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6b4c:	8f e0       	ldi	r24, 0x0F	; 15
    6b4e:	c8 2e       	mov	r12, r24
    6b50:	d1 2c       	mov	r13, r1
    6b52:	9d e0       	ldi	r25, 0x0D	; 13
    6b54:	a9 2e       	mov	r10, r25
    6b56:	b1 2c       	mov	r11, r1
    6b58:	20 e1       	ldi	r18, 0x10	; 16
    6b5a:	82 2e       	mov	r8, r18
    6b5c:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    6b5e:	20 91 ee 29 	lds	r18, 0x29EE	; 0x8029ee <PID_SETPOINT>
    6b62:	30 91 ef 29 	lds	r19, 0x29EF	; 0x8029ef <PID_SETPOINT+0x1>
    6b66:	40 91 f0 29 	lds	r20, 0x29F0	; 0x8029f0 <PID_SETPOINT+0x2>
    6b6a:	50 91 f1 29 	lds	r21, 0x29F1	; 0x8029f1 <PID_SETPOINT+0x3>
    6b6e:	60 91 f6 29 	lds	r22, 0x29F6	; 0x8029f6 <PID_INPUT>
    6b72:	70 91 f7 29 	lds	r23, 0x29F7	; 0x8029f7 <PID_INPUT+0x1>
    6b76:	80 91 f8 29 	lds	r24, 0x29F8	; 0x8029f8 <PID_INPUT+0x2>
    6b7a:	90 91 f9 29 	lds	r25, 0x29F9	; 0x8029f9 <PID_INPUT+0x3>
    6b7e:	69 d2       	rcall	.+1234   	; 0x7052 <__cmpsf2>
    6b80:	87 ff       	sbrs	r24, 7
    6b82:	63 c0       	rjmp	.+198    	; 0x6c4a <main+0x2128>
    6b84:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <RST_BUTT>
    6b88:	88 23       	and	r24, r24
    6b8a:	09 f4       	brne	.+2      	; 0x6b8e <main+0x206c>
    6b8c:	5e c0       	rjmp	.+188    	; 0x6c4a <main+0x2128>
    6b8e:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6b92:	60 91 31 29 	lds	r22, 0x2931	; 0x802931 <SET_LONG_VALUE+0x14>
    6b96:	70 91 32 29 	lds	r23, 0x2932	; 0x802932 <SET_LONG_VALUE+0x15>
    6b9a:	07 2e       	mov	r0, r23
    6b9c:	00 0c       	add	r0, r0
    6b9e:	88 0b       	sbc	r24, r24
    6ba0:	99 0b       	sbc	r25, r25
    6ba2:	f6 d2       	rcall	.+1516   	; 0x7190 <__floatsisf>
    6ba4:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    6ba8:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    6bac:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    6bb0:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
    6bb4:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    6bb8:	8b ed       	ldi	r24, 0xDB	; 219
    6bba:	9b e2       	ldi	r25, 0x2B	; 43
    6bbc:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
digitalWrite():
    6bc0:	60 e0       	ldi	r22, 0x00	; 0
    6bc2:	8b e1       	ldi	r24, 0x1B	; 27
    6bc4:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6bc8:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    6bcc:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    6bd0:	89 31       	cpi	r24, 0x19	; 25
    6bd2:	91 05       	cpc	r25, r1
    6bd4:	1c f5       	brge	.+70     	; 0x6c1c <main+0x20fa>
DISPLAY_DIGIT1():
    6bd6:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1>
    6bda:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x1>
    6bde:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x2>
    6be2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x3>
    6be6:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x4>
    6bea:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x5>
    6bee:	00 93 f7 28 	sts	0x28F7, r16	; 0x8028f7 <digits1+0x6>
    6bf2:	10 93 f8 28 	sts	0x28F8, r17	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6bf6:	60 91 4b 28 	lds	r22, 0x284B	; 0x80284b <HIGH_CAL_VALUE_SET>
    6bfa:	70 91 4c 28 	lds	r23, 0x284C	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    6bfe:	07 2e       	mov	r0, r23
    6c00:	00 0c       	add	r0, r0
    6c02:	88 0b       	sbc	r24, r24
    6c04:	99 0b       	sbc	r25, r25
    6c06:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6c0a:	40 92 e9 28 	sts	0x28E9, r4	; 0x8028e9 <digits2>
    6c0e:	50 92 ea 28 	sts	0x28EA, r5	; 0x8028ea <digits2+0x1>
    6c12:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x2>
    6c16:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x3>
    6c1a:	a1 cf       	rjmp	.-190    	; 0x6b5e <main+0x203c>
DISPLAY_DIGIT1():
    6c1c:	40 92 f1 28 	sts	0x28F1, r4	; 0x8028f1 <digits1>
    6c20:	50 92 f2 28 	sts	0x28F2, r5	; 0x8028f2 <digits1+0x1>
    6c24:	c0 92 f3 28 	sts	0x28F3, r12	; 0x8028f3 <digits1+0x2>
    6c28:	d0 92 f4 28 	sts	0x28F4, r13	; 0x8028f4 <digits1+0x3>
    6c2c:	a0 92 f5 28 	sts	0x28F5, r10	; 0x8028f5 <digits1+0x4>
    6c30:	b0 92 f6 28 	sts	0x28F6, r11	; 0x8028f6 <digits1+0x5>
    6c34:	80 92 f7 28 	sts	0x28F7, r8	; 0x8028f7 <digits1+0x6>
    6c38:	90 92 f8 28 	sts	0x28F8, r9	; 0x8028f8 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6c3c:	c3 97       	sbiw	r24, 0x33	; 51
    6c3e:	dc f2       	brlt	.-74     	; 0x6bf6 <main+0x20d4>
    6c40:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    6c44:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    6c48:	d6 cf       	rjmp	.-84     	; 0x6bf6 <main+0x20d4>
digitalWrite():
    6c4a:	60 e0       	ldi	r22, 0x00	; 0
    6c4c:	88 e1       	ldi	r24, 0x18	; 24
    6c4e:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6c52:	40 92 9b 28 	sts	0x289B, r4	; 0x80289b <SET_MIN>
    6c56:	50 92 9c 28 	sts	0x289C, r5	; 0x80289c <SET_MIN+0x1>
    6c5a:	81 e0       	ldi	r24, 0x01	; 1
    6c5c:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <COUNTDOWN_START>
    6c60:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    6c64:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    6c68:	01 96       	adiw	r24, 0x01	; 1
    6c6a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6c6e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6c72:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
digitalWrite():
    6c76:	61 e0       	ldi	r22, 0x01	; 1
    6c78:	88 e1       	ldi	r24, 0x18	; 24
    6c7a:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    6c7e:	d0 90 63 28 	lds	r13, 0x2863	; 0x802863 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    6c82:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <Mode_Button_Single_Press_In_Settings>
    6c86:	81 11       	cpse	r24, r1
    6c88:	a4 c0       	rjmp	.+328    	; 0x6dd2 <main+0x22b0>
    6c8a:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <RST_BUTT>
    6c8e:	88 23       	and	r24, r24
    6c90:	09 f4       	brne	.+2      	; 0x6c94 <main+0x2172>
    6c92:	9f c0       	rjmp	.+318    	; 0x6dd2 <main+0x22b0>
    6c94:	dd 20       	and	r13, r13
    6c96:	09 f4       	brne	.+2      	; 0x6c9a <main+0x2178>
    6c98:	9c c0       	rjmp	.+312    	; 0x6dd2 <main+0x22b0>
    6c9a:	0e 94 8d 04 	call	0x91a	; 0x91a <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6c9e:	60 91 31 29 	lds	r22, 0x2931	; 0x802931 <SET_LONG_VALUE+0x14>
    6ca2:	70 91 32 29 	lds	r23, 0x2932	; 0x802932 <SET_LONG_VALUE+0x15>
    6ca6:	07 2e       	mov	r0, r23
    6ca8:	00 0c       	add	r0, r0
    6caa:	88 0b       	sbc	r24, r24
    6cac:	99 0b       	sbc	r25, r25
    6cae:	70 d2       	rcall	.+1248   	; 0x7190 <__floatsisf>
    6cb0:	60 93 ee 29 	sts	0x29EE, r22	; 0x8029ee <PID_SETPOINT>
    6cb4:	70 93 ef 29 	sts	0x29EF, r23	; 0x8029ef <PID_SETPOINT+0x1>
    6cb8:	80 93 f0 29 	sts	0x29F0, r24	; 0x8029f0 <PID_SETPOINT+0x2>
    6cbc:	90 93 f1 29 	sts	0x29F1, r25	; 0x8029f1 <PID_SETPOINT+0x3>
    6cc0:	0e 94 78 09 	call	0x12f0	; 0x12f0 <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    6cc4:	8b ed       	ldi	r24, 0xDB	; 219
    6cc6:	9b e2       	ldi	r25, 0x2B	; 43
    6cc8:	0e 94 96 0a 	call	0x152c	; 0x152c <Ticker::update()>
digitalWrite():
    6ccc:	60 e0       	ldi	r22, 0x00	; 0
    6cce:	8a e1       	ldi	r24, 0x1A	; 26
    6cd0:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    6cd4:	61 e0       	ldi	r22, 0x01	; 1
    6cd6:	8b e1       	ldi	r24, 0x1B	; 27
    6cd8:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6cdc:	60 91 4b 28 	lds	r22, 0x284B	; 0x80284b <HIGH_CAL_VALUE_SET>
    6ce0:	70 91 4c 28 	lds	r23, 0x284C	; 0x80284c <HIGH_CAL_VALUE_SET+0x1>
    6ce4:	07 2e       	mov	r0, r23
    6ce6:	00 0c       	add	r0, r0
    6ce8:	88 0b       	sbc	r24, r24
    6cea:	99 0b       	sbc	r25, r25
    6cec:	0e 94 4e 04 	call	0x89c	; 0x89c <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6cf0:	8e e1       	ldi	r24, 0x1E	; 30
    6cf2:	90 e0       	ldi	r25, 0x00	; 0
    6cf4:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6cf8:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6cfc:	a9 e1       	ldi	r26, 0x19	; 25
    6cfe:	b0 e0       	ldi	r27, 0x00	; 0
    6d00:	a0 93 eb 28 	sts	0x28EB, r26	; 0x8028eb <digits2+0x2>
    6d04:	b0 93 ec 28 	sts	0x28EC, r27	; 0x8028ec <digits2+0x3>
    6d08:	dd 24       	eor	r13, r13
    6d0a:	d3 94       	inc	r13
    6d0c:	d0 92 9f 28 	sts	0x289F, r13	; 0x80289f <DOT2_1>
    6d10:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    6d14:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    6d18:	49 97       	sbiw	r24, 0x19	; 25
    6d1a:	04 f5       	brge	.+64     	; 0x6d5c <main+0x223a>
DISPLAY_DIGIT1():
    6d1c:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1>
    6d20:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x1>
    6d24:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x2>
    6d28:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x3>
    6d2c:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x4>
    6d30:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x5>
    6d34:	20 92 f7 28 	sts	0x28F7, r2	; 0x8028f7 <digits1+0x6>
    6d38:	30 92 f8 28 	sts	0x28F8, r3	; 0x8028f8 <digits1+0x7>
digitalWrite():
    6d3c:	60 e0       	ldi	r22, 0x00	; 0
    6d3e:	85 e1       	ldi	r24, 0x15	; 21
    6d40:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6d44:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    6d48:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    6d4c:	c3 97       	sbiw	r24, 0x33	; 51
    6d4e:	0c f4       	brge	.+2      	; 0x6d52 <main+0x2230>
    6d50:	96 cf       	rjmp	.-212    	; 0x6c7e <main+0x215c>
    6d52:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i>
    6d56:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <i+0x1>
    6d5a:	91 cf       	rjmp	.-222    	; 0x6c7e <main+0x215c>
digitalWrite():
    6d5c:	61 e0       	ldi	r22, 0x01	; 1
    6d5e:	85 e1       	ldi	r24, 0x15	; 21
    6d60:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
    6d64:	80 90 fe 28 	lds	r8, 0x28FE	; 0x8028fe <TEMP_DEG_RAW>
    6d68:	90 90 ff 28 	lds	r9, 0x28FF	; 0x8028ff <TEMP_DEG_RAW+0x1>
    6d6c:	a0 90 00 29 	lds	r10, 0x2900	; 0x802900 <TEMP_DEG_RAW+0x2>
    6d70:	b0 90 01 29 	lds	r11, 0x2901	; 0x802901 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6d74:	2d ec       	ldi	r18, 0xCD	; 205
    6d76:	3c ec       	ldi	r19, 0xCC	; 204
    6d78:	47 ec       	ldi	r20, 0xC7	; 199
    6d7a:	52 e4       	ldi	r21, 0x42	; 66
    6d7c:	60 91 02 29 	lds	r22, 0x2902	; 0x802902 <TEMP_DEG>
    6d80:	70 91 03 29 	lds	r23, 0x2903	; 0x802903 <TEMP_DEG+0x1>
    6d84:	80 91 04 29 	lds	r24, 0x2904	; 0x802904 <TEMP_DEG+0x2>
    6d88:	90 91 05 29 	lds	r25, 0x2905	; 0x802905 <TEMP_DEG+0x3>
    6d8c:	b1 d2       	rcall	.+1378   	; 0x72f0 <__gesf2>
    6d8e:	18 16       	cp	r1, r24
    6d90:	9c f4       	brge	.+38     	; 0x6db8 <main+0x2296>
    6d92:	20 e0       	ldi	r18, 0x00	; 0
    6d94:	30 e0       	ldi	r19, 0x00	; 0
    6d96:	40 e2       	ldi	r20, 0x20	; 32
    6d98:	51 e4       	ldi	r21, 0x41	; 65
    6d9a:	c5 01       	movw	r24, r10
    6d9c:	b4 01       	movw	r22, r8
    6d9e:	ac d2       	rcall	.+1368   	; 0x72f8 <__mulsf3>
    6da0:	c4 d1       	rcall	.+904    	; 0x712a <__fixsfsi>
    6da2:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6da6:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6daa:	ea e0       	ldi	r30, 0x0A	; 10
    6dac:	f0 e0       	ldi	r31, 0x00	; 0
    6dae:	e0 93 f7 28 	sts	0x28F7, r30	; 0x8028f7 <digits1+0x6>
    6db2:	f0 93 f8 28 	sts	0x28F8, r31	; 0x8028f8 <digits1+0x7>
    6db6:	c6 cf       	rjmp	.-116    	; 0x6d44 <main+0x2222>
    6db8:	20 e0       	ldi	r18, 0x00	; 0
    6dba:	30 e0       	ldi	r19, 0x00	; 0
    6dbc:	48 ec       	ldi	r20, 0xC8	; 200
    6dbe:	52 e4       	ldi	r21, 0x42	; 66
    6dc0:	c5 01       	movw	r24, r10
    6dc2:	b4 01       	movw	r22, r8
    6dc4:	99 d2       	rcall	.+1330   	; 0x72f8 <__mulsf3>
    6dc6:	b1 d1       	rcall	.+866    	; 0x712a <__fixsfsi>
    6dc8:	0e 94 0f 04 	call	0x81e	; 0x81e <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6dcc:	d0 92 bb 28 	sts	0x28BB, r13	; 0x8028bb <DOT1_1>
    6dd0:	ec cf       	rjmp	.-40     	; 0x6daa <main+0x2288>
digitalWrite():
    6dd2:	60 e0       	ldi	r22, 0x00	; 0
    6dd4:	88 e1       	ldi	r24, 0x18	; 24
    6dd6:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6dda:	10 92 ee 29 	sts	0x29EE, r1	; 0x8029ee <PID_SETPOINT>
    6dde:	10 92 ef 29 	sts	0x29EF, r1	; 0x8029ef <PID_SETPOINT+0x1>
    6de2:	10 92 f0 29 	sts	0x29F0, r1	; 0x8029f0 <PID_SETPOINT+0x2>
    6de6:	10 92 f1 29 	sts	0x29F1, r1	; 0x8029f1 <PID_SETPOINT+0x3>
    6dea:	dd 20       	and	r13, r13
    6dec:	19 f0       	breq	.+6      	; 0x6df4 <main+0x22d2>
    6dee:	8d e0       	ldi	r24, 0x0D	; 13
    6df0:	90 e0       	ldi	r25, 0x00	; 0
    6df2:	3b cf       	rjmp	.-394    	; 0x6c6a <main+0x2148>
    6df4:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <LONG_PRESS>
    6df8:	89 ce       	rjmp	.-750    	; 0x6b0c <main+0x1fea>
    6dfa:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6dfe:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6e02:	80 91 a0 28 	lds	r24, 0x28A0	; 0x8028a0 <i>
    6e06:	90 91 a1 28 	lds	r25, 0x28A1	; 0x8028a1 <i+0x1>
    6e0a:	88 3c       	cpi	r24, 0xC8	; 200
    6e0c:	91 05       	cpc	r25, r1
    6e0e:	1c f5       	brge	.+70     	; 0x6e56 <main+0x2334>
DISPLAY_DIGIT2():
    6e10:	e0 92 e9 28 	sts	0x28E9, r14	; 0x8028e9 <digits2>
    6e14:	f0 92 ea 28 	sts	0x28EA, r15	; 0x8028ea <digits2+0x1>
    6e18:	8d e0       	ldi	r24, 0x0D	; 13
    6e1a:	90 e0       	ldi	r25, 0x00	; 0
    6e1c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6e20:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6e24:	2a e1       	ldi	r18, 0x1A	; 26
    6e26:	30 e0       	ldi	r19, 0x00	; 0
    6e28:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x4>
    6e2c:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x5>
    6e30:	2e e0       	ldi	r18, 0x0E	; 14
    6e32:	30 e0       	ldi	r19, 0x00	; 0
    6e34:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits2+0x6>
    6e38:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    6e3c:	2c e0       	ldi	r18, 0x0C	; 12
    6e3e:	30 e0       	ldi	r19, 0x00	; 0
    6e40:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    6e44:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    6e48:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x2>
    6e4c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x3>
    6e50:	8c e1       	ldi	r24, 0x1C	; 28
    6e52:	90 e0       	ldi	r25, 0x00	; 0
    6e54:	b2 cb       	rjmp	.-2204   	; 0x65ba <main+0x1a98>
SET_LONG_PRESS_FUNCTION():
    6e56:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <Service_Menu>
    6e5a:	2a ca       	rjmp	.-2988   	; 0x62b0 <main+0x178e>
    6e5c:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    6e60:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6e64:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6e68:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    6e6c:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <select_heating_type>
    6e70:	90 e0       	ldi	r25, 0x00	; 0
    6e72:	80 93 3d 29 	sts	0x293D, r24	; 0x80293d <SET_LONG_VALUE+0x20>
    6e76:	90 93 3e 29 	sts	0x293E, r25	; 0x80293e <SET_LONG_VALUE+0x21>
DISPLAY_DIGIT2():
    6e7a:	40 92 e9 28 	sts	0x28E9, r4	; 0x8028e9 <digits2>
    6e7e:	50 92 ea 28 	sts	0x28EA, r5	; 0x8028ea <digits2+0x1>
    6e82:	2f e0       	ldi	r18, 0x0F	; 15
    6e84:	30 e0       	ldi	r19, 0x00	; 0
    6e86:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x2>
    6e8a:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x3>
    6e8e:	8d e0       	ldi	r24, 0x0D	; 13
    6e90:	90 e0       	ldi	r25, 0x00	; 0
    6e92:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    6e96:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    6e9a:	80 e1       	ldi	r24, 0x10	; 16
    6e9c:	90 e0       	ldi	r25, 0x00	; 0
    6e9e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6ea2:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    6ea6:	4c e0       	ldi	r20, 0x0C	; 12
    6ea8:	50 e0       	ldi	r21, 0x00	; 0
    6eaa:	40 93 f1 28 	sts	0x28F1, r20	; 0x8028f1 <digits1>
    6eae:	50 93 f2 28 	sts	0x28F2, r21	; 0x8028f2 <digits1+0x1>
    6eb2:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    6eb6:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    6eba:	2a e1       	ldi	r18, 0x1A	; 26
    6ebc:	30 e0       	ldi	r19, 0x00	; 0
    6ebe:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <main+0x840>
SET_LONG_PRESS_FUNCTION():
    6ec2:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    6ec6:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6eca:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6ece:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6ed2:	8a e1       	ldi	r24, 0x1A	; 26
    6ed4:	90 e0       	ldi	r25, 0x00	; 0
    6ed6:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6eda:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6ede:	87 e1       	ldi	r24, 0x17	; 23
    6ee0:	90 e0       	ldi	r25, 0x00	; 0
    6ee2:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6ee6:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6eea:	8b e1       	ldi	r24, 0x1B	; 27
    6eec:	90 e0       	ldi	r25, 0x00	; 0
    6eee:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x4>
    6ef2:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x5>
    6ef6:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits2+0x6>
    6efa:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits2+0x7>
    6efe:	0c 94 79 2a 	jmp	0x54f2	; 0x54f2 <main+0x9d0>
SET_LONG_PRESS_FUNCTION():
    6f02:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT1_0>
    6f06:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_1>
    6f0a:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <DOT2_1>
    6f0e:	0e 94 17 09 	call	0x122e	; 0x122e <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6f12:	85 e1       	ldi	r24, 0x15	; 21
    6f14:	90 e0       	ldi	r25, 0x00	; 0
    6f16:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2>
    6f1a:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x1>
    6f1e:	8d e0       	ldi	r24, 0x0D	; 13
    6f20:	90 e0       	ldi	r25, 0x00	; 0
    6f22:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x2>
    6f26:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x3>
    6f2a:	e0 92 ed 28 	sts	0x28ED, r14	; 0x8028ed <digits2+0x4>
    6f2e:	f0 92 ee 28 	sts	0x28EE, r15	; 0x8028ee <digits2+0x5>
    6f32:	80 e1       	ldi	r24, 0x10	; 16
    6f34:	90 e0       	ldi	r25, 0x00	; 0
    6f36:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits2+0x6>
    6f3a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits2+0x7>
DISPLAY_DIGIT1():
    6f3e:	21 e1       	ldi	r18, 0x11	; 17
    6f40:	30 e0       	ldi	r19, 0x00	; 0
    6f42:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1>
    6f46:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x1>
    6f4a:	2f e0       	ldi	r18, 0x0F	; 15
    6f4c:	30 e0       	ldi	r19, 0x00	; 0
    6f4e:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x2>
    6f52:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x3>
    6f56:	2c e0       	ldi	r18, 0x0C	; 12
    6f58:	30 e0       	ldi	r19, 0x00	; 0
    6f5a:	0c 94 b1 29 	jmp	0x5362	; 0x5362 <main+0x840>
loop():
    6f5e:	0e 94 3f 15 	call	0x2a7e	; 0x2a7e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.21]>
    6f62:	0c 94 3e 29 	jmp	0x527c	; 0x527c <main+0x75a>
digitalWrite():
    6f66:	60 e0       	ldi	r22, 0x00	; 0
    6f68:	85 e1       	ldi	r24, 0x15	; 21
    6f6a:	0e 94 08 08 	call	0x1010	; 0x1010 <digitalWrite.part.2>
DISPLAY_DIGIT2():
    6f6e:	00 93 e9 28 	sts	0x28E9, r16	; 0x8028e9 <digits2>
    6f72:	10 93 ea 28 	sts	0x28EA, r17	; 0x8028ea <digits2+0x1>
    6f76:	00 93 eb 28 	sts	0x28EB, r16	; 0x8028eb <digits2+0x2>
    6f7a:	10 93 ec 28 	sts	0x28EC, r17	; 0x8028ec <digits2+0x3>
    6f7e:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x4>
    6f82:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x5>
    6f86:	b7 cf       	rjmp	.-146    	; 0x6ef6 <main+0x23d4>

00006f88 <__subsf3>:
__subsf3():
    6f88:	50 58       	subi	r21, 0x80	; 128

00006f8a <__addsf3>:
    6f8a:	bb 27       	eor	r27, r27
    6f8c:	aa 27       	eor	r26, r26
    6f8e:	0e d0       	rcall	.+28     	; 0x6fac <__addsf3x>
    6f90:	75 c1       	rjmp	.+746    	; 0x727c <__fp_round>
__addsf3():
    6f92:	66 d1       	rcall	.+716    	; 0x7260 <__fp_pscA>
    6f94:	30 f0       	brcs	.+12     	; 0x6fa2 <__addsf3+0x18>
    6f96:	6b d1       	rcall	.+726    	; 0x726e <__fp_pscB>
    6f98:	20 f0       	brcs	.+8      	; 0x6fa2 <__addsf3+0x18>
    6f9a:	31 f4       	brne	.+12     	; 0x6fa8 <__addsf3+0x1e>
    6f9c:	9f 3f       	cpi	r25, 0xFF	; 255
    6f9e:	11 f4       	brne	.+4      	; 0x6fa4 <__addsf3+0x1a>
    6fa0:	1e f4       	brtc	.+6      	; 0x6fa8 <__addsf3+0x1e>
    6fa2:	5b c1       	rjmp	.+694    	; 0x725a <__fp_nan>
    6fa4:	0e f4       	brtc	.+2      	; 0x6fa8 <__addsf3+0x1e>
    6fa6:	e0 95       	com	r30
    6fa8:	e7 fb       	bst	r30, 7
    6faa:	51 c1       	rjmp	.+674    	; 0x724e <__fp_inf>

00006fac <__addsf3x>:
__addsf3x():
    6fac:	e9 2f       	mov	r30, r25
    6fae:	77 d1       	rcall	.+750    	; 0x729e <__fp_split3>
    6fb0:	80 f3       	brcs	.-32     	; 0x6f92 <__addsf3+0x8>
    6fb2:	ba 17       	cp	r27, r26
    6fb4:	62 07       	cpc	r22, r18
    6fb6:	73 07       	cpc	r23, r19
    6fb8:	84 07       	cpc	r24, r20
    6fba:	95 07       	cpc	r25, r21
    6fbc:	18 f0       	brcs	.+6      	; 0x6fc4 <__addsf3x+0x18>
    6fbe:	71 f4       	brne	.+28     	; 0x6fdc <__addsf3x+0x30>
    6fc0:	9e f5       	brtc	.+102    	; 0x7028 <__addsf3x+0x7c>
    6fc2:	8f c1       	rjmp	.+798    	; 0x72e2 <__fp_zero>
    6fc4:	0e f4       	brtc	.+2      	; 0x6fc8 <__addsf3x+0x1c>
    6fc6:	e0 95       	com	r30
    6fc8:	0b 2e       	mov	r0, r27
    6fca:	ba 2f       	mov	r27, r26
    6fcc:	a0 2d       	mov	r26, r0
    6fce:	0b 01       	movw	r0, r22
    6fd0:	b9 01       	movw	r22, r18
    6fd2:	90 01       	movw	r18, r0
    6fd4:	0c 01       	movw	r0, r24
    6fd6:	ca 01       	movw	r24, r20
    6fd8:	a0 01       	movw	r20, r0
    6fda:	11 24       	eor	r1, r1
    6fdc:	ff 27       	eor	r31, r31
    6fde:	59 1b       	sub	r21, r25
    6fe0:	99 f0       	breq	.+38     	; 0x7008 <__addsf3x+0x5c>
    6fe2:	59 3f       	cpi	r21, 0xF9	; 249
    6fe4:	50 f4       	brcc	.+20     	; 0x6ffa <__addsf3x+0x4e>
    6fe6:	50 3e       	cpi	r21, 0xE0	; 224
    6fe8:	68 f1       	brcs	.+90     	; 0x7044 <__addsf3x+0x98>
    6fea:	1a 16       	cp	r1, r26
    6fec:	f0 40       	sbci	r31, 0x00	; 0
    6fee:	a2 2f       	mov	r26, r18
    6ff0:	23 2f       	mov	r18, r19
    6ff2:	34 2f       	mov	r19, r20
    6ff4:	44 27       	eor	r20, r20
    6ff6:	58 5f       	subi	r21, 0xF8	; 248
    6ff8:	f3 cf       	rjmp	.-26     	; 0x6fe0 <__addsf3x+0x34>
    6ffa:	46 95       	lsr	r20
    6ffc:	37 95       	ror	r19
    6ffe:	27 95       	ror	r18
    7000:	a7 95       	ror	r26
    7002:	f0 40       	sbci	r31, 0x00	; 0
    7004:	53 95       	inc	r21
    7006:	c9 f7       	brne	.-14     	; 0x6ffa <__addsf3x+0x4e>
    7008:	7e f4       	brtc	.+30     	; 0x7028 <__addsf3x+0x7c>
    700a:	1f 16       	cp	r1, r31
    700c:	ba 0b       	sbc	r27, r26
    700e:	62 0b       	sbc	r22, r18
    7010:	73 0b       	sbc	r23, r19
    7012:	84 0b       	sbc	r24, r20
    7014:	ba f0       	brmi	.+46     	; 0x7044 <__addsf3x+0x98>
    7016:	91 50       	subi	r25, 0x01	; 1
    7018:	a1 f0       	breq	.+40     	; 0x7042 <__addsf3x+0x96>
    701a:	ff 0f       	add	r31, r31
    701c:	bb 1f       	adc	r27, r27
    701e:	66 1f       	adc	r22, r22
    7020:	77 1f       	adc	r23, r23
    7022:	88 1f       	adc	r24, r24
    7024:	c2 f7       	brpl	.-16     	; 0x7016 <__addsf3x+0x6a>
    7026:	0e c0       	rjmp	.+28     	; 0x7044 <__addsf3x+0x98>
    7028:	ba 0f       	add	r27, r26
    702a:	62 1f       	adc	r22, r18
    702c:	73 1f       	adc	r23, r19
    702e:	84 1f       	adc	r24, r20
    7030:	48 f4       	brcc	.+18     	; 0x7044 <__addsf3x+0x98>
    7032:	87 95       	ror	r24
    7034:	77 95       	ror	r23
    7036:	67 95       	ror	r22
    7038:	b7 95       	ror	r27
    703a:	f7 95       	ror	r31
    703c:	9e 3f       	cpi	r25, 0xFE	; 254
    703e:	08 f0       	brcs	.+2      	; 0x7042 <__addsf3x+0x96>
    7040:	b3 cf       	rjmp	.-154    	; 0x6fa8 <__addsf3+0x1e>
    7042:	93 95       	inc	r25
    7044:	88 0f       	add	r24, r24
    7046:	08 f0       	brcs	.+2      	; 0x704a <__addsf3x+0x9e>
    7048:	99 27       	eor	r25, r25
    704a:	ee 0f       	add	r30, r30
    704c:	97 95       	ror	r25
    704e:	87 95       	ror	r24
    7050:	08 95       	ret

00007052 <__cmpsf2>:
    7052:	d9 d0       	rcall	.+434    	; 0x7206 <__fp_cmp>
    7054:	08 f4       	brcc	.+2      	; 0x7058 <__cmpsf2+0x6>
    7056:	81 e0       	ldi	r24, 0x01	; 1
    7058:	08 95       	ret

0000705a <__divsf3>:
    705a:	0c d0       	rcall	.+24     	; 0x7074 <__divsf3x>
    705c:	0f c1       	rjmp	.+542    	; 0x727c <__fp_round>
    705e:	07 d1       	rcall	.+526    	; 0x726e <__fp_pscB>
    7060:	40 f0       	brcs	.+16     	; 0x7072 <__divsf3+0x18>
    7062:	fe d0       	rcall	.+508    	; 0x7260 <__fp_pscA>
    7064:	30 f0       	brcs	.+12     	; 0x7072 <__divsf3+0x18>
    7066:	21 f4       	brne	.+8      	; 0x7070 <__divsf3+0x16>
    7068:	5f 3f       	cpi	r21, 0xFF	; 255
    706a:	19 f0       	breq	.+6      	; 0x7072 <__divsf3+0x18>
    706c:	f0 c0       	rjmp	.+480    	; 0x724e <__fp_inf>
    706e:	51 11       	cpse	r21, r1
    7070:	39 c1       	rjmp	.+626    	; 0x72e4 <__fp_szero>
    7072:	f3 c0       	rjmp	.+486    	; 0x725a <__fp_nan>

00007074 <__divsf3x>:
    7074:	14 d1       	rcall	.+552    	; 0x729e <__fp_split3>
    7076:	98 f3       	brcs	.-26     	; 0x705e <__divsf3+0x4>

00007078 <__divsf3_pse>:
__divsf3_pse():
    7078:	99 23       	and	r25, r25
    707a:	c9 f3       	breq	.-14     	; 0x706e <__divsf3+0x14>
    707c:	55 23       	and	r21, r21
    707e:	b1 f3       	breq	.-20     	; 0x706c <__divsf3+0x12>
    7080:	95 1b       	sub	r25, r21
    7082:	55 0b       	sbc	r21, r21
    7084:	bb 27       	eor	r27, r27
    7086:	aa 27       	eor	r26, r26
    7088:	62 17       	cp	r22, r18
    708a:	73 07       	cpc	r23, r19
    708c:	84 07       	cpc	r24, r20
    708e:	38 f0       	brcs	.+14     	; 0x709e <__divsf3_pse+0x26>
    7090:	9f 5f       	subi	r25, 0xFF	; 255
    7092:	5f 4f       	sbci	r21, 0xFF	; 255
    7094:	22 0f       	add	r18, r18
    7096:	33 1f       	adc	r19, r19
    7098:	44 1f       	adc	r20, r20
    709a:	aa 1f       	adc	r26, r26
    709c:	a9 f3       	breq	.-22     	; 0x7088 <__divsf3_pse+0x10>
    709e:	33 d0       	rcall	.+102    	; 0x7106 <__divsf3_pse+0x8e>
    70a0:	0e 2e       	mov	r0, r30
    70a2:	3a f0       	brmi	.+14     	; 0x70b2 <__divsf3_pse+0x3a>
    70a4:	e0 e8       	ldi	r30, 0x80	; 128
    70a6:	30 d0       	rcall	.+96     	; 0x7108 <__divsf3_pse+0x90>
    70a8:	91 50       	subi	r25, 0x01	; 1
    70aa:	50 40       	sbci	r21, 0x00	; 0
    70ac:	e6 95       	lsr	r30
    70ae:	00 1c       	adc	r0, r0
    70b0:	ca f7       	brpl	.-14     	; 0x70a4 <__divsf3_pse+0x2c>
    70b2:	29 d0       	rcall	.+82     	; 0x7106 <__divsf3_pse+0x8e>
    70b4:	fe 2f       	mov	r31, r30
    70b6:	27 d0       	rcall	.+78     	; 0x7106 <__divsf3_pse+0x8e>
    70b8:	66 0f       	add	r22, r22
    70ba:	77 1f       	adc	r23, r23
    70bc:	88 1f       	adc	r24, r24
    70be:	bb 1f       	adc	r27, r27
    70c0:	26 17       	cp	r18, r22
    70c2:	37 07       	cpc	r19, r23
    70c4:	48 07       	cpc	r20, r24
    70c6:	ab 07       	cpc	r26, r27
    70c8:	b0 e8       	ldi	r27, 0x80	; 128
    70ca:	09 f0       	breq	.+2      	; 0x70ce <__divsf3_pse+0x56>
    70cc:	bb 0b       	sbc	r27, r27
    70ce:	80 2d       	mov	r24, r0
    70d0:	bf 01       	movw	r22, r30
    70d2:	ff 27       	eor	r31, r31
    70d4:	93 58       	subi	r25, 0x83	; 131
    70d6:	5f 4f       	sbci	r21, 0xFF	; 255
    70d8:	2a f0       	brmi	.+10     	; 0x70e4 <__divsf3_pse+0x6c>
    70da:	9e 3f       	cpi	r25, 0xFE	; 254
    70dc:	51 05       	cpc	r21, r1
    70de:	68 f0       	brcs	.+26     	; 0x70fa <__divsf3_pse+0x82>
    70e0:	b6 c0       	rjmp	.+364    	; 0x724e <__fp_inf>
    70e2:	00 c1       	rjmp	.+512    	; 0x72e4 <__fp_szero>
    70e4:	5f 3f       	cpi	r21, 0xFF	; 255
    70e6:	ec f3       	brlt	.-6      	; 0x70e2 <__divsf3_pse+0x6a>
    70e8:	98 3e       	cpi	r25, 0xE8	; 232
    70ea:	dc f3       	brlt	.-10     	; 0x70e2 <__divsf3_pse+0x6a>
    70ec:	86 95       	lsr	r24
    70ee:	77 95       	ror	r23
    70f0:	67 95       	ror	r22
    70f2:	b7 95       	ror	r27
    70f4:	f7 95       	ror	r31
    70f6:	9f 5f       	subi	r25, 0xFF	; 255
    70f8:	c9 f7       	brne	.-14     	; 0x70ec <__divsf3_pse+0x74>
    70fa:	88 0f       	add	r24, r24
    70fc:	91 1d       	adc	r25, r1
    70fe:	96 95       	lsr	r25
    7100:	87 95       	ror	r24
    7102:	97 f9       	bld	r25, 7
    7104:	08 95       	ret
    7106:	e1 e0       	ldi	r30, 0x01	; 1
    7108:	66 0f       	add	r22, r22
    710a:	77 1f       	adc	r23, r23
    710c:	88 1f       	adc	r24, r24
    710e:	bb 1f       	adc	r27, r27
    7110:	62 17       	cp	r22, r18
    7112:	73 07       	cpc	r23, r19
    7114:	84 07       	cpc	r24, r20
    7116:	ba 07       	cpc	r27, r26
    7118:	20 f0       	brcs	.+8      	; 0x7122 <__divsf3_pse+0xaa>
    711a:	62 1b       	sub	r22, r18
    711c:	73 0b       	sbc	r23, r19
    711e:	84 0b       	sbc	r24, r20
    7120:	ba 0b       	sbc	r27, r26
    7122:	ee 1f       	adc	r30, r30
    7124:	88 f7       	brcc	.-30     	; 0x7108 <__divsf3_pse+0x90>
    7126:	e0 95       	com	r30
    7128:	08 95       	ret

0000712a <__fixsfsi>:
__fixsfsi():
    712a:	04 d0       	rcall	.+8      	; 0x7134 <__fixunssfsi>
    712c:	68 94       	set
    712e:	b1 11       	cpse	r27, r1
    7130:	d9 c0       	rjmp	.+434    	; 0x72e4 <__fp_szero>
    7132:	08 95       	ret

00007134 <__fixunssfsi>:
__fixunssfsi():
    7134:	bc d0       	rcall	.+376    	; 0x72ae <__fp_splitA>
    7136:	88 f0       	brcs	.+34     	; 0x715a <__fixunssfsi+0x26>
    7138:	9f 57       	subi	r25, 0x7F	; 127
    713a:	90 f0       	brcs	.+36     	; 0x7160 <__fixunssfsi+0x2c>
    713c:	b9 2f       	mov	r27, r25
    713e:	99 27       	eor	r25, r25
    7140:	b7 51       	subi	r27, 0x17	; 23
    7142:	a0 f0       	brcs	.+40     	; 0x716c <__fixunssfsi+0x38>
    7144:	d1 f0       	breq	.+52     	; 0x717a <__fixunssfsi+0x46>
    7146:	66 0f       	add	r22, r22
    7148:	77 1f       	adc	r23, r23
    714a:	88 1f       	adc	r24, r24
    714c:	99 1f       	adc	r25, r25
    714e:	1a f0       	brmi	.+6      	; 0x7156 <__fixunssfsi+0x22>
    7150:	ba 95       	dec	r27
    7152:	c9 f7       	brne	.-14     	; 0x7146 <__fixunssfsi+0x12>
    7154:	12 c0       	rjmp	.+36     	; 0x717a <__fixunssfsi+0x46>
    7156:	b1 30       	cpi	r27, 0x01	; 1
    7158:	81 f0       	breq	.+32     	; 0x717a <__fixunssfsi+0x46>
    715a:	c3 d0       	rcall	.+390    	; 0x72e2 <__fp_zero>
    715c:	b1 e0       	ldi	r27, 0x01	; 1
    715e:	08 95       	ret
    7160:	c0 c0       	rjmp	.+384    	; 0x72e2 <__fp_zero>
    7162:	67 2f       	mov	r22, r23
    7164:	78 2f       	mov	r23, r24
    7166:	88 27       	eor	r24, r24
    7168:	b8 5f       	subi	r27, 0xF8	; 248
    716a:	39 f0       	breq	.+14     	; 0x717a <__fixunssfsi+0x46>
    716c:	b9 3f       	cpi	r27, 0xF9	; 249
    716e:	cc f3       	brlt	.-14     	; 0x7162 <__fixunssfsi+0x2e>
    7170:	86 95       	lsr	r24
    7172:	77 95       	ror	r23
    7174:	67 95       	ror	r22
    7176:	b3 95       	inc	r27
    7178:	d9 f7       	brne	.-10     	; 0x7170 <__fixunssfsi+0x3c>
    717a:	3e f4       	brtc	.+14     	; 0x718a <__fixunssfsi+0x56>
    717c:	90 95       	com	r25
    717e:	80 95       	com	r24
    7180:	70 95       	com	r23
    7182:	61 95       	neg	r22
    7184:	7f 4f       	sbci	r23, 0xFF	; 255
    7186:	8f 4f       	sbci	r24, 0xFF	; 255
    7188:	9f 4f       	sbci	r25, 0xFF	; 255
    718a:	08 95       	ret

0000718c <__floatunsisf>:
__floatunsisf():
    718c:	e8 94       	clt
    718e:	09 c0       	rjmp	.+18     	; 0x71a2 <__floatsisf+0x12>

00007190 <__floatsisf>:
    7190:	97 fb       	bst	r25, 7
    7192:	3e f4       	brtc	.+14     	; 0x71a2 <__floatsisf+0x12>
    7194:	90 95       	com	r25
    7196:	80 95       	com	r24
    7198:	70 95       	com	r23
    719a:	61 95       	neg	r22
    719c:	7f 4f       	sbci	r23, 0xFF	; 255
    719e:	8f 4f       	sbci	r24, 0xFF	; 255
    71a0:	9f 4f       	sbci	r25, 0xFF	; 255
    71a2:	99 23       	and	r25, r25
    71a4:	a9 f0       	breq	.+42     	; 0x71d0 <__floatsisf+0x40>
    71a6:	f9 2f       	mov	r31, r25
    71a8:	96 e9       	ldi	r25, 0x96	; 150
    71aa:	bb 27       	eor	r27, r27
    71ac:	93 95       	inc	r25
    71ae:	f6 95       	lsr	r31
    71b0:	87 95       	ror	r24
    71b2:	77 95       	ror	r23
    71b4:	67 95       	ror	r22
    71b6:	b7 95       	ror	r27
    71b8:	f1 11       	cpse	r31, r1
    71ba:	f8 cf       	rjmp	.-16     	; 0x71ac <__floatsisf+0x1c>
    71bc:	fa f4       	brpl	.+62     	; 0x71fc <__floatsisf+0x6c>
    71be:	bb 0f       	add	r27, r27
    71c0:	11 f4       	brne	.+4      	; 0x71c6 <__floatsisf+0x36>
    71c2:	60 ff       	sbrs	r22, 0
    71c4:	1b c0       	rjmp	.+54     	; 0x71fc <__floatsisf+0x6c>
    71c6:	6f 5f       	subi	r22, 0xFF	; 255
    71c8:	7f 4f       	sbci	r23, 0xFF	; 255
    71ca:	8f 4f       	sbci	r24, 0xFF	; 255
    71cc:	9f 4f       	sbci	r25, 0xFF	; 255
    71ce:	16 c0       	rjmp	.+44     	; 0x71fc <__floatsisf+0x6c>
    71d0:	88 23       	and	r24, r24
    71d2:	11 f0       	breq	.+4      	; 0x71d8 <__floatsisf+0x48>
    71d4:	96 e9       	ldi	r25, 0x96	; 150
    71d6:	11 c0       	rjmp	.+34     	; 0x71fa <__floatsisf+0x6a>
    71d8:	77 23       	and	r23, r23
    71da:	21 f0       	breq	.+8      	; 0x71e4 <__floatsisf+0x54>
    71dc:	9e e8       	ldi	r25, 0x8E	; 142
    71de:	87 2f       	mov	r24, r23
    71e0:	76 2f       	mov	r23, r22
    71e2:	05 c0       	rjmp	.+10     	; 0x71ee <__floatsisf+0x5e>
    71e4:	66 23       	and	r22, r22
    71e6:	71 f0       	breq	.+28     	; 0x7204 <__floatsisf+0x74>
    71e8:	96 e8       	ldi	r25, 0x86	; 134
    71ea:	86 2f       	mov	r24, r22
    71ec:	70 e0       	ldi	r23, 0x00	; 0
    71ee:	60 e0       	ldi	r22, 0x00	; 0
    71f0:	2a f0       	brmi	.+10     	; 0x71fc <__floatsisf+0x6c>
    71f2:	9a 95       	dec	r25
    71f4:	66 0f       	add	r22, r22
    71f6:	77 1f       	adc	r23, r23
    71f8:	88 1f       	adc	r24, r24
    71fa:	da f7       	brpl	.-10     	; 0x71f2 <__floatsisf+0x62>
    71fc:	88 0f       	add	r24, r24
    71fe:	96 95       	lsr	r25
    7200:	87 95       	ror	r24
    7202:	97 f9       	bld	r25, 7
    7204:	08 95       	ret

00007206 <__fp_cmp>:
__fp_cmp():
    7206:	99 0f       	add	r25, r25
    7208:	00 08       	sbc	r0, r0
    720a:	55 0f       	add	r21, r21
    720c:	aa 0b       	sbc	r26, r26
    720e:	e0 e8       	ldi	r30, 0x80	; 128
    7210:	fe ef       	ldi	r31, 0xFE	; 254
    7212:	16 16       	cp	r1, r22
    7214:	17 06       	cpc	r1, r23
    7216:	e8 07       	cpc	r30, r24
    7218:	f9 07       	cpc	r31, r25
    721a:	c0 f0       	brcs	.+48     	; 0x724c <__fp_cmp+0x46>
    721c:	12 16       	cp	r1, r18
    721e:	13 06       	cpc	r1, r19
    7220:	e4 07       	cpc	r30, r20
    7222:	f5 07       	cpc	r31, r21
    7224:	98 f0       	brcs	.+38     	; 0x724c <__fp_cmp+0x46>
    7226:	62 1b       	sub	r22, r18
    7228:	73 0b       	sbc	r23, r19
    722a:	84 0b       	sbc	r24, r20
    722c:	95 0b       	sbc	r25, r21
    722e:	39 f4       	brne	.+14     	; 0x723e <__fp_cmp+0x38>
    7230:	0a 26       	eor	r0, r26
    7232:	61 f0       	breq	.+24     	; 0x724c <__fp_cmp+0x46>
    7234:	23 2b       	or	r18, r19
    7236:	24 2b       	or	r18, r20
    7238:	25 2b       	or	r18, r21
    723a:	21 f4       	brne	.+8      	; 0x7244 <__fp_cmp+0x3e>
    723c:	08 95       	ret
    723e:	0a 26       	eor	r0, r26
    7240:	09 f4       	brne	.+2      	; 0x7244 <__fp_cmp+0x3e>
    7242:	a1 40       	sbci	r26, 0x01	; 1
    7244:	a6 95       	lsr	r26
    7246:	8f ef       	ldi	r24, 0xFF	; 255
    7248:	81 1d       	adc	r24, r1
    724a:	81 1d       	adc	r24, r1
    724c:	08 95       	ret

0000724e <__fp_inf>:
__fp_inf():
    724e:	97 f9       	bld	r25, 7
    7250:	9f 67       	ori	r25, 0x7F	; 127
    7252:	80 e8       	ldi	r24, 0x80	; 128
    7254:	70 e0       	ldi	r23, 0x00	; 0
    7256:	60 e0       	ldi	r22, 0x00	; 0
    7258:	08 95       	ret

0000725a <__fp_nan>:
__fp_nan():
    725a:	9f ef       	ldi	r25, 0xFF	; 255
    725c:	80 ec       	ldi	r24, 0xC0	; 192
    725e:	08 95       	ret

00007260 <__fp_pscA>:
__fp_pscA():
    7260:	00 24       	eor	r0, r0
    7262:	0a 94       	dec	r0
    7264:	16 16       	cp	r1, r22
    7266:	17 06       	cpc	r1, r23
    7268:	18 06       	cpc	r1, r24
    726a:	09 06       	cpc	r0, r25
    726c:	08 95       	ret

0000726e <__fp_pscB>:
__fp_pscB():
    726e:	00 24       	eor	r0, r0
    7270:	0a 94       	dec	r0
    7272:	12 16       	cp	r1, r18
    7274:	13 06       	cpc	r1, r19
    7276:	14 06       	cpc	r1, r20
    7278:	05 06       	cpc	r0, r21
    727a:	08 95       	ret

0000727c <__fp_round>:
__fp_round():
    727c:	09 2e       	mov	r0, r25
    727e:	03 94       	inc	r0
    7280:	00 0c       	add	r0, r0
    7282:	11 f4       	brne	.+4      	; 0x7288 <__fp_round+0xc>
    7284:	88 23       	and	r24, r24
    7286:	52 f0       	brmi	.+20     	; 0x729c <__fp_round+0x20>
    7288:	bb 0f       	add	r27, r27
    728a:	40 f4       	brcc	.+16     	; 0x729c <__fp_round+0x20>
    728c:	bf 2b       	or	r27, r31
    728e:	11 f4       	brne	.+4      	; 0x7294 <__fp_round+0x18>
    7290:	60 ff       	sbrs	r22, 0
    7292:	04 c0       	rjmp	.+8      	; 0x729c <__fp_round+0x20>
    7294:	6f 5f       	subi	r22, 0xFF	; 255
    7296:	7f 4f       	sbci	r23, 0xFF	; 255
    7298:	8f 4f       	sbci	r24, 0xFF	; 255
    729a:	9f 4f       	sbci	r25, 0xFF	; 255
    729c:	08 95       	ret

0000729e <__fp_split3>:
__fp_split3():
    729e:	57 fd       	sbrc	r21, 7
    72a0:	90 58       	subi	r25, 0x80	; 128
    72a2:	44 0f       	add	r20, r20
    72a4:	55 1f       	adc	r21, r21
    72a6:	59 f0       	breq	.+22     	; 0x72be <__fp_splitA+0x10>
    72a8:	5f 3f       	cpi	r21, 0xFF	; 255
    72aa:	71 f0       	breq	.+28     	; 0x72c8 <__fp_splitA+0x1a>
    72ac:	47 95       	ror	r20

000072ae <__fp_splitA>:
    72ae:	88 0f       	add	r24, r24
    72b0:	97 fb       	bst	r25, 7
    72b2:	99 1f       	adc	r25, r25
    72b4:	61 f0       	breq	.+24     	; 0x72ce <__fp_splitA+0x20>
    72b6:	9f 3f       	cpi	r25, 0xFF	; 255
    72b8:	79 f0       	breq	.+30     	; 0x72d8 <__fp_splitA+0x2a>
    72ba:	87 95       	ror	r24
    72bc:	08 95       	ret
    72be:	12 16       	cp	r1, r18
    72c0:	13 06       	cpc	r1, r19
    72c2:	14 06       	cpc	r1, r20
    72c4:	55 1f       	adc	r21, r21
    72c6:	f2 cf       	rjmp	.-28     	; 0x72ac <__fp_split3+0xe>
    72c8:	46 95       	lsr	r20
    72ca:	f1 df       	rcall	.-30     	; 0x72ae <__fp_splitA>
    72cc:	08 c0       	rjmp	.+16     	; 0x72de <__fp_splitA+0x30>
    72ce:	16 16       	cp	r1, r22
    72d0:	17 06       	cpc	r1, r23
    72d2:	18 06       	cpc	r1, r24
    72d4:	99 1f       	adc	r25, r25
    72d6:	f1 cf       	rjmp	.-30     	; 0x72ba <__fp_splitA+0xc>
    72d8:	86 95       	lsr	r24
    72da:	71 05       	cpc	r23, r1
    72dc:	61 05       	cpc	r22, r1
    72de:	08 94       	sec
    72e0:	08 95       	ret

000072e2 <__fp_zero>:
__fp_zero():
    72e2:	e8 94       	clt

000072e4 <__fp_szero>:
    72e4:	bb 27       	eor	r27, r27
    72e6:	66 27       	eor	r22, r22
    72e8:	77 27       	eor	r23, r23
    72ea:	cb 01       	movw	r24, r22
    72ec:	97 f9       	bld	r25, 7
    72ee:	08 95       	ret

000072f0 <__gesf2>:
__gesf2():
    72f0:	8a df       	rcall	.-236    	; 0x7206 <__fp_cmp>
    72f2:	08 f4       	brcc	.+2      	; 0x72f6 <__gesf2+0x6>
    72f4:	8f ef       	ldi	r24, 0xFF	; 255
    72f6:	08 95       	ret

000072f8 <__mulsf3>:
__mulsf3():
    72f8:	0b d0       	rcall	.+22     	; 0x7310 <__mulsf3x>
    72fa:	c0 cf       	rjmp	.-128    	; 0x727c <__fp_round>
    72fc:	b1 df       	rcall	.-158    	; 0x7260 <__fp_pscA>
    72fe:	28 f0       	brcs	.+10     	; 0x730a <__mulsf3+0x12>
    7300:	b6 df       	rcall	.-148    	; 0x726e <__fp_pscB>
    7302:	18 f0       	brcs	.+6      	; 0x730a <__mulsf3+0x12>
    7304:	95 23       	and	r25, r21
    7306:	09 f0       	breq	.+2      	; 0x730a <__mulsf3+0x12>
    7308:	a2 cf       	rjmp	.-188    	; 0x724e <__fp_inf>
    730a:	a7 cf       	rjmp	.-178    	; 0x725a <__fp_nan>
    730c:	11 24       	eor	r1, r1
    730e:	ea cf       	rjmp	.-44     	; 0x72e4 <__fp_szero>

00007310 <__mulsf3x>:
__mulsf3x():
    7310:	c6 df       	rcall	.-116    	; 0x729e <__fp_split3>
    7312:	a0 f3       	brcs	.-24     	; 0x72fc <__mulsf3+0x4>

00007314 <__mulsf3_pse>:
    7314:	95 9f       	mul	r25, r21
    7316:	d1 f3       	breq	.-12     	; 0x730c <__mulsf3+0x14>
    7318:	95 0f       	add	r25, r21
    731a:	50 e0       	ldi	r21, 0x00	; 0
    731c:	55 1f       	adc	r21, r21
    731e:	62 9f       	mul	r22, r18
    7320:	f0 01       	movw	r30, r0
    7322:	72 9f       	mul	r23, r18
    7324:	bb 27       	eor	r27, r27
    7326:	f0 0d       	add	r31, r0
    7328:	b1 1d       	adc	r27, r1
    732a:	63 9f       	mul	r22, r19
    732c:	aa 27       	eor	r26, r26
    732e:	f0 0d       	add	r31, r0
    7330:	b1 1d       	adc	r27, r1
    7332:	aa 1f       	adc	r26, r26
    7334:	64 9f       	mul	r22, r20
    7336:	66 27       	eor	r22, r22
    7338:	b0 0d       	add	r27, r0
    733a:	a1 1d       	adc	r26, r1
    733c:	66 1f       	adc	r22, r22
    733e:	82 9f       	mul	r24, r18
    7340:	22 27       	eor	r18, r18
    7342:	b0 0d       	add	r27, r0
    7344:	a1 1d       	adc	r26, r1
    7346:	62 1f       	adc	r22, r18
    7348:	73 9f       	mul	r23, r19
    734a:	b0 0d       	add	r27, r0
    734c:	a1 1d       	adc	r26, r1
    734e:	62 1f       	adc	r22, r18
    7350:	83 9f       	mul	r24, r19
    7352:	a0 0d       	add	r26, r0
    7354:	61 1d       	adc	r22, r1
    7356:	22 1f       	adc	r18, r18
    7358:	74 9f       	mul	r23, r20
    735a:	33 27       	eor	r19, r19
    735c:	a0 0d       	add	r26, r0
    735e:	61 1d       	adc	r22, r1
    7360:	23 1f       	adc	r18, r19
    7362:	84 9f       	mul	r24, r20
    7364:	60 0d       	add	r22, r0
    7366:	21 1d       	adc	r18, r1
    7368:	82 2f       	mov	r24, r18
    736a:	76 2f       	mov	r23, r22
    736c:	6a 2f       	mov	r22, r26
    736e:	11 24       	eor	r1, r1
    7370:	9f 57       	subi	r25, 0x7F	; 127
    7372:	50 40       	sbci	r21, 0x00	; 0
    7374:	8a f0       	brmi	.+34     	; 0x7398 <__mulsf3_pse+0x84>
    7376:	e1 f0       	breq	.+56     	; 0x73b0 <__mulsf3_pse+0x9c>
    7378:	88 23       	and	r24, r24
    737a:	4a f0       	brmi	.+18     	; 0x738e <__mulsf3_pse+0x7a>
    737c:	ee 0f       	add	r30, r30
    737e:	ff 1f       	adc	r31, r31
    7380:	bb 1f       	adc	r27, r27
    7382:	66 1f       	adc	r22, r22
    7384:	77 1f       	adc	r23, r23
    7386:	88 1f       	adc	r24, r24
    7388:	91 50       	subi	r25, 0x01	; 1
    738a:	50 40       	sbci	r21, 0x00	; 0
    738c:	a9 f7       	brne	.-22     	; 0x7378 <__mulsf3_pse+0x64>
    738e:	9e 3f       	cpi	r25, 0xFE	; 254
    7390:	51 05       	cpc	r21, r1
    7392:	70 f0       	brcs	.+28     	; 0x73b0 <__mulsf3_pse+0x9c>
    7394:	5c cf       	rjmp	.-328    	; 0x724e <__fp_inf>
    7396:	a6 cf       	rjmp	.-180    	; 0x72e4 <__fp_szero>
    7398:	5f 3f       	cpi	r21, 0xFF	; 255
    739a:	ec f3       	brlt	.-6      	; 0x7396 <__mulsf3_pse+0x82>
    739c:	98 3e       	cpi	r25, 0xE8	; 232
    739e:	dc f3       	brlt	.-10     	; 0x7396 <__mulsf3_pse+0x82>
    73a0:	86 95       	lsr	r24
    73a2:	77 95       	ror	r23
    73a4:	67 95       	ror	r22
    73a6:	b7 95       	ror	r27
    73a8:	f7 95       	ror	r31
    73aa:	e7 95       	ror	r30
    73ac:	9f 5f       	subi	r25, 0xFF	; 255
    73ae:	c1 f7       	brne	.-16     	; 0x73a0 <__mulsf3_pse+0x8c>
    73b0:	fe 2b       	or	r31, r30
    73b2:	88 0f       	add	r24, r24
    73b4:	91 1d       	adc	r25, r1
    73b6:	96 95       	lsr	r25
    73b8:	87 95       	ror	r24
    73ba:	97 f9       	bld	r25, 7
    73bc:	08 95       	ret

000073be <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    73be:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    73c0:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    73c2:	16 f4       	brtc	.+4      	; 0x73c8 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    73c4:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    73c6:	06 d0       	rcall	.+12     	; 0x73d4 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    73c8:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    73ca:	08 d0       	rcall	.+16     	; 0x73dc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    73cc:	65 d0       	rcall	.+202    	; 0x7498 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    73ce:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    73d0:	05 d0       	rcall	.+10     	; 0x73dc <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    73d2:	3e f4       	brtc	.+14     	; 0x73e2 <__divmodhi4_exit>

000073d4 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    73d4:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    73d6:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    73d8:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    73da:	08 95       	ret

000073dc <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    73dc:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    73de:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    73e0:	7f 4f       	sbci	r23, 0xFF	; 255

000073e2 <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    73e2:	08 95       	ret

000073e4 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    73e4:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    73e6:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    73e8:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    73ea:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    73ec:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    73ee:	0d c0       	rjmp	.+26     	; 0x740a <__udivmodsi4_ep>

000073f0 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    73f0:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    73f2:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    73f4:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    73f6:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    73f8:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    73fa:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    73fc:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    73fe:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    7400:	20 f0       	brcs	.+8      	; 0x740a <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    7402:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    7404:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7406:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    7408:	f5 0b       	sbc	r31, r21

0000740a <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    740a:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    740c:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    740e:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    7410:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    7412:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    7414:	69 f7       	brne	.-38     	; 0x73f0 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    7416:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    7418:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    741a:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    741c:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    741e:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    7420:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    7422:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    7424:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    7426:	08 95       	ret

00007428 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    7428:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    742a:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    742c:	16 f4       	brtc	.+4      	; 0x7432 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    742e:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    7430:	0f d0       	rcall	.+30     	; 0x7450 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    7432:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    7434:	05 d0       	rcall	.+10     	; 0x7440 <__divmodsi4_neg2>
    7436:	d6 df       	rcall	.-84     	; 0x73e4 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    7438:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    743a:	02 d0       	rcall	.+4      	; 0x7440 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    743c:	46 f4       	brtc	.+16     	; 0x744e <__divmodsi4_exit>
    743e:	08 c0       	rjmp	.+16     	; 0x7450 <__negsi2>

00007440 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    7440:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    7442:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    7444:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    7446:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    7448:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    744a:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    744c:	5f 4f       	sbci	r21, 0xFF	; 255

0000744e <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    744e:	08 95       	ret

00007450 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    7450:	90 95       	com	r25
    7452:	80 95       	com	r24
    7454:	70 95       	com	r23
    7456:	61 95       	neg	r22
    7458:	7f 4f       	sbci	r23, 0xFF	; 255
    745a:	8f 4f       	sbci	r24, 0xFF	; 255
    745c:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    745e:	08 95       	ret

00007460 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    7460:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    7462:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    7464:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    7466:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    7468:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    746a:	09 94       	ijmp

0000746c <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    746c:	29 d0       	rcall	.+82     	; 0x74c0 <__umulhisi3>

0000746e <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    746e:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    7470:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    7472:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    7474:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    7476:	08 95       	ret

00007478 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    7478:	23 d0       	rcall	.+70     	; 0x74c0 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    747a:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    747c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    747e:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    7480:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    7482:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    7484:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    7486:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    7488:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    748a:	08 95       	ret

0000748c <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    748c:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    748e:	f4 cf       	rjmp	.-24     	; 0x7478 <__muluhisi3>

00007490 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    7490:	f3 df       	rcall	.-26     	; 0x7478 <__muluhisi3>
    7492:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    7494:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    7496:	08 95       	ret

00007498 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    7498:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    749a:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    749c:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    749e:	07 c0       	rjmp	.+14     	; 0x74ae <__udivmodhi4_ep>

000074a0 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    74a0:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    74a2:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    74a4:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    74a6:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    74a8:	10 f0       	brcs	.+4      	; 0x74ae <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    74aa:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    74ac:	b7 0b       	sbc	r27, r23

000074ae <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    74ae:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    74b0:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    74b2:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    74b4:	a9 f7       	brne	.-22     	; 0x74a0 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    74b6:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    74b8:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    74ba:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    74bc:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    74be:	08 95       	ret

000074c0 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    74c0:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    74c2:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    74c4:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    74c6:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    74c8:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    74ca:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    74cc:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    74ce:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    74d0:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    74d2:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    74d4:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    74d6:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    74d8:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    74da:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    74dc:	08 95       	ret

000074de <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    74de:	f8 94       	cli

000074e0 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    74e0:	ff cf       	rjmp	.-2      	; 0x74e0 <__stop_program>

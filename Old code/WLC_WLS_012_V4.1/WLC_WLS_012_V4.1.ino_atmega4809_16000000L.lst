
C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_614039/WLC_WLS_012_V4.1.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 db 20 	jmp	0x41b6	; 0x41b6 <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 b3 20 	jmp	0x4166	; 0x4166 <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 85 20 	jmp	0x410a	; 0x410a <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 5f 20 	jmp	0x40be	; 0x40be <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	70 21       	and	r23, r0

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	ec ea       	ldi	r30, 0xAC	; 172
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	f3 e7       	ldi	r31, 0x73	; 115
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a8 31       	cpi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a8 e1       	ldi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	a8 3d       	cpi	r26, 0xD8	; 216
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 d9 38 	call	0x71b2	; 0x71b2 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 bb 24 	call	0x4976	; 0x4976 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 18 39 	jmp	0x7230	; 0x7230 <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Procss.cpp:68
bool select_product_type=0;
bool checkTempRaised=0; //Siddhesh

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     2f4:	80 91 82 28 	lds	r24, 0x2882	; 0x802882 <Alternate_Display_Flag>
     2f8:	88 23       	and	r24, r24
     2fa:	19 f0       	breq	.+6      	; 0x302 <Alternate_Display()+0xe>
     2fc:	10 92 82 28 	sts	0x2882, r1	; 0x802882 <Alternate_Display_Flag>
     300:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Procss.cpp:69
  else                       Alternate_Display_Flag=1;
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	80 93 82 28 	sts	0x2882, r24	; 0x802882 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Procss.cpp:70
}
     308:	08 95       	ret

0000030a <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:94
  } 
}

void VerDisp()
{
  StopVersionDisplay=0;        //-----------------------To stop version display  
     30a:	10 92 04 28 	sts	0x2804, r1	; 0x802804 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:95
}
     30e:	08 95       	ret

00000310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:64
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     310:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
     314:	88 23       	and	r24, r24
     316:	09 f4       	brne	.+2      	; 0x31a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xa>
     318:	5e c0       	rjmp	.+188    	; 0x3d6 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:66
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     31a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     31e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     322:	82 30       	cpi	r24, 0x02	; 2
     324:	91 05       	cpc	r25, r1
     326:	71 f4       	brne	.+28     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     328:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     32c:	22 23       	and	r18, r18
     32e:	51 f0       	breq	.+20     	; 0x344 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x34>
     330:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     334:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     338:	2f 5f       	subi	r18, 0xFF	; 255
     33a:	3f 4f       	sbci	r19, 0xFF	; 255
     33c:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     340:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
     344:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     348:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     34c:	25 3d       	cpi	r18, 0xD5	; 213
     34e:	31 05       	cpc	r19, r1
     350:	a4 f0       	brlt	.+40     	; 0x37a <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x6a>
     352:	24 ed       	ldi	r18, 0xD4	; 212
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     35a:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:67
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     35e:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     362:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     366:	25 3d       	cpi	r18, 0xD5	; 213
     368:	31 05       	cpc	r19, r1
     36a:	cc f0       	brlt	.+50     	; 0x39e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x8e>
     36c:	84 ed       	ldi	r24, 0xD4	; 212
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 93 42 29 	sts	0x2942, r24	; 0x802942 <SET_LONG_VALUE+0x28>
     374:	90 93 43 29 	sts	0x2943, r25	; 0x802943 <SET_LONG_VALUE+0x29>
     378:	08 95       	ret
     37a:	88 30       	cpi	r24, 0x08	; 8
     37c:	91 05       	cpc	r25, r1
     37e:	79 f7       	brne	.-34     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     380:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     384:	22 23       	and	r18, r18
     386:	59 f3       	breq	.-42     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
     388:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     38c:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	20 93 42 29 	sts	0x2942, r18	; 0x802942 <SET_LONG_VALUE+0x28>
     398:	30 93 43 29 	sts	0x2943, r19	; 0x802943 <SET_LONG_VALUE+0x29>
     39c:	e0 cf       	rjmp	.-64     	; 0x35e <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:70
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	fc 01       	movw	r30, r24
     3a4:	e6 5e       	subi	r30, 0xE6	; 230
     3a6:	f6 4d       	sbci	r31, 0xD6	; 214
     3a8:	20 81       	ld	r18, Z
     3aa:	31 81       	ldd	r19, Z+1	; 0x01
     3ac:	2f 5f       	subi	r18, 0xFF	; 255
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	20 83       	st	Z, r18
     3b2:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:71
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3b4:	dc 01       	movw	r26, r24
     3b6:	ac 59       	subi	r26, 0x9C	; 156
     3b8:	bc 44       	sbci	r27, 0x4C	; 76
     3ba:	4d 91       	ld	r20, X+
     3bc:	5c 91       	ld	r21, X
     3be:	42 17       	cp	r20, r18
     3c0:	53 07       	cpc	r21, r19
     3c2:	0c f0       	brlt	.+2      	; 0x3c6 <Bclass::SET_CHANGE_UP() [clone .constprop.69]+0xb6>
     3c4:	8e c0       	rjmp	.+284    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     3c6:	82 5c       	subi	r24, 0xC2	; 194
     3c8:	9c 44       	sbci	r25, 0x4C	; 76
     3ca:	dc 01       	movw	r26, r24
     3cc:	8d 91       	ld	r24, X+
     3ce:	9c 91       	ld	r25, X
     3d0:	80 83       	st	Z, r24
     3d2:	91 83       	std	Z+1, r25	; 0x01
     3d4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:76
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3d6:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
     3da:	81 30       	cpi	r24, 0x01	; 1
     3dc:	b1 f4       	brne	.+44     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:78
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3de:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
     3e2:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
     3e6:	01 96       	adiw	r24, 0x01	; 1
     3e8:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     3ec:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     3f0:	20 91 0b 29 	lds	r18, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
     3f4:	30 91 0c 29 	lds	r19, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
     3f8:	28 17       	cp	r18, r24
     3fa:	39 07       	cpc	r19, r25
     3fc:	0c f0       	brlt	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fe:	71 c0       	rjmp	.+226    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     400:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <SET_VALUE+0x2>
     404:	10 92 10 29 	sts	0x2910, r1	; 0x802910 <SET_VALUE+0x3>
     408:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:80
               }
                else if( ENTER_BUT == 2 )   
     40a:	82 30       	cpi	r24, 0x02	; 2
     40c:	39 f5       	brne	.+78     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:82
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     40e:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     412:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     416:	01 96       	adiw	r24, 0x01	; 1
     418:	8a 30       	cpi	r24, 0x0A	; 10
     41a:	91 05       	cpc	r25, r1
     41c:	e4 f4       	brge	.+56     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     41e:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     422:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:83
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     426:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     42a:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     434:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     438:	20 91 09 29 	lds	r18, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
     43c:	30 91 0a 29 	lds	r19, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
     440:	28 17       	cp	r18, r24
     442:	39 07       	cpc	r19, r25
     444:	0c f0       	brlt	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	4d c0       	rjmp	.+154    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     448:	80 e2       	ldi	r24, 0x20	; 32
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     450:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     454:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:82
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     456:	89 e0       	ldi	r24, 0x09	; 9
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	e1 cf       	rjmp	.-62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:85
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     45c:	83 30       	cpi	r24, 0x03	; 3
     45e:	91 f4       	brne	.+36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:87
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     460:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
     464:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
     468:	01 96       	adiw	r24, 0x01	; 1
     46a:	84 36       	cpi	r24, 0x64	; 100
     46c:	91 05       	cpc	r25, r1
     46e:	2c f4       	brge	.+10     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     470:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
     474:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
     478:	08 95       	ret
     47a:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_VALUE+0x6>
     47e:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_VALUE+0x7>
     482:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:89
               }
               else if( ENTER_BUT == 4 )   
     484:	84 30       	cpi	r24, 0x04	; 4
     486:	91 f4       	brne	.+36     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:91
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     488:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
     48c:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	8c 33       	cpi	r24, 0x3C	; 60
     494:	91 05       	cpc	r25, r1
     496:	2c f4       	brge	.+10     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     498:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
     49c:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
     4a0:	08 95       	ret
     4a2:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_VALUE+0x8>
     4a6:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x9>
     4aa:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:93
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4ac:	85 30       	cpi	r24, 0x05	; 5
     4ae:	c9 f4       	brne	.+50     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b0:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
     4b4:	88 23       	and	r24, r24
     4b6:	a9 f0       	breq	.+42     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
     4b8:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
     4bc:	88 23       	and	r24, r24
     4be:	89 f0       	breq	.+34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:95
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4c0:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
     4c4:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
     4c8:	01 96       	adiw	r24, 0x01	; 1
     4ca:	82 30       	cpi	r24, 0x02	; 2
     4cc:	91 05       	cpc	r25, r1
     4ce:	2c f4       	brge	.+10     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4d0:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
     4d4:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
     4d8:	08 95       	ret
     4da:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0xa>
     4de:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:98
               }
  }
}
     4e2:	08 95       	ret

000004e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:102

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4e4:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
     4e8:	88 23       	and	r24, r24
     4ea:	09 f4       	brne	.+2      	; 0x4ee <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xa>
     4ec:	57 c0       	rjmp	.+174    	; 0x59c <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:104
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     4ee:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     4f2:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     4f6:	82 30       	cpi	r24, 0x02	; 2
     4f8:	91 05       	cpc	r25, r1
     4fa:	71 f4       	brne	.+28     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     4fc:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     500:	22 23       	and	r18, r18
     502:	51 f0       	breq	.+20     	; 0x518 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x34>
     504:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     508:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     50c:	21 50       	subi	r18, 0x01	; 1
     50e:	31 09       	sbc	r19, r1
     510:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     514:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
     518:	20 91 40 29 	lds	r18, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
     51c:	30 91 41 29 	lds	r19, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
     520:	20 32       	cpi	r18, 0x20	; 32
     522:	31 05       	cpc	r19, r1
     524:	a4 f4       	brge	.+40     	; 0x54e <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x6a>
     526:	20 e2       	ldi	r18, 0x20	; 32
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
     52e:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:105
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     532:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     536:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     53a:	20 32       	cpi	r18, 0x20	; 32
     53c:	31 05       	cpc	r19, r1
     53e:	cc f4       	brge	.+50     	; 0x572 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x8e>
     540:	80 e2       	ldi	r24, 0x20	; 32
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	80 93 42 29 	sts	0x2942, r24	; 0x802942 <SET_LONG_VALUE+0x28>
     548:	90 93 43 29 	sts	0x2943, r25	; 0x802943 <SET_LONG_VALUE+0x29>
     54c:	08 95       	ret
     54e:	88 30       	cpi	r24, 0x08	; 8
     550:	91 05       	cpc	r25, r1
     552:	79 f7       	brne	.-34     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     554:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     558:	22 23       	and	r18, r18
     55a:	59 f3       	breq	.-42     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
     55c:	20 91 42 29 	lds	r18, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
     560:	30 91 43 29 	lds	r19, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
     564:	21 50       	subi	r18, 0x01	; 1
     566:	31 09       	sbc	r19, r1
     568:	20 93 42 29 	sts	0x2942, r18	; 0x802942 <SET_LONG_VALUE+0x28>
     56c:	30 93 43 29 	sts	0x2943, r19	; 0x802943 <SET_LONG_VALUE+0x29>
     570:	e0 cf       	rjmp	.-64     	; 0x532 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:108
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     572:	88 0f       	add	r24, r24
     574:	99 1f       	adc	r25, r25
     576:	fc 01       	movw	r30, r24
     578:	e6 5e       	subi	r30, 0xE6	; 230
     57a:	f6 4d       	sbci	r31, 0xD6	; 214
     57c:	20 81       	ld	r18, Z
     57e:	31 81       	ldd	r19, Z+1	; 0x01
     580:	21 50       	subi	r18, 0x01	; 1
     582:	31 09       	sbc	r19, r1
     584:	20 83       	st	Z, r18
     586:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:109
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     588:	37 ff       	sbrs	r19, 7
     58a:	8c c0       	rjmp	.+280    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     58c:	8c 5e       	subi	r24, 0xEC	; 236
     58e:	9c 44       	sbci	r25, 0x4C	; 76
     590:	dc 01       	movw	r26, r24
     592:	8d 91       	ld	r24, X+
     594:	9c 91       	ld	r25, X
     596:	80 83       	st	Z, r24
     598:	91 83       	std	Z+1, r25	; 0x01
     59a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:114
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     59c:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	a1 f4       	brne	.+40     	; 0x5cc <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:116
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5a4:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
     5a8:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     5b2:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     5b6:	97 ff       	sbrs	r25, 7
     5b8:	75 c0       	rjmp	.+234    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     5ba:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
     5be:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
     5c2:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
     5c6:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
     5ca:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:118
    }
    else if( ENTER_BUT == 2 )   
     5cc:	82 30       	cpi	r24, 0x02	; 2
     5ce:	99 f5       	brne	.+102    	; 0x636 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:120
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5d0:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
     5d4:	81 11       	cpse	r24, r1
     5d6:	09 c0       	rjmp	.+18     	; 0x5ea <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x106>
     5d8:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     5dc:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     5e6:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
     5ea:	80 91 11 29 	lds	r24, 0x2911	; 0x802911 <SET_VALUE+0x4>
     5ee:	90 91 12 29 	lds	r25, 0x2912	; 0x802912 <SET_VALUE+0x5>
     5f2:	97 ff       	sbrs	r25, 7
     5f4:	16 c0       	rjmp	.+44     	; 0x622 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x13e>
     5f6:	89 e0       	ldi	r24, 0x09	; 9
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
     5fe:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:121
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     602:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     606:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     60a:	80 97       	sbiw	r24, 0x20	; 32
     60c:	0c f0       	brlt	.+2      	; 0x610 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x12c>
     60e:	4a c0       	rjmp	.+148    	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     610:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
     614:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
     618:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     61c:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     620:	08 95       	ret
     622:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
     626:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
     630:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
     634:	e6 cf       	rjmp	.-52     	; 0x602 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:123
    }
    else if( ENTER_BUT == 3 )   
     636:	83 30       	cpi	r24, 0x03	; 3
     638:	79 f4       	brne	.+30     	; 0x658 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:125
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     63a:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
     63e:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	97 fd       	sbrc	r25, 7
     646:	05 c0       	rjmp	.+10     	; 0x652 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x16e>
     648:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
     64c:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
     650:	08 95       	ret
     652:	83 e6       	ldi	r24, 0x63	; 99
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	f8 cf       	rjmp	.-16     	; 0x648 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:127
    }
    else if( ENTER_BUT == 4 )   
     658:	84 30       	cpi	r24, 0x04	; 4
     65a:	79 f4       	brne	.+30     	; 0x67a <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:129
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     65c:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
     660:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	97 fd       	sbrc	r25, 7
     668:	05 c0       	rjmp	.+10     	; 0x674 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x190>
     66a:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
     66e:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
     672:	08 95       	ret
     674:	8b e3       	ldi	r24, 0x3B	; 59
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	f8 cf       	rjmp	.-16     	; 0x66a <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:131
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     67a:	85 30       	cpi	r24, 0x05	; 5
     67c:	99 f4       	brne	.+38     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     67e:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
     682:	88 23       	and	r24, r24
     684:	79 f0       	breq	.+30     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
     686:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
     68a:	88 23       	and	r24, r24
     68c:	59 f0       	breq	.+22     	; 0x6a4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     68e:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
     692:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
     696:	01 97       	sbiw	r24, 0x01	; 1
     698:	97 fd       	sbrc	r25, 7
     69a:	05 c0       	rjmp	.+10     	; 0x6a6 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1c2>
     69c:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
     6a0:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:136
    }
  }
}
     6a4:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Butn.cpp:133
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	f8 cf       	rjmp	.-16     	; 0x69c <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]+0x1b8>

000006ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:209
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     6ac:	cf 92       	push	r12
     6ae:	df 92       	push	r13
     6b0:	ef 92       	push	r14
     6b2:	ff 92       	push	r15
     6b4:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:211
{ 
    first_digit = num / 1000;
     6b6:	28 ee       	ldi	r18, 0xE8	; 232
     6b8:	33 e0       	ldi	r19, 0x03	; 3
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e0       	ldi	r21, 0x00	; 0
     6be:	0e 94 bd 38 	call	0x717a	; 0x717a <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:212
    digits1[0] = first_digit;
     6c2:	ef ee       	ldi	r30, 0xEF	; 239
     6c4:	f8 e2       	ldi	r31, 0x28	; 40
     6c6:	20 83       	st	Z, r18
     6c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:213
    int first_left = num - (first_digit * 1000);
     6ca:	68 ee       	ldi	r22, 0xE8	; 232
     6cc:	73 e0       	ldi	r23, 0x03	; 3
     6ce:	62 9f       	mul	r22, r18
     6d0:	c0 01       	movw	r24, r0
     6d2:	63 9f       	mul	r22, r19
     6d4:	90 0d       	add	r25, r0
     6d6:	72 9f       	mul	r23, r18
     6d8:	90 0d       	add	r25, r0
     6da:	11 24       	eor	r1, r1
     6dc:	c8 1a       	sub	r12, r24
     6de:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:214
    second_digit = first_left / 100;
     6e0:	c6 01       	movw	r24, r12
     6e2:	64 e6       	ldi	r22, 0x64	; 100
     6e4:	70 e0       	ldi	r23, 0x00	; 0
     6e6:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:215
    digits1[1] = second_digit;
     6ea:	62 83       	std	Z+2, r22	; 0x02
     6ec:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:216
    int second_left = first_left - (second_digit * 100);
     6ee:	2c e9       	ldi	r18, 0x9C	; 156
     6f0:	26 03       	mulsu	r18, r22
     6f2:	c0 01       	movw	r24, r0
     6f4:	27 9f       	mul	r18, r23
     6f6:	90 0d       	add	r25, r0
     6f8:	11 24       	eor	r1, r1
     6fa:	c8 0e       	add	r12, r24
     6fc:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:217
    third_digit = second_left / 10;
     6fe:	c6 01       	movw	r24, r12
     700:	6a e0       	ldi	r22, 0x0A	; 10
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:218
    digits1[2] = third_digit;
     708:	64 83       	std	Z+4, r22	; 0x04
     70a:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:219
    fourth_digit = second_left - (third_digit * 10);
     70c:	26 ef       	ldi	r18, 0xF6	; 246
     70e:	26 03       	mulsu	r18, r22
     710:	c0 01       	movw	r24, r0
     712:	27 9f       	mul	r18, r23
     714:	90 0d       	add	r25, r0
     716:	11 24       	eor	r1, r1
     718:	c8 0e       	add	r12, r24
     71a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:220
    digits1[3] = fourth_digit;
     71c:	c6 82       	std	Z+6, r12	; 0x06
     71e:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:221
}
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:223

void Eclass:: BREAK_NUMBER2(long num2) 
     72a:	cf 92       	push	r12
     72c:	df 92       	push	r13
     72e:	ef 92       	push	r14
     730:	ff 92       	push	r15
     732:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:225
{ 
    first_digit2 = num2 / 1000;
     734:	28 ee       	ldi	r18, 0xE8	; 232
     736:	33 e0       	ldi	r19, 0x03	; 3
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e0       	ldi	r21, 0x00	; 0
     73c:	0e 94 bd 38 	call	0x717a	; 0x717a <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:226
    digits2[0] = first_digit2;
     740:	e7 ee       	ldi	r30, 0xE7	; 231
     742:	f8 e2       	ldi	r31, 0x28	; 40
     744:	20 83       	st	Z, r18
     746:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:227
    int first_left2 = num2 - (first_digit2 * 1000);
     748:	68 ee       	ldi	r22, 0xE8	; 232
     74a:	73 e0       	ldi	r23, 0x03	; 3
     74c:	62 9f       	mul	r22, r18
     74e:	c0 01       	movw	r24, r0
     750:	63 9f       	mul	r22, r19
     752:	90 0d       	add	r25, r0
     754:	72 9f       	mul	r23, r18
     756:	90 0d       	add	r25, r0
     758:	11 24       	eor	r1, r1
     75a:	c8 1a       	sub	r12, r24
     75c:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:228
    second_digit2 = first_left2 / 100;
     75e:	c6 01       	movw	r24, r12
     760:	64 e6       	ldi	r22, 0x64	; 100
     762:	70 e0       	ldi	r23, 0x00	; 0
     764:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:229
    digits2[1] = second_digit2;
     768:	62 83       	std	Z+2, r22	; 0x02
     76a:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:230
    int second_left2 = first_left2 - (second_digit2 * 100);
     76c:	2c e9       	ldi	r18, 0x9C	; 156
     76e:	26 03       	mulsu	r18, r22
     770:	c0 01       	movw	r24, r0
     772:	27 9f       	mul	r18, r23
     774:	90 0d       	add	r25, r0
     776:	11 24       	eor	r1, r1
     778:	c8 0e       	add	r12, r24
     77a:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:231
    third_digit2 = second_left2 / 10;
     77c:	c6 01       	movw	r24, r12
     77e:	6a e0       	ldi	r22, 0x0A	; 10
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:232
    digits2[2] = third_digit2;
     786:	64 83       	std	Z+4, r22	; 0x04
     788:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:233
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     78a:	26 ef       	ldi	r18, 0xF6	; 246
     78c:	26 03       	mulsu	r18, r22
     78e:	c0 01       	movw	r24, r0
     790:	27 9f       	mul	r18, r23
     792:	90 0d       	add	r25, r0
     794:	11 24       	eor	r1, r1
     796:	c8 0e       	add	r12, r24
     798:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:234
    digits2[3] = fourth_digit2;
     79a:	c6 82       	std	Z+6, r12	; 0x06
     79c:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:235
}
     79e:	ff 90       	pop	r15
     7a0:	ef 90       	pop	r14
     7a2:	df 90       	pop	r13
     7a4:	cf 90       	pop	r12
     7a6:	08 95       	ret

000007a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:58
      sample = 0;   AvgVout = 0;   
    }
      avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     7a8:	4f 92       	push	r4
     7aa:	5f 92       	push	r5
     7ac:	6f 92       	push	r6
     7ae:	7f 92       	push	r7
     7b0:	8f 92       	push	r8
     7b2:	9f 92       	push	r9
     7b4:	af 92       	push	r10
     7b6:	bf 92       	push	r11
     7b8:	cf 92       	push	r12
     7ba:	df 92       	push	r13
     7bc:	ef 92       	push	r14
     7be:	ff 92       	push	r15
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	40 e2       	ldi	r20, 0x20	; 32
     7c6:	51 e4       	ldi	r21, 0x41	; 65
     7c8:	60 91 03 29 	lds	r22, 0x2903	; 0x802903 <ERROR_CAL1>
     7cc:	70 91 04 29 	lds	r23, 0x2904	; 0x802904 <ERROR_CAL1+0x1>
     7d0:	80 91 05 29 	lds	r24, 0x2905	; 0x802905 <ERROR_CAL1+0x2>
     7d4:	90 91 06 29 	lds	r25, 0x2906	; 0x802906 <ERROR_CAL1+0x3>
     7d8:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:60
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     7dc:	20 91 e6 28 	lds	r18, 0x28E6	; 0x8028e6 <SIGN>
     7e0:	21 11       	cpse	r18, r1
     7e2:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:61
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     7e4:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
     7e8:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
     7ec:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
     7f0:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:63
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     7f4:	f0 90 e1 28 	lds	r15, 0x28E1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
     7f8:	ff 20       	and	r15, r15
     7fa:	09 f4       	brne	.+2      	; 0x7fe <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x56>
     7fc:	55 c0       	rjmp	.+170    	; 0x8a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x100>
     7fe:	20 91 e2 28 	lds	r18, 0x28E2	; 0x8028e2 <ERROR_CAL>
     802:	30 91 e3 28 	lds	r19, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
     806:	40 91 e4 28 	lds	r20, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
     80a:	50 91 e5 28 	lds	r21, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
     80e:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
     812:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
     816:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
     81a:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
     81e:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
     822:	60 93 dd 28 	sts	0x28DD, r22	; 0x8028dd <TEMP_DEG_RAW2>
     826:	70 93 de 28 	sts	0x28DE, r23	; 0x8028de <TEMP_DEG_RAW2+0x1>
     82a:	80 93 df 28 	sts	0x28DF, r24	; 0x8028df <TEMP_DEG_RAW2+0x2>
     82e:	90 93 e0 28 	sts	0x28E0, r25	; 0x8028e0 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:66
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;
    
    if (!CAL_SELECT_VALUE)
     832:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
     836:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
     83a:	89 2b       	or	r24, r25
     83c:	09 f0       	breq	.+2      	; 0x840 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x98>
     83e:	7e c0       	rjmp	.+252    	; 0x93c <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:68
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     840:	ff 20       	and	r15, r15
     842:	09 f4       	brne	.+2      	; 0x846 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x9e>
     844:	50 c0       	rjmp	.+160    	; 0x8e6 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:70
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     846:	60 91 dd 28 	lds	r22, 0x28DD	; 0x8028dd <TEMP_DEG_RAW2>
     84a:	70 91 de 28 	lds	r23, 0x28DE	; 0x8028de <TEMP_DEG_RAW2+0x1>
     84e:	80 91 df 28 	lds	r24, 0x28DF	; 0x8028df <TEMP_DEG_RAW2+0x2>
     852:	90 91 e0 28 	lds	r25, 0x28E0	; 0x8028e0 <TEMP_DEG_RAW2+0x3>
     856:	60 93 ff 28 	sts	0x28FF, r22	; 0x8028ff <TEMP_DEG>
     85a:	70 93 00 29 	sts	0x2900, r23	; 0x802900 <TEMP_DEG+0x1>
     85e:	80 93 01 29 	sts	0x2901, r24	; 0x802901 <TEMP_DEG+0x2>
     862:	90 93 02 29 	sts	0x2902, r25	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:71
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     866:	26 e6       	ldi	r18, 0x66	; 102
     868:	36 e6       	ldi	r19, 0x66	; 102
     86a:	46 ee       	ldi	r20, 0xE6	; 230
     86c:	5f e3       	ldi	r21, 0x3F	; 63
     86e:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	40 e0       	ldi	r20, 0x00	; 0
     878:	52 e4       	ldi	r21, 0x42	; 66
     87a:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
     87e:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <TEMP_FAH>
     882:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <TEMP_FAH+0x1>
     886:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <TEMP_FAH+0x2>
     88a:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:89
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
   }
}
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:64
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;
     8a8:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
     8ac:	88 23       	and	r24, r24
     8ae:	09 f2       	breq	.-126    	; 0x832 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
     8b0:	20 91 e2 28 	lds	r18, 0x28E2	; 0x8028e2 <ERROR_CAL>
     8b4:	30 91 e3 28 	lds	r19, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
     8b8:	40 91 e4 28 	lds	r20, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
     8bc:	50 91 e5 28 	lds	r21, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
     8c0:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
     8c4:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
     8c8:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
     8cc:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
     8d0:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
     8d4:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH_RAW2>
     8d8:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH_RAW2+0x1>
     8dc:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH_RAW2+0x2>
     8e0:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH_RAW2+0x3>
     8e4:	a6 cf       	rjmp	.-180    	; 0x832 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:73
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     8e6:	80 91 dc 28 	lds	r24, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
     8ea:	88 23       	and	r24, r24
     8ec:	81 f2       	breq	.-96     	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:75
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     8ee:	c0 90 d4 28 	lds	r12, 0x28D4	; 0x8028d4 <TEMP_FAH_RAW2>
     8f2:	d0 90 d5 28 	lds	r13, 0x28D5	; 0x8028d5 <TEMP_FAH_RAW2+0x1>
     8f6:	e0 90 d6 28 	lds	r14, 0x28D6	; 0x8028d6 <TEMP_FAH_RAW2+0x2>
     8fa:	f0 90 d7 28 	lds	r15, 0x28D7	; 0x8028d7 <TEMP_FAH_RAW2+0x3>
     8fe:	20 e0       	ldi	r18, 0x00	; 0
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	40 e0       	ldi	r20, 0x00	; 0
     904:	52 e4       	ldi	r21, 0x42	; 66
     906:	c7 01       	movw	r24, r14
     908:	b6 01       	movw	r22, r12
     90a:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
     90e:	26 e6       	ldi	r18, 0x66	; 102
     910:	36 e6       	ldi	r19, 0x66	; 102
     912:	46 ee       	ldi	r20, 0xE6	; 230
     914:	5f e3       	ldi	r21, 0x3F	; 63
     916:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
     91a:	60 93 ff 28 	sts	0x28FF, r22	; 0x8028ff <TEMP_DEG>
     91e:	70 93 00 29 	sts	0x2900, r23	; 0x802900 <TEMP_DEG+0x1>
     922:	80 93 01 29 	sts	0x2901, r24	; 0x802901 <TEMP_DEG+0x2>
     926:	90 93 02 29 	sts	0x2902, r25	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:76
          TEMP_FAH  =  TEMP_FAH_RAW2;
     92a:	c0 92 ce 28 	sts	0x28CE, r12	; 0x8028ce <TEMP_FAH>
     92e:	d0 92 cf 28 	sts	0x28CF, r13	; 0x8028cf <TEMP_FAH+0x1>
     932:	e0 92 d0 28 	sts	0x28D0, r14	; 0x8028d0 <TEMP_FAH+0x2>
     936:	f0 92 d1 28 	sts	0x28D1, r15	; 0x8028d1 <TEMP_FAH+0x3>
     93a:	a9 cf       	rjmp	.-174    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     93c:	60 91 ca 28 	lds	r22, 0x28CA	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
     940:	70 91 cb 28 	lds	r23, 0x28CB	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
     944:	80 91 cc 28 	lds	r24, 0x28CC	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
     948:	90 91 cd 28 	lds	r25, 0x28CD	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
     94c:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e2       	ldi	r20, 0x20	; 32
     956:	51 e4       	ldi	r21, 0x41	; 65
     958:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
     95c:	4b 01       	movw	r8, r22
     95e:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:83
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     960:	60 91 c2 28 	lds	r22, 0x28C2	; 0x8028c2 <MASTER_LOW_CONV>
     964:	70 91 c3 28 	lds	r23, 0x28C3	; 0x8028c3 <MASTER_LOW_CONV+0x1>
     968:	80 91 c4 28 	lds	r24, 0x28C4	; 0x8028c4 <MASTER_LOW_CONV+0x2>
     96c:	90 91 c5 28 	lds	r25, 0x28C5	; 0x8028c5 <MASTER_LOW_CONV+0x3>
     970:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	40 e2       	ldi	r20, 0x20	; 32
     97a:	51 e4       	ldi	r21, 0x41	; 65
     97c:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
     980:	6b 01       	movw	r12, r22
     982:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:84
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     984:	60 91 be 28 	lds	r22, 0x28BE	; 0x8028be <MASTER_HIGH_CONV>
     988:	70 91 bf 28 	lds	r23, 0x28BF	; 0x8028bf <MASTER_HIGH_CONV+0x1>
     98c:	80 91 c0 28 	lds	r24, 0x28C0	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
     990:	90 91 c1 28 	lds	r25, 0x28C1	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
     994:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	30 e0       	ldi	r19, 0x00	; 0
     99c:	40 e2       	ldi	r20, 0x20	; 32
     99e:	51 e4       	ldi	r21, 0x41	; 65
     9a0:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     9a4:	a7 01       	movw	r20, r14
     9a6:	96 01       	movw	r18, r12
     9a8:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
     9ac:	2b 01       	movw	r4, r22
     9ae:	3c 01       	movw	r6, r24
     9b0:	a5 01       	movw	r20, r10
     9b2:	94 01       	movw	r18, r8
     9b4:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
     9b8:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
     9bc:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
     9c0:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
     9c4:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	c3 01       	movw	r24, r6
     9ce:	b2 01       	movw	r22, r4
     9d0:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
     9d4:	2b 01       	movw	r4, r22
     9d6:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:82
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     9d8:	60 91 c6 28 	lds	r22, 0x28C6	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
     9dc:	70 91 c7 28 	lds	r23, 0x28C7	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     9e0:	80 91 c8 28 	lds	r24, 0x28C8	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     9e4:	90 91 c9 28 	lds	r25, 0x28C9	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     9e8:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e2       	ldi	r20, 0x20	; 32
     9f2:	51 e4       	ldi	r21, 0x41	; 65
     9f4:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     9f8:	a5 01       	movw	r20, r10
     9fa:	94 01       	movw	r18, r8
     9fc:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
     a00:	9b 01       	movw	r18, r22
     a02:	ac 01       	movw	r20, r24
     a04:	c3 01       	movw	r24, r6
     a06:	b2 01       	movw	r22, r4
     a08:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
     a0c:	a7 01       	movw	r20, r14
     a0e:	96 01       	movw	r18, r12
     a10:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
     a14:	6b 01       	movw	r12, r22
     a16:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:85
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
     a18:	c0 92 ff 28 	sts	0x28FF, r12	; 0x8028ff <TEMP_DEG>
     a1c:	d0 92 00 29 	sts	0x2900, r13	; 0x802900 <TEMP_DEG+0x1>
     a20:	e0 92 01 29 	sts	0x2901, r14	; 0x802901 <TEMP_DEG+0x2>
     a24:	f0 92 02 29 	sts	0x2902, r15	; 0x802902 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:86
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     a28:	26 e6       	ldi	r18, 0x66	; 102
     a2a:	36 e6       	ldi	r19, 0x66	; 102
     a2c:	46 ee       	ldi	r20, 0xE6	; 230
     a2e:	5f e3       	ldi	r21, 0x3F	; 63
     a30:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	40 e0       	ldi	r20, 0x00	; 0
     a3a:	52 e4       	ldi	r21, 0x42	; 66
     a3c:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
     a40:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <TEMP_FAH>
     a44:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <TEMP_FAH+0x1>
     a48:	80 93 d0 28 	sts	0x28D0, r24	; 0x8028d0 <TEMP_FAH+0x2>
     a4c:	90 93 d1 28 	sts	0x28D1, r25	; 0x8028d1 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:87
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	48 ec       	ldi	r20, 0xC8	; 200
     a56:	52 e4       	ldi	r21, 0x42	; 66
     a58:	c7 01       	movw	r24, r14
     a5a:	b6 01       	movw	r22, r12
     a5c:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
     a60:	87 fd       	sbrc	r24, 7
     a62:	15 cf       	rjmp	.-470    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>
     a64:	8d ec       	ldi	r24, 0xCD	; 205
     a66:	9c ec       	ldi	r25, 0xCC	; 204
     a68:	a7 ec       	ldi	r26, 0xC7	; 199
     a6a:	b2 e4       	ldi	r27, 0x42	; 66
     a6c:	80 93 ff 28 	sts	0x28FF, r24	; 0x8028ff <TEMP_DEG>
     a70:	90 93 00 29 	sts	0x2900, r25	; 0x802900 <TEMP_DEG+0x1>
     a74:	a0 93 01 29 	sts	0x2901, r26	; 0x802901 <TEMP_DEG+0x2>
     a78:	b0 93 02 29 	sts	0x2902, r27	; 0x802902 <TEMP_DEG+0x3>
     a7c:	08 cf       	rjmp	.-496    	; 0x88e <Mclass::RTD_TEMP_CONV() [clone .constprop.31]+0xe6>

00000a7e <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:461
}
}

void DEC_LONGPRESS_STOP()
{
  if(checkTempRaised==0)
     a7e:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
     a82:	81 11       	cpse	r24, r1
     a84:	06 c0       	rjmp	.+12     	; 0xa92 <DEC_LONGPRESS_STOP()+0x14>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:463
  {
  i = 0;
     a86:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
     a8a:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:464
  BLINK_STATS=0;
     a8e:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:466
  }
}
     a92:	08 95       	ret

00000a94 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     a94:	f4 cf       	rjmp	.-24     	; 0xa7e <DEC_LONGPRESS_STOP()>

00000a96 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     a96:	af 92       	push	r10
     a98:	bf 92       	push	r11
     a9a:	cf 92       	push	r12
     a9c:	df 92       	push	r13
     a9e:	ef 92       	push	r14
     aa0:	ff 92       	push	r15
     aa2:	0f 93       	push	r16
     aa4:	1f 93       	push	r17
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	6c 01       	movw	r12, r24
     aac:	7b 01       	movw	r14, r22
     aae:	8b 01       	movw	r16, r22
     ab0:	04 0f       	add	r16, r20
     ab2:	15 1f       	adc	r17, r21
     ab4:	eb 01       	movw	r28, r22
     ab6:	5e 01       	movw	r10, r28
     ab8:	ae 18       	sub	r10, r14
     aba:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     abc:	c0 17       	cp	r28, r16
     abe:	d1 07       	cpc	r29, r17
     ac0:	59 f0       	breq	.+22     	; 0xad8 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     ac2:	69 91       	ld	r22, Y+
     ac4:	d6 01       	movw	r26, r12
     ac6:	ed 91       	ld	r30, X+
     ac8:	fc 91       	ld	r31, X
     aca:	01 90       	ld	r0, Z+
     acc:	f0 81       	ld	r31, Z
     ace:	e0 2d       	mov	r30, r0
     ad0:	c6 01       	movw	r24, r12
     ad2:	09 95       	icall
     ad4:	89 2b       	or	r24, r25
     ad6:	79 f7       	brne	.-34     	; 0xab6 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     ad8:	c5 01       	movw	r24, r10
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	df 90       	pop	r13
     ae8:	cf 90       	pop	r12
     aea:	bf 90       	pop	r11
     aec:	af 90       	pop	r10
     aee:	08 95       	ret

00000af0 <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     af0:	fc 01       	movw	r30, r24
     af2:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     af4:	41 8d       	ldd	r20, Z+25	; 0x19
     af6:	25 2f       	mov	r18, r21
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	84 2f       	mov	r24, r20
     afc:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     afe:	82 1b       	sub	r24, r18
     b00:	93 0b       	sbc	r25, r19
     b02:	54 17       	cp	r21, r20
     b04:	10 f0       	brcs	.+4      	; 0xb0a <UartClass::availableForWrite()+0x1a>
     b06:	cf 96       	adiw	r24, 0x3f	; 63
     b08:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     b0a:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     b0c:	08 95       	ret

00000b0e <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     b0e:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     b10:	96 89       	ldd	r25, Z+22	; 0x16
     b12:	87 89       	ldd	r24, Z+23	; 0x17
     b14:	98 17       	cp	r25, r24
     b16:	61 f0       	breq	.+24     	; 0xb30 <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     b18:	a7 89       	ldd	r26, Z+23	; 0x17
     b1a:	ae 0f       	add	r26, r30
     b1c:	bf 2f       	mov	r27, r31
     b1e:	b1 1d       	adc	r27, r1
     b20:	5d 96       	adiw	r26, 0x1d	; 29
     b22:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     b24:	97 89       	ldd	r25, Z+23	; 0x17
     b26:	9f 5f       	subi	r25, 0xFF	; 255
     b28:	9f 73       	andi	r25, 0x3F	; 63
     b2a:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     b30:	8f ef       	ldi	r24, 0xFF	; 255
     b32:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     b34:	08 95       	ret

00000b36 <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     b36:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     b38:	96 89       	ldd	r25, Z+22	; 0x16
     b3a:	87 89       	ldd	r24, Z+23	; 0x17
     b3c:	98 17       	cp	r25, r24
     b3e:	31 f0       	breq	.+12     	; 0xb4c <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     b40:	87 89       	ldd	r24, Z+23	; 0x17
     b42:	e8 0f       	add	r30, r24
     b44:	f1 1d       	adc	r31, r1
     b46:	85 8d       	ldd	r24, Z+29	; 0x1d
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     b4c:	8f ef       	ldi	r24, 0xFF	; 255
     b4e:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     b50:	08 95       	ret

00000b52 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     b52:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     b54:	96 89       	ldd	r25, Z+22	; 0x16
     b56:	27 89       	ldd	r18, Z+23	; 0x17
     b58:	89 2f       	mov	r24, r25
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	80 5c       	subi	r24, 0xC0	; 192
     b5e:	9f 4f       	sbci	r25, 0xFF	; 255
     b60:	82 1b       	sub	r24, r18
     b62:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     b64:	8f 73       	andi	r24, 0x3F	; 63
     b66:	99 27       	eor	r25, r25
     b68:	08 95       	ret

00000b6a <Serial2_available()>:
Serial2_available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     b6a:	8e e4       	ldi	r24, 0x4E	; 78
     b6c:	99 e2       	ldi	r25, 0x29	; 41
     b6e:	f1 df       	rcall	.-30     	; 0xb52 <UartClass::available()>
     b70:	21 e0       	ldi	r18, 0x01	; 1
     b72:	89 2b       	or	r24, r25
     b74:	09 f4       	brne	.+2      	; 0xb78 <Serial2_available()+0xe>
     b76:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     b78:	82 2f       	mov	r24, r18
     b7a:	08 95       	ret

00000b7c <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     b7c:	cf 93       	push	r28
     b7e:	df 93       	push	r29
     b80:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     b82:	e8 81       	ld	r30, Y
     b84:	f9 81       	ldd	r31, Y+1	; 0x01
     b86:	06 80       	ldd	r0, Z+6	; 0x06
     b88:	f7 81       	ldd	r31, Z+7	; 0x07
     b8a:	e0 2d       	mov	r30, r0
     b8c:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     b8e:	ec 85       	ldd	r30, Y+12	; 0x0c
     b90:	fd 85       	ldd	r31, Y+13	; 0x0d
     b92:	86 81       	ldd	r24, Z+6	; 0x06
     b94:	8f 73       	andi	r24, 0x3F	; 63
     b96:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     b98:	ec 85       	ldd	r30, Y+12	; 0x0c
     b9a:	fd 85       	ldd	r31, Y+13	; 0x0d
     b9c:	85 81       	ldd	r24, Z+5	; 0x05
     b9e:	8f 75       	andi	r24, 0x5F	; 95
     ba0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     ba2:	8f 89       	ldd	r24, Y+23	; 0x17
     ba4:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     ba6:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     ba8:	df 91       	pop	r29
     baa:	cf 91       	pop	r28
     bac:	08 95       	ret

00000bae <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     bae:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     bb0:	61 30       	cpi	r22, 0x01	; 1
     bb2:	19 f4       	brne	.+6      	; 0xbba <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     bb4:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     bba:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     bbc:	66 23       	and	r22, r22
     bbe:	d9 f3       	breq	.-10     	; 0xbb6 <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     bc0:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     bc2:	08 95       	ret

00000bc4 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     bc4:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     bc6:	54 96       	adiw	r26, 0x14	; 20
     bc8:	1c 92       	st	X, r1
     bca:	54 97       	sbiw	r26, 0x14	; 20
     bcc:	54 96       	adiw	r26, 0x14	; 20
     bce:	8c 91       	ld	r24, X
     bd0:	54 97       	sbiw	r26, 0x14	; 20
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	a0 f4       	brcc	.+40     	; 0xbfe <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     bd6:	28 2f       	mov	r18, r24
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	f9 01       	movw	r30, r18
     bdc:	ee 0f       	add	r30, r30
     bde:	ff 1f       	adc	r31, r31
     be0:	e2 0f       	add	r30, r18
     be2:	f3 1f       	adc	r31, r19
     be4:	ea 0f       	add	r30, r26
     be6:	fb 1f       	adc	r31, r27
     be8:	97 85       	ldd	r25, Z+15	; 0x0f
     bea:	96 13       	cpse	r25, r22
     bec:	03 c0       	rjmp	.+6      	; 0xbf4 <UartClass::pins(unsigned char, unsigned char)+0x30>
     bee:	96 85       	ldd	r25, Z+14	; 0x0e
     bf0:	94 17       	cp	r25, r20
     bf2:	49 f0       	breq	.+18     	; 0xc06 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	54 96       	adiw	r26, 0x14	; 20
     bf8:	8c 93       	st	X, r24
     bfa:	54 97       	sbiw	r26, 0x14	; 20
     bfc:	e7 cf       	rjmp	.-50     	; 0xbcc <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     bfe:	54 96       	adiw	r26, 0x14	; 20
     c00:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     c06:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     c08:	08 95       	ret

00000c0a <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     c10:	90 8d       	ldd	r25, Z+24	; 0x18
     c12:	81 8d       	ldd	r24, Z+25	; 0x19
     c14:	c4 85       	ldd	r28, Z+12	; 0x0c
     c16:	d5 85       	ldd	r29, Z+13	; 0x0d
     c18:	98 13       	cpse	r25, r24
     c1a:	06 c0       	rjmp	.+12     	; 0xc28 <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     c1c:	8d 81       	ldd	r24, Y+5	; 0x05
     c1e:	8f 7d       	andi	r24, 0xDF	; 223
     c20:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     c22:	df 91       	pop	r29
     c24:	cf 91       	pop	r28
     c26:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     c28:	a1 8d       	ldd	r26, Z+25	; 0x19
     c2a:	ae 0f       	add	r26, r30
     c2c:	bf 2f       	mov	r27, r31
     c2e:	b1 1d       	adc	r27, r1
     c30:	a3 5a       	subi	r26, 0xA3	; 163
     c32:	bf 4f       	sbci	r27, 0xFF	; 255
     c34:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     c36:	81 8d       	ldd	r24, Z+25	; 0x19
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	8f 73       	andi	r24, 0x3F	; 63
     c3e:	99 27       	eor	r25, r25
     c40:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     c42:	80 e4       	ldi	r24, 0x40	; 64
     c44:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     c46:	a4 85       	ldd	r26, Z+12	; 0x0c
     c48:	b5 85       	ldd	r27, Z+13	; 0x0d
     c4a:	12 96       	adiw	r26, 0x02	; 2
     c4c:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     c4e:	90 8d       	ldd	r25, Z+24	; 0x18
     c50:	81 8d       	ldd	r24, Z+25	; 0x19
     c52:	98 13       	cpse	r25, r24
     c54:	e6 cf       	rjmp	.-52     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     c56:	a4 85       	ldd	r26, Z+12	; 0x0c
     c58:	b5 85       	ldd	r27, Z+13	; 0x0d
     c5a:	15 96       	adiw	r26, 0x05	; 5
     c5c:	8c 91       	ld	r24, X
     c5e:	15 97       	sbiw	r26, 0x05	; 5
     c60:	8f 7d       	andi	r24, 0xDF	; 223
     c62:	15 96       	adiw	r26, 0x05	; 5
     c64:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     c66:	83 8d       	ldd	r24, Z+27	; 0x1b
     c68:	88 23       	and	r24, r24
     c6a:	d9 f2       	breq	.-74     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     c6c:	84 8d       	ldd	r24, Z+28	; 0x1c
     c6e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     c72:	13 8e       	std	Z+27, r1	; 0x1b
     c74:	d6 cf       	rjmp	.-84     	; 0xc22 <UartClass::_tx_data_empty_irq()+0x18>

00000c76 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     c76:	dc 01       	movw	r26, r24
     c78:	1c 96       	adiw	r26, 0x0c	; 12
     c7a:	ed 91       	ld	r30, X+
     c7c:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     c7e:	0f b6       	in	r0, 0x3f	; 63
     c80:	07 fe       	sbrs	r0, 7
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <UartClass::_poll_tx_data_empty()+0x14>
     c84:	25 81       	ldd	r18, Z+5	; 0x05
     c86:	25 fd       	sbrc	r18, 5
     c88:	03 c0       	rjmp	.+6      	; 0xc90 <UartClass::_poll_tx_data_empty()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     c8c:	25 fd       	sbrc	r18, 5
     c8e:	bd cf       	rjmp	.-134    	; 0xc0a <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     c90:	08 95       	ret

00000c92 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     c92:	ef 92       	push	r14
     c94:	ff 92       	push	r15
     c96:	0f 93       	push	r16
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     ca4:	98 8d       	ldd	r25, Y+24	; 0x18
     ca6:	89 8d       	ldd	r24, Y+25	; 0x19
     ca8:	98 13       	cpse	r25, r24
     caa:	1c c0       	rjmp	.+56     	; 0xce4 <UartClass::write(unsigned char)+0x52>
     cac:	ac 85       	ldd	r26, Y+12	; 0x0c
     cae:	bd 85       	ldd	r27, Y+13	; 0x0d
     cb0:	14 96       	adiw	r26, 0x04	; 4
     cb2:	8c 91       	ld	r24, X
     cb4:	14 97       	sbiw	r26, 0x04	; 4
     cb6:	85 ff       	sbrs	r24, 5
     cb8:	15 c0       	rjmp	.+42     	; 0xce4 <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     cba:	12 96       	adiw	r26, 0x02	; 2
     cbc:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     cbe:	ac 85       	ldd	r26, Y+12	; 0x0c
     cc0:	bd 85       	ldd	r27, Y+13	; 0x0d
     cc2:	80 e4       	ldi	r24, 0x40	; 64
     cc4:	14 96       	adiw	r26, 0x04	; 4
     cc6:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     cc8:	ec 85       	ldd	r30, Y+12	; 0x0c
     cca:	fd 85       	ldd	r31, Y+13	; 0x0d
     ccc:	85 81       	ldd	r24, Z+5	; 0x05
     cce:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     cd0:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	1f 91       	pop	r17
     cdc:	0f 91       	pop	r16
     cde:	ff 90       	pop	r15
     ce0:	ef 90       	pop	r14
     ce2:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     ce4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     ce8:	80 ff       	sbrs	r24, 0
     cea:	08 c0       	rjmp	.+16     	; 0xcfc <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     cec:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     cf0:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     cf2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     cf4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	8b 8f       	std	Y+27, r24	; 0x1b
     cfc:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     cfe:	08 8d       	ldd	r16, Y+24	; 0x18
     d00:	10 e0       	ldi	r17, 0x00	; 0
     d02:	0f 5f       	subi	r16, 0xFF	; 255
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	0f 73       	andi	r16, 0x3F	; 63
     d08:	11 27       	eor	r17, r17
     d0a:	e0 2e       	mov	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     d0c:	89 8d       	ldd	r24, Y+25	; 0x19
     d0e:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     d10:	03 c0       	rjmp	.+6      	; 0xd18 <UartClass::write(unsigned char)+0x86>
     d12:	ce 01       	movw	r24, r28
     d14:	b0 df       	rcall	.-160    	; 0xc76 <UartClass::_poll_tx_data_empty()>
     d16:	fa cf       	rjmp	.-12     	; 0xd0c <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     d18:	e8 8d       	ldd	r30, Y+24	; 0x18
     d1a:	ec 0f       	add	r30, r28
     d1c:	fd 2f       	mov	r31, r29
     d1e:	f1 1d       	adc	r31, r1
     d20:	e3 5a       	subi	r30, 0xA3	; 163
     d22:	ff 4f       	sbci	r31, 0xFF	; 255
     d24:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     d26:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     d28:	ec 85       	ldd	r30, Y+12	; 0x0c
     d2a:	fd 85       	ldd	r31, Y+13	; 0x0d
     d2c:	85 81       	ldd	r24, Z+5	; 0x05
     d2e:	80 62       	ori	r24, 0x20	; 32
     d30:	cf cf       	rjmp	.-98     	; 0xcd0 <UartClass::write(unsigned char)+0x3e>

00000d32 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     d36:	fc 01       	movw	r30, r24
     d38:	25 89       	ldd	r18, Z+21	; 0x15
     d3a:	22 23       	and	r18, r18
     d3c:	c1 f0       	breq	.+48     	; 0xd6e <UartClass::flush()+0x3c>
     d3e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     d40:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     d44:	80 ff       	sbrs	r24, 0
     d46:	08 c0       	rjmp	.+16     	; 0xd58 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     d48:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     d4c:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     d4e:	82 8d       	ldd	r24, Z+26	; 0x1a
     d50:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     d54:	81 e0       	ldi	r24, 0x01	; 1
     d56:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     d58:	ec 85       	ldd	r30, Y+12	; 0x0c
     d5a:	fd 85       	ldd	r31, Y+13	; 0x0d
     d5c:	85 81       	ldd	r24, Z+5	; 0x05
     d5e:	85 fd       	sbrc	r24, 5
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <UartClass::flush()+0x36>
     d62:	84 81       	ldd	r24, Z+4	; 0x04
     d64:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     d66:	03 c0       	rjmp	.+6      	; 0xd6e <UartClass::flush()+0x3c>
     d68:	ce 01       	movw	r24, r28
     d6a:	85 df       	rcall	.-246    	; 0xc76 <UartClass::_poll_tx_data_empty()>
     d6c:	f5 cf       	rjmp	.-22     	; 0xd58 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     d6e:	df 91       	pop	r29
     d70:	cf 91       	pop	r28
     d72:	08 95       	ret

00000d74 <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	89 2b       	or	r24, r25
     d7a:	49 f0       	breq	.+18     	; 0xd8e <serialEventRun()+0x1a>
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	89 2b       	or	r24, r25
     d82:	29 f0       	breq	.+10     	; 0xd8e <serialEventRun()+0x1a>
     d84:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     d88:	81 11       	cpse	r24, r1
     d8a:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	89 2b       	or	r24, r25
     d94:	49 f0       	breq	.+18     	; 0xda8 <serialEventRun()+0x34>
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	89 2b       	or	r24, r25
     d9c:	29 f0       	breq	.+10     	; 0xda8 <serialEventRun()+0x34>
     d9e:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     da2:	81 11       	cpse	r24, r1
     da4:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	89 2b       	or	r24, r25
     dae:	21 f0       	breq	.+8      	; 0xdb8 <serialEventRun()+0x44>
     db0:	dc de       	rcall	.-584    	; 0xb6a <Serial2_available()>
     db2:	81 11       	cpse	r24, r1
     db4:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
     db8:	80 e0       	ldi	r24, 0x00	; 0
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	89 2b       	or	r24, r25
     dbe:	49 f0       	breq	.+18     	; 0xdd2 <serialEventRun()+0x5e>
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	89 2b       	or	r24, r25
     dc6:	29 f0       	breq	.+10     	; 0xdd2 <serialEventRun()+0x5e>
     dc8:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     dcc:	81 11       	cpse	r24, r1
     dce:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
     dd2:	08 95       	ret

00000dd4 <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	08 95       	ret

00000dd8 <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     dd8:	cf 93       	push	r28
     dda:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	fc 01       	movw	r30, r24
     de0:	e5 51       	subi	r30, 0x15	; 21
     de2:	fd 44       	sbci	r31, 0x4D	; 77
     de4:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     de6:	2f 3f       	cpi	r18, 0xFF	; 255
     de8:	69 f0       	breq	.+26     	; 0xe04 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     dea:	fc 01       	movw	r30, r24
     dec:	ee 53       	subi	r30, 0x3E	; 62
     dee:	fd 44       	sbci	r31, 0x4D	; 77
     df0:	a0 81       	ld	r26, Z
     df2:	30 e2       	ldi	r19, 0x20	; 32
     df4:	a3 9f       	mul	r26, r19
     df6:	d0 01       	movw	r26, r0
     df8:	11 24       	eor	r1, r1
     dfa:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     dfc:	61 30       	cpi	r22, 0x01	; 1
     dfe:	29 f4       	brne	.+10     	; 0xe0a <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     e00:	11 96       	adiw	r26, 0x01	; 1
     e02:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     e0a:	87 56       	subi	r24, 0x67	; 103
     e0c:	9d 44       	sbci	r25, 0x4D	; 77
     e0e:	ec 01       	movw	r28, r24
     e10:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     e12:	ef 3f       	cpi	r30, 0xFF	; 255
     e14:	81 f0       	breq	.+32     	; 0xe36 <pinMode.part.1+0x5e>
     e16:	cd 01       	movw	r24, r26
     e18:	40 96       	adiw	r24, 0x10	; 16
     e1a:	e8 0f       	add	r30, r24
     e1c:	f9 2f       	mov	r31, r25
     e1e:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     e20:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     e22:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     e24:	12 96       	adiw	r26, 0x02	; 2
     e26:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     e28:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     e2a:	62 30       	cpi	r22, 0x02	; 2
     e2c:	39 f4       	brne	.+14     	; 0xe3c <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     e2e:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     e30:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     e32:	9f bf       	out	0x3f, r25	; 63
     e34:	e7 cf       	rjmp	.-50     	; 0xe04 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     e3a:	f2 cf       	rjmp	.-28     	; 0xe20 <pinMode.part.1+0x48>
     e3c:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     e3e:	f8 cf       	rjmp	.-16     	; 0xe30 <pinMode.part.1+0x58>

00000e40 <pinMode>:
pinMode():
     e40:	89 32       	cpi	r24, 0x29	; 41
     e42:	08 f4       	brcc	.+2      	; 0xe46 <pinMode+0x6>
     e44:	c9 cf       	rjmp	.-110    	; 0xdd8 <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     e46:	08 95       	ret

00000e48 <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	fc 01       	movw	r30, r24
     e4c:	e0 59       	subi	r30, 0x90	; 144
     e4e:	fd 44       	sbci	r31, 0x4D	; 77
     e50:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     e52:	ee 23       	and	r30, r30
     e54:	19 f1       	breq	.+70     	; 0xe9c <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     e56:	e1 30       	cpi	r30, 0x01	; 1
     e58:	21 f0       	breq	.+8      	; 0xe62 <turnOffPWM.part.0+0x1a>
     e5a:	00 f1       	brcs	.+64     	; 0xe9c <turnOffPWM.part.0+0x54>
     e5c:	e6 30       	cpi	r30, 0x06	; 6
     e5e:	a8 f0       	brcs	.+42     	; 0xe8a <turnOffPWM.part.0+0x42>
     e60:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     e62:	87 56       	subi	r24, 0x67	; 103
     e64:	9d 44       	sbci	r25, 0x4D	; 77
     e66:	fc 01       	movw	r30, r24
     e68:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     e6a:	23 30       	cpi	r18, 0x03	; 3
     e6c:	08 f0       	brcs	.+2      	; 0xe70 <turnOffPWM.part.0+0x28>
     e6e:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     e70:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <turnOffPWM.part.0+0x34>
     e7a:	88 0f       	add	r24, r24
     e7c:	2a 95       	dec	r18
     e7e:	ea f7       	brpl	.-6      	; 0xe7a <turnOffPWM.part.0+0x32>
     e80:	80 95       	com	r24
     e82:	83 23       	and	r24, r19
     e84:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
     e88:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
     e8a:	80 e1       	ldi	r24, 0x10	; 16
     e8c:	e8 9f       	mul	r30, r24
     e8e:	f0 01       	movw	r30, r0
     e90:	11 24       	eor	r1, r1
     e92:	e0 5a       	subi	r30, 0xA0	; 160
     e94:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
     e96:	81 81       	ldd	r24, Z+1	; 0x01
     e98:	8f 7e       	andi	r24, 0xEF	; 239
     e9a:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
     e9c:	08 95       	ret

00000e9e <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
     e9e:	0f 93       	push	r16
     ea0:	1f 93       	push	r17
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     ea6:	c8 2f       	mov	r28, r24
     ea8:	d0 e0       	ldi	r29, 0x00	; 0
     eaa:	fe 01       	movw	r30, r28
     eac:	e5 51       	subi	r30, 0x15	; 21
     eae:	fd 44       	sbci	r31, 0x4D	; 77
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
     eb0:	00 81       	ld	r16, Z
     eb2:	0f 3f       	cpi	r16, 0xFF	; 255
     eb4:	99 f0       	breq	.+38     	; 0xedc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     eb6:	16 2f       	mov	r17, r22
turnOffPWM():
     eb8:	89 32       	cpi	r24, 0x29	; 41
     eba:	08 f4       	brcc	.+2      	; 0xebe <digitalWrite.part.2+0x20>
     ebc:	c5 df       	rcall	.-118    	; 0xe48 <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
     ebe:	fe 01       	movw	r30, r28
     ec0:	ee 53       	subi	r30, 0x3E	; 62
     ec2:	fd 44       	sbci	r31, 0x4D	; 77
     ec4:	e0 81       	ld	r30, Z
     ec6:	80 e2       	ldi	r24, 0x20	; 32
     ec8:	e8 9f       	mul	r30, r24
     eca:	f0 01       	movw	r30, r0
     ecc:	11 24       	eor	r1, r1
     ece:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
     ed0:	80 81       	ld	r24, Z
     ed2:	80 23       	and	r24, r16
     ed4:	51 f0       	breq	.+20     	; 0xeea <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
     ed6:	11 11       	cpse	r17, r1
     ed8:	06 c0       	rjmp	.+12     	; 0xee6 <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
     eda:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
     ee6:	05 83       	std	Z+5, r16	; 0x05
     ee8:	f9 cf       	rjmp	.-14     	; 0xedc <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
     eea:	c7 56       	subi	r28, 0x67	; 103
     eec:	dd 44       	sbci	r29, 0x4D	; 77
     eee:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     ef0:	30 97       	sbiw	r30, 0x00	; 0
     ef2:	71 f0       	breq	.+28     	; 0xf10 <digitalWrite.part.2+0x72>
     ef4:	8f 3f       	cpi	r24, 0xFF	; 255
     ef6:	61 f0       	breq	.+24     	; 0xf10 <digitalWrite.part.2+0x72>
     ef8:	70 96       	adiw	r30, 0x10	; 16
     efa:	e8 0f       	add	r30, r24
     efc:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
     efe:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
     f00:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     f02:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
     f04:	11 11       	cpse	r17, r1
     f06:	07 c0       	rjmp	.+14     	; 0xf16 <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
     f08:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     f0a:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
     f0c:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     f0e:	e6 cf       	rjmp	.-52     	; 0xedc <digitalWrite.part.2+0x3e>
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     f14:	f4 cf       	rjmp	.-24     	; 0xefe <digitalWrite.part.2+0x60>
     f16:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f18:	f8 cf       	rjmp	.-16     	; 0xf0a <digitalWrite.part.2+0x6c>

00000f1a <digitalWrite>:
digitalWrite():
     f1a:	89 32       	cpi	r24, 0x29	; 41
     f1c:	08 f4       	brcc	.+2      	; 0xf20 <digitalWrite+0x6>
     f1e:	bf cf       	rjmp	.-130    	; 0xe9e <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
     f20:	08 95       	ret

00000f22 <OneButton::OneButton(int, int) [clone .constprop.13]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	ec 01       	movw	r28, r24
     f2c:	16 2f       	mov	r17, r22
     f2e:	07 2f       	mov	r16, r23
     f30:	82 e3       	ldi	r24, 0x32	; 50
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
     f36:	9f 83       	std	Y+7, r25	; 0x07
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	81 2f       	mov	r24, r17
     f3c:	81 df       	rcall	.-254    	; 0xe40 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
     f3e:	18 83       	st	Y, r17
     f40:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
     f42:	88 e5       	ldi	r24, 0x58	; 88
     f44:	92 e0       	ldi	r25, 0x02	; 2
     f46:	8a 83       	std	Y+2, r24	; 0x02
     f48:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
     f4a:	88 ee       	ldi	r24, 0xE8	; 232
     f4c:	93 e0       	ldi	r25, 0x03	; 3
     f4e:	8c 83       	std	Y+4, r24	; 0x04
     f50:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
     f52:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
     f54:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
     f56:	1c 86       	std	Y+12, r1	; 0x0c
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
     f5e:	99 87       	std	Y+9, r25	; 0x09
     f60:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
     f62:	1b 86       	std	Y+11, r1	; 0x0b
     f64:	61 e0       	ldi	r22, 0x01	; 1
     f66:	81 2f       	mov	r24, r17
     f68:	d8 df       	rcall	.-80     	; 0xf1a <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
     f6a:	1f 86       	std	Y+15, r1	; 0x0f
     f6c:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
     f6e:	19 8a       	std	Y+17, r1	; 0x11
     f70:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
     f72:	1b 8a       	std	Y+19, r1	; 0x13
     f74:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
     f76:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
     f78:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
     f7a:	1f 8a       	std	Y+23, r1	; 0x17
     f7c:	18 8e       	std	Y+24, r1	; 0x18
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:195
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	08 95       	ret

00000f88 <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:196
    digitalWrite(CA_6, HIGH);
     f88:	61 e0       	ldi	r22, 0x01	; 1
     f8a:	8b e0       	ldi	r24, 0x0B	; 11
     f8c:	c6 df       	rcall	.-116    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:197
    digitalWrite(CA_7, HIGH);
     f8e:	61 e0       	ldi	r22, 0x01	; 1
     f90:	8a e0       	ldi	r24, 0x0A	; 10
     f92:	c3 df       	rcall	.-122    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:198
    digitalWrite(CA_8, HIGH);
     f94:	61 e0       	ldi	r22, 0x01	; 1
     f96:	89 e0       	ldi	r24, 0x09	; 9
     f98:	c0 df       	rcall	.-128    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:203
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
     f9a:	61 e0       	ldi	r22, 0x01	; 1
     f9c:	88 e0       	ldi	r24, 0x08	; 8
     f9e:	bd cf       	rjmp	.-134    	; 0xf1a <digitalWrite>

00000fa0 <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
     fa0:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:204
    digitalWrite(CA_3, HIGH);
     fa2:	87 e0       	ldi	r24, 0x07	; 7
     fa4:	ba df       	rcall	.-140    	; 0xf1a <digitalWrite>
     fa6:	61 e0       	ldi	r22, 0x01	; 1
     fa8:	86 e0       	ldi	r24, 0x06	; 6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:205
    digitalWrite(CA_2, HIGH);
     faa:	b7 df       	rcall	.-146    	; 0xf1a <digitalWrite>
     fac:	61 e0       	ldi	r22, 0x01	; 1
     fae:	85 e0       	ldi	r24, 0x05	; 5
     fb0:	b4 df       	rcall	.-152    	; 0xf1a <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/led.cpp:206
    digitalWrite(CA_1, HIGH);
     fb2:	61 e0       	ldi	r22, 0x01	; 1
     fb4:	84 e0       	ldi	r24, 0x04	; 4
     fb6:	b1 cf       	rjmp	.-158    	; 0xf1a <digitalWrite>

00000fb8 <UartClass::begin(unsigned long, unsigned int)>:
begin():
     fb8:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
     fba:	bf 92       	push	r11
     fbc:	cf 92       	push	r12
     fbe:	df 92       	push	r13
     fc0:	ef 92       	push	r14
     fc2:	ff 92       	push	r15
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	ec 01       	movw	r28, r24
     fce:	6a 01       	movw	r12, r20
     fd0:	7b 01       	movw	r14, r22
     fd2:	a2 2e       	mov	r10, r18
     fd4:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
     fd6:	88 23       	and	r24, r24
     fd8:	39 f0       	breq	.+14     	; 0xfe8 <UartClass::begin(unsigned long, unsigned int)+0x30>
     fda:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
     fdc:	f9 81       	ldd	r31, Y+1	; 0x01
     fde:	06 88       	ldd	r0, Z+22	; 0x16
     fe0:	f7 89       	ldd	r31, Z+23	; 0x17
     fe2:	e0 2d       	mov	r30, r0
     fe4:	ce 01       	movw	r24, r28
     fe6:	09 95       	icall
     fe8:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
     fea:	10 e0       	ldi	r17, 0x00	; 0
     fec:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
     fee:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
     ff0:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
     ff2:	70 e2       	ldi	r23, 0x20	; 32
     ff4:	81 ea       	ldi	r24, 0xA1	; 161
     ff6:	97 e0       	ldi	r25, 0x07	; 7
     ff8:	a7 01       	movw	r20, r14
     ffa:	96 01       	movw	r18, r12
     ffc:	0e 94 9b 38 	call	0x7136	; 0x7136 <__udivmodsi4>
    1000:	69 01       	movw	r12, r18
    1002:	7a 01       	movw	r14, r20
    1004:	8f ef       	ldi	r24, 0xFF	; 255
    1006:	c8 1a       	sub	r12, r24
    1008:	d8 0a       	sbc	r13, r24
    100a:	e8 0a       	sbc	r14, r24
    100c:	f8 0a       	sbc	r15, r24
    100e:	f6 94       	lsr	r15
    1010:	e7 94       	ror	r14
    1012:	d7 94       	ror	r13
    1014:	c7 94       	ror	r12
    1016:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    1018:	fd 85       	ldd	r31, Y+13	; 0x0d
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	8d 7f       	andi	r24, 0xFD	; 253
    101e:	86 83       	std	Z+6, r24	; 0x06
    1020:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    1022:	fd 85       	ldd	r31, Y+13	; 0x0d
    1024:	86 81       	ldd	r24, Z+6	; 0x06
    1026:	86 83       	std	Z+6, r24	; 0x06
    1028:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    102a:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    102e:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    1030:	00 0c       	add	r0, r0
    1032:	bb 0b       	sbc	r27, r27
    1034:	a7 01       	movw	r20, r14
    1036:	96 01       	movw	r18, r12
    1038:	0e 94 ef 38 	call	0x71de	; 0x71de <__mulshisi3>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	34 e0       	ldi	r19, 0x04	; 4
    1040:	40 e0       	ldi	r20, 0x00	; 0
    1042:	50 e0       	ldi	r21, 0x00	; 0
    1044:	0e 94 bd 38 	call	0x717a	; 0x717a <__divmodsi4>
    1048:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    104a:	fd 85       	ldd	r31, Y+13	; 0x0d
    104c:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    104e:	d3 1e       	adc	r13, r19
    1050:	e4 1e       	adc	r14, r20
    1052:	f5 1e       	adc	r15, r21
    1054:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    1056:	d1 86       	std	Z+9, r13	; 0x09
    1058:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    105a:	fd 85       	ldd	r31, Y+13	; 0x0d
    105c:	a7 82       	std	Z+7, r10	; 0x07
    105e:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    1060:	fd 85       	ldd	r31, Y+13	; 0x0d
    1062:	86 81       	ldd	r24, Z+6	; 0x06
    1064:	80 6c       	ori	r24, 0xC0	; 192
    1066:	86 83       	std	Z+6, r24	; 0x06
    1068:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    106a:	fd 85       	ldd	r31, Y+13	; 0x0d
    106c:	85 81       	ldd	r24, Z+5	; 0x05
    106e:	80 68       	ori	r24, 0x80	; 128
    1070:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    1072:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1076:	8b 89       	ldd	r24, Y+19	; 0x13
    1078:	80 95       	com	r24
    107a:	89 23       	and	r24, r25
    107c:	98 01       	movw	r18, r16
    107e:	22 0f       	add	r18, r18
    1080:	33 1f       	adc	r19, r19
    1082:	02 0f       	add	r16, r18
    1084:	13 1f       	adc	r17, r19
    1086:	c0 0f       	add	r28, r16
    1088:	d1 1f       	adc	r29, r17
    108a:	98 89       	ldd	r25, Y+16	; 0x10
    108c:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    108e:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1092:	62 e0       	ldi	r22, 0x02	; 2
    1094:	8e 85       	ldd	r24, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    1096:	d4 de       	rcall	.-600    	; 0xe40 <pinMode>
    1098:	61 e0       	ldi	r22, 0x01	; 1
    109a:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    109c:	3e df       	rcall	.-388    	; 0xf1a <digitalWrite>
    109e:	61 e0       	ldi	r22, 0x01	; 1
    10a0:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    10a2:	ce de       	rcall	.-612    	; 0xe40 <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    10a4:	bf be       	out	0x3f, r11	; 63
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	ff 90       	pop	r15
    10b0:	ef 90       	pop	r14
    10b2:	df 90       	pop	r13
    10b4:	cf 90       	pop	r12
    10b6:	bf 90       	pop	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Procss.cpp:1207
            break;                 
      }      
  }  
}

void Pclass :: ALL_LED_OFF()
    10b8:	af 90       	pop	r10
    10ba:	08 95       	ret

000010bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>:
digitalWrite():
    10bc:	61 e0       	ldi	r22, 0x01	; 1
    10be:	8a e1       	ldi	r24, 0x1A	; 26
    10c0:	ee de       	rcall	.-548    	; 0xe9e <digitalWrite.part.2>
    10c2:	61 e0       	ldi	r22, 0x01	; 1
    10c4:	8d e1       	ldi	r24, 0x1D	; 29
    10c6:	eb de       	rcall	.-554    	; 0xe9e <digitalWrite.part.2>
    10c8:	61 e0       	ldi	r22, 0x01	; 1
    10ca:	8c e1       	ldi	r24, 0x1C	; 28
    10cc:	e8 de       	rcall	.-560    	; 0xe9e <digitalWrite.part.2>
    10ce:	61 e0       	ldi	r22, 0x01	; 1
    10d0:	8b e1       	ldi	r24, 0x1B	; 27
    10d2:	e5 ce       	rjmp	.-566    	; 0xe9e <digitalWrite.part.2>

000010d4 <digitalRead.part.3>:
digitalRead.part.3():
    10d4:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    10d6:	1f 93       	push	r17
    10d8:	cf 93       	push	r28
    10da:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    10dc:	10 e0       	ldi	r17, 0x00	; 0
    10de:	f8 01       	movw	r30, r16
    10e0:	e5 51       	subi	r30, 0x15	; 21
    10e2:	fd 44       	sbci	r31, 0x4D	; 77
    10e4:	c0 81       	ld	r28, Z
    10e6:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    10e8:	81 f0       	breq	.+32     	; 0x110a <digitalRead.part.3+0x36>
turnOffPWM():
    10ea:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    10ec:	08 f4       	brcc	.+2      	; 0x10f0 <digitalRead.part.3+0x1c>
    10ee:	ac de       	rcall	.-680    	; 0xe48 <turnOffPWM.part.0>
digitalRead.part.3():
    10f0:	f8 01       	movw	r30, r16
    10f2:	ee 53       	subi	r30, 0x3E	; 62
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    10f4:	fd 44       	sbci	r31, 0x4D	; 77
    10f6:	e0 81       	ld	r30, Z
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	e8 9f       	mul	r30, r24
    10fc:	f0 01       	movw	r30, r0
    10fe:	11 24       	eor	r1, r1
    1100:	fc 5f       	subi	r31, 0xFC	; 252
    1102:	80 85       	ldd	r24, Z+8	; 0x08
    1104:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	09 f4       	brne	.+2      	; 0x110c <digitalRead.part.3+0x38>
    110a:	80 e0       	ldi	r24, 0x00	; 0
    110c:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    110e:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    1110:	0f 91       	pop	r16
    1112:	08 95       	ret

00001114 <micros>:
micros():
    1114:	8f b7       	in	r24, 0x3f	; 63
    1116:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    1118:	20 91 39 28 	lds	r18, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    111c:	30 91 3a 28 	lds	r19, 0x283A	; 0x80283a <timer_millis+0x1>
    1120:	40 91 3b 28 	lds	r20, 0x283B	; 0x80283b <timer_millis+0x2>
    1124:	50 91 3c 28 	lds	r21, 0x283C	; 0x80283c <timer_millis+0x3>
    1128:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    112c:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1130:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    1134:	90 ff       	sbrs	r25, 0
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <micros+0x34>
    1138:	2f 5f       	subi	r18, 0xFF	; 255
    113a:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    113c:	4f 4f       	sbci	r20, 0xFF	; 255
    113e:	5f 4f       	sbci	r21, 0xFF	; 255
    1140:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    1144:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    1148:	8f bf       	out	0x3f, r24	; 63
    114a:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    114c:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    114e:	0e 94 e5 38 	call	0x71ca	; 0x71ca <__muluhisi3>
    1152:	24 e0       	ldi	r18, 0x04	; 4
    1154:	f6 95       	lsr	r31
    1156:	e7 95       	ror	r30
    1158:	2a 95       	dec	r18
    115a:	e1 f7       	brne	.-8      	; 0x1154 <micros+0x40>
    115c:	6e 0f       	add	r22, r30
    115e:	7f 1f       	adc	r23, r31
    1160:	81 1d       	adc	r24, r1
    1162:	91 1d       	adc	r25, r1
    1164:	08 95       	ret

00001166 <millis>:
millis():
    1166:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    1168:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    116a:	60 91 39 28 	lds	r22, 0x2839	; 0x802839 <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    116e:	70 91 3a 28 	lds	r23, 0x283A	; 0x80283a <timer_millis+0x1>
    1172:	80 91 3b 28 	lds	r24, 0x283B	; 0x80283b <timer_millis+0x2>
    1176:	90 91 3c 28 	lds	r25, 0x283C	; 0x80283c <timer_millis+0x3>
    117a:	2f bf       	out	0x3f, r18	; 63
    117c:	08 95       	ret

0000117e <Lclass::PID_callingg() [clone .constprop.43]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    117e:	4f 92       	push	r4
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    1180:	5f 92       	push	r5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:35
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    1182:	6f 92       	push	r6
    1184:	7f 92       	push	r7
    1186:	8f 92       	push	r8
    1188:	9f 92       	push	r9
    118a:	af 92       	push	r10
    118c:	bf 92       	push	r11
    118e:	cf 92       	push	r12
    1190:	df 92       	push	r13
    1192:	ef 92       	push	r14
    1194:	ff 92       	push	r15
    1196:	1f 93       	push	r17
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:37
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    11a0:	81 11       	cpse	r24, r1
    11a2:	01 c1       	rjmp	.+514    	; 0x13a6 <Lclass::PID_callingg() [clone .constprop.43]+0x228>
    11a4:	80 91 ff 28 	lds	r24, 0x28FF	; 0x8028ff <TEMP_DEG>
    11a8:	90 91 00 29 	lds	r25, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    11ac:	a0 91 01 29 	lds	r26, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    11b0:	b0 91 02 29 	lds	r27, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    11b4:	80 93 6f 2a 	sts	0x2A6F, r24	; 0x802a6f <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:38
  else               PID_INPUT = TEMP_DEG_RAW;
    11b8:	90 93 70 2a 	sts	0x2A70, r25	; 0x802a70 <PID_INPUT+0x1>
    11bc:	a0 93 71 2a 	sts	0x2A71, r26	; 0x802a71 <PID_INPUT+0x2>
    11c0:	b0 93 72 2a 	sts	0x2A72, r27	; 0x802a72 <PID_INPUT+0x3>
    11c4:	11 e0       	ldi	r17, 0x01	; 1
    11c6:	80 91 8d 2a 	lds	r24, 0x2A8D	; 0x802a8d <myPID+0x1a>
    11ca:	90 91 8e 2a 	lds	r25, 0x2A8E	; 0x802a8e <myPID+0x1b>
    11ce:	01 97       	sbiw	r24, 0x01	; 1
    11d0:	09 f0       	breq	.+2      	; 0x11d4 <Lclass::PID_callingg() [clone .constprop.43]+0x56>
    11d2:	10 e0       	ldi	r17, 0x00	; 0
    11d4:	60 91 a1 2a 	lds	r22, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    11d8:	70 91 a2 2a 	lds	r23, 0x2AA2	; 0x802aa2 <myPID+0x2f>
    11dc:	80 91 a3 2a 	lds	r24, 0x2AA3	; 0x802aa3 <myPID+0x30>
    11e0:	90 91 a4 2a 	lds	r25, 0x2AA4	; 0x802aa4 <myPID+0x31>
    11e4:	0e 94 6f 37 	call	0x6ede	; 0x6ede <__floatunsisf>
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	4a e7       	ldi	r20, 0x7A	; 122
    11ee:	54 e4       	ldi	r21, 0x44	; 68
    11f0:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    11f4:	4b 01       	movw	r8, r22
    11f6:	5c 01       	movw	r10, r24
    11f8:	2a e0       	ldi	r18, 0x0A	; 10
    11fa:	37 ed       	ldi	r19, 0xD7	; 215
    11fc:	43 e2       	ldi	r20, 0x23	; 35
    11fe:	5c e3       	ldi	r21, 0x3C	; 60
    1200:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1204:	6b 01       	movw	r12, r22
    1206:	7c 01       	movw	r14, r24
    1208:	c0 91 8b 2a 	lds	r28, 0x2A8B	; 0x802a8b <myPID+0x18>
    120c:	d0 91 8c 2a 	lds	r29, 0x2A8C	; 0x802a8c <myPID+0x19>
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:41


if(PID_SETPOINT < 51)
    1214:	4c e4       	ldi	r20, 0x4C	; 76
    1216:	52 e4       	ldi	r21, 0x42	; 66
    1218:	60 91 67 2a 	lds	r22, 0x2A67	; 0x802a67 <PID_SETPOINT>
    121c:	70 91 68 2a 	lds	r23, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    1220:	80 91 69 2a 	lds	r24, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    1224:	90 91 6a 2a 	lds	r25, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    1228:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    122c:	87 ff       	sbrs	r24, 7
    122e:	c4 c0       	rjmp	.+392    	; 0x13b8 <Lclass::PID_callingg() [clone .constprop.43]+0x23a>
    1230:	80 e0       	ldi	r24, 0x00	; 0
    1232:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:43
  {
    Kp= 25; Ki=0.010; Kd=700;  
    1234:	a8 ec       	ldi	r26, 0xC8	; 200
    1236:	b1 e4       	ldi	r27, 0x41	; 65
    1238:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    123c:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1240:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1244:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    1248:	3a e0       	ldi	r19, 0x0A	; 10
    124a:	43 2e       	mov	r4, r19
    124c:	37 ed       	ldi	r19, 0xD7	; 215
    124e:	53 2e       	mov	r5, r19
    1250:	33 e2       	ldi	r19, 0x23	; 35
    1252:	63 2e       	mov	r6, r19
    1254:	3c e3       	ldi	r19, 0x3C	; 60
    1256:	73 2e       	mov	r7, r19
    1258:	40 92 0f 28 	sts	0x280F, r4	; 0x80280f <Ki>
    125c:	50 92 10 28 	sts	0x2810, r5	; 0x802810 <Ki+0x1>
    1260:	60 92 11 28 	sts	0x2811, r6	; 0x802811 <Ki+0x2>
    1264:	70 92 12 28 	sts	0x2812, r7	; 0x802812 <Ki+0x3>
    1268:	40 e0       	ldi	r20, 0x00	; 0
    126a:	50 e0       	ldi	r21, 0x00	; 0
    126c:	6f e2       	ldi	r22, 0x2F	; 47
    126e:	74 e4       	ldi	r23, 0x44	; 68
    1270:	40 93 13 28 	sts	0x2813, r20	; 0x802813 <Kd>
    1274:	50 93 14 28 	sts	0x2814, r21	; 0x802814 <Kd+0x1>
    1278:	60 93 15 28 	sts	0x2815, r22	; 0x802815 <Kd+0x2>
    127c:	70 93 16 28 	sts	0x2816, r23	; 0x802816 <Kd+0x3>
SetTunings():
    1280:	10 93 ae 2a 	sts	0x2AAE, r17	; 0x802aae <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;

   pOn = POn;
   pOnE = POn == P_ON_E;
    1284:	80 93 73 2a 	sts	0x2A73, r24	; 0x802a73 <myPID>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
    1288:	90 93 74 2a 	sts	0x2A74, r25	; 0x802a74 <myPID+0x1>
    128c:	a0 93 75 2a 	sts	0x2A75, r26	; 0x802a75 <myPID+0x2>
    1290:	b0 93 76 2a 	sts	0x2A76, r27	; 0x802a76 <myPID+0x3>
    1294:	40 92 77 2a 	sts	0x2A77, r4	; 0x802a77 <myPID+0x4>
    1298:	50 92 78 2a 	sts	0x2A78, r5	; 0x802a78 <myPID+0x5>
    129c:	60 92 79 2a 	sts	0x2A79, r6	; 0x802a79 <myPID+0x6>
    12a0:	70 92 7a 2a 	sts	0x2A7A, r7	; 0x802a7a <myPID+0x7>
    12a4:	40 93 7b 2a 	sts	0x2A7B, r20	; 0x802a7b <myPID+0x8>
    12a8:	50 93 7c 2a 	sts	0x2A7C, r21	; 0x802a7c <myPID+0x9>
    12ac:	60 93 7d 2a 	sts	0x2A7D, r22	; 0x802a7d <myPID+0xa>
    12b0:	70 93 7e 2a 	sts	0x2A7E, r23	; 0x802a7e <myPID+0xb>
    12b4:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112

   double SampleTimeInSec = ((double)SampleTime)/1000;
   kp = Kp;
    12b8:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    12bc:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    12c0:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    12c4:	c0 92 83 2a 	sts	0x2A83, r12	; 0x802a83 <myPID+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
    12c8:	d0 92 84 2a 	sts	0x2A84, r13	; 0x802a84 <myPID+0x11>
    12cc:	e0 92 85 2a 	sts	0x2A85, r14	; 0x802a85 <myPID+0x12>
    12d0:	f0 92 86 2a 	sts	0x2A86, r15	; 0x802a86 <myPID+0x13>
    12d4:	a5 01       	movw	r20, r10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
    12d6:	94 01       	movw	r18, r8
    12d8:	60 e0       	ldi	r22, 0x00	; 0
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	8f e2       	ldi	r24, 0x2F	; 47
    12de:	94 e4       	ldi	r25, 0x44	; 68
    12e0:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    12e4:	4b 01       	movw	r8, r22
    12e6:	5c 01       	movw	r10, r24
    12e8:	80 92 87 2a 	sts	0x2A87, r8	; 0x802a87 <myPID+0x14>
    12ec:	90 92 88 2a 	sts	0x2A88, r9	; 0x802a88 <myPID+0x15>
    12f0:	a0 92 89 2a 	sts	0x2A89, r10	; 0x802a89 <myPID+0x16>
    12f4:	b0 92 8a 2a 	sts	0x2A8A, r11	; 0x802a8a <myPID+0x17>
    12f8:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118

  if(controllerDirection ==REVERSE)
   {
      kp = (0 - kp);
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	a8 ec       	ldi	r26, 0xC8	; 200
    12fe:	b1 ec       	ldi	r27, 0xC1	; 193
    1300:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116
   double SampleTimeInSec = ((double)SampleTime)/1000;
   kp = Kp;
   ki = Ki * SampleTimeInSec;
   kd = Kd / SampleTimeInSec;

  if(controllerDirection ==REVERSE)
    1302:	09 f4       	brne	.+2      	; 0x1306 <Lclass::PID_callingg() [clone .constprop.43]+0x188>
    1304:	c4 c0       	rjmp	.+392    	; 0x148e <Lclass::PID_callingg() [clone .constprop.43]+0x310>
PID_callingg():
    1306:	2f df       	rcall	.-418    	; 0x1166 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:52
  {
    Kp= 28; Ki=0.010; Kd=650;  
    myPID.SetTunings(Kp, Ki, Kd);        
  }   
  
  if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1308:	c0 90 f7 28 	lds	r12, 0x28F7	; 0x8028f7 <WINDOW_START_TIME>
    130c:	d0 90 f8 28 	lds	r13, 0x28F8	; 0x8028f8 <WINDOW_START_TIME+0x1>
    1310:	e0 90 f9 28 	lds	r14, 0x28F9	; 0x8028f9 <WINDOW_START_TIME+0x2>
    1314:	f0 90 fa 28 	lds	r15, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x3>
    1318:	ab 01       	movw	r20, r22
    131a:	bc 01       	movw	r22, r24
    131c:	4c 19       	sub	r20, r12
    131e:	5d 09       	sbc	r21, r13
    1320:	6e 09       	sbc	r22, r14
    1322:	7f 09       	sbc	r23, r15
    1324:	49 3e       	cpi	r20, 0xE9	; 233
    1326:	53 40       	sbci	r21, 0x03	; 3
    1328:	61 05       	cpc	r22, r1
    132a:	71 05       	cpc	r23, r1
    132c:	70 f0       	brcs	.+28     	; 0x134a <Lclass::PID_callingg() [clone .constprop.43]+0x1cc>
    132e:	d7 01       	movw	r26, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:53
                 WINDOW_START_TIME += WINDOW_SIZE;
    1330:	c6 01       	movw	r24, r12
    1332:	88 51       	subi	r24, 0x18	; 24
    1334:	9c 4f       	sbci	r25, 0xFC	; 252
    1336:	af 4f       	sbci	r26, 0xFF	; 255
    1338:	bf 4f       	sbci	r27, 0xFF	; 255
    133a:	80 93 f7 28 	sts	0x28F7, r24	; 0x8028f7 <WINDOW_START_TIME>
    133e:	90 93 f8 28 	sts	0x28F8, r25	; 0x8028f8 <WINDOW_START_TIME+0x1>
    1342:	a0 93 f9 28 	sts	0x28F9, r26	; 0x8028f9 <WINDOW_START_TIME+0x2>
    1346:	b0 93 fa 28 	sts	0x28FA, r27	; 0x8028fa <WINDOW_START_TIME+0x3>
    134a:	0d df       	rcall	.-486    	; 0x1166 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:57

//  /*        
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    134c:	c0 90 f7 28 	lds	r12, 0x28F7	; 0x8028f7 <WINDOW_START_TIME>
    1350:	d0 90 f8 28 	lds	r13, 0x28F8	; 0x8028f8 <WINDOW_START_TIME+0x1>
    1354:	e0 90 f9 28 	lds	r14, 0x28F9	; 0x8028f9 <WINDOW_START_TIME+0x2>
    1358:	f0 90 fa 28 	lds	r15, 0x28FA	; 0x8028fa <WINDOW_START_TIME+0x3>
    135c:	6c 19       	sub	r22, r12
    135e:	7d 09       	sbc	r23, r13
    1360:	8e 09       	sbc	r24, r14
    1362:	9f 09       	sbc	r25, r15
    1364:	0e 94 6f 37 	call	0x6ede	; 0x6ede <__floatunsisf>
    1368:	20 91 6b 2a 	lds	r18, 0x2A6B	; 0x802a6b <PID_OUTPUT>
    136c:	30 91 6c 2a 	lds	r19, 0x2A6C	; 0x802a6c <PID_OUTPUT+0x1>
    1370:	40 91 6d 2a 	lds	r20, 0x2A6D	; 0x802a6d <PID_OUTPUT+0x2>
    1374:	50 91 6e 2a 	lds	r21, 0x2A6E	; 0x802a6e <PID_OUTPUT+0x3>
    1378:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    137c:	18 16       	cp	r1, r24
    137e:	0c f0       	brlt	.+2      	; 0x1382 <Lclass::PID_callingg() [clone .constprop.43]+0x204>
    1380:	ad c0       	rjmp	.+346    	; 0x14dc <Lclass::PID_callingg() [clone .constprop.43]+0x35e>
digitalWrite():
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
    1386:	df 91       	pop	r29
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:65
    if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    else                                                 digitalWrite(HEATER, HIGH);
  }
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    1388:	cf 91       	pop	r28
    138a:	1f 91       	pop	r17
    138c:	ff 90       	pop	r15
    138e:	ef 90       	pop	r14
    1390:	df 90       	pop	r13
    1392:	cf 90       	pop	r12
    1394:	bf 90       	pop	r11
    1396:	af 90       	pop	r10
    1398:	9f 90       	pop	r9
    139a:	8f 90       	pop	r8
    139c:	7f 90       	pop	r7
    139e:	6f 90       	pop	r6
    13a0:	5f 90       	pop	r5
    13a2:	4f 90       	pop	r4
digitalWrite():
    13a4:	7c cd       	rjmp	.-1288   	; 0xe9e <digitalWrite.part.2>
PID_callingg():
    13a6:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:38
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    13aa:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    13ae:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    13b2:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    13b6:	fe ce       	rjmp	.-516    	; 0x11b4 <Lclass::PID_callingg() [clone .constprop.43]+0x36>
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:48
    Kp= 25; Ki=0.010; Kd=700;  
    myPID.SetTunings(Kp, Ki, Kd);    
  }
  else
  {
    Kp= 28; Ki=0.010; Kd=650;  
    13bc:	a0 ee       	ldi	r26, 0xE0	; 224
    13be:	b1 e4       	ldi	r27, 0x41	; 65
    13c0:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    13c4:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    13c8:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    13cc:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    13d0:	2a e0       	ldi	r18, 0x0A	; 10
    13d2:	42 2e       	mov	r4, r18
    13d4:	27 ed       	ldi	r18, 0xD7	; 215
    13d6:	52 2e       	mov	r5, r18
    13d8:	23 e2       	ldi	r18, 0x23	; 35
    13da:	62 2e       	mov	r6, r18
    13dc:	2c e3       	ldi	r18, 0x3C	; 60
    13de:	72 2e       	mov	r7, r18
    13e0:	40 92 0f 28 	sts	0x280F, r4	; 0x80280f <Ki>
    13e4:	50 92 10 28 	sts	0x2810, r5	; 0x802810 <Ki+0x1>
    13e8:	60 92 11 28 	sts	0x2811, r6	; 0x802811 <Ki+0x2>
    13ec:	70 92 12 28 	sts	0x2812, r7	; 0x802812 <Ki+0x3>
    13f0:	40 e0       	ldi	r20, 0x00	; 0
    13f2:	50 e8       	ldi	r21, 0x80	; 128
    13f4:	62 e2       	ldi	r22, 0x22	; 34
    13f6:	74 e4       	ldi	r23, 0x44	; 68
    13f8:	40 93 13 28 	sts	0x2813, r20	; 0x802813 <Kd>
    13fc:	50 93 14 28 	sts	0x2814, r21	; 0x802814 <Kd+0x1>
    1400:	60 93 15 28 	sts	0x2815, r22	; 0x802815 <Kd+0x2>
    1404:	70 93 16 28 	sts	0x2816, r23	; 0x802816 <Kd+0x3>
SetTunings():
    1408:	10 93 ae 2a 	sts	0x2AAE, r17	; 0x802aae <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;

   pOn = POn;
   pOnE = POn == P_ON_E;
    140c:	80 93 73 2a 	sts	0x2A73, r24	; 0x802a73 <myPID>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
    1410:	90 93 74 2a 	sts	0x2A74, r25	; 0x802a74 <myPID+0x1>
    1414:	a0 93 75 2a 	sts	0x2A75, r26	; 0x802a75 <myPID+0x2>
    1418:	b0 93 76 2a 	sts	0x2A76, r27	; 0x802a76 <myPID+0x3>
    141c:	40 92 77 2a 	sts	0x2A77, r4	; 0x802a77 <myPID+0x4>
    1420:	50 92 78 2a 	sts	0x2A78, r5	; 0x802a78 <myPID+0x5>
    1424:	60 92 79 2a 	sts	0x2A79, r6	; 0x802a79 <myPID+0x6>
    1428:	70 92 7a 2a 	sts	0x2A7A, r7	; 0x802a7a <myPID+0x7>
    142c:	40 93 7b 2a 	sts	0x2A7B, r20	; 0x802a7b <myPID+0x8>
    1430:	50 93 7c 2a 	sts	0x2A7C, r21	; 0x802a7c <myPID+0x9>
    1434:	60 93 7d 2a 	sts	0x2A7D, r22	; 0x802a7d <myPID+0xa>
    1438:	70 93 7e 2a 	sts	0x2A7E, r23	; 0x802a7e <myPID+0xb>
    143c:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112

   double SampleTimeInSec = ((double)SampleTime)/1000;
   kp = Kp;
    1440:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    1444:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    1448:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    144c:	c0 92 83 2a 	sts	0x2A83, r12	; 0x802a83 <myPID+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
    1450:	d0 92 84 2a 	sts	0x2A84, r13	; 0x802a84 <myPID+0x11>
    1454:	e0 92 85 2a 	sts	0x2A85, r14	; 0x802a85 <myPID+0x12>
    1458:	f0 92 86 2a 	sts	0x2A86, r15	; 0x802a86 <myPID+0x13>
    145c:	a5 01       	movw	r20, r10
    145e:	94 01       	movw	r18, r8
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
    1460:	60 e0       	ldi	r22, 0x00	; 0
    1462:	70 e8       	ldi	r23, 0x80	; 128
    1464:	82 e2       	ldi	r24, 0x22	; 34
    1466:	94 e4       	ldi	r25, 0x44	; 68
    1468:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    146c:	4b 01       	movw	r8, r22
    146e:	5c 01       	movw	r10, r24
    1470:	80 92 87 2a 	sts	0x2A87, r8	; 0x802a87 <myPID+0x14>
    1474:	90 92 88 2a 	sts	0x2A88, r9	; 0x802a88 <myPID+0x15>
    1478:	a0 92 89 2a 	sts	0x2A89, r10	; 0x802a89 <myPID+0x16>
    147c:	b0 92 8a 2a 	sts	0x2A8A, r11	; 0x802a8a <myPID+0x17>
    1480:	21 97       	sbiw	r28, 0x01	; 1
    1482:	09 f0       	breq	.+2      	; 0x1486 <Lclass::PID_callingg() [clone .constprop.43]+0x308>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
    1484:	40 cf       	rjmp	.-384    	; 0x1306 <Lclass::PID_callingg() [clone .constprop.43]+0x188>
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
    148a:	a0 ee       	ldi	r26, 0xE0	; 224
    148c:	b1 ec       	ldi	r27, 0xC1	; 193
    148e:	80 93 7f 2a 	sts	0x2A7F, r24	; 0x802a7f <myPID+0xc>
    1492:	90 93 80 2a 	sts	0x2A80, r25	; 0x802a80 <myPID+0xd>
    1496:	a0 93 81 2a 	sts	0x2A81, r26	; 0x802a81 <myPID+0xe>
    149a:	b0 93 82 2a 	sts	0x2A82, r27	; 0x802a82 <myPID+0xf>
    149e:	a7 01       	movw	r20, r14
    14a0:	96 01       	movw	r18, r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
    14a2:	60 e0       	ldi	r22, 0x00	; 0
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	cb 01       	movw	r24, r22
    14a8:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    14ac:	60 93 83 2a 	sts	0x2A83, r22	; 0x802a83 <myPID+0x10>
    14b0:	70 93 84 2a 	sts	0x2A84, r23	; 0x802a84 <myPID+0x11>
    14b4:	80 93 85 2a 	sts	0x2A85, r24	; 0x802a85 <myPID+0x12>
    14b8:	90 93 86 2a 	sts	0x2A86, r25	; 0x802a86 <myPID+0x13>
    14bc:	a5 01       	movw	r20, r10
    14be:	94 01       	movw	r18, r8
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	cb 01       	movw	r24, r22
    14c6:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    14ca:	60 93 87 2a 	sts	0x2A87, r22	; 0x802a87 <myPID+0x14>
    14ce:	70 93 88 2a 	sts	0x2A88, r23	; 0x802a88 <myPID+0x15>
    14d2:	80 93 89 2a 	sts	0x2A89, r24	; 0x802a89 <myPID+0x16>
    14d6:	90 93 8a 2a 	sts	0x2A8A, r25	; 0x802a8a <myPID+0x17>
    14da:	15 cf       	rjmp	.-470    	; 0x1306 <Lclass::PID_callingg() [clone .constprop.43]+0x188>
PID_callingg():
    14dc:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:60
//  /*        
 
  if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
  else 
  {
    if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    14e0:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    14e4:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    14e8:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    14ec:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    14f0:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    14f4:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    14f8:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    14fc:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    1500:	87 ff       	sbrs	r24, 7
    1502:	3f cf       	rjmp	.-386    	; 0x1382 <Lclass::PID_callingg() [clone .constprop.43]+0x204>
digitalWrite():
    1504:	61 e0       	ldi	r22, 0x01	; 1
    1506:	3e cf       	rjmp	.-388    	; 0x1384 <Lclass::PID_callingg() [clone .constprop.43]+0x206>

00001508 <Ticker::update()>:
update():
    1508:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    150a:	1f 93       	push	r17
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    1510:	fc 01       	movw	r30, r24
    1512:	20 81       	ld	r18, Z
    1514:	22 23       	and	r18, r18
    1516:	09 f4       	brne	.+2      	; 0x151a <Ticker::update()+0x12>
    1518:	50 c0       	rjmp	.+160    	; 0x15ba <Ticker::update()+0xb2>
    151a:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    151c:	81 85       	ldd	r24, Z+9	; 0x09
    151e:	92 85       	ldd	r25, Z+10	; 0x0a
    1520:	01 97       	sbiw	r24, 0x01	; 1
    1522:	b9 f5       	brne	.+110    	; 0x1592 <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    1524:	20 de       	rcall	.-960    	; 0x1166 <millis>
    1526:	0b 89       	ldd	r16, Y+19	; 0x13
    1528:	1c 89       	ldd	r17, Y+20	; 0x14
    152a:	2d 89       	ldd	r18, Y+21	; 0x15
    152c:	3e 89       	ldd	r19, Y+22	; 0x16
    152e:	60 1b       	sub	r22, r16
    1530:	71 0b       	sbc	r23, r17
    1532:	82 0b       	sbc	r24, r18
    1534:	93 0b       	sbc	r25, r19
    1536:	09 81       	ldd	r16, Y+1	; 0x01
    1538:	1a 81       	ldd	r17, Y+2	; 0x02
    153a:	2b 81       	ldd	r18, Y+3	; 0x03
    153c:	3c 81       	ldd	r19, Y+4	; 0x04
    153e:	60 17       	cp	r22, r16
    1540:	71 07       	cpc	r23, r17
    1542:	82 07       	cpc	r24, r18
    1544:	93 07       	cpc	r25, r19
    1546:	c8 f1       	brcs	.+114    	; 0x15ba <Ticker::update()+0xb2>
    1548:	0e de       	rcall	.-996    	; 0x1166 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    154a:	6b 8b       	std	Y+19, r22	; 0x13
    154c:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    154e:	8d 8b       	std	Y+21, r24	; 0x15
    1550:	9e 8b       	std	Y+22, r25	; 0x16
    1552:	8b 85       	ldd	r24, Y+11	; 0x0b
    1554:	9c 85       	ldd	r25, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    1556:	ad 85       	ldd	r26, Y+13	; 0x0d
    1558:	be 85       	ldd	r27, Y+14	; 0x0e
    155a:	4d 81       	ldd	r20, Y+5	; 0x05
    155c:	5e 81       	ldd	r21, Y+6	; 0x06
    155e:	6f 81       	ldd	r22, Y+7	; 0x07
    1560:	78 85       	ldd	r23, Y+8	; 0x08
    1562:	48 1b       	sub	r20, r24
    1564:	59 0b       	sbc	r21, r25
    1566:	6a 0b       	sbc	r22, r26
    1568:	7b 0b       	sbc	r23, r27
    156a:	41 30       	cpi	r20, 0x01	; 1
    156c:	51 05       	cpc	r21, r1
    156e:	61 05       	cpc	r22, r1
    1570:	71 05       	cpc	r23, r1
    1572:	09 f4       	brne	.+2      	; 0x1576 <Ticker::update()+0x6e>
    1574:	18 82       	st	Y, r1
    1576:	01 96       	adiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    1578:	a1 1d       	adc	r26, r1
    157a:	b1 1d       	adc	r27, r1
    157c:	8b 87       	std	Y+11, r24	; 0x0b
    157e:	9c 87       	std	Y+12, r25	; 0x0c
    1580:	ad 87       	std	Y+13, r26	; 0x0d
    1582:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1584:	e9 89       	ldd	r30, Y+17	; 0x11
    1586:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    1588:	df 91       	pop	r29
    158a:	cf 91       	pop	r28
    158c:	1f 91       	pop	r17
    158e:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    1590:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    1592:	c0 dd       	rcall	.-1152   	; 0x1114 <micros>
    1594:	0b 89       	ldd	r16, Y+19	; 0x13
    1596:	1c 89       	ldd	r17, Y+20	; 0x14
    1598:	2d 89       	ldd	r18, Y+21	; 0x15
    159a:	3e 89       	ldd	r19, Y+22	; 0x16
    159c:	60 1b       	sub	r22, r16
    159e:	71 0b       	sbc	r23, r17
    15a0:	82 0b       	sbc	r24, r18
    15a2:	93 0b       	sbc	r25, r19
    15a4:	09 81       	ldd	r16, Y+1	; 0x01
    15a6:	1a 81       	ldd	r17, Y+2	; 0x02
    15a8:	2b 81       	ldd	r18, Y+3	; 0x03
    15aa:	3c 81       	ldd	r19, Y+4	; 0x04
    15ac:	60 17       	cp	r22, r16
    15ae:	71 07       	cpc	r23, r17
    15b0:	82 07       	cpc	r24, r18
    15b2:	93 07       	cpc	r25, r19
    15b4:	10 f0       	brcs	.+4      	; 0x15ba <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    15b6:	ae dd       	rcall	.-1188   	; 0x1114 <micros>
    15b8:	c8 cf       	rjmp	.-112    	; 0x154a <Ticker::update()+0x42>
update():
    15ba:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    15bc:	cf 91       	pop	r28
    15be:	1f 91       	pop	r17
    15c0:	0f 91       	pop	r16
    15c2:	08 95       	ret

000015c4 <Ticker::start()>:
start():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    15c8:	fc 01       	movw	r30, r24
    15ca:	21 89       	ldd	r18, Z+17	; 0x11
    15cc:	32 89       	ldd	r19, Z+18	; 0x12
    15ce:	23 2b       	or	r18, r19
    15d0:	a1 f0       	breq	.+40     	; 0x15fa <Ticker::start()+0x36>
    15d2:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    15d4:	81 85       	ldd	r24, Z+9	; 0x09
    15d6:	92 85       	ldd	r25, Z+10	; 0x0a
    15d8:	01 97       	sbiw	r24, 0x01	; 1
    15da:	91 f4       	brne	.+36     	; 0x1600 <Ticker::start()+0x3c>
    15dc:	c4 dd       	rcall	.-1144   	; 0x1166 <millis>
    15de:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    15e0:	7c 8b       	std	Y+20, r23	; 0x14
    15e2:	8d 8b       	std	Y+21, r24	; 0x15
    15e4:	9e 8b       	std	Y+22, r25	; 0x16
    15e6:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    15e8:	88 83       	st	Y, r24
    15ea:	1b 86       	std	Y+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    15ec:	1c 86       	std	Y+12, r1	; 0x0c
    15ee:	1d 86       	std	Y+13, r1	; 0x0d
    15f0:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    15f2:	81 e0       	ldi	r24, 0x01	; 1
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	8f 87       	std	Y+15, r24	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    15f8:	98 8b       	std	Y+16, r25	; 0x10
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    15fe:	08 95       	ret
    1600:	89 dd       	rcall	.-1262   	; 0x1114 <micros>
    1602:	ed cf       	rjmp	.-38     	; 0x15de <Ticker::start()+0x1a>

00001604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>:
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:60
{
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
    1604:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:62
{
  BUZZ.interval(i);
    1606:	bc 01       	movw	r22, r24
    1608:	99 0f       	add	r25, r25
    160a:	88 0b       	sbc	r24, r24
    160c:	99 0b       	sbc	r25, r25
interval():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    160e:	20 91 90 2b 	lds	r18, 0x2B90	; 0x802b90 <BUZZ+0x9>
    1612:	30 91 91 2b 	lds	r19, 0x2B91	; 0x802b91 <BUZZ+0xa>
    1616:	23 2b       	or	r18, r19
    1618:	21 f4       	brne	.+8      	; 0x1622 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]+0x1e>
    161a:	28 ee       	ldi	r18, 0xE8	; 232
    161c:	33 e0       	ldi	r19, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    161e:	0e 94 df 38 	call	0x71be	; 0x71be <__usmulhisi3>
    1622:	60 93 88 2b 	sts	0x2B88, r22	; 0x802b88 <BUZZ+0x1>
    1626:	70 93 89 2b 	sts	0x2B89, r23	; 0x802b89 <BUZZ+0x2>
    162a:	80 93 8a 2b 	sts	0x2B8A, r24	; 0x802b8a <BUZZ+0x3>
    162e:	90 93 8b 2b 	sts	0x2B8B, r25	; 0x802b8b <BUZZ+0x4>
digitalWrite():
    1632:	61 e0       	ldi	r22, 0x01	; 1
    1634:	85 e1       	ldi	r24, 0x15	; 21
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    1636:	33 dc       	rcall	.-1946   	; 0xe9e <digitalWrite.part.2>
BUZZ_INTERVAL():
    1638:	87 e8       	ldi	r24, 0x87	; 135
    163a:	9b e2       	ldi	r25, 0x2B	; 43
    163c:	c3 cf       	rjmp	.-122    	; 0x15c4 <Ticker::start()>

0000163e <OneButton::tick()>:
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    163e:	cf 92       	push	r12
    1640:	df 92       	push	r13
    1642:	ef 92       	push	r14
    1644:	ff 92       	push	r15
    1646:	0f 93       	push	r16
    1648:	1f 93       	push	r17
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    1650:	88 81       	ld	r24, Y
digitalRead():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1652:	89 32       	cpi	r24, 0x29	; 41
    1654:	f8 f4       	brcc	.+62     	; 0x1694 <OneButton::tick()+0x56>
    1656:	3e dd       	rcall	.-1412   	; 0x10d4 <digitalRead.part.3>
tick():
    1658:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    165a:	10 e0       	ldi	r17, 0x00	; 0
    165c:	84 dd       	rcall	.-1272   	; 0x1166 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    165e:	29 8d       	ldd	r18, Y+25	; 0x19
    1660:	3a 8d       	ldd	r19, Y+26	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    1662:	21 15       	cp	r18, r1
    1664:	31 05       	cpc	r19, r1
    1666:	c1 f4       	brne	.+48     	; 0x1698 <OneButton::tick()+0x5a>
    1668:	2a 85       	ldd	r18, Y+10	; 0x0a
    166a:	3b 85       	ldd	r19, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    166c:	20 17       	cp	r18, r16
    166e:	31 07       	cpc	r19, r17
    1670:	41 f4       	brne	.+16     	; 0x1682 <OneButton::tick()+0x44>
    1672:	21 e0       	ldi	r18, 0x01	; 1
    1674:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    1676:	29 8f       	std	Y+25, r18	; 0x19
    1678:	3a 8f       	std	Y+26, r19	; 0x1a
    167a:	6b 8f       	std	Y+27, r22	; 0x1b
    167c:	7c 8f       	std	Y+28, r23	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    167e:	8d 8f       	std	Y+29, r24	; 0x1d
    1680:	9e 8f       	std	Y+30, r25	; 0x1e
    1682:	df 91       	pop	r29
    1684:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    1686:	1f 91       	pop	r17
    1688:	0f 91       	pop	r16
    168a:	ff 90       	pop	r15
    168c:	ef 90       	pop	r14
    168e:	df 90       	pop	r13
    1690:	cf 90       	pop	r12
    1692:	08 95       	ret
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	e0 cf       	rjmp	.-64     	; 0x1658 <OneButton::tick()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    1698:	21 30       	cpi	r18, 0x01	; 1
    169a:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    169c:	09 f0       	breq	.+2      	; 0x16a0 <OneButton::tick()+0x62>
    169e:	51 c0       	rjmp	.+162    	; 0x1742 <OneButton::tick()+0x104>
    16a0:	28 85       	ldd	r18, Y+8	; 0x08
    16a2:	39 85       	ldd	r19, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    16a4:	20 17       	cp	r18, r16
    16a6:	31 07       	cpc	r19, r17
    16a8:	e9 f4       	brne	.+58     	; 0x16e4 <OneButton::tick()+0xa6>
    16aa:	0b 8d       	ldd	r16, Y+27	; 0x1b
    16ac:	1c 8d       	ldd	r17, Y+28	; 0x1c
    16ae:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16b0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16b2:	ab 01       	movw	r20, r22
    16b4:	bc 01       	movw	r22, r24
    16b6:	40 1b       	sub	r20, r16
    16b8:	51 0b       	sbc	r21, r17
    16ba:	62 0b       	sbc	r22, r18
    16bc:	73 0b       	sbc	r23, r19
    16be:	8e 81       	ldd	r24, Y+6	; 0x06
    16c0:	9f 81       	ldd	r25, Y+7	; 0x07
    16c2:	09 2e       	mov	r0, r25
    16c4:	00 0c       	add	r0, r0
    16c6:	aa 0b       	sbc	r26, r26
    16c8:	bb 0b       	sbc	r27, r27
    16ca:	48 17       	cp	r20, r24
    16cc:	59 07       	cpc	r21, r25
    16ce:	6a 07       	cpc	r22, r26
    16d0:	7b 07       	cpc	r23, r27
    16d2:	18 f4       	brcc	.+6      	; 0x16da <OneButton::tick()+0x9c>
    16d4:	19 8e       	std	Y+25, r1	; 0x19
    16d6:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    16d8:	d4 cf       	rjmp	.-88     	; 0x1682 <OneButton::tick()+0x44>
    16da:	82 e0       	ldi	r24, 0x02	; 2
    16dc:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    16de:	89 8f       	std	Y+25, r24	; 0x19
    16e0:	9a 8f       	std	Y+26, r25	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    16e2:	cf cf       	rjmp	.-98     	; 0x1682 <OneButton::tick()+0x44>
    16e4:	2a 85       	ldd	r18, Y+10	; 0x0a
    16e6:	3b 85       	ldd	r19, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    16e8:	20 17       	cp	r18, r16
    16ea:	31 07       	cpc	r19, r17
    16ec:	51 f6       	brne	.-108    	; 0x1682 <OneButton::tick()+0x44>
    16ee:	0b 8d       	ldd	r16, Y+27	; 0x1b
    16f0:	1c 8d       	ldd	r17, Y+28	; 0x1c
    16f2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    16f4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    16f6:	ab 01       	movw	r20, r22
    16f8:	bc 01       	movw	r22, r24
    16fa:	40 1b       	sub	r20, r16
    16fc:	51 0b       	sbc	r21, r17
    16fe:	62 0b       	sbc	r22, r18
    1700:	73 0b       	sbc	r23, r19
    1702:	8c 81       	ldd	r24, Y+4	; 0x04
    1704:	9d 81       	ldd	r25, Y+5	; 0x05
    1706:	09 2e       	mov	r0, r25
    1708:	00 0c       	add	r0, r0
    170a:	aa 0b       	sbc	r26, r26
    170c:	bb 0b       	sbc	r27, r27
    170e:	84 17       	cp	r24, r20
    1710:	95 07       	cpc	r25, r21
    1712:	a6 07       	cpc	r26, r22
    1714:	b7 07       	cpc	r27, r23
    1716:	08 f0       	brcs	.+2      	; 0x171a <OneButton::tick()+0xdc>
    1718:	b4 cf       	rjmp	.-152    	; 0x1682 <OneButton::tick()+0x44>
    171a:	81 e0       	ldi	r24, 0x01	; 1
    171c:	8c 87       	std	Y+12, r24	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    171e:	e9 89       	ldd	r30, Y+17	; 0x11
    1720:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    1722:	30 97       	sbiw	r30, 0x00	; 0
    1724:	09 f0       	breq	.+2      	; 0x1728 <OneButton::tick()+0xea>
    1726:	09 95       	icall
    1728:	eb 89       	ldd	r30, Y+19	; 0x13
    172a:	fc 89       	ldd	r31, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    172c:	30 97       	sbiw	r30, 0x00	; 0
    172e:	09 f0       	breq	.+2      	; 0x1732 <OneButton::tick()+0xf4>
    1730:	09 95       	icall
    1732:	ef 89       	ldd	r30, Y+23	; 0x17
    1734:	f8 8d       	ldd	r31, Y+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1736:	30 97       	sbiw	r30, 0x00	; 0
    1738:	09 f0       	breq	.+2      	; 0x173c <OneButton::tick()+0xfe>
    173a:	09 95       	icall
    173c:	86 e0       	ldi	r24, 0x06	; 6
    173e:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    1740:	ce cf       	rjmp	.-100    	; 0x16de <OneButton::tick()+0xa0>
    1742:	22 30       	cpi	r18, 0x02	; 2
    1744:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    1746:	19 f5       	brne	.+70     	; 0x178e <OneButton::tick()+0x150>
    1748:	cb 8c       	ldd	r12, Y+27	; 0x1b
    174a:	dc 8c       	ldd	r13, Y+28	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    174c:	ed 8c       	ldd	r14, Y+29	; 0x1d
    174e:	fe 8c       	ldd	r15, Y+30	; 0x1e
    1750:	6c 19       	sub	r22, r12
    1752:	7d 09       	sbc	r23, r13
    1754:	8e 09       	sbc	r24, r14
    1756:	9f 09       	sbc	r25, r15
    1758:	ca 80       	ldd	r12, Y+2	; 0x02
    175a:	db 80       	ldd	r13, Y+3	; 0x03
    175c:	0d 2c       	mov	r0, r13
    175e:	00 0c       	add	r0, r0
    1760:	ee 08       	sbc	r14, r14
    1762:	ff 08       	sbc	r15, r15
    1764:	c6 16       	cp	r12, r22
    1766:	d7 06       	cpc	r13, r23
    1768:	e8 06       	cpc	r14, r24
    176a:	f9 06       	cpc	r15, r25
    176c:	38 f4       	brcc	.+14     	; 0x177c <OneButton::tick()+0x13e>
    176e:	ed 85       	ldd	r30, Y+13	; 0x0d
    1770:	fe 85       	ldd	r31, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    1772:	30 97       	sbiw	r30, 0x00	; 0
    1774:	09 f4       	brne	.+2      	; 0x1778 <OneButton::tick()+0x13a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    1776:	ae cf       	rjmp	.-164    	; 0x16d4 <OneButton::tick()+0x96>
    1778:	09 95       	icall
    177a:	ac cf       	rjmp	.-168    	; 0x16d4 <OneButton::tick()+0x96>
    177c:	8a 85       	ldd	r24, Y+10	; 0x0a
    177e:	9b 85       	ldd	r25, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    1780:	80 17       	cp	r24, r16
    1782:	91 07       	cpc	r25, r17
    1784:	09 f0       	breq	.+2      	; 0x1788 <OneButton::tick()+0x14a>
    1786:	7d cf       	rjmp	.-262    	; 0x1682 <OneButton::tick()+0x44>
    1788:	83 e0       	ldi	r24, 0x03	; 3
    178a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    178c:	a8 cf       	rjmp	.-176    	; 0x16de <OneButton::tick()+0xa0>
    178e:	23 30       	cpi	r18, 0x03	; 3
    1790:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    1792:	49 f4       	brne	.+18     	; 0x17a6 <OneButton::tick()+0x168>
    1794:	88 85       	ldd	r24, Y+8	; 0x08
    1796:	99 85       	ldd	r25, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    1798:	80 17       	cp	r24, r16
    179a:	91 07       	cpc	r25, r17
    179c:	09 f0       	breq	.+2      	; 0x17a0 <OneButton::tick()+0x162>
    179e:	71 cf       	rjmp	.-286    	; 0x1682 <OneButton::tick()+0x44>
    17a0:	ef 85       	ldd	r30, Y+15	; 0x0f
    17a2:	f8 89       	ldd	r31, Y+16	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    17a4:	e6 cf       	rjmp	.-52     	; 0x1772 <OneButton::tick()+0x134>
    17a6:	26 30       	cpi	r18, 0x06	; 6
    17a8:	31 05       	cpc	r19, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    17aa:	09 f0       	breq	.+2      	; 0x17ae <OneButton::tick()+0x170>
    17ac:	6a cf       	rjmp	.-300    	; 0x1682 <OneButton::tick()+0x44>
    17ae:	88 85       	ldd	r24, Y+8	; 0x08
    17b0:	99 85       	ldd	r25, Y+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    17b2:	80 17       	cp	r24, r16
    17b4:	91 07       	cpc	r25, r17
    17b6:	21 f4       	brne	.+8      	; 0x17c0 <OneButton::tick()+0x182>
    17b8:	1c 86       	std	Y+12, r1	; 0x0c
    17ba:	ed 89       	ldd	r30, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    17bc:	fe 89       	ldd	r31, Y+22	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    17be:	d9 cf       	rjmp	.-78     	; 0x1772 <OneButton::tick()+0x134>
    17c0:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    17c2:	8c 87       	std	Y+12, r24	; 0x0c
    17c4:	ef 89       	ldd	r30, Y+23	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    17c6:	f8 8d       	ldd	r31, Y+24	; 0x18
    17c8:	30 97       	sbiw	r30, 0x00	; 0
    17ca:	09 f4       	brne	.+2      	; 0x17ce <OneButton::tick()+0x190>
    17cc:	5a cf       	rjmp	.-332    	; 0x1682 <OneButton::tick()+0x44>
    17ce:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    17d0:	cf 91       	pop	r28
    17d2:	1f 91       	pop	r17
    17d4:	0f 91       	pop	r16
    17d6:	ff 90       	pop	r15
    17d8:	ef 90       	pop	r14
    17da:	df 90       	pop	r13
    17dc:	cf 90       	pop	r12
    17de:	09 94       	ijmp

000017e0 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if(_longPressStopFunc) _longPressStopFunc();
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    17e0:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:534
}
}

void RESET_LONG_PRESS_START()
{
  if(checkTempRaised==0)
    17e4:	81 11       	cpse	r24, r1
    17e6:	22 c0       	rjmp	.+68     	; 0x182c <__DATA_REGION_LENGTH__+0x2c>
    17e8:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:536
  {
  if (!LONG_PRESS )   {
    17ec:	81 11       	cpse	r24, r1
    17ee:	16 c0       	rjmp	.+44     	; 0x181c <__DATA_REGION_LENGTH__+0x1c>
    17f0:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:537
  if(!ENTER_BUT)
    17f4:	81 11       	cpse	r24, r1
    17f6:	0b c0       	rjmp	.+22     	; 0x180e <__DATA_REGION_LENGTH__+0xe>
    17f8:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:539
  {
    RST_BUTT = 0;    
    17fc:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:541
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1804:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1808:	88 ec       	ldi	r24, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:554
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	fb ce       	rjmp	.-522    	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    180e:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:545
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;// 0;
  }
  else
  {
      ENTER_BUT = 0;
    1812:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:546
      SET_MIN = 0;
    1816:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
    181a:	f6 cf       	rjmp	.-20     	; 0x1808 <__DATA_REGION_LENGTH__+0x8>
    181c:	80 91 49 28 	lds	r24, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:551
  }
  }
  if (LONG_PRESS)//&& !Mode_Button_Single_Press_In_Settings ) //07/08/2023 Siddhesh
  {
    if(Service_Menu) Service_Menu=0;
    1820:	81 11       	cpse	r24, r1
    1822:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    1826:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:552
    LONG_PRESS = 0;
    182a:	ee cf       	rjmp	.-36     	; 0x1808 <__DATA_REGION_LENGTH__+0x8>
    182c:	08 95       	ret

0000182e <RESET_CLICK()>:
RESET_CLICK():
    182e:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:502
  }
}

void RESET_CLICK()
{
  if(checkTempRaised==0)
    1832:	81 11       	cpse	r24, r1
    1834:	5e c0       	rjmp	.+188    	; 0x18f2 <RESET_CLICK()+0xc4>
    1836:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:504
  {
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    183a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    183e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1842:	21 11       	cpse	r18, r1
    1844:	03 c0       	rjmp	.+6      	; 0x184c <RESET_CLICK()+0x1e>
    1846:	88 30       	cpi	r24, 0x08	; 8
    1848:	91 05       	cpc	r25, r1
    184a:	29 f0       	breq	.+10     	; 0x1856 <RESET_CLICK()+0x28>
    184c:	ac 01       	movw	r20, r24
    184e:	4d 7f       	andi	r20, 0xFD	; 253
    1850:	4c 30       	cpi	r20, 0x0C	; 12
    1852:	51 05       	cpc	r21, r1
    1854:	b9 f5       	brne	.+110    	; 0x18c4 <RESET_CLICK()+0x96>
    1856:	01 97       	sbiw	r24, 0x01	; 1
    1858:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:507
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    185c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1860:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:518
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    1864:	81 11       	cpse	r24, r1
    1866:	2b c0       	rjmp	.+86     	; 0x18be <RESET_CLICK()+0x90>
    1868:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    186c:	22 23       	and	r18, r18
    186e:	d9 f1       	breq	.+118    	; 0x18e6 <RESET_CLICK()+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:520
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    1870:	82 30       	cpi	r24, 0x02	; 2
    1872:	c9 f5       	brne	.+114    	; 0x18e6 <RESET_CLICK()+0xb8>
    1874:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    1878:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:522
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    187c:	85 30       	cpi	r24, 0x05	; 5
    187e:	f9 f4       	brne	.+62     	; 0x18be <RESET_CLICK()+0x90>
    1880:	20 e0       	ldi	r18, 0x00	; 0
    1882:	30 e0       	ldi	r19, 0x00	; 0
    1884:	40 e8       	ldi	r20, 0x80	; 128
    1886:	5f e3       	ldi	r21, 0x3F	; 63
    1888:	60 91 aa 28 	lds	r22, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    188c:	70 91 ab 28 	lds	r23, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    1890:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    1894:	90 91 ad 28 	lds	r25, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    1898:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    189c:	87 fd       	sbrc	r24, 7
    189e:	0f c0       	rjmp	.+30     	; 0x18be <RESET_CLICK()+0x90>
    18a0:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    18a4:	88 23       	and	r24, r24
    18a6:	59 f0       	breq	.+22     	; 0x18be <RESET_CLICK()+0x90>
    18a8:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:524
   {
     RATE_OF_HEATING =0;
    18ac:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    18b0:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    18b4:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    18b8:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:525
     CHECK_RATE_OF_HEATING =1;
    18ba:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    18be:	82 e3       	ldi	r24, 0x32	; 50
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:528
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	a0 ce       	rjmp	.-704    	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    18c4:	8b 30       	cpi	r24, 0x0B	; 11
    18c6:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:510
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    18c8:	11 f0       	breq	.+4      	; 0x18ce <RESET_CLICK()+0xa0>
    18ca:	0d 97       	sbiw	r24, 0x0d	; 13
    18cc:	21 f4       	brne	.+8      	; 0x18d6 <RESET_CLICK()+0xa8>
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	80 93 a7 28 	sts	0x28A7, r24	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:512
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat ) //|| SELECTION_PARAMETER == Product_Selection_Parameter )   
          Mode_Button_Single_Press_In_Settings =1;
    18d4:	c5 cf       	rjmp	.-118    	; 0x1860 <RESET_CLICK()+0x32>
    18d6:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:515
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    18da:	88 23       	and	r24, r24
    18dc:	09 f4       	brne	.+2      	; 0x18e0 <RESET_CLICK()+0xb2>
    18de:	c0 cf       	rjmp	.-128    	; 0x1860 <RESET_CLICK()+0x32>
    18e0:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    18e4:	bd cf       	rjmp	.-134    	; 0x1860 <RESET_CLICK()+0x32>
    18e6:	81 50       	subi	r24, 0x01	; 1
    18e8:	84 30       	cpi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:521
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    18ea:	30 f6       	brcc	.-116    	; 0x1878 <RESET_CLICK()+0x4a>
    18ec:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
    18f0:	c3 cf       	rjmp	.-122    	; 0x1878 <RESET_CLICK()+0x4a>
    18f2:	08 95       	ret

000018f4 <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    18f4:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:444
}
}

void DEC_LONGPRESS()
{ 
  if(checkTempRaised==0)
    18f8:	81 11       	cpse	r24, r1
    18fa:	12 c0       	rjmp	.+36     	; 0x1920 <DEC_LONGPRESS()+0x2c>
    18fc:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:446
  {
  if(!but1)
    1900:	81 11       	cpse	r24, r1
    1902:	0e c0       	rjmp	.+28     	; 0x1920 <DEC_LONGPRESS()+0x2c>
    1904:	81 e0       	ldi	r24, 0x01	; 1
    1906:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:448
  {
    BLINK_STATS=1;
    190a:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:449
    INC5++;
    190e:	8f 5f       	subi	r24, 0xFF	; 255
    1910:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    1914:	89 31       	cpi	r24, 0x19	; 25
    1916:	24 f0       	brlt	.+8      	; 0x1920 <DEC_LONGPRESS()+0x2c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:450
    if (INC5 >= 25)
    1918:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:452
    {
      Butn.SET_CHANGE_DOWN();
    191c:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:453
      INC5 = 0;
    1920:	08 95       	ret

00001922 <DEC_CLICK()>:
DEC_CLICK():
    1922:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:406
}
}

void DEC_CLICK()
{ 
  if(checkTempRaised==0)
    1926:	81 11       	cpse	r24, r1
    1928:	54 c0       	rjmp	.+168    	; 0x19d2 <DEC_CLICK()+0xb0>
    192a:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:408
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    192e:	88 23       	and	r24, r24
    1930:	09 f4       	brne	.+2      	; 0x1934 <DEC_CLICK()+0x12>
    1932:	4d c0       	rjmp	.+154    	; 0x19ce <DEC_CLICK()+0xac>
    1934:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    1938:	81 11       	cpse	r24, r1
    193a:	49 c0       	rjmp	.+146    	; 0x19ce <DEC_CLICK()+0xac>
    193c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1940:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1944:	20 91 49 28 	lds	r18, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:410
  {
    if(!Service_Menu){
    1948:	21 11       	cpse	r18, r1
    194a:	19 c0       	rjmp	.+50     	; 0x197e <DEC_CLICK()+0x5c>
    194c:	01 96       	adiw	r24, 0x01	; 1
    194e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:411
        SELECTION_PARAMETER++;
    1952:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1956:	20 91 07 29 	lds	r18, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:413

      if(select_product_type )
    195a:	22 23       	and	r18, r18
    195c:	39 f0       	breq	.+14     	; 0x196c <DEC_CLICK()+0x4a>
    195e:	05 97       	sbiw	r24, 0x05	; 5
    1960:	c4 f1       	brlt	.+112    	; 0x19d2 <DEC_CLICK()+0xb0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:415
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
    1962:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1966:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    196a:	08 95       	ret
    196c:	05 97       	sbiw	r24, 0x05	; 5
    196e:	8c f1       	brlt	.+98     	; 0x19d2 <DEC_CLICK()+0xb0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:419
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
    1970:	81 e0       	ldi	r24, 0x01	; 1
    1972:	90 e0       	ldi	r25, 0x00	; 0
    1974:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:425
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
    1978:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    197c:	08 95       	ret
    197e:	86 30       	cpi	r24, 0x06	; 6
    1980:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:424
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
    1982:	19 f4       	brne	.+6      	; 0x198a <DEC_CLICK()+0x68>
    1984:	88 e0       	ldi	r24, 0x08	; 8
    1986:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:425
                   SELECTION_PARAMETER = Cal1_Point;
    1988:	f5 cf       	rjmp	.-22     	; 0x1974 <DEC_CLICK()+0x52>
    198a:	20 91 ae 28 	lds	r18, 0x28AE	; 0x8028ae <CAL2_START>
    198e:	89 30       	cpi	r24, 0x09	; 9
    1990:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:426
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1992:	39 f4       	brne	.+14     	; 0x19a2 <DEC_CLICK()+0x80>
    1994:	8b e0       	ldi	r24, 0x0B	; 11
    1996:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:427
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
    1998:	21 11       	cpse	r18, r1
    199a:	ec cf       	rjmp	.-40     	; 0x1974 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:426
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    199c:	80 e1       	ldi	r24, 0x10	; 16
    199e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:429
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Log; 
    19a0:	e9 cf       	rjmp	.-46     	; 0x1974 <DEC_CLICK()+0x52>
    19a2:	21 11       	cpse	r18, r1
    19a4:	06 c0       	rjmp	.+12     	; 0x19b2 <DEC_CLICK()+0x90>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:428
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
    19a6:	89 30       	cpi	r24, 0x09	; 9
    19a8:	91 05       	cpc	r25, r1
    19aa:	4c f0       	brlt	.+18     	; 0x19be <DEC_CLICK()+0x9c>
    19ac:	80 31       	cpi	r24, 0x10	; 16
    19ae:	91 05       	cpc	r25, r1
    19b0:	ac f3       	brlt	.-22     	; 0x199c <DEC_CLICK()+0x7a>
    19b2:	80 31       	cpi	r24, 0x10	; 16
    19b4:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:430
                       SELECTION_PARAMETER = Log; 
      else if(SELECTION_PARAMETER ==  Log)            
    19b6:	19 f4       	brne	.+6      	; 0x19be <DEC_CLICK()+0x9c>
    19b8:	81 e1       	ldi	r24, 0x11	; 17
    19ba:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:431
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
    19bc:	db cf       	rjmp	.-74     	; 0x1974 <DEC_CLICK()+0x52>
    19be:	81 31       	cpi	r24, 0x11	; 17
    19c0:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:432
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
    19c2:	1c f0       	brlt	.+6      	; 0x19ca <DEC_CLICK()+0xa8>
    19c4:	85 e0       	ldi	r24, 0x05	; 5
    19c6:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:433
              SELECTION_PARAMETER = Product_Selection_Parameter; //0; 
    19c8:	d5 cf       	rjmp	.-86     	; 0x1974 <DEC_CLICK()+0x52>
    19ca:	01 96       	adiw	r24, 0x01	; 1
    19cc:	d3 cf       	rjmp	.-90     	; 0x1974 <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:435
      else                                                 
             SELECTION_PARAMETER++;             
    19ce:	0c 94 72 02 	jmp	0x4e4	; 0x4e4 <Bclass::SET_CHANGE_DOWN() [clone .constprop.68]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:438
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
    19d2:	08 95       	ret

000019d4 <INC_LONGPRESS()>:
INC_LONGPRESS():
    19d4:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:381
}
}

void INC_LONGPRESS()
{
  if(checkTempRaised==0)
    19d8:	81 11       	cpse	r24, r1
    19da:	12 c0       	rjmp	.+36     	; 0x1a00 <INC_LONGPRESS()+0x2c>
    19dc:	80 91 4f 28 	lds	r24, 0x284F	; 0x80284f <but1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:383
  {
  if(!but1)
    19e0:	81 11       	cpse	r24, r1
    19e2:	0e c0       	rjmp	.+28     	; 0x1a00 <INC_LONGPRESS()+0x2c>
    19e4:	81 e0       	ldi	r24, 0x01	; 1
    19e6:	80 93 9d 28 	sts	0x289D, r24	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:385
  {
    BLINK_STATS=1;
    19ea:	80 91 34 28 	lds	r24, 0x2834	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:386
    INC5++;
    19ee:	8f 5f       	subi	r24, 0xFF	; 255
    19f0:	80 93 34 28 	sts	0x2834, r24	; 0x802834 <INC5>
    19f4:	89 31       	cpi	r24, 0x19	; 25
    19f6:	24 f0       	brlt	.+8      	; 0x1a00 <INC_LONGPRESS()+0x2c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:387
    if (INC5 >= 25)
    19f8:	0e 94 88 01 	call	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:389
    {
      Butn.SET_CHANGE_UP();
    19fc:	10 92 34 28 	sts	0x2834, r1	; 0x802834 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:390
      INC5 = 0;
    1a00:	08 95       	ret

00001a02 <INC_CLICK()>:
INC_CLICK():
    1a02:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:343
  button4.tick();  
}

void INC_CLICK()
{ 
  if(checkTempRaised==0)
    1a06:	81 11       	cpse	r24, r1
    1a08:	26 c0       	rjmp	.+76     	; 0x1a56 <INC_CLICK()+0x54>
    1a0a:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:345
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1a0e:	88 23       	and	r24, r24
    1a10:	09 f4       	brne	.+2      	; 0x1a14 <INC_CLICK()+0x12>
    1a12:	3f c0       	rjmp	.+126    	; 0x1a92 <INC_CLICK()+0x90>
    1a14:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    1a18:	81 11       	cpse	r24, r1
    1a1a:	3b c0       	rjmp	.+118    	; 0x1a92 <INC_CLICK()+0x90>
    1a1c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1a20:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a24:	20 91 49 28 	lds	r18, 0x2849	; 0x802849 <Service_Menu>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:347
  {    
    if(!Service_Menu)
    1a28:	21 11       	cpse	r18, r1
    1a2a:	16 c0       	rjmp	.+44     	; 0x1a58 <INC_CLICK()+0x56>
    1a2c:	01 97       	sbiw	r24, 0x01	; 1
    1a2e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:349
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
    1a32:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a36:	20 91 07 29 	lds	r18, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:350
      if(select_product_type )
    1a3a:	22 23       	and	r18, r18
    1a3c:	49 f0       	breq	.+18     	; 0x1a50 <INC_CLICK()+0x4e>
    1a3e:	97 ff       	sbrs	r25, 7
    1a40:	0a c0       	rjmp	.+20     	; 0x1a56 <INC_CLICK()+0x54>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:352
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
    1a42:	84 e0       	ldi	r24, 0x04	; 4
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:362
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
    1a4a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1a4e:	08 95       	ret
    1a50:	18 16       	cp	r1, r24
    1a52:	19 06       	cpc	r1, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:356
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
    1a54:	b4 f7       	brge	.-20     	; 0x1a42 <INC_CLICK()+0x40>
    1a56:	08 95       	ret
    1a58:	88 30       	cpi	r24, 0x08	; 8
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:377
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
}
    1a5a:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:361
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
    1a5c:	19 f4       	brne	.+6      	; 0x1a64 <INC_CLICK()+0x62>
    1a5e:	86 e0       	ldi	r24, 0x06	; 6
    1a60:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:362
                              SELECTION_PARAMETER = Calibration_Selection;
    1a62:	f1 cf       	rjmp	.-30     	; 0x1a46 <INC_CLICK()+0x44>
    1a64:	8b 30       	cpi	r24, 0x0B	; 11
    1a66:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:363
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
    1a68:	19 f4       	brne	.+6      	; 0x1a70 <INC_CLICK()+0x6e>
    1a6a:	89 e0       	ldi	r24, 0x09	; 9
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:364
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
    1a6e:	eb cf       	rjmp	.-42     	; 0x1a46 <INC_CLICK()+0x44>
    1a70:	81 31       	cpi	r24, 0x11	; 17
    1a72:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:365
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
    1a74:	19 f4       	brne	.+6      	; 0x1a7c <INC_CLICK()+0x7a>
    1a76:	80 e1       	ldi	r24, 0x10	; 16
    1a78:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:366
                                SELECTION_PARAMETER = Log;
    1a7a:	e5 cf       	rjmp	.-54     	; 0x1a46 <INC_CLICK()+0x44>
    1a7c:	80 31       	cpi	r24, 0x10	; 16
    1a7e:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:367
      else if(SELECTION_PARAMETER == Log)   
    1a80:	a1 f3       	breq	.-24     	; 0x1a6a <INC_CLICK()+0x68>
    1a82:	86 30       	cpi	r24, 0x06	; 6
    1a84:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:369
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;                                
      else if (SELECTION_PARAMETER < Calibration_Selection)
    1a86:	1c f4       	brge	.+6      	; 0x1a8e <INC_CLICK()+0x8c>
    1a88:	81 e1       	ldi	r24, 0x11	; 17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:370
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	dc cf       	rjmp	.-72     	; 0x1a46 <INC_CLICK()+0x44>
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:371
      else                      SELECTION_PARAMETER--;      
    1a90:	da cf       	rjmp	.-76     	; 0x1a46 <INC_CLICK()+0x44>
    1a92:	0c 94 88 01 	jmp	0x310	; 0x310 <Bclass::SET_CHANGE_UP() [clone .constprop.69]>

00001a96 <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:375
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
    1a96:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:316
}
}

void MODE_LONG_PRESS_START()
{ 
  if(checkTempRaised==0)
    1a9a:	81 11       	cpse	r24, r1
    1a9c:	25 c0       	rjmp	.+74     	; 0x1ae8 <MODE_LONG_PRESS_START()+0x52>
    1a9e:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:318
  {
  if (!ENTER_BUT)
    1aa2:	81 11       	cpse	r24, r1
    1aa4:	17 c0       	rjmp	.+46     	; 0x1ad4 <MODE_LONG_PRESS_START()+0x3e>
    1aa6:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:320
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    1aaa:	81 11       	cpse	r24, r1
    1aac:	13 c0       	rjmp	.+38     	; 0x1ad4 <MODE_LONG_PRESS_START()+0x3e>
    1aae:	8e e5       	ldi	r24, 0x5E	; 94
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:322
    {
      i = 350;
    1ab0:	91 e0       	ldi	r25, 0x01	; 1
    1ab2:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    1ab6:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    1aba:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:323
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    1abe:	88 23       	and	r24, r24
    1ac0:	61 f0       	breq	.+24     	; 0x1ada <MODE_LONG_PRESS_START()+0x44>
    1ac2:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1ac6:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:325
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;      //------------------go to menu //Siddhesh
    1aca:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:326
      RST_BUTT = 1;
    1acc:	80 93 4d 29 	sts	0x294D, r24	; 0x80294d <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:329
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
    1ad0:	80 93 4a 28 	sts	0x284A, r24	; 0x80284a <RST_BUTT>
    1ad4:	88 ec       	ldi	r24, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:324
  {
    if (!LONG_PRESS )      //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	95 cd       	rjmp	.-1238   	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    1ada:	81 e0       	ldi	r24, 0x01	; 1
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1ae2:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1ae6:	f1 cf       	rjmp	.-30     	; 0x1aca <MODE_LONG_PRESS_START()+0x34>
    1ae8:	08 95       	ret

00001aea <UartClass::begin(unsigned long)>:
begin():
    1aea:	dc 01       	movw	r26, r24
    1aec:	ed 91       	ld	r30, X+
    1aee:	fc 91       	ld	r31, X
    1af0:	04 88       	ldd	r0, Z+20	; 0x14
    1af2:	f5 89       	ldd	r31, Z+21	; 0x15
    1af4:	e0 2d       	mov	r30, r0
    1af6:	23 e0       	ldi	r18, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	09 94       	ijmp

00001afc <STOP_BUZZER()>:
stop():
    1afc:	e7 e8       	ldi	r30, 0x87	; 135
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1afe:	fb e2       	ldi	r31, 0x2B	; 43
    1b00:	10 82       	st	Z, r1
    1b02:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1b04:	14 86       	std	Z+12, r1	; 0x0c
    1b06:	15 86       	std	Z+13, r1	; 0x0d
    1b08:	16 86       	std	Z+14, r1	; 0x0e
    1b0a:	17 86       	std	Z+15, r1	; 0x0f
    1b0c:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1b0e:	60 e0       	ldi	r22, 0x00	; 0
    1b10:	85 e1       	ldi	r24, 0x15	; 21
    1b12:	c5 c9       	rjmp	.-3190   	; 0xe9e <digitalWrite.part.2>

00001b14 <STOP_BUZZER1()>:
STOP_BUZZER1():
    1b14:	81 e5       	ldi	r24, 0x51	; 81
    1b16:	9b e2       	ldi	r25, 0x2B	; 43
    1b18:	55 dd       	rcall	.-1366   	; 0x15c4 <Ticker::start()>
digitalWrite():
    1b1a:	61 e0       	ldi	r22, 0x01	; 1
    1b1c:	85 e1       	ldi	r24, 0x15	; 21
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1b1e:	bf c9       	rjmp	.-3202   	; 0xe9e <digitalWrite.part.2>

00001b20 <STOP_BUZZER2()>:
    1b20:	60 e0       	ldi	r22, 0x00	; 0
    1b22:	85 e1       	ldi	r24, 0x15	; 21
    1b24:	bc d9       	rcall	.-3208   	; 0xe9e <digitalWrite.part.2>
STOP_BUZZER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    1b26:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <REPETATION_FLAG>
    1b2a:	88 23       	and	r24, r24
    1b2c:	49 f0       	breq	.+18     	; 0x1b40 <STOP_BUZZER2()+0x20>
    1b2e:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <FOR_REP>
    1b32:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <FOR_REP+0x1>
    1b36:	01 96       	adiw	r24, 0x01	; 1
    1b38:	80 93 b5 28 	sts	0x28B5, r24	; 0x8028b5 <FOR_REP>
    1b3c:	90 93 b6 28 	sts	0x28B6, r25	; 0x8028b6 <FOR_REP+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:71
   FOR_REP2++;
    1b40:	80 91 b7 28 	lds	r24, 0x28B7	; 0x8028b7 <FOR_REP2>
    1b44:	90 91 b8 28 	lds	r25, 0x28B8	; 0x8028b8 <FOR_REP2+0x1>
    1b48:	01 96       	adiw	r24, 0x01	; 1
    1b4a:	80 93 b7 28 	sts	0x28B7, r24	; 0x8028b7 <FOR_REP2>
    1b4e:	90 93 b8 28 	sts	0x28B8, r25	; 0x8028b8 <FOR_REP2+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:72
}
    1b52:	08 95       	ret

00001b54 <LED_off()>:
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:55
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1b54:	60 e0       	ldi	r22, 0x00	; 0
    1b56:	8a e1       	ldi	r24, 0x1A	; 26
    1b58:	a2 d9       	rcall	.-3260   	; 0xe9e <digitalWrite.part.2>
LED_off():
    1b5a:	86 e3       	ldi	r24, 0x36	; 54
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    1b5c:	9b e2       	ldi	r25, 0x2B	; 43
    1b5e:	32 cd       	rjmp	.-1436   	; 0x15c4 <Ticker::start()>

00001b60 <LED_on()>:
digitalWrite():
    1b60:	61 e0       	ldi	r22, 0x01	; 1
    1b62:	8a e1       	ldi	r24, 0x1A	; 26
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1b64:	9c d9       	rcall	.-3272   	; 0xe9e <digitalWrite.part.2>
LED_on():
    1b66:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <Blinking_Freq>
    1b6a:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:51
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    1b6c:	80 93 af 28 	sts	0x28AF, r24	; 0x8028af <Blinking_Freq>
    1b70:	08 95       	ret

00001b72 <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    1b72:	8f 92       	push	r8
    1b74:	9f 92       	push	r9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Tick.cpp:52
}
    1b76:	af 92       	push	r10
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:39
{  
  TEMP_UPDATE.start();
}

void RTD_TEMP_CAL()
{
    1b78:	bf 92       	push	r11
    1b7a:	cf 92       	push	r12
    1b7c:	df 92       	push	r13
    1b7e:	ef 92       	push	r14
    1b80:	ff 92       	push	r15
    1b82:	cf 93       	push	r28
    1b84:	df 93       	push	r29
    1b86:	c0 91 24 28 	lds	r28, 0x2824	; 0x802824 <sample>
    1b8a:	d0 91 25 28 	lds	r29, 0x2825	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:40
    sample++;
    1b8e:	21 96       	adiw	r28, 0x01	; 1
    1b90:	c0 93 24 28 	sts	0x2824, r28	; 0x802824 <sample>
    1b94:	d0 93 25 28 	sts	0x2825, r29	; 0x802825 <sample+0x1>
analogRead():
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1b9e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
    1ba2:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1ba6:	80 ff       	sbrs	r24, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1ba8:	fc cf       	rjmp	.-8      	; 0x1ba2 <RTD_TEMP_CAL()+0x30>
    1baa:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1bae:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1bb2:	07 2e       	mov	r0, r23
    1bb4:	00 0c       	add	r0, r0
    1bb6:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:41
    AvgVout = analogRead(A1);
    1bb8:	99 0b       	sbc	r25, r25
    1bba:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    1bbe:	20 91 20 28 	lds	r18, 0x2820	; 0x802820 <TotalVout>
    1bc2:	30 91 21 28 	lds	r19, 0x2821	; 0x802821 <TotalVout+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:42
    TotalVout  += AvgVout ;  // Vout;
    1bc6:	40 91 22 28 	lds	r20, 0x2822	; 0x802822 <TotalVout+0x2>
    1bca:	50 91 23 28 	lds	r21, 0x2823	; 0x802823 <TotalVout+0x3>
    1bce:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1bd2:	6b 01       	movw	r12, r22
    1bd4:	7c 01       	movw	r14, r24
    1bd6:	c0 92 20 28 	sts	0x2820, r12	; 0x802820 <TotalVout>
    1bda:	d0 92 21 28 	sts	0x2821, r13	; 0x802821 <TotalVout+0x1>
    1bde:	e0 92 22 28 	sts	0x2822, r14	; 0x802822 <TotalVout+0x2>
    1be2:	f0 92 23 28 	sts	0x2823, r15	; 0x802823 <TotalVout+0x3>
    1be6:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    1bea:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:43
    if(sample >= avrage_val)
    1bee:	c6 17       	cp	r28, r22
    1bf0:	d7 07       	cpc	r29, r23
    1bf2:	0c f4       	brge	.+2      	; 0x1bf6 <RTD_TEMP_CAL()+0x84>
    1bf4:	76 c0       	rjmp	.+236    	; 0x1ce2 <RTD_TEMP_CAL()+0x170>
    1bf6:	07 2e       	mov	r0, r23
    1bf8:	00 0c       	add	r0, r0
    1bfa:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:45
    {
      TotalVout /= avrage_val;
    1bfc:	99 0b       	sbc	r25, r25
    1bfe:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    1c02:	9b 01       	movw	r18, r22
    1c04:	ac 01       	movw	r20, r24
    1c06:	c7 01       	movw	r24, r14
    1c08:	b6 01       	movw	r22, r12
    1c0a:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1c0e:	60 93 20 28 	sts	0x2820, r22	; 0x802820 <TotalVout>
    1c12:	70 93 21 28 	sts	0x2821, r23	; 0x802821 <TotalVout+0x1>
    1c16:	80 93 22 28 	sts	0x2822, r24	; 0x802822 <TotalVout+0x2>
    1c1a:	90 93 23 28 	sts	0x2823, r25	; 0x802823 <TotalVout+0x3>
    1c1e:	20 e0       	ldi	r18, 0x00	; 0
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	40 ea       	ldi	r20, 0xA0	; 160
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:46
      float Vout = ((TotalVout * Vs) / 1023.0);                                      // Voltage conversion
    1c24:	50 e4       	ldi	r21, 0x40	; 64
    1c26:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1c2a:	20 e0       	ldi	r18, 0x00	; 0
    1c2c:	30 ec       	ldi	r19, 0xC0	; 192
    1c2e:	4f e7       	ldi	r20, 0x7F	; 127
    1c30:	54 e4       	ldi	r21, 0x44	; 68
    1c32:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	30 e0       	ldi	r19, 0x00	; 0
    1c3a:	40 e2       	ldi	r20, 0x20	; 32
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:47
      Vin = Vout / 10;                                                               // Gain
    1c3c:	51 e4       	ldi	r21, 0x41	; 65
    1c3e:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1c42:	28 eb       	ldi	r18, 0xB8	; 184
    1c44:	3f e8       	ldi	r19, 0x8F	; 143
    1c46:	40 e6       	ldi	r20, 0x60	; 96
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:48
      Rt = ((Vb + Vin) * Rc) / (Vs - (Vb + Vin));   //   Va = Vb + Vin 
    1c48:	5f e3       	ldi	r21, 0x3F	; 63
    1c4a:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1c4e:	6b 01       	movw	r12, r22
    1c50:	7c 01       	movw	r14, r24
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	4b ee       	ldi	r20, 0xEB	; 235
    1c58:	53 e4       	ldi	r21, 0x43	; 67
    1c5a:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1c5e:	4b 01       	movw	r8, r22
    1c60:	5c 01       	movw	r10, r24
    1c62:	a7 01       	movw	r20, r14
    1c64:	96 01       	movw	r18, r12
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	70 e0       	ldi	r23, 0x00	; 0
    1c6a:	80 ea       	ldi	r24, 0xA0	; 160
    1c6c:	90 e4       	ldi	r25, 0x40	; 64
    1c6e:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1c72:	9b 01       	movw	r18, r22
    1c74:	ac 01       	movw	r20, r24
    1c76:	c5 01       	movw	r24, r10
    1c78:	b4 01       	movw	r22, r8
    1c7a:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1c7e:	20 e0       	ldi	r18, 0x00	; 0
    1c80:	30 e0       	ldi	r19, 0x00	; 0
    1c82:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:49
      TEMP_DEG_RAW = ((Rt / Rb) - 1) / (Alpha);         // alpha is temp coefficient for paltinum
    1c84:	52 e4       	ldi	r21, 0x42	; 66
    1c86:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1c8a:	20 e0       	ldi	r18, 0x00	; 0
    1c8c:	30 e0       	ldi	r19, 0x00	; 0
    1c8e:	40 e8       	ldi	r20, 0x80	; 128
    1c90:	5f e3       	ldi	r21, 0x3F	; 63
    1c92:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1c96:	28 e4       	ldi	r18, 0x48	; 72
    1c98:	30 e5       	ldi	r19, 0x50	; 80
    1c9a:	4c e7       	ldi	r20, 0x7C	; 124
    1c9c:	5b e3       	ldi	r21, 0x3B	; 59
    1c9e:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1ca2:	60 93 fb 28 	sts	0x28FB, r22	; 0x8028fb <TEMP_DEG_RAW>
    1ca6:	70 93 fc 28 	sts	0x28FC, r23	; 0x8028fc <TEMP_DEG_RAW+0x1>
    1caa:	80 93 fd 28 	sts	0x28FD, r24	; 0x8028fd <TEMP_DEG_RAW+0x2>
    1cae:	90 93 fe 28 	sts	0x28FE, r25	; 0x8028fe <TEMP_DEG_RAW+0x3>
    1cb2:	26 e6       	ldi	r18, 0x66	; 102
    1cb4:	36 e6       	ldi	r19, 0x66	; 102
    1cb6:	46 ee       	ldi	r20, 0xE6	; 230
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:52
//      Serial2.println("Product Temp."); //;Serial2.println("\t");
//      Serial2.print(TEMP_DEG_RAW); Serial2.print("\t"); Serial2.println(TEMP_DEG_RAW_1);
      TEMP_FAH_RAW = (( TEMP_DEG_RAW * 1.8 ) + 32);
    1cb8:	5f e3       	ldi	r21, 0x3F	; 63
    1cba:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	40 e0       	ldi	r20, 0x00	; 0
    1cc4:	52 e4       	ldi	r21, 0x42	; 66
    1cc6:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1cca:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <TEMP_FAH_RAW>
    1cce:	70 93 d9 28 	sts	0x28D9, r23	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    1cd2:	80 93 da 28 	sts	0x28DA, r24	; 0x8028da <TEMP_FAH_RAW+0x2>
    1cd6:	90 93 db 28 	sts	0x28DB, r25	; 0x8028db <TEMP_FAH_RAW+0x3>
    1cda:	10 92 24 28 	sts	0x2824, r1	; 0x802824 <sample>
    1cde:	10 92 25 28 	sts	0x2825, r1	; 0x802825 <sample+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:53
      sample = 0;   AvgVout = 0;   
    1ce2:	82 e3       	ldi	r24, 0x32	; 50
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:55
    }
      avrage_val = 50;
    1cea:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    1cee:	df 91       	pop	r29
    1cf0:	cf 91       	pop	r28
    1cf2:	ff 90       	pop	r15
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Temp.cpp:56
}
    1cf4:	ef 90       	pop	r14
    1cf6:	df 90       	pop	r13
    1cf8:	cf 90       	pop	r12
    1cfa:	bf 90       	pop	r11
    1cfc:	af 90       	pop	r10
    1cfe:	9f 90       	pop	r9
    1d00:	8f 90       	pop	r8
    1d02:	08 95       	ret

00001d04 <RTD_TEMP_CAL_1()>:
RTD_TEMP_CAL_1():
    1d04:	cf 93       	push	r28
    1d06:	df 93       	push	r29
    1d08:	c0 91 1e 28 	lds	r28, 0x281E	; 0x80281e <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:27
{  
  TEMP_UPDATE_1.start();
}

void RTD_TEMP_CAL_1()
{
    1d0c:	d0 91 1f 28 	lds	r29, 0x281F	; 0x80281f <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:28
    sample_1++;
    1d10:	21 96       	adiw	r28, 0x01	; 1
    1d12:	c0 93 1e 28 	sts	0x281E, r28	; 0x80281e <sample_1>
    1d16:	d0 93 1f 28 	sts	0x281F, r29	; 0x80281f <sample_1+0x1>
analogRead():
    1d1a:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    1d1e:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    1d20:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    1d24:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
    1d28:	80 ff       	sbrs	r24, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    1d2a:	fc cf       	rjmp	.-8      	; 0x1d24 <RTD_TEMP_CAL_1()+0x20>
    1d2c:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    1d30:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL_1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    1d34:	07 2e       	mov	r0, r23
    1d36:	00 0c       	add	r0, r0
    1d38:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:29
    AvgVout_1 = analogRead(A0);
    1d3a:	99 0b       	sbc	r25, r25
    1d3c:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    1d40:	20 91 1a 28 	lds	r18, 0x281A	; 0x80281a <TotalVout_1>
    1d44:	30 91 1b 28 	lds	r19, 0x281B	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:30
    TotalVout_1  += AvgVout_1 ; 
    1d48:	40 91 1c 28 	lds	r20, 0x281C	; 0x80281c <TotalVout_1+0x2>
    1d4c:	50 91 1d 28 	lds	r21, 0x281D	; 0x80281d <TotalVout_1+0x3>
    1d50:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1d54:	69 97       	sbiw	r28, 0x19	; 25
    1d56:	5c f4       	brge	.+22     	; 0x1d6e <RTD_TEMP_CAL_1()+0x6a>
    1d58:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:31
    if(sample_1 >= avrage_val_1)
    1d5c:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:30

void RTD_TEMP_CAL_1()
{
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    1d60:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1d64:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1d68:	df 91       	pop	r29
    1d6a:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:40
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    }
}
    1d6c:	08 95       	ret
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:33
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    if(sample_1 >= avrage_val_1)
    {
      TotalVout_1 /= avrage_val_1;
    1d72:	48 ec       	ldi	r20, 0xC8	; 200
    1d74:	51 e4       	ldi	r21, 0x41	; 65
    1d76:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    1d7a:	60 93 1a 28 	sts	0x281A, r22	; 0x80281a <TotalVout_1>
    1d7e:	70 93 1b 28 	sts	0x281B, r23	; 0x80281b <TotalVout_1+0x1>
    1d82:	80 93 1c 28 	sts	0x281C, r24	; 0x80281c <TotalVout_1+0x2>
    1d86:	90 93 1d 28 	sts	0x281D, r25	; 0x80281d <TotalVout_1+0x3>
    1d8a:	10 92 1e 28 	sts	0x281E, r1	; 0x80281e <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Safety_probe.cpp:38
      float Vout1 = ((TotalVout_1 * Vs1) / 1023.0); // Voltage conversion
      Vin1 = Vout1 / 10; // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1)); //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha); // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    1d8e:	10 92 1f 28 	sts	0x281F, r1	; 0x80281f <sample_1+0x1>
    1d92:	ea cf       	rjmp	.-44     	; 0x1d68 <RTD_TEMP_CAL_1()+0x64>

00001d94 <PID_RUN()>:
PID_RUN():
    1d94:	3f 92       	push	r3
    1d96:	4f 92       	push	r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:31
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    1d98:	5f 92       	push	r5
    1d9a:	6f 92       	push	r6
    1d9c:	7f 92       	push	r7
    1d9e:	8f 92       	push	r8
    1da0:	9f 92       	push	r9
    1da2:	af 92       	push	r10
    1da4:	bf 92       	push	r11
    1da6:	cf 92       	push	r12
    1da8:	df 92       	push	r13
    1daa:	ef 92       	push	r14
    1dac:	ff 92       	push	r15
    1dae:	0f 93       	push	r16
    1db0:	1f 93       	push	r17
    1db2:	cf 93       	push	r28
    1db4:	df 93       	push	r29
    1db6:	cd b7       	in	r28, 0x3d	; 61
    1db8:	de b7       	in	r29, 0x3e	; 62
    1dba:	2e 97       	sbiw	r28, 0x0e	; 14
    1dbc:	cd bf       	out	0x3d, r28	; 61
    1dbe:	de bf       	out	0x3e, r29	; 62
Compute():
    1dc0:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1dc4:	88 23       	and	r24, r24
    1dc6:	09 f4       	brne	.+2      	; 0x1dca <PID_RUN()+0x36>
    1dc8:	29 c1       	rjmp	.+594    	; 0x201c <PID_RUN()+0x288>
    1dca:	cd d9       	rcall	.-3174   	; 0x1166 <millis>
    1dcc:	6d 83       	std	Y+5, r22	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1dce:	7e 83       	std	Y+6, r23	; 0x06
    1dd0:	8f 83       	std	Y+7, r24	; 0x07
    1dd2:	98 87       	std	Y+8, r25	; 0x08
    1dd4:	80 91 95 2a 	lds	r24, 0x2A95	; 0x802a95 <myPID+0x22>
    1dd8:	90 91 96 2a 	lds	r25, 0x2A96	; 0x802a96 <myPID+0x23>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1ddc:	a0 91 97 2a 	lds	r26, 0x2A97	; 0x802a97 <myPID+0x24>
    1de0:	b0 91 98 2a 	lds	r27, 0x2A98	; 0x802a98 <myPID+0x25>
    1de4:	4d 81       	ldd	r20, Y+5	; 0x05
    1de6:	5e 81       	ldd	r21, Y+6	; 0x06
    1de8:	6f 81       	ldd	r22, Y+7	; 0x07
    1dea:	78 85       	ldd	r23, Y+8	; 0x08
    1dec:	48 1b       	sub	r20, r24
    1dee:	59 0b       	sbc	r21, r25
    1df0:	6a 0b       	sbc	r22, r26
    1df2:	7b 0b       	sbc	r23, r27
    1df4:	80 91 a1 2a 	lds	r24, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    1df8:	90 91 a2 2a 	lds	r25, 0x2AA2	; 0x802aa2 <myPID+0x2f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1dfc:	a0 91 a3 2a 	lds	r26, 0x2AA3	; 0x802aa3 <myPID+0x30>
    1e00:	b0 91 a4 2a 	lds	r27, 0x2AA4	; 0x802aa4 <myPID+0x31>
    1e04:	48 17       	cp	r20, r24
    1e06:	59 07       	cpc	r21, r25
    1e08:	6a 07       	cpc	r22, r26
    1e0a:	7b 07       	cpc	r23, r27
    1e0c:	08 f4       	brcc	.+2      	; 0x1e10 <PID_RUN()+0x7c>
    1e0e:	06 c1       	rjmp	.+524    	; 0x201c <PID_RUN()+0x288>
    1e10:	e0 91 8f 2a 	lds	r30, 0x2A8F	; 0x802a8f <myPID+0x1c>
    1e14:	f0 91 90 2a 	lds	r31, 0x2A90	; 0x802a90 <myPID+0x1d>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1e18:	80 81       	ld	r24, Z
    1e1a:	91 81       	ldd	r25, Z+1	; 0x01
    1e1c:	a2 81       	ldd	r26, Z+2	; 0x02
    1e1e:	b3 81       	ldd	r27, Z+3	; 0x03
    1e20:	89 83       	std	Y+1, r24	; 0x01
    1e22:	9a 83       	std	Y+2, r25	; 0x02
    1e24:	ab 83       	std	Y+3, r26	; 0x03
    1e26:	bc 83       	std	Y+4, r27	; 0x04
    1e28:	e0 91 93 2a 	lds	r30, 0x2A93	; 0x802a93 <myPID+0x20>
    1e2c:	f0 91 94 2a 	lds	r31, 0x2A94	; 0x802a94 <myPID+0x21>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1e30:	9c 01       	movw	r18, r24
    1e32:	ad 01       	movw	r20, r26
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1e40:	4b 01       	movw	r8, r22
    1e42:	5c 01       	movw	r10, r24
    1e44:	20 91 9d 2a 	lds	r18, 0x2A9D	; 0x802a9d <myPID+0x2a>
    1e48:	30 91 9e 2a 	lds	r19, 0x2A9E	; 0x802a9e <myPID+0x2b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1e4c:	40 91 9f 2a 	lds	r20, 0x2A9F	; 0x802a9f <myPID+0x2c>
    1e50:	50 91 a0 2a 	lds	r21, 0x2AA0	; 0x802aa0 <myPID+0x2d>
    1e54:	69 81       	ldd	r22, Y+1	; 0x01
    1e56:	7a 81       	ldd	r23, Y+2	; 0x02
    1e58:	8b 81       	ldd	r24, Y+3	; 0x03
    1e5a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e5c:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1e60:	6b 01       	movw	r12, r22
    1e62:	7c 01       	movw	r14, r24
    1e64:	20 91 83 2a 	lds	r18, 0x2A83	; 0x802a83 <myPID+0x10>
    1e68:	30 91 84 2a 	lds	r19, 0x2A84	; 0x802a84 <myPID+0x11>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1e6c:	40 91 85 2a 	lds	r20, 0x2A85	; 0x802a85 <myPID+0x12>
    1e70:	50 91 86 2a 	lds	r21, 0x2A86	; 0x802a86 <myPID+0x13>
    1e74:	c5 01       	movw	r24, r10
    1e76:	b4 01       	movw	r22, r8
    1e78:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1e7c:	20 91 99 2a 	lds	r18, 0x2A99	; 0x802a99 <myPID+0x26>
    1e80:	30 91 9a 2a 	lds	r19, 0x2A9A	; 0x802a9a <myPID+0x27>
    1e84:	40 91 9b 2a 	lds	r20, 0x2A9B	; 0x802a9b <myPID+0x28>
    1e88:	50 91 9c 2a 	lds	r21, 0x2A9C	; 0x802a9c <myPID+0x29>
    1e8c:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1e90:	2b 01       	movw	r4, r22
    1e92:	3c 01       	movw	r6, r24
    1e94:	40 92 99 2a 	sts	0x2A99, r4	; 0x802a99 <myPID+0x26>
    1e98:	50 92 9a 2a 	sts	0x2A9A, r5	; 0x802a9a <myPID+0x27>
    1e9c:	60 92 9b 2a 	sts	0x2A9B, r6	; 0x802a9b <myPID+0x28>
    1ea0:	70 92 9c 2a 	sts	0x2A9C, r7	; 0x802a9c <myPID+0x29>
    1ea4:	30 90 ae 2a 	lds	r3, 0x2AAE	; 0x802aae <myPID+0x3b>
    1ea8:	31 10       	cpse	r3, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1eaa:	1a c0       	rjmp	.+52     	; 0x1ee0 <PID_RUN()+0x14c>
    1eac:	20 91 7f 2a 	lds	r18, 0x2A7F	; 0x802a7f <myPID+0xc>
    1eb0:	30 91 80 2a 	lds	r19, 0x2A80	; 0x802a80 <myPID+0xd>
    1eb4:	40 91 81 2a 	lds	r20, 0x2A81	; 0x802a81 <myPID+0xe>
    1eb8:	50 91 82 2a 	lds	r21, 0x2A82	; 0x802a82 <myPID+0xf>
    1ebc:	c7 01       	movw	r24, r14
    1ebe:	b6 01       	movw	r22, r12
    1ec0:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1ec4:	9b 01       	movw	r18, r22
    1ec6:	ac 01       	movw	r20, r24
    1ec8:	c3 01       	movw	r24, r6
    1eca:	b2 01       	movw	r22, r4
    1ecc:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1ed0:	60 93 99 2a 	sts	0x2A99, r22	; 0x802a99 <myPID+0x26>
    1ed4:	70 93 9a 2a 	sts	0x2A9A, r23	; 0x802a9a <myPID+0x27>
    1ed8:	80 93 9b 2a 	sts	0x2A9B, r24	; 0x802a9b <myPID+0x28>
    1edc:	90 93 9c 2a 	sts	0x2A9C, r25	; 0x802a9c <myPID+0x29>
    1ee0:	40 90 99 2a 	lds	r4, 0x2A99	; 0x802a99 <myPID+0x26>
    1ee4:	50 90 9a 2a 	lds	r5, 0x2A9A	; 0x802a9a <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1ee8:	60 90 9b 2a 	lds	r6, 0x2A9B	; 0x802a9b <myPID+0x28>
    1eec:	70 90 9c 2a 	lds	r7, 0x2A9C	; 0x802a9c <myPID+0x29>
    1ef0:	10 91 a9 2a 	lds	r17, 0x2AA9	; 0x802aa9 <myPID+0x36>
    1ef4:	90 91 aa 2a 	lds	r25, 0x2AAA	; 0x802aaa <myPID+0x37>
    1ef8:	9e 87       	std	Y+14, r25	; 0x0e
    1efa:	a0 91 ab 2a 	lds	r26, 0x2AAB	; 0x802aab <myPID+0x38>
    1efe:	ad 87       	std	Y+13, r26	; 0x0d
    1f00:	00 91 ac 2a 	lds	r16, 0x2AAC	; 0x802aac <myPID+0x39>
    1f04:	21 2f       	mov	r18, r17
    1f06:	39 2f       	mov	r19, r25
    1f08:	4a 2f       	mov	r20, r26
    1f0a:	50 2f       	mov	r21, r16
    1f0c:	c3 01       	movw	r24, r6
    1f0e:	b2 01       	movw	r22, r4
    1f10:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    1f14:	18 16       	cp	r1, r24
    1f16:	0c f0       	brlt	.+2      	; 0x1f1a <PID_RUN()+0x186>
    1f18:	96 c0       	rjmp	.+300    	; 0x2046 <PID_RUN()+0x2b2>
    1f1a:	81 2f       	mov	r24, r17
    1f1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f1e:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f20:	b0 2f       	mov	r27, r16
    1f22:	80 93 99 2a 	sts	0x2A99, r24	; 0x802a99 <myPID+0x26>
    1f26:	90 93 9a 2a 	sts	0x2A9A, r25	; 0x802a9a <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1f2a:	a0 93 9b 2a 	sts	0x2A9B, r26	; 0x802a9b <myPID+0x28>
    1f2e:	b0 93 9c 2a 	sts	0x2A9C, r27	; 0x802a9c <myPID+0x29>
    1f32:	33 20       	and	r3, r3
    1f34:	09 f4       	brne	.+2      	; 0x1f38 <PID_RUN()+0x1a4>
    1f36:	a0 c0       	rjmp	.+320    	; 0x2078 <PID_RUN()+0x2e4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1f38:	20 91 7f 2a 	lds	r18, 0x2A7F	; 0x802a7f <myPID+0xc>
    1f3c:	30 91 80 2a 	lds	r19, 0x2A80	; 0x802a80 <myPID+0xd>
    1f40:	40 91 81 2a 	lds	r20, 0x2A81	; 0x802a81 <myPID+0xe>
    1f44:	50 91 82 2a 	lds	r21, 0x2A82	; 0x802a82 <myPID+0xf>
    1f48:	c5 01       	movw	r24, r10
    1f4a:	b4 01       	movw	r22, r8
    1f4c:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1f50:	4b 01       	movw	r8, r22
    1f52:	5c 01       	movw	r10, r24
    1f54:	20 91 87 2a 	lds	r18, 0x2A87	; 0x802a87 <myPID+0x14>
    1f58:	30 91 88 2a 	lds	r19, 0x2A88	; 0x802a88 <myPID+0x15>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1f5c:	40 91 89 2a 	lds	r20, 0x2A89	; 0x802a89 <myPID+0x16>
    1f60:	50 91 8a 2a 	lds	r21, 0x2A8A	; 0x802a8a <myPID+0x17>
    1f64:	c7 01       	movw	r24, r14
    1f66:	b6 01       	movw	r22, r12
    1f68:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    1f6c:	9b 01       	movw	r18, r22
    1f6e:	ac 01       	movw	r20, r24
    1f70:	60 91 99 2a 	lds	r22, 0x2A99	; 0x802a99 <myPID+0x26>
    1f74:	70 91 9a 2a 	lds	r23, 0x2A9A	; 0x802a9a <myPID+0x27>
    1f78:	80 91 9b 2a 	lds	r24, 0x2A9B	; 0x802a9b <myPID+0x28>
    1f7c:	90 91 9c 2a 	lds	r25, 0x2A9C	; 0x802a9c <myPID+0x29>
    1f80:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    1f84:	a5 01       	movw	r20, r10
    1f86:	94 01       	movw	r18, r8
    1f88:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    1f8c:	6b 01       	movw	r12, r22
    1f8e:	7c 01       	movw	r14, r24
    1f90:	9b 01       	movw	r18, r22
    1f92:	ac 01       	movw	r20, r24
    1f94:	61 2f       	mov	r22, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1f96:	7e 85       	ldd	r23, Y+14	; 0x0e
    1f98:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f9a:	90 2f       	mov	r25, r16
    1f9c:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    1fa0:	87 fd       	sbrc	r24, 7
    1fa2:	18 c0       	rjmp	.+48     	; 0x1fd4 <PID_RUN()+0x240>
    1fa4:	10 91 a5 2a 	lds	r17, 0x2AA5	; 0x802aa5 <myPID+0x32>
    1fa8:	90 91 a6 2a 	lds	r25, 0x2AA6	; 0x802aa6 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1fac:	9e 87       	std	Y+14, r25	; 0x0e
    1fae:	a0 91 a7 2a 	lds	r26, 0x2AA7	; 0x802aa7 <myPID+0x34>
    1fb2:	ad 87       	std	Y+13, r26	; 0x0d
    1fb4:	00 91 a8 2a 	lds	r16, 0x2AA8	; 0x802aa8 <myPID+0x35>
    1fb8:	21 2f       	mov	r18, r17
    1fba:	39 2f       	mov	r19, r25
    1fbc:	4a 2f       	mov	r20, r26
    1fbe:	50 2f       	mov	r21, r16
    1fc0:	b6 01       	movw	r22, r12
    1fc2:	c7 01       	movw	r24, r14
    1fc4:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    1fc8:	87 fd       	sbrc	r24, 7
    1fca:	04 c0       	rjmp	.+8      	; 0x1fd4 <PID_RUN()+0x240>
PID_RUN():
    1fcc:	1c 2d       	mov	r17, r12
    1fce:	de 86       	std	Y+14, r13	; 0x0e
    1fd0:	ed 86       	std	Y+13, r14	; 0x0d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1fd2:	0f 2d       	mov	r16, r15
Compute():
    1fd4:	e0 91 91 2a 	lds	r30, 0x2A91	; 0x802a91 <myPID+0x1e>
    1fd8:	f0 91 92 2a 	lds	r31, 0x2A92	; 0x802a92 <myPID+0x1f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1fdc:	81 2f       	mov	r24, r17
    1fde:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fe0:	ad 85       	ldd	r26, Y+13	; 0x0d
    1fe2:	b0 2f       	mov	r27, r16
    1fe4:	80 83       	st	Z, r24
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	a2 83       	std	Z+2, r26	; 0x02
    1fea:	b3 83       	std	Z+3, r27	; 0x03
    1fec:	89 81       	ldd	r24, Y+1	; 0x01
    1fee:	9a 81       	ldd	r25, Y+2	; 0x02
    1ff0:	ab 81       	ldd	r26, Y+3	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1ff2:	bc 81       	ldd	r27, Y+4	; 0x04
    1ff4:	80 93 9d 2a 	sts	0x2A9D, r24	; 0x802a9d <myPID+0x2a>
    1ff8:	90 93 9e 2a 	sts	0x2A9E, r25	; 0x802a9e <myPID+0x2b>
    1ffc:	a0 93 9f 2a 	sts	0x2A9F, r26	; 0x802a9f <myPID+0x2c>
    2000:	b0 93 a0 2a 	sts	0x2AA0, r27	; 0x802aa0 <myPID+0x2d>
    2004:	8d 81       	ldd	r24, Y+5	; 0x05
    2006:	9e 81       	ldd	r25, Y+6	; 0x06
    2008:	af 81       	ldd	r26, Y+7	; 0x07
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    200a:	b8 85       	ldd	r27, Y+8	; 0x08
    200c:	80 93 95 2a 	sts	0x2A95, r24	; 0x802a95 <myPID+0x22>
    2010:	90 93 96 2a 	sts	0x2A96, r25	; 0x802a96 <myPID+0x23>
    2014:	a0 93 97 2a 	sts	0x2A97, r26	; 0x802a97 <myPID+0x24>
    2018:	b0 93 98 2a 	sts	0x2A98, r27	; 0x802a98 <myPID+0x25>
PID_RUN():
    201c:	2e 96       	adiw	r28, 0x0e	; 14
    201e:	cd bf       	out	0x3d, r28	; 61
    2020:	de bf       	out	0x3e, r29	; 62
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Pid.cpp:33
   myPID.Compute();  
}
    2022:	df 91       	pop	r29
    2024:	cf 91       	pop	r28
    2026:	1f 91       	pop	r17
    2028:	0f 91       	pop	r16
    202a:	ff 90       	pop	r15
    202c:	ef 90       	pop	r14
    202e:	df 90       	pop	r13
    2030:	cf 90       	pop	r12
    2032:	bf 90       	pop	r11
    2034:	af 90       	pop	r10
    2036:	9f 90       	pop	r9
    2038:	8f 90       	pop	r8
    203a:	7f 90       	pop	r7
    203c:	6f 90       	pop	r6
    203e:	5f 90       	pop	r5
    2040:	4f 90       	pop	r4
    2042:	3f 90       	pop	r3
    2044:	08 95       	ret
Compute():
    2046:	80 91 a5 2a 	lds	r24, 0x2AA5	; 0x802aa5 <myPID+0x32>
    204a:	90 91 a6 2a 	lds	r25, 0x2AA6	; 0x802aa6 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    204e:	a0 91 a7 2a 	lds	r26, 0x2AA7	; 0x802aa7 <myPID+0x34>
    2052:	b0 91 a8 2a 	lds	r27, 0x2AA8	; 0x802aa8 <myPID+0x35>
    2056:	89 87       	std	Y+9, r24	; 0x09
    2058:	9a 87       	std	Y+10, r25	; 0x0a
    205a:	ab 87       	std	Y+11, r26	; 0x0b
    205c:	bc 87       	std	Y+12, r27	; 0x0c
    205e:	9c 01       	movw	r18, r24
    2060:	ad 01       	movw	r20, r26
    2062:	c3 01       	movw	r24, r6
    2064:	b2 01       	movw	r22, r4
    2066:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    206a:	87 ff       	sbrs	r24, 7
    206c:	62 cf       	rjmp	.-316    	; 0x1f32 <PID_RUN()+0x19e>
    206e:	89 85       	ldd	r24, Y+9	; 0x09
    2070:	9a 85       	ldd	r25, Y+10	; 0x0a
    2072:	ab 85       	ldd	r26, Y+11	; 0x0b
    2074:	bc 85       	ldd	r27, Y+12	; 0x0c
    2076:	55 cf       	rjmp	.-342    	; 0x1f22 <PID_RUN()+0x18e>
PID_RUN():
    2078:	81 2c       	mov	r8, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    207a:	91 2c       	mov	r9, r1
    207c:	54 01       	movw	r10, r8
    207e:	6a cf       	rjmp	.-300    	; 0x1f54 <PID_RUN()+0x1c0>

00002080 <EERef::operator*() const>:
operator*():
    2080:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    2082:	80 81       	ld	r24, Z
    2084:	91 81       	ldd	r25, Z+1	; 0x01
    2086:	fc 01       	movw	r30, r24
    2088:	ff 27       	eor	r31, r31
    208a:	90 fd       	sbrc	r25, 0
    208c:	06 c0       	rjmp	.+12     	; 0x209a <EERef::operator*() const+0x1a>
    208e:	80 e0       	ldi	r24, 0x00	; 0
    2090:	94 e1       	ldi	r25, 0x14	; 20
    2092:	e8 2b       	or	r30, r24
    2094:	f9 2b       	or	r31, r25
    2096:	80 81       	ld	r24, Z
    2098:	08 95       	ret
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	93 e1       	ldi	r25, 0x13	; 19
    209e:	f9 cf       	rjmp	.-14     	; 0x2092 <EERef::operator*() const+0x12>

000020a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20a0:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    20a2:	ff 92       	push	r15
    20a4:	0f 93       	push	r16
    20a6:	1f 93       	push	r17
    20a8:	cf 93       	push	r28
    20aa:	df 93       	push	r29
    20ac:	00 d0       	rcall	.+0      	; 0x20ae <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    20ae:	cd b7       	in	r28, 0x3d	; 61
    20b0:	de b7       	in	r29, 0x3e	; 62
    20b2:	8c 01       	movw	r16, r24
    20b4:	7b 01       	movw	r14, r22
    20b6:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20b8:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20ba:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20bc:	01 96       	adiw	r24, 0x01	; 1
    20be:	e0 df       	rcall	.-64     	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20c0:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20c2:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
    20c4:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    20c6:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20c8:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20ca:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    20cc:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20ce:	01 96       	adiw	r24, 0x01	; 1
    20d0:	d7 df       	rcall	.-82     	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    20d2:	f7 01       	movw	r30, r14
    20d4:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20d6:	c7 01       	movw	r24, r14
    20d8:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    20da:	0f 90       	pop	r0
    20dc:	df 91       	pop	r29
    20de:	cf 91       	pop	r28
    20e0:	1f 91       	pop	r17
    20e2:	0f 91       	pop	r16
    20e4:	ff 90       	pop	r15
    20e6:	ef 90       	pop	r14
    20e8:	08 95       	ret

000020ea <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20ea:	af 92       	push	r10
    20ec:	bf 92       	push	r11
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    20ee:	cf 92       	push	r12
    20f0:	df 92       	push	r13
    20f2:	ef 92       	push	r14
    20f4:	ff 92       	push	r15
    20f6:	0f 93       	push	r16
    20f8:	1f 93       	push	r17
    20fa:	cf 93       	push	r28
    20fc:	df 93       	push	r29
    20fe:	00 d0       	rcall	.+0      	; 0x2100 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    2100:	cd b7       	in	r28, 0x3d	; 61
    2102:	de b7       	in	r29, 0x3e	; 62
    2104:	8b 01       	movw	r16, r22
    2106:	6b 01       	movw	r12, r22
    2108:	24 e0       	ldi	r18, 0x04	; 4
    210a:	c2 0e       	add	r12, r18
    210c:	d1 1c       	adc	r13, r1
    210e:	7b 01       	movw	r14, r22
    2110:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2112:	a6 1a       	sub	r10, r22
    2114:	b7 0a       	sbc	r11, r23
    2116:	c5 01       	movw	r24, r10
    2118:	8e 0d       	add	r24, r14
    211a:	9f 1d       	adc	r25, r15
    211c:	89 83       	std	Y+1, r24	; 0x01
    211e:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    2120:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	ad df       	rcall	.-166    	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2126:	f7 01       	movw	r30, r14
    2128:	81 93       	st	Z+, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    212a:	7f 01       	movw	r14, r30
    212c:	ec 15       	cp	r30, r12
    212e:	fd 05       	cpc	r31, r13
    2130:	91 f7       	brne	.-28     	; 0x2116 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    2132:	c8 01       	movw	r24, r16
    2134:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2136:	0f 90       	pop	r0
    2138:	df 91       	pop	r29
    213a:	cf 91       	pop	r28
    213c:	1f 91       	pop	r17
    213e:	0f 91       	pop	r16
    2140:	ff 90       	pop	r15
    2142:	ef 90       	pop	r14
    2144:	df 90       	pop	r13
    2146:	cf 90       	pop	r12
    2148:	bf 90       	pop	r11
    214a:	af 90       	pop	r10
    214c:	08 95       	ret

0000214e <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    214e:	cf 93       	push	r28
    2150:	df 93       	push	r29
    2152:	00 d0       	rcall	.+0      	; 0x2154 <EEPROMClass::read(int) [clone .isra.0]+0x6>
    2154:	cd b7       	in	r28, 0x3d	; 61
    2156:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    2158:	89 83       	std	Y+1, r24	; 0x01
    215a:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    215c:	ce 01       	movw	r24, r28
    215e:	01 96       	adiw	r24, 0x01	; 1
    2160:	8f df       	rcall	.-226    	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
    2162:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    2164:	0f 90       	pop	r0
    2166:	df 91       	pop	r29
    2168:	cf 91       	pop	r28
    216a:	08 95       	ret

0000216c <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
    216c:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    216e:	ff 27       	eor	r31, r31
    2170:	90 fd       	sbrc	r25, 0
    2172:	12 c0       	rjmp	.+36     	; 0x2198 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    2174:	80 e0       	ldi	r24, 0x00	; 0
    2176:	94 e1       	ldi	r25, 0x14	; 20
    2178:	e8 2b       	or	r30, r24
    217a:	f9 2b       	or	r31, r25
    217c:	60 83       	st	Z, r22
    217e:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    2180:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  cli();
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    2182:	9d e9       	ldi	r25, 0x9D	; 157
    2184:	23 e0       	ldi	r18, 0x03	; 3
    2186:	94 bf       	out	0x34, r25	; 52
    2188:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:41
  SREG = oldSREG;
    218c:	8f bf       	out	0x3f, r24	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    218e:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    2192:	81 fd       	sbrc	r24, 1
    2194:	fc cf       	rjmp	.-8      	; 0x218e <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    2196:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2198:	80 e0       	ldi	r24, 0x00	; 0
    219a:	93 e1       	ldi	r25, 0x13	; 19
    219c:	ed cf       	rjmp	.-38     	; 0x2178 <nvm_write_byte(unsigned int, unsigned char)+0xc>

0000219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>:
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    219e:	e6 cf       	rjmp	.-52     	; 0x216c <nvm_write_byte(unsigned int, unsigned char)>

000021a0 <EERef::update(unsigned char)>:
update():
    21a0:	1f 93       	push	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21a2:	cf 93       	push	r28
    21a4:	df 93       	push	r29
    21a6:	ec 01       	movw	r28, r24
    21a8:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
    21aa:	6a df       	rcall	.-300    	; 0x2080 <EERef::operator*() const>
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    21ac:	81 17       	cp	r24, r17
    21ae:	21 f0       	breq	.+8      	; 0x21b8 <EERef::update(unsigned char)+0x18>
operator=():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21b0:	61 2f       	mov	r22, r17
    21b2:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    21b4:	99 81       	ldd	r25, Y+1	; 0x01
    21b6:	da df       	rcall	.-76     	; 0x216c <nvm_write_byte(unsigned int, unsigned char)>
update():
    21b8:	ce 01       	movw	r24, r28
    21ba:	df 91       	pop	r29
    21bc:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    21be:	1f 91       	pop	r17
    21c0:	08 95       	ret

000021c2 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    21c2:	ef 92       	push	r14
    21c4:	ff 92       	push	r15
    21c6:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    21c8:	1f 93       	push	r17
    21ca:	cf 93       	push	r28
    21cc:	df 93       	push	r29
    21ce:	00 d0       	rcall	.+0      	; 0x21d0 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0xe>
    21d0:	cd b7       	in	r28, 0x3d	; 61
    21d2:	de b7       	in	r29, 0x3e	; 62
    21d4:	83 e0       	ldi	r24, 0x03	; 3
    21d6:	e8 2e       	mov	r14, r24
    21d8:	89 e2       	ldi	r24, 0x29	; 41
    21da:	f8 2e       	mov	r15, r24
    21dc:	06 e4       	ldi	r16, 0x46	; 70
    21de:	10 e0       	ldi	r17, 0x00	; 0
    21e0:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    21e2:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21e4:	f7 01       	movw	r30, r14
    21e6:	61 91       	ld	r22, Z+
    21e8:	7f 01       	movw	r14, r30
    21ea:	ce 01       	movw	r24, r28
    21ec:	01 96       	adiw	r24, 0x01	; 1
    21ee:	d8 df       	rcall	.-80     	; 0x21a0 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    21f0:	0f 5f       	subi	r16, 0xFF	; 255
    21f2:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    21f4:	0a 34       	cpi	r16, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    21f6:	11 05       	cpc	r17, r1
    21f8:	99 f7       	brne	.-26     	; 0x21e0 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21fa:	83 e0       	ldi	r24, 0x03	; 3
    21fc:	99 e2       	ldi	r25, 0x29	; 41
    21fe:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2200:	0f 90       	pop	r0
    2202:	df 91       	pop	r29
    2204:	cf 91       	pop	r28
    2206:	1f 91       	pop	r17
    2208:	0f 91       	pop	r16
    220a:	ff 90       	pop	r15
    220c:	ef 90       	pop	r14
    220e:	08 95       	ret

00002210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    2210:	af 92       	push	r10
    2212:	bf 92       	push	r11
    2214:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    2216:	df 92       	push	r13
    2218:	ef 92       	push	r14
    221a:	ff 92       	push	r15
    221c:	0f 93       	push	r16
    221e:	1f 93       	push	r17
    2220:	cf 93       	push	r28
    2222:	df 93       	push	r29
    2224:	00 d0       	rcall	.+0      	; 0x2226 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x16>
    2226:	cd b7       	in	r28, 0x3d	; 61
    2228:	de b7       	in	r29, 0x3e	; 62
    222a:	8b 01       	movw	r16, r22
    222c:	6b 01       	movw	r12, r22
    222e:	24 e0       	ldi	r18, 0x04	; 4
    2230:	c2 0e       	add	r12, r18
    2232:	d1 1c       	adc	r13, r1
    2234:	7b 01       	movw	r14, r22
    2236:	5c 01       	movw	r10, r24
    2238:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    223a:	b7 0a       	sbc	r11, r23
    223c:	c5 01       	movw	r24, r10
    223e:	8e 0d       	add	r24, r14
    2240:	9f 1d       	adc	r25, r15
    2242:	89 83       	std	Y+1, r24	; 0x01
    2244:	9a 83       	std	Y+2, r25	; 0x02
    2246:	f7 01       	movw	r30, r14
    2248:	61 91       	ld	r22, Z+
    224a:	7f 01       	movw	r14, r30
    224c:	ce 01       	movw	r24, r28
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	a7 df       	rcall	.-178    	; 0x21a0 <EERef::update(unsigned char)>
    2252:	ec 14       	cp	r14, r12
    2254:	fd 04       	cpc	r15, r13
    2256:	91 f7       	brne	.-28     	; 0x223c <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]+0x2c>
    2258:	c8 01       	movw	r24, r16
    225a:	0f 90       	pop	r0
    225c:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    225e:	df 91       	pop	r29
    2260:	cf 91       	pop	r28
    2262:	1f 91       	pop	r17
    2264:	0f 91       	pop	r16
    2266:	ff 90       	pop	r15
    2268:	ef 90       	pop	r14
    226a:	df 90       	pop	r13
    226c:	cf 90       	pop	r12
    226e:	bf 90       	pop	r11
    2270:	af 90       	pop	r10
    2272:	08 95       	ret

00002274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    2274:	ef 92       	push	r14
    2276:	ff 92       	push	r15
    2278:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    227a:	1f 93       	push	r17
    227c:	cf 93       	push	r28
    227e:	df 93       	push	r29
    2280:	00 d0       	rcall	.+0      	; 0x2282 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]+0xe>
    2282:	cd b7       	in	r28, 0x3d	; 61
    2284:	de b7       	in	r29, 0x3e	; 62
    2286:	8c 01       	movw	r16, r24
    2288:	7b 01       	movw	r14, r22
    228a:	89 83       	std	Y+1, r24	; 0x01
    228c:	9a 83       	std	Y+2, r25	; 0x02
    228e:	fb 01       	movw	r30, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2290:	60 81       	ld	r22, Z
    2292:	ce 01       	movw	r24, r28
    2294:	01 96       	adiw	r24, 0x01	; 1
    2296:	84 df       	rcall	.-248    	; 0x21a0 <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    2298:	0f 5f       	subi	r16, 0xFF	; 255
    229a:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    229c:	09 83       	std	Y+1, r16	; 0x01
    229e:	1a 83       	std	Y+2, r17	; 0x02
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    22a0:	f7 01       	movw	r30, r14
    22a2:	61 81       	ldd	r22, Z+1	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    22a4:	ce 01       	movw	r24, r28
    22a6:	01 96       	adiw	r24, 0x01	; 1
    22a8:	7b df       	rcall	.-266    	; 0x21a0 <EERef::update(unsigned char)>
    22aa:	c7 01       	movw	r24, r14
    22ac:	0f 90       	pop	r0
    22ae:	0f 90       	pop	r0
    22b0:	df 91       	pop	r29
    22b2:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    22b4:	1f 91       	pop	r17
    22b6:	0f 91       	pop	r16
    22b8:	ff 90       	pop	r15
    22ba:	ef 90       	pop	r14
    22bc:	08 95       	ret

000022be <MODE_CLICK()>:
MODE_CLICK():
    22be:	2f 92       	push	r2
    22c0:	3f 92       	push	r3
    22c2:	4f 92       	push	r4
    22c4:	5f 92       	push	r5
    22c6:	6f 92       	push	r6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:115
     REP++;
    }
}

void MODE_CLICK()
{
    22c8:	7f 92       	push	r7
    22ca:	8f 92       	push	r8
    22cc:	9f 92       	push	r9
    22ce:	af 92       	push	r10
    22d0:	bf 92       	push	r11
    22d2:	cf 92       	push	r12
    22d4:	df 92       	push	r13
    22d6:	ef 92       	push	r14
    22d8:	ff 92       	push	r15
    22da:	0f 93       	push	r16
    22dc:	1f 93       	push	r17
    22de:	cf 93       	push	r28
    22e0:	df 93       	push	r29
    22e2:	00 d0       	rcall	.+0      	; 0x22e4 <MODE_CLICK()+0x26>
    22e4:	1f 92       	push	r1
    22e6:	cd b7       	in	r28, 0x3d	; 61
    22e8:	de b7       	in	r29, 0x3e	; 62
    22ea:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
    22ee:	81 11       	cpse	r24, r1
    22f0:	58 c0       	rjmp	.+176    	; 0x23a2 <MODE_CLICK()+0xe4>
    22f2:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:116
  if(checkTempRaised==0)
    22f6:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
    22fa:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:118
  {
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    22fc:	6a c0       	rjmp	.+212    	; 0x23d2 <MODE_CLICK()+0x114>
    22fe:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:119
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    2302:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:121
  {
    i = 0;
    2306:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    230a:	84 30       	cpi	r24, 0x04	; 4
    230c:	31 f4       	brne	.+12     	; 0x231a <MODE_CLICK()+0x5c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:123
         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    230e:	20 91 9a 28 	lds	r18, 0x289A	; 0x80289a <SET_MIN>
    2312:	30 91 9b 28 	lds	r19, 0x289B	; 0x80289b <SET_MIN+0x1>
    2316:	23 2b       	or	r18, r19
    2318:	51 f0       	breq	.+20     	; 0x232e <MODE_CLICK()+0x70>
    231a:	90 91 4c 29 	lds	r25, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    231e:	99 23       	and	r25, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:124
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    2320:	09 f4       	brne	.+2      	; 0x2324 <MODE_CLICK()+0x66>
    2322:	55 c0       	rjmp	.+170    	; 0x23ce <MODE_CLICK()+0x110>
    2324:	81 11       	cpse	r24, r1
    2326:	53 c0       	rjmp	.+166    	; 0x23ce <MODE_CLICK()+0x110>
    2328:	82 e0       	ldi	r24, 0x02	; 2
    232a:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:127
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    232e:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:129
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    2332:	85 30       	cpi	r24, 0x05	; 5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:301
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type ) //Product Selections
    2334:	0c f4       	brge	.+2      	; 0x2338 <MODE_CLICK()+0x7a>
    2336:	6a c3       	rjmp	.+1748   	; 0x2a0c <MODE_CLICK()+0x74e>
    2338:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    233c:	88 23       	and	r24, r24
    233e:	01 f1       	breq	.+64     	; 0x2380 <MODE_CLICK()+0xc2>
    2340:	85 e0       	ldi	r24, 0x05	; 5
    2342:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:303
   {
      ENTER_BUT = 5;  
    2346:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    234a:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:304
      if(PUMP_FLAG)   PUMP_FLAG=0;
    234c:	09 f4       	brne	.+2      	; 0x2350 <MODE_CLICK()+0x92>
    234e:	5a c3       	rjmp	.+1716   	; 0x2a04 <MODE_CLICK()+0x746>
    2350:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <PUMP_FLAG>
Save_Pump_Data():
    2354:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    2358:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Eeprom.cpp:63
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    235a:	12 c0       	rjmp	.+36     	; 0x2380 <MODE_CLICK()+0xc2>
    235c:	61 e0       	ldi	r22, 0x01	; 1
    235e:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Eeprom.cpp:65
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    2362:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
    2366:	89 2b       	or	r24, r25
    2368:	09 f4       	brne	.+2      	; 0x236c <MODE_CLICK()+0xae>
    236a:	60 e0       	ldi	r22, 0x00	; 0
    236c:	60 93 9c 28 	sts	0x289C, r22	; 0x80289c <STIR_VALUE_SET>
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	80 e0       	ldi	r24, 0x00	; 0
    2374:	14 df       	rcall	.-472    	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
MODE_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/Eeprom.cpp:66
      EEPROM.write(0, STIR_VALUE_SET);
    2376:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    237a:	85 30       	cpi	r24, 0x05	; 5
    237c:	0c f4       	brge	.+2      	; 0x2380 <MODE_CLICK()+0xc2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:309
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); //Siddhesh
   }
   
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    237e:	46 c3       	rjmp	.+1676   	; 0x2a0c <MODE_CLICK()+0x74e>
    2380:	00 91 b2 28 	lds	r16, 0x28B2	; 0x8028b2 <REP1>
    2384:	10 91 b3 28 	lds	r17, 0x28B3	; 0x8028b3 <REP1+0x1>
    2388:	10 16       	cp	r1, r16
    238a:	11 06       	cpc	r1, r17
    238c:	0c f4       	brge	.+2      	; 0x2390 <MODE_CLICK()+0xd2>
    238e:	3e c3       	rjmp	.+1660   	; 0x2a0c <MODE_CLICK()+0x74e>
    2390:	88 ee       	ldi	r24, 0xE8	; 232
    2392:	93 e0       	ldi	r25, 0x03	; 3
    2394:	37 d9       	rcall	.-3474   	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    2396:	0f 5f       	subi	r16, 0xFF	; 255
    2398:	1f 4f       	sbci	r17, 0xFF	; 255
    239a:	00 93 b2 28 	sts	0x28B2, r16	; 0x8028b2 <REP1>
    239e:	10 93 b3 28 	sts	0x28B3, r17	; 0x8028b3 <REP1+0x1>
    23a2:	23 96       	adiw	r28, 0x03	; 3
    23a4:	cd bf       	out	0x3d, r28	; 61
    23a6:	de bf       	out	0x3e, r29	; 62
    23a8:	df 91       	pop	r29
    23aa:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:312
   else                           Tick.BUZZ_INTERVAL(50);               //short pree   
}
}
    23ac:	1f 91       	pop	r17
    23ae:	0f 91       	pop	r16
    23b0:	ff 90       	pop	r15
    23b2:	ef 90       	pop	r14
    23b4:	df 90       	pop	r13
    23b6:	cf 90       	pop	r12
    23b8:	bf 90       	pop	r11
    23ba:	af 90       	pop	r10
    23bc:	9f 90       	pop	r9
    23be:	8f 90       	pop	r8
    23c0:	7f 90       	pop	r7
    23c2:	6f 90       	pop	r6
    23c4:	5f 90       	pop	r5
    23c6:	4f 90       	pop	r4
    23c8:	3f 90       	pop	r3
    23ca:	2f 90       	pop	r2
    23cc:	08 95       	ret
    23ce:	8f 5f       	subi	r24, 0xFF	; 255
    23d0:	ac cf       	rjmp	.-168    	; 0x232a <MODE_CLICK()+0x6c>
    23d2:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    23d6:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:129
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    23da:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    23de:	81 11       	cpse	r24, r1
    23e0:	02 c1       	rjmp	.+516    	; 0x25e6 <MODE_CLICK()+0x328>
    23e2:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:134
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_LONG_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:136
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; //
    23ec:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_LONG_VALUE+0x1>
    23f0:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    23f4:	2b 83       	std	Y+3, r18	; 0x03
    23f6:	82 2f       	mov	r24, r18
    23f8:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:137
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    23fa:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_LONG_VALUE+0x2>
    23fe:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_LONG_VALUE+0x3>
    2402:	80 91 a3 28 	lds	r24, 0x28A3	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	80 93 22 29 	sts	0x2922, r24	; 0x802922 <SET_LONG_VALUE+0x8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:138
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    240c:	90 93 23 29 	sts	0x2923, r25	; 0x802923 <SET_LONG_VALUE+0x9>
    2410:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <SET_LONG_VALUE+0xa>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:140
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
    241a:	90 93 25 29 	sts	0x2925, r25	; 0x802925 <SET_LONG_VALUE+0xb>
    241e:	21 11       	cpse	r18, r1
    2420:	99 c0       	rjmp	.+306    	; 0x2554 <MODE_CLICK()+0x296>
    2422:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
    2426:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:142
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    242a:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_LONG_VALUE+0x4>
    242e:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_LONG_VALUE+0x5>
    2432:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
    2436:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    243a:	80 93 26 29 	sts	0x2926, r24	; 0x802926 <SET_LONG_VALUE+0xc>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:145
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    243e:	90 93 27 29 	sts	0x2927, r25	; 0x802927 <SET_LONG_VALUE+0xd>
    2442:	c0 90 fb 28 	lds	r12, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2446:	d0 90 fc 28 	lds	r13, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    244a:	e0 90 fd 28 	lds	r14, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    244e:	f0 90 fe 28 	lds	r15, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2452:	c7 01       	movw	r24, r14
    2454:	b6 01       	movw	r22, r12
    2456:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    245a:	4b 01       	movw	r8, r22
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	40 e2       	ldi	r20, 0x20	; 32
    2462:	51 e4       	ldi	r21, 0x41	; 65
    2464:	c7 01       	movw	r24, r14
    2466:	b6 01       	movw	r22, r12
    2468:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    246c:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    2470:	2b 01       	movw	r4, r22
    2472:	cb 01       	movw	r24, r22
    2474:	6a e0       	ldi	r22, 0x0A	; 10
    2476:	70 e0       	ldi	r23, 0x00	; 0
    2478:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
    247c:	1c 01       	movw	r2, r24
    247e:	8b 81       	ldd	r24, Y+3	; 0x03
    2480:	81 11       	cpse	r24, r1
    2482:	7e c0       	rjmp	.+252    	; 0x2580 <MODE_CLICK()+0x2c2>
    2484:	20 e0       	ldi	r18, 0x00	; 0
    2486:	30 e0       	ldi	r19, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:146
      if (!DEGREE_VALUE_SET)
    2488:	48 ec       	ldi	r20, 0xC8	; 200
    248a:	52 e4       	ldi	r21, 0x42	; 66
    248c:	c7 01       	movw	r24, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:148
      {
        if(TEMP_DEG_RAW<100)
    248e:	b6 01       	movw	r22, r12
    2490:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    2494:	87 ff       	sbrs	r24, 7
    2496:	67 c0       	rjmp	.+206    	; 0x2566 <MODE_CLICK()+0x2a8>
    2498:	80 92 28 29 	sts	0x2928, r8	; 0x802928 <SET_LONG_VALUE+0xe>
    249c:	90 92 29 29 	sts	0x2929, r9	; 0x802929 <SET_LONG_VALUE+0xf>
    24a0:	40 92 32 28 	sts	0x2832, r4	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:150
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;                    //CAL1_VALUE_SAVED_DEG1;
    24a4:	50 92 33 28 	sts	0x2833, r5	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    24a8:	20 92 2a 29 	sts	0x292A, r2	; 0x80292a <SET_LONG_VALUE+0x10>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:151
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    24ac:	30 92 2b 29 	sts	0x292B, r3	; 0x80292b <SET_LONG_VALUE+0x11>
    24b0:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:153
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
    24b4:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    24b8:	80 93 2c 29 	sts	0x292C, r24	; 0x80292c <SET_LONG_VALUE+0x12>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:166
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    24bc:	90 93 2d 29 	sts	0x292D, r25	; 0x80292d <SET_LONG_VALUE+0x13>
    24c0:	80 92 30 29 	sts	0x2930, r8	; 0x802930 <SET_LONG_VALUE+0x16>
    24c4:	90 92 31 29 	sts	0x2931, r9	; 0x802931 <SET_LONG_VALUE+0x17>
    24c8:	20 92 32 29 	sts	0x2932, r2	; 0x802932 <SET_LONG_VALUE+0x18>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:167
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    24cc:	30 92 33 29 	sts	0x2933, r3	; 0x802933 <SET_LONG_VALUE+0x19>
    24d0:	0c 30       	cpi	r16, 0x0C	; 12
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:170
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    24d2:	11 05       	cpc	r17, r1
    24d4:	09 f0       	breq	.+2      	; 0x24d8 <MODE_CLICK()+0x21a>
    24d6:	6d c0       	rjmp	.+218    	; 0x25b2 <MODE_CLICK()+0x2f4>
    24d8:	c0 92 2a 28 	sts	0x282A, r12	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:172
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    24dc:	d0 92 2b 28 	sts	0x282B, r13	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    24e0:	e0 92 2c 28 	sts	0x282C, r14	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    24e4:	f0 92 2d 28 	sts	0x282D, r15	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    24e8:	20 e0       	ldi	r18, 0x00	; 0
    24ea:	30 e0       	ldi	r19, 0x00	; 0
    24ec:	48 ec       	ldi	r20, 0xC8	; 200
    24ee:	52 e4       	ldi	r21, 0x42	; 66
    24f0:	c7 01       	movw	r24, r14
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:175
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    24f2:	b6 01       	movw	r22, r12
    24f4:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    24f8:	87 ff       	sbrs	r24, 7
    24fa:	68 c0       	rjmp	.+208    	; 0x25cc <MODE_CLICK()+0x30e>
    24fc:	80 92 34 29 	sts	0x2934, r8	; 0x802934 <SET_LONG_VALUE+0x1a>
    2500:	90 92 35 29 	sts	0x2935, r9	; 0x802935 <SET_LONG_VALUE+0x1b>
    2504:	20 92 36 29 	sts	0x2936, r2	; 0x802936 <SET_LONG_VALUE+0x1c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:177
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    2508:	30 92 37 29 	sts	0x2937, r3	; 0x802937 <SET_LONG_VALUE+0x1d>
    250c:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:179
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <SET_LONG_VALUE+0x6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:187
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    2516:	90 93 21 29 	sts	0x2921, r25	; 0x802921 <SET_LONG_VALUE+0x7>
    251a:	01 31       	cpi	r16, 0x11	; 17
    251c:	11 05       	cpc	r17, r1
    251e:	21 f4       	brne	.+8      	; 0x2528 <MODE_CLICK()+0x26a>
    2520:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:188
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    2524:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
    2528:	2b 81       	ldd	r18, Y+3	; 0x03
    252a:	21 11       	cpse	r18, r1
    252c:	09 c0       	rjmp	.+18     	; 0x2540 <MODE_CLICK()+0x282>
    252e:	08 30       	cpi	r16, 0x08	; 8
    2530:	11 05       	cpc	r17, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:190
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    2532:	31 f4       	brne	.+12     	; 0x2540 <MODE_CLICK()+0x282>
    2534:	87 e0       	ldi	r24, 0x07	; 7
    2536:	90 e0       	ldi	r25, 0x00	; 0
    2538:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    253c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2540:	81 e0       	ldi	r24, 0x01	; 1
    2542:	80 93 a7 28 	sts	0x28A7, r24	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    2546:	8a e1       	ldi	r24, 0x1A	; 26
    2548:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:192
      
      Mode_Button_Single_Press_In_Settings = 1;
    254a:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    254e:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:299
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    2552:	ed ce       	rjmp	.-550    	; 0x232e <MODE_CLICK()+0x70>
    2554:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    2558:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    255c:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x26>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:143
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; //Siddhesh
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    2560:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x27>
    2564:	66 cf       	rjmp	.-308    	; 0x2432 <MODE_CLICK()+0x174>
    2566:	83 e6       	ldi	r24, 0x63	; 99
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	80 93 28 29 	sts	0x2928, r24	; 0x802928 <SET_LONG_VALUE+0xe>
    256e:	90 93 29 29 	sts	0x2929, r25	; 0x802929 <SET_LONG_VALUE+0xf>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:157
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;        //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    2572:	89 e0       	ldi	r24, 0x09	; 9
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	80 93 2a 29 	sts	0x292A, r24	; 0x80292a <SET_LONG_VALUE+0x10>
    257a:	90 93 2b 29 	sts	0x292B, r25	; 0x80292b <SET_LONG_VALUE+0x11>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\WLC_WLS_012_V4.1/WLC_WLS_012_V4.1.ino:158
          SET_LONG_VALUE[Cal1_Point] = 9;
    257e:	98 cf       	rjmp	.-208    	; 0x24b0 <MODE_CLICK()+0x1f2>
    2580:	40 90 d8 28 	lds	r4, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
    2584:	50 90 d9 28 	lds	r5, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    2588:	60 90 da 28 	lds	r6, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
    258c:	70 90 db 28 	lds	r7, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
    2590:	c3 01       	movw	r24, r6
    2592:	b2 01       	movw	r22, r4
    2594:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    2598:	60 93 42 29 	sts	0x2942, r22	; 0x802942 <SET_LONG_VALUE+0x28>
    259c:	70 93 43 29 	sts	0x2943, r23	; 0x802943 <SET_LONG_VALUE+0x29>
    25a0:	40 92 2e 28 	sts	0x282E, r4	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    25a4:	50 92 2f 28 	sts	0x282F, r5	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    25a8:	60 92 30 28 	sts	0x2830, r6	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    25ac:	70 92 31 28 	sts	0x2831, r7	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    25b0:	7f cf       	rjmp	.-258    	; 0x24b0 <MODE_CLICK()+0x1f2>
    25b2:	0e 30       	cpi	r16, 0x0E	; 14
    25b4:	11 05       	cpc	r17, r1
    25b6:	09 f0       	breq	.+2      	; 0x25ba <MODE_CLICK()+0x2fc>
    25b8:	97 cf       	rjmp	.-210    	; 0x24e8 <MODE_CLICK()+0x22a>
    25ba:	c0 92 26 28 	sts	0x2826, r12	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    25be:	d0 92 27 28 	sts	0x2827, r13	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    25c2:	e0 92 28 28 	sts	0x2828, r14	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    25c6:	f0 92 29 28 	sts	0x2829, r15	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    25ca:	8e cf       	rjmp	.-228    	; 0x24e8 <MODE_CLICK()+0x22a>
    25cc:	83 e6       	ldi	r24, 0x63	; 99
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	80 93 34 29 	sts	0x2934, r24	; 0x802934 <SET_LONG_VALUE+0x1a>
    25d4:	90 93 35 29 	sts	0x2935, r25	; 0x802935 <SET_LONG_VALUE+0x1b>
    25d8:	89 e0       	ldi	r24, 0x09	; 9
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	80 93 36 29 	sts	0x2936, r24	; 0x802936 <SET_LONG_VALUE+0x1c>
    25e0:	90 93 37 29 	sts	0x2937, r25	; 0x802937 <SET_LONG_VALUE+0x1d>
    25e4:	93 cf       	rjmp	.-218    	; 0x250c <MODE_CLICK()+0x24e>
    25e6:	0f 30       	cpi	r16, 0x0F	; 15
    25e8:	11 05       	cpc	r17, r1
    25ea:	08 f5       	brcc	.+66     	; 0x262e <MODE_CLICK()+0x370>
    25ec:	f8 01       	movw	r30, r16
    25ee:	e5 50       	subi	r30, 0x05	; 5
    25f0:	fd 4e       	sbci	r31, 0xED	; 237
    25f2:	0c 94 d9 38 	jmp	0x71b2	; 0x71b2 <__tablejump2__>
    25f6:	0a 13       	cpse	r16, r26
    25f8:	37 13       	cpse	r19, r23
    25fa:	44 13       	cpse	r20, r20
    25fc:	e3 14       	cp	r14, r3
    25fe:	61 13       	cpse	r22, r17
    2600:	6e 13       	cpse	r22, r30
    2602:	7b 13       	cpse	r23, r27
    2604:	17 13       	cpse	r17, r23
    2606:	86 13       	cpse	r24, r22
    2608:	36 14       	cp	r3, r6
    260a:	44 14       	cp	r4, r4
    260c:	17 13       	cpse	r17, r23
    260e:	5d 14       	cp	r5, r13
    2610:	17 13       	cpse	r17, r23
    2612:	6e 14       	cp	r6, r14
    2614:	61 e0       	ldi	r22, 0x01	; 1
    2616:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_LONG_VALUE>
    261a:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_LONG_VALUE+0x1>
    261e:	89 2b       	or	r24, r25
    2620:	09 f4       	brne	.+2      	; 0x2624 <MODE_CLICK()+0x366>
    2622:	60 e0       	ldi	r22, 0x00	; 0
    2624:	60 93 9c 28 	sts	0x289C, r22	; 0x80289c <STIR_VALUE_SET>
    2628:	90 e0       	ldi	r25, 0x00	; 0
    262a:	80 e0       	ldi	r24, 0x00	; 0
    262c:	b8 dd       	rcall	.-1168   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    262e:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    2632:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2636:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    263a:	21 11       	cpse	r18, r1
    263c:	03 c0       	rjmp	.+6      	; 0x2644 <MODE_CLICK()+0x386>
    263e:	87 30       	cpi	r24, 0x07	; 7
    2640:	91 05       	cpc	r25, r1
    2642:	61 f0       	breq	.+24     	; 0x265c <MODE_CLICK()+0x39e>
    2644:	9c 01       	movw	r18, r24
    2646:	2d 7f       	andi	r18, 0xFD	; 253
    2648:	29 30       	cpi	r18, 0x09	; 9
    264a:	31 05       	cpc	r19, r1
    264c:	39 f0       	breq	.+14     	; 0x265c <MODE_CLICK()+0x39e>
    264e:	8d 30       	cpi	r24, 0x0D	; 13
    2650:	91 05       	cpc	r25, r1
    2652:	21 f0       	breq	.+8      	; 0x265c <MODE_CLICK()+0x39e>
    2654:	81 31       	cpi	r24, 0x11	; 17
    2656:	91 05       	cpc	r25, r1
    2658:	09 f0       	breq	.+2      	; 0x265c <MODE_CLICK()+0x39e>
    265a:	c7 c1       	rjmp	.+910    	; 0x29ea <MODE_CLICK()+0x72c>
    265c:	21 e0       	ldi	r18, 0x01	; 1
    265e:	20 93 a7 28 	sts	0x28A7, r18	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    2662:	01 96       	adiw	r24, 0x01	; 1
    2664:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2668:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    266c:	6c cf       	rjmp	.-296    	; 0x2546 <MODE_CLICK()+0x288>
    266e:	61 e0       	ldi	r22, 0x01	; 1
    2670:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_LONG_VALUE+0x2>
    2674:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_LONG_VALUE+0x3>
    2678:	89 2b       	or	r24, r25
    267a:	09 f4       	brne	.+2      	; 0x267e <MODE_CLICK()+0x3c0>
    267c:	60 e0       	ldi	r22, 0x00	; 0
    267e:	60 93 4c 29 	sts	0x294C, r22	; 0x80294c <DEGREE_VALUE_SET>
    2682:	81 e0       	ldi	r24, 0x01	; 1
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	d2 cf       	rjmp	.-92     	; 0x262c <MODE_CLICK()+0x36e>
    2688:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    268c:	81 11       	cpse	r24, r1
    268e:	0b c0       	rjmp	.+22     	; 0x26a6 <MODE_CLICK()+0x3e8>
    2690:	60 91 1e 29 	lds	r22, 0x291E	; 0x80291e <SET_LONG_VALUE+0x4>
    2694:	80 91 1f 29 	lds	r24, 0x291F	; 0x80291f <SET_LONG_VALUE+0x5>
    2698:	60 93 0b 29 	sts	0x290B, r22	; 0x80290b <SAFE_VALUE_SET_DEG>
    269c:	80 93 0c 29 	sts	0x290C, r24	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    26a0:	82 e0       	ldi	r24, 0x02	; 2
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	c3 cf       	rjmp	.-122    	; 0x262c <MODE_CLICK()+0x36e>
    26a6:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
    26aa:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
    26ae:	80 93 09 29 	sts	0x2909, r24	; 0x802909 <SAFE_VALUE_SET_FAH>
    26b2:	90 93 0a 29 	sts	0x290A, r25	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    26b6:	69 e0       	ldi	r22, 0x09	; 9
    26b8:	79 e2       	ldi	r23, 0x29	; 41
    26ba:	83 e0       	ldi	r24, 0x03	; 3
    26bc:	90 e0       	ldi	r25, 0x00	; 0
    26be:	da dd       	rcall	.-1100   	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    26c0:	b6 cf       	rjmp	.-148    	; 0x262e <MODE_CLICK()+0x370>
    26c2:	61 e0       	ldi	r22, 0x01	; 1
    26c4:	80 91 22 29 	lds	r24, 0x2922	; 0x802922 <SET_LONG_VALUE+0x8>
    26c8:	90 91 23 29 	lds	r25, 0x2923	; 0x802923 <SET_LONG_VALUE+0x9>
    26cc:	89 2b       	or	r24, r25
    26ce:	09 f4       	brne	.+2      	; 0x26d2 <MODE_CLICK()+0x414>
    26d0:	60 e0       	ldi	r22, 0x00	; 0
    26d2:	60 93 a3 28 	sts	0x28A3, r22	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    26d6:	8f e0       	ldi	r24, 0x0F	; 15
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	61 dd       	rcall	.-1342   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    26dc:	61 e0       	ldi	r22, 0x01	; 1
    26de:	80 91 24 29 	lds	r24, 0x2924	; 0x802924 <SET_LONG_VALUE+0xa>
    26e2:	90 91 25 29 	lds	r25, 0x2925	; 0x802925 <SET_LONG_VALUE+0xb>
    26e6:	89 2b       	or	r24, r25
    26e8:	09 f4       	brne	.+2      	; 0x26ec <MODE_CLICK()+0x42e>
    26ea:	60 e0       	ldi	r22, 0x00	; 0
    26ec:	60 93 07 29 	sts	0x2907, r22	; 0x802907 <select_product_type>
    26f0:	86 e9       	ldi	r24, 0x96	; 150
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	9b cf       	rjmp	.-202    	; 0x262c <MODE_CLICK()+0x36e>
    26f6:	60 91 26 29 	lds	r22, 0x2926	; 0x802926 <SET_LONG_VALUE+0xc>
    26fa:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0xd>
    26fe:	60 93 d2 28 	sts	0x28D2, r22	; 0x8028d2 <CAL_SELECT_VALUE>
    2702:	80 93 d3 28 	sts	0x28D3, r24	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    2706:	85 e0       	ldi	r24, 0x05	; 5
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	90 cf       	rjmp	.-224    	; 0x262c <MODE_CLICK()+0x36e>
    270c:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    2710:	81 11       	cpse	r24, r1
    2712:	87 c0       	rjmp	.+270    	; 0x2822 <MODE_CLICK()+0x564>
    2714:	60 91 2a 29 	lds	r22, 0x292A	; 0x80292a <SET_LONG_VALUE+0x10>
    2718:	70 91 2b 29 	lds	r23, 0x292B	; 0x80292b <SET_LONG_VALUE+0x11>
    271c:	07 2e       	mov	r0, r23
    271e:	00 0c       	add	r0, r0
    2720:	88 0b       	sbc	r24, r24
    2722:	99 0b       	sbc	r25, r25
    2724:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	40 e2       	ldi	r20, 0x20	; 32
    272e:	51 e4       	ldi	r21, 0x41	; 65
    2730:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    2734:	6b 01       	movw	r12, r22
    2736:	7c 01       	movw	r14, r24
    2738:	60 91 28 29 	lds	r22, 0x2928	; 0x802928 <SET_LONG_VALUE+0xe>
    273c:	70 91 29 29 	lds	r23, 0x2929	; 0x802929 <SET_LONG_VALUE+0xf>
    2740:	07 2e       	mov	r0, r23
    2742:	00 0c       	add	r0, r0
    2744:	88 0b       	sbc	r24, r24
    2746:	99 0b       	sbc	r25, r25
    2748:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    274c:	9b 01       	movw	r18, r22
    274e:	ac 01       	movw	r20, r24
    2750:	c7 01       	movw	r24, r14
    2752:	b6 01       	movw	r22, r12
    2754:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    2758:	20 e0       	ldi	r18, 0x00	; 0
    275a:	30 e0       	ldi	r19, 0x00	; 0
    275c:	40 e2       	ldi	r20, 0x20	; 32
    275e:	51 e4       	ldi	r21, 0x41	; 65
    2760:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    2764:	6b 01       	movw	r12, r22
    2766:	7c 01       	movw	r14, r24
    2768:	60 91 32 28 	lds	r22, 0x2832	; 0x802832 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    276c:	70 91 33 28 	lds	r23, 0x2833	; 0x802833 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    2770:	07 2e       	mov	r0, r23
    2772:	00 0c       	add	r0, r0
    2774:	88 0b       	sbc	r24, r24
    2776:	99 0b       	sbc	r25, r25
    2778:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    277c:	9b 01       	movw	r18, r22
    277e:	ac 01       	movw	r20, r24
    2780:	c7 01       	movw	r24, r14
    2782:	b6 01       	movw	r22, r12
    2784:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	40 e2       	ldi	r20, 0x20	; 32
    278e:	51 e4       	ldi	r21, 0x41	; 65
    2790:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    2794:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
    2798:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
    279c:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
    27a0:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
    27a4:	81 e0       	ldi	r24, 0x01	; 1
    27a6:	80 93 e1 28 	sts	0x28E1, r24	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    27aa:	10 92 dc 28 	sts	0x28DC, r1	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    27ae:	80 90 e2 28 	lds	r8, 0x28E2	; 0x8028e2 <ERROR_CAL>
    27b2:	90 90 e3 28 	lds	r9, 0x28E3	; 0x8028e3 <ERROR_CAL+0x1>
    27b6:	a0 90 e4 28 	lds	r10, 0x28E4	; 0x8028e4 <ERROR_CAL+0x2>
    27ba:	b0 90 e5 28 	lds	r11, 0x28E5	; 0x8028e5 <ERROR_CAL+0x3>
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	30 e0       	ldi	r19, 0x00	; 0
    27c2:	40 e2       	ldi	r20, 0x20	; 32
    27c4:	51 e4       	ldi	r21, 0x41	; 65
    27c6:	c5 01       	movw	r24, r10
    27c8:	b4 01       	movw	r22, r8
    27ca:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    27ce:	6b 01       	movw	r12, r22
    27d0:	7c 01       	movw	r14, r24
    27d2:	20 e0       	ldi	r18, 0x00	; 0
    27d4:	30 e0       	ldi	r19, 0x00	; 0
    27d6:	a9 01       	movw	r20, r18
    27d8:	c5 01       	movw	r24, r10
    27da:	b4 01       	movw	r22, r8
    27dc:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    27e0:	87 ff       	sbrs	r24, 7
    27e2:	41 c0       	rjmp	.+130    	; 0x2866 <MODE_CLICK()+0x5a8>
    27e4:	81 e0       	ldi	r24, 0x01	; 1
    27e6:	80 93 e6 28 	sts	0x28E6, r24	; 0x8028e6 <SIGN>
    27ea:	f7 fa       	bst	r15, 7
    27ec:	f0 94       	com	r15
    27ee:	f7 f8       	bld	r15, 7
    27f0:	f0 94       	com	r15
    27f2:	c0 92 03 29 	sts	0x2903, r12	; 0x802903 <ERROR_CAL1>
    27f6:	d0 92 04 29 	sts	0x2904, r13	; 0x802904 <ERROR_CAL1+0x1>
    27fa:	e0 92 05 29 	sts	0x2905, r14	; 0x802905 <ERROR_CAL1+0x2>
    27fe:	f0 92 06 29 	sts	0x2906, r15	; 0x802906 <ERROR_CAL1+0x3>
    2802:	df dc       	rcall	.-1602   	; 0x21c2 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    2804:	60 91 e6 28 	lds	r22, 0x28E6	; 0x8028e6 <SIGN>
    2808:	87 e0       	ldi	r24, 0x07	; 7
    280a:	90 e0       	ldi	r25, 0x00	; 0
    280c:	c8 dc       	rcall	.-1648   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    280e:	60 91 e1 28 	lds	r22, 0x28E1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    2812:	88 e0       	ldi	r24, 0x08	; 8
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	c3 dc       	rcall	.-1658   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2818:	60 91 dc 28 	lds	r22, 0x28DC	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    281c:	89 e0       	ldi	r24, 0x09	; 9
    281e:	90 e0       	ldi	r25, 0x00	; 0
    2820:	05 cf       	rjmp	.-502    	; 0x262c <MODE_CLICK()+0x36e>
    2822:	60 91 42 29 	lds	r22, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
    2826:	70 91 43 29 	lds	r23, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
    282a:	07 2e       	mov	r0, r23
    282c:	00 0c       	add	r0, r0
    282e:	88 0b       	sbc	r24, r24
    2830:	99 0b       	sbc	r25, r25
    2832:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    2836:	20 91 2e 28 	lds	r18, 0x282E	; 0x80282e <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    283a:	30 91 2f 28 	lds	r19, 0x282F	; 0x80282f <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    283e:	40 91 30 28 	lds	r20, 0x2830	; 0x802830 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    2842:	50 91 31 28 	lds	r21, 0x2831	; 0x802831 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    2846:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    284a:	60 93 e2 28 	sts	0x28E2, r22	; 0x8028e2 <ERROR_CAL>
    284e:	70 93 e3 28 	sts	0x28E3, r23	; 0x8028e3 <ERROR_CAL+0x1>
    2852:	80 93 e4 28 	sts	0x28E4, r24	; 0x8028e4 <ERROR_CAL+0x2>
    2856:	90 93 e5 28 	sts	0x28E5, r25	; 0x8028e5 <ERROR_CAL+0x3>
    285a:	10 92 e1 28 	sts	0x28E1, r1	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    285e:	81 e0       	ldi	r24, 0x01	; 1
    2860:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    2864:	a4 cf       	rjmp	.-184    	; 0x27ae <MODE_CLICK()+0x4f0>
    2866:	10 92 e6 28 	sts	0x28E6, r1	; 0x8028e6 <SIGN>
    286a:	c3 cf       	rjmp	.-122    	; 0x27f2 <MODE_CLICK()+0x534>
    286c:	80 91 2c 29 	lds	r24, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    2870:	90 91 2d 29 	lds	r25, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    2874:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <LOW_CAL_VALUE_SET>
    2878:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    287c:	0a 96       	adiw	r24, 0x0a	; 10
    287e:	80 93 2e 29 	sts	0x292E, r24	; 0x80292e <SET_LONG_VALUE+0x14>
    2882:	90 93 2f 29 	sts	0x292F, r25	; 0x80292f <SET_LONG_VALUE+0x15>
    2886:	d3 ce       	rjmp	.-602    	; 0x262e <MODE_CLICK()+0x370>
    2888:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    288c:	90 91 2f 29 	lds	r25, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    2890:	80 93 43 28 	sts	0x2843, r24	; 0x802843 <HIGH_CAL_VALUE_SET>
    2894:	90 93 44 28 	sts	0x2844, r25	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    2898:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    289c:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    28a0:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    28a4:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    28a8:	80 93 2a 28 	sts	0x282A, r24	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    28ac:	90 93 2b 28 	sts	0x282B, r25	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    28b0:	a0 93 2c 28 	sts	0x282C, r26	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    28b4:	b0 93 2d 28 	sts	0x282D, r27	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    28b8:	ba ce       	rjmp	.-652    	; 0x262e <MODE_CLICK()+0x370>
    28ba:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    28be:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    28c2:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    28c6:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    28ca:	80 93 26 28 	sts	0x2826, r24	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    28ce:	90 93 27 28 	sts	0x2827, r25	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    28d2:	a0 93 28 28 	sts	0x2828, r26	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    28d6:	b0 93 29 28 	sts	0x2829, r27	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    28da:	a9 ce       	rjmp	.-686    	; 0x262e <MODE_CLICK()+0x370>
    28dc:	20 e0       	ldi	r18, 0x00	; 0
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	40 e2       	ldi	r20, 0x20	; 32
    28e2:	51 e4       	ldi	r21, 0x41	; 65
    28e4:	60 91 2a 28 	lds	r22, 0x282A	; 0x80282a <TEMP_CAL2_RAW_LOW_VALUE>
    28e8:	70 91 2b 28 	lds	r23, 0x282B	; 0x80282b <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    28ec:	80 91 2c 28 	lds	r24, 0x282C	; 0x80282c <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    28f0:	90 91 2d 28 	lds	r25, 0x282D	; 0x80282d <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    28f4:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    28f8:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    28fc:	60 93 ca 28 	sts	0x28CA, r22	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
    2900:	70 93 cb 28 	sts	0x28CB, r23	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
    2904:	80 93 cc 28 	sts	0x28CC, r24	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
    2908:	90 93 cd 28 	sts	0x28CD, r25	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	40 e2       	ldi	r20, 0x20	; 32
    2912:	51 e4       	ldi	r21, 0x41	; 65
    2914:	60 91 26 28 	lds	r22, 0x2826	; 0x802826 <TEMP_CAL2_RAW_HIGH_VALUE>
    2918:	70 91 27 28 	lds	r23, 0x2827	; 0x802827 <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    291c:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    2920:	90 91 29 28 	lds	r25, 0x2829	; 0x802829 <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2924:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    2928:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    292c:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
    2930:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    2934:	80 93 c8 28 	sts	0x28C8, r24	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    2938:	90 93 c9 28 	sts	0x28C9, r25	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    293c:	6a ec       	ldi	r22, 0xCA	; 202
    293e:	78 e2       	ldi	r23, 0x28	; 40
    2940:	80 e5       	ldi	r24, 0x50	; 80
    2942:	90 e0       	ldi	r25, 0x00	; 0
    2944:	65 dc       	rcall	.-1846   	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    2946:	66 ec       	ldi	r22, 0xC6	; 198
    2948:	78 e2       	ldi	r23, 0x28	; 40
    294a:	8a e5       	ldi	r24, 0x5A	; 90
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	60 dc       	rcall	.-1856   	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    2950:	20 e0       	ldi	r18, 0x00	; 0
    2952:	30 e0       	ldi	r19, 0x00	; 0
    2954:	40 e2       	ldi	r20, 0x20	; 32
    2956:	51 e4       	ldi	r21, 0x41	; 65
    2958:	60 91 45 28 	lds	r22, 0x2845	; 0x802845 <CAL2_CALCULATED_LOW_CAL_VALUE>
    295c:	70 91 46 28 	lds	r23, 0x2846	; 0x802846 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    2960:	80 91 47 28 	lds	r24, 0x2847	; 0x802847 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    2964:	90 91 48 28 	lds	r25, 0x2848	; 0x802848 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    2968:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    296c:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    2970:	60 93 c2 28 	sts	0x28C2, r22	; 0x8028c2 <MASTER_LOW_CONV>
    2974:	70 93 c3 28 	sts	0x28C3, r23	; 0x8028c3 <MASTER_LOW_CONV+0x1>
    2978:	80 93 c4 28 	sts	0x28C4, r24	; 0x8028c4 <MASTER_LOW_CONV+0x2>
    297c:	90 93 c5 28 	sts	0x28C5, r25	; 0x8028c5 <MASTER_LOW_CONV+0x3>
    2980:	20 e0       	ldi	r18, 0x00	; 0
    2982:	30 e0       	ldi	r19, 0x00	; 0
    2984:	40 e2       	ldi	r20, 0x20	; 32
    2986:	51 e4       	ldi	r21, 0x41	; 65
    2988:	60 91 3f 28 	lds	r22, 0x283F	; 0x80283f <CAL2_CALCULATED_HIGH_CAL_VALUE>
    298c:	70 91 40 28 	lds	r23, 0x2840	; 0x802840 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    2990:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    2994:	90 91 42 28 	lds	r25, 0x2842	; 0x802842 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    2998:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    299c:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    29a0:	60 93 be 28 	sts	0x28BE, r22	; 0x8028be <MASTER_HIGH_CONV>
    29a4:	70 93 bf 28 	sts	0x28BF, r23	; 0x8028bf <MASTER_HIGH_CONV+0x1>
    29a8:	80 93 c0 28 	sts	0x28C0, r24	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
    29ac:	90 93 c1 28 	sts	0x28C1, r25	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
    29b0:	62 ec       	ldi	r22, 0xC2	; 194
    29b2:	78 e2       	ldi	r23, 0x28	; 40
    29b4:	84 e6       	ldi	r24, 0x64	; 100
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	2b dc       	rcall	.-1962   	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    29ba:	6e eb       	ldi	r22, 0xBE	; 190
    29bc:	78 e2       	ldi	r23, 0x28	; 40
    29be:	8e e6       	ldi	r24, 0x6E	; 110
    29c0:	90 e0       	ldi	r25, 0x00	; 0
    29c2:	26 dc       	rcall	.-1972   	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    29c4:	34 ce       	rjmp	.-920    	; 0x262e <MODE_CLICK()+0x370>
    29c6:	61 e0       	ldi	r22, 0x01	; 1
    29c8:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <SET_LONG_VALUE+0x6>
    29cc:	90 91 21 29 	lds	r25, 0x2921	; 0x802921 <SET_LONG_VALUE+0x7>
    29d0:	89 2b       	or	r24, r25
    29d2:	09 f4       	brne	.+2      	; 0x29d6 <MODE_CLICK()+0x718>
    29d4:	60 e0       	ldi	r22, 0x00	; 0
    29d6:	60 93 63 28 	sts	0x2863, r22	; 0x802863 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    29da:	81 e4       	ldi	r24, 0x41	; 65
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	89 83       	std	Y+1, r24	; 0x01
    29e0:	9a 83       	std	Y+2, r25	; 0x02
    29e2:	ce 01       	movw	r24, r28
    29e4:	01 96       	adiw	r24, 0x01	; 1
    29e6:	dc db       	rcall	.-2120   	; 0x21a0 <EERef::update(unsigned char)>
    29e8:	22 ce       	rjmp	.-956    	; 0x262e <MODE_CLICK()+0x370>
MODE_CLICK():
    29ea:	9c 01       	movw	r18, r24
    29ec:	2b 7f       	andi	r18, 0xFB	; 251
    29ee:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    29f2:	2a 30       	cpi	r18, 0x0A	; 10
    29f4:	31 05       	cpc	r19, r1
    29f6:	09 f4       	brne	.+2      	; 0x29fa <MODE_CLICK()+0x73c>
    29f8:	34 ce       	rjmp	.-920    	; 0x2662 <MODE_CLICK()+0x3a4>
    29fa:	8c 30       	cpi	r24, 0x0C	; 12
    29fc:	91 05       	cpc	r25, r1
    29fe:	09 f0       	breq	.+2      	; 0x2a02 <MODE_CLICK()+0x744>
    2a00:	a2 cd       	rjmp	.-1212   	; 0x2546 <MODE_CLICK()+0x288>
    2a02:	2f ce       	rjmp	.-930    	; 0x2662 <MODE_CLICK()+0x3a4>
    2a04:	81 e0       	ldi	r24, 0x01	; 1
    2a06:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <PUMP_FLAG>
    2a0a:	a4 cc       	rjmp	.-1720   	; 0x2354 <MODE_CLICK()+0x96>
    2a0c:	82 e3       	ldi	r24, 0x32	; 50
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	0e 94 02 0b 	call	0x1604	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    2a14:	c6 cc       	rjmp	.-1652   	; 0x23a2 <MODE_CLICK()+0xe4>

00002a16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]>:
SET_SHORT_PRESS_FUNCTION():
    2a16:	2f 92       	push	r2
    2a18:	3f 92       	push	r3
    2a1a:	4f 92       	push	r4
    2a1c:	5f 92       	push	r5
    2a1e:	6f 92       	push	r6
    2a20:	7f 92       	push	r7
    2a22:	8f 92       	push	r8
    2a24:	9f 92       	push	r9
    2a26:	af 92       	push	r10
    2a28:	bf 92       	push	r11
    2a2a:	cf 92       	push	r12
    2a2c:	df 92       	push	r13
    2a2e:	ef 92       	push	r14
    2a30:	ff 92       	push	r15
    2a32:	0f 93       	push	r16
    2a34:	1f 93       	push	r17
    2a36:	cf 93       	push	r28
    2a38:	df 93       	push	r29
    2a3a:	c0 91 19 29 	lds	r28, 0x2919	; 0x802919 <ENTER_BUT>
    2a3e:	c2 30       	cpi	r28, 0x02	; 2
    2a40:	09 f4       	brne	.+2      	; 0x2a44 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2e>
    2a42:	fe c5       	rjmp	.+3068   	; 0x3640 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xc2a>
    2a44:	cc f4       	brge	.+50     	; 0x2a78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x62>
    2a46:	cc 23       	and	r28, r28
    2a48:	09 f4       	brne	.+2      	; 0x2a4c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x36>
    2a4a:	80 c3       	rjmp	.+1792   	; 0x314c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x736>
    2a4c:	c1 30       	cpi	r28, 0x01	; 1
    2a4e:	09 f4       	brne	.+2      	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    2a50:	78 c5       	rjmp	.+2800   	; 0x3542 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb2c>
    2a52:	df 91       	pop	r29
    2a54:	cf 91       	pop	r28
    2a56:	1f 91       	pop	r17
    2a58:	0f 91       	pop	r16
    2a5a:	ff 90       	pop	r15
    2a5c:	ef 90       	pop	r14
    2a5e:	df 90       	pop	r13
    2a60:	cf 90       	pop	r12
    2a62:	bf 90       	pop	r11
    2a64:	af 90       	pop	r10
    2a66:	9f 90       	pop	r9
    2a68:	8f 90       	pop	r8
    2a6a:	7f 90       	pop	r7
    2a6c:	6f 90       	pop	r6
    2a6e:	5f 90       	pop	r5
    2a70:	4f 90       	pop	r4
    2a72:	3f 90       	pop	r3
    2a74:	2f 90       	pop	r2
    2a76:	08 95       	ret
    2a78:	c4 30       	cpi	r28, 0x04	; 4
    2a7a:	09 f4       	brne	.+2      	; 0x2a7e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x68>
    2a7c:	e4 c6       	rjmp	.+3528   	; 0x3846 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xe30>
    2a7e:	0c f4       	brge	.+2      	; 0x2a82 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6c>
    2a80:	5e c6       	rjmp	.+3260   	; 0x373e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xd28>
    2a82:	c5 30       	cpi	r28, 0x05	; 5
    2a84:	31 f7       	brne	.-52     	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    2a86:	c0 90 0f 29 	lds	r12, 0x290F	; 0x80290f <SET_VALUE+0x2>
    2a8a:	d0 90 10 29 	lds	r13, 0x2910	; 0x802910 <SET_VALUE+0x3>
    2a8e:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    2a92:	70 91 12 29 	lds	r23, 0x2912	; 0x802912 <SET_VALUE+0x5>
    2a96:	07 2e       	mov	r0, r23
    2a98:	00 0c       	add	r0, r0
    2a9a:	88 0b       	sbc	r24, r24
    2a9c:	99 0b       	sbc	r25, r25
    2a9e:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    2aa2:	20 e0       	ldi	r18, 0x00	; 0
    2aa4:	30 e0       	ldi	r19, 0x00	; 0
    2aa6:	40 e2       	ldi	r20, 0x20	; 32
    2aa8:	51 e4       	ldi	r21, 0x41	; 65
    2aaa:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    2aae:	4b 01       	movw	r8, r22
    2ab0:	5c 01       	movw	r10, r24
    2ab2:	b6 01       	movw	r22, r12
    2ab4:	dd 0c       	add	r13, r13
    2ab6:	88 0b       	sbc	r24, r24
    2ab8:	99 0b       	sbc	r25, r25
    2aba:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    2abe:	9b 01       	movw	r18, r22
    2ac0:	ac 01       	movw	r20, r24
    2ac2:	c5 01       	movw	r24, r10
    2ac4:	b4 01       	movw	r22, r8
    2ac6:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    2aca:	4b 01       	movw	r8, r22
    2acc:	5c 01       	movw	r10, r24
    2ace:	80 92 96 28 	sts	0x2896, r8	; 0x802896 <SET_TEMP_DEG>
    2ad2:	90 92 97 28 	sts	0x2897, r9	; 0x802897 <SET_TEMP_DEG+0x1>
    2ad6:	a0 92 98 28 	sts	0x2898, r10	; 0x802898 <SET_TEMP_DEG+0x2>
    2ada:	b0 92 99 28 	sts	0x2899, r11	; 0x802899 <SET_TEMP_DEG+0x3>
    2ade:	c0 91 39 29 	lds	r28, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    2ae2:	d0 91 3a 29 	lds	r29, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    2ae6:	c0 93 94 28 	sts	0x2894, r28	; 0x802894 <SET_TEMP_FAH>
    2aea:	d0 93 95 28 	sts	0x2895, r29	; 0x802895 <SET_TEMP_FAH+0x1>
    2aee:	e0 90 13 29 	lds	r14, 0x2913	; 0x802913 <SET_VALUE+0x6>
    2af2:	f0 90 14 29 	lds	r15, 0x2914	; 0x802914 <SET_VALUE+0x7>
    2af6:	e0 92 92 28 	sts	0x2892, r14	; 0x802892 <SET_HOUR>
    2afa:	f0 92 93 28 	sts	0x2893, r15	; 0x802893 <SET_HOUR+0x1>
    2afe:	00 91 15 29 	lds	r16, 0x2915	; 0x802915 <SET_VALUE+0x8>
    2b02:	10 91 16 29 	lds	r17, 0x2916	; 0x802916 <SET_VALUE+0x9>
    2b06:	00 93 90 28 	sts	0x2890, r16	; 0x802890 <SET_MINUTE>
    2b0a:	10 93 91 28 	sts	0x2891, r17	; 0x802891 <SET_MINUTE+0x1>
    2b0e:	2c e3       	ldi	r18, 0x3C	; 60
    2b10:	2e 9d       	mul	r18, r14
    2b12:	c0 01       	movw	r24, r0
    2b14:	2f 9d       	mul	r18, r15
    2b16:	90 0d       	add	r25, r0
    2b18:	11 24       	eor	r1, r1
    2b1a:	80 0f       	add	r24, r16
    2b1c:	91 1f       	adc	r25, r17
    2b1e:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    2b22:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    2b26:	81 e0       	ldi	r24, 0x01	; 1
    2b28:	80 93 a4 28 	sts	0x28A4, r24	; 0x8028a4 <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    2b2c:	6c 2d       	mov	r22, r12
    2b2e:	83 e7       	ldi	r24, 0x73	; 115
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	35 db       	rcall	.-2454   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b34:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    2b38:	85 e7       	ldi	r24, 0x75	; 117
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	30 db       	rcall	.-2464   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b3e:	69 e3       	ldi	r22, 0x39	; 57
    2b40:	79 e2       	ldi	r23, 0x29	; 41
    2b42:	88 e7       	ldi	r24, 0x78	; 120
    2b44:	90 e0       	ldi	r25, 0x00	; 0
    2b46:	96 db       	rcall	.-2260   	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    2b48:	6e 2d       	mov	r22, r14
    2b4a:	8d e7       	ldi	r24, 0x7D	; 125
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	27 db       	rcall	.-2482   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b50:	60 2f       	mov	r22, r16
    2b52:	82 e8       	ldi	r24, 0x82	; 130
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	23 db       	rcall	.-2490   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
Process_Time_Set_On_Eeprom():
    2b58:	61 e0       	ldi	r22, 0x01	; 1
    2b5a:	87 e8       	ldi	r24, 0x87	; 135
    2b5c:	90 e0       	ldi	r25, 0x00	; 0
    2b5e:	1f db       	rcall	.-2498   	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2b60:	10 91 4c 29 	lds	r17, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    2b64:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2b68:	81 11       	cpse	r24, r1
    2b6a:	1b c0       	rjmp	.+54     	; 0x2ba2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x18c>
    2b6c:	11 11       	cpse	r17, r1
    2b6e:	0d c7       	rjmp	.+3610   	; 0x398a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf74>
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	40 e2       	ldi	r20, 0x20	; 32
    2b76:	51 e4       	ldi	r21, 0x41	; 65
    2b78:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    2b7c:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2b80:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2b84:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2b88:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    2b8c:	9b 01       	movw	r18, r22
    2b8e:	ac 01       	movw	r20, r24
    2b90:	c5 01       	movw	r24, r10
    2b92:	b4 01       	movw	r22, r8
    2b94:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    2b98:	87 ff       	sbrs	r24, 7
    2b9a:	03 c0       	rjmp	.+6      	; 0x2ba2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x18c>
    2b9c:	81 e0       	ldi	r24, 0x01	; 1
    2b9e:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2ba2:	80 91 8f 28 	lds	r24, 0x288F	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2ba6:	88 23       	and	r24, r24
    2ba8:	09 f4       	brne	.+2      	; 0x2bac <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x196>
    2baa:	0a c7       	rjmp	.+3604   	; 0x39c0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xfaa>
    2bac:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    2bb0:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    2bb4:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    2bb8:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    2bbc:	81 e0       	ldi	r24, 0x01	; 1
    2bbe:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2bc2:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
    2bc6:	11 11       	cpse	r17, r1
    2bc8:	1c c7       	rjmp	.+3640   	; 0x3a02 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xfec>
    2bca:	80 91 96 28 	lds	r24, 0x2896	; 0x802896 <SET_TEMP_DEG>
    2bce:	90 91 97 28 	lds	r25, 0x2897	; 0x802897 <SET_TEMP_DEG+0x1>
    2bd2:	a0 91 98 28 	lds	r26, 0x2898	; 0x802898 <SET_TEMP_DEG+0x2>
    2bd6:	b0 91 99 28 	lds	r27, 0x2899	; 0x802899 <SET_TEMP_DEG+0x3>
    2bda:	80 93 83 28 	sts	0x2883, r24	; 0x802883 <PID_SETPOINT_To_Show>
    2bde:	90 93 84 28 	sts	0x2884, r25	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    2be2:	a0 93 85 28 	sts	0x2885, r26	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    2be6:	b0 93 86 28 	sts	0x2886, r27	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    2bea:	80 93 67 2a 	sts	0x2A67, r24	; 0x802a67 <PID_SETPOINT>
    2bee:	90 93 68 2a 	sts	0x2A68, r25	; 0x802a68 <PID_SETPOINT+0x1>
    2bf2:	a0 93 69 2a 	sts	0x2A69, r26	; 0x802a69 <PID_SETPOINT+0x2>
    2bf6:	b0 93 6a 2a 	sts	0x2A6A, r27	; 0x802a6a <PID_SETPOINT+0x3>
    2bfa:	8a ec       	ldi	r24, 0xCA	; 202
    2bfc:	9a e2       	ldi	r25, 0x2A	; 42
    2bfe:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
    2c02:	81 e0       	ldi	r24, 0x01	; 1
    2c04:	80 93 82 28 	sts	0x2882, r24	; 0x802882 <Alternate_Display_Flag>
digitalWrite():
    2c08:	61 e0       	ldi	r22, 0x01	; 1
    2c0a:	81 e2       	ldi	r24, 0x21	; 33
    2c0c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c10:	01 e0       	ldi	r16, 0x01	; 1
    2c12:	10 e0       	ldi	r17, 0x00	; 0
    2c14:	8c e3       	ldi	r24, 0x3C	; 60
    2c16:	28 2e       	mov	r2, r24
    2c18:	31 2c       	mov	r3, r1
    2c1a:	c5 e1       	ldi	r28, 0x15	; 21
    2c1c:	d0 e0       	ldi	r29, 0x00	; 0
    2c1e:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    2c22:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    2c26:	18 16       	cp	r1, r24
    2c28:	19 06       	cpc	r1, r25
    2c2a:	14 f0       	brlt	.+4      	; 0x2c30 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x21a>
    2c2c:	0c 94 da 1e 	jmp	0x3db4	; 0x3db4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x139e>
    2c30:	20 e0       	ldi	r18, 0x00	; 0
    2c32:	30 e0       	ldi	r19, 0x00	; 0
    2c34:	40 e2       	ldi	r20, 0x20	; 32
    2c36:	51 e4       	ldi	r21, 0x41	; 65
    2c38:	60 91 96 28 	lds	r22, 0x2896	; 0x802896 <SET_TEMP_DEG>
    2c3c:	70 91 97 28 	lds	r23, 0x2897	; 0x802897 <SET_TEMP_DEG+0x1>
    2c40:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <SET_TEMP_DEG+0x2>
    2c44:	90 91 99 28 	lds	r25, 0x2899	; 0x802899 <SET_TEMP_DEG+0x3>
    2c48:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    2c4c:	20 91 ff 28 	lds	r18, 0x28FF	; 0x8028ff <TEMP_DEG>
    2c50:	30 91 00 29 	lds	r19, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2c54:	40 91 01 29 	lds	r20, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2c58:	50 91 02 29 	lds	r21, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2c5c:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    2c60:	87 ff       	sbrs	r24, 7
    2c62:	f6 c6       	rjmp	.+3564   	; 0x3a50 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x103a>
    2c64:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    2c68:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    2c6c:	81 e0       	ldi	r24, 0x01	; 1
    2c6e:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <checkTempRaised>
digitalWrite():
    2c72:	60 e0       	ldi	r22, 0x00	; 0
    2c74:	81 e2       	ldi	r24, 0x21	; 33
    2c76:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c7a:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    2c7e:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
    2c82:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
digitalWrite():
    2c86:	61 e0       	ldi	r22, 0x01	; 1
    2c88:	8d e1       	ldi	r24, 0x1D	; 29
    2c8a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    2c8e:	60 e0       	ldi	r22, 0x00	; 0
    2c90:	8b e1       	ldi	r24, 0x1B	; 27
    2c92:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2c96:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
DISP_UPDATE():
    2c9a:	8d eb       	ldi	r24, 0xBD	; 189
    2c9c:	9b e2       	ldi	r25, 0x2B	; 43
    2c9e:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    2ca2:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
    2ca6:	88 23       	and	r24, r24
    2ca8:	29 f0       	breq	.+10     	; 0x2cb4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x29e>
    2caa:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
digitalWrite():
    2cae:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    2cb0:	81 11       	cpse	r24, r1
    2cb2:	01 c0       	rjmp	.+2      	; 0x2cb6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2a0>
digitalWrite():
    2cb4:	60 e0       	ldi	r22, 0x00	; 0
    2cb6:	89 e1       	ldi	r24, 0x19	; 25
    2cb8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    2cbc:	b0 90 a6 28 	lds	r11, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2cc0:	b1 10       	cpse	r11, r1
    2cc2:	0a c0       	rjmp	.+20     	; 0x2cd8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2c2>
    2cc4:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2cc8:	60 93 7e 28 	sts	0x287E, r22	; 0x80287e <STOP_COUNT_VALUE>
    2ccc:	70 93 7f 28 	sts	0x287F, r23	; 0x80287f <STOP_COUNT_VALUE+0x1>
    2cd0:	80 93 80 28 	sts	0x2880, r24	; 0x802880 <STOP_COUNT_VALUE+0x2>
    2cd4:	90 93 81 28 	sts	0x2881, r25	; 0x802881 <STOP_COUNT_VALUE+0x3>
    2cd8:	c0 90 7e 28 	lds	r12, 0x287E	; 0x80287e <STOP_COUNT_VALUE>
    2cdc:	d0 90 7f 28 	lds	r13, 0x287F	; 0x80287f <STOP_COUNT_VALUE+0x1>
    2ce0:	e0 90 80 28 	lds	r14, 0x2880	; 0x802880 <STOP_COUNT_VALUE+0x2>
    2ce4:	f0 90 81 28 	lds	r15, 0x2881	; 0x802881 <STOP_COUNT_VALUE+0x3>
    2ce8:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <START_COUNT_VALUE>
    2cec:	90 91 88 28 	lds	r25, 0x2888	; 0x802888 <START_COUNT_VALUE+0x1>
    2cf0:	a0 91 89 28 	lds	r26, 0x2889	; 0x802889 <START_COUNT_VALUE+0x2>
    2cf4:	b0 91 8a 28 	lds	r27, 0x288A	; 0x80288a <START_COUNT_VALUE+0x3>
    2cf8:	c8 1a       	sub	r12, r24
    2cfa:	d9 0a       	sbc	r13, r25
    2cfc:	ea 0a       	sbc	r14, r26
    2cfe:	fb 0a       	sbc	r15, r27
    2d00:	20 e2       	ldi	r18, 0x20	; 32
    2d02:	c2 16       	cp	r12, r18
    2d04:	2f eb       	ldi	r18, 0xBF	; 191
    2d06:	d2 06       	cpc	r13, r18
    2d08:	22 e0       	ldi	r18, 0x02	; 2
    2d0a:	e2 06       	cpc	r14, r18
    2d0c:	f1 04       	cpc	r15, r1
    2d0e:	08 f4       	brcc	.+2      	; 0x2d12 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x2fc>
    2d10:	51 c0       	rjmp	.+162    	; 0x2db4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x39e>
    2d12:	b1 10       	cpse	r11, r1
    2d14:	4f c0       	rjmp	.+158    	; 0x2db4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x39e>
    2d16:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2d1a:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2d1e:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    2d22:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2d26:	20 91 8b 28 	lds	r18, 0x288B	; 0x80288b <TEMP_VALUE_INITIAL>
    2d2a:	30 91 8c 28 	lds	r19, 0x288C	; 0x80288c <TEMP_VALUE_INITIAL+0x1>
    2d2e:	40 91 8d 28 	lds	r20, 0x288D	; 0x80288d <TEMP_VALUE_INITIAL+0x2>
    2d32:	50 91 8e 28 	lds	r21, 0x288E	; 0x80288e <TEMP_VALUE_INITIAL+0x3>
    2d36:	c5 01       	movw	r24, r10
    2d38:	b4 01       	movw	r22, r8
    2d3a:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    2d3e:	2b 01       	movw	r4, r22
    2d40:	3c 01       	movw	r6, r24
    2d42:	c7 01       	movw	r24, r14
    2d44:	b6 01       	movw	r22, r12
    2d46:	20 e6       	ldi	r18, 0x60	; 96
    2d48:	3a ee       	ldi	r19, 0xEA	; 234
    2d4a:	40 e0       	ldi	r20, 0x00	; 0
    2d4c:	50 e0       	ldi	r21, 0x00	; 0
    2d4e:	0e 94 9b 38 	call	0x7136	; 0x7136 <__udivmodsi4>
    2d52:	ca 01       	movw	r24, r20
    2d54:	b9 01       	movw	r22, r18
    2d56:	0e 94 6f 37 	call	0x6ede	; 0x6ede <__floatunsisf>
    2d5a:	9b 01       	movw	r18, r22
    2d5c:	ac 01       	movw	r20, r24
    2d5e:	c3 01       	movw	r24, r6
    2d60:	b2 01       	movw	r22, r4
    2d62:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    2d66:	60 93 aa 28 	sts	0x28AA, r22	; 0x8028aa <RATE_OF_HEATING>
    2d6a:	70 93 ab 28 	sts	0x28AB, r23	; 0x8028ab <RATE_OF_HEATING+0x1>
    2d6e:	80 93 ac 28 	sts	0x28AC, r24	; 0x8028ac <RATE_OF_HEATING+0x2>
    2d72:	90 93 ad 28 	sts	0x28AD, r25	; 0x8028ad <RATE_OF_HEATING+0x3>
    2d76:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2d7a:	60 93 7a 28 	sts	0x287A, r22	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2d7e:	70 93 7b 28 	sts	0x287B, r23	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2d82:	80 93 7c 28 	sts	0x287C, r24	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2d86:	90 93 7d 28 	sts	0x287D, r25	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2d8a:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2d8e:	60 93 76 28 	sts	0x2876, r22	; 0x802876 <CAL_OF_10_MIN>
    2d92:	70 93 77 28 	sts	0x2877, r23	; 0x802877 <CAL_OF_10_MIN+0x1>
    2d96:	80 93 78 28 	sts	0x2878, r24	; 0x802878 <CAL_OF_10_MIN+0x2>
    2d9a:	90 93 79 28 	sts	0x2879, r25	; 0x802879 <CAL_OF_10_MIN+0x3>
    2d9e:	80 92 72 28 	sts	0x2872, r8	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2da2:	90 92 73 28 	sts	0x2873, r9	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2da6:	a0 92 74 28 	sts	0x2874, r10	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2daa:	b0 92 75 28 	sts	0x2875, r11	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2dae:	81 e0       	ldi	r24, 0x01	; 1
    2db0:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2db4:	c0 90 aa 28 	lds	r12, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    2db8:	d0 90 ab 28 	lds	r13, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    2dbc:	e0 90 ac 28 	lds	r14, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    2dc0:	f0 90 ad 28 	lds	r15, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    2dc4:	20 e0       	ldi	r18, 0x00	; 0
    2dc6:	30 e0       	ldi	r19, 0x00	; 0
    2dc8:	40 e8       	ldi	r20, 0x80	; 128
    2dca:	5f e3       	ldi	r21, 0x3F	; 63
    2dcc:	c7 01       	movw	r24, r14
    2dce:	b6 01       	movw	r22, r12
    2dd0:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    2dd4:	87 fd       	sbrc	r24, 7
    2dd6:	83 c6       	rjmp	.+3334   	; 0x3ade <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10c8>
    2dd8:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    2ddc:	88 23       	and	r24, r24
    2dde:	09 f4       	brne	.+2      	; 0x2de2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3cc>
    2de0:	a1 c0       	rjmp	.+322    	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
digitalWrite():
    2de2:	60 e0       	ldi	r22, 0x00	; 0
    2de4:	88 e1       	ldi	r24, 0x18	; 24
    2de6:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    2dea:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    2dee:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    2df2:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    2df6:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    2dfa:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    2dfe:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    2e02:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    2e06:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2e0a:	6b 01       	movw	r12, r22
    2e0c:	7c 01       	movw	r14, r24
    2e0e:	c0 92 6e 28 	sts	0x286E, r12	; 0x80286e <CURRENT_COOLING_RATE_TIME>
    2e12:	d0 92 6f 28 	sts	0x286F, r13	; 0x80286f <CURRENT_COOLING_RATE_TIME+0x1>
    2e16:	e0 92 70 28 	sts	0x2870, r14	; 0x802870 <CURRENT_COOLING_RATE_TIME+0x2>
    2e1a:	f0 92 71 28 	sts	0x2871, r15	; 0x802871 <CURRENT_COOLING_RATE_TIME+0x3>
    2e1e:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <EXECUTE_PID_LOOP>
    2e22:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    2e26:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    2e2a:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    2e2e:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    2e32:	80 92 6a 28 	sts	0x286A, r8	; 0x80286a <CURRENT_TEMP_COOLING_RATE>
    2e36:	90 92 6b 28 	sts	0x286B, r9	; 0x80286b <CURRENT_TEMP_COOLING_RATE+0x1>
    2e3a:	a0 92 6c 28 	sts	0x286C, r10	; 0x80286c <CURRENT_TEMP_COOLING_RATE+0x2>
    2e3e:	b0 92 6d 28 	sts	0x286D, r11	; 0x80286d <CURRENT_TEMP_COOLING_RATE+0x3>
    2e42:	80 91 7a 28 	lds	r24, 0x287A	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2e46:	90 91 7b 28 	lds	r25, 0x287B	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2e4a:	a0 91 7c 28 	lds	r26, 0x287C	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2e4e:	b0 91 7d 28 	lds	r27, 0x287D	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2e52:	26 01       	movw	r4, r12
    2e54:	37 01       	movw	r6, r14
    2e56:	48 1a       	sub	r4, r24
    2e58:	59 0a       	sbc	r5, r25
    2e5a:	6a 0a       	sbc	r6, r26
    2e5c:	7b 0a       	sbc	r7, r27
    2e5e:	d3 01       	movw	r26, r6
    2e60:	c2 01       	movw	r24, r4
    2e62:	80 36       	cpi	r24, 0x60	; 96
    2e64:	9a 4e       	sbci	r25, 0xEA	; 234
    2e66:	a1 05       	cpc	r26, r1
    2e68:	b1 05       	cpc	r27, r1
    2e6a:	09 f0       	breq	.+2      	; 0x2e6e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x458>
    2e6c:	5b c0       	rjmp	.+182    	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    2e6e:	20 91 72 28 	lds	r18, 0x2872	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2e72:	30 91 73 28 	lds	r19, 0x2873	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2e76:	40 91 74 28 	lds	r20, 0x2874	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2e7a:	50 91 75 28 	lds	r21, 0x2875	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2e7e:	c5 01       	movw	r24, r10
    2e80:	b4 01       	movw	r22, r8
    2e82:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    2e86:	20 91 05 28 	lds	r18, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2e8a:	30 91 06 28 	lds	r19, 0x2806	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2e8e:	40 91 07 28 	lds	r20, 0x2807	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2e92:	50 91 08 28 	lds	r21, 0x2808	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2e96:	50 58       	subi	r21, 0x80	; 128
    2e98:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    2e9c:	18 16       	cp	r1, r24
    2e9e:	0c f4       	brge	.+2      	; 0x2ea2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x48c>
    2ea0:	fa c5       	rjmp	.+3060   	; 0x3a96 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1080>
    2ea2:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <COOLING_CYCLE_COUNT>
    2ea6:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2eaa:	18 16       	cp	r1, r24
    2eac:	19 06       	cpc	r1, r25
    2eae:	0c f4       	brge	.+2      	; 0x2eb2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x49c>
    2eb0:	d2 c5       	rjmp	.+2980   	; 0x3a56 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1040>
    2eb2:	01 96       	adiw	r24, 0x01	; 1
    2eb4:	80 93 68 28 	sts	0x2868, r24	; 0x802868 <COOLING_CYCLE_COUNT>
    2eb8:	90 93 69 28 	sts	0x2869, r25	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2ebc:	8a e0       	ldi	r24, 0x0A	; 10
    2ebe:	97 ed       	ldi	r25, 0xD7	; 215
    2ec0:	a3 e2       	ldi	r26, 0x23	; 35
    2ec2:	bc e3       	ldi	r27, 0x3C	; 60
    2ec4:	80 93 05 28 	sts	0x2805, r24	; 0x802805 <COOLOING_RATE_COMP_VAL>
    2ec8:	90 93 06 28 	sts	0x2806, r25	; 0x802806 <COOLOING_RATE_COMP_VAL+0x1>
    2ecc:	a0 93 07 28 	sts	0x2807, r26	; 0x802807 <COOLOING_RATE_COMP_VAL+0x2>
    2ed0:	b0 93 08 28 	sts	0x2808, r27	; 0x802808 <COOLOING_RATE_COMP_VAL+0x3>
    2ed4:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    2ed8:	60 93 64 28 	sts	0x2864, r22	; 0x802864 <TO_CHECK_REPETATION_WITHIN_TIME>
    2edc:	70 93 65 28 	sts	0x2865, r23	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    2ee0:	80 93 66 28 	sts	0x2866, r24	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    2ee4:	90 93 67 28 	sts	0x2867, r25	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    2ee8:	80 91 68 28 	lds	r24, 0x2868	; 0x802868 <COOLING_CYCLE_COUNT>
    2eec:	90 91 69 28 	lds	r25, 0x2869	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    2ef0:	02 97       	sbiw	r24, 0x02	; 2
    2ef2:	41 f4       	brne	.+16     	; 0x2f04 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4ee>
    2ef4:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    2ef8:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    2efc:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    2f00:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    2f04:	c0 92 7a 28 	sts	0x287A, r12	; 0x80287a <PREVIOUS_COOLING_RATE_TIME>
    2f08:	d0 92 7b 28 	sts	0x287B, r13	; 0x80287b <PREVIOUS_COOLING_RATE_TIME+0x1>
    2f0c:	e0 92 7c 28 	sts	0x287C, r14	; 0x80287c <PREVIOUS_COOLING_RATE_TIME+0x2>
    2f10:	f0 92 7d 28 	sts	0x287D, r15	; 0x80287d <PREVIOUS_COOLING_RATE_TIME+0x3>
    2f14:	80 92 72 28 	sts	0x2872, r8	; 0x802872 <PREVIOUS_TEMP_COOLING_RATE>
    2f18:	90 92 73 28 	sts	0x2873, r9	; 0x802873 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    2f1c:	a0 92 74 28 	sts	0x2874, r10	; 0x802874 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    2f20:	b0 92 75 28 	sts	0x2875, r11	; 0x802875 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    2f24:	80 90 ff 28 	lds	r8, 0x28FF	; 0x8028ff <TEMP_DEG>
    2f28:	90 90 00 29 	lds	r9, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    2f2c:	a0 90 01 29 	lds	r10, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    2f30:	b0 90 02 29 	lds	r11, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    2f34:	c0 90 83 28 	lds	r12, 0x2883	; 0x802883 <PID_SETPOINT_To_Show>
    2f38:	d0 90 84 28 	lds	r13, 0x2884	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    2f3c:	e0 90 85 28 	lds	r14, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    2f40:	f0 90 86 28 	lds	r15, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    2f44:	80 91 63 28 	lds	r24, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    2f48:	81 11       	cpse	r24, r1
    2f4a:	e6 c5       	rjmp	.+3020   	; 0x3b18 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1102>
    2f4c:	81 e0       	ldi	r24, 0x01	; 1
    2f4e:	80 93 62 28 	sts	0x2862, r24	; 0x802862 <COUNTDOWN_START>
    2f52:	a7 01       	movw	r20, r14
    2f54:	96 01       	movw	r18, r12
    2f56:	c5 01       	movw	r24, r10
    2f58:	b4 01       	movw	r22, r8
    2f5a:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    2f5e:	87 fd       	sbrc	r24, 7
    2f60:	4d c0       	rjmp	.+154    	; 0x2ffc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5e6>
interval():
    2f62:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    2f66:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    2f6a:	89 2b       	or	r24, r25
    2f6c:	09 f4       	brne	.+2      	; 0x2f70 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x55a>
    2f6e:	ec c5       	rjmp	.+3032   	; 0x3b48 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1132>
    2f70:	80 e9       	ldi	r24, 0x90	; 144
    2f72:	91 e0       	ldi	r25, 0x01	; 1
    2f74:	a0 e0       	ldi	r26, 0x00	; 0
    2f76:	b0 e0       	ldi	r27, 0x00	; 0
    2f78:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    2f7c:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    2f80:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    2f84:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    2f88:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    2f8c:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    2f90:	89 2b       	or	r24, r25
    2f92:	09 f4       	brne	.+2      	; 0x2f96 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x580>
    2f94:	de c5       	rjmp	.+3004   	; 0x3b52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x113c>
    2f96:	80 e2       	ldi	r24, 0x20	; 32
    2f98:	93 e0       	ldi	r25, 0x03	; 3
    2f9a:	a0 e0       	ldi	r26, 0x00	; 0
    2f9c:	b0 e0       	ldi	r27, 0x00	; 0
    2f9e:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    2fa2:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    2fa6:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    2faa:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    2fae:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    2fb2:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    2fb6:	89 2b       	or	r24, r25
    2fb8:	59 f4       	brne	.+22     	; 0x2fd0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5ba>
    2fba:	81 e0       	ldi	r24, 0x01	; 1
    2fbc:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <REPETATION_FLAG>
BUZZ_TICK_START():
    2fc0:	8c e6       	ldi	r24, 0x6C	; 108
    2fc2:	9b e2       	ldi	r25, 0x2B	; 43
    2fc4:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    2fc8:	00 93 b0 28 	sts	0x28B0, r16	; 0x8028b0 <REP>
    2fcc:	10 93 b1 28 	sts	0x28B1, r17	; 0x8028b1 <REP+0x1>
    2fd0:	80 91 b5 28 	lds	r24, 0x28B5	; 0x8028b5 <FOR_REP>
    2fd4:	90 91 b6 28 	lds	r25, 0x28B6	; 0x8028b6 <FOR_REP+0x1>
    2fd8:	02 97       	sbiw	r24, 0x02	; 2
    2fda:	81 f4       	brne	.+32     	; 0x2ffc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x5e6>
stop():
    2fdc:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    2fe0:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    2fe4:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    2fe8:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    2fec:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    2ff0:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    2ff4:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    2ff8:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    2ffc:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    3000:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    3004:	b1 01       	movw	r22, r2
    3006:	0e 94 88 38 	call	0x7110	; 0x7110 <__divmodhi4>
    300a:	6b 01       	movw	r12, r22
    300c:	7c 01       	movw	r14, r24
    300e:	60 93 92 28 	sts	0x2892, r22	; 0x802892 <SET_HOUR>
    3012:	70 93 93 28 	sts	0x2893, r23	; 0x802893 <SET_HOUR+0x1>
    3016:	80 93 60 28 	sts	0x2860, r24	; 0x802860 <REMAIN_MIN>
    301a:	90 93 61 28 	sts	0x2861, r25	; 0x802861 <REMAIN_MIN+0x1>
    301e:	20 e0       	ldi	r18, 0x00	; 0
    3020:	30 e0       	ldi	r19, 0x00	; 0
    3022:	40 e8       	ldi	r20, 0x80	; 128
    3024:	5f e3       	ldi	r21, 0x3F	; 63
    3026:	60 91 5c 28 	lds	r22, 0x285C	; 0x80285c <DISP_INC>
    302a:	70 91 5d 28 	lds	r23, 0x285D	; 0x80285d <DISP_INC+0x1>
    302e:	80 91 5e 28 	lds	r24, 0x285E	; 0x80285e <DISP_INC+0x2>
    3032:	90 91 5f 28 	lds	r25, 0x285F	; 0x80285f <DISP_INC+0x3>
    3036:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    303a:	60 93 5c 28 	sts	0x285C, r22	; 0x80285c <DISP_INC>
    303e:	70 93 5d 28 	sts	0x285D, r23	; 0x80285d <DISP_INC+0x1>
    3042:	80 93 5e 28 	sts	0x285E, r24	; 0x80285e <DISP_INC+0x2>
    3046:	90 93 5f 28 	sts	0x285F, r25	; 0x80285f <DISP_INC+0x3>
    304a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    304e:	20 e0       	ldi	r18, 0x00	; 0
    3050:	30 e0       	ldi	r19, 0x00	; 0
    3052:	40 e8       	ldi	r20, 0x80	; 128
    3054:	5f e3       	ldi	r21, 0x3F	; 63
    3056:	60 91 aa 28 	lds	r22, 0x28AA	; 0x8028aa <RATE_OF_HEATING>
    305a:	70 91 ab 28 	lds	r23, 0x28AB	; 0x8028ab <RATE_OF_HEATING+0x1>
    305e:	80 91 ac 28 	lds	r24, 0x28AC	; 0x8028ac <RATE_OF_HEATING+0x2>
    3062:	90 91 ad 28 	lds	r25, 0x28AD	; 0x8028ad <RATE_OF_HEATING+0x3>
    3066:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    306a:	87 fd       	sbrc	r24, 7
    306c:	81 c5       	rjmp	.+2818   	; 0x3b70 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x115a>
    306e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	80 93 b4 28 	sts	0x28B4, r24	; 0x8028b4 <IN_ERROR>
    3078:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    307c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3080:	60 e0       	ldi	r22, 0x00	; 0
    3082:	8d e0       	ldi	r24, 0x0D	; 13
    3084:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3088:	c0 93 e7 28 	sts	0x28E7, r28	; 0x8028e7 <digits2>
    308c:	d0 93 e8 28 	sts	0x28E8, r29	; 0x8028e8 <digits2+0x1>
    3090:	89 e1       	ldi	r24, 0x19	; 25
    3092:	90 e0       	ldi	r25, 0x00	; 0
    3094:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3098:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    309c:	8a e1       	ldi	r24, 0x1A	; 26
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    30a4:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    30a8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    30ac:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    30b0:	8e e0       	ldi	r24, 0x0E	; 14
    30b2:	90 e0       	ldi	r25, 0x00	; 0
    30b4:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    30b8:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    30bc:	8d e0       	ldi	r24, 0x0D	; 13
    30be:	90 e0       	ldi	r25, 0x00	; 0
    30c0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    30c4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    30c8:	80 e1       	ldi	r24, 0x10	; 16
    30ca:	90 e0       	ldi	r25, 0x00	; 0
    30cc:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    30d0:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    30d4:	8e e1       	ldi	r24, 0x1E	; 30
    30d6:	90 e0       	ldi	r25, 0x00	; 0
    30d8:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    30dc:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
interval():
    30e0:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    30e4:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    30e8:	89 2b       	or	r24, r25
    30ea:	09 f4       	brne	.+2      	; 0x30ee <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6d8>
    30ec:	37 c5       	rjmp	.+2670   	; 0x3b5c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1146>
    30ee:	88 ee       	ldi	r24, 0xE8	; 232
    30f0:	93 e0       	ldi	r25, 0x03	; 3
    30f2:	a0 e0       	ldi	r26, 0x00	; 0
    30f4:	b0 e0       	ldi	r27, 0x00	; 0
    30f6:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    30fa:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    30fe:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    3102:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    3106:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    310a:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    310e:	89 2b       	or	r24, r25
    3110:	09 f4       	brne	.+2      	; 0x3114 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6fe>
    3112:	29 c5       	rjmp	.+2642   	; 0x3b66 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1150>
    3114:	80 ed       	ldi	r24, 0xD0	; 208
    3116:	97 e0       	ldi	r25, 0x07	; 7
    3118:	a0 e0       	ldi	r26, 0x00	; 0
    311a:	b0 e0       	ldi	r27, 0x00	; 0
    311c:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    3120:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    3124:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    3128:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    312c:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    3130:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    3134:	89 2b       	or	r24, r25
    3136:	09 f0       	breq	.+2      	; 0x313a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x724>
    3138:	72 cd       	rjmp	.-1308   	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
BUZZ_TICK_START():
    313a:	8c e6       	ldi	r24, 0x6C	; 108
    313c:	9b e2       	ldi	r25, 0x2B	; 43
    313e:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3142:	00 93 b0 28 	sts	0x28B0, r16	; 0x8028b0 <REP>
    3146:	10 93 b1 28 	sts	0x28B1, r17	; 0x8028b1 <REP+0x1>
    314a:	69 cd       	rjmp	.-1326   	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    314c:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT2_0>
    3150:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT2_2>
    3154:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_2>
    3158:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    315c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3160:	10 92 b7 28 	sts	0x28B7, r1	; 0x8028b7 <FOR_REP2>
    3164:	10 92 b8 28 	sts	0x28B8, r1	; 0x8028b8 <FOR_REP2+0x1>
    3168:	10 92 b5 28 	sts	0x28B5, r1	; 0x8028b5 <FOR_REP>
    316c:	10 92 b6 28 	sts	0x28B6, r1	; 0x8028b6 <FOR_REP+0x1>
    3170:	10 92 b4 28 	sts	0x28B4, r1	; 0x8028b4 <IN_ERROR>
    3174:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <REP1>
    3178:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <REP1+0x1>
    317c:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <REP>
    3180:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <REP+0x1>
    3184:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <Blinking_Freq>
    3188:	10 92 ae 28 	sts	0x28AE, r1	; 0x8028ae <CAL2_START>
    318c:	10 92 08 29 	sts	0x2908, r1	; 0x802908 <PUMP_FLAG>
    3190:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <RATE_OF_HEATING>
    3194:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <RATE_OF_HEATING+0x1>
    3198:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <RATE_OF_HEATING+0x2>
    319c:	10 92 ad 28 	sts	0x28AD, r1	; 0x8028ad <RATE_OF_HEATING+0x3>
    31a0:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <EXECUTE_PID_LOOP>
    31a4:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    31a8:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    31ac:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    31b0:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    31b4:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <REPETATION_FLAG>
    31b8:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    31bc:	81 e0       	ldi	r24, 0x01	; 1
    31be:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <CHECK_RATE_OF_HEATING>
stop():
    31c2:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    31c6:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    31ca:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    31ce:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    31d2:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    31d6:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    31da:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
digitalWrite():
    31de:	60 e0       	ldi	r22, 0x00	; 0
    31e0:	89 e1       	ldi	r24, 0x19	; 25
    31e2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    31e6:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <Blink_LED_ON>
    31ea:	10 92 41 2b 	sts	0x2B41, r1	; 0x802b41 <Blink_LED_ON+0xb>
    31ee:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <Blink_LED_ON+0xc>
    31f2:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <Blink_LED_ON+0xd>
    31f6:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <Blink_LED_ON+0xe>
    31fa:	10 92 45 2b 	sts	0x2B45, r1	; 0x802b45 <Blink_LED_ON+0xf>
    31fe:	10 92 46 2b 	sts	0x2B46, r1	; 0x802b46 <Blink_LED_ON+0x10>
    3202:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Blink_LED_OFF>
    3206:	10 92 26 2b 	sts	0x2B26, r1	; 0x802b26 <Blink_LED_OFF+0xb>
    320a:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <Blink_LED_OFF+0xc>
    320e:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <Blink_LED_OFF+0xd>
    3212:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <Blink_LED_OFF+0xe>
    3216:	10 92 2a 2b 	sts	0x2B2A, r1	; 0x802b2a <Blink_LED_OFF+0xf>
    321a:	10 92 2b 2b 	sts	0x2B2B, r1	; 0x802b2b <Blink_LED_OFF+0x10>
digitalWrite():
    321e:	60 e0       	ldi	r22, 0x00	; 0
    3220:	88 e1       	ldi	r24, 0x18	; 24
    3222:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
stop():
    3226:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    322a:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    322e:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    3232:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    3236:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    323a:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    323e:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    3242:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    3246:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <checkTempRaised>
    324a:	81 11       	cpse	r24, r1
    324c:	f4 c0       	rjmp	.+488    	; 0x3436 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xa20>
    324e:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Process_Interrupt_flag>
    3252:	88 23       	and	r24, r24
    3254:	09 f4       	brne	.+2      	; 0x3258 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x842>
    3256:	93 c0       	rjmp	.+294    	; 0x337e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x968>
    3258:	80 91 a3 28 	lds	r24, 0x28A3	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    325c:	88 23       	and	r24, r24
    325e:	09 f4       	brne	.+2      	; 0x3262 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x84c>
    3260:	8e c0       	rjmp	.+284    	; 0x337e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x968>
    3262:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <z>
    3266:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <z+0x1>
    326a:	03 97       	sbiw	r24, 0x03	; 3
    326c:	0c f0       	brlt	.+2      	; 0x3270 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x85a>
    326e:	83 c0       	rjmp	.+262    	; 0x3376 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x960>
    3270:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    3274:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    3278:	cb 34       	cpi	r28, 0x4B	; 75
    327a:	d1 05       	cpc	r29, r1
    327c:	e4 f5       	brge	.+120    	; 0x32f6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8e0>
digitalWrite():
    327e:	61 e0       	ldi	r22, 0x01	; 1
    3280:	85 e1       	ldi	r24, 0x15	; 21
    3282:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    3286:	88 e1       	ldi	r24, 0x18	; 24
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    328e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    3292:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    3296:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    329a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    329e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    32a2:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    32a6:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
DISPLAY_DIGIT2():
    32aa:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    32ae:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    32b2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    32b6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    32ba:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    32be:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    32c2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    32c6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
digitalWrite():
    32ca:	60 e0       	ldi	r22, 0x00	; 0
    32cc:	8c e0       	ldi	r24, 0x0C	; 12
SET_SHORT_PRESS_FUNCTION():
    32ce:	df 91       	pop	r29
    32d0:	cf 91       	pop	r28
    32d2:	1f 91       	pop	r17
    32d4:	0f 91       	pop	r16
    32d6:	ff 90       	pop	r15
    32d8:	ef 90       	pop	r14
    32da:	df 90       	pop	r13
    32dc:	cf 90       	pop	r12
    32de:	bf 90       	pop	r11
    32e0:	af 90       	pop	r10
    32e2:	9f 90       	pop	r9
    32e4:	8f 90       	pop	r8
    32e6:	7f 90       	pop	r7
    32e8:	6f 90       	pop	r6
    32ea:	5f 90       	pop	r5
    32ec:	4f 90       	pop	r4
    32ee:	3f 90       	pop	r3
    32f0:	2f 90       	pop	r2
digitalWrite():
    32f2:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <digitalWrite.part.2>
    32f6:	60 e0       	ldi	r22, 0x00	; 0
    32f8:	85 e1       	ldi	r24, 0x15	; 21
    32fa:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    32fe:	8b e0       	ldi	r24, 0x0B	; 11
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3306:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    330a:	21 e1       	ldi	r18, 0x11	; 17
    330c:	30 e0       	ldi	r19, 0x00	; 0
    330e:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    3312:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    3316:	87 e1       	ldi	r24, 0x17	; 23
    3318:	90 e0       	ldi	r25, 0x00	; 0
    331a:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    331e:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    3322:	8c e0       	ldi	r24, 0x0C	; 12
    3324:	90 e0       	ldi	r25, 0x00	; 0
    3326:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    332a:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    332e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    3332:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    3336:	80 e1       	ldi	r24, 0x10	; 16
    3338:	90 e0       	ldi	r25, 0x00	; 0
    333a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    333e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3342:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    3346:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    334a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    334e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    3352:	c7 39       	cpi	r28, 0x97	; 151
    3354:	d1 05       	cpc	r29, r1
    3356:	0c f4       	brge	.+2      	; 0x335a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x944>
    3358:	b8 cf       	rjmp	.-144    	; 0x32ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    335a:	80 91 a1 28 	lds	r24, 0x28A1	; 0x8028a1 <z>
    335e:	90 91 a2 28 	lds	r25, 0x28A2	; 0x8028a2 <z+0x1>
    3362:	01 96       	adiw	r24, 0x01	; 1
    3364:	80 93 a1 28 	sts	0x28A1, r24	; 0x8028a1 <z>
    3368:	90 93 a2 28 	sts	0x28A2, r25	; 0x8028a2 <z+0x1>
    336c:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    3370:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3374:	aa cf       	rjmp	.-172    	; 0x32ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    3376:	85 e0       	ldi	r24, 0x05	; 5
    3378:	80 93 19 29 	sts	0x2919, r24	; 0x802919 <ENTER_BUT>
    337c:	a6 cf       	rjmp	.-180    	; 0x32ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b4>
    337e:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3382:	81 11       	cpse	r24, r1
    3384:	3d c0       	rjmp	.+122    	; 0x3400 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9ea>
    3386:	c0 90 ff 28 	lds	r12, 0x28FF	; 0x8028ff <TEMP_DEG>
    338a:	d0 90 00 29 	lds	r13, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    338e:	e0 90 01 29 	lds	r14, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    3392:	f0 90 02 29 	lds	r15, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    3396:	2d ec       	ldi	r18, 0xCD	; 205
    3398:	3c ec       	ldi	r19, 0xCC	; 204
    339a:	47 ec       	ldi	r20, 0xC7	; 199
    339c:	52 e4       	ldi	r21, 0x42	; 66
    339e:	c7 01       	movw	r24, r14
    33a0:	b6 01       	movw	r22, r12
    33a2:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    33a6:	18 16       	cp	r1, r24
    33a8:	dc f4       	brge	.+54     	; 0x33e0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9ca>
    33aa:	20 e0       	ldi	r18, 0x00	; 0
    33ac:	30 e0       	ldi	r19, 0x00	; 0
    33ae:	40 e2       	ldi	r20, 0x20	; 32
    33b0:	51 e4       	ldi	r21, 0x41	; 65
    33b2:	c7 01       	movw	r24, r14
    33b4:	b6 01       	movw	r22, r12
    33b6:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    33ba:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    33be:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    33c2:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    33c6:	8a e0       	ldi	r24, 0x0A	; 10
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    33ce:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    33d2:	60 e0       	ldi	r22, 0x00	; 0
    33d4:	70 e0       	ldi	r23, 0x00	; 0
    33d6:	cb 01       	movw	r24, r22
    33d8:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
digitalWrite():
    33dc:	61 e0       	ldi	r22, 0x01	; 1
    33de:	76 cf       	rjmp	.-276    	; 0x32cc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x8b6>
SET_SHORT_PRESS_FUNCTION():
    33e0:	20 e0       	ldi	r18, 0x00	; 0
    33e2:	30 e0       	ldi	r19, 0x00	; 0
    33e4:	48 ec       	ldi	r20, 0xC8	; 200
    33e6:	52 e4       	ldi	r21, 0x42	; 66
    33e8:	c7 01       	movw	r24, r14
    33ea:	b6 01       	movw	r22, r12
    33ec:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    33f0:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    33f4:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    33f8:	81 e0       	ldi	r24, 0x01	; 1
    33fa:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    33fe:	e3 cf       	rjmp	.-58     	; 0x33c6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9b0>
    3400:	20 e0       	ldi	r18, 0x00	; 0
    3402:	30 e0       	ldi	r19, 0x00	; 0
    3404:	40 e2       	ldi	r20, 0x20	; 32
    3406:	51 e4       	ldi	r21, 0x41	; 65
    3408:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    340c:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3410:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3414:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    3418:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    341c:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    3420:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3424:	85 e1       	ldi	r24, 0x15	; 21
    3426:	90 e0       	ldi	r25, 0x00	; 0
    3428:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    342c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3430:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3434:	ce cf       	rjmp	.-100    	; 0x33d2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x9bc>
digitalWrite():
    3436:	60 e0       	ldi	r22, 0x00	; 0
    3438:	81 e2       	ldi	r24, 0x21	; 33
    343a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    343e:	61 e0       	ldi	r22, 0x01	; 1
    3440:	8d e1       	ldi	r24, 0x1D	; 29
    3442:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3446:	61 e0       	ldi	r22, 0x01	; 1
    3448:	8c e1       	ldi	r24, 0x1C	; 28
    344a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    344e:	61 e0       	ldi	r22, 0x01	; 1
    3450:	8b e1       	ldi	r24, 0x1B	; 27
    3452:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3456:	60 e0       	ldi	r22, 0x00	; 0
    3458:	8a e1       	ldi	r24, 0x1A	; 26
    345a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    345e:	60 e0       	ldi	r22, 0x00	; 0
    3460:	8d e0       	ldi	r24, 0x0D	; 13
    3462:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3466:	60 e0       	ldi	r22, 0x00	; 0
    3468:	8c e0       	ldi	r24, 0x0C	; 12
    346a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    346e:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    3472:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    3476:	c9 31       	cpi	r28, 0x19	; 25
    3478:	d1 05       	cpc	r29, r1
    347a:	3c f5       	brge	.+78     	; 0x34ca <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xab4>
digitalWrite():
    347c:	60 e0       	ldi	r22, 0x00	; 0
    347e:	85 e1       	ldi	r24, 0x15	; 21
    3480:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3484:	88 e1       	ldi	r24, 0x18	; 24
    3486:	90 e0       	ldi	r25, 0x00	; 0
    3488:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    348c:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3490:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3494:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3498:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    349c:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    34a0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    34a4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    34a8:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    34ac:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    34b0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    34b4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    34b8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    34bc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    34c0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    34c4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    34c8:	c4 ca       	rjmp	.-2680   	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
digitalWrite():
    34ca:	61 e0       	ldi	r22, 0x01	; 1
    34cc:	85 e1       	ldi	r24, 0x15	; 21
    34ce:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    34d2:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    34d6:	8c e0       	ldi	r24, 0x0C	; 12
    34d8:	90 e0       	ldi	r25, 0x00	; 0
    34da:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    34de:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    34e2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    34e6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    34ea:	81 e1       	ldi	r24, 0x11	; 17
    34ec:	90 e0       	ldi	r25, 0x00	; 0
    34ee:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    34f2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    34f6:	88 e1       	ldi	r24, 0x18	; 24
    34f8:	90 e0       	ldi	r25, 0x00	; 0
    34fa:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    34fe:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    3502:	85 e1       	ldi	r24, 0x15	; 21
    3504:	90 e0       	ldi	r25, 0x00	; 0
    3506:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    350a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    350e:	8d e0       	ldi	r24, 0x0D	; 13
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    3516:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    351a:	89 e1       	ldi	r24, 0x19	; 25
    351c:	90 e0       	ldi	r25, 0x00	; 0
    351e:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    3522:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    3526:	8a e1       	ldi	r24, 0x1A	; 26
    3528:	90 e0       	ldi	r25, 0x00	; 0
    352a:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    352e:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    3532:	e3 97       	sbiw	r28, 0x33	; 51
    3534:	0c f4       	brge	.+2      	; 0x3538 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb22>
    3536:	8d ca       	rjmp	.-2790   	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    3538:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    353c:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3540:	88 ca       	rjmp	.-2800   	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    3542:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3546:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
digitalWrite():
    354a:	60 e0       	ldi	r22, 0x00	; 0
    354c:	8d e1       	ldi	r24, 0x1D	; 29
    354e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3552:	61 e0       	ldi	r22, 0x01	; 1
    3554:	8c e0       	ldi	r24, 0x0C	; 12
    3556:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    355a:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    355e:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    3562:	49 97       	sbiw	r24, 0x19	; 25
    3564:	0c f0       	brlt	.+2      	; 0x3568 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb52>
    3566:	4d c0       	rjmp	.+154    	; 0x3602 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xbec>
    3568:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    356c:	81 11       	cpse	r24, r1
    356e:	42 c0       	rjmp	.+132    	; 0x35f4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xbde>
    3570:	88 e1       	ldi	r24, 0x18	; 24
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3578:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    357c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3580:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3584:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    3588:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    358c:	c3 97       	sbiw	r24, 0x33	; 51
    358e:	24 f0       	brlt	.+8      	; 0x3598 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb82>
    3590:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    3594:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3598:	8a e0       	ldi	r24, 0x0A	; 10
    359a:	90 e0       	ldi	r25, 0x00	; 0
    359c:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    35a0:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    35a4:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    35a8:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    35ac:	24 e6       	ldi	r18, 0x64	; 100
    35ae:	28 9f       	mul	r18, r24
    35b0:	b0 01       	movw	r22, r0
    35b2:	29 9f       	mul	r18, r25
    35b4:	70 0d       	add	r23, r0
    35b6:	11 24       	eor	r1, r1
    35b8:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    35bc:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    35c0:	68 0f       	add	r22, r24
    35c2:	79 1f       	adc	r23, r25
    35c4:	07 2e       	mov	r0, r23
    35c6:	00 0c       	add	r0, r0
    35c8:	88 0b       	sbc	r24, r24
    35ca:	99 0b       	sbc	r25, r25
    35cc:	df 91       	pop	r29
    35ce:	cf 91       	pop	r28
    35d0:	1f 91       	pop	r17
    35d2:	0f 91       	pop	r16
    35d4:	ff 90       	pop	r15
    35d6:	ef 90       	pop	r14
    35d8:	df 90       	pop	r13
    35da:	cf 90       	pop	r12
    35dc:	bf 90       	pop	r11
    35de:	af 90       	pop	r10
    35e0:	9f 90       	pop	r9
    35e2:	8f 90       	pop	r8
    35e4:	7f 90       	pop	r7
    35e6:	6f 90       	pop	r6
    35e8:	5f 90       	pop	r5
    35ea:	4f 90       	pop	r4
    35ec:	3f 90       	pop	r3
    35ee:	2f 90       	pop	r2
    35f0:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    35f4:	89 e1       	ldi	r24, 0x19	; 25
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    35fc:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    3600:	c1 cf       	rjmp	.-126    	; 0x3584 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb6e>
    3602:	c0 93 9e 28 	sts	0x289E, r28	; 0x80289e <DOT2_1>
    3606:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    360a:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    360e:	24 e6       	ldi	r18, 0x64	; 100
    3610:	28 9f       	mul	r18, r24
    3612:	b0 01       	movw	r22, r0
    3614:	29 9f       	mul	r18, r25
    3616:	70 0d       	add	r23, r0
    3618:	11 24       	eor	r1, r1
    361a:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    361e:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    3622:	4a e0       	ldi	r20, 0x0A	; 10
    3624:	42 9f       	mul	r20, r18
    3626:	c0 01       	movw	r24, r0
    3628:	43 9f       	mul	r20, r19
    362a:	90 0d       	add	r25, r0
    362c:	11 24       	eor	r1, r1
    362e:	68 0f       	add	r22, r24
    3630:	79 1f       	adc	r23, r25
    3632:	07 2e       	mov	r0, r23
    3634:	00 0c       	add	r0, r0
    3636:	88 0b       	sbc	r24, r24
    3638:	99 0b       	sbc	r25, r25
    363a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    363e:	a2 cf       	rjmp	.-188    	; 0x3584 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb6e>
    3640:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    3644:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    3648:	14 e6       	ldi	r17, 0x64	; 100
    364a:	18 9f       	mul	r17, r24
    364c:	b0 01       	movw	r22, r0
    364e:	19 9f       	mul	r17, r25
    3650:	70 0d       	add	r23, r0
    3652:	11 24       	eor	r1, r1
    3654:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    3658:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    365c:	68 0f       	add	r22, r24
    365e:	79 1f       	adc	r23, r25
    3660:	07 2e       	mov	r0, r23
    3662:	00 0c       	add	r0, r0
    3664:	88 0b       	sbc	r24, r24
    3666:	99 0b       	sbc	r25, r25
    3668:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    366c:	c0 91 9f 28 	lds	r28, 0x289F	; 0x80289f <i>
    3670:	d0 91 a0 28 	lds	r29, 0x28A0	; 0x8028a0 <i+0x1>
    3674:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3678:	81 11       	cpse	r24, r1
    367a:	38 c0       	rjmp	.+112    	; 0x36ec <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcd6>
    367c:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    3680:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    3684:	18 9f       	mul	r17, r24
    3686:	b0 01       	movw	r22, r0
    3688:	19 9f       	mul	r17, r25
    368a:	70 0d       	add	r23, r0
    368c:	11 24       	eor	r1, r1
    368e:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    3692:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    3696:	4a e0       	ldi	r20, 0x0A	; 10
    3698:	42 9f       	mul	r20, r18
    369a:	c0 01       	movw	r24, r0
    369c:	43 9f       	mul	r20, r19
    369e:	90 0d       	add	r25, r0
    36a0:	11 24       	eor	r1, r1
    36a2:	68 0f       	add	r22, r24
    36a4:	79 1f       	adc	r23, r25
    36a6:	07 2e       	mov	r0, r23
    36a8:	00 0c       	add	r0, r0
    36aa:	88 0b       	sbc	r24, r24
    36ac:	99 0b       	sbc	r25, r25
    36ae:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    36b2:	8a e0       	ldi	r24, 0x0A	; 10
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    36ba:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    36be:	81 e0       	ldi	r24, 0x01	; 1
    36c0:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    36c4:	69 97       	sbiw	r28, 0x19	; 25
    36c6:	54 f4       	brge	.+20     	; 0x36dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    36c8:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    36cc:	81 11       	cpse	r24, r1
    36ce:	90 c0       	rjmp	.+288    	; 0x37f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    36d0:	88 e1       	ldi	r24, 0x18	; 24
    36d2:	90 e0       	ldi	r25, 0x00	; 0
    36d4:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    36d8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    36dc:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    36e0:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    36e4:	c3 97       	sbiw	r24, 0x33	; 51
    36e6:	0c f0       	brlt	.+2      	; 0x36ea <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcd4>
    36e8:	27 cf       	rjmp	.-434    	; 0x3538 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xb22>
    36ea:	b3 c9       	rjmp	.-3226   	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    36ec:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    36f0:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    36f4:	2a e0       	ldi	r18, 0x0A	; 10
    36f6:	28 9f       	mul	r18, r24
    36f8:	b0 01       	movw	r22, r0
    36fa:	29 9f       	mul	r18, r25
    36fc:	70 0d       	add	r23, r0
    36fe:	11 24       	eor	r1, r1
    3700:	07 2e       	mov	r0, r23
    3702:	00 0c       	add	r0, r0
    3704:	88 0b       	sbc	r24, r24
    3706:	99 0b       	sbc	r25, r25
    3708:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    370c:	85 e1       	ldi	r24, 0x15	; 21
    370e:	90 e0       	ldi	r25, 0x00	; 0
    3710:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3714:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3718:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    371c:	69 97       	sbiw	r28, 0x19	; 25
    371e:	f4 f6       	brge	.-68     	; 0x36dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    3720:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    3724:	81 11       	cpse	r24, r1
    3726:	64 c0       	rjmp	.+200    	; 0x37f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    3728:	88 e1       	ldi	r24, 0x18	; 24
    372a:	90 e0       	ldi	r25, 0x00	; 0
    372c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3730:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3734:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3738:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    373c:	cb cf       	rjmp	.-106    	; 0x36d4 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcbe>
    373e:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3742:	81 11       	cpse	r24, r1
    3744:	3c c0       	rjmp	.+120    	; 0x37be <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xda8>
    3746:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    374a:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    374e:	24 e6       	ldi	r18, 0x64	; 100
    3750:	28 9f       	mul	r18, r24
    3752:	b0 01       	movw	r22, r0
    3754:	29 9f       	mul	r18, r25
    3756:	70 0d       	add	r23, r0
    3758:	11 24       	eor	r1, r1
    375a:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    375e:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    3762:	4a e0       	ldi	r20, 0x0A	; 10
    3764:	42 9f       	mul	r20, r18
    3766:	c0 01       	movw	r24, r0
    3768:	43 9f       	mul	r20, r19
    376a:	90 0d       	add	r25, r0
    376c:	11 24       	eor	r1, r1
    376e:	68 0f       	add	r22, r24
    3770:	79 1f       	adc	r23, r25
    3772:	07 2e       	mov	r0, r23
    3774:	00 0c       	add	r0, r0
    3776:	88 0b       	sbc	r24, r24
    3778:	99 0b       	sbc	r25, r25
    377a:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    377e:	8a e0       	ldi	r24, 0x0A	; 10
    3780:	90 e0       	ldi	r25, 0x00	; 0
    3782:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3786:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    378a:	81 e0       	ldi	r24, 0x01	; 1
    378c:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3790:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    3794:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    3798:	49 97       	sbiw	r24, 0x19	; 25
    379a:	8c f5       	brge	.+98     	; 0x37fe <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xde8>
    379c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    37a0:	81 11       	cpse	r24, r1
    37a2:	26 c0       	rjmp	.+76     	; 0x37f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xdda>
    37a4:	88 e1       	ldi	r24, 0x18	; 24
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    37ac:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    37b0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    37b4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    37b8:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    37bc:	8f cf       	rjmp	.-226    	; 0x36dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    37be:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    37c2:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    37c6:	2a e0       	ldi	r18, 0x0A	; 10
    37c8:	28 9f       	mul	r18, r24
    37ca:	b0 01       	movw	r22, r0
    37cc:	29 9f       	mul	r18, r25
    37ce:	70 0d       	add	r23, r0
    37d0:	11 24       	eor	r1, r1
    37d2:	07 2e       	mov	r0, r23
    37d4:	00 0c       	add	r0, r0
    37d6:	88 0b       	sbc	r24, r24
    37d8:	99 0b       	sbc	r25, r25
    37da:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    37de:	85 e1       	ldi	r24, 0x15	; 21
    37e0:	90 e0       	ldi	r25, 0x00	; 0
    37e2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    37e6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    37ea:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    37ee:	d0 cf       	rjmp	.-96     	; 0x3790 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xd7a>
    37f0:	89 e1       	ldi	r24, 0x19	; 25
    37f2:	90 e0       	ldi	r25, 0x00	; 0
    37f4:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    37f8:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    37fc:	6f cf       	rjmp	.-290    	; 0x36dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    37fe:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    3802:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    3806:	08 2e       	mov	r0, r24
    3808:	00 0c       	add	r0, r0
    380a:	99 0b       	sbc	r25, r25
    380c:	fc 01       	movw	r30, r24
    380e:	ee 0f       	add	r30, r30
    3810:	ff 1f       	adc	r31, r31
    3812:	e3 5f       	subi	r30, 0xF3	; 243
    3814:	f6 4d       	sbci	r31, 0xD6	; 214
    3816:	20 81       	ld	r18, Z
    3818:	31 81       	ldd	r19, Z+1	; 0x01
    381a:	44 e6       	ldi	r20, 0x64	; 100
    381c:	42 9f       	mul	r20, r18
    381e:	b0 01       	movw	r22, r0
    3820:	43 9f       	mul	r20, r19
    3822:	70 0d       	add	r23, r0
    3824:	11 24       	eor	r1, r1
    3826:	88 0f       	add	r24, r24
    3828:	99 1f       	adc	r25, r25
    382a:	fc 01       	movw	r30, r24
    382c:	e1 5f       	subi	r30, 0xF1	; 241
    382e:	f6 4d       	sbci	r31, 0xD6	; 214
    3830:	80 81       	ld	r24, Z
    3832:	91 81       	ldd	r25, Z+1	; 0x01
    3834:	68 0f       	add	r22, r24
    3836:	79 1f       	adc	r23, r25
    3838:	07 2e       	mov	r0, r23
    383a:	00 0c       	add	r0, r0
    383c:	88 0b       	sbc	r24, r24
    383e:	99 0b       	sbc	r25, r25
    3840:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3844:	4b cf       	rjmp	.-362    	; 0x36dc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xcc6>
    3846:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    384a:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    384e:	81 11       	cpse	r24, r1
    3850:	7c c0       	rjmp	.+248    	; 0x394a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf34>
    3852:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <SET_VALUE+0x2>
    3856:	90 91 10 29 	lds	r25, 0x2910	; 0x802910 <SET_VALUE+0x3>
    385a:	24 e6       	ldi	r18, 0x64	; 100
    385c:	28 9f       	mul	r18, r24
    385e:	b0 01       	movw	r22, r0
    3860:	29 9f       	mul	r18, r25
    3862:	70 0d       	add	r23, r0
    3864:	11 24       	eor	r1, r1
    3866:	20 91 11 29 	lds	r18, 0x2911	; 0x802911 <SET_VALUE+0x4>
    386a:	30 91 12 29 	lds	r19, 0x2912	; 0x802912 <SET_VALUE+0x5>
    386e:	4a e0       	ldi	r20, 0x0A	; 10
    3870:	42 9f       	mul	r20, r18
    3872:	c0 01       	movw	r24, r0
    3874:	43 9f       	mul	r20, r19
    3876:	90 0d       	add	r25, r0
    3878:	11 24       	eor	r1, r1
    387a:	68 0f       	add	r22, r24
    387c:	79 1f       	adc	r23, r25
    387e:	07 2e       	mov	r0, r23
    3880:	00 0c       	add	r0, r0
    3882:	88 0b       	sbc	r24, r24
    3884:	99 0b       	sbc	r25, r25
    3886:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    388a:	8a e0       	ldi	r24, 0x0A	; 10
    388c:	90 e0       	ldi	r25, 0x00	; 0
    388e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3892:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3896:	81 e0       	ldi	r24, 0x01	; 1
    3898:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    389c:	80 91 13 29 	lds	r24, 0x2913	; 0x802913 <SET_VALUE+0x6>
    38a0:	90 91 14 29 	lds	r25, 0x2914	; 0x802914 <SET_VALUE+0x7>
    38a4:	24 e6       	ldi	r18, 0x64	; 100
    38a6:	28 9f       	mul	r18, r24
    38a8:	b0 01       	movw	r22, r0
    38aa:	29 9f       	mul	r18, r25
    38ac:	70 0d       	add	r23, r0
    38ae:	11 24       	eor	r1, r1
    38b0:	80 91 15 29 	lds	r24, 0x2915	; 0x802915 <SET_VALUE+0x8>
    38b4:	90 91 16 29 	lds	r25, 0x2916	; 0x802916 <SET_VALUE+0x9>
    38b8:	68 0f       	add	r22, r24
    38ba:	79 1f       	adc	r23, r25
    38bc:	07 2e       	mov	r0, r23
    38be:	00 0c       	add	r0, r0
    38c0:	88 0b       	sbc	r24, r24
    38c2:	99 0b       	sbc	r25, r25
    38c4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    38c8:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    38cc:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    38d0:	49 97       	sbiw	r24, 0x19	; 25
    38d2:	74 f4       	brge	.+28     	; 0x38f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeda>
    38d4:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    38d8:	81 11       	cpse	r24, r1
    38da:	50 c0       	rjmp	.+160    	; 0x397c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xf66>
    38dc:	88 e1       	ldi	r24, 0x18	; 24
    38de:	90 e0       	ldi	r25, 0x00	; 0
    38e0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    38e4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    38e8:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    38ec:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    38f0:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    38f4:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    38f8:	c3 97       	sbiw	r24, 0x33	; 51
    38fa:	24 f0       	brlt	.+8      	; 0x3904 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeee>
    38fc:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    3900:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    3904:	10 92 b2 28 	sts	0x28B2, r1	; 0x8028b2 <REP1>
    3908:	10 92 b3 28 	sts	0x28B3, r1	; 0x8028b3 <REP1+0x1>
    390c:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
    3910:	90 e0       	ldi	r25, 0x00	; 0
    3912:	80 93 17 29 	sts	0x2917, r24	; 0x802917 <SET_VALUE+0xa>
    3916:	90 93 18 29 	sts	0x2918, r25	; 0x802918 <SET_VALUE+0xb>
    391a:	81 e0       	ldi	r24, 0x01	; 1
    391c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <PUMP_FLAG>
    3920:	20 91 13 29 	lds	r18, 0x2913	; 0x802913 <SET_VALUE+0x6>
    3924:	30 91 14 29 	lds	r19, 0x2914	; 0x802914 <SET_VALUE+0x7>
    3928:	4c e3       	ldi	r20, 0x3C	; 60
    392a:	42 9f       	mul	r20, r18
    392c:	c0 01       	movw	r24, r0
    392e:	43 9f       	mul	r20, r19
    3930:	90 0d       	add	r25, r0
    3932:	11 24       	eor	r1, r1
    3934:	20 91 15 29 	lds	r18, 0x2915	; 0x802915 <SET_VALUE+0x8>
    3938:	30 91 16 29 	lds	r19, 0x2916	; 0x802916 <SET_VALUE+0x9>
    393c:	82 0f       	add	r24, r18
    393e:	93 1f       	adc	r25, r19
    3940:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    3944:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    3948:	84 c8       	rjmp	.-3832   	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>
    394a:	80 91 39 29 	lds	r24, 0x2939	; 0x802939 <SET_LONG_VALUE+0x1f>
    394e:	90 91 3a 29 	lds	r25, 0x293A	; 0x80293a <SET_LONG_VALUE+0x20>
    3952:	2a e0       	ldi	r18, 0x0A	; 10
    3954:	28 9f       	mul	r18, r24
    3956:	b0 01       	movw	r22, r0
    3958:	29 9f       	mul	r18, r25
    395a:	70 0d       	add	r23, r0
    395c:	11 24       	eor	r1, r1
    395e:	07 2e       	mov	r0, r23
    3960:	00 0c       	add	r0, r0
    3962:	88 0b       	sbc	r24, r24
    3964:	99 0b       	sbc	r25, r25
    3966:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    396a:	85 e1       	ldi	r24, 0x15	; 21
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3972:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3976:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    397a:	90 cf       	rjmp	.-224    	; 0x389c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xe86>
    397c:	89 e1       	ldi	r24, 0x19	; 25
    397e:	90 e0       	ldi	r25, 0x00	; 0
    3980:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    3984:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    3988:	b3 cf       	rjmp	.-154    	; 0x38f0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0xeda>
    398a:	be 01       	movw	r22, r28
    398c:	dd 0f       	add	r29, r29
    398e:	88 0b       	sbc	r24, r24
    3990:	99 0b       	sbc	r25, r25
    3992:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    3996:	6b 01       	movw	r12, r22
    3998:	7c 01       	movw	r14, r24
    399a:	20 e0       	ldi	r18, 0x00	; 0
    399c:	30 e0       	ldi	r19, 0x00	; 0
    399e:	40 e7       	ldi	r20, 0x70	; 112
    39a0:	51 e4       	ldi	r21, 0x41	; 65
    39a2:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    39a6:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    39aa:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    39ae:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    39b2:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    39b6:	9b 01       	movw	r18, r22
    39b8:	ac 01       	movw	r20, r24
    39ba:	c7 01       	movw	r24, r14
    39bc:	b6 01       	movw	r22, r12
    39be:	ea c8       	rjmp	.-3628   	; 0x2b94 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x17e>
    39c0:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <CHECK_RATE_OF_HEATING>
digitalWrite():
    39c4:	61 e0       	ldi	r22, 0x01	; 1
    39c6:	88 e1       	ldi	r24, 0x18	; 24
    39c8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    39cc:	80 91 fb 28 	lds	r24, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    39d0:	90 91 fc 28 	lds	r25, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    39d4:	a0 91 fd 28 	lds	r26, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    39d8:	b0 91 fe 28 	lds	r27, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    39dc:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <TEMP_VALUE_INITIAL>
    39e0:	90 93 8c 28 	sts	0x288C, r25	; 0x80288c <TEMP_VALUE_INITIAL+0x1>
    39e4:	a0 93 8d 28 	sts	0x288D, r26	; 0x80288d <TEMP_VALUE_INITIAL+0x2>
    39e8:	b0 93 8e 28 	sts	0x288E, r27	; 0x80288e <TEMP_VALUE_INITIAL+0x3>
    39ec:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    39f0:	60 93 87 28 	sts	0x2887, r22	; 0x802887 <START_COUNT_VALUE>
    39f4:	70 93 88 28 	sts	0x2888, r23	; 0x802888 <START_COUNT_VALUE+0x1>
    39f8:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <START_COUNT_VALUE+0x2>
    39fc:	90 93 8a 28 	sts	0x288A, r25	; 0x80288a <START_COUNT_VALUE+0x3>
    3a00:	e2 c8       	rjmp	.-3644   	; 0x2bc6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1b0>
    3a02:	60 91 94 28 	lds	r22, 0x2894	; 0x802894 <SET_TEMP_FAH>
    3a06:	70 91 95 28 	lds	r23, 0x2895	; 0x802895 <SET_TEMP_FAH+0x1>
    3a0a:	07 2e       	mov	r0, r23
    3a0c:	00 0c       	add	r0, r0
    3a0e:	88 0b       	sbc	r24, r24
    3a10:	99 0b       	sbc	r25, r25
    3a12:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    3a16:	60 93 83 28 	sts	0x2883, r22	; 0x802883 <PID_SETPOINT_To_Show>
    3a1a:	70 93 84 28 	sts	0x2884, r23	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    3a1e:	80 93 85 28 	sts	0x2885, r24	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    3a22:	90 93 86 28 	sts	0x2886, r25	; 0x802886 <PID_SETPOINT_To_Show+0x3>
    3a26:	20 e0       	ldi	r18, 0x00	; 0
    3a28:	30 e0       	ldi	r19, 0x00	; 0
    3a2a:	40 e0       	ldi	r20, 0x00	; 0
    3a2c:	52 e4       	ldi	r21, 0x42	; 66
    3a2e:	0e 94 6d 36 	call	0x6cda	; 0x6cda <__subsf3>
    3a32:	26 e6       	ldi	r18, 0x66	; 102
    3a34:	36 e6       	ldi	r19, 0x66	; 102
    3a36:	46 ee       	ldi	r20, 0xE6	; 230
    3a38:	5f e3       	ldi	r21, 0x3F	; 63
    3a3a:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    3a3e:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    3a42:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    3a46:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    3a4a:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    3a4e:	d5 c8       	rjmp	.-3670   	; 0x2bfa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1e4>
    3a50:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <checkTempRaised>
    3a54:	18 c9       	rjmp	.-3536   	; 0x2c86 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x270>
    3a56:	40 91 64 28 	lds	r20, 0x2864	; 0x802864 <TO_CHECK_REPETATION_WITHIN_TIME>
    3a5a:	50 91 65 28 	lds	r21, 0x2865	; 0x802865 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    3a5e:	60 91 66 28 	lds	r22, 0x2866	; 0x802866 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    3a62:	70 91 67 28 	lds	r23, 0x2867	; 0x802867 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    3a66:	26 01       	movw	r4, r12
    3a68:	37 01       	movw	r6, r14
    3a6a:	44 1a       	sub	r4, r20
    3a6c:	55 0a       	sbc	r5, r21
    3a6e:	66 0a       	sbc	r6, r22
    3a70:	77 0a       	sbc	r7, r23
    3a72:	b3 01       	movw	r22, r6
    3a74:	a2 01       	movw	r20, r4
    3a76:	40 39       	cpi	r20, 0x90	; 144
    3a78:	5f 45       	sbci	r21, 0x5F	; 95
    3a7a:	61 40       	sbci	r22, 0x01	; 1
    3a7c:	71 05       	cpc	r23, r1
    3a7e:	30 f4       	brcc	.+12     	; 0x3a8c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1076>
    3a80:	01 96       	adiw	r24, 0x01	; 1
    3a82:	80 93 68 28 	sts	0x2868, r24	; 0x802868 <COOLING_CYCLE_COUNT>
    3a86:	90 93 69 28 	sts	0x2869, r25	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    3a8a:	2e ca       	rjmp	.-2980   	; 0x2ee8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3a8c:	10 92 68 28 	sts	0x2868, r1	; 0x802868 <COOLING_CYCLE_COUNT>
    3a90:	10 92 69 28 	sts	0x2869, r1	; 0x802869 <COOLING_CYCLE_COUNT+0x1>
    3a94:	29 ca       	rjmp	.-2990   	; 0x2ee8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3a96:	80 91 76 28 	lds	r24, 0x2876	; 0x802876 <CAL_OF_10_MIN>
    3a9a:	90 91 77 28 	lds	r25, 0x2877	; 0x802877 <CAL_OF_10_MIN+0x1>
    3a9e:	a0 91 78 28 	lds	r26, 0x2878	; 0x802878 <CAL_OF_10_MIN+0x2>
    3aa2:	b0 91 79 28 	lds	r27, 0x2879	; 0x802879 <CAL_OF_10_MIN+0x3>
    3aa6:	26 01       	movw	r4, r12
    3aa8:	37 01       	movw	r6, r14
    3aaa:	48 1a       	sub	r4, r24
    3aac:	59 0a       	sbc	r5, r25
    3aae:	6a 0a       	sbc	r6, r26
    3ab0:	7b 0a       	sbc	r7, r27
    3ab2:	d3 01       	movw	r26, r6
    3ab4:	c2 01       	movw	r24, r4
    3ab6:	81 3a       	cpi	r24, 0xA1	; 161
    3ab8:	98 46       	sbci	r25, 0x68	; 104
    3aba:	a6 40       	sbci	r26, 0x06	; 6
    3abc:	b1 05       	cpc	r27, r1
    3abe:	08 f4       	brcc	.+2      	; 0x3ac2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10ac>
    3ac0:	13 ca       	rjmp	.-3034   	; 0x2ee8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3ac2:	81 e0       	ldi	r24, 0x01	; 1
    3ac4:	80 93 8f 28 	sts	0x288F, r24	; 0x80288f <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    3ac8:	60 e0       	ldi	r22, 0x00	; 0
    3aca:	85 e1       	ldi	r24, 0x15	; 21
    3acc:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3ad0:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    3ad4:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <SET_MIN>
    3ad8:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <SET_MIN+0x1>
    3adc:	05 ca       	rjmp	.-3062   	; 0x2ee8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x4d2>
    3ade:	20 e0       	ldi	r18, 0x00	; 0
    3ae0:	30 e0       	ldi	r19, 0x00	; 0
    3ae2:	40 e8       	ldi	r20, 0x80	; 128
    3ae4:	5f e3       	ldi	r21, 0x3F	; 63
    3ae6:	c7 01       	movw	r24, r14
    3ae8:	b6 01       	movw	r22, r12
    3aea:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    3aee:	87 ff       	sbrs	r24, 7
    3af0:	19 ca       	rjmp	.-3022   	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3af2:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <CHECK_RATE_OF_HEATING>
    3af6:	88 23       	and	r24, r24
    3af8:	09 f4       	brne	.+2      	; 0x3afc <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10e6>
    3afa:	14 ca       	rjmp	.-3032   	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3afc:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <EXECUTE_PID_LOOP>
    3b00:	81 11       	cpse	r24, r1
    3b02:	07 c0       	rjmp	.+14     	; 0x3b12 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x10fc>
PID_Start():
    3b04:	8f ea       	ldi	r24, 0xAF	; 175
    3b06:	9a e2       	ldi	r25, 0x2A	; 42
    3b08:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3b0c:	81 e0       	ldi	r24, 0x01	; 1
    3b0e:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <EXECUTE_PID_LOOP>
    3b12:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
    3b16:	06 ca       	rjmp	.-3060   	; 0x2f24 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x50e>
    3b18:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3b1c:	a7 01       	movw	r20, r14
    3b1e:	96 01       	movw	r18, r12
    3b20:	81 11       	cpse	r24, r1
    3b22:	09 c0       	rjmp	.+18     	; 0x3b36 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1120>
    3b24:	c5 01       	movw	r24, r10
    3b26:	b4 01       	movw	r22, r8
    3b28:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    3b2c:	87 ff       	sbrs	r24, 7
    3b2e:	0e ca       	rjmp	.-3044   	; 0x2f4c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x536>
    3b30:	10 92 62 28 	sts	0x2862, r1	; 0x802862 <COUNTDOWN_START>
    3b34:	0e ca       	rjmp	.-3044   	; 0x2f52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x53c>
    3b36:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    3b3a:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3b3e:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3b42:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    3b46:	f0 cf       	rjmp	.-32     	; 0x3b28 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1112>
    3b48:	80 e8       	ldi	r24, 0x80	; 128
    3b4a:	9a e1       	ldi	r25, 0x1A	; 26
    3b4c:	a6 e0       	ldi	r26, 0x06	; 6
    3b4e:	b0 e0       	ldi	r27, 0x00	; 0
    3b50:	13 ca       	rjmp	.-3034   	; 0x2f78 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x562>
    3b52:	80 e0       	ldi	r24, 0x00	; 0
    3b54:	95 e3       	ldi	r25, 0x35	; 53
    3b56:	ac e0       	ldi	r26, 0x0C	; 12
    3b58:	b0 e0       	ldi	r27, 0x00	; 0
    3b5a:	21 ca       	rjmp	.-3006   	; 0x2f9e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x588>
    3b5c:	80 e4       	ldi	r24, 0x40	; 64
    3b5e:	92 e4       	ldi	r25, 0x42	; 66
    3b60:	af e0       	ldi	r26, 0x0F	; 15
    3b62:	b0 e0       	ldi	r27, 0x00	; 0
    3b64:	c8 ca       	rjmp	.-2672   	; 0x30f6 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x6e0>
    3b66:	80 e8       	ldi	r24, 0x80	; 128
    3b68:	94 e8       	ldi	r25, 0x84	; 132
    3b6a:	ae e1       	ldi	r26, 0x1E	; 30
    3b6c:	b0 e0       	ldi	r27, 0x00	; 0
    3b6e:	d6 ca       	rjmp	.-2644   	; 0x311c <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x706>
    3b70:	80 91 08 29 	lds	r24, 0x2908	; 0x802908 <PUMP_FLAG>
    3b74:	88 23       	and	r24, r24
    3b76:	09 f4       	brne	.+2      	; 0x3b7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1164>
    3b78:	4d c0       	rjmp	.+154    	; 0x3c14 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11fe>
    3b7a:	80 91 07 29 	lds	r24, 0x2907	; 0x802907 <select_product_type>
    3b7e:	88 23       	and	r24, r24
    3b80:	09 f4       	brne	.+2      	; 0x3b84 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x116e>
    3b82:	48 c0       	rjmp	.+144    	; 0x3c14 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11fe>
    3b84:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3b88:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    3b8c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
digitalWrite():
    3b90:	60 e0       	ldi	r22, 0x00	; 0
    3b92:	8c e0       	ldi	r24, 0x0C	; 12
    3b94:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3b98:	8c e0       	ldi	r24, 0x0C	; 12
    3b9a:	90 e0       	ldi	r25, 0x00	; 0
    3b9c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    3ba0:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    3ba4:	80 e1       	ldi	r24, 0x10	; 16
    3ba6:	90 e0       	ldi	r25, 0x00	; 0
    3ba8:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    3bac:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    3bb0:	89 e1       	ldi	r24, 0x19	; 25
    3bb2:	90 e0       	ldi	r25, 0x00	; 0
    3bb4:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    3bb8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    3bbc:	81 e1       	ldi	r24, 0x11	; 17
    3bbe:	90 e0       	ldi	r25, 0x00	; 0
    3bc0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3bc4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    3bc8:	80 91 17 29 	lds	r24, 0x2917	; 0x802917 <SET_VALUE+0xa>
    3bcc:	90 91 18 29 	lds	r25, 0x2918	; 0x802918 <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    3bd0:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    3bd4:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    3bd8:	89 2b       	or	r24, r25
    3bda:	79 f4       	brne	.+30     	; 0x3bfa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11e4>
DISPLAY_DIGIT1():
    3bdc:	c0 93 f1 28 	sts	0x28F1, r28	; 0x8028f1 <digits1+0x2>
    3be0:	d0 93 f2 28 	sts	0x28F2, r29	; 0x8028f2 <digits1+0x3>
    3be4:	c0 93 f3 28 	sts	0x28F3, r28	; 0x8028f3 <digits1+0x4>
    3be8:	d0 93 f4 28 	sts	0x28F4, r29	; 0x8028f4 <digits1+0x5>
    3bec:	88 e1       	ldi	r24, 0x18	; 24
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    3bf4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    3bf8:	12 c8       	rjmp	.-4060   	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3bfa:	84 e1       	ldi	r24, 0x14	; 20
    3bfc:	90 e0       	ldi	r25, 0x00	; 0
    3bfe:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    3c02:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    3c06:	88 e1       	ldi	r24, 0x18	; 24
    3c08:	90 e0       	ldi	r25, 0x00	; 0
    3c0a:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    3c0e:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    3c12:	ee cf       	rjmp	.-36     	; 0x3bf0 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x11da>
SET_SHORT_PRESS_FUNCTION():
    3c14:	80 91 5a 28 	lds	r24, 0x285A	; 0x80285a <TIMER_LED_BLINK>
    3c18:	90 91 5b 28 	lds	r25, 0x285B	; 0x80285b <TIMER_LED_BLINK+0x1>
    3c1c:	9c 01       	movw	r18, r24
    3c1e:	2f 5f       	subi	r18, 0xFF	; 255
    3c20:	3f 4f       	sbci	r19, 0xFF	; 255
    3c22:	20 93 5a 28 	sts	0x285A, r18	; 0x80285a <TIMER_LED_BLINK>
    3c26:	30 93 5b 28 	sts	0x285B, r19	; 0x80285b <TIMER_LED_BLINK+0x1>
digitalWrite():
    3c2a:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    3c2c:	28 39       	cpi	r18, 0x98	; 152
    3c2e:	38 40       	sbci	r19, 0x08	; 8
    3c30:	38 f0       	brcs	.+14     	; 0x3c40 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x122a>
    3c32:	87 59       	subi	r24, 0x97	; 151
    3c34:	98 40       	sbci	r25, 0x08	; 8
    3c36:	88 39       	cpi	r24, 0x98	; 152
    3c38:	98 40       	sbci	r25, 0x08	; 8
    3c3a:	08 f0       	brcs	.+2      	; 0x3c3e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1228>
    3c3c:	55 c0       	rjmp	.+170    	; 0x3ce8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12d2>
digitalWrite():
    3c3e:	60 e0       	ldi	r22, 0x00	; 0
    3c40:	8c e0       	ldi	r24, 0x0C	; 12
    3c42:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3c46:	80 91 b4 28 	lds	r24, 0x28B4	; 0x8028b4 <IN_ERROR>
    3c4a:	88 23       	and	r24, r24
    3c4c:	71 f0       	breq	.+28     	; 0x3c6a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1254>
stop():
    3c4e:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    3c52:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    3c56:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    3c5a:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    3c5e:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    3c62:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <BUZZ_TICK1+0xf>
    3c66:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    3c6a:	84 e6       	ldi	r24, 0x64	; 100
    3c6c:	8c 9d       	mul	r24, r12
    3c6e:	b0 01       	movw	r22, r0
    3c70:	8d 9d       	mul	r24, r13
    3c72:	70 0d       	add	r23, r0
    3c74:	11 24       	eor	r1, r1
    3c76:	6e 0d       	add	r22, r14
    3c78:	7f 1d       	adc	r23, r15
    3c7a:	07 2e       	mov	r0, r23
    3c7c:	00 0c       	add	r0, r0
    3c7e:	88 0b       	sbc	r24, r24
    3c80:	99 0b       	sbc	r25, r25
    3c82:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    3c86:	8a ec       	ldi	r24, 0xCA	; 202
    3c88:	9a e2       	ldi	r25, 0x2A	; 42
    3c8a:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    3c8e:	80 91 82 28 	lds	r24, 0x2882	; 0x802882 <Alternate_Display_Flag>
    3c92:	88 23       	and	r24, r24
    3c94:	f1 f1       	breq	.+124    	; 0x3d12 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12fc>
digitalWrite():
    3c96:	61 e0       	ldi	r22, 0x01	; 1
    3c98:	8c e1       	ldi	r24, 0x1C	; 28
    3c9a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3c9e:	60 e0       	ldi	r22, 0x00	; 0
    3ca0:	8d e1       	ldi	r24, 0x1D	; 29
    3ca2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3ca6:	60 91 83 28 	lds	r22, 0x2883	; 0x802883 <PID_SETPOINT_To_Show>
    3caa:	70 91 84 28 	lds	r23, 0x2884	; 0x802884 <PID_SETPOINT_To_Show+0x1>
    3cae:	80 91 85 28 	lds	r24, 0x2885	; 0x802885 <PID_SETPOINT_To_Show+0x2>
    3cb2:	90 91 86 28 	lds	r25, 0x2886	; 0x802886 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    3cb6:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3cba:	21 11       	cpse	r18, r1
    3cbc:	1a c0       	rjmp	.+52     	; 0x3cf2 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12dc>
    3cbe:	20 e0       	ldi	r18, 0x00	; 0
    3cc0:	30 e0       	ldi	r19, 0x00	; 0
    3cc2:	48 ec       	ldi	r20, 0xC8	; 200
    3cc4:	52 e4       	ldi	r21, 0x42	; 66
    3cc6:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    3cca:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    3cce:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3cd2:	8a e0       	ldi	r24, 0x0A	; 10
    3cd4:	90 e0       	ldi	r25, 0x00	; 0
    3cd6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3cda:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3cde:	81 e0       	ldi	r24, 0x01	; 1
    3ce0:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3ce4:	0c 94 0f 16 	jmp	0x2c1e	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3ce8:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <TIMER_LED_BLINK>
    3cec:	10 92 5b 28 	sts	0x285B, r1	; 0x80285b <TIMER_LED_BLINK+0x1>
    3cf0:	aa cf       	rjmp	.-172    	; 0x3c46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1230>
    3cf2:	20 e0       	ldi	r18, 0x00	; 0
    3cf4:	30 e0       	ldi	r19, 0x00	; 0
    3cf6:	40 e2       	ldi	r20, 0x20	; 32
    3cf8:	51 e4       	ldi	r21, 0x41	; 65
    3cfa:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    3cfe:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    3d02:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3d06:	c0 93 ed 28 	sts	0x28ED, r28	; 0x8028ed <digits2+0x6>
    3d0a:	d0 93 ee 28 	sts	0x28EE, r29	; 0x8028ee <digits2+0x7>
    3d0e:	0c 94 0f 16 	jmp	0x2c1e	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
digitalWrite():
    3d12:	60 e0       	ldi	r22, 0x00	; 0
    3d14:	8c e1       	ldi	r24, 0x1C	; 28
    3d16:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    3d1a:	61 e0       	ldi	r22, 0x01	; 1
    3d1c:	8d e1       	ldi	r24, 0x1D	; 29
    3d1e:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3d22:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    3d26:	81 11       	cpse	r24, r1
    3d28:	38 c0       	rjmp	.+112    	; 0x3d9a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1384>
    3d2a:	c0 90 ff 28 	lds	r12, 0x28FF	; 0x8028ff <TEMP_DEG>
    3d2e:	d0 90 00 29 	lds	r13, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    3d32:	e0 90 01 29 	lds	r14, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    3d36:	f0 90 02 29 	lds	r15, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    3d3a:	2d ec       	ldi	r18, 0xCD	; 205
    3d3c:	3c ec       	ldi	r19, 0xCC	; 204
    3d3e:	47 ec       	ldi	r20, 0xC7	; 199
    3d40:	52 e4       	ldi	r21, 0x42	; 66
    3d42:	c7 01       	movw	r24, r14
    3d44:	b6 01       	movw	r22, r12
    3d46:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    3d4a:	18 16       	cp	r1, r24
    3d4c:	b4 f4       	brge	.+44     	; 0x3d7a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1364>
    3d4e:	20 e0       	ldi	r18, 0x00	; 0
    3d50:	30 e0       	ldi	r19, 0x00	; 0
    3d52:	40 e2       	ldi	r20, 0x20	; 32
    3d54:	51 e4       	ldi	r21, 0x41	; 65
    3d56:	c7 01       	movw	r24, r14
    3d58:	b6 01       	movw	r22, r12
    3d5a:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    3d5e:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    3d62:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3d66:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    3d6a:	8a e0       	ldi	r24, 0x0A	; 10
    3d6c:	90 e0       	ldi	r25, 0x00	; 0
    3d6e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    3d72:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    3d76:	0c 94 0f 16 	jmp	0x2c1e	; 0x2c1e <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x208>
    3d7a:	20 e0       	ldi	r18, 0x00	; 0
    3d7c:	30 e0       	ldi	r19, 0x00	; 0
    3d7e:	48 ec       	ldi	r20, 0xC8	; 200
    3d80:	52 e4       	ldi	r21, 0x42	; 66
    3d82:	c7 01       	movw	r24, r14
    3d84:	b6 01       	movw	r22, r12
    3d86:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    3d8a:	0e 94 3e 37 	call	0x6e7c	; 0x6e7c <__fixsfsi>
    3d8e:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    3d92:	81 e0       	ldi	r24, 0x01	; 1
    3d94:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    3d98:	e8 cf       	rjmp	.-48     	; 0x3d6a <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1354>
    3d9a:	20 e0       	ldi	r18, 0x00	; 0
    3d9c:	30 e0       	ldi	r19, 0x00	; 0
    3d9e:	40 e2       	ldi	r20, 0x20	; 32
    3da0:	51 e4       	ldi	r21, 0x41	; 65
    3da2:	60 91 ce 28 	lds	r22, 0x28CE	; 0x8028ce <TEMP_FAH>
    3da6:	70 91 cf 28 	lds	r23, 0x28CF	; 0x8028cf <TEMP_FAH+0x1>
    3daa:	80 91 d0 28 	lds	r24, 0x28D0	; 0x8028d0 <TEMP_FAH+0x2>
    3dae:	90 91 d1 28 	lds	r25, 0x28D1	; 0x8028d1 <TEMP_FAH+0x3>
    3db2:	a3 cf       	rjmp	.-186    	; 0x3cfa <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x12e4>
digitalWrite():
    3db4:	60 e0       	ldi	r22, 0x00	; 0
    3db6:	81 e2       	ldi	r24, 0x21	; 33
    3db8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    3dbc:	60 e0       	ldi	r22, 0x00	; 0
    3dbe:	80 ea       	ldi	r24, 0xA0	; 160
    3dc0:	90 e0       	ldi	r25, 0x00	; 0
    3dc2:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3dc6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
LED_On_Call():
    3dca:	8b e1       	ldi	r24, 0x1B	; 27
    3dcc:	9b e2       	ldi	r25, 0x2B	; 43
    3dce:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    3dd2:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
    3dd6:	60 e0       	ldi	r22, 0x00	; 0
    3dd8:	87 e8       	ldi	r24, 0x87	; 135
    3dda:	90 e0       	ldi	r25, 0x00	; 0
    3ddc:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
SET_SHORT_PRESS_FUNCTION():
    3de0:	60 91 56 28 	lds	r22, 0x2856	; 0x802856 <actualRunMin>
    3de4:	70 91 57 28 	lds	r23, 0x2857	; 0x802857 <actualRunMin+0x1>
    3de8:	80 91 58 28 	lds	r24, 0x2858	; 0x802858 <actualRunMin+0x2>
    3dec:	90 91 59 28 	lds	r25, 0x2859	; 0x802859 <actualRunMin+0x3>
    3df0:	2c e3       	ldi	r18, 0x3C	; 60
    3df2:	30 e0       	ldi	r19, 0x00	; 0
    3df4:	40 e0       	ldi	r20, 0x00	; 0
    3df6:	50 e0       	ldi	r21, 0x00	; 0
    3df8:	0e 94 9b 38 	call	0x7136	; 0x7136 <__udivmodsi4>
    3dfc:	69 01       	movw	r12, r18
    3dfe:	20 93 54 28 	sts	0x2854, r18	; 0x802854 <actualRunHours>
    3e02:	30 93 55 28 	sts	0x2855, r19	; 0x802855 <actualRunHours+0x1>
    3e06:	62 e5       	ldi	r22, 0x52	; 82
    3e08:	78 e2       	ldi	r23, 0x28	; 40
    3e0a:	88 e9       	ldi	r24, 0x98	; 152
    3e0c:	90 e0       	ldi	r25, 0x00	; 0
    3e0e:	0e 94 50 10 	call	0x20a0	; 0x20a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    3e12:	20 91 52 28 	lds	r18, 0x2852	; 0x802852 <processLog>
    3e16:	30 91 53 28 	lds	r19, 0x2853	; 0x802853 <processLog+0x1>
    3e1a:	2c 0d       	add	r18, r12
    3e1c:	3d 1d       	adc	r19, r13
    3e1e:	20 93 52 28 	sts	0x2852, r18	; 0x802852 <processLog>
    3e22:	30 93 53 28 	sts	0x2853, r19	; 0x802853 <processLog+0x1>
    3e26:	2f 30       	cpi	r18, 0x0F	; 15
    3e28:	37 42       	sbci	r19, 0x27	; 39
    3e2a:	68 f0       	brcs	.+26     	; 0x3e46 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x1430>
    3e2c:	80 91 50 28 	lds	r24, 0x2850	; 0x802850 <processLogNumberOfTimes>
    3e30:	90 91 51 28 	lds	r25, 0x2851	; 0x802851 <processLogNumberOfTimes+0x1>
    3e34:	01 96       	adiw	r24, 0x01	; 1
    3e36:	80 93 50 28 	sts	0x2850, r24	; 0x802850 <processLogNumberOfTimes>
    3e3a:	90 93 51 28 	sts	0x2851, r25	; 0x802851 <processLogNumberOfTimes+0x1>
    3e3e:	10 92 52 28 	sts	0x2852, r1	; 0x802852 <processLog>
    3e42:	10 92 53 28 	sts	0x2853, r1	; 0x802853 <processLog+0x1>
    3e46:	62 e5       	ldi	r22, 0x52	; 82
    3e48:	78 e2       	ldi	r23, 0x28	; 40
    3e4a:	88 e9       	ldi	r24, 0x98	; 152
    3e4c:	90 e0       	ldi	r25, 0x00	; 0
    3e4e:	0e 94 3a 11 	call	0x2274	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    3e52:	60 e5       	ldi	r22, 0x50	; 80
    3e54:	78 e2       	ldi	r23, 0x28	; 40
    3e56:	8a e9       	ldi	r24, 0x9A	; 154
    3e58:	90 e0       	ldi	r25, 0x00	; 0
    3e5a:	0e 94 3a 11 	call	0x2274	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    3e5e:	10 92 54 28 	sts	0x2854, r1	; 0x802854 <actualRunHours>
    3e62:	10 92 55 28 	sts	0x2855, r1	; 0x802855 <actualRunHours+0x1>
    3e66:	10 92 56 28 	sts	0x2856, r1	; 0x802856 <actualRunMin>
    3e6a:	10 92 57 28 	sts	0x2857, r1	; 0x802857 <actualRunMin+0x1>
    3e6e:	10 92 58 28 	sts	0x2858, r1	; 0x802858 <actualRunMin+0x2>
    3e72:	10 92 59 28 	sts	0x2859, r1	; 0x802859 <actualRunMin+0x3>
stop():
    3e76:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Alter_Disp>
    3e7a:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <Alter_Disp+0xb>
    3e7e:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <Alter_Disp+0xc>
    3e82:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <Alter_Disp+0xd>
    3e86:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <Alter_Disp+0xe>
    3e8a:	10 92 d9 2a 	sts	0x2AD9, r1	; 0x802ad9 <Alter_Disp+0xf>
    3e8e:	10 92 da 2a 	sts	0x2ADA, r1	; 0x802ada <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    3e92:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <Blinking_Freq>
    3e96:	83 30       	cpi	r24, 0x03	; 3
    3e98:	b8 f4       	brcc	.+46     	; 0x3ec8 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x14b2>
    3e9a:	84 ef       	ldi	r24, 0xF4	; 244
    3e9c:	91 e0       	ldi	r25, 0x01	; 1
    3e9e:	0e 94 02 0b 	call	0x1604	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
stop():
    3ea2:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    3ea6:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    3eaa:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    3eae:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    3eb2:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    3eb6:	10 92 be 2a 	sts	0x2ABE, r1	; 0x802abe <PID_EXE+0xf>
    3eba:	10 92 bf 2a 	sts	0x2ABF, r1	; 0x802abf <PID_EXE+0x10>
DISP_UPDATE():
    3ebe:	8d eb       	ldi	r24, 0xBD	; 189
    3ec0:	9b e2       	ldi	r25, 0x2B	; 43
    3ec2:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    3ec6:	e5 cf       	rjmp	.-54     	; 0x3e92 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x147c>
SET_SHORT_PRESS_FUNCTION():
    3ec8:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
    3ecc:	0c 94 29 15 	jmp	0x2a52	; 0x2a52 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]+0x3c>

00003ed0 <shiftOut.constprop.7>:
shiftOut():
    3ed0:	ef 92       	push	r14
    3ed2:	ff 92       	push	r15
    3ed4:	0f 93       	push	r16
    3ed6:	1f 93       	push	r17
    3ed8:	cf 93       	push	r28
    3eda:	df 93       	push	r29
    3edc:	e8 2e       	mov	r14, r24
    3ede:	f6 2e       	mov	r15, r22
    3ee0:	d0 e0       	ldi	r29, 0x00	; 0
    3ee2:	c0 e0       	ldi	r28, 0x00	; 0
    3ee4:	04 2f       	mov	r16, r20
    3ee6:	10 e0       	ldi	r17, 0x00	; 0
    3ee8:	b8 01       	movw	r22, r16
    3eea:	0c 2e       	mov	r0, r28
    3eec:	02 c0       	rjmp	.+4      	; 0x3ef2 <shiftOut.constprop.7+0x22>
    3eee:	75 95       	asr	r23
    3ef0:	67 95       	ror	r22
    3ef2:	0a 94       	dec	r0
    3ef4:	e2 f7       	brpl	.-8      	; 0x3eee <shiftOut.constprop.7+0x1e>
    3ef6:	61 70       	andi	r22, 0x01	; 1
    3ef8:	8e 2d       	mov	r24, r14
    3efa:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3efe:	61 e0       	ldi	r22, 0x01	; 1
    3f00:	8f 2d       	mov	r24, r15
    3f02:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f06:	60 e0       	ldi	r22, 0x00	; 0
    3f08:	8f 2d       	mov	r24, r15
    3f0a:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f0e:	21 96       	adiw	r28, 0x01	; 1
    3f10:	c8 30       	cpi	r28, 0x08	; 8
    3f12:	d1 05       	cpc	r29, r1
    3f14:	49 f7       	brne	.-46     	; 0x3ee8 <shiftOut.constprop.7+0x18>
    3f16:	df 91       	pop	r29
    3f18:	cf 91       	pop	r28
    3f1a:	1f 91       	pop	r17
    3f1c:	0f 91       	pop	r16
    3f1e:	ff 90       	pop	r15
    3f20:	ef 90       	pop	r14
    3f22:	08 95       	ret

00003f24 <DISP_REFRESH()>:
DISP_REFRESH():
    3f24:	0f 93       	push	r16
    3f26:	1f 93       	push	r17
    3f28:	cf 93       	push	r28
    3f2a:	df 93       	push	r29
    3f2c:	0e 94 c4 07 	call	0xf88	; 0xf88 <Eclass::cathode_high1() [clone .constprop.6]>
    3f30:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    3f34:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <Eclass::cathode_high2() [clone .constprop.4]>
    3f38:	60 e0       	ldi	r22, 0x00	; 0
    3f3a:	80 e2       	ldi	r24, 0x20	; 32
    3f3c:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3f40:	c0 91 35 28 	lds	r28, 0x2835	; 0x802835 <count2>
    3f44:	d0 91 36 28 	lds	r29, 0x2836	; 0x802836 <count2+0x1>
    3f48:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <DOT2_0>
    3f4c:	8e 01       	movw	r16, r28
    3f4e:	00 0f       	add	r16, r16
    3f50:	11 1f       	adc	r17, r17
    3f52:	88 23       	and	r24, r24
    3f54:	31 f0       	breq	.+12     	; 0x3f62 <DISP_REFRESH()+0x3e>
    3f56:	e0 91 e7 28 	lds	r30, 0x28E7	; 0x8028e7 <digits2>
    3f5a:	f0 91 e8 28 	lds	r31, 0x28E8	; 0x8028e8 <digits2+0x1>
    3f5e:	20 97       	sbiw	r28, 0x00	; 0
    3f60:	c1 f0       	breq	.+48     	; 0x3f92 <DISP_REFRESH()+0x6e>
    3f62:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <DOT2_1>
    3f66:	88 23       	and	r24, r24
    3f68:	39 f0       	breq	.+14     	; 0x3f78 <DISP_REFRESH()+0x54>
    3f6a:	e0 91 e9 28 	lds	r30, 0x28E9	; 0x8028e9 <digits2+0x2>
    3f6e:	f0 91 ea 28 	lds	r31, 0x28EA	; 0x8028ea <digits2+0x3>
    3f72:	c1 30       	cpi	r28, 0x01	; 1
    3f74:	d1 05       	cpc	r29, r1
    3f76:	69 f0       	breq	.+26     	; 0x3f92 <DISP_REFRESH()+0x6e>
    3f78:	80 91 bc 28 	lds	r24, 0x28BC	; 0x8028bc <DOT2_2>
    3f7c:	88 23       	and	r24, r24
    3f7e:	09 f4       	brne	.+2      	; 0x3f82 <DISP_REFRESH()+0x5e>
    3f80:	80 c0       	rjmp	.+256    	; 0x4082 <__RODATA_PM_OFFSET__+0x82>
    3f82:	c2 30       	cpi	r28, 0x02	; 2
    3f84:	d1 05       	cpc	r29, r1
    3f86:	09 f0       	breq	.+2      	; 0x3f8a <DISP_REFRESH()+0x66>
    3f88:	7c c0       	rjmp	.+248    	; 0x4082 <__RODATA_PM_OFFSET__+0x82>
    3f8a:	e0 91 eb 28 	lds	r30, 0x28EB	; 0x8028eb <digits2+0x4>
    3f8e:	f0 91 ec 28 	lds	r31, 0x28EC	; 0x8028ec <digits2+0x5>
    3f92:	e8 5b       	subi	r30, 0xB8	; 184
    3f94:	fd 44       	sbci	r31, 0x4D	; 77
    3f96:	40 81       	ld	r20, Z
    3f98:	41 60       	ori	r20, 0x01	; 1
    3f9a:	6e e1       	ldi	r22, 0x1E	; 30
    3f9c:	8f e1       	ldi	r24, 0x1F	; 31
    3f9e:	98 df       	rcall	.-208    	; 0x3ed0 <shiftOut.constprop.7>
    3fa0:	f8 01       	movw	r30, r16
    3fa2:	ec 5c       	subi	r30, 0xCC	; 204
    3fa4:	fd 44       	sbci	r31, 0x4D	; 77
    3fa6:	60 e0       	ldi	r22, 0x00	; 0
    3fa8:	80 81       	ld	r24, Z
    3faa:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3fae:	61 e0       	ldi	r22, 0x01	; 1
    3fb0:	80 e2       	ldi	r24, 0x20	; 32
    3fb2:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3fb6:	21 96       	adiw	r28, 0x01	; 1
    3fb8:	c4 30       	cpi	r28, 0x04	; 4
    3fba:	d1 05       	cpc	r29, r1
    3fbc:	0c f0       	brlt	.+2      	; 0x3fc0 <DISP_REFRESH()+0x9c>
    3fbe:	6b c0       	rjmp	.+214    	; 0x4096 <__RODATA_PM_OFFSET__+0x96>
    3fc0:	c0 93 35 28 	sts	0x2835, r28	; 0x802835 <count2>
    3fc4:	d0 93 36 28 	sts	0x2836, r29	; 0x802836 <count2+0x1>
DISPLAY_NUMBER1():
    3fc8:	0e 94 c4 07 	call	0xf88	; 0xf88 <Eclass::cathode_high1() [clone .constprop.6]>
    3fcc:	60 e0       	ldi	r22, 0x00	; 0
    3fce:	83 e1       	ldi	r24, 0x13	; 19
    3fd0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    3fd4:	c0 91 37 28 	lds	r28, 0x2837	; 0x802837 <count1>
    3fd8:	d0 91 38 28 	lds	r29, 0x2838	; 0x802838 <count1+0x1>
    3fdc:	80 91 ba 28 	lds	r24, 0x28BA	; 0x8028ba <DOT1_0>
    3fe0:	8e 01       	movw	r16, r28
    3fe2:	00 0f       	add	r16, r16
    3fe4:	11 1f       	adc	r17, r17
    3fe6:	88 23       	and	r24, r24
    3fe8:	31 f0       	breq	.+12     	; 0x3ff6 <DISP_REFRESH()+0xd2>
    3fea:	e0 91 ef 28 	lds	r30, 0x28EF	; 0x8028ef <digits1>
    3fee:	f0 91 f0 28 	lds	r31, 0x28F0	; 0x8028f0 <digits1+0x1>
    3ff2:	20 97       	sbiw	r28, 0x00	; 0
    3ff4:	c1 f0       	breq	.+48     	; 0x4026 <__RODATA_PM_OFFSET__+0x26>
    3ff6:	80 91 b9 28 	lds	r24, 0x28B9	; 0x8028b9 <DOT1_1>
    3ffa:	88 23       	and	r24, r24
    3ffc:	39 f0       	breq	.+14     	; 0x400c <__RODATA_PM_OFFSET__+0xc>
    3ffe:	e0 91 f1 28 	lds	r30, 0x28F1	; 0x8028f1 <digits1+0x2>
    4002:	f0 91 f2 28 	lds	r31, 0x28F2	; 0x8028f2 <digits1+0x3>
    4006:	c1 30       	cpi	r28, 0x01	; 1
    4008:	d1 05       	cpc	r29, r1
    400a:	69 f0       	breq	.+26     	; 0x4026 <__RODATA_PM_OFFSET__+0x26>
    400c:	80 91 bb 28 	lds	r24, 0x28BB	; 0x8028bb <DOT1_2>
    4010:	88 23       	and	r24, r24
    4012:	09 f4       	brne	.+2      	; 0x4016 <__RODATA_PM_OFFSET__+0x16>
    4014:	45 c0       	rjmp	.+138    	; 0x40a0 <__RODATA_PM_OFFSET__+0xa0>
    4016:	c2 30       	cpi	r28, 0x02	; 2
    4018:	d1 05       	cpc	r29, r1
    401a:	09 f0       	breq	.+2      	; 0x401e <__RODATA_PM_OFFSET__+0x1e>
    401c:	41 c0       	rjmp	.+130    	; 0x40a0 <__RODATA_PM_OFFSET__+0xa0>
    401e:	e0 91 f3 28 	lds	r30, 0x28F3	; 0x8028f3 <digits1+0x4>
    4022:	f0 91 f4 28 	lds	r31, 0x28F4	; 0x8028f4 <digits1+0x5>
    4026:	e8 5b       	subi	r30, 0xB8	; 184
    4028:	fd 44       	sbci	r31, 0x4D	; 77
    402a:	40 81       	ld	r20, Z
    402c:	41 60       	ori	r20, 0x01	; 1
    402e:	64 e1       	ldi	r22, 0x14	; 20
    4030:	82 e1       	ldi	r24, 0x12	; 18
    4032:	4e df       	rcall	.-356    	; 0x3ed0 <shiftOut.constprop.7>
    4034:	f8 01       	movw	r30, r16
    4036:	e2 5c       	subi	r30, 0xC2	; 194
    4038:	fd 44       	sbci	r31, 0x4D	; 77
    403a:	60 e0       	ldi	r22, 0x00	; 0
    403c:	80 81       	ld	r24, Z
    403e:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4042:	61 e0       	ldi	r22, 0x01	; 1
    4044:	83 e1       	ldi	r24, 0x13	; 19
    4046:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    404a:	21 96       	adiw	r28, 0x01	; 1
    404c:	c4 30       	cpi	r28, 0x04	; 4
    404e:	d1 05       	cpc	r29, r1
    4050:	8c f5       	brge	.+98     	; 0x40b4 <__RODATA_PM_OFFSET__+0xb4>
    4052:	c0 93 37 28 	sts	0x2837, r28	; 0x802837 <count1>
    4056:	d0 93 38 28 	sts	0x2838, r29	; 0x802838 <count1+0x1>
Button_Tick_Update():
    405a:	88 e4       	ldi	r24, 0x48	; 72
    405c:	9a e2       	ldi	r25, 0x2A	; 42
    405e:	0e 94 1f 0b 	call	0x163e	; 0x163e <OneButton::tick()>
    4062:	89 e2       	ldi	r24, 0x29	; 41
    4064:	9a e2       	ldi	r25, 0x2A	; 42
    4066:	0e 94 1f 0b 	call	0x163e	; 0x163e <OneButton::tick()>
    406a:	8a e0       	ldi	r24, 0x0A	; 10
    406c:	9a e2       	ldi	r25, 0x2A	; 42
    406e:	0e 94 1f 0b 	call	0x163e	; 0x163e <OneButton::tick()>
    4072:	8b ee       	ldi	r24, 0xEB	; 235
    4074:	99 e2       	ldi	r25, 0x29	; 41
DISP_REFRESH():
    4076:	df 91       	pop	r29
    4078:	cf 91       	pop	r28
    407a:	1f 91       	pop	r17
    407c:	0f 91       	pop	r16
Button_Tick_Update():
    407e:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <OneButton::tick()>
DISPLAY_NUMBER2():
    4082:	f8 01       	movw	r30, r16
    4084:	e9 51       	subi	r30, 0x19	; 25
    4086:	f7 4d       	sbci	r31, 0xD7	; 215
    4088:	01 90       	ld	r0, Z+
    408a:	f0 81       	ld	r31, Z
    408c:	e0 2d       	mov	r30, r0
    408e:	e8 5b       	subi	r30, 0xB8	; 184
    4090:	fd 44       	sbci	r31, 0x4D	; 77
    4092:	40 81       	ld	r20, Z
    4094:	82 cf       	rjmp	.-252    	; 0x3f9a <DISP_REFRESH()+0x76>
    4096:	10 92 35 28 	sts	0x2835, r1	; 0x802835 <count2>
    409a:	10 92 36 28 	sts	0x2836, r1	; 0x802836 <count2+0x1>
    409e:	94 cf       	rjmp	.-216    	; 0x3fc8 <DISP_REFRESH()+0xa4>
DISPLAY_NUMBER1():
    40a0:	f8 01       	movw	r30, r16
    40a2:	e1 51       	subi	r30, 0x11	; 17
    40a4:	f7 4d       	sbci	r31, 0xD7	; 215
    40a6:	01 90       	ld	r0, Z+
    40a8:	f0 81       	ld	r31, Z
    40aa:	e0 2d       	mov	r30, r0
    40ac:	e8 5b       	subi	r30, 0xB8	; 184
    40ae:	fd 44       	sbci	r31, 0x4D	; 77
    40b0:	40 81       	ld	r20, Z
    40b2:	bd cf       	rjmp	.-134    	; 0x402e <__RODATA_PM_OFFSET__+0x2e>
    40b4:	10 92 37 28 	sts	0x2837, r1	; 0x802837 <count1>
    40b8:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <count1+0x1>
    40bc:	ce cf       	rjmp	.-100    	; 0x405a <__RODATA_PM_OFFSET__+0x5a>

000040be <__vector_32>:
__vector_32():
    40be:	1f 92       	push	r1
    40c0:	0f 92       	push	r0
    40c2:	0f b6       	in	r0, 0x3f	; 63
    40c4:	0f 92       	push	r0
    40c6:	11 24       	eor	r1, r1
    40c8:	2f 93       	push	r18
    40ca:	3f 93       	push	r19
    40cc:	4f 93       	push	r20
    40ce:	5f 93       	push	r21
    40d0:	6f 93       	push	r22
    40d2:	7f 93       	push	r23
    40d4:	8f 93       	push	r24
    40d6:	9f 93       	push	r25
    40d8:	af 93       	push	r26
    40da:	bf 93       	push	r27
    40dc:	ef 93       	push	r30
    40de:	ff 93       	push	r31
    40e0:	8e e4       	ldi	r24, 0x4E	; 78
    40e2:	99 e2       	ldi	r25, 0x29	; 41
    40e4:	0e 94 05 06 	call	0xc0a	; 0xc0a <UartClass::_tx_data_empty_irq()>
    40e8:	ff 91       	pop	r31
    40ea:	ef 91       	pop	r30
    40ec:	bf 91       	pop	r27
    40ee:	af 91       	pop	r26
    40f0:	9f 91       	pop	r25
    40f2:	8f 91       	pop	r24
    40f4:	7f 91       	pop	r23
    40f6:	6f 91       	pop	r22
    40f8:	5f 91       	pop	r21
    40fa:	4f 91       	pop	r20
    40fc:	3f 91       	pop	r19
    40fe:	2f 91       	pop	r18
    4100:	0f 90       	pop	r0
    4102:	0f be       	out	0x3f, r0	; 63
    4104:	0f 90       	pop	r0
    4106:	1f 90       	pop	r1
    4108:	18 95       	reti

0000410a <__vector_31>:
__vector_31():
    410a:	1f 92       	push	r1
    410c:	0f 92       	push	r0
    410e:	0f b6       	in	r0, 0x3f	; 63
    4110:	0f 92       	push	r0
    4112:	11 24       	eor	r1, r1
    4114:	2f 93       	push	r18
    4116:	8f 93       	push	r24
    4118:	9f 93       	push	r25
    411a:	ef 93       	push	r30
    411c:	ff 93       	push	r31
_rx_complete_irq():
    411e:	e0 91 5a 29 	lds	r30, 0x295A	; 0x80295a <Serial2+0xc>
    4122:	f0 91 5b 29 	lds	r31, 0x295B	; 0x80295b <Serial2+0xd>
    4126:	81 81       	ldd	r24, Z+1	; 0x01
    4128:	81 fd       	sbrc	r24, 1
    412a:	1b c0       	rjmp	.+54     	; 0x4162 <__vector_31+0x58>
    412c:	90 81       	ld	r25, Z
    412e:	80 91 64 29 	lds	r24, 0x2964	; 0x802964 <Serial2+0x16>
    4132:	8f 5f       	subi	r24, 0xFF	; 255
    4134:	8f 73       	andi	r24, 0x3F	; 63
    4136:	20 91 65 29 	lds	r18, 0x2965	; 0x802965 <Serial2+0x17>
    413a:	82 17       	cp	r24, r18
    413c:	41 f0       	breq	.+16     	; 0x414e <__vector_31+0x44>
    413e:	e0 91 64 29 	lds	r30, 0x2964	; 0x802964 <Serial2+0x16>
    4142:	f0 e0       	ldi	r31, 0x00	; 0
    4144:	e2 5b       	subi	r30, 0xB2	; 178
    4146:	f6 4d       	sbci	r31, 0xD6	; 214
    4148:	95 8f       	std	Z+29, r25	; 0x1d
    414a:	80 93 64 29 	sts	0x2964, r24	; 0x802964 <Serial2+0x16>
__vector_31():
    414e:	ff 91       	pop	r31
    4150:	ef 91       	pop	r30
    4152:	9f 91       	pop	r25
    4154:	8f 91       	pop	r24
    4156:	2f 91       	pop	r18
    4158:	0f 90       	pop	r0
    415a:	0f be       	out	0x3f, r0	; 63
    415c:	0f 90       	pop	r0
    415e:	1f 90       	pop	r1
    4160:	18 95       	reti
_rx_complete_irq():
    4162:	80 81       	ld	r24, Z
    4164:	f4 cf       	rjmp	.-24     	; 0x414e <__vector_31+0x44>

00004166 <__vector_25>:
__vector_25():
    4166:	1f 92       	push	r1
    4168:	0f 92       	push	r0
    416a:	0f b6       	in	r0, 0x3f	; 63
    416c:	0f 92       	push	r0
    416e:	11 24       	eor	r1, r1
    4170:	8f 93       	push	r24
    4172:	9f 93       	push	r25
    4174:	af 93       	push	r26
    4176:	bf 93       	push	r27
    4178:	80 91 39 28 	lds	r24, 0x2839	; 0x802839 <timer_millis>
    417c:	90 91 3a 28 	lds	r25, 0x283A	; 0x80283a <timer_millis+0x1>
    4180:	a0 91 3b 28 	lds	r26, 0x283B	; 0x80283b <timer_millis+0x2>
    4184:	b0 91 3c 28 	lds	r27, 0x283C	; 0x80283c <timer_millis+0x3>
    4188:	01 96       	adiw	r24, 0x01	; 1
    418a:	a1 1d       	adc	r26, r1
    418c:	b1 1d       	adc	r27, r1
    418e:	80 93 39 28 	sts	0x2839, r24	; 0x802839 <timer_millis>
    4192:	90 93 3a 28 	sts	0x283A, r25	; 0x80283a <timer_millis+0x1>
    4196:	a0 93 3b 28 	sts	0x283B, r26	; 0x80283b <timer_millis+0x2>
    419a:	b0 93 3c 28 	sts	0x283C, r27	; 0x80283c <timer_millis+0x3>
    419e:	81 e0       	ldi	r24, 0x01	; 1
    41a0:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    41a4:	bf 91       	pop	r27
    41a6:	af 91       	pop	r26
    41a8:	9f 91       	pop	r25
    41aa:	8f 91       	pop	r24
    41ac:	0f 90       	pop	r0
    41ae:	0f be       	out	0x3f, r0	; 63
    41b0:	0f 90       	pop	r0
    41b2:	1f 90       	pop	r1
    41b4:	18 95       	reti

000041b6 <__vector_7>:
__vector_7():
    41b6:	1f 92       	push	r1
    41b8:	0f 92       	push	r0
    41ba:	0f b6       	in	r0, 0x3f	; 63
    41bc:	0f 92       	push	r0
    41be:	11 24       	eor	r1, r1
    41c0:	2f 93       	push	r18
    41c2:	3f 93       	push	r19
    41c4:	4f 93       	push	r20
    41c6:	5f 93       	push	r21
    41c8:	6f 93       	push	r22
    41ca:	7f 93       	push	r23
    41cc:	8f 93       	push	r24
    41ce:	9f 93       	push	r25
    41d0:	af 93       	push	r26
    41d2:	bf 93       	push	r27
    41d4:	ef 93       	push	r30
    41d6:	ff 93       	push	r31
TICKER_UPDATE():
    41d8:	87 e8       	ldi	r24, 0x87	; 135
    41da:	9b e2       	ldi	r25, 0x2B	; 43
    41dc:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
PID_Tick_Update():
    41e0:	8f ea       	ldi	r24, 0xAF	; 175
    41e2:	9a e2       	ldi	r25, 0x2A	; 42
    41e4:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
Rtd_Temp_Update():
    41e8:	80 e0       	ldi	r24, 0x00	; 0
    41ea:	9b e2       	ldi	r25, 0x2B	; 43
    41ec:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
Rtd_Temp_Update_1():
    41f0:	85 ee       	ldi	r24, 0xE5	; 229
    41f2:	9a e2       	ldi	r25, 0x2A	; 42
    41f4:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
TICKER_UPDATE():
    41f8:	8c e6       	ldi	r24, 0x6C	; 108
    41fa:	9b e2       	ldi	r25, 0x2B	; 43
    41fc:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    4200:	81 e5       	ldi	r24, 0x51	; 81
    4202:	9b e2       	ldi	r25, 0x2B	; 43
    4204:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    4208:	86 e3       	ldi	r24, 0x36	; 54
    420a:	9b e2       	ldi	r25, 0x2B	; 43
    420c:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    4210:	8b e1       	ldi	r24, 0x1B	; 27
    4212:	9b e2       	ldi	r25, 0x2B	; 43
    4214:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
__vector_7():
    4218:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    421c:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    4220:	01 96       	adiw	r24, 0x01	; 1
    4222:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    4226:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
TIME_CAL():
    422a:	80 91 62 28 	lds	r24, 0x2862	; 0x802862 <COUNTDOWN_START>
    422e:	88 23       	and	r24, r24
    4230:	81 f1       	breq	.+96     	; 0x4292 <__vector_7+0xdc>
    4232:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <__data_end>
    4236:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <__data_end+0x1>
    423a:	01 96       	adiw	r24, 0x01	; 1
    423c:	80 93 18 28 	sts	0x2818, r24	; 0x802818 <__data_end>
    4240:	90 93 19 28 	sts	0x2819, r25	; 0x802819 <__data_end+0x1>
    4244:	80 3b       	cpi	r24, 0xB0	; 176
    4246:	9e 40       	sbci	r25, 0x0E	; 14
    4248:	21 f5       	brne	.+72     	; 0x4292 <__vector_7+0xdc>
    424a:	80 91 56 28 	lds	r24, 0x2856	; 0x802856 <actualRunMin>
    424e:	90 91 57 28 	lds	r25, 0x2857	; 0x802857 <actualRunMin+0x1>
    4252:	a0 91 58 28 	lds	r26, 0x2858	; 0x802858 <actualRunMin+0x2>
    4256:	b0 91 59 28 	lds	r27, 0x2859	; 0x802859 <actualRunMin+0x3>
    425a:	01 96       	adiw	r24, 0x01	; 1
    425c:	a1 1d       	adc	r26, r1
    425e:	b1 1d       	adc	r27, r1
    4260:	80 93 56 28 	sts	0x2856, r24	; 0x802856 <actualRunMin>
    4264:	90 93 57 28 	sts	0x2857, r25	; 0x802857 <actualRunMin+0x1>
    4268:	a0 93 58 28 	sts	0x2858, r26	; 0x802858 <actualRunMin+0x2>
    426c:	b0 93 59 28 	sts	0x2859, r27	; 0x802859 <actualRunMin+0x3>
    4270:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <SET_MIN>
    4274:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <SET_MIN+0x1>
    4278:	01 97       	sbiw	r24, 0x01	; 1
    427a:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <SET_MIN>
    427e:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <SET_MIN+0x1>
    4282:	10 92 18 28 	sts	0x2818, r1	; 0x802818 <__data_end>
    4286:	10 92 19 28 	sts	0x2819, r1	; 0x802819 <__data_end+0x1>
    428a:	89 2b       	or	r24, r25
    428c:	11 f4       	brne	.+4      	; 0x4292 <__vector_7+0xdc>
    428e:	10 92 62 28 	sts	0x2862, r1	; 0x802862 <COUNTDOWN_START>
__vector_7():
    4292:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    4296:	88 23       	and	r24, r24
    4298:	79 f0       	breq	.+30     	; 0x42b8 <__vector_7+0x102>
    429a:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    429e:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    42a2:	42 97       	sbiw	r24, 0x12	; 18
    42a4:	49 f4       	brne	.+18     	; 0x42b8 <__vector_7+0x102>
    42a6:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <currentMillis>
    42aa:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <currentMillis+0x1>
    42ae:	01 96       	adiw	r24, 0x01	; 1
    42b0:	80 93 3d 28 	sts	0x283D, r24	; 0x80283d <currentMillis>
    42b4:	90 93 3e 28 	sts	0x283E, r25	; 0x80283e <currentMillis+0x1>
    42b8:	81 e0       	ldi	r24, 0x01	; 1
    42ba:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    42be:	ff 91       	pop	r31
    42c0:	ef 91       	pop	r30
    42c2:	bf 91       	pop	r27
    42c4:	af 91       	pop	r26
    42c6:	9f 91       	pop	r25
    42c8:	8f 91       	pop	r24
    42ca:	7f 91       	pop	r23
    42cc:	6f 91       	pop	r22
    42ce:	5f 91       	pop	r21
    42d0:	4f 91       	pop	r20
    42d2:	3f 91       	pop	r19
    42d4:	2f 91       	pop	r18
    42d6:	0f 90       	pop	r0
    42d8:	0f be       	out	0x3f, r0	; 63
    42da:	0f 90       	pop	r0
    42dc:	1f 90       	pop	r1
    42de:	18 95       	reti

000042e0 <global constructors keyed to 65535_0_Butn.cpp.o.4190>:
_GLOBAL__I_65535_0_Butn.cpp.o.4190():
    42e0:	4f 92       	push	r4
    42e2:	5f 92       	push	r5
    42e4:	6f 92       	push	r6
    42e6:	7f 92       	push	r7
    42e8:	8f 92       	push	r8
    42ea:	9f 92       	push	r9
    42ec:	af 92       	push	r10
    42ee:	bf 92       	push	r11
    42f0:	cf 92       	push	r12
    42f2:	df 92       	push	r13
    42f4:	ef 92       	push	r14
    42f6:	ff 92       	push	r15
    42f8:	10 92 50 29 	sts	0x2950, r1	; 0x802950 <Serial2+0x2>
    42fc:	10 92 51 29 	sts	0x2951, r1	; 0x802951 <Serial2+0x3>
    4300:	88 ee       	ldi	r24, 0xE8	; 232
    4302:	93 e0       	ldi	r25, 0x03	; 3
    4304:	a0 e0       	ldi	r26, 0x00	; 0
    4306:	b0 e0       	ldi	r27, 0x00	; 0
    4308:	80 93 52 29 	sts	0x2952, r24	; 0x802952 <Serial2+0x4>
    430c:	90 93 53 29 	sts	0x2953, r25	; 0x802953 <Serial2+0x5>
    4310:	a0 93 54 29 	sts	0x2954, r26	; 0x802954 <Serial2+0x6>
    4314:	b0 93 55 29 	sts	0x2955, r27	; 0x802955 <Serial2+0x7>
    4318:	82 e9       	ldi	r24, 0x92	; 146
    431a:	93 eb       	ldi	r25, 0xB3	; 179
    431c:	80 93 4e 29 	sts	0x294E, r24	; 0x80294e <Serial2>
    4320:	90 93 4f 29 	sts	0x294F, r25	; 0x80294f <Serial2+0x1>
    4324:	80 e4       	ldi	r24, 0x40	; 64
    4326:	98 e0       	ldi	r25, 0x08	; 8
    4328:	80 93 5a 29 	sts	0x295A, r24	; 0x80295a <Serial2+0xc>
    432c:	90 93 5b 29 	sts	0x295B, r25	; 0x80295b <Serial2+0xd>
    4330:	83 e2       	ldi	r24, 0x23	; 35
    4332:	80 93 5c 29 	sts	0x295C, r24	; 0x80295c <Serial2+0xe>
    4336:	82 e2       	ldi	r24, 0x22	; 34
    4338:	80 93 5d 29 	sts	0x295D, r24	; 0x80295d <Serial2+0xf>
    433c:	10 92 5e 29 	sts	0x295E, r1	; 0x80295e <Serial2+0x10>
    4340:	87 e2       	ldi	r24, 0x27	; 39
    4342:	80 93 5f 29 	sts	0x295F, r24	; 0x80295f <Serial2+0x11>
    4346:	86 e2       	ldi	r24, 0x26	; 38
    4348:	80 93 60 29 	sts	0x2960, r24	; 0x802960 <Serial2+0x12>
    434c:	80 e1       	ldi	r24, 0x10	; 16
    434e:	80 93 61 29 	sts	0x2961, r24	; 0x802961 <Serial2+0x13>
    4352:	10 92 62 29 	sts	0x2962, r1	; 0x802962 <Serial2+0x14>
    4356:	10 92 63 29 	sts	0x2963, r1	; 0x802963 <Serial2+0x15>
    435a:	10 92 64 29 	sts	0x2964, r1	; 0x802964 <Serial2+0x16>
    435e:	10 92 65 29 	sts	0x2965, r1	; 0x802965 <Serial2+0x17>
    4362:	10 92 66 29 	sts	0x2966, r1	; 0x802966 <Serial2+0x18>
    4366:	10 92 67 29 	sts	0x2967, r1	; 0x802967 <Serial2+0x19>
    436a:	80 e2       	ldi	r24, 0x20	; 32
    436c:	80 93 68 29 	sts	0x2968, r24	; 0x802968 <Serial2+0x1a>
    4370:	10 92 69 29 	sts	0x2969, r1	; 0x802969 <Serial2+0x1b>
    4374:	10 92 6a 29 	sts	0x296A, r1	; 0x80296a <Serial2+0x1c>
    4378:	82 e0       	ldi	r24, 0x02	; 2
    437a:	90 e0       	ldi	r25, 0x00	; 0
    437c:	80 93 c6 2b 	sts	0x2BC6, r24	; 0x802bc6 <DISP+0x9>
    4380:	90 93 c7 2b 	sts	0x2BC7, r25	; 0x802bc7 <DISP+0xa>
    4384:	80 e8       	ldi	r24, 0x80	; 128
    4386:	9c e0       	ldi	r25, 0x0C	; 12
    4388:	a0 e0       	ldi	r26, 0x00	; 0
    438a:	b0 e0       	ldi	r27, 0x00	; 0
    438c:	80 93 be 2b 	sts	0x2BBE, r24	; 0x802bbe <DISP+0x1>
    4390:	90 93 bf 2b 	sts	0x2BBF, r25	; 0x802bbf <DISP+0x2>
    4394:	a0 93 c0 2b 	sts	0x2BC0, r26	; 0x802bc0 <DISP+0x3>
    4398:	b0 93 c1 2b 	sts	0x2BC1, r27	; 0x802bc1 <DISP+0x4>
    439c:	10 92 c2 2b 	sts	0x2BC2, r1	; 0x802bc2 <DISP+0x5>
    43a0:	10 92 c3 2b 	sts	0x2BC3, r1	; 0x802bc3 <DISP+0x6>
    43a4:	10 92 c4 2b 	sts	0x2BC4, r1	; 0x802bc4 <DISP+0x7>
    43a8:	10 92 c5 2b 	sts	0x2BC5, r1	; 0x802bc5 <DISP+0x8>
    43ac:	82 e9       	ldi	r24, 0x92	; 146
    43ae:	9f e1       	ldi	r25, 0x1F	; 31
    43b0:	80 93 ce 2b 	sts	0x2BCE, r24	; 0x802bce <DISP+0x11>
    43b4:	90 93 cf 2b 	sts	0x2BCF, r25	; 0x802bcf <DISP+0x12>
    43b8:	10 92 bd 2b 	sts	0x2BBD, r1	; 0x802bbd <DISP>
    43bc:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <DISP+0x13>
    43c0:	10 92 d1 2b 	sts	0x2BD1, r1	; 0x802bd1 <DISP+0x14>
    43c4:	10 92 d2 2b 	sts	0x2BD2, r1	; 0x802bd2 <DISP+0x15>
    43c8:	10 92 d3 2b 	sts	0x2BD3, r1	; 0x802bd3 <DISP+0x16>
    43cc:	10 92 c8 2b 	sts	0x2BC8, r1	; 0x802bc8 <DISP+0xb>
    43d0:	10 92 c9 2b 	sts	0x2BC9, r1	; 0x802bc9 <DISP+0xc>
    43d4:	10 92 ca 2b 	sts	0x2BCA, r1	; 0x802bca <DISP+0xd>
    43d8:	10 92 cb 2b 	sts	0x2BCB, r1	; 0x802bcb <DISP+0xe>
    43dc:	10 92 ab 2b 	sts	0x2BAB, r1	; 0x802bab <VersionDisplay+0x9>
    43e0:	10 92 ac 2b 	sts	0x2BAC, r1	; 0x802bac <VersionDisplay+0xa>
    43e4:	80 e4       	ldi	r24, 0x40	; 64
    43e6:	88 2e       	mov	r8, r24
    43e8:	82 e4       	ldi	r24, 0x42	; 66
    43ea:	98 2e       	mov	r9, r24
    43ec:	8f e0       	ldi	r24, 0x0F	; 15
    43ee:	a8 2e       	mov	r10, r24
    43f0:	b1 2c       	mov	r11, r1
    43f2:	80 92 a3 2b 	sts	0x2BA3, r8	; 0x802ba3 <VersionDisplay+0x1>
    43f6:	90 92 a4 2b 	sts	0x2BA4, r9	; 0x802ba4 <VersionDisplay+0x2>
    43fa:	a0 92 a5 2b 	sts	0x2BA5, r10	; 0x802ba5 <VersionDisplay+0x3>
    43fe:	b0 92 a6 2b 	sts	0x2BA6, r11	; 0x802ba6 <VersionDisplay+0x4>
    4402:	c1 2c       	mov	r12, r1
    4404:	d1 2c       	mov	r13, r1
    4406:	76 01       	movw	r14, r12
    4408:	c3 94       	inc	r12
    440a:	c0 92 a7 2b 	sts	0x2BA7, r12	; 0x802ba7 <VersionDisplay+0x5>
    440e:	d0 92 a8 2b 	sts	0x2BA8, r13	; 0x802ba8 <VersionDisplay+0x6>
    4412:	e0 92 a9 2b 	sts	0x2BA9, r14	; 0x802ba9 <VersionDisplay+0x7>
    4416:	f0 92 aa 2b 	sts	0x2BAA, r15	; 0x802baa <VersionDisplay+0x8>
    441a:	85 e8       	ldi	r24, 0x85	; 133
    441c:	91 e0       	ldi	r25, 0x01	; 1
    441e:	80 93 b3 2b 	sts	0x2BB3, r24	; 0x802bb3 <VersionDisplay+0x11>
    4422:	90 93 b4 2b 	sts	0x2BB4, r25	; 0x802bb4 <VersionDisplay+0x12>
    4426:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <VersionDisplay>
    442a:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <VersionDisplay+0x13>
    442e:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <VersionDisplay+0x14>
    4432:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <VersionDisplay+0x15>
    4436:	10 92 b8 2b 	sts	0x2BB8, r1	; 0x802bb8 <VersionDisplay+0x16>
    443a:	10 92 ad 2b 	sts	0x2BAD, r1	; 0x802bad <VersionDisplay+0xb>
    443e:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <VersionDisplay+0xc>
    4442:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <VersionDisplay+0xd>
    4446:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <VersionDisplay+0xe>
    444a:	63 e2       	ldi	r22, 0x23	; 35
    444c:	70 e0       	ldi	r23, 0x00	; 0
    444e:	88 e4       	ldi	r24, 0x48	; 72
    4450:	9a e2       	ldi	r25, 0x2A	; 42
    4452:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4456:	65 e2       	ldi	r22, 0x25	; 37
    4458:	70 e0       	ldi	r23, 0x00	; 0
    445a:	89 e2       	ldi	r24, 0x29	; 41
    445c:	9a e2       	ldi	r25, 0x2A	; 42
    445e:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    4462:	64 e2       	ldi	r22, 0x24	; 36
    4464:	70 e0       	ldi	r23, 0x00	; 0
    4466:	8a e0       	ldi	r24, 0x0A	; 10
    4468:	9a e2       	ldi	r25, 0x2A	; 42
    446a:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    446e:	62 e2       	ldi	r22, 0x22	; 34
    4470:	70 e0       	ldi	r23, 0x00	; 0
    4472:	8b ee       	ldi	r24, 0xEB	; 235
    4474:	99 e2       	ldi	r25, 0x29	; 41
    4476:	0e 94 91 07 	call	0xf22	; 0xf22 <OneButton::OneButton(int, int) [clone .constprop.13]>
    447a:	10 92 90 2b 	sts	0x2B90, r1	; 0x802b90 <BUZZ+0x9>
    447e:	10 92 91 2b 	sts	0x2B91, r1	; 0x802b91 <BUZZ+0xa>
    4482:	80 ea       	ldi	r24, 0xA0	; 160
    4484:	96 e8       	ldi	r25, 0x86	; 134
    4486:	a1 e0       	ldi	r26, 0x01	; 1
    4488:	b0 e0       	ldi	r27, 0x00	; 0
    448a:	80 93 88 2b 	sts	0x2B88, r24	; 0x802b88 <BUZZ+0x1>
    448e:	90 93 89 2b 	sts	0x2B89, r25	; 0x802b89 <BUZZ+0x2>
    4492:	a0 93 8a 2b 	sts	0x2B8A, r26	; 0x802b8a <BUZZ+0x3>
    4496:	b0 93 8b 2b 	sts	0x2B8B, r27	; 0x802b8b <BUZZ+0x4>
    449a:	c0 92 8c 2b 	sts	0x2B8C, r12	; 0x802b8c <BUZZ+0x5>
    449e:	d0 92 8d 2b 	sts	0x2B8D, r13	; 0x802b8d <BUZZ+0x6>
    44a2:	e0 92 8e 2b 	sts	0x2B8E, r14	; 0x802b8e <BUZZ+0x7>
    44a6:	f0 92 8f 2b 	sts	0x2B8F, r15	; 0x802b8f <BUZZ+0x8>
    44aa:	8e e7       	ldi	r24, 0x7E	; 126
    44ac:	9d e0       	ldi	r25, 0x0D	; 13
    44ae:	80 93 98 2b 	sts	0x2B98, r24	; 0x802b98 <BUZZ+0x11>
    44b2:	90 93 99 2b 	sts	0x2B99, r25	; 0x802b99 <BUZZ+0x12>
    44b6:	10 92 87 2b 	sts	0x2B87, r1	; 0x802b87 <BUZZ>
    44ba:	10 92 9a 2b 	sts	0x2B9A, r1	; 0x802b9a <BUZZ+0x13>
    44be:	10 92 9b 2b 	sts	0x2B9B, r1	; 0x802b9b <BUZZ+0x14>
    44c2:	10 92 9c 2b 	sts	0x2B9C, r1	; 0x802b9c <BUZZ+0x15>
    44c6:	10 92 9d 2b 	sts	0x2B9D, r1	; 0x802b9d <BUZZ+0x16>
    44ca:	10 92 92 2b 	sts	0x2B92, r1	; 0x802b92 <BUZZ+0xb>
    44ce:	10 92 93 2b 	sts	0x2B93, r1	; 0x802b93 <BUZZ+0xc>
    44d2:	10 92 94 2b 	sts	0x2B94, r1	; 0x802b94 <BUZZ+0xd>
    44d6:	10 92 95 2b 	sts	0x2B95, r1	; 0x802b95 <BUZZ+0xe>
    44da:	10 92 75 2b 	sts	0x2B75, r1	; 0x802b75 <BUZZ_TICK1+0x9>
    44de:	10 92 76 2b 	sts	0x2B76, r1	; 0x802b76 <BUZZ_TICK1+0xa>
    44e2:	80 e8       	ldi	r24, 0x80	; 128
    44e4:	94 e8       	ldi	r25, 0x84	; 132
    44e6:	ae e1       	ldi	r26, 0x1E	; 30
    44e8:	b0 e0       	ldi	r27, 0x00	; 0
    44ea:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    44ee:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    44f2:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    44f6:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
    44fa:	10 92 71 2b 	sts	0x2B71, r1	; 0x802b71 <BUZZ_TICK1+0x5>
    44fe:	10 92 72 2b 	sts	0x2B72, r1	; 0x802b72 <BUZZ_TICK1+0x6>
    4502:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <BUZZ_TICK1+0x7>
    4506:	10 92 74 2b 	sts	0x2B74, r1	; 0x802b74 <BUZZ_TICK1+0x8>
    450a:	2a e8       	ldi	r18, 0x8A	; 138
    450c:	3d e0       	ldi	r19, 0x0D	; 13
    450e:	20 93 7d 2b 	sts	0x2B7D, r18	; 0x802b7d <BUZZ_TICK1+0x11>
    4512:	30 93 7e 2b 	sts	0x2B7E, r19	; 0x802b7e <BUZZ_TICK1+0x12>
    4516:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <BUZZ_TICK1>
    451a:	10 92 7f 2b 	sts	0x2B7F, r1	; 0x802b7f <BUZZ_TICK1+0x13>
    451e:	10 92 80 2b 	sts	0x2B80, r1	; 0x802b80 <BUZZ_TICK1+0x14>
    4522:	10 92 81 2b 	sts	0x2B81, r1	; 0x802b81 <BUZZ_TICK1+0x15>
    4526:	10 92 82 2b 	sts	0x2B82, r1	; 0x802b82 <BUZZ_TICK1+0x16>
    452a:	10 92 77 2b 	sts	0x2B77, r1	; 0x802b77 <BUZZ_TICK1+0xb>
    452e:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <BUZZ_TICK1+0xc>
    4532:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <BUZZ_TICK1+0xd>
    4536:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <BUZZ_TICK1+0xe>
    453a:	10 92 5a 2b 	sts	0x2B5A, r1	; 0x802b5a <BUZZ_TICK2+0x9>
    453e:	10 92 5b 2b 	sts	0x2B5B, r1	; 0x802b5b <BUZZ_TICK2+0xa>
    4542:	80 92 52 2b 	sts	0x2B52, r8	; 0x802b52 <BUZZ_TICK2+0x1>
    4546:	90 92 53 2b 	sts	0x2B53, r9	; 0x802b53 <BUZZ_TICK2+0x2>
    454a:	a0 92 54 2b 	sts	0x2B54, r10	; 0x802b54 <BUZZ_TICK2+0x3>
    454e:	b0 92 55 2b 	sts	0x2B55, r11	; 0x802b55 <BUZZ_TICK2+0x4>
    4552:	c0 92 56 2b 	sts	0x2B56, r12	; 0x802b56 <BUZZ_TICK2+0x5>
    4556:	d0 92 57 2b 	sts	0x2B57, r13	; 0x802b57 <BUZZ_TICK2+0x6>
    455a:	e0 92 58 2b 	sts	0x2B58, r14	; 0x802b58 <BUZZ_TICK2+0x7>
    455e:	f0 92 59 2b 	sts	0x2B59, r15	; 0x802b59 <BUZZ_TICK2+0x8>
    4562:	20 e9       	ldi	r18, 0x90	; 144
    4564:	3d e0       	ldi	r19, 0x0D	; 13
    4566:	20 93 62 2b 	sts	0x2B62, r18	; 0x802b62 <BUZZ_TICK2+0x11>
    456a:	30 93 63 2b 	sts	0x2B63, r19	; 0x802b63 <BUZZ_TICK2+0x12>
    456e:	10 92 51 2b 	sts	0x2B51, r1	; 0x802b51 <BUZZ_TICK2>
    4572:	10 92 64 2b 	sts	0x2B64, r1	; 0x802b64 <BUZZ_TICK2+0x13>
    4576:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <BUZZ_TICK2+0x14>
    457a:	10 92 66 2b 	sts	0x2B66, r1	; 0x802b66 <BUZZ_TICK2+0x15>
    457e:	10 92 67 2b 	sts	0x2B67, r1	; 0x802b67 <BUZZ_TICK2+0x16>
    4582:	10 92 5c 2b 	sts	0x2B5C, r1	; 0x802b5c <BUZZ_TICK2+0xb>
    4586:	10 92 5d 2b 	sts	0x2B5D, r1	; 0x802b5d <BUZZ_TICK2+0xc>
    458a:	10 92 5e 2b 	sts	0x2B5E, r1	; 0x802b5e <BUZZ_TICK2+0xd>
    458e:	10 92 5f 2b 	sts	0x2B5F, r1	; 0x802b5f <BUZZ_TICK2+0xe>
    4592:	10 92 3f 2b 	sts	0x2B3F, r1	; 0x802b3f <Blink_LED_ON+0x9>
    4596:	10 92 40 2b 	sts	0x2B40, r1	; 0x802b40 <Blink_LED_ON+0xa>
    459a:	40 ee       	ldi	r20, 0xE0	; 224
    459c:	53 e9       	ldi	r21, 0x93	; 147
    459e:	64 e0       	ldi	r22, 0x04	; 4
    45a0:	70 e0       	ldi	r23, 0x00	; 0
    45a2:	40 93 37 2b 	sts	0x2B37, r20	; 0x802b37 <Blink_LED_ON+0x1>
    45a6:	50 93 38 2b 	sts	0x2B38, r21	; 0x802b38 <Blink_LED_ON+0x2>
    45aa:	60 93 39 2b 	sts	0x2B39, r22	; 0x802b39 <Blink_LED_ON+0x3>
    45ae:	70 93 3a 2b 	sts	0x2B3A, r23	; 0x802b3a <Blink_LED_ON+0x4>
    45b2:	10 92 3b 2b 	sts	0x2B3B, r1	; 0x802b3b <Blink_LED_ON+0x5>
    45b6:	10 92 3c 2b 	sts	0x2B3C, r1	; 0x802b3c <Blink_LED_ON+0x6>
    45ba:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <Blink_LED_ON+0x7>
    45be:	10 92 3e 2b 	sts	0x2B3E, r1	; 0x802b3e <Blink_LED_ON+0x8>
    45c2:	20 eb       	ldi	r18, 0xB0	; 176
    45c4:	3d e0       	ldi	r19, 0x0D	; 13
    45c6:	20 93 47 2b 	sts	0x2B47, r18	; 0x802b47 <Blink_LED_ON+0x11>
    45ca:	30 93 48 2b 	sts	0x2B48, r19	; 0x802b48 <Blink_LED_ON+0x12>
    45ce:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <Blink_LED_ON>
    45d2:	10 92 49 2b 	sts	0x2B49, r1	; 0x802b49 <Blink_LED_ON+0x13>
    45d6:	10 92 4a 2b 	sts	0x2B4A, r1	; 0x802b4a <Blink_LED_ON+0x14>
    45da:	10 92 4b 2b 	sts	0x2B4B, r1	; 0x802b4b <Blink_LED_ON+0x15>
    45de:	10 92 4c 2b 	sts	0x2B4C, r1	; 0x802b4c <Blink_LED_ON+0x16>
    45e2:	10 92 41 2b 	sts	0x2B41, r1	; 0x802b41 <Blink_LED_ON+0xb>
    45e6:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <Blink_LED_ON+0xc>
    45ea:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <Blink_LED_ON+0xd>
    45ee:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <Blink_LED_ON+0xe>
    45f2:	10 92 24 2b 	sts	0x2B24, r1	; 0x802b24 <Blink_LED_OFF+0x9>
    45f6:	10 92 25 2b 	sts	0x2B25, r1	; 0x802b25 <Blink_LED_OFF+0xa>
    45fa:	40 ec       	ldi	r20, 0xC0	; 192
    45fc:	57 e2       	ldi	r21, 0x27	; 39
    45fe:	69 e0       	ldi	r22, 0x09	; 9
    4600:	70 e0       	ldi	r23, 0x00	; 0
    4602:	40 93 1c 2b 	sts	0x2B1C, r20	; 0x802b1c <Blink_LED_OFF+0x1>
    4606:	50 93 1d 2b 	sts	0x2B1D, r21	; 0x802b1d <Blink_LED_OFF+0x2>
    460a:	60 93 1e 2b 	sts	0x2B1E, r22	; 0x802b1e <Blink_LED_OFF+0x3>
    460e:	70 93 1f 2b 	sts	0x2B1F, r23	; 0x802b1f <Blink_LED_OFF+0x4>
    4612:	10 92 20 2b 	sts	0x2B20, r1	; 0x802b20 <Blink_LED_OFF+0x5>
    4616:	10 92 21 2b 	sts	0x2B21, r1	; 0x802b21 <Blink_LED_OFF+0x6>
    461a:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <Blink_LED_OFF+0x7>
    461e:	10 92 23 2b 	sts	0x2B23, r1	; 0x802b23 <Blink_LED_OFF+0x8>
    4622:	2a ea       	ldi	r18, 0xAA	; 170
    4624:	3d e0       	ldi	r19, 0x0D	; 13
    4626:	20 93 2c 2b 	sts	0x2B2C, r18	; 0x802b2c <Blink_LED_OFF+0x11>
    462a:	30 93 2d 2b 	sts	0x2B2D, r19	; 0x802b2d <Blink_LED_OFF+0x12>
    462e:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Blink_LED_OFF>
    4632:	10 92 2e 2b 	sts	0x2B2E, r1	; 0x802b2e <Blink_LED_OFF+0x13>
    4636:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <Blink_LED_OFF+0x14>
    463a:	10 92 30 2b 	sts	0x2B30, r1	; 0x802b30 <Blink_LED_OFF+0x15>
    463e:	10 92 31 2b 	sts	0x2B31, r1	; 0x802b31 <Blink_LED_OFF+0x16>
    4642:	10 92 26 2b 	sts	0x2B26, r1	; 0x802b26 <Blink_LED_OFF+0xb>
    4646:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <Blink_LED_OFF+0xc>
    464a:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <Blink_LED_OFF+0xd>
    464e:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <Blink_LED_OFF+0xe>
    4652:	10 92 09 2b 	sts	0x2B09, r1	; 0x802b09 <TEMP_UPDATE+0x9>
    4656:	10 92 0a 2b 	sts	0x2B0A, r1	; 0x802b0a <TEMP_UPDATE+0xa>
    465a:	48 e4       	ldi	r20, 0x48	; 72
    465c:	58 ee       	ldi	r21, 0xE8	; 232
    465e:	61 e0       	ldi	r22, 0x01	; 1
    4660:	70 e0       	ldi	r23, 0x00	; 0
    4662:	40 93 01 2b 	sts	0x2B01, r20	; 0x802b01 <TEMP_UPDATE+0x1>
    4666:	50 93 02 2b 	sts	0x2B02, r21	; 0x802b02 <TEMP_UPDATE+0x2>
    466a:	60 93 03 2b 	sts	0x2B03, r22	; 0x802b03 <TEMP_UPDATE+0x3>
    466e:	70 93 04 2b 	sts	0x2B04, r23	; 0x802b04 <TEMP_UPDATE+0x4>
    4672:	10 92 05 2b 	sts	0x2B05, r1	; 0x802b05 <TEMP_UPDATE+0x5>
    4676:	10 92 06 2b 	sts	0x2B06, r1	; 0x802b06 <TEMP_UPDATE+0x6>
    467a:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <TEMP_UPDATE+0x7>
    467e:	10 92 08 2b 	sts	0x2B08, r1	; 0x802b08 <TEMP_UPDATE+0x8>
    4682:	29 eb       	ldi	r18, 0xB9	; 185
    4684:	3d e0       	ldi	r19, 0x0D	; 13
    4686:	20 93 11 2b 	sts	0x2B11, r18	; 0x802b11 <TEMP_UPDATE+0x11>
    468a:	30 93 12 2b 	sts	0x2B12, r19	; 0x802b12 <TEMP_UPDATE+0x12>
    468e:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <TEMP_UPDATE>
    4692:	10 92 13 2b 	sts	0x2B13, r1	; 0x802b13 <TEMP_UPDATE+0x13>
    4696:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <TEMP_UPDATE+0x14>
    469a:	10 92 15 2b 	sts	0x2B15, r1	; 0x802b15 <TEMP_UPDATE+0x15>
    469e:	10 92 16 2b 	sts	0x2B16, r1	; 0x802b16 <TEMP_UPDATE+0x16>
    46a2:	10 92 0b 2b 	sts	0x2B0B, r1	; 0x802b0b <TEMP_UPDATE+0xb>
    46a6:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <TEMP_UPDATE+0xc>
    46aa:	10 92 0d 2b 	sts	0x2B0D, r1	; 0x802b0d <TEMP_UPDATE+0xd>
    46ae:	10 92 0e 2b 	sts	0x2B0E, r1	; 0x802b0e <TEMP_UPDATE+0xe>
    46b2:	10 92 ee 2a 	sts	0x2AEE, r1	; 0x802aee <TEMP_UPDATE_1+0x9>
    46b6:	10 92 ef 2a 	sts	0x2AEF, r1	; 0x802aef <TEMP_UPDATE_1+0xa>
    46ba:	48 eb       	ldi	r20, 0xB8	; 184
    46bc:	5f ef       	ldi	r21, 0xFF	; 255
    46be:	61 e0       	ldi	r22, 0x01	; 1
    46c0:	70 e0       	ldi	r23, 0x00	; 0
    46c2:	40 93 e6 2a 	sts	0x2AE6, r20	; 0x802ae6 <TEMP_UPDATE_1+0x1>
    46c6:	50 93 e7 2a 	sts	0x2AE7, r21	; 0x802ae7 <TEMP_UPDATE_1+0x2>
    46ca:	60 93 e8 2a 	sts	0x2AE8, r22	; 0x802ae8 <TEMP_UPDATE_1+0x3>
    46ce:	70 93 e9 2a 	sts	0x2AE9, r23	; 0x802ae9 <TEMP_UPDATE_1+0x4>
    46d2:	10 92 ea 2a 	sts	0x2AEA, r1	; 0x802aea <TEMP_UPDATE_1+0x5>
    46d6:	10 92 eb 2a 	sts	0x2AEB, r1	; 0x802aeb <TEMP_UPDATE_1+0x6>
    46da:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <TEMP_UPDATE_1+0x7>
    46de:	10 92 ed 2a 	sts	0x2AED, r1	; 0x802aed <TEMP_UPDATE_1+0x8>
    46e2:	22 e8       	ldi	r18, 0x82	; 130
    46e4:	3e e0       	ldi	r19, 0x0E	; 14
    46e6:	20 93 f6 2a 	sts	0x2AF6, r18	; 0x802af6 <TEMP_UPDATE_1+0x11>
    46ea:	30 93 f7 2a 	sts	0x2AF7, r19	; 0x802af7 <TEMP_UPDATE_1+0x12>
    46ee:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <TEMP_UPDATE_1>
    46f2:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <TEMP_UPDATE_1+0x13>
    46f6:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <TEMP_UPDATE_1+0x14>
    46fa:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <TEMP_UPDATE_1+0x15>
    46fe:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <TEMP_UPDATE_1+0x16>
    4702:	10 92 f0 2a 	sts	0x2AF0, r1	; 0x802af0 <TEMP_UPDATE_1+0xb>
    4706:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <TEMP_UPDATE_1+0xc>
    470a:	10 92 f2 2a 	sts	0x2AF2, r1	; 0x802af2 <TEMP_UPDATE_1+0xd>
    470e:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <TEMP_UPDATE_1+0xe>
    4712:	10 92 d3 2a 	sts	0x2AD3, r1	; 0x802ad3 <Alter_Disp+0x9>
    4716:	10 92 d4 2a 	sts	0x2AD4, r1	; 0x802ad4 <Alter_Disp+0xa>
    471a:	80 93 cb 2a 	sts	0x2ACB, r24	; 0x802acb <Alter_Disp+0x1>
    471e:	90 93 cc 2a 	sts	0x2ACC, r25	; 0x802acc <Alter_Disp+0x2>
    4722:	a0 93 cd 2a 	sts	0x2ACD, r26	; 0x802acd <Alter_Disp+0x3>
    4726:	b0 93 ce 2a 	sts	0x2ACE, r27	; 0x802ace <Alter_Disp+0x4>
    472a:	10 92 cf 2a 	sts	0x2ACF, r1	; 0x802acf <Alter_Disp+0x5>
    472e:	10 92 d0 2a 	sts	0x2AD0, r1	; 0x802ad0 <Alter_Disp+0x6>
    4732:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <Alter_Disp+0x7>
    4736:	10 92 d2 2a 	sts	0x2AD2, r1	; 0x802ad2 <Alter_Disp+0x8>
    473a:	8a e7       	ldi	r24, 0x7A	; 122
    473c:	91 e0       	ldi	r25, 0x01	; 1
    473e:	80 93 db 2a 	sts	0x2ADB, r24	; 0x802adb <Alter_Disp+0x11>
    4742:	90 93 dc 2a 	sts	0x2ADC, r25	; 0x802adc <Alter_Disp+0x12>
    4746:	10 92 ca 2a 	sts	0x2ACA, r1	; 0x802aca <Alter_Disp>
    474a:	10 92 dd 2a 	sts	0x2ADD, r1	; 0x802add <Alter_Disp+0x13>
    474e:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <Alter_Disp+0x14>
    4752:	10 92 df 2a 	sts	0x2ADF, r1	; 0x802adf <Alter_Disp+0x15>
    4756:	10 92 e0 2a 	sts	0x2AE0, r1	; 0x802ae0 <Alter_Disp+0x16>
    475a:	10 92 d5 2a 	sts	0x2AD5, r1	; 0x802ad5 <Alter_Disp+0xb>
    475e:	10 92 d6 2a 	sts	0x2AD6, r1	; 0x802ad6 <Alter_Disp+0xc>
    4762:	10 92 d7 2a 	sts	0x2AD7, r1	; 0x802ad7 <Alter_Disp+0xd>
    4766:	10 92 d8 2a 	sts	0x2AD8, r1	; 0x802ad8 <Alter_Disp+0xe>
    476a:	10 92 b8 2a 	sts	0x2AB8, r1	; 0x802ab8 <PID_EXE+0x9>
    476e:	10 92 b9 2a 	sts	0x2AB9, r1	; 0x802ab9 <PID_EXE+0xa>
    4772:	80 e8       	ldi	r24, 0x80	; 128
    4774:	9a e1       	ldi	r25, 0x1A	; 26
    4776:	a6 e0       	ldi	r26, 0x06	; 6
    4778:	b0 e0       	ldi	r27, 0x00	; 0
    477a:	80 93 b0 2a 	sts	0x2AB0, r24	; 0x802ab0 <PID_EXE+0x1>
    477e:	90 93 b1 2a 	sts	0x2AB1, r25	; 0x802ab1 <PID_EXE+0x2>
    4782:	a0 93 b2 2a 	sts	0x2AB2, r26	; 0x802ab2 <PID_EXE+0x3>
    4786:	b0 93 b3 2a 	sts	0x2AB3, r27	; 0x802ab3 <PID_EXE+0x4>
    478a:	10 92 b4 2a 	sts	0x2AB4, r1	; 0x802ab4 <PID_EXE+0x5>
    478e:	10 92 b5 2a 	sts	0x2AB5, r1	; 0x802ab5 <PID_EXE+0x6>
    4792:	10 92 b6 2a 	sts	0x2AB6, r1	; 0x802ab6 <PID_EXE+0x7>
    4796:	10 92 b7 2a 	sts	0x2AB7, r1	; 0x802ab7 <PID_EXE+0x8>
    479a:	8a ec       	ldi	r24, 0xCA	; 202
    479c:	9e e0       	ldi	r25, 0x0E	; 14
    479e:	80 93 c0 2a 	sts	0x2AC0, r24	; 0x802ac0 <PID_EXE+0x11>
    47a2:	90 93 c1 2a 	sts	0x2AC1, r25	; 0x802ac1 <PID_EXE+0x12>
    47a6:	10 92 af 2a 	sts	0x2AAF, r1	; 0x802aaf <PID_EXE>
    47aa:	10 92 c2 2a 	sts	0x2AC2, r1	; 0x802ac2 <PID_EXE+0x13>
    47ae:	10 92 c3 2a 	sts	0x2AC3, r1	; 0x802ac3 <PID_EXE+0x14>
    47b2:	10 92 c4 2a 	sts	0x2AC4, r1	; 0x802ac4 <PID_EXE+0x15>
    47b6:	10 92 c5 2a 	sts	0x2AC5, r1	; 0x802ac5 <PID_EXE+0x16>
    47ba:	10 92 ba 2a 	sts	0x2ABA, r1	; 0x802aba <PID_EXE+0xb>
    47be:	10 92 bb 2a 	sts	0x2ABB, r1	; 0x802abb <PID_EXE+0xc>
    47c2:	10 92 bc 2a 	sts	0x2ABC, r1	; 0x802abc <PID_EXE+0xd>
    47c6:	10 92 bd 2a 	sts	0x2ABD, r1	; 0x802abd <PID_EXE+0xe>
    47ca:	c0 90 13 28 	lds	r12, 0x2813	; 0x802813 <Kd>
    47ce:	d0 90 14 28 	lds	r13, 0x2814	; 0x802814 <Kd+0x1>
    47d2:	e0 90 15 28 	lds	r14, 0x2815	; 0x802815 <Kd+0x2>
    47d6:	f0 90 16 28 	lds	r15, 0x2816	; 0x802816 <Kd+0x3>
    47da:	80 90 0f 28 	lds	r8, 0x280F	; 0x80280f <Ki>
    47de:	90 90 10 28 	lds	r9, 0x2810	; 0x802810 <Ki+0x1>
    47e2:	a0 90 11 28 	lds	r10, 0x2811	; 0x802811 <Ki+0x2>
    47e6:	b0 90 12 28 	lds	r11, 0x2812	; 0x802812 <Ki+0x3>
    47ea:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    47ee:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    47f2:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    47f6:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    47fa:	8b e6       	ldi	r24, 0x6B	; 107
    47fc:	9a e2       	ldi	r25, 0x2A	; 42
    47fe:	80 93 91 2a 	sts	0x2A91, r24	; 0x802a91 <myPID+0x1e>
    4802:	90 93 92 2a 	sts	0x2A92, r25	; 0x802a92 <myPID+0x1f>
    4806:	8f e6       	ldi	r24, 0x6F	; 111
    4808:	9a e2       	ldi	r25, 0x2A	; 42
    480a:	80 93 8f 2a 	sts	0x2A8F, r24	; 0x802a8f <myPID+0x1c>
    480e:	90 93 90 2a 	sts	0x2A90, r25	; 0x802a90 <myPID+0x1d>
    4812:	87 e6       	ldi	r24, 0x67	; 103
    4814:	9a e2       	ldi	r25, 0x2A	; 42
    4816:	80 93 93 2a 	sts	0x2A93, r24	; 0x802a93 <myPID+0x20>
    481a:	90 93 94 2a 	sts	0x2A94, r25	; 0x802a94 <myPID+0x21>
    481e:	10 92 ad 2a 	sts	0x2AAD, r1	; 0x802aad <myPID+0x3a>
    4822:	10 92 a5 2a 	sts	0x2AA5, r1	; 0x802aa5 <myPID+0x32>
    4826:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <myPID+0x33>
    482a:	10 92 a7 2a 	sts	0x2AA7, r1	; 0x802aa7 <myPID+0x34>
    482e:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <myPID+0x35>
    4832:	80 e0       	ldi	r24, 0x00	; 0
    4834:	90 e0       	ldi	r25, 0x00	; 0
    4836:	af e7       	ldi	r26, 0x7F	; 127
    4838:	b3 e4       	ldi	r27, 0x43	; 67
    483a:	80 93 a9 2a 	sts	0x2AA9, r24	; 0x802aa9 <myPID+0x36>
    483e:	90 93 aa 2a 	sts	0x2AAA, r25	; 0x802aaa <myPID+0x37>
    4842:	a0 93 ab 2a 	sts	0x2AAB, r26	; 0x802aab <myPID+0x38>
    4846:	b0 93 ac 2a 	sts	0x2AAC, r27	; 0x802aac <myPID+0x39>
    484a:	84 e6       	ldi	r24, 0x64	; 100
    484c:	90 e0       	ldi	r25, 0x00	; 0
    484e:	a0 e0       	ldi	r26, 0x00	; 0
    4850:	b0 e0       	ldi	r27, 0x00	; 0
    4852:	80 93 a1 2a 	sts	0x2AA1, r24	; 0x802aa1 <myPID+0x2e>
    4856:	90 93 a2 2a 	sts	0x2AA2, r25	; 0x802aa2 <myPID+0x2f>
    485a:	a0 93 a3 2a 	sts	0x2AA3, r26	; 0x802aa3 <myPID+0x30>
    485e:	b0 93 a4 2a 	sts	0x2AA4, r27	; 0x802aa4 <myPID+0x31>
    4862:	10 92 8b 2a 	sts	0x2A8B, r1	; 0x802a8b <myPID+0x18>
    4866:	10 92 8c 2a 	sts	0x2A8C, r1	; 0x802a8c <myPID+0x19>
    486a:	20 e0       	ldi	r18, 0x00	; 0
    486c:	30 e0       	ldi	r19, 0x00	; 0
    486e:	a9 01       	movw	r20, r18
    4870:	c3 01       	movw	r24, r6
    4872:	b2 01       	movw	r22, r4
    4874:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    4878:	87 fd       	sbrc	r24, 7
    487a:	5a c0       	rjmp	.+180    	; 0x4930 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    487c:	20 e0       	ldi	r18, 0x00	; 0
    487e:	30 e0       	ldi	r19, 0x00	; 0
    4880:	a9 01       	movw	r20, r18
    4882:	c5 01       	movw	r24, r10
    4884:	b4 01       	movw	r22, r8
    4886:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    488a:	87 fd       	sbrc	r24, 7
    488c:	51 c0       	rjmp	.+162    	; 0x4930 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    488e:	20 e0       	ldi	r18, 0x00	; 0
    4890:	30 e0       	ldi	r19, 0x00	; 0
    4892:	a9 01       	movw	r20, r18
    4894:	c7 01       	movw	r24, r14
    4896:	b6 01       	movw	r22, r12
    4898:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    489c:	87 fd       	sbrc	r24, 7
    489e:	48 c0       	rjmp	.+144    	; 0x4930 <global constructors keyed to 65535_0_Butn.cpp.o.4190+0x650>
    48a0:	81 e0       	ldi	r24, 0x01	; 1
    48a2:	90 e0       	ldi	r25, 0x00	; 0
    48a4:	80 93 8d 2a 	sts	0x2A8D, r24	; 0x802a8d <myPID+0x1a>
    48a8:	90 93 8e 2a 	sts	0x2A8E, r25	; 0x802a8e <myPID+0x1b>
    48ac:	80 93 ae 2a 	sts	0x2AAE, r24	; 0x802aae <myPID+0x3b>
    48b0:	40 92 73 2a 	sts	0x2A73, r4	; 0x802a73 <myPID>
    48b4:	50 92 74 2a 	sts	0x2A74, r5	; 0x802a74 <myPID+0x1>
    48b8:	60 92 75 2a 	sts	0x2A75, r6	; 0x802a75 <myPID+0x2>
    48bc:	70 92 76 2a 	sts	0x2A76, r7	; 0x802a76 <myPID+0x3>
    48c0:	80 92 77 2a 	sts	0x2A77, r8	; 0x802a77 <myPID+0x4>
    48c4:	90 92 78 2a 	sts	0x2A78, r9	; 0x802a78 <myPID+0x5>
    48c8:	a0 92 79 2a 	sts	0x2A79, r10	; 0x802a79 <myPID+0x6>
    48cc:	b0 92 7a 2a 	sts	0x2A7A, r11	; 0x802a7a <myPID+0x7>
    48d0:	c0 92 7b 2a 	sts	0x2A7B, r12	; 0x802a7b <myPID+0x8>
    48d4:	d0 92 7c 2a 	sts	0x2A7C, r13	; 0x802a7c <myPID+0x9>
    48d8:	e0 92 7d 2a 	sts	0x2A7D, r14	; 0x802a7d <myPID+0xa>
    48dc:	f0 92 7e 2a 	sts	0x2A7E, r15	; 0x802a7e <myPID+0xb>
    48e0:	40 92 7f 2a 	sts	0x2A7F, r4	; 0x802a7f <myPID+0xc>
    48e4:	50 92 80 2a 	sts	0x2A80, r5	; 0x802a80 <myPID+0xd>
    48e8:	60 92 81 2a 	sts	0x2A81, r6	; 0x802a81 <myPID+0xe>
    48ec:	70 92 82 2a 	sts	0x2A82, r7	; 0x802a82 <myPID+0xf>
    48f0:	2d ec       	ldi	r18, 0xCD	; 205
    48f2:	3c ec       	ldi	r19, 0xCC	; 204
    48f4:	4c ec       	ldi	r20, 0xCC	; 204
    48f6:	5d e3       	ldi	r21, 0x3D	; 61
    48f8:	c5 01       	movw	r24, r10
    48fa:	b4 01       	movw	r22, r8
    48fc:	0e 94 25 38 	call	0x704a	; 0x704a <__mulsf3>
    4900:	60 93 83 2a 	sts	0x2A83, r22	; 0x802a83 <myPID+0x10>
    4904:	70 93 84 2a 	sts	0x2A84, r23	; 0x802a84 <myPID+0x11>
    4908:	80 93 85 2a 	sts	0x2A85, r24	; 0x802a85 <myPID+0x12>
    490c:	90 93 86 2a 	sts	0x2A86, r25	; 0x802a86 <myPID+0x13>
    4910:	2d ec       	ldi	r18, 0xCD	; 205
    4912:	3c ec       	ldi	r19, 0xCC	; 204
    4914:	4c ec       	ldi	r20, 0xCC	; 204
    4916:	5d e3       	ldi	r21, 0x3D	; 61
    4918:	c7 01       	movw	r24, r14
    491a:	b6 01       	movw	r22, r12
    491c:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    4920:	60 93 87 2a 	sts	0x2A87, r22	; 0x802a87 <myPID+0x14>
    4924:	70 93 88 2a 	sts	0x2A88, r23	; 0x802a88 <myPID+0x15>
    4928:	80 93 89 2a 	sts	0x2A89, r24	; 0x802a89 <myPID+0x16>
    492c:	90 93 8a 2a 	sts	0x2A8A, r25	; 0x802a8a <myPID+0x17>
    4930:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    4934:	c0 90 a1 2a 	lds	r12, 0x2AA1	; 0x802aa1 <myPID+0x2e>
    4938:	d0 90 a2 2a 	lds	r13, 0x2AA2	; 0x802aa2 <myPID+0x2f>
    493c:	e0 90 a3 2a 	lds	r14, 0x2AA3	; 0x802aa3 <myPID+0x30>
    4940:	f0 90 a4 2a 	lds	r15, 0x2AA4	; 0x802aa4 <myPID+0x31>
    4944:	6c 19       	sub	r22, r12
    4946:	7d 09       	sbc	r23, r13
    4948:	8e 09       	sbc	r24, r14
    494a:	9f 09       	sbc	r25, r15
    494c:	60 93 95 2a 	sts	0x2A95, r22	; 0x802a95 <myPID+0x22>
    4950:	70 93 96 2a 	sts	0x2A96, r23	; 0x802a96 <myPID+0x23>
    4954:	80 93 97 2a 	sts	0x2A97, r24	; 0x802a97 <myPID+0x24>
    4958:	90 93 98 2a 	sts	0x2A98, r25	; 0x802a98 <myPID+0x25>
    495c:	ff 90       	pop	r15
    495e:	ef 90       	pop	r14
    4960:	df 90       	pop	r13
    4962:	cf 90       	pop	r12
    4964:	bf 90       	pop	r11
    4966:	af 90       	pop	r10
    4968:	9f 90       	pop	r9
    496a:	8f 90       	pop	r8
    496c:	7f 90       	pop	r7
    496e:	6f 90       	pop	r6
    4970:	5f 90       	pop	r5
    4972:	4f 90       	pop	r4
    4974:	08 95       	ret

00004976 <main>:
main():
    4976:	cf 93       	push	r28
    4978:	df 93       	push	r29
    497a:	cd b7       	in	r28, 0x3d	; 61
    497c:	de b7       	in	r29, 0x3e	; 62
    497e:	26 97       	sbiw	r28, 0x06	; 6
    4980:	cd bf       	out	0x3d, r28	; 61
    4982:	de bf       	out	0x3e, r29	; 62
init():
    4984:	88 ed       	ldi	r24, 0xD8	; 216
    4986:	90 e0       	ldi	r25, 0x00	; 0
    4988:	84 bf       	out	0x34, r24	; 52
    498a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    498e:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4992:	86 60       	ori	r24, 0x06	; 6
    4994:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    4998:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    499c:	81 60       	ori	r24, 0x01	; 1
    499e:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    49a2:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    49a6:	8f 7c       	andi	r24, 0xCF	; 207
    49a8:	80 65       	ori	r24, 0x50	; 80
    49aa:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    49ae:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    49b2:	82 e0       	ldi	r24, 0x02	; 2
    49b4:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    49b8:	81 e0       	ldi	r24, 0x01	; 1
    49ba:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    49be:	8e ef       	ldi	r24, 0xFE	; 254
    49c0:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    49c4:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    49c8:	80 e8       	ldi	r24, 0x80	; 128
    49ca:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    49ce:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    49d2:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    49d6:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    49da:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    49de:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    49e2:	8b e0       	ldi	r24, 0x0B	; 11
    49e4:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    49e8:	87 e0       	ldi	r24, 0x07	; 7
    49ea:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    49ee:	e0 e8       	ldi	r30, 0x80	; 128
    49f0:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    49f2:	37 e0       	ldi	r19, 0x07	; 7
    49f4:	2e ef       	ldi	r18, 0xFE	; 254
    49f6:	90 e8       	ldi	r25, 0x80	; 128
    49f8:	85 e0       	ldi	r24, 0x05	; 5
    49fa:	31 83       	std	Z+1, r19	; 0x01
    49fc:	24 87       	std	Z+12, r18	; 0x0c
    49fe:	95 87       	std	Z+13, r25	; 0x0d
    4a00:	80 83       	st	Z, r24
    4a02:	70 96       	adiw	r30, 0x10	; 16
    4a04:	e0 3c       	cpi	r30, 0xC0	; 192
    4a06:	4a e0       	ldi	r20, 0x0A	; 10
    4a08:	f4 07       	cpc	r31, r20
    4a0a:	b9 f7       	brne	.-18     	; 0x49fa <main+0x84>
init():
    4a0c:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    4a10:	8f e7       	ldi	r24, 0x7F	; 127
    4a12:	9e e3       	ldi	r25, 0x3E	; 62
    4a14:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    4a18:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    4a1c:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4a20:	81 60       	ori	r24, 0x01	; 1
    4a22:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    4a26:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a2a:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a2e:	81 60       	ori	r24, 0x01	; 1
    4a30:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    4a34:	78 94       	sei
setup():
    4a36:	47 e2       	ldi	r20, 0x27	; 39
    4a38:	66 e2       	ldi	r22, 0x26	; 38
    4a3a:	8e e4       	ldi	r24, 0x4E	; 78
    4a3c:	99 e2       	ldi	r25, 0x29	; 41
    4a3e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <UartClass::pins(unsigned char, unsigned char)>
    4a42:	40 e8       	ldi	r20, 0x80	; 128
    4a44:	55 e2       	ldi	r21, 0x25	; 37
    4a46:	60 e0       	ldi	r22, 0x00	; 0
    4a48:	70 e0       	ldi	r23, 0x00	; 0
    4a4a:	8e e4       	ldi	r24, 0x4E	; 78
    4a4c:	99 e2       	ldi	r25, 0x29	; 41
    4a4e:	0e 94 75 0d 	call	0x1aea	; 0x1aea <UartClass::begin(unsigned long)>
SETUP():
    4a52:	f8 94       	cli
    4a54:	81 e0       	ldi	r24, 0x01	; 1
    4a56:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    4a5a:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    4a5e:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4a62:	8e 7f       	andi	r24, 0xFE	; 254
    4a64:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    4a68:	8a ef       	ldi	r24, 0xFA	; 250
    4a6a:	90 e0       	ldi	r25, 0x00	; 0
    4a6c:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    4a70:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    4a74:	8f e0       	ldi	r24, 0x0F	; 15
    4a76:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    4a7a:	78 94       	sei
    4a7c:	61 e0       	ldi	r22, 0x01	; 1
    4a7e:	8b e0       	ldi	r24, 0x0B	; 11
    4a80:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a84:	61 e0       	ldi	r22, 0x01	; 1
    4a86:	8a e0       	ldi	r24, 0x0A	; 10
    4a88:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a8c:	61 e0       	ldi	r22, 0x01	; 1
    4a8e:	89 e0       	ldi	r24, 0x09	; 9
    4a90:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a94:	61 e0       	ldi	r22, 0x01	; 1
    4a96:	88 e0       	ldi	r24, 0x08	; 8
    4a98:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4a9c:	61 e0       	ldi	r22, 0x01	; 1
    4a9e:	84 e0       	ldi	r24, 0x04	; 4
    4aa0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4aa4:	61 e0       	ldi	r22, 0x01	; 1
    4aa6:	85 e0       	ldi	r24, 0x05	; 5
    4aa8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4aac:	61 e0       	ldi	r22, 0x01	; 1
    4aae:	86 e0       	ldi	r24, 0x06	; 6
    4ab0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ab4:	61 e0       	ldi	r22, 0x01	; 1
    4ab6:	87 e0       	ldi	r24, 0x07	; 7
    4ab8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4abc:	61 e0       	ldi	r22, 0x01	; 1
    4abe:	84 e1       	ldi	r24, 0x14	; 20
    4ac0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ac4:	61 e0       	ldi	r22, 0x01	; 1
    4ac6:	83 e1       	ldi	r24, 0x13	; 19
    4ac8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4acc:	61 e0       	ldi	r22, 0x01	; 1
    4ace:	82 e1       	ldi	r24, 0x12	; 18
    4ad0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ad4:	61 e0       	ldi	r22, 0x01	; 1
    4ad6:	8e e1       	ldi	r24, 0x1E	; 30
    4ad8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4adc:	61 e0       	ldi	r22, 0x01	; 1
    4ade:	80 e2       	ldi	r24, 0x20	; 32
    4ae0:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4ae4:	61 e0       	ldi	r22, 0x01	; 1
    4ae6:	8f e1       	ldi	r24, 0x1F	; 31
    4ae8:	0e 94 20 07 	call	0xe40	; 0xe40 <pinMode>
    4aec:	61 e0       	ldi	r22, 0x01	; 1
    4aee:	88 e0       	ldi	r24, 0x08	; 8
    4af0:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4af4:	61 e0       	ldi	r22, 0x01	; 1
    4af6:	89 e0       	ldi	r24, 0x09	; 9
    4af8:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4afc:	61 e0       	ldi	r22, 0x01	; 1
    4afe:	8a e0       	ldi	r24, 0x0A	; 10
    4b00:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4b04:	61 e0       	ldi	r22, 0x01	; 1
    4b06:	8b e0       	ldi	r24, 0x0B	; 11
    4b08:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4b0c:	61 e0       	ldi	r22, 0x01	; 1
    4b0e:	87 e0       	ldi	r24, 0x07	; 7
    4b10:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4b14:	61 e0       	ldi	r22, 0x01	; 1
    4b16:	86 e0       	ldi	r24, 0x06	; 6
    4b18:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4b1c:	61 e0       	ldi	r22, 0x01	; 1
    4b1e:	85 e0       	ldi	r24, 0x05	; 5
    4b20:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
    4b24:	61 e0       	ldi	r22, 0x01	; 1
    4b26:	84 e0       	ldi	r24, 0x04	; 4
    4b28:	0e 94 8d 07 	call	0xf1a	; 0xf1a <digitalWrite>
pinMode():
    4b2c:	61 e0       	ldi	r22, 0x01	; 1
    4b2e:	8c e0       	ldi	r24, 0x0C	; 12
    4b30:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4b34:	61 e0       	ldi	r22, 0x01	; 1
    4b36:	8d e0       	ldi	r24, 0x0D	; 13
    4b38:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
digitalWrite():
    4b3c:	60 e0       	ldi	r22, 0x00	; 0
    4b3e:	8c e0       	ldi	r24, 0x0C	; 12
    4b40:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4b44:	60 e0       	ldi	r22, 0x00	; 0
    4b46:	8d e0       	ldi	r24, 0x0D	; 13
    4b48:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SETUP():
    4b4c:	8d eb       	ldi	r24, 0xBD	; 189
    4b4e:	9b e2       	ldi	r25, 0x2B	; 43
    4b50:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SetOutputLimits():
    4b54:	10 92 a5 2a 	sts	0x2AA5, r1	; 0x802aa5 <myPID+0x32>
    4b58:	10 92 a6 2a 	sts	0x2AA6, r1	; 0x802aa6 <myPID+0x33>
    4b5c:	10 92 a7 2a 	sts	0x2AA7, r1	; 0x802aa7 <myPID+0x34>
    4b60:	10 92 a8 2a 	sts	0x2AA8, r1	; 0x802aa8 <myPID+0x35>
    4b64:	81 2c       	mov	r8, r1
    4b66:	91 2c       	mov	r9, r1
    4b68:	9a e7       	ldi	r25, 0x7A	; 122
    4b6a:	a9 2e       	mov	r10, r25
    4b6c:	94 e4       	ldi	r25, 0x44	; 68
    4b6e:	b9 2e       	mov	r11, r25
    4b70:	80 92 a9 2a 	sts	0x2AA9, r8	; 0x802aa9 <myPID+0x36>
    4b74:	90 92 aa 2a 	sts	0x2AAA, r9	; 0x802aaa <myPID+0x37>
    4b78:	a0 92 ab 2a 	sts	0x2AAB, r10	; 0x802aab <myPID+0x38>
    4b7c:	b0 92 ac 2a 	sts	0x2AAC, r11	; 0x802aac <myPID+0x39>
    4b80:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
    4b84:	88 23       	and	r24, r24
    4b86:	09 f4       	brne	.+2      	; 0x4b8a <main+0x214>
    4b88:	57 c0       	rjmp	.+174    	; 0x4c38 <main+0x2c2>
    4b8a:	00 91 91 2a 	lds	r16, 0x2A91	; 0x802a91 <myPID+0x1e>
    4b8e:	10 91 92 2a 	lds	r17, 0x2A92	; 0x802a92 <myPID+0x1f>
    4b92:	d8 01       	movw	r26, r16
    4b94:	cd 90       	ld	r12, X+
    4b96:	dd 90       	ld	r13, X+
    4b98:	ed 90       	ld	r14, X+
    4b9a:	fc 90       	ld	r15, X
    4b9c:	a5 01       	movw	r20, r10
    4b9e:	94 01       	movw	r18, r8
    4ba0:	c7 01       	movw	r24, r14
    4ba2:	b6 01       	movw	r22, r12
    4ba4:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    4ba8:	18 16       	cp	r1, r24
    4baa:	34 f5       	brge	.+76     	; 0x4bf8 <main+0x282>
    4bac:	f8 01       	movw	r30, r16
    4bae:	80 82       	st	Z, r8
    4bb0:	91 82       	std	Z+1, r9	; 0x01
    4bb2:	a2 82       	std	Z+2, r10	; 0x02
    4bb4:	b3 82       	std	Z+3, r11	; 0x03
    4bb6:	80 90 99 2a 	lds	r8, 0x2A99	; 0x802a99 <myPID+0x26>
    4bba:	90 90 9a 2a 	lds	r9, 0x2A9A	; 0x802a9a <myPID+0x27>
    4bbe:	a0 90 9b 2a 	lds	r10, 0x2A9B	; 0x802a9b <myPID+0x28>
    4bc2:	b0 90 9c 2a 	lds	r11, 0x2A9C	; 0x802a9c <myPID+0x29>
    4bc6:	c0 90 a9 2a 	lds	r12, 0x2AA9	; 0x802aa9 <myPID+0x36>
    4bca:	d0 90 aa 2a 	lds	r13, 0x2AAA	; 0x802aaa <myPID+0x37>
    4bce:	e0 90 ab 2a 	lds	r14, 0x2AAB	; 0x802aab <myPID+0x38>
    4bd2:	f0 90 ac 2a 	lds	r15, 0x2AAC	; 0x802aac <myPID+0x39>
    4bd6:	a7 01       	movw	r20, r14
    4bd8:	96 01       	movw	r18, r12
    4bda:	c5 01       	movw	r24, r10
    4bdc:	b4 01       	movw	r22, r8
    4bde:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    4be2:	18 16       	cp	r1, r24
    4be4:	cc f4       	brge	.+50     	; 0x4c18 <main+0x2a2>
    4be6:	c0 92 99 2a 	sts	0x2A99, r12	; 0x802a99 <myPID+0x26>
    4bea:	d0 92 9a 2a 	sts	0x2A9A, r13	; 0x802a9a <myPID+0x27>
    4bee:	e0 92 9b 2a 	sts	0x2A9B, r14	; 0x802a9b <myPID+0x28>
    4bf2:	f0 92 9c 2a 	sts	0x2A9C, r15	; 0x802a9c <myPID+0x29>
    4bf6:	20 c0       	rjmp	.+64     	; 0x4c38 <main+0x2c2>
    4bf8:	20 e0       	ldi	r18, 0x00	; 0
    4bfa:	30 e0       	ldi	r19, 0x00	; 0
    4bfc:	a9 01       	movw	r20, r18
    4bfe:	c7 01       	movw	r24, r14
    4c00:	b6 01       	movw	r22, r12
    4c02:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    4c06:	87 ff       	sbrs	r24, 7
    4c08:	d6 cf       	rjmp	.-84     	; 0x4bb6 <main+0x240>
    4c0a:	d8 01       	movw	r26, r16
    4c0c:	1d 92       	st	X+, r1
    4c0e:	1d 92       	st	X+, r1
    4c10:	1d 92       	st	X+, r1
    4c12:	1c 92       	st	X, r1
    4c14:	13 97       	sbiw	r26, 0x03	; 3
    4c16:	cf cf       	rjmp	.-98     	; 0x4bb6 <main+0x240>
    4c18:	c0 90 a5 2a 	lds	r12, 0x2AA5	; 0x802aa5 <myPID+0x32>
    4c1c:	d0 90 a6 2a 	lds	r13, 0x2AA6	; 0x802aa6 <myPID+0x33>
    4c20:	e0 90 a7 2a 	lds	r14, 0x2AA7	; 0x802aa7 <myPID+0x34>
    4c24:	f0 90 a8 2a 	lds	r15, 0x2AA8	; 0x802aa8 <myPID+0x35>
    4c28:	a7 01       	movw	r20, r14
    4c2a:	96 01       	movw	r18, r12
    4c2c:	c5 01       	movw	r24, r10
    4c2e:	b4 01       	movw	r22, r8
    4c30:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    4c34:	87 fd       	sbrc	r24, 7
    4c36:	d7 cf       	rjmp	.-82     	; 0x4be6 <main+0x270>
Setup():
    4c38:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    4c3c:	60 93 f7 28 	sts	0x28F7, r22	; 0x8028f7 <WINDOW_START_TIME>
    4c40:	70 93 f8 28 	sts	0x28F8, r23	; 0x8028f8 <WINDOW_START_TIME+0x1>
    4c44:	80 93 f9 28 	sts	0x28F9, r24	; 0x8028f9 <WINDOW_START_TIME+0x2>
    4c48:	90 93 fa 28 	sts	0x28FA, r25	; 0x8028fa <WINDOW_START_TIME+0x3>
SetMode():
    4c4c:	80 91 ad 2a 	lds	r24, 0x2AAD	; 0x802aad <myPID+0x3a>
    4c50:	81 11       	cpse	r24, r1
    4c52:	49 c0       	rjmp	.+146    	; 0x4ce6 <main+0x370>
Initialize():
    4c54:	e0 91 91 2a 	lds	r30, 0x2A91	; 0x802a91 <myPID+0x1e>
    4c58:	f0 91 92 2a 	lds	r31, 0x2A92	; 0x802a92 <myPID+0x1f>
    4c5c:	c0 80       	ld	r12, Z
    4c5e:	d1 80       	ldd	r13, Z+1	; 0x01
    4c60:	e2 80       	ldd	r14, Z+2	; 0x02
    4c62:	f3 80       	ldd	r15, Z+3	; 0x03
    4c64:	c0 92 99 2a 	sts	0x2A99, r12	; 0x802a99 <myPID+0x26>
    4c68:	d0 92 9a 2a 	sts	0x2A9A, r13	; 0x802a9a <myPID+0x27>
    4c6c:	e0 92 9b 2a 	sts	0x2A9B, r14	; 0x802a9b <myPID+0x28>
    4c70:	f0 92 9c 2a 	sts	0x2A9C, r15	; 0x802a9c <myPID+0x29>
    4c74:	e0 91 8f 2a 	lds	r30, 0x2A8F	; 0x802a8f <myPID+0x1c>
    4c78:	f0 91 90 2a 	lds	r31, 0x2A90	; 0x802a90 <myPID+0x1d>
    4c7c:	80 81       	ld	r24, Z
    4c7e:	91 81       	ldd	r25, Z+1	; 0x01
    4c80:	a2 81       	ldd	r26, Z+2	; 0x02
    4c82:	b3 81       	ldd	r27, Z+3	; 0x03
    4c84:	80 93 9d 2a 	sts	0x2A9D, r24	; 0x802a9d <myPID+0x2a>
    4c88:	90 93 9e 2a 	sts	0x2A9E, r25	; 0x802a9e <myPID+0x2b>
    4c8c:	a0 93 9f 2a 	sts	0x2A9F, r26	; 0x802a9f <myPID+0x2c>
    4c90:	b0 93 a0 2a 	sts	0x2AA0, r27	; 0x802aa0 <myPID+0x2d>
    4c94:	80 90 a9 2a 	lds	r8, 0x2AA9	; 0x802aa9 <myPID+0x36>
    4c98:	90 90 aa 2a 	lds	r9, 0x2AAA	; 0x802aaa <myPID+0x37>
    4c9c:	a0 90 ab 2a 	lds	r10, 0x2AAB	; 0x802aab <myPID+0x38>
    4ca0:	b0 90 ac 2a 	lds	r11, 0x2AAC	; 0x802aac <myPID+0x39>
    4ca4:	a5 01       	movw	r20, r10
    4ca6:	94 01       	movw	r18, r8
    4ca8:	c7 01       	movw	r24, r14
    4caa:	b6 01       	movw	r22, r12
    4cac:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    4cb0:	18 16       	cp	r1, r24
    4cb2:	4c f4       	brge	.+18     	; 0x4cc6 <main+0x350>
    4cb4:	80 92 99 2a 	sts	0x2A99, r8	; 0x802a99 <myPID+0x26>
    4cb8:	90 92 9a 2a 	sts	0x2A9A, r9	; 0x802a9a <myPID+0x27>
    4cbc:	a0 92 9b 2a 	sts	0x2A9B, r10	; 0x802a9b <myPID+0x28>
    4cc0:	b0 92 9c 2a 	sts	0x2A9C, r11	; 0x802a9c <myPID+0x29>
    4cc4:	10 c0       	rjmp	.+32     	; 0x4ce6 <main+0x370>
    4cc6:	80 90 a5 2a 	lds	r8, 0x2AA5	; 0x802aa5 <myPID+0x32>
    4cca:	90 90 a6 2a 	lds	r9, 0x2AA6	; 0x802aa6 <myPID+0x33>
    4cce:	a0 90 a7 2a 	lds	r10, 0x2AA7	; 0x802aa7 <myPID+0x34>
    4cd2:	b0 90 a8 2a 	lds	r11, 0x2AA8	; 0x802aa8 <myPID+0x35>
    4cd6:	a5 01       	movw	r20, r10
    4cd8:	94 01       	movw	r18, r8
    4cda:	c7 01       	movw	r24, r14
    4cdc:	b6 01       	movw	r22, r12
    4cde:	0e 94 d2 36 	call	0x6da4	; 0x6da4 <__cmpsf2>
    4ce2:	87 fd       	sbrc	r24, 7
    4ce4:	e7 cf       	rjmp	.-50     	; 0x4cb4 <main+0x33e>
SetMode():
    4ce6:	81 e0       	ldi	r24, 0x01	; 1
    4ce8:	80 93 ad 2a 	sts	0x2AAD, r24	; 0x802aad <myPID+0x3a>
pinMode():
    4cec:	61 e0       	ldi	r22, 0x01	; 1
    4cee:	85 e1       	ldi	r24, 0x15	; 21
    4cf0:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4cf4:	61 e0       	ldi	r22, 0x01	; 1
    4cf6:	88 e1       	ldi	r24, 0x18	; 24
    4cf8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4cfc:	61 e0       	ldi	r22, 0x01	; 1
    4cfe:	89 e1       	ldi	r24, 0x19	; 25
    4d00:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d04:	61 e0       	ldi	r22, 0x01	; 1
    4d06:	81 e2       	ldi	r24, 0x21	; 33
    4d08:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
digitalWrite():
    4d0c:	60 e0       	ldi	r22, 0x00	; 0
    4d0e:	89 e1       	ldi	r24, 0x19	; 25
    4d10:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4d14:	60 e0       	ldi	r22, 0x00	; 0
    4d16:	85 e1       	ldi	r24, 0x15	; 21
    4d18:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4d1c:	60 e0       	ldi	r22, 0x00	; 0
    4d1e:	88 e1       	ldi	r24, 0x18	; 24
    4d20:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    4d24:	60 e0       	ldi	r22, 0x00	; 0
    4d26:	81 e2       	ldi	r24, 0x21	; 33
    4d28:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
pinMode():
    4d2c:	61 e0       	ldi	r22, 0x01	; 1
    4d2e:	8b e1       	ldi	r24, 0x1B	; 27
    4d30:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d34:	61 e0       	ldi	r22, 0x01	; 1
    4d36:	8c e1       	ldi	r24, 0x1C	; 28
    4d38:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d3c:	61 e0       	ldi	r22, 0x01	; 1
    4d3e:	8d e1       	ldi	r24, 0x1D	; 29
    4d40:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4d44:	61 e0       	ldi	r22, 0x01	; 1
    4d46:	8a e1       	ldi	r24, 0x1A	; 26
    4d48:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
Setup():
    4d4c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    4d50:	80 e0       	ldi	r24, 0x00	; 0
    4d52:	9b e2       	ldi	r25, 0x2B	; 43
    4d54:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
    4d58:	85 ee       	ldi	r24, 0xE5	; 229
    4d5a:	9a e2       	ldi	r25, 0x2A	; 42
    4d5c:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
    4d60:	90 e0       	ldi	r25, 0x00	; 0
    4d62:	80 e0       	ldi	r24, 0x00	; 0
    4d64:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4d68:	bb 24       	eor	r11, r11
    4d6a:	b3 94       	inc	r11
    4d6c:	81 11       	cpse	r24, r1
    4d6e:	01 c0       	rjmp	.+2      	; 0x4d72 <main+0x3fc>
    4d70:	b1 2c       	mov	r11, r1
    4d72:	b0 92 9c 28 	sts	0x289C, r11	; 0x80289c <STIR_VALUE_SET>
    4d76:	81 e0       	ldi	r24, 0x01	; 1
    4d78:	90 e0       	ldi	r25, 0x00	; 0
    4d7a:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4d7e:	01 e0       	ldi	r16, 0x01	; 1
    4d80:	81 11       	cpse	r24, r1
    4d82:	01 c0       	rjmp	.+2      	; 0x4d86 <main+0x410>
    4d84:	00 e0       	ldi	r16, 0x00	; 0
    4d86:	00 93 4c 29 	sts	0x294C, r16	; 0x80294c <DEGREE_VALUE_SET>
    4d8a:	82 e0       	ldi	r24, 0x02	; 2
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4d92:	c8 2e       	mov	r12, r24
    4d94:	d1 2c       	mov	r13, r1
    4d96:	c0 92 0b 29 	sts	0x290B, r12	; 0x80290b <SAFE_VALUE_SET_DEG>
    4d9a:	d0 92 0c 29 	sts	0x290C, r13	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    4d9e:	69 e0       	ldi	r22, 0x09	; 9
    4da0:	79 e2       	ldi	r23, 0x29	; 41
    4da2:	83 e0       	ldi	r24, 0x03	; 3
    4da4:	90 e0       	ldi	r25, 0x00	; 0
    4da6:	0e 94 50 10 	call	0x20a0	; 0x20a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4daa:	85 e0       	ldi	r24, 0x05	; 5
    4dac:	90 e0       	ldi	r25, 0x00	; 0
    4dae:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4db2:	e8 2e       	mov	r14, r24
    4db4:	f1 2c       	mov	r15, r1
    4db6:	e0 92 d2 28 	sts	0x28D2, r14	; 0x8028d2 <CAL_SELECT_VALUE>
    4dba:	f0 92 d3 28 	sts	0x28D3, r15	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    4dbe:	13 e0       	ldi	r17, 0x03	; 3
    4dc0:	61 2e       	mov	r6, r17
    4dc2:	19 e2       	ldi	r17, 0x29	; 41
    4dc4:	71 2e       	mov	r7, r17
main():
    4dc6:	86 e4       	ldi	r24, 0x46	; 70
    4dc8:	88 2e       	mov	r8, r24
    4dca:	91 2c       	mov	r9, r1
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4dcc:	89 82       	std	Y+1, r8	; 0x01
    4dce:	9a 82       	std	Y+2, r9	; 0x02
_ZNK5EERefcvhEv():
    4dd0:	ce 01       	movw	r24, r28
    4dd2:	01 96       	adiw	r24, 0x01	; 1
    4dd4:	0e 94 40 10 	call	0x2080	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4dd8:	f3 01       	movw	r30, r6
    4dda:	81 93       	st	Z+, r24
    4ddc:	3f 01       	movw	r6, r30
_ZN5EEPtrppEv():
    4dde:	ff ef       	ldi	r31, 0xFF	; 255
    4de0:	8f 1a       	sub	r8, r31
    4de2:	9f 0a       	sbc	r9, r31
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    4de4:	2a e4       	ldi	r18, 0x4A	; 74
    4de6:	82 16       	cp	r8, r18
    4de8:	91 04       	cpc	r9, r1
    4dea:	81 f7       	brne	.-32     	; 0x4dcc <main+0x456>
Setup():
    4dec:	87 e0       	ldi	r24, 0x07	; 7
    4dee:	90 e0       	ldi	r25, 0x00	; 0
    4df0:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4df4:	91 e0       	ldi	r25, 0x01	; 1
    4df6:	81 11       	cpse	r24, r1
    4df8:	01 c0       	rjmp	.+2      	; 0x4dfc <main+0x486>
    4dfa:	90 e0       	ldi	r25, 0x00	; 0
    4dfc:	90 93 e6 28 	sts	0x28E6, r25	; 0x8028e6 <SIGN>
    4e00:	88 e0       	ldi	r24, 0x08	; 8
    4e02:	90 e0       	ldi	r25, 0x00	; 0
    4e04:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4e08:	91 e0       	ldi	r25, 0x01	; 1
    4e0a:	81 11       	cpse	r24, r1
    4e0c:	01 c0       	rjmp	.+2      	; 0x4e10 <main+0x49a>
    4e0e:	90 e0       	ldi	r25, 0x00	; 0
    4e10:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    4e14:	89 e0       	ldi	r24, 0x09	; 9
    4e16:	90 e0       	ldi	r25, 0x00	; 0
    4e18:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4e1c:	91 e0       	ldi	r25, 0x01	; 1
    4e1e:	81 11       	cpse	r24, r1
    4e20:	01 c0       	rjmp	.+2      	; 0x4e24 <main+0x4ae>
    4e22:	90 e0       	ldi	r25, 0x00	; 0
    4e24:	90 93 dc 28 	sts	0x28DC, r25	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    4e28:	6a ec       	ldi	r22, 0xCA	; 202
    4e2a:	78 e2       	ldi	r23, 0x28	; 40
    4e2c:	80 e5       	ldi	r24, 0x50	; 80
    4e2e:	90 e0       	ldi	r25, 0x00	; 0
    4e30:	0e 94 75 10 	call	0x20ea	; 0x20ea <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e34:	66 ec       	ldi	r22, 0xC6	; 198
    4e36:	78 e2       	ldi	r23, 0x28	; 40
    4e38:	8a e5       	ldi	r24, 0x5A	; 90
    4e3a:	90 e0       	ldi	r25, 0x00	; 0
    4e3c:	0e 94 75 10 	call	0x20ea	; 0x20ea <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e40:	62 ec       	ldi	r22, 0xC2	; 194
    4e42:	78 e2       	ldi	r23, 0x28	; 40
    4e44:	84 e6       	ldi	r24, 0x64	; 100
    4e46:	90 e0       	ldi	r25, 0x00	; 0
    4e48:	0e 94 75 10 	call	0x20ea	; 0x20ea <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    4e4c:	6e eb       	ldi	r22, 0xBE	; 190
    4e4e:	78 e2       	ldi	r23, 0x28	; 40
    4e50:	8e e6       	ldi	r24, 0x6E	; 110
    4e52:	90 e0       	ldi	r25, 0x00	; 0
    4e54:	0e 94 75 10 	call	0x20ea	; 0x20ea <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4e58:	81 e4       	ldi	r24, 0x41	; 65
    4e5a:	90 e0       	ldi	r25, 0x00	; 0
    4e5c:	89 83       	std	Y+1, r24	; 0x01
    4e5e:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    4e60:	ce 01       	movw	r24, r28
    4e62:	01 96       	adiw	r24, 0x01	; 1
    4e64:	0e 94 40 10 	call	0x2080	; 0x2080 <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    4e68:	80 93 63 28 	sts	0x2863, r24	; 0x802863 <TIME_SOCK_OR_TOTAL>
Setup():
    4e6c:	62 e5       	ldi	r22, 0x52	; 82
    4e6e:	78 e2       	ldi	r23, 0x28	; 40
    4e70:	88 e9       	ldi	r24, 0x98	; 152
    4e72:	90 e0       	ldi	r25, 0x00	; 0
    4e74:	0e 94 50 10 	call	0x20a0	; 0x20a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4e78:	60 e5       	ldi	r22, 0x50	; 80
    4e7a:	78 e2       	ldi	r23, 0x28	; 40
    4e7c:	8a e9       	ldi	r24, 0x9A	; 154
    4e7e:	90 e0       	ldi	r25, 0x00	; 0
    4e80:	0e 94 50 10 	call	0x20a0	; 0x20a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4e84:	8f e0       	ldi	r24, 0x0F	; 15
    4e86:	90 e0       	ldi	r25, 0x00	; 0
    4e88:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4e8c:	11 e0       	ldi	r17, 0x01	; 1
    4e8e:	81 11       	cpse	r24, r1
    4e90:	01 c0       	rjmp	.+2      	; 0x4e94 <main+0x51e>
    4e92:	10 e0       	ldi	r17, 0x00	; 0
    4e94:	10 93 a3 28 	sts	0x28A3, r17	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    4e98:	86 e9       	ldi	r24, 0x96	; 150
    4e9a:	90 e0       	ldi	r25, 0x00	; 0
    4e9c:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4ea0:	91 e0       	ldi	r25, 0x01	; 1
    4ea2:	81 11       	cpse	r24, r1
    4ea4:	01 c0       	rjmp	.+2      	; 0x4ea8 <main+0x532>
    4ea6:	90 e0       	ldi	r25, 0x00	; 0
    4ea8:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <select_product_type>
    4eac:	2b 2d       	mov	r18, r11
    4eae:	30 e0       	ldi	r19, 0x00	; 0
    4eb0:	20 93 1a 29 	sts	0x291A, r18	; 0x80291a <SET_LONG_VALUE>
    4eb4:	30 93 1b 29 	sts	0x291B, r19	; 0x80291b <SET_LONG_VALUE+0x1>
    4eb8:	20 2f       	mov	r18, r16
    4eba:	30 e0       	ldi	r19, 0x00	; 0
    4ebc:	20 93 1c 29 	sts	0x291C, r18	; 0x80291c <SET_LONG_VALUE+0x2>
    4ec0:	30 93 1d 29 	sts	0x291D, r19	; 0x80291d <SET_LONG_VALUE+0x3>
    4ec4:	c0 92 1e 29 	sts	0x291E, r12	; 0x80291e <SET_LONG_VALUE+0x4>
    4ec8:	d0 92 1f 29 	sts	0x291F, r13	; 0x80291f <SET_LONG_VALUE+0x5>
    4ecc:	20 91 09 29 	lds	r18, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    4ed0:	30 91 0a 29 	lds	r19, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    4ed4:	20 93 40 29 	sts	0x2940, r18	; 0x802940 <SET_LONG_VALUE+0x26>
    4ed8:	30 93 41 29 	sts	0x2941, r19	; 0x802941 <SET_LONG_VALUE+0x27>
    4edc:	e0 92 26 29 	sts	0x2926, r14	; 0x802926 <SET_LONG_VALUE+0xc>
    4ee0:	f0 92 27 29 	sts	0x2927, r15	; 0x802927 <SET_LONG_VALUE+0xd>
    4ee4:	20 91 63 28 	lds	r18, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    4ee8:	30 e0       	ldi	r19, 0x00	; 0
    4eea:	20 93 20 29 	sts	0x2920, r18	; 0x802920 <SET_LONG_VALUE+0x6>
    4eee:	30 93 21 29 	sts	0x2921, r19	; 0x802921 <SET_LONG_VALUE+0x7>
    4ef2:	21 2f       	mov	r18, r17
    4ef4:	30 e0       	ldi	r19, 0x00	; 0
    4ef6:	20 93 22 29 	sts	0x2922, r18	; 0x802922 <SET_LONG_VALUE+0x8>
    4efa:	30 93 23 29 	sts	0x2923, r19	; 0x802923 <SET_LONG_VALUE+0x9>
    4efe:	89 2f       	mov	r24, r25
    4f00:	90 e0       	ldi	r25, 0x00	; 0
    4f02:	80 93 24 29 	sts	0x2924, r24	; 0x802924 <SET_LONG_VALUE+0xa>
    4f06:	90 93 25 29 	sts	0x2925, r25	; 0x802925 <SET_LONG_VALUE+0xb>
    4f0a:	69 e3       	ldi	r22, 0x39	; 57
    4f0c:	79 e2       	ldi	r23, 0x29	; 41
    4f0e:	88 e7       	ldi	r24, 0x78	; 120
    4f10:	90 e0       	ldi	r25, 0x00	; 0
    4f12:	0e 94 50 10 	call	0x20a0	; 0x20a0 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    4f16:	83 e7       	ldi	r24, 0x73	; 115
    4f18:	90 e0       	ldi	r25, 0x00	; 0
    4f1a:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4f1e:	90 e0       	ldi	r25, 0x00	; 0
    4f20:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
    4f24:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
    4f28:	85 e7       	ldi	r24, 0x75	; 117
    4f2a:	90 e0       	ldi	r25, 0x00	; 0
    4f2c:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4f30:	90 e0       	ldi	r25, 0x00	; 0
    4f32:	80 93 11 29 	sts	0x2911, r24	; 0x802911 <SET_VALUE+0x4>
    4f36:	90 93 12 29 	sts	0x2912, r25	; 0x802912 <SET_VALUE+0x5>
    4f3a:	8d e7       	ldi	r24, 0x7D	; 125
    4f3c:	90 e0       	ldi	r25, 0x00	; 0
    4f3e:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4f42:	90 e0       	ldi	r25, 0x00	; 0
    4f44:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SET_VALUE+0x6>
    4f48:	90 93 14 29 	sts	0x2914, r25	; 0x802914 <SET_VALUE+0x7>
    4f4c:	82 e8       	ldi	r24, 0x82	; 130
    4f4e:	90 e0       	ldi	r25, 0x00	; 0
    4f50:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4f54:	90 e0       	ldi	r25, 0x00	; 0
    4f56:	80 93 15 29 	sts	0x2915, r24	; 0x802915 <SET_VALUE+0x8>
    4f5a:	90 93 16 29 	sts	0x2916, r25	; 0x802916 <SET_VALUE+0x9>
    4f5e:	87 e8       	ldi	r24, 0x87	; 135
    4f60:	90 e0       	ldi	r25, 0x00	; 0
    4f62:	0e 94 a7 10 	call	0x214e	; 0x214e <EEPROMClass::read(int) [clone .isra.0]>
    4f66:	91 e0       	ldi	r25, 0x01	; 1
    4f68:	81 11       	cpse	r24, r1
    4f6a:	01 c0       	rjmp	.+2      	; 0x4f6e <main+0x5f8>
    4f6c:	90 e0       	ldi	r25, 0x00	; 0
    4f6e:	90 93 a4 28 	sts	0x28A4, r25	; 0x8028a4 <Process_Interrupt_flag>
pinMode():
    4f72:	62 e0       	ldi	r22, 0x02	; 2
    4f74:	83 e2       	ldi	r24, 0x23	; 35
    4f76:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f7a:	62 e0       	ldi	r22, 0x02	; 2
    4f7c:	85 e2       	ldi	r24, 0x25	; 37
    4f7e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f82:	62 e0       	ldi	r22, 0x02	; 2
    4f84:	84 e2       	ldi	r24, 0x24	; 36
    4f86:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
    4f8a:	62 e0       	ldi	r22, 0x02	; 2
    4f8c:	82 e2       	ldi	r24, 0x22	; 34
    4f8e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <pinMode.part.1>
attachClick():
    4f92:	8f e5       	ldi	r24, 0x5F	; 95
    4f94:	91 e1       	ldi	r25, 0x11	; 17
    4f96:	80 93 55 2a 	sts	0x2A55, r24	; 0x802a55 <button1+0xd>
    4f9a:	90 93 56 2a 	sts	0x2A56, r25	; 0x802a56 <button1+0xe>
attachLongPressStart():
    4f9e:	8b e4       	ldi	r24, 0x4B	; 75
    4fa0:	9d e0       	ldi	r25, 0x0D	; 13
    4fa2:	80 93 5b 2a 	sts	0x2A5B, r24	; 0x802a5b <button1+0x13>
    4fa6:	90 93 5c 2a 	sts	0x2A5C, r25	; 0x802a5c <button1+0x14>
attachClick():
    4faa:	81 e0       	ldi	r24, 0x01	; 1
    4fac:	9d e0       	ldi	r25, 0x0D	; 13
    4fae:	80 93 36 2a 	sts	0x2A36, r24	; 0x802a36 <button2+0xd>
    4fb2:	90 93 37 2a 	sts	0x2A37, r25	; 0x802a37 <button2+0xe>
attachDuringLongPress():
    4fb6:	8a ee       	ldi	r24, 0xEA	; 234
    4fb8:	9c e0       	ldi	r25, 0x0C	; 12
    4fba:	80 93 40 2a 	sts	0x2A40, r24	; 0x802a40 <button2+0x17>
    4fbe:	90 93 41 2a 	sts	0x2A41, r25	; 0x802a41 <button2+0x18>
attachLongPressStop():
    4fc2:	8a e4       	ldi	r24, 0x4A	; 74
    4fc4:	95 e0       	ldi	r25, 0x05	; 5
    4fc6:	80 93 3e 2a 	sts	0x2A3E, r24	; 0x802a3e <button2+0x15>
    4fca:	90 93 3f 2a 	sts	0x2A3F, r25	; 0x802a3f <button2+0x16>
attachClick():
    4fce:	81 e9       	ldi	r24, 0x91	; 145
    4fd0:	9c e0       	ldi	r25, 0x0C	; 12
    4fd2:	80 93 17 2a 	sts	0x2A17, r24	; 0x802a17 <button3+0xd>
    4fd6:	90 93 18 2a 	sts	0x2A18, r25	; 0x802a18 <button3+0xe>
attachDuringLongPress():
    4fda:	8a e7       	ldi	r24, 0x7A	; 122
    4fdc:	9c e0       	ldi	r25, 0x0C	; 12
    4fde:	80 93 21 2a 	sts	0x2A21, r24	; 0x802a21 <button3+0x17>
    4fe2:	90 93 22 2a 	sts	0x2A22, r25	; 0x802a22 <button3+0x18>
attachLongPressStop():
    4fe6:	8f e3       	ldi	r24, 0x3F	; 63
    4fe8:	95 e0       	ldi	r25, 0x05	; 5
    4fea:	80 93 1f 2a 	sts	0x2A1F, r24	; 0x802a1f <button3+0x15>
    4fee:	90 93 20 2a 	sts	0x2A20, r25	; 0x802a20 <button3+0x16>
attachClick():
    4ff2:	87 e1       	ldi	r24, 0x17	; 23
    4ff4:	9c e0       	ldi	r25, 0x0C	; 12
    4ff6:	80 93 f8 29 	sts	0x29F8, r24	; 0x8029f8 <button4+0xd>
    4ffa:	90 93 f9 29 	sts	0x29F9, r25	; 0x8029f9 <button4+0xe>
attachLongPressStart():
    4ffe:	80 ef       	ldi	r24, 0xF0	; 240
    5000:	9b e0       	ldi	r25, 0x0B	; 11
    5002:	80 93 fe 29 	sts	0x29FE, r24	; 0x8029fe <button4+0x13>
    5006:	90 93 ff 29 	sts	0x29FF, r25	; 0x8029ff <button4+0x14>
setup():
    500a:	82 ea       	ldi	r24, 0xA2	; 162
    500c:	9b e2       	ldi	r25, 0x2B	; 43
    500e:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
DISPLAY_DIGIT2():
    5012:	ea e0       	ldi	r30, 0x0A	; 10
    5014:	ee 2e       	mov	r14, r30
    5016:	f1 2c       	mov	r15, r1
    5018:	08 e1       	ldi	r16, 0x18	; 24
    501a:	10 e0       	ldi	r17, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    501c:	fe e1       	ldi	r31, 0x1E	; 30
    501e:	4f 2e       	mov	r4, r31
    5020:	51 2c       	mov	r5, r1
    5022:	a9 e1       	ldi	r26, 0x19	; 25
    5024:	6a 2e       	mov	r6, r26
    5026:	71 2c       	mov	r7, r1
DISPLAY_DIGIT1():
    5028:	b8 e1       	ldi	r27, 0x18	; 24
    502a:	2b 2e       	mov	r2, r27
    502c:	31 2c       	mov	r3, r1
DISP_UPDATE():
    502e:	8d eb       	ldi	r24, 0xBD	; 189
    5030:	9b e2       	ldi	r25, 0x2B	; 43
    5032:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
loop():
    5036:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    503a:	80 91 04 28 	lds	r24, 0x2804	; 0x802804 <StopVersionDisplay>
    503e:	88 23       	and	r24, r24
    5040:	99 f1       	breq	.+102    	; 0x50a8 <main+0x732>
    5042:	82 ea       	ldi	r24, 0xA2	; 162
    5044:	9b e2       	ldi	r25, 0x2B	; 43
    5046:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
    504a:	89 e1       	ldi	r24, 0x19	; 25
    504c:	90 e0       	ldi	r25, 0x00	; 0
    504e:	0e 94 02 0b 	call	0x1604	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
DISPLAY_DIGIT2():
    5052:	82 e2       	ldi	r24, 0x22	; 34
    5054:	90 e0       	ldi	r25, 0x00	; 0
    5056:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    505a:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    505e:	00 93 e9 28 	sts	0x28E9, r16	; 0x8028e9 <digits2+0x2>
    5062:	10 93 ea 28 	sts	0x28EA, r17	; 0x8028ea <digits2+0x3>
    5066:	00 93 eb 28 	sts	0x28EB, r16	; 0x8028eb <digits2+0x4>
    506a:	10 93 ec 28 	sts	0x28EC, r17	; 0x8028ec <digits2+0x5>
    506e:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x6>
    5072:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5076:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    507a:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    507e:	84 e0       	ldi	r24, 0x04	; 4
    5080:	90 e0       	ldi	r25, 0x00	; 0
    5082:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5086:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    508a:	10 92 f3 28 	sts	0x28F3, r1	; 0x8028f3 <digits1+0x4>
    508e:	10 92 f4 28 	sts	0x28F4, r1	; 0x8028f4 <digits1+0x5>
    5092:	81 e0       	ldi	r24, 0x01	; 1
    5094:	90 e0       	ldi	r25, 0x00	; 0
    5096:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    509a:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
loop():
    509e:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
main():
    50a2:	0e 94 ba 06 	call	0xd74	; 0xd74 <serialEventRun()>
    50a6:	c3 cf       	rjmp	.-122    	; 0x502e <main+0x6b8>
stop():
    50a8:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <VersionDisplay>
    50ac:	10 92 ad 2b 	sts	0x2BAD, r1	; 0x802bad <VersionDisplay+0xb>
    50b0:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <VersionDisplay+0xc>
    50b4:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <VersionDisplay+0xd>
    50b8:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <VersionDisplay+0xe>
    50bc:	10 92 b1 2b 	sts	0x2BB1, r1	; 0x802bb1 <VersionDisplay+0xf>
    50c0:	10 92 b2 2b 	sts	0x2BB2, r1	; 0x802bb2 <VersionDisplay+0x10>
loop():
    50c4:	20 e0       	ldi	r18, 0x00	; 0
    50c6:	30 e0       	ldi	r19, 0x00	; 0
    50c8:	40 ef       	ldi	r20, 0xF0	; 240
    50ca:	52 e4       	ldi	r21, 0x42	; 66
    50cc:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    50d0:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    50d4:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    50d8:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    50dc:	0e 94 21 38 	call	0x7042	; 0x7042 <__gesf2>
    50e0:	87 fd       	sbrc	r24, 7
    50e2:	8c c0       	rjmp	.+280    	; 0x51fc <main+0x886>
Probe_Error():
    50e4:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <DOT2_0>
    50e8:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <DOT2_2>
    50ec:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    50f0:	10 92 bb 28 	sts	0x28BB, r1	; 0x8028bb <DOT1_2>
    50f4:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    50f8:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    50fc:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    5100:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    5104:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    5108:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    510c:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    5110:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    5114:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <ENTER_BUT>
digitalWrite():
    5118:	60 e0       	ldi	r22, 0x00	; 0
    511a:	8c e0       	ldi	r24, 0x0C	; 12
    511c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    5120:	60 e0       	ldi	r22, 0x00	; 0
    5122:	8d e0       	ldi	r24, 0x0D	; 13
    5124:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5128:	8b e0       	ldi	r24, 0x0B	; 11
    512a:	90 e0       	ldi	r25, 0x00	; 0
    512c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5130:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5134:	81 e1       	ldi	r24, 0x11	; 17
    5136:	90 e0       	ldi	r25, 0x00	; 0
    5138:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    513c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5140:	27 e1       	ldi	r18, 0x17	; 23
    5142:	30 e0       	ldi	r19, 0x00	; 0
    5144:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    5148:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    514c:	4e e0       	ldi	r20, 0x0E	; 14
    514e:	50 e0       	ldi	r21, 0x00	; 0
    5150:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    5154:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5158:	4f e0       	ldi	r20, 0x0F	; 15
    515a:	50 e0       	ldi	r21, 0x00	; 0
    515c:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits1>
    5160:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits1+0x1>
    5164:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5168:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    516c:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    5170:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    5174:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5178:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
interval():
    517c:	80 91 5a 2b 	lds	r24, 0x2B5A	; 0x802b5a <BUZZ_TICK2+0x9>
    5180:	90 91 5b 2b 	lds	r25, 0x2B5B	; 0x802b5b <BUZZ_TICK2+0xa>
    5184:	89 2b       	or	r24, r25
    5186:	81 f1       	breq	.+96     	; 0x51e8 <main+0x872>
    5188:	88 ee       	ldi	r24, 0xE8	; 232
    518a:	93 e0       	ldi	r25, 0x03	; 3
    518c:	a0 e0       	ldi	r26, 0x00	; 0
    518e:	b0 e0       	ldi	r27, 0x00	; 0
    5190:	80 93 52 2b 	sts	0x2B52, r24	; 0x802b52 <BUZZ_TICK2+0x1>
    5194:	90 93 53 2b 	sts	0x2B53, r25	; 0x802b53 <BUZZ_TICK2+0x2>
    5198:	a0 93 54 2b 	sts	0x2B54, r26	; 0x802b54 <BUZZ_TICK2+0x3>
    519c:	b0 93 55 2b 	sts	0x2B55, r27	; 0x802b55 <BUZZ_TICK2+0x4>
    51a0:	80 91 75 2b 	lds	r24, 0x2B75	; 0x802b75 <BUZZ_TICK1+0x9>
    51a4:	90 91 76 2b 	lds	r25, 0x2B76	; 0x802b76 <BUZZ_TICK1+0xa>
    51a8:	89 2b       	or	r24, r25
    51aa:	19 f1       	breq	.+70     	; 0x51f2 <main+0x87c>
    51ac:	80 ed       	ldi	r24, 0xD0	; 208
    51ae:	97 e0       	ldi	r25, 0x07	; 7
    51b0:	a0 e0       	ldi	r26, 0x00	; 0
    51b2:	b0 e0       	ldi	r27, 0x00	; 0
    51b4:	80 93 6d 2b 	sts	0x2B6D, r24	; 0x802b6d <BUZZ_TICK1+0x1>
    51b8:	90 93 6e 2b 	sts	0x2B6E, r25	; 0x802b6e <BUZZ_TICK1+0x2>
    51bc:	a0 93 6f 2b 	sts	0x2B6F, r26	; 0x802b6f <BUZZ_TICK1+0x3>
    51c0:	b0 93 70 2b 	sts	0x2B70, r27	; 0x802b70 <BUZZ_TICK1+0x4>
Probe_Error():
    51c4:	80 91 b0 28 	lds	r24, 0x28B0	; 0x8028b0 <REP>
    51c8:	90 91 b1 28 	lds	r25, 0x28B1	; 0x8028b1 <REP+0x1>
    51cc:	89 2b       	or	r24, r25
    51ce:	09 f0       	breq	.+2      	; 0x51d2 <main+0x85c>
    51d0:	68 cf       	rjmp	.-304    	; 0x50a2 <main+0x72c>
BUZZ_TICK_START():
    51d2:	8c e6       	ldi	r24, 0x6C	; 108
    51d4:	9b e2       	ldi	r25, 0x2B	; 43
    51d6:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
Probe_Error():
    51da:	81 e0       	ldi	r24, 0x01	; 1
    51dc:	90 e0       	ldi	r25, 0x00	; 0
    51de:	80 93 b0 28 	sts	0x28B0, r24	; 0x8028b0 <REP>
    51e2:	90 93 b1 28 	sts	0x28B1, r25	; 0x8028b1 <REP+0x1>
    51e6:	5d cf       	rjmp	.-326    	; 0x50a2 <main+0x72c>
main():
    51e8:	80 e4       	ldi	r24, 0x40	; 64
    51ea:	92 e4       	ldi	r25, 0x42	; 66
    51ec:	af e0       	ldi	r26, 0x0F	; 15
    51ee:	b0 e0       	ldi	r27, 0x00	; 0
    51f0:	cf cf       	rjmp	.-98     	; 0x5190 <main+0x81a>
    51f2:	80 e8       	ldi	r24, 0x80	; 128
    51f4:	94 e8       	ldi	r25, 0x84	; 132
    51f6:	ae e1       	ldi	r26, 0x1E	; 30
    51f8:	b0 e0       	ldi	r27, 0x00	; 0
    51fa:	dc cf       	rjmp	.-72     	; 0x51b4 <main+0x83e>
digitalRead():
    51fc:	85 e2       	ldi	r24, 0x25	; 37
    51fe:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
    5202:	d0 90 4f 28 	lds	r13, 0x284F	; 0x80284f <but1>
but_check():
    5206:	81 11       	cpse	r24, r1
    5208:	42 c0       	rjmp	.+132    	; 0x528e <main+0x918>
digitalRead():
    520a:	84 e2       	ldi	r24, 0x24	; 36
    520c:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    5210:	81 11       	cpse	r24, r1
    5212:	3d c0       	rjmp	.+122    	; 0x528e <main+0x918>
    5214:	d1 10       	cpse	r13, r1
    5216:	3b c0       	rjmp	.+118    	; 0x528e <main+0x918>
    5218:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    521c:	60 93 4b 28 	sts	0x284B, r22	; 0x80284b <start_tt>
    5220:	70 93 4c 28 	sts	0x284C, r23	; 0x80284c <start_tt+0x1>
    5224:	80 93 4d 28 	sts	0x284D, r24	; 0x80284d <start_tt+0x2>
    5228:	90 93 4e 28 	sts	0x284E, r25	; 0x80284e <start_tt+0x3>
    522c:	81 e0       	ldi	r24, 0x01	; 1
    522e:	80 93 4f 28 	sts	0x284F, r24	; 0x80284f <but1>
loop():
    5232:	80 91 4d 29 	lds	r24, 0x294D	; 0x80294d <LONG_PRESS>
    5236:	88 23       	and	r24, r24
    5238:	11 f4       	brne	.+4      	; 0x523e <main+0x8c8>
    523a:	0c 94 69 36 	jmp	0x6cd2	; 0x6cd2 <main+0x235c>
digitalWrite():
    523e:	60 e0       	ldi	r22, 0x00	; 0
    5240:	8c e0       	ldi	r24, 0x0C	; 12
    5242:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    5246:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    524a:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    524e:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    5252:	88 23       	and	r24, r24
    5254:	09 f4       	brne	.+2      	; 0x5258 <main+0x8e2>
    5256:	1f c7       	rjmp	.+3646   	; 0x6096 <main+0x1720>
    5258:	e3 31       	cpi	r30, 0x13	; 19
    525a:	f1 05       	cpc	r31, r1
    525c:	08 f0       	brcs	.+2      	; 0x5260 <main+0x8ea>
    525e:	21 cf       	rjmp	.-446    	; 0x50a2 <main+0x72c>
    5260:	ec 5c       	subi	r30, 0xCC	; 204
    5262:	f6 4d       	sbci	r31, 0xD6	; 214
    5264:	0c 94 d9 38 	jmp	0x71b2	; 0x71b2 <__tablejump2__>
    5268:	9b 29       	or	r25, r11
    526a:	f4 29       	or	r31, r4
    526c:	32 2a       	or	r3, r18
    526e:	9d 2a       	or	r9, r29
    5270:	09 2b       	or	r16, r25
    5272:	57 2b       	or	r21, r23
    5274:	a6 2b       	or	r26, r22
    5276:	e7 2b       	or	r30, r23
    5278:	14 2c       	mov	r1, r4
    527a:	61 2c       	mov	r6, r1
    527c:	b0 2c       	mov	r11, r0
    527e:	f5 2c       	mov	r15, r5
    5280:	37 2d       	mov	r19, r7
    5282:	b0 2d       	mov	r27, r0
    5284:	e2 2d       	mov	r30, r2
    5286:	5a 2e       	mov	r5, r26
    5288:	5f 2e       	mov	r5, r31
    528a:	8c 2e       	mov	r8, r28
    528c:	bf 2e       	mov	r11, r31
digitalRead():
    528e:	85 e2       	ldi	r24, 0x25	; 37
    5290:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    5294:	88 23       	and	r24, r24
    5296:	61 f0       	breq	.+24     	; 0x52b0 <main+0x93a>
    5298:	dd 20       	and	r13, r13
    529a:	09 f4       	brne	.+2      	; 0x529e <main+0x928>
    529c:	ca cf       	rjmp	.-108    	; 0x5232 <main+0x8bc>
digitalRead():
    529e:	85 e2       	ldi	r24, 0x25	; 37
    52a0:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    52a4:	81 30       	cpi	r24, 0x01	; 1
    52a6:	09 f0       	breq	.+2      	; 0x52aa <main+0x934>
    52a8:	3f c0       	rjmp	.+126    	; 0x5328 <main+0x9b2>
    52aa:	10 92 4f 28 	sts	0x284F, r1	; 0x80284f <but1>
    52ae:	c1 cf       	rjmp	.-126    	; 0x5232 <main+0x8bc>
    52b0:	c0 90 4d 29 	lds	r12, 0x294D	; 0x80294d <LONG_PRESS>
digitalRead():
    52b4:	84 e2       	ldi	r24, 0x24	; 36
    52b6:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    52ba:	81 11       	cpse	r24, r1
    52bc:	ed cf       	rjmp	.-38     	; 0x5298 <main+0x922>
    52be:	dd 20       	and	r13, r13
    52c0:	09 f4       	brne	.+2      	; 0x52c4 <main+0x94e>
    52c2:	b7 cf       	rjmp	.-146    	; 0x5232 <main+0x8bc>
    52c4:	0e 94 b3 08 	call	0x1166	; 0x1166 <millis>
    52c8:	80 90 4b 28 	lds	r8, 0x284B	; 0x80284b <start_tt>
    52cc:	90 90 4c 28 	lds	r9, 0x284C	; 0x80284c <start_tt+0x1>
    52d0:	a0 90 4d 28 	lds	r10, 0x284D	; 0x80284d <start_tt+0x2>
    52d4:	b0 90 4e 28 	lds	r11, 0x284E	; 0x80284e <start_tt+0x3>
    52d8:	68 19       	sub	r22, r8
    52da:	79 09       	sbc	r23, r9
    52dc:	8a 09       	sbc	r24, r10
    52de:	9b 09       	sbc	r25, r11
    52e0:	68 3b       	cpi	r22, 0xB8	; 184
    52e2:	7b 40       	sbci	r23, 0x0B	; 11
    52e4:	81 05       	cpc	r24, r1
    52e6:	91 05       	cpc	r25, r1
    52e8:	08 f4       	brcc	.+2      	; 0x52ec <main+0x976>
    52ea:	a3 cf       	rjmp	.-186    	; 0x5232 <main+0x8bc>
    52ec:	84 ef       	ldi	r24, 0xF4	; 244
    52ee:	91 e0       	ldi	r25, 0x01	; 1
    52f0:	0e 94 02 0b 	call	0x1604	; 0x1604 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.29]>
    52f4:	80 91 19 29 	lds	r24, 0x2919	; 0x802919 <ENTER_BUT>
    52f8:	81 11       	cpse	r24, r1
    52fa:	9b cf       	rjmp	.-202    	; 0x5232 <main+0x8bc>
    52fc:	c1 10       	cpse	r12, r1
    52fe:	9f cf       	rjmp	.-194    	; 0x523e <main+0x8c8>
    5300:	8e e5       	ldi	r24, 0x5E	; 94
    5302:	91 e0       	ldi	r25, 0x01	; 1
    5304:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <i>
    5308:	90 93 a0 28 	sts	0x28A0, r25	; 0x8028a0 <i+0x1>
    530c:	81 e0       	ldi	r24, 0x01	; 1
    530e:	80 93 4d 29 	sts	0x294D, r24	; 0x80294d <LONG_PRESS>
    5312:	80 93 4a 28 	sts	0x284A, r24	; 0x80284a <RST_BUTT>
    5316:	80 93 49 28 	sts	0x2849, r24	; 0x802849 <Service_Menu>
    531a:	85 e0       	ldi	r24, 0x05	; 5
    531c:	90 e0       	ldi	r25, 0x00	; 0
    531e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5322:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5326:	85 cf       	rjmp	.-246    	; 0x5232 <main+0x8bc>
digitalRead():
    5328:	84 e2       	ldi	r24, 0x24	; 36
    532a:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <digitalRead.part.3>
but_check():
    532e:	81 30       	cpi	r24, 0x01	; 1
    5330:	09 f0       	breq	.+2      	; 0x5334 <main+0x9be>
    5332:	7f cf       	rjmp	.-258    	; 0x5232 <main+0x8bc>
    5334:	ba cf       	rjmp	.-140    	; 0x52aa <main+0x934>
SET_LONG_PRESS_FUNCTION():
    5336:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    533a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    533e:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5342:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5346:	8c e0       	ldi	r24, 0x0C	; 12
    5348:	90 e0       	ldi	r25, 0x00	; 0
    534a:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    534e:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5352:	80 e1       	ldi	r24, 0x10	; 16
    5354:	90 e0       	ldi	r25, 0x00	; 0
    5356:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    535a:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    535e:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    5362:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    5366:	81 e1       	ldi	r24, 0x11	; 17
    5368:	90 e0       	ldi	r25, 0x00	; 0
    536a:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    536e:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5372:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5376:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    537a:	89 31       	cpi	r24, 0x19	; 25
    537c:	91 05       	cpc	r25, r1
    537e:	4c f4       	brge	.+18     	; 0x5392 <main+0xa1c>
DISPLAY_DIGIT1():
    5380:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5384:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5388:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    538c:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5390:	03 c7       	rjmp	.+3590   	; 0x6198 <main+0x1822>
SET_LONG_PRESS_FUNCTION():
    5392:	20 91 1a 29 	lds	r18, 0x291A	; 0x80291a <SET_LONG_VALUE>
    5396:	30 91 1b 29 	lds	r19, 0x291B	; 0x80291b <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    539a:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    539e:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    53a2:	23 2b       	or	r18, r19
    53a4:	b1 f4       	brne	.+44     	; 0x53d2 <main+0xa5c>
DISPLAY_DIGIT1():
    53a6:	25 e1       	ldi	r18, 0x15	; 21
    53a8:	30 e0       	ldi	r19, 0x00	; 0
    53aa:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    53ae:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    53b2:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    53b6:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    53ba:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    53be:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    53c2:	c3 97       	sbiw	r24, 0x33	; 51
    53c4:	0c f4       	brge	.+2      	; 0x53c8 <main+0xa52>
    53c6:	6d ce       	rjmp	.-806    	; 0x50a2 <main+0x72c>
    53c8:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    53cc:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    53d0:	68 ce       	rjmp	.-816    	; 0x50a2 <main+0x72c>
DISPLAY_DIGIT1():
    53d2:	24 e1       	ldi	r18, 0x14	; 20
    53d4:	30 e0       	ldi	r19, 0x00	; 0
    53d6:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    53da:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    53de:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    53e2:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    53e6:	e9 cf       	rjmp	.-46     	; 0x53ba <main+0xa44>
SET_LONG_PRESS_FUNCTION():
    53e8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    53ec:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    53f0:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    53f4:	8c e1       	ldi	r24, 0x1C	; 28
    53f6:	90 e0       	ldi	r25, 0x00	; 0
    53f8:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    53fc:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5400:	84 e1       	ldi	r24, 0x14	; 20
    5402:	90 e0       	ldi	r25, 0x00	; 0
    5404:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5408:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    540c:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    5410:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    5414:	80 e1       	ldi	r24, 0x10	; 16
    5416:	90 e0       	ldi	r25, 0x00	; 0
    5418:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    541c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5420:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5424:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5428:	89 31       	cpi	r24, 0x19	; 25
    542a:	91 05       	cpc	r25, r1
    542c:	0c f4       	brge	.+2      	; 0x5430 <main+0xaba>
    542e:	a8 cf       	rjmp	.-176    	; 0x5380 <main+0xa0a>
    5430:	20 91 1c 29 	lds	r18, 0x291C	; 0x80291c <SET_LONG_VALUE+0x2>
    5434:	30 91 1d 29 	lds	r19, 0x291D	; 0x80291d <SET_LONG_VALUE+0x3>
    5438:	23 2b       	or	r18, r19
    543a:	59 f4       	brne	.+22     	; 0x5452 <main+0xadc>
DISPLAY_DIGIT1():
    543c:	2d e1       	ldi	r18, 0x1D	; 29
    543e:	30 e0       	ldi	r19, 0x00	; 0
    5440:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    5444:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5448:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1+0x2>
    544c:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x3>
    5450:	c6 cf       	rjmp	.-116    	; 0x53de <main+0xa68>
    5452:	2d e1       	ldi	r18, 0x1D	; 29
    5454:	30 e0       	ldi	r19, 0x00	; 0
    5456:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    545a:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    545e:	25 e1       	ldi	r18, 0x15	; 21
    5460:	30 e0       	ldi	r19, 0x00	; 0
    5462:	b9 cf       	rjmp	.-142    	; 0x53d6 <main+0xa60>
SET_LONG_PRESS_FUNCTION():
    5464:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5468:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
DISPLAY_DIGIT2():
    546c:	8c e0       	ldi	r24, 0x0C	; 12
    546e:	90 e0       	ldi	r25, 0x00	; 0
    5470:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5474:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5478:	8d e0       	ldi	r24, 0x0D	; 13
    547a:	90 e0       	ldi	r25, 0x00	; 0
    547c:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5480:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5484:	85 e1       	ldi	r24, 0x15	; 21
    5486:	90 e0       	ldi	r25, 0x00	; 0
    5488:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    548c:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5490:	8f e0       	ldi	r24, 0x0F	; 15
    5492:	90 e0       	ldi	r25, 0x00	; 0
    5494:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5498:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
    549c:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    54a0:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    54a4:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    54a8:	29 31       	cpi	r18, 0x19	; 25
    54aa:	31 05       	cpc	r19, r1
    54ac:	d4 f4       	brge	.+52     	; 0x54e2 <main+0xb6c>
    54ae:	90 91 9d 28 	lds	r25, 0x289D	; 0x80289d <BLINK_STATS>
    54b2:	91 11       	cpse	r25, r1
    54b4:	11 c0       	rjmp	.+34     	; 0x54d8 <main+0xb62>
DISPLAY_DIGIT1():
    54b6:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    54ba:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    54be:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    54c2:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    54c6:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    54ca:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    54ce:	88 23       	and	r24, r24
    54d0:	f1 f0       	breq	.+60     	; 0x550e <main+0xb98>
    54d2:	85 e1       	ldi	r24, 0x15	; 21
    54d4:	90 e0       	ldi	r25, 0x00	; 0
    54d6:	81 c0       	rjmp	.+258    	; 0x55da <main+0xc64>
    54d8:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    54dc:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    54e0:	f6 cf       	rjmp	.-20     	; 0x54ce <main+0xb58>
    54e2:	81 11       	cpse	r24, r1
    54e4:	19 c0       	rjmp	.+50     	; 0x5518 <main+0xba2>
    54e6:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_LONG_VALUE+0x4>
    54ea:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_LONG_VALUE+0x5>
    54ee:	2a e0       	ldi	r18, 0x0A	; 10
    54f0:	28 9f       	mul	r18, r24
    54f2:	b0 01       	movw	r22, r0
    54f4:	29 9f       	mul	r18, r25
    54f6:	70 0d       	add	r23, r0
    54f8:	11 24       	eor	r1, r1
    54fa:	07 2e       	mov	r0, r23
    54fc:	00 0c       	add	r0, r0
    54fe:	88 0b       	sbc	r24, r24
    5500:	99 0b       	sbc	r25, r25
    5502:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5506:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    550a:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    550e:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    5512:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    5516:	65 c0       	rjmp	.+202    	; 0x55e2 <main+0xc6c>
    5518:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x26>
    551c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x27>
    5520:	2a e0       	ldi	r18, 0x0A	; 10
    5522:	28 9f       	mul	r18, r24
    5524:	b0 01       	movw	r22, r0
    5526:	29 9f       	mul	r18, r25
    5528:	70 0d       	add	r23, r0
    552a:	11 24       	eor	r1, r1
    552c:	07 2e       	mov	r0, r23
    552e:	00 0c       	add	r0, r0
    5530:	88 0b       	sbc	r24, r24
    5532:	99 0b       	sbc	r25, r25
    5534:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5538:	cc cf       	rjmp	.-104    	; 0x54d2 <main+0xb5c>
    553a:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    553e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5542:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5546:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    554a:	80 e1       	ldi	r24, 0x10	; 16
    554c:	90 e0       	ldi	r25, 0x00	; 0
    554e:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5552:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5556:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    555a:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    555e:	22 e1       	ldi	r18, 0x12	; 18
    5560:	30 e0       	ldi	r19, 0x00	; 0
    5562:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    5566:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    556a:	2f e0       	ldi	r18, 0x0F	; 15
    556c:	30 e0       	ldi	r19, 0x00	; 0
    556e:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    5572:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5576:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    557a:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    557e:	29 31       	cpi	r18, 0x19	; 25
    5580:	31 05       	cpc	r19, r1
    5582:	ac f4       	brge	.+42     	; 0x55ae <main+0xc38>
    5584:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5588:	81 11       	cpse	r24, r1
    558a:	5d c2       	rjmp	.+1210   	; 0x5a46 <main+0x10d0>
DISPLAY_DIGIT1():
    558c:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5590:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5594:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5598:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    559c:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    55a0:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    55a4:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    55a8:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
    55ac:	1a c0       	rjmp	.+52     	; 0x55e2 <main+0xc6c>
SET_LONG_PRESS_FUNCTION():
    55ae:	20 91 20 29 	lds	r18, 0x2920	; 0x802920 <SET_LONG_VALUE+0x6>
    55b2:	30 91 21 29 	lds	r19, 0x2921	; 0x802921 <SET_LONG_VALUE+0x7>
    55b6:	23 2b       	or	r18, r19
    55b8:	c9 f4       	brne	.+50     	; 0x55ec <main+0xc76>
DISPLAY_DIGIT1():
    55ba:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    55be:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    55c2:	27 e1       	ldi	r18, 0x17	; 23
    55c4:	30 e0       	ldi	r19, 0x00	; 0
    55c6:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    55ca:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    55ce:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    55d2:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    55d6:	8f e1       	ldi	r24, 0x1F	; 31
    55d8:	90 e0       	ldi	r25, 0x00	; 0
    55da:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    55de:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    55e2:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    55e6:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    55ea:	eb ce       	rjmp	.-554    	; 0x53c2 <main+0xa4c>
DISPLAY_DIGIT1():
    55ec:	8c e0       	ldi	r24, 0x0C	; 12
    55ee:	90 e0       	ldi	r25, 0x00	; 0
    55f0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    55f4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    55f8:	87 e1       	ldi	r24, 0x17	; 23
    55fa:	90 e0       	ldi	r25, 0x00	; 0
    55fc:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5600:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5604:	8d e0       	ldi	r24, 0x0D	; 13
    5606:	90 e0       	ldi	r25, 0x00	; 0
    5608:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    560c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5610:	7e cf       	rjmp	.-260    	; 0x550e <main+0xb98>
SET_LONG_PRESS_FUNCTION():
    5612:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5616:	8b e0       	ldi	r24, 0x0B	; 11
    5618:	90 e0       	ldi	r25, 0x00	; 0
    561a:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    561e:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5622:	81 e1       	ldi	r24, 0x11	; 17
    5624:	90 e0       	ldi	r25, 0x00	; 0
    5626:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    562a:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    562e:	87 e1       	ldi	r24, 0x17	; 23
    5630:	90 e0       	ldi	r25, 0x00	; 0
    5632:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5636:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    563a:	8c e0       	ldi	r24, 0x0C	; 12
    563c:	90 e0       	ldi	r25, 0x00	; 0
    563e:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5642:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5646:	20 91 9f 28 	lds	r18, 0x289F	; 0x80289f <i>
    564a:	30 91 a0 28 	lds	r19, 0x28A0	; 0x8028a0 <i+0x1>
    564e:	29 31       	cpi	r18, 0x19	; 25
    5650:	31 05       	cpc	r19, r1
    5652:	0c f4       	brge	.+2      	; 0x5656 <main+0xce0>
    5654:	97 cf       	rjmp	.-210    	; 0x5584 <main+0xc0e>
    5656:	20 91 22 29 	lds	r18, 0x2922	; 0x802922 <SET_LONG_VALUE+0x8>
    565a:	30 91 23 29 	lds	r19, 0x2923	; 0x802923 <SET_LONG_VALUE+0x9>
    565e:	23 2b       	or	r18, r19
    5660:	89 f4       	brne	.+34     	; 0x5684 <main+0xd0e>
DISPLAY_DIGIT1():
    5662:	20 e2       	ldi	r18, 0x20	; 32
    5664:	30 e0       	ldi	r19, 0x00	; 0
    5666:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    566a:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    566e:	60 92 f1 28 	sts	0x28F1, r6	; 0x8028f1 <digits1+0x2>
    5672:	70 92 f2 28 	sts	0x28F2, r7	; 0x8028f2 <digits1+0x3>
    5676:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    567a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    567e:	8e e0       	ldi	r24, 0x0E	; 14
    5680:	90 e0       	ldi	r25, 0x00	; 0
    5682:	ab cf       	rjmp	.-170    	; 0x55da <main+0xc64>
    5684:	8f e0       	ldi	r24, 0x0F	; 15
    5686:	90 e0       	ldi	r25, 0x00	; 0
    5688:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    568c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5690:	84 e1       	ldi	r24, 0x14	; 20
    5692:	90 e0       	ldi	r25, 0x00	; 0
    5694:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5698:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    569c:	8e e0       	ldi	r24, 0x0E	; 14
    569e:	90 e0       	ldi	r25, 0x00	; 0
    56a0:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    56a4:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    56a8:	8a e1       	ldi	r24, 0x1A	; 26
    56aa:	90 e0       	ldi	r25, 0x00	; 0
    56ac:	96 cf       	rjmp	.-212    	; 0x55da <main+0xc64>
SET_LONG_PRESS_FUNCTION():
    56ae:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    56b2:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    56b6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    56ba:	8b e0       	ldi	r24, 0x0B	; 11
    56bc:	90 e0       	ldi	r25, 0x00	; 0
    56be:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    56c2:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    56c6:	81 e1       	ldi	r24, 0x11	; 17
    56c8:	90 e0       	ldi	r25, 0x00	; 0
    56ca:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    56ce:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    56d2:	80 e2       	ldi	r24, 0x20	; 32
    56d4:	90 e0       	ldi	r25, 0x00	; 0
    56d6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    56da:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    56de:	80 e1       	ldi	r24, 0x10	; 16
    56e0:	90 e0       	ldi	r25, 0x00	; 0
    56e2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    56e6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    56ea:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    56ee:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    56f2:	49 97       	sbiw	r24, 0x19	; 25
    56f4:	0c f4       	brge	.+2      	; 0x56f8 <main+0xd82>
    56f6:	46 cf       	rjmp	.-372    	; 0x5584 <main+0xc0e>
    56f8:	80 91 24 29 	lds	r24, 0x2924	; 0x802924 <SET_LONG_VALUE+0xa>
    56fc:	90 91 25 29 	lds	r25, 0x2925	; 0x802925 <SET_LONG_VALUE+0xb>
    5700:	89 2b       	or	r24, r25
    5702:	99 f0       	breq	.+38     	; 0x572a <main+0xdb4>
DISPLAY_DIGIT1():
    5704:	84 e2       	ldi	r24, 0x24	; 36
    5706:	90 e0       	ldi	r25, 0x00	; 0
    5708:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    570c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5710:	8a e1       	ldi	r24, 0x1A	; 26
    5712:	90 e0       	ldi	r25, 0x00	; 0
    5714:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5718:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    571c:	8c e0       	ldi	r24, 0x0C	; 12
    571e:	90 e0       	ldi	r25, 0x00	; 0
    5720:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5724:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5728:	3d cf       	rjmp	.-390    	; 0x55a4 <main+0xc2e>
    572a:	84 e2       	ldi	r24, 0x24	; 36
    572c:	90 e0       	ldi	r25, 0x00	; 0
    572e:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5732:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5736:	8a e1       	ldi	r24, 0x1A	; 26
    5738:	90 e0       	ldi	r25, 0x00	; 0
    573a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    573e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5742:	e0 92 f3 28 	sts	0x28F3, r14	; 0x8028f3 <digits1+0x4>
    5746:	f0 92 f4 28 	sts	0x28F4, r15	; 0x8028f4 <digits1+0x5>
    574a:	2c cf       	rjmp	.-424    	; 0x55a4 <main+0xc2e>
SET_LONG_PRESS_FUNCTION():
    574c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5750:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5754:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    5758:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    575c:	2d e0       	ldi	r18, 0x0D	; 13
    575e:	30 e0       	ldi	r19, 0x00	; 0
    5760:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    5764:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    5768:	8a e1       	ldi	r24, 0x1A	; 26
    576a:	90 e0       	ldi	r25, 0x00	; 0
    576c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5770:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5774:	4e e0       	ldi	r20, 0x0E	; 14
    5776:	50 e0       	ldi	r21, 0x00	; 0
    5778:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    577c:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5780:	40 91 9f 28 	lds	r20, 0x289F	; 0x80289f <i>
    5784:	50 91 a0 28 	lds	r21, 0x28A0	; 0x8028a0 <i+0x1>
    5788:	49 31       	cpi	r20, 0x19	; 25
    578a:	51 05       	cpc	r21, r1
    578c:	0c f4       	brge	.+2      	; 0x5790 <main+0xe1a>
    578e:	f8 cd       	rjmp	.-1040   	; 0x5380 <main+0xa0a>
    5790:	60 91 26 29 	lds	r22, 0x2926	; 0x802926 <SET_LONG_VALUE+0xc>
    5794:	70 91 27 29 	lds	r23, 0x2927	; 0x802927 <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    5798:	e0 92 ef 28 	sts	0x28EF, r14	; 0x8028ef <digits1>
    579c:	f0 92 f0 28 	sts	0x28F0, r15	; 0x8028f0 <digits1+0x1>
    57a0:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    57a4:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    57a8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    57ac:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    57b0:	82 e0       	ldi	r24, 0x02	; 2
    57b2:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    57b4:	67 2b       	or	r22, r23
    57b6:	11 f4       	brne	.+4      	; 0x57bc <main+0xe46>
DISPLAY_DIGIT1():
    57b8:	81 e0       	ldi	r24, 0x01	; 1
    57ba:	90 e0       	ldi	r25, 0x00	; 0
    57bc:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    57c0:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    57c4:	43 33       	cpi	r20, 0x33	; 51
    57c6:	51 05       	cpc	r21, r1
    57c8:	0c f0       	brlt	.+2      	; 0x57cc <main+0xe56>
    57ca:	fe cd       	rjmp	.-1028   	; 0x53c8 <main+0xa52>
    57cc:	6a cc       	rjmp	.-1836   	; 0x50a2 <main+0x72c>
    57ce:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    57d2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    57d6:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    57da:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    57de:	8d e0       	ldi	r24, 0x0D	; 13
    57e0:	90 e0       	ldi	r25, 0x00	; 0
    57e2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    57e6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    57ea:	8a e1       	ldi	r24, 0x1A	; 26
    57ec:	90 e0       	ldi	r25, 0x00	; 0
    57ee:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    57f2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    57f6:	81 e0       	ldi	r24, 0x01	; 1
    57f8:	90 e0       	ldi	r25, 0x00	; 0
    57fa:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    57fe:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5802:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5806:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    580a:	49 97       	sbiw	r24, 0x19	; 25
    580c:	04 f5       	brge	.+64     	; 0x584e <main+0xed8>
    580e:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5812:	81 11       	cpse	r24, r1
    5814:	d2 c1       	rjmp	.+932    	; 0x5bba <main+0x1244>
    5816:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    581a:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    581e:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5822:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5826:	73 ce       	rjmp	.-794    	; 0x550e <main+0xb98>
    5828:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    582c:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5830:	20 91 4c 29 	lds	r18, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    5834:	21 11       	cpse	r18, r1
    5836:	28 c0       	rjmp	.+80     	; 0x5888 <main+0xf12>
    5838:	49 97       	sbiw	r24, 0x19	; 25
    583a:	4c f4       	brge	.+18     	; 0x584e <main+0xed8>
    583c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5840:	81 11       	cpse	r24, r1
    5842:	bb c1       	rjmp	.+886    	; 0x5bba <main+0x1244>
    5844:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5848:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    584c:	60 ce       	rjmp	.-832    	; 0x550e <main+0xb98>
    584e:	80 91 28 29 	lds	r24, 0x2928	; 0x802928 <SET_LONG_VALUE+0xe>
    5852:	90 91 29 29 	lds	r25, 0x2929	; 0x802929 <SET_LONG_VALUE+0xf>
    5856:	24 e6       	ldi	r18, 0x64	; 100
    5858:	28 9f       	mul	r18, r24
    585a:	b0 01       	movw	r22, r0
    585c:	29 9f       	mul	r18, r25
    585e:	70 0d       	add	r23, r0
    5860:	11 24       	eor	r1, r1
    5862:	20 91 2a 29 	lds	r18, 0x292A	; 0x80292a <SET_LONG_VALUE+0x10>
    5866:	30 91 2b 29 	lds	r19, 0x292B	; 0x80292b <SET_LONG_VALUE+0x11>
    586a:	4a e0       	ldi	r20, 0x0A	; 10
    586c:	42 9f       	mul	r20, r18
    586e:	c0 01       	movw	r24, r0
    5870:	43 9f       	mul	r20, r19
    5872:	90 0d       	add	r25, r0
    5874:	11 24       	eor	r1, r1
    5876:	68 0f       	add	r22, r24
    5878:	79 1f       	adc	r23, r25
    587a:	07 2e       	mov	r0, r23
    587c:	00 0c       	add	r0, r0
    587e:	88 0b       	sbc	r24, r24
    5880:	99 0b       	sbc	r25, r25
    5882:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5886:	43 ce       	rjmp	.-890    	; 0x550e <main+0xb98>
    5888:	49 97       	sbiw	r24, 0x19	; 25
    588a:	b4 f4       	brge	.+44     	; 0x58b8 <main+0xf42>
    588c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5890:	81 11       	cpse	r24, r1
    5892:	0d c0       	rjmp	.+26     	; 0x58ae <main+0xf38>
DISPLAY_DIGIT1():
    5894:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5898:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    589c:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    58a0:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    58a4:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    58a8:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    58ac:	12 ce       	rjmp	.-988    	; 0x54d2 <main+0xb5c>
SET_LONG_PRESS_FUNCTION():
    58ae:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    58b2:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    58b6:	0d ce       	rjmp	.-998    	; 0x54d2 <main+0xb5c>
    58b8:	80 91 42 29 	lds	r24, 0x2942	; 0x802942 <SET_LONG_VALUE+0x28>
    58bc:	90 91 43 29 	lds	r25, 0x2943	; 0x802943 <SET_LONG_VALUE+0x29>
    58c0:	2f ce       	rjmp	.-930    	; 0x5520 <main+0xbaa>
    58c2:	dd 24       	eor	r13, r13
    58c4:	d3 94       	inc	r13
    58c6:	d0 92 ba 28 	sts	0x28BA, r13	; 0x8028ba <DOT1_0>
    58ca:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    58ce:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    58d2:	d0 92 ae 28 	sts	0x28AE, r13	; 0x8028ae <CAL2_START>
DISPLAY_DIGIT2():
    58d6:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    58da:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    58de:	8d e0       	ldi	r24, 0x0D	; 13
    58e0:	90 e0       	ldi	r25, 0x00	; 0
    58e2:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    58e6:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    58ea:	8a e1       	ldi	r24, 0x1A	; 26
    58ec:	90 e0       	ldi	r25, 0x00	; 0
    58ee:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    58f2:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    58f6:	82 e0       	ldi	r24, 0x02	; 2
    58f8:	90 e0       	ldi	r25, 0x00	; 0
    58fa:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    58fe:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5902:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5906:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    590a:	49 97       	sbiw	r24, 0x19	; 25
    590c:	c4 f4       	brge	.+48     	; 0x593e <main+0xfc8>
    590e:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5912:	81 11       	cpse	r24, r1
    5914:	0f c0       	rjmp	.+30     	; 0x5934 <main+0xfbe>
DISPLAY_DIGIT1():
    5916:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    591a:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    591e:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5922:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    5926:	8a e1       	ldi	r24, 0x1A	; 26
    5928:	90 e0       	ldi	r25, 0x00	; 0
    592a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    592e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5932:	ed cd       	rjmp	.-1062   	; 0x550e <main+0xb98>
    5934:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5938:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    593c:	f4 cf       	rjmp	.-24     	; 0x5926 <main+0xfb0>
    593e:	80 91 2c 29 	lds	r24, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    5942:	90 91 2d 29 	lds	r25, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    5946:	2a e0       	ldi	r18, 0x0A	; 10
    5948:	28 9f       	mul	r18, r24
    594a:	b0 01       	movw	r22, r0
    594c:	29 9f       	mul	r18, r25
    594e:	70 0d       	add	r23, r0
    5950:	11 24       	eor	r1, r1
    5952:	07 2e       	mov	r0, r23
    5954:	00 0c       	add	r0, r0
    5956:	88 0b       	sbc	r24, r24
    5958:	99 0b       	sbc	r25, r25
    595a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    595e:	e3 cf       	rjmp	.-58     	; 0x5926 <main+0xfb0>
    5960:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5964:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    5968:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    596c:	8d e0       	ldi	r24, 0x0D	; 13
    596e:	90 e0       	ldi	r25, 0x00	; 0
    5970:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5974:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5978:	8a e1       	ldi	r24, 0x1A	; 26
    597a:	90 e0       	ldi	r25, 0x00	; 0
    597c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5980:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5984:	82 e0       	ldi	r24, 0x02	; 2
    5986:	90 e0       	ldi	r25, 0x00	; 0
    5988:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    598c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    5990:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5994:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5998:	49 97       	sbiw	r24, 0x19	; 25
    599a:	b4 f4       	brge	.+44     	; 0x59c8 <main+0x1052>
    599c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    59a0:	81 11       	cpse	r24, r1
    59a2:	0d c0       	rjmp	.+26     	; 0x59be <main+0x1048>
DISPLAY_DIGIT1():
    59a4:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    59a8:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    59ac:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    59b0:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    59b4:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    59b8:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    59bc:	a8 cd       	rjmp	.-1200   	; 0x550e <main+0xb98>
    59be:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    59c2:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    59c6:	f6 cf       	rjmp	.-20     	; 0x59b4 <main+0x103e>
    59c8:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    59cc:	90 91 2f 29 	lds	r25, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    59d0:	2a e0       	ldi	r18, 0x0A	; 10
    59d2:	28 9f       	mul	r18, r24
    59d4:	b0 01       	movw	r22, r0
    59d6:	29 9f       	mul	r18, r25
    59d8:	70 0d       	add	r23, r0
    59da:	11 24       	eor	r1, r1
    59dc:	07 2e       	mov	r0, r23
    59de:	00 0c       	add	r0, r0
    59e0:	88 0b       	sbc	r24, r24
    59e2:	99 0b       	sbc	r25, r25
    59e4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    59e8:	e5 cf       	rjmp	.-54     	; 0x59b4 <main+0x103e>
    59ea:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    59ee:	81 e0       	ldi	r24, 0x01	; 1
    59f0:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    59f4:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    59f8:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    59fc:	07 2e       	mov	r0, r23
    59fe:	00 0c       	add	r0, r0
    5a00:	88 0b       	sbc	r24, r24
    5a02:	99 0b       	sbc	r25, r25
    5a04:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5a08:	8a e1       	ldi	r24, 0x1A	; 26
    5a0a:	90 e0       	ldi	r25, 0x00	; 0
    5a0c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5a10:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5a14:	87 e1       	ldi	r24, 0x17	; 23
    5a16:	90 e0       	ldi	r25, 0x00	; 0
    5a18:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5a1c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5a20:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5a24:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5a28:	49 97       	sbiw	r24, 0x19	; 25
    5a2a:	94 f4       	brge	.+36     	; 0x5a50 <main+0x10da>
    5a2c:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5a30:	81 11       	cpse	r24, r1
    5a32:	09 c0       	rjmp	.+18     	; 0x5a46 <main+0x10d0>
    5a34:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    5a38:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    5a3c:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    5a40:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    5a44:	ce cd       	rjmp	.-1124   	; 0x55e2 <main+0xc6c>
    5a46:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5a4a:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5a4e:	c9 cd       	rjmp	.-1134   	; 0x55e2 <main+0xc6c>
    5a50:	80 91 30 29 	lds	r24, 0x2930	; 0x802930 <SET_LONG_VALUE+0x16>
    5a54:	90 91 31 29 	lds	r25, 0x2931	; 0x802931 <SET_LONG_VALUE+0x17>
    5a58:	24 e6       	ldi	r18, 0x64	; 100
    5a5a:	28 9f       	mul	r18, r24
    5a5c:	b0 01       	movw	r22, r0
    5a5e:	29 9f       	mul	r18, r25
    5a60:	70 0d       	add	r23, r0
    5a62:	11 24       	eor	r1, r1
    5a64:	20 91 32 29 	lds	r18, 0x2932	; 0x802932 <SET_LONG_VALUE+0x18>
    5a68:	30 91 33 29 	lds	r19, 0x2933	; 0x802933 <SET_LONG_VALUE+0x19>
    5a6c:	fe ce       	rjmp	.-516    	; 0x586a <main+0xef4>
    5a6e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5a72:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    5a76:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    5a7a:	07 2e       	mov	r0, r23
    5a7c:	00 0c       	add	r0, r0
    5a7e:	88 0b       	sbc	r24, r24
    5a80:	99 0b       	sbc	r25, r25
    5a82:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5a86:	8a e1       	ldi	r24, 0x1A	; 26
    5a88:	90 e0       	ldi	r25, 0x00	; 0
    5a8a:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5a8e:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5a92:	87 e1       	ldi	r24, 0x17	; 23
    5a94:	90 e0       	ldi	r25, 0x00	; 0
    5a96:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5a9a:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5a9e:	c0 90 30 29 	lds	r12, 0x2930	; 0x802930 <SET_LONG_VALUE+0x16>
    5aa2:	d0 90 31 29 	lds	r13, 0x2931	; 0x802931 <SET_LONG_VALUE+0x17>
    5aa6:	a0 90 32 29 	lds	r10, 0x2932	; 0x802932 <SET_LONG_VALUE+0x18>
    5aaa:	b0 90 33 29 	lds	r11, 0x2933	; 0x802933 <SET_LONG_VALUE+0x19>
    5aae:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5ab2:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5ab6:	49 97       	sbiw	r24, 0x19	; 25
    5ab8:	f4 f5       	brge	.+124    	; 0x5b36 <main+0x11c0>
    5aba:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5abe:	81 11       	cpse	r24, r1
    5ac0:	35 c0       	rjmp	.+106    	; 0x5b2c <main+0x11b6>
    5ac2:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5ac6:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5aca:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    5ace:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    5ad2:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5ad6:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5ada:	c3 97       	sbiw	r24, 0x33	; 51
    5adc:	24 f0       	brlt	.+8      	; 0x5ae6 <main+0x1170>
    5ade:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    5ae2:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    5ae6:	b5 01       	movw	r22, r10
    5ae8:	bb 0c       	add	r11, r11
    5aea:	88 0b       	sbc	r24, r24
    5aec:	99 0b       	sbc	r25, r25
    5aee:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    5af2:	20 e0       	ldi	r18, 0x00	; 0
    5af4:	30 e0       	ldi	r19, 0x00	; 0
    5af6:	40 e2       	ldi	r20, 0x20	; 32
    5af8:	51 e4       	ldi	r21, 0x41	; 65
    5afa:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    5afe:	4b 01       	movw	r8, r22
    5b00:	5c 01       	movw	r10, r24
    5b02:	b6 01       	movw	r22, r12
    5b04:	dd 0c       	add	r13, r13
    5b06:	88 0b       	sbc	r24, r24
    5b08:	99 0b       	sbc	r25, r25
    5b0a:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    5b0e:	9b 01       	movw	r18, r22
    5b10:	ac 01       	movw	r20, r24
    5b12:	c5 01       	movw	r24, r10
    5b14:	b4 01       	movw	r22, r8
    5b16:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    5b1a:	60 93 45 28 	sts	0x2845, r22	; 0x802845 <CAL2_CALCULATED_LOW_CAL_VALUE>
    5b1e:	70 93 46 28 	sts	0x2846, r23	; 0x802846 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    5b22:	80 93 47 28 	sts	0x2847, r24	; 0x802847 <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    5b26:	90 93 48 28 	sts	0x2848, r25	; 0x802848 <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    5b2a:	bb ca       	rjmp	.-2698   	; 0x50a2 <main+0x72c>
    5b2c:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5b30:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5b34:	ca cf       	rjmp	.-108    	; 0x5aca <main+0x1154>
    5b36:	84 e6       	ldi	r24, 0x64	; 100
    5b38:	8c 9d       	mul	r24, r12
    5b3a:	b0 01       	movw	r22, r0
    5b3c:	8d 9d       	mul	r24, r13
    5b3e:	70 0d       	add	r23, r0
    5b40:	11 24       	eor	r1, r1
    5b42:	2a e0       	ldi	r18, 0x0A	; 10
    5b44:	2a 9d       	mul	r18, r10
    5b46:	c0 01       	movw	r24, r0
    5b48:	2b 9d       	mul	r18, r11
    5b4a:	90 0d       	add	r25, r0
    5b4c:	11 24       	eor	r1, r1
    5b4e:	68 0f       	add	r22, r24
    5b50:	79 1f       	adc	r23, r25
    5b52:	07 2e       	mov	r0, r23
    5b54:	00 0c       	add	r0, r0
    5b56:	88 0b       	sbc	r24, r24
    5b58:	99 0b       	sbc	r25, r25
    5b5a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5b5e:	b5 cf       	rjmp	.-150    	; 0x5aca <main+0x1154>
    5b60:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5b64:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    5b68:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    5b6c:	07 2e       	mov	r0, r23
    5b6e:	00 0c       	add	r0, r0
    5b70:	88 0b       	sbc	r24, r24
    5b72:	99 0b       	sbc	r25, r25
    5b74:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5b78:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    5b7c:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    5b80:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    5b84:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    5b88:	81 e0       	ldi	r24, 0x01	; 1
    5b8a:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    5b8e:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5b92:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5b96:	49 97       	sbiw	r24, 0x19	; 25
    5b98:	0c f4       	brge	.+2      	; 0x5b9c <main+0x1226>
    5b9a:	39 ce       	rjmp	.-910    	; 0x580e <main+0xe98>
    5b9c:	80 91 34 29 	lds	r24, 0x2934	; 0x802934 <SET_LONG_VALUE+0x1a>
    5ba0:	90 91 35 29 	lds	r25, 0x2935	; 0x802935 <SET_LONG_VALUE+0x1b>
    5ba4:	24 e6       	ldi	r18, 0x64	; 100
    5ba6:	28 9f       	mul	r18, r24
    5ba8:	b0 01       	movw	r22, r0
    5baa:	29 9f       	mul	r18, r25
    5bac:	70 0d       	add	r23, r0
    5bae:	11 24       	eor	r1, r1
    5bb0:	20 91 36 29 	lds	r18, 0x2936	; 0x802936 <SET_LONG_VALUE+0x1c>
    5bb4:	30 91 37 29 	lds	r19, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1d>
    5bb8:	58 ce       	rjmp	.-848    	; 0x586a <main+0xef4>
    5bba:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5bbe:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5bc2:	a5 cc       	rjmp	.-1718   	; 0x550e <main+0xb98>
    5bc4:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5bc8:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    5bcc:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    5bd0:	07 2e       	mov	r0, r23
    5bd2:	00 0c       	add	r0, r0
    5bd4:	88 0b       	sbc	r24, r24
    5bd6:	99 0b       	sbc	r25, r25
    5bd8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5bdc:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    5be0:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    5be4:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    5be8:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    5bec:	81 e0       	ldi	r24, 0x01	; 1
    5bee:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    5bf2:	c0 90 34 29 	lds	r12, 0x2934	; 0x802934 <SET_LONG_VALUE+0x1a>
    5bf6:	d0 90 35 29 	lds	r13, 0x2935	; 0x802935 <SET_LONG_VALUE+0x1b>
    5bfa:	a0 90 36 29 	lds	r10, 0x2936	; 0x802936 <SET_LONG_VALUE+0x1c>
    5bfe:	b0 90 37 29 	lds	r11, 0x2937	; 0x802937 <SET_LONG_VALUE+0x1d>
    5c02:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5c06:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5c0a:	49 97       	sbiw	r24, 0x19	; 25
    5c0c:	f4 f5       	brge	.+124    	; 0x5c8a <main+0x1314>
    5c0e:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <BLINK_STATS>
    5c12:	81 11       	cpse	r24, r1
    5c14:	35 c0       	rjmp	.+106    	; 0x5c80 <main+0x130a>
    5c16:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    5c1a:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    5c1e:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    5c22:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    5c26:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    5c2a:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    5c2e:	c3 97       	sbiw	r24, 0x33	; 51
    5c30:	24 f0       	brlt	.+8      	; 0x5c3a <main+0x12c4>
    5c32:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    5c36:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    5c3a:	b5 01       	movw	r22, r10
    5c3c:	bb 0c       	add	r11, r11
    5c3e:	88 0b       	sbc	r24, r24
    5c40:	99 0b       	sbc	r25, r25
    5c42:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    5c46:	20 e0       	ldi	r18, 0x00	; 0
    5c48:	30 e0       	ldi	r19, 0x00	; 0
    5c4a:	40 e2       	ldi	r20, 0x20	; 32
    5c4c:	51 e4       	ldi	r21, 0x41	; 65
    5c4e:	0e 94 d6 36 	call	0x6dac	; 0x6dac <__divsf3>
    5c52:	4b 01       	movw	r8, r22
    5c54:	5c 01       	movw	r10, r24
    5c56:	b6 01       	movw	r22, r12
    5c58:	dd 0c       	add	r13, r13
    5c5a:	88 0b       	sbc	r24, r24
    5c5c:	99 0b       	sbc	r25, r25
    5c5e:	0e 94 71 37 	call	0x6ee2	; 0x6ee2 <__floatsisf>
    5c62:	9b 01       	movw	r18, r22
    5c64:	ac 01       	movw	r20, r24
    5c66:	c5 01       	movw	r24, r10
    5c68:	b4 01       	movw	r22, r8
    5c6a:	0e 94 6e 36 	call	0x6cdc	; 0x6cdc <__addsf3>
    5c6e:	60 93 3f 28 	sts	0x283F, r22	; 0x80283f <CAL2_CALCULATED_HIGH_CAL_VALUE>
    5c72:	70 93 40 28 	sts	0x2840, r23	; 0x802840 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    5c76:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    5c7a:	90 93 42 28 	sts	0x2842, r25	; 0x802842 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    5c7e:	11 ca       	rjmp	.-3038   	; 0x50a2 <main+0x72c>
    5c80:	60 92 9f 28 	sts	0x289F, r6	; 0x80289f <i>
    5c84:	70 92 a0 28 	sts	0x28A0, r7	; 0x8028a0 <i+0x1>
    5c88:	ca cf       	rjmp	.-108    	; 0x5c1e <main+0x12a8>
    5c8a:	84 e6       	ldi	r24, 0x64	; 100
    5c8c:	8c 9d       	mul	r24, r12
    5c8e:	b0 01       	movw	r22, r0
    5c90:	8d 9d       	mul	r24, r13
    5c92:	70 0d       	add	r23, r0
    5c94:	11 24       	eor	r1, r1
    5c96:	2a e0       	ldi	r18, 0x0A	; 10
    5c98:	2a 9d       	mul	r18, r10
    5c9a:	c0 01       	movw	r24, r0
    5c9c:	2b 9d       	mul	r18, r11
    5c9e:	90 0d       	add	r25, r0
    5ca0:	11 24       	eor	r1, r1
    5ca2:	68 0f       	add	r22, r24
    5ca4:	79 1f       	adc	r23, r25
    5ca6:	07 2e       	mov	r0, r23
    5ca8:	00 0c       	add	r0, r0
    5caa:	88 0b       	sbc	r24, r24
    5cac:	99 0b       	sbc	r25, r25
    5cae:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5cb2:	b5 cf       	rjmp	.-150    	; 0x5c1e <main+0x12a8>
    5cb4:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    5cb8:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    5cbc:	f2 c9       	rjmp	.-3100   	; 0x50a2 <main+0x72c>
    5cbe:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5cc2:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5cc6:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5cca:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5cce:	80 91 52 28 	lds	r24, 0x2852	; 0x802852 <processLog>
    5cd2:	90 91 53 28 	lds	r25, 0x2853	; 0x802853 <processLog+0x1>
    5cd6:	2a e0       	ldi	r18, 0x0A	; 10
    5cd8:	28 9f       	mul	r18, r24
    5cda:	b0 01       	movw	r22, r0
    5cdc:	29 9f       	mul	r18, r25
    5cde:	70 0d       	add	r23, r0
    5ce0:	11 24       	eor	r1, r1
    5ce2:	90 e0       	ldi	r25, 0x00	; 0
    5ce4:	80 e0       	ldi	r24, 0x00	; 0
    5ce6:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    5cea:	40 92 ed 28 	sts	0x28ED, r4	; 0x8028ed <digits2+0x6>
    5cee:	50 92 ee 28 	sts	0x28EE, r5	; 0x8028ee <digits2+0x7>
    5cf2:	60 91 50 28 	lds	r22, 0x2850	; 0x802850 <processLogNumberOfTimes>
    5cf6:	70 91 51 28 	lds	r23, 0x2851	; 0x802851 <processLogNumberOfTimes+0x1>
    5cfa:	90 e0       	ldi	r25, 0x00	; 0
    5cfc:	80 e0       	ldi	r24, 0x00	; 0
    5cfe:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    5d02:	8d e0       	ldi	r24, 0x0D	; 13
    5d04:	90 e0       	ldi	r25, 0x00	; 0
    5d06:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5d0a:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5d0e:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
    5d12:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
    5d16:	c5 c9       	rjmp	.-3190   	; 0x50a2 <main+0x72c>
    5d18:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5d1c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5d20:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5d24:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    5d28:	8c e0       	ldi	r24, 0x0C	; 12
    5d2a:	90 e0       	ldi	r25, 0x00	; 0
    5d2c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5d30:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5d34:	2c e1       	ldi	r18, 0x1C	; 28
    5d36:	30 e0       	ldi	r19, 0x00	; 0
    5d38:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    5d3c:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    5d40:	41 e1       	ldi	r20, 0x11	; 17
    5d42:	50 e0       	ldi	r21, 0x00	; 0
    5d44:	40 93 eb 28 	sts	0x28EB, r20	; 0x8028eb <digits2+0x4>
    5d48:	50 93 ec 28 	sts	0x28EC, r21	; 0x8028ec <digits2+0x5>
    5d4c:	2f e0       	ldi	r18, 0x0F	; 15
    5d4e:	30 e0       	ldi	r19, 0x00	; 0
    5d50:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    5d54:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5d58:	40 93 ef 28 	sts	0x28EF, r20	; 0x8028ef <digits1>
    5d5c:	50 93 f0 28 	sts	0x28F0, r21	; 0x8028f0 <digits1+0x1>
    5d60:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    5d64:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    5d68:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5d6c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5d70:	80 e1       	ldi	r24, 0x10	; 16
    5d72:	90 e0       	ldi	r25, 0x00	; 0
    5d74:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5d78:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    5d7c:	c8 cf       	rjmp	.-112    	; 0x5d0e <main+0x1398>
SET_LONG_PRESS_FUNCTION():
    5d7e:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    5d82:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    5d86:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    5d8a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    5d8e:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <currentMillis>
    5d92:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <currentMillis+0x1>
    5d96:	8f 31       	cpi	r24, 0x1F	; 31
    5d98:	91 05       	cpc	r25, r1
    5d9a:	38 f5       	brcc	.+78     	; 0x5dea <main+0x1474>
digitalWrite():
    5d9c:	61 e0       	ldi	r22, 0x01	; 1
    5d9e:	85 e1       	ldi	r24, 0x15	; 21
    5da0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5da4:	86 e1       	ldi	r24, 0x16	; 22
    5da6:	90 e0       	ldi	r25, 0x00	; 0
    5da8:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5dac:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5db0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5db4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5db8:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    5dbc:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    5dc0:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    5dc4:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5dc8:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    5dcc:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    5dd0:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    5dd4:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    5dd8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    5ddc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    5de0:	80 93 f5 28 	sts	0x28F5, r24	; 0x8028f5 <digits1+0x6>
    5de4:	90 93 f6 28 	sts	0x28F6, r25	; 0x8028f6 <digits1+0x7>
    5de8:	5c c9       	rjmp	.-3400   	; 0x50a2 <main+0x72c>
SET_LONG_PRESS_FUNCTION():
    5dea:	9c 01       	movw	r18, r24
    5dec:	29 52       	subi	r18, 0x29	; 41
    5dee:	31 09       	sbc	r19, r1
    5df0:	22 38       	cpi	r18, 0x82	; 130
    5df2:	31 05       	cpc	r19, r1
    5df4:	78 f5       	brcc	.+94     	; 0x5e54 <main+0x14de>
digitalWrite():
    5df6:	60 e0       	ldi	r22, 0x00	; 0
    5df8:	85 e1       	ldi	r24, 0x15	; 21
    5dfa:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5dfe:	81 e1       	ldi	r24, 0x11	; 17
    5e00:	90 e0       	ldi	r25, 0x00	; 0
    5e02:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    5e06:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    5e0a:	8f e0       	ldi	r24, 0x0F	; 15
    5e0c:	90 e0       	ldi	r25, 0x00	; 0
    5e0e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    5e12:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    5e16:	2c e0       	ldi	r18, 0x0C	; 12
    5e18:	30 e0       	ldi	r19, 0x00	; 0
    5e1a:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    5e1e:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    5e22:	20 e1       	ldi	r18, 0x10	; 16
    5e24:	30 e0       	ldi	r19, 0x00	; 0
    5e26:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    5e2a:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    5e2e:	20 e2       	ldi	r18, 0x20	; 32
    5e30:	30 e0       	ldi	r19, 0x00	; 0
    5e32:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    5e36:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    5e3a:	27 e1       	ldi	r18, 0x17	; 23
    5e3c:	30 e0       	ldi	r19, 0x00	; 0
    5e3e:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    5e42:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    5e46:	24 e1       	ldi	r18, 0x14	; 20
    5e48:	30 e0       	ldi	r19, 0x00	; 0
    5e4a:	20 93 f3 28 	sts	0x28F3, r18	; 0x8028f3 <digits1+0x4>
    5e4e:	30 93 f4 28 	sts	0x28F4, r19	; 0x8028f4 <digits1+0x5>
    5e52:	c6 cf       	rjmp	.-116    	; 0x5de0 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    5e54:	8b 3a       	cpi	r24, 0xAB	; 171
    5e56:	91 05       	cpc	r25, r1
    5e58:	0c f4       	brge	.+2      	; 0x5e5c <main+0x14e6>
    5e5a:	23 c9       	rjmp	.-3514   	; 0x50a2 <main+0x72c>
EEPROM_CLEAR():
    5e5c:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <STIR_VALUE_SET>
    5e60:	10 92 4c 29 	sts	0x294C, r1	; 0x80294c <DEGREE_VALUE_SET>
    5e64:	23 e6       	ldi	r18, 0x63	; 99
    5e66:	30 e0       	ldi	r19, 0x00	; 0
    5e68:	20 93 0b 29 	sts	0x290B, r18	; 0x80290b <SAFE_VALUE_SET_DEG>
    5e6c:	30 93 0c 29 	sts	0x290C, r19	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    5e70:	84 ed       	ldi	r24, 0xD4	; 212
    5e72:	90 e0       	ldi	r25, 0x00	; 0
    5e74:	80 93 09 29 	sts	0x2909, r24	; 0x802909 <SAFE_VALUE_SET_FAH>
    5e78:	90 93 0a 29 	sts	0x290A, r25	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    5e7c:	10 92 d2 28 	sts	0x28D2, r1	; 0x8028d2 <CAL_SELECT_VALUE>
    5e80:	10 92 d3 28 	sts	0x28D3, r1	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
    5e84:	10 92 03 29 	sts	0x2903, r1	; 0x802903 <ERROR_CAL1>
    5e88:	10 92 04 29 	sts	0x2904, r1	; 0x802904 <ERROR_CAL1+0x1>
    5e8c:	10 92 05 29 	sts	0x2905, r1	; 0x802905 <ERROR_CAL1+0x2>
    5e90:	10 92 06 29 	sts	0x2906, r1	; 0x802906 <ERROR_CAL1+0x3>
    5e94:	10 92 e6 28 	sts	0x28E6, r1	; 0x8028e6 <SIGN>
    5e98:	41 e0       	ldi	r20, 0x01	; 1
    5e9a:	40 93 e1 28 	sts	0x28E1, r20	; 0x8028e1 <ERROR_SET_IN_DEG_FLAG>
    5e9e:	10 92 dc 28 	sts	0x28DC, r1	; 0x8028dc <ERROR_SET_IN_FAH_FLAG>
    5ea2:	4e e1       	ldi	r20, 0x1E	; 30
    5ea4:	50 e0       	ldi	r21, 0x00	; 0
    5ea6:	60 e0       	ldi	r22, 0x00	; 0
    5ea8:	70 e0       	ldi	r23, 0x00	; 0
    5eaa:	40 93 ca 28 	sts	0x28CA, r20	; 0x8028ca <CAL2_RAW_LOW_VALUE_CONV>
    5eae:	50 93 cb 28 	sts	0x28CB, r21	; 0x8028cb <CAL2_RAW_LOW_VALUE_CONV+0x1>
    5eb2:	60 93 cc 28 	sts	0x28CC, r22	; 0x8028cc <CAL2_RAW_LOW_VALUE_CONV+0x2>
    5eb6:	70 93 cd 28 	sts	0x28CD, r23	; 0x8028cd <CAL2_RAW_LOW_VALUE_CONV+0x3>
    5eba:	44 e5       	ldi	r20, 0x54	; 84
    5ebc:	50 e0       	ldi	r21, 0x00	; 0
    5ebe:	60 e0       	ldi	r22, 0x00	; 0
    5ec0:	70 e0       	ldi	r23, 0x00	; 0
    5ec2:	40 93 c6 28 	sts	0x28C6, r20	; 0x8028c6 <CAL2_RAW_HIGH_VALUE_CONV>
    5ec6:	50 93 c7 28 	sts	0x28C7, r21	; 0x8028c7 <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    5eca:	60 93 c8 28 	sts	0x28C8, r22	; 0x8028c8 <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    5ece:	70 93 c9 28 	sts	0x28C9, r23	; 0x8028c9 <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    5ed2:	4c e1       	ldi	r20, 0x1C	; 28
    5ed4:	50 e0       	ldi	r21, 0x00	; 0
    5ed6:	60 e0       	ldi	r22, 0x00	; 0
    5ed8:	70 e0       	ldi	r23, 0x00	; 0
    5eda:	40 93 c2 28 	sts	0x28C2, r20	; 0x8028c2 <MASTER_LOW_CONV>
    5ede:	50 93 c3 28 	sts	0x28C3, r21	; 0x8028c3 <MASTER_LOW_CONV+0x1>
    5ee2:	60 93 c4 28 	sts	0x28C4, r22	; 0x8028c4 <MASTER_LOW_CONV+0x2>
    5ee6:	70 93 c5 28 	sts	0x28C5, r23	; 0x8028c5 <MASTER_LOW_CONV+0x3>
    5eea:	42 e5       	ldi	r20, 0x52	; 82
    5eec:	50 e0       	ldi	r21, 0x00	; 0
    5eee:	60 e0       	ldi	r22, 0x00	; 0
    5ef0:	70 e0       	ldi	r23, 0x00	; 0
    5ef2:	40 93 be 28 	sts	0x28BE, r20	; 0x8028be <MASTER_HIGH_CONV>
    5ef6:	50 93 bf 28 	sts	0x28BF, r21	; 0x8028bf <MASTER_HIGH_CONV+0x1>
    5efa:	60 93 c0 28 	sts	0x28C0, r22	; 0x8028c0 <MASTER_HIGH_CONV+0x2>
    5efe:	70 93 c1 28 	sts	0x28C1, r23	; 0x8028c1 <MASTER_HIGH_CONV+0x3>
    5f02:	10 92 63 28 	sts	0x2863, r1	; 0x802863 <TIME_SOCK_OR_TOTAL>
    5f06:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <Proceess_Resume_Enable_Flag>
    5f0a:	10 92 07 29 	sts	0x2907, r1	; 0x802907 <select_product_type>
    5f0e:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_LONG_VALUE>
    5f12:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_LONG_VALUE+0x1>
    5f16:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_LONG_VALUE+0x2>
    5f1a:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_LONG_VALUE+0x3>
    5f1e:	20 93 1e 29 	sts	0x291E, r18	; 0x80291e <SET_LONG_VALUE+0x4>
    5f22:	30 93 1f 29 	sts	0x291F, r19	; 0x80291f <SET_LONG_VALUE+0x5>
    5f26:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x26>
    5f2a:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x27>
    5f2e:	10 92 26 29 	sts	0x2926, r1	; 0x802926 <SET_LONG_VALUE+0xc>
    5f32:	10 92 27 29 	sts	0x2927, r1	; 0x802927 <SET_LONG_VALUE+0xd>
    5f36:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <SET_LONG_VALUE+0x6>
    5f3a:	10 92 21 29 	sts	0x2921, r1	; 0x802921 <SET_LONG_VALUE+0x7>
    5f3e:	10 92 22 29 	sts	0x2922, r1	; 0x802922 <SET_LONG_VALUE+0x8>
    5f42:	10 92 23 29 	sts	0x2923, r1	; 0x802923 <SET_LONG_VALUE+0x9>
    5f46:	10 92 24 29 	sts	0x2924, r1	; 0x802924 <SET_LONG_VALUE+0xa>
    5f4a:	10 92 25 29 	sts	0x2925, r1	; 0x802925 <SET_LONG_VALUE+0xb>
    5f4e:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <SET_HOUR>
    5f52:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <SET_HOUR+0x1>
    5f56:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <SET_MINUTE>
    5f5a:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <SET_MINUTE+0x1>
    5f5e:	85 e2       	ldi	r24, 0x25	; 37
    5f60:	90 e0       	ldi	r25, 0x00	; 0
    5f62:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <SET_VALUE+0x2>
    5f66:	90 93 10 29 	sts	0x2910, r25	; 0x802910 <SET_VALUE+0x3>
    5f6a:	10 92 11 29 	sts	0x2911, r1	; 0x802911 <SET_VALUE+0x4>
    5f6e:	10 92 12 29 	sts	0x2912, r1	; 0x802912 <SET_VALUE+0x5>
    5f72:	80 e2       	ldi	r24, 0x20	; 32
    5f74:	90 e0       	ldi	r25, 0x00	; 0
    5f76:	80 93 39 29 	sts	0x2939, r24	; 0x802939 <SET_LONG_VALUE+0x1f>
    5f7a:	90 93 3a 29 	sts	0x293A, r25	; 0x80293a <SET_LONG_VALUE+0x20>
    5f7e:	10 92 13 29 	sts	0x2913, r1	; 0x802913 <SET_VALUE+0x6>
    5f82:	10 92 14 29 	sts	0x2914, r1	; 0x802914 <SET_VALUE+0x7>
    5f86:	10 92 15 29 	sts	0x2915, r1	; 0x802915 <SET_VALUE+0x8>
    5f8a:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x9>
    5f8e:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Process_Interrupt_flag>
    5f92:	60 e0       	ldi	r22, 0x00	; 0
    5f94:	81 e0       	ldi	r24, 0x01	; 1
    5f96:	90 e0       	ldi	r25, 0x00	; 0
    5f98:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5f9c:	63 e6       	ldi	r22, 0x63	; 99
    5f9e:	82 e0       	ldi	r24, 0x02	; 2
    5fa0:	90 e0       	ldi	r25, 0x00	; 0
    5fa2:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fa6:	69 e0       	ldi	r22, 0x09	; 9
    5fa8:	79 e2       	ldi	r23, 0x29	; 41
    5faa:	83 e0       	ldi	r24, 0x03	; 3
    5fac:	90 e0       	ldi	r25, 0x00	; 0
    5fae:	0e 94 3a 11 	call	0x2274	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    5fb2:	60 e0       	ldi	r22, 0x00	; 0
    5fb4:	85 e0       	ldi	r24, 0x05	; 5
    5fb6:	90 e0       	ldi	r25, 0x00	; 0
    5fb8:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fbc:	60 e0       	ldi	r22, 0x00	; 0
    5fbe:	8f e0       	ldi	r24, 0x0F	; 15
    5fc0:	90 e0       	ldi	r25, 0x00	; 0
    5fc2:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fc6:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.65]>
    5fca:	60 e0       	ldi	r22, 0x00	; 0
    5fcc:	87 e0       	ldi	r24, 0x07	; 7
    5fce:	90 e0       	ldi	r25, 0x00	; 0
    5fd0:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fd4:	61 e0       	ldi	r22, 0x01	; 1
    5fd6:	88 e0       	ldi	r24, 0x08	; 8
    5fd8:	90 e0       	ldi	r25, 0x00	; 0
    5fda:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fde:	60 e0       	ldi	r22, 0x00	; 0
    5fe0:	89 e0       	ldi	r24, 0x09	; 9
    5fe2:	90 e0       	ldi	r25, 0x00	; 0
    5fe4:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fe8:	6a ec       	ldi	r22, 0xCA	; 202
    5fea:	78 e2       	ldi	r23, 0x28	; 40
    5fec:	80 e5       	ldi	r24, 0x50	; 80
    5fee:	90 e0       	ldi	r25, 0x00	; 0
    5ff0:	0e 94 08 11 	call	0x2210	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    5ff4:	66 ec       	ldi	r22, 0xC6	; 198
    5ff6:	78 e2       	ldi	r23, 0x28	; 40
    5ff8:	8a e5       	ldi	r24, 0x5A	; 90
    5ffa:	90 e0       	ldi	r25, 0x00	; 0
    5ffc:	0e 94 08 11 	call	0x2210	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    6000:	62 ec       	ldi	r22, 0xC2	; 194
    6002:	78 e2       	ldi	r23, 0x28	; 40
    6004:	84 e6       	ldi	r24, 0x64	; 100
    6006:	90 e0       	ldi	r25, 0x00	; 0
    6008:	0e 94 08 11 	call	0x2210	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
    600c:	6e eb       	ldi	r22, 0xBE	; 190
    600e:	78 e2       	ldi	r23, 0x28	; 40
    6010:	8e e6       	ldi	r24, 0x6E	; 110
    6012:	90 e0       	ldi	r25, 0x00	; 0
    6014:	0e 94 08 11 	call	0x2210	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    6018:	81 e4       	ldi	r24, 0x41	; 65
    601a:	90 e0       	ldi	r25, 0x00	; 0
    601c:	89 83       	std	Y+1, r24	; 0x01
    601e:	9a 83       	std	Y+2, r25	; 0x02
    6020:	60 91 63 28 	lds	r22, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    6024:	ce 01       	movw	r24, r28
    6026:	01 96       	adiw	r24, 0x01	; 1
    6028:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <EERef::update(unsigned char)>
EEPROM_CLEAR():
    602c:	60 91 0f 29 	lds	r22, 0x290F	; 0x80290f <SET_VALUE+0x2>
    6030:	83 e7       	ldi	r24, 0x73	; 115
    6032:	90 e0       	ldi	r25, 0x00	; 0
    6034:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6038:	60 91 11 29 	lds	r22, 0x2911	; 0x802911 <SET_VALUE+0x4>
    603c:	85 e7       	ldi	r24, 0x75	; 117
    603e:	90 e0       	ldi	r25, 0x00	; 0
    6040:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6044:	69 e3       	ldi	r22, 0x39	; 57
    6046:	79 e2       	ldi	r23, 0x29	; 41
    6048:	88 e7       	ldi	r24, 0x78	; 120
    604a:	90 e0       	ldi	r25, 0x00	; 0
    604c:	0e 94 3a 11 	call	0x2274	; 0x2274 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.10]>
    6050:	60 e0       	ldi	r22, 0x00	; 0
    6052:	8d e7       	ldi	r24, 0x7D	; 125
    6054:	90 e0       	ldi	r25, 0x00	; 0
    6056:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    605a:	60 e0       	ldi	r22, 0x00	; 0
    605c:	82 e8       	ldi	r24, 0x82	; 130
    605e:	90 e0       	ldi	r25, 0x00	; 0
    6060:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6064:	60 e0       	ldi	r22, 0x00	; 0
    6066:	87 e8       	ldi	r24, 0x87	; 135
    6068:	90 e0       	ldi	r25, 0x00	; 0
    606a:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    606e:	60 e0       	ldi	r22, 0x00	; 0
    6070:	86 e9       	ldi	r24, 0x96	; 150
    6072:	90 e0       	ldi	r25, 0x00	; 0
    6074:	0e 94 cf 10 	call	0x219e	; 0x219e <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    6078:	81 e0       	ldi	r24, 0x01	; 1
    607a:	90 e0       	ldi	r25, 0x00	; 0
    607c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6080:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6084:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    6088:	10 92 3d 28 	sts	0x283D, r1	; 0x80283d <currentMillis>
    608c:	10 92 3e 28 	sts	0x283E, r1	; 0x80283e <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    6090:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    6094:	11 ce       	rjmp	.-990    	; 0x5cb8 <main+0x1342>
    6096:	e2 31       	cpi	r30, 0x12	; 18
    6098:	f1 05       	cpc	r31, r1
    609a:	08 f0       	brcs	.+2      	; 0x609e <main+0x1728>
    609c:	02 c8       	rjmp	.-4092   	; 0x50a2 <main+0x72c>
    609e:	ed 5a       	subi	r30, 0xAD	; 173
    60a0:	ff 4c       	sbci	r31, 0xCF	; 207
    60a2:	0c 94 d9 38 	jmp	0x71b2	; 0x71b2 <__tablejump2__>
    60a6:	65 30       	cpi	r22, 0x05	; 5
    60a8:	a2 30       	cpi	r26, 0x02	; 2
    60aa:	da 30       	cpi	r29, 0x0A	; 10
    60ac:	2b 31       	cpi	r18, 0x1B	; 27
    60ae:	76 31       	cpi	r23, 0x16	; 22
    60b0:	a3 31       	cpi	r26, 0x13	; 19
    60b2:	d2 31       	cpi	r29, 0x12	; 18
    60b4:	06 32       	cpi	r16, 0x26	; 38
    60b6:	56 32       	cpi	r21, 0x26	; 38
    60b8:	ba 32       	cpi	r27, 0x2A	; 42
    60ba:	ed 32       	cpi	r30, 0x2D	; 45
    60bc:	1a 33       	cpi	r17, 0x3A	; 58
    60be:	bf 33       	cpi	r27, 0x3F	; 63
    60c0:	78 34       	cpi	r23, 0x48	; 72
    60c2:	29 35       	cpi	r18, 0x59	; 89
    60c4:	eb 35       	cpi	r30, 0x5B	; 91
    60c6:	1c 36       	cpi	r17, 0x6C	; 108
    60c8:	3c 36       	cpi	r19, 0x6C	; 108
    60ca:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    60ce:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    60d2:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    60d6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    60da:	8c e0       	ldi	r24, 0x0C	; 12
    60dc:	90 e0       	ldi	r25, 0x00	; 0
    60de:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    60e2:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    60e6:	80 e1       	ldi	r24, 0x10	; 16
    60e8:	90 e0       	ldi	r25, 0x00	; 0
    60ea:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    60ee:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    60f2:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    60f6:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    60fa:	81 e1       	ldi	r24, 0x11	; 17
    60fc:	90 e0       	ldi	r25, 0x00	; 0
    60fe:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6102:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6106:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    610a:	10 92 ef 28 	sts	0x28EF, r1	; 0x8028ef <digits1>
    610e:	10 92 f0 28 	sts	0x28F0, r1	; 0x8028f0 <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    6112:	81 11       	cpse	r24, r1
    6114:	10 c0       	rjmp	.+32     	; 0x6136 <main+0x17c0>
DISPLAY_DIGIT1():
    6116:	85 e1       	ldi	r24, 0x15	; 21
    6118:	90 e0       	ldi	r25, 0x00	; 0
    611a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    611e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    6122:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    6126:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    612a:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    612e:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
    6132:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
    6136:	84 e1       	ldi	r24, 0x14	; 20
    6138:	90 e0       	ldi	r25, 0x00	; 0
    613a:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    613e:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    6142:	2a c0       	rjmp	.+84     	; 0x6198 <main+0x1822>
SET_LONG_PRESS_FUNCTION():
    6144:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
    6148:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    614c:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
DISPLAY_DIGIT2():
    6150:	8c e1       	ldi	r24, 0x1C	; 28
    6152:	90 e0       	ldi	r25, 0x00	; 0
    6154:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6158:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    615c:	84 e1       	ldi	r24, 0x14	; 20
    615e:	90 e0       	ldi	r25, 0x00	; 0
    6160:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6164:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6168:	60 92 eb 28 	sts	0x28EB, r6	; 0x8028eb <digits2+0x4>
    616c:	70 92 ec 28 	sts	0x28EC, r7	; 0x8028ec <digits2+0x5>
    6170:	80 e1       	ldi	r24, 0x10	; 16
    6172:	90 e0       	ldi	r25, 0x00	; 0
    6174:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6178:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    617c:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    6180:	81 11       	cpse	r24, r1
    6182:	0f c0       	rjmp	.+30     	; 0x61a2 <main+0x182c>
DISPLAY_DIGIT1():
    6184:	8d e1       	ldi	r24, 0x1D	; 29
    6186:	90 e0       	ldi	r25, 0x00	; 0
    6188:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    618c:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    6190:	e0 92 f1 28 	sts	0x28F1, r14	; 0x8028f1 <digits1+0x2>
    6194:	f0 92 f2 28 	sts	0x28F2, r15	; 0x8028f2 <digits1+0x3>
    6198:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    619c:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    61a0:	c4 cf       	rjmp	.-120    	; 0x612a <main+0x17b4>
    61a2:	8d e1       	ldi	r24, 0x1D	; 29
    61a4:	90 e0       	ldi	r25, 0x00	; 0
    61a6:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    61aa:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    61ae:	85 e1       	ldi	r24, 0x15	; 21
    61b0:	90 e0       	ldi	r25, 0x00	; 0
    61b2:	c3 cf       	rjmp	.-122    	; 0x613a <main+0x17c4>
SET_LONG_PRESS_FUNCTION():
    61b4:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    61b8:	8c e0       	ldi	r24, 0x0C	; 12
    61ba:	90 e0       	ldi	r25, 0x00	; 0
    61bc:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    61c0:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    61c4:	8d e0       	ldi	r24, 0x0D	; 13
    61c6:	90 e0       	ldi	r25, 0x00	; 0
    61c8:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    61cc:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    61d0:	75 e1       	ldi	r23, 0x15	; 21
    61d2:	c7 2e       	mov	r12, r23
    61d4:	d1 2c       	mov	r13, r1
    61d6:	c0 92 eb 28 	sts	0x28EB, r12	; 0x8028eb <digits2+0x4>
    61da:	d0 92 ec 28 	sts	0x28EC, r13	; 0x8028ec <digits2+0x5>
    61de:	8f e0       	ldi	r24, 0x0F	; 15
    61e0:	90 e0       	ldi	r25, 0x00	; 0
    61e2:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    61e6:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    61ea:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    61ee:	81 11       	cpse	r24, r1
    61f0:	1a c0       	rjmp	.+52     	; 0x6226 <main+0x18b0>
    61f2:	80 91 0b 29 	lds	r24, 0x290B	; 0x80290b <SAFE_VALUE_SET_DEG>
    61f6:	90 91 0c 29 	lds	r25, 0x290C	; 0x80290c <SAFE_VALUE_SET_DEG+0x1>
    61fa:	2a e0       	ldi	r18, 0x0A	; 10
    61fc:	28 9f       	mul	r18, r24
    61fe:	b0 01       	movw	r22, r0
    6200:	29 9f       	mul	r18, r25
    6202:	70 0d       	add	r23, r0
    6204:	11 24       	eor	r1, r1
    6206:	07 2e       	mov	r0, r23
    6208:	00 0c       	add	r0, r0
    620a:	88 0b       	sbc	r24, r24
    620c:	99 0b       	sbc	r25, r25
    620e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6212:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    6216:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    621a:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    621e:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    6222:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
    6226:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    622a:	80 91 09 29 	lds	r24, 0x2909	; 0x802909 <SAFE_VALUE_SET_FAH>
    622e:	90 91 0a 29 	lds	r25, 0x290A	; 0x80290a <SAFE_VALUE_SET_FAH+0x1>
    6232:	2a e0       	ldi	r18, 0x0A	; 10
    6234:	28 9f       	mul	r18, r24
    6236:	b0 01       	movw	r22, r0
    6238:	29 9f       	mul	r18, r25
    623a:	70 0d       	add	r23, r0
    623c:	11 24       	eor	r1, r1
    623e:	07 2e       	mov	r0, r23
    6240:	00 0c       	add	r0, r0
    6242:	88 0b       	sbc	r24, r24
    6244:	99 0b       	sbc	r25, r25
    6246:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    624a:	c0 92 f5 28 	sts	0x28F5, r12	; 0x8028f5 <digits1+0x6>
    624e:	d0 92 f6 28 	sts	0x28F6, r13	; 0x8028f6 <digits1+0x7>
    6252:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
    6256:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    625a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    625e:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6262:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6266:	80 e1       	ldi	r24, 0x10	; 16
    6268:	90 e0       	ldi	r25, 0x00	; 0
    626a:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    626e:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6272:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    6276:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    627a:	22 e1       	ldi	r18, 0x12	; 18
    627c:	30 e0       	ldi	r19, 0x00	; 0
    627e:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    6282:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    6286:	2f e0       	ldi	r18, 0x0F	; 15
    6288:	30 e0       	ldi	r19, 0x00	; 0
    628a:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    628e:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6292:	20 91 63 28 	lds	r18, 0x2863	; 0x802863 <TIME_SOCK_OR_TOTAL>
    6296:	21 11       	cpse	r18, r1
    6298:	11 c0       	rjmp	.+34     	; 0x62bc <main+0x1946>
DISPLAY_DIGIT1():
    629a:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    629e:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    62a2:	27 e1       	ldi	r18, 0x17	; 23
    62a4:	30 e0       	ldi	r19, 0x00	; 0
    62a6:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    62aa:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    62ae:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    62b2:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    62b6:	8f e1       	ldi	r24, 0x1F	; 31
    62b8:	90 e0       	ldi	r25, 0x00	; 0
    62ba:	92 cd       	rjmp	.-1244   	; 0x5de0 <main+0x146a>
    62bc:	8c e0       	ldi	r24, 0x0C	; 12
    62be:	90 e0       	ldi	r25, 0x00	; 0
    62c0:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <digits1>
    62c4:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <digits1+0x1>
    62c8:	87 e1       	ldi	r24, 0x17	; 23
    62ca:	90 e0       	ldi	r25, 0x00	; 0
    62cc:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    62d0:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    62d4:	8d e0       	ldi	r24, 0x0D	; 13
    62d6:	90 e0       	ldi	r25, 0x00	; 0
    62d8:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    62dc:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    62e0:	e0 92 f5 28 	sts	0x28F5, r14	; 0x8028f5 <digits1+0x6>
    62e4:	f0 92 f6 28 	sts	0x28F6, r15	; 0x8028f6 <digits1+0x7>
    62e8:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
    62ec:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    62f0:	8d e0       	ldi	r24, 0x0D	; 13
    62f2:	90 e0       	ldi	r25, 0x00	; 0
    62f4:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    62f8:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    62fc:	82 e2       	ldi	r24, 0x22	; 34
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6304:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6308:	80 e1       	ldi	r24, 0x10	; 16
    630a:	90 e0       	ldi	r25, 0x00	; 0
    630c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    6310:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    6314:	87 e1       	ldi	r24, 0x17	; 23
    6316:	90 e0       	ldi	r25, 0x00	; 0
    6318:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    631c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6320:	2b e0       	ldi	r18, 0x0B	; 11
    6322:	30 e0       	ldi	r19, 0x00	; 0
    6324:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6328:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    632c:	21 e1       	ldi	r18, 0x11	; 17
    632e:	30 e0       	ldi	r19, 0x00	; 0
    6330:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    6334:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6338:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    633c:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    6340:	8c e0       	ldi	r24, 0x0C	; 12
    6342:	90 e0       	ldi	r25, 0x00	; 0
    6344:	4d cd       	rjmp	.-1382   	; 0x5de0 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    6346:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    634a:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    634e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6352:	8b e0       	ldi	r24, 0x0B	; 11
    6354:	90 e0       	ldi	r25, 0x00	; 0
    6356:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    635a:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    635e:	21 e1       	ldi	r18, 0x11	; 17
    6360:	30 e0       	ldi	r19, 0x00	; 0
    6362:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    6366:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    636a:	20 e2       	ldi	r18, 0x20	; 32
    636c:	30 e0       	ldi	r19, 0x00	; 0
    636e:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    6372:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    6376:	20 e1       	ldi	r18, 0x10	; 16
    6378:	30 e0       	ldi	r19, 0x00	; 0
    637a:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    637e:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6382:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6386:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    638a:	23 e2       	ldi	r18, 0x23	; 35
    638c:	30 e0       	ldi	r19, 0x00	; 0
    638e:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    6392:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6396:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    639a:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    639e:	8f e0       	ldi	r24, 0x0F	; 15
    63a0:	90 e0       	ldi	r25, 0x00	; 0
    63a2:	1e cd       	rjmp	.-1476   	; 0x5de0 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    63a4:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    63a8:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    63ac:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    63b0:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    63b4:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    63b8:	2d e0       	ldi	r18, 0x0D	; 13
    63ba:	30 e0       	ldi	r19, 0x00	; 0
    63bc:	20 93 e9 28 	sts	0x28E9, r18	; 0x8028e9 <digits2+0x2>
    63c0:	30 93 ea 28 	sts	0x28EA, r19	; 0x8028ea <digits2+0x3>
    63c4:	8a e1       	ldi	r24, 0x1A	; 26
    63c6:	90 e0       	ldi	r25, 0x00	; 0
    63c8:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    63cc:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    63d0:	4e e0       	ldi	r20, 0x0E	; 14
    63d2:	50 e0       	ldi	r21, 0x00	; 0
    63d4:	40 93 ed 28 	sts	0x28ED, r20	; 0x8028ed <digits2+0x6>
    63d8:	50 93 ee 28 	sts	0x28EE, r21	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    63dc:	40 91 d2 28 	lds	r20, 0x28D2	; 0x8028d2 <CAL_SELECT_VALUE>
    63e0:	50 91 d3 28 	lds	r21, 0x28D3	; 0x8028d3 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    63e4:	e0 92 ef 28 	sts	0x28EF, r14	; 0x8028ef <digits1>
    63e8:	f0 92 f0 28 	sts	0x28F0, r15	; 0x8028f0 <digits1+0x1>
    63ec:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    63f0:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    63f4:	80 93 f3 28 	sts	0x28F3, r24	; 0x8028f3 <digits1+0x4>
    63f8:	90 93 f4 28 	sts	0x28F4, r25	; 0x8028f4 <digits1+0x5>
    63fc:	82 e0       	ldi	r24, 0x02	; 2
    63fe:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    6400:	45 2b       	or	r20, r21
    6402:	09 f0       	breq	.+2      	; 0x6406 <main+0x1a90>
    6404:	ed cc       	rjmp	.-1574   	; 0x5de0 <main+0x146a>
DISPLAY_DIGIT1():
    6406:	81 e0       	ldi	r24, 0x01	; 1
    6408:	90 e0       	ldi	r25, 0x00	; 0
    640a:	ea cc       	rjmp	.-1580   	; 0x5de0 <main+0x146a>
SET_LONG_PRESS_FUNCTION():
    640c:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6410:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6414:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    6418:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    641c:	8d e0       	ldi	r24, 0x0D	; 13
    641e:	90 e0       	ldi	r25, 0x00	; 0
    6420:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6424:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6428:	8a e1       	ldi	r24, 0x1A	; 26
    642a:	90 e0       	ldi	r25, 0x00	; 0
    642c:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    6430:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    6434:	81 e0       	ldi	r24, 0x01	; 1
    6436:	90 e0       	ldi	r25, 0x00	; 0
    6438:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    643c:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    6440:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    6444:	81 11       	cpse	r24, r1
    6446:	81 c0       	rjmp	.+258    	; 0x654a <main+0x1bd4>
    6448:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    644c:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    6450:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    6454:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    6458:	2d ec       	ldi	r18, 0xCD	; 205
    645a:	3c ec       	ldi	r19, 0xCC	; 204
    645c:	47 ec       	ldi	r20, 0xC7	; 199
    645e:	52 e4       	ldi	r21, 0x42	; 66
    6460:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6464:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6468:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    646c:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6470:	e8 d5       	rcall	.+3024   	; 0x7042 <__gesf2>
    6472:	18 16       	cp	r1, r24
    6474:	6c f4       	brge	.+26     	; 0x6490 <main+0x1b1a>
    6476:	20 e0       	ldi	r18, 0x00	; 0
    6478:	30 e0       	ldi	r19, 0x00	; 0
    647a:	40 e2       	ldi	r20, 0x20	; 32
    647c:	51 e4       	ldi	r21, 0x41	; 65
    647e:	c5 01       	movw	r24, r10
    6480:	b4 01       	movw	r22, r8
    6482:	e3 d5       	rcall	.+3014   	; 0x704a <__mulsf3>
    6484:	fb d4       	rcall	.+2550   	; 0x6e7c <__fixsfsi>
    6486:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    648a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    648e:	28 cf       	rjmp	.-432    	; 0x62e0 <main+0x196a>
    6490:	20 e0       	ldi	r18, 0x00	; 0
    6492:	30 e0       	ldi	r19, 0x00	; 0
    6494:	48 ec       	ldi	r20, 0xC8	; 200
    6496:	52 e4       	ldi	r21, 0x42	; 66
    6498:	c5 01       	movw	r24, r10
    649a:	b4 01       	movw	r22, r8
    649c:	d6 d5       	rcall	.+2988   	; 0x704a <__mulsf3>
    649e:	ee d4       	rcall	.+2524   	; 0x6e7c <__fixsfsi>
    64a0:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    64a4:	81 e0       	ldi	r24, 0x01	; 1
    64a6:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    64aa:	1a cf       	rjmp	.-460    	; 0x62e0 <main+0x196a>
    64ac:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    64b0:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    64b4:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    64b8:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    64bc:	8d e0       	ldi	r24, 0x0D	; 13
    64be:	90 e0       	ldi	r25, 0x00	; 0
    64c0:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    64c4:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    64c8:	8a e1       	ldi	r24, 0x1A	; 26
    64ca:	90 e0       	ldi	r25, 0x00	; 0
    64cc:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    64d0:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    64d4:	81 e0       	ldi	r24, 0x01	; 1
    64d6:	90 e0       	ldi	r25, 0x00	; 0
    64d8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    64dc:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    64e0:	80 91 4c 29 	lds	r24, 0x294C	; 0x80294c <DEGREE_VALUE_SET>
    64e4:	81 11       	cpse	r24, r1
    64e6:	31 c0       	rjmp	.+98     	; 0x654a <main+0x1bd4>
    64e8:	60 91 fb 28 	lds	r22, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    64ec:	70 91 fc 28 	lds	r23, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    64f0:	80 91 fd 28 	lds	r24, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    64f4:	90 91 fe 28 	lds	r25, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
    64f8:	6b 83       	std	Y+3, r22	; 0x03
    64fa:	7c 83       	std	Y+4, r23	; 0x04
    64fc:	8d 83       	std	Y+5, r24	; 0x05
    64fe:	9e 83       	std	Y+6, r25	; 0x06
    6500:	20 e0       	ldi	r18, 0x00	; 0
    6502:	30 e0       	ldi	r19, 0x00	; 0
    6504:	48 ec       	ldi	r20, 0xC8	; 200
    6506:	52 e4       	ldi	r21, 0x42	; 66
    6508:	a0 d5       	rcall	.+2880   	; 0x704a <__mulsf3>
    650a:	b8 d4       	rcall	.+2416   	; 0x6e7c <__fixsfsi>
    650c:	4b 01       	movw	r8, r22
    650e:	5c 01       	movw	r10, r24
    6510:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6514:	2d ec       	ldi	r18, 0xCD	; 205
    6516:	3c ec       	ldi	r19, 0xCC	; 204
    6518:	47 ec       	ldi	r20, 0xC7	; 199
    651a:	52 e4       	ldi	r21, 0x42	; 66
    651c:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6520:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6524:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6528:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    652c:	8a d5       	rcall	.+2836   	; 0x7042 <__gesf2>
    652e:	18 16       	cp	r1, r24
    6530:	4c f4       	brge	.+18     	; 0x6544 <main+0x1bce>
    6532:	20 e0       	ldi	r18, 0x00	; 0
    6534:	30 e0       	ldi	r19, 0x00	; 0
    6536:	40 e2       	ldi	r20, 0x20	; 32
    6538:	51 e4       	ldi	r21, 0x41	; 65
    653a:	6b 81       	ldd	r22, Y+3	; 0x03
    653c:	7c 81       	ldd	r23, Y+4	; 0x04
    653e:	8d 81       	ldd	r24, Y+5	; 0x05
    6540:	9e 81       	ldd	r25, Y+6	; 0x06
    6542:	9f cf       	rjmp	.-194    	; 0x6482 <main+0x1b0c>
    6544:	c5 01       	movw	r24, r10
    6546:	b4 01       	movw	r22, r8
    6548:	ab cf       	rjmp	.-170    	; 0x64a0 <main+0x1b2a>
    654a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    654e:	20 e0       	ldi	r18, 0x00	; 0
    6550:	30 e0       	ldi	r19, 0x00	; 0
    6552:	40 e2       	ldi	r20, 0x20	; 32
    6554:	51 e4       	ldi	r21, 0x41	; 65
    6556:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <TEMP_FAH_RAW>
    655a:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <TEMP_FAH_RAW+0x1>
    655e:	80 91 da 28 	lds	r24, 0x28DA	; 0x8028da <TEMP_FAH_RAW+0x2>
    6562:	90 91 db 28 	lds	r25, 0x28DB	; 0x8028db <TEMP_FAH_RAW+0x3>
    6566:	71 d5       	rcall	.+2786   	; 0x704a <__mulsf3>
    6568:	89 d4       	rcall	.+2322   	; 0x6e7c <__fixsfsi>
    656a:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    656e:	85 e1       	ldi	r24, 0x15	; 21
    6570:	90 e0       	ldi	r25, 0x00	; 0
    6572:	36 cc       	rjmp	.-1940   	; 0x5de0 <main+0x146a>
    6574:	81 e0       	ldi	r24, 0x01	; 1
    6576:	80 93 ba 28 	sts	0x28BA, r24	; 0x8028ba <DOT1_0>
    657a:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    657e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6582:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    6586:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    658a:	8d e0       	ldi	r24, 0x0D	; 13
    658c:	90 e0       	ldi	r25, 0x00	; 0
    658e:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6592:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6596:	6a e1       	ldi	r22, 0x1A	; 26
    6598:	c6 2e       	mov	r12, r22
    659a:	d1 2c       	mov	r13, r1
    659c:	c0 92 eb 28 	sts	0x28EB, r12	; 0x8028eb <digits2+0x4>
    65a0:	d0 92 ec 28 	sts	0x28EC, r13	; 0x8028ec <digits2+0x5>
    65a4:	82 e0       	ldi	r24, 0x02	; 2
    65a6:	90 e0       	ldi	r25, 0x00	; 0
    65a8:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    65ac:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    65b0:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    65b4:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    65b8:	2a e0       	ldi	r18, 0x0A	; 10
    65ba:	28 9f       	mul	r18, r24
    65bc:	b0 01       	movw	r22, r0
    65be:	29 9f       	mul	r18, r25
    65c0:	70 0d       	add	r23, r0
    65c2:	11 24       	eor	r1, r1
    65c4:	07 2e       	mov	r0, r23
    65c6:	00 0c       	add	r0, r0
    65c8:	88 0b       	sbc	r24, r24
    65ca:	99 0b       	sbc	r25, r25
    65cc:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    65d0:	c0 92 ef 28 	sts	0x28EF, r12	; 0x8028ef <digits1>
    65d4:	d0 92 f0 28 	sts	0x28F0, r13	; 0x8028f0 <digits1+0x1>
    65d8:	83 ce       	rjmp	.-762    	; 0x62e0 <main+0x196a>
    65da:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    65de:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    65e2:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    65e6:	8d e0       	ldi	r24, 0x0D	; 13
    65e8:	90 e0       	ldi	r25, 0x00	; 0
    65ea:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    65ee:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    65f2:	8a e1       	ldi	r24, 0x1A	; 26
    65f4:	90 e0       	ldi	r25, 0x00	; 0
    65f6:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    65fa:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    65fe:	82 e0       	ldi	r24, 0x02	; 2
    6600:	90 e0       	ldi	r25, 0x00	; 0
    6602:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6606:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    660a:	80 91 43 28 	lds	r24, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    660e:	90 91 44 28 	lds	r25, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    6612:	2a e0       	ldi	r18, 0x0A	; 10
    6614:	28 9f       	mul	r18, r24
    6616:	b0 01       	movw	r22, r0
    6618:	29 9f       	mul	r18, r25
    661a:	70 0d       	add	r23, r0
    661c:	11 24       	eor	r1, r1
    661e:	07 2e       	mov	r0, r23
    6620:	00 0c       	add	r0, r0
    6622:	88 0b       	sbc	r24, r24
    6624:	99 0b       	sbc	r25, r25
    6626:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    662a:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    662e:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    6632:	56 ce       	rjmp	.-852    	; 0x62e0 <main+0x196a>
    6634:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6638:	81 e0       	ldi	r24, 0x01	; 1
    663a:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    663e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6642:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
PID_Start():
    6646:	8f ea       	ldi	r24, 0xAF	; 175
    6648:	9a e2       	ldi	r25, 0x2A	; 42
    664a:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    664e:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    6652:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    6656:	07 2e       	mov	r0, r23
    6658:	00 0c       	add	r0, r0
    665a:	88 0b       	sbc	r24, r24
    665c:	99 0b       	sbc	r25, r25
    665e:	41 d4       	rcall	.+2178   	; 0x6ee2 <__floatsisf>
    6660:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6664:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6668:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    666c:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
digitalWrite():
    6670:	61 e0       	ldi	r22, 0x01	; 1
    6672:	81 e2       	ldi	r24, 0x21	; 33
    6674:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6678:	3f e0       	ldi	r19, 0x0F	; 15
    667a:	83 2e       	mov	r8, r19
    667c:	91 2c       	mov	r9, r1
    667e:	4d e0       	ldi	r20, 0x0D	; 13
    6680:	a4 2e       	mov	r10, r20
    6682:	b1 2c       	mov	r11, r1
    6684:	50 e1       	ldi	r21, 0x10	; 16
    6686:	c5 2e       	mov	r12, r21
    6688:	d1 2c       	mov	r13, r1
SET_LONG_PRESS_FUNCTION():
    668a:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
    668e:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    6692:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    6696:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    669a:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    669e:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    66a2:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    66a6:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    66aa:	7c d3       	rcall	.+1784   	; 0x6da4 <__cmpsf2>
    66ac:	87 ff       	sbrs	r24, 7
    66ae:	bb c1       	rjmp	.+886    	; 0x6a26 <main+0x20b0>
    66b0:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    66b4:	88 23       	and	r24, r24
    66b6:	09 f4       	brne	.+2      	; 0x66ba <main+0x1d44>
    66b8:	b6 c1       	rjmp	.+876    	; 0x6a26 <main+0x20b0>
    66ba:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    66be:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    66c2:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    66c6:	07 2e       	mov	r0, r23
    66c8:	00 0c       	add	r0, r0
    66ca:	88 0b       	sbc	r24, r24
    66cc:	99 0b       	sbc	r25, r25
    66ce:	09 d4       	rcall	.+2066   	; 0x6ee2 <__floatsisf>
    66d0:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    66d4:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    66d8:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    66dc:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    66e0:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    66e4:	60 e0       	ldi	r22, 0x00	; 0
    66e6:	8b e1       	ldi	r24, 0x1B	; 27
    66e8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISP_UPDATE():
    66ec:	8d eb       	ldi	r24, 0xBD	; 189
    66ee:	9b e2       	ldi	r25, 0x2B	; 43
    66f0:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    66f4:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    66f8:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    66fc:	89 31       	cpi	r24, 0x19	; 25
    66fe:	91 05       	cpc	r25, r1
    6700:	3c f5       	brge	.+78     	; 0x6750 <main+0x1dda>
DISPLAY_DIGIT1():
    6702:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    6706:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    670a:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    670e:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    6712:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    6716:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    671a:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    671e:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6722:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    6726:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    672a:	07 2e       	mov	r0, r23
    672c:	00 0c       	add	r0, r0
    672e:	88 0b       	sbc	r24, r24
    6730:	99 0b       	sbc	r25, r25
    6732:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6736:	8a e1       	ldi	r24, 0x1A	; 26
    6738:	90 e0       	ldi	r25, 0x00	; 0
    673a:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    673e:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6742:	a7 e1       	ldi	r26, 0x17	; 23
    6744:	b0 e0       	ldi	r27, 0x00	; 0
    6746:	a0 93 e9 28 	sts	0x28E9, r26	; 0x8028e9 <digits2+0x2>
    674a:	b0 93 ea 28 	sts	0x28EA, r27	; 0x8028ea <digits2+0x3>
    674e:	9d cf       	rjmp	.-198    	; 0x668a <main+0x1d14>
DISPLAY_DIGIT1():
    6750:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    6754:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    6758:	80 92 f1 28 	sts	0x28F1, r8	; 0x8028f1 <digits1+0x2>
    675c:	90 92 f2 28 	sts	0x28F2, r9	; 0x8028f2 <digits1+0x3>
    6760:	a0 92 f3 28 	sts	0x28F3, r10	; 0x8028f3 <digits1+0x4>
    6764:	b0 92 f4 28 	sts	0x28F4, r11	; 0x8028f4 <digits1+0x5>
    6768:	c0 92 f5 28 	sts	0x28F5, r12	; 0x8028f5 <digits1+0x6>
    676c:	d0 92 f6 28 	sts	0x28F6, r13	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6770:	c3 97       	sbiw	r24, 0x33	; 51
    6772:	bc f2       	brlt	.-82     	; 0x6722 <main+0x1dac>
    6774:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    6778:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    677c:	d2 cf       	rjmp	.-92     	; 0x6722 <main+0x1dac>
digitalWrite():
    677e:	61 e0       	ldi	r22, 0x01	; 1
    6780:	81 e2       	ldi	r24, 0x21	; 33
    6782:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6786:	d0 90 62 28 	lds	r13, 0x2862	; 0x802862 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    678a:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    678e:	81 11       	cpse	r24, r1
    6790:	9d c0       	rjmp	.+314    	; 0x68cc <main+0x1f56>
    6792:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    6796:	88 23       	and	r24, r24
    6798:	09 f4       	brne	.+2      	; 0x679c <main+0x1e26>
    679a:	98 c0       	rjmp	.+304    	; 0x68cc <main+0x1f56>
    679c:	dd 20       	and	r13, r13
    679e:	09 f4       	brne	.+2      	; 0x67a2 <main+0x1e2c>
    67a0:	95 c0       	rjmp	.+298    	; 0x68cc <main+0x1f56>
    67a2:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    67a6:	60 91 2c 29 	lds	r22, 0x292C	; 0x80292c <SET_LONG_VALUE+0x12>
    67aa:	70 91 2d 29 	lds	r23, 0x292D	; 0x80292d <SET_LONG_VALUE+0x13>
    67ae:	07 2e       	mov	r0, r23
    67b0:	00 0c       	add	r0, r0
    67b2:	88 0b       	sbc	r24, r24
    67b4:	99 0b       	sbc	r25, r25
    67b6:	95 d3       	rcall	.+1834   	; 0x6ee2 <__floatsisf>
    67b8:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    67bc:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    67c0:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    67c4:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
DISP_UPDATE():
    67c8:	8d eb       	ldi	r24, 0xBD	; 189
    67ca:	9b e2       	ldi	r25, 0x2B	; 43
    67cc:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    67d0:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
digitalWrite():
    67d4:	60 e0       	ldi	r22, 0x00	; 0
    67d6:	8a e1       	ldi	r24, 0x1A	; 26
    67d8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    67dc:	61 e0       	ldi	r22, 0x01	; 1
    67de:	8b e1       	ldi	r24, 0x1B	; 27
    67e0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    67e4:	60 91 02 28 	lds	r22, 0x2802	; 0x802802 <LOW_CAL_VALUE_SET>
    67e8:	70 91 03 28 	lds	r23, 0x2803	; 0x802803 <LOW_CAL_VALUE_SET+0x1>
    67ec:	07 2e       	mov	r0, r23
    67ee:	00 0c       	add	r0, r0
    67f0:	88 0b       	sbc	r24, r24
    67f2:	99 0b       	sbc	r25, r25
    67f4:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    67f8:	ea e1       	ldi	r30, 0x1A	; 26
    67fa:	f0 e0       	ldi	r31, 0x00	; 0
    67fc:	e0 93 e7 28 	sts	0x28E7, r30	; 0x8028e7 <digits2>
    6800:	f0 93 e8 28 	sts	0x28E8, r31	; 0x8028e8 <digits2+0x1>
    6804:	47 e1       	ldi	r20, 0x17	; 23
    6806:	50 e0       	ldi	r21, 0x00	; 0
    6808:	40 93 e9 28 	sts	0x28E9, r20	; 0x8028e9 <digits2+0x2>
    680c:	50 93 ea 28 	sts	0x28EA, r21	; 0x8028ea <digits2+0x3>
    6810:	81 e0       	ldi	r24, 0x01	; 1
    6812:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    6816:	c0 90 9f 28 	lds	r12, 0x289F	; 0x80289f <i>
    681a:	d0 90 a0 28 	lds	r13, 0x28A0	; 0x8028a0 <i+0x1>
    681e:	59 e1       	ldi	r21, 0x19	; 25
    6820:	c5 16       	cp	r12, r21
    6822:	d1 04       	cpc	r13, r1
    6824:	bc f4       	brge	.+46     	; 0x6854 <main+0x1ede>
DISPLAY_DIGIT1():
    6826:	20 92 ef 28 	sts	0x28EF, r2	; 0x8028ef <digits1>
    682a:	30 92 f0 28 	sts	0x28F0, r3	; 0x8028f0 <digits1+0x1>
    682e:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1+0x2>
    6832:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x3>
    6836:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x4>
    683a:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x5>
    683e:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x6>
    6842:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x7>
digitalWrite():
    6846:	60 e0       	ldi	r22, 0x00	; 0
    6848:	85 e1       	ldi	r24, 0x15	; 21
    684a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    684e:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6852:	99 cf       	rjmp	.-206    	; 0x6786 <main+0x1e10>
digitalWrite():
    6854:	61 e0       	ldi	r22, 0x01	; 1
    6856:	85 e1       	ldi	r24, 0x15	; 21
    6858:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    685c:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    6860:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    6864:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    6868:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    686c:	2d ec       	ldi	r18, 0xCD	; 205
    686e:	3c ec       	ldi	r19, 0xCC	; 204
    6870:	47 ec       	ldi	r20, 0xC7	; 199
    6872:	52 e4       	ldi	r21, 0x42	; 66
    6874:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6878:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    687c:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6880:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6884:	de d3       	rcall	.+1980   	; 0x7042 <__gesf2>
    6886:	20 e0       	ldi	r18, 0x00	; 0
    6888:	30 e0       	ldi	r19, 0x00	; 0
    688a:	40 e2       	ldi	r20, 0x20	; 32
    688c:	51 e4       	ldi	r21, 0x41	; 65
    688e:	18 16       	cp	r1, r24
    6890:	24 f0       	brlt	.+8      	; 0x689a <main+0x1f24>
    6892:	20 e0       	ldi	r18, 0x00	; 0
    6894:	30 e0       	ldi	r19, 0x00	; 0
    6896:	48 ec       	ldi	r20, 0xC8	; 200
    6898:	52 e4       	ldi	r21, 0x42	; 66
    689a:	c5 01       	movw	r24, r10
    689c:	b4 01       	movw	r22, r8
    689e:	d5 d3       	rcall	.+1962   	; 0x704a <__mulsf3>
    68a0:	ed d2       	rcall	.+1498   	; 0x6e7c <__fixsfsi>
    68a2:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    68a6:	81 e0       	ldi	r24, 0x01	; 1
    68a8:	80 93 b9 28 	sts	0x28B9, r24	; 0x8028b9 <DOT1_1>
    68ac:	6a e0       	ldi	r22, 0x0A	; 10
    68ae:	70 e0       	ldi	r23, 0x00	; 0
    68b0:	60 93 f5 28 	sts	0x28F5, r22	; 0x8028f5 <digits1+0x6>
    68b4:	70 93 f6 28 	sts	0x28F6, r23	; 0x8028f6 <digits1+0x7>
    68b8:	73 e3       	ldi	r23, 0x33	; 51
    68ba:	c7 16       	cp	r12, r23
    68bc:	d1 04       	cpc	r13, r1
    68be:	0c f4       	brge	.+2      	; 0x68c2 <main+0x1f4c>
    68c0:	62 cf       	rjmp	.-316    	; 0x6786 <main+0x1e10>
    68c2:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    68c6:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    68ca:	5d cf       	rjmp	.-326    	; 0x6786 <main+0x1e10>
digitalWrite():
    68cc:	60 e0       	ldi	r22, 0x00	; 0
    68ce:	81 e2       	ldi	r24, 0x21	; 33
    68d0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    68d4:	8b e0       	ldi	r24, 0x0B	; 11
    68d6:	90 e0       	ldi	r25, 0x00	; 0
    68d8:	d1 10       	cpse	r13, r1
    68da:	b5 c0       	rjmp	.+362    	; 0x6a46 <main+0x20d0>
    68dc:	8d e0       	ldi	r24, 0x0D	; 13
    68de:	90 e0       	ldi	r25, 0x00	; 0
    68e0:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    68e4:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    68e8:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    68ec:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
    68f0:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    68f4:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    68f8:	81 e0       	ldi	r24, 0x01	; 1
    68fa:	80 93 9e 28 	sts	0x289E, r24	; 0x80289e <DOT2_1>
    68fe:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    6902:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    6906:	07 2e       	mov	r0, r23
    6908:	00 0c       	add	r0, r0
    690a:	88 0b       	sbc	r24, r24
    690c:	99 0b       	sbc	r25, r25
    690e:	e9 d2       	rcall	.+1490   	; 0x6ee2 <__floatsisf>
    6910:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6914:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6918:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    691c:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
digitalWrite():
    6920:	61 e0       	ldi	r22, 0x01	; 1
    6922:	81 e2       	ldi	r24, 0x21	; 33
    6924:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6928:	8f e0       	ldi	r24, 0x0F	; 15
    692a:	c8 2e       	mov	r12, r24
    692c:	d1 2c       	mov	r13, r1
    692e:	9d e0       	ldi	r25, 0x0D	; 13
    6930:	a9 2e       	mov	r10, r25
    6932:	b1 2c       	mov	r11, r1
    6934:	20 e1       	ldi	r18, 0x10	; 16
    6936:	82 2e       	mov	r8, r18
    6938:	91 2c       	mov	r9, r1
SET_LONG_PRESS_FUNCTION():
    693a:	20 91 67 2a 	lds	r18, 0x2A67	; 0x802a67 <PID_SETPOINT>
    693e:	30 91 68 2a 	lds	r19, 0x2A68	; 0x802a68 <PID_SETPOINT+0x1>
    6942:	40 91 69 2a 	lds	r20, 0x2A69	; 0x802a69 <PID_SETPOINT+0x2>
    6946:	50 91 6a 2a 	lds	r21, 0x2A6A	; 0x802a6a <PID_SETPOINT+0x3>
    694a:	60 91 6f 2a 	lds	r22, 0x2A6F	; 0x802a6f <PID_INPUT>
    694e:	70 91 70 2a 	lds	r23, 0x2A70	; 0x802a70 <PID_INPUT+0x1>
    6952:	80 91 71 2a 	lds	r24, 0x2A71	; 0x802a71 <PID_INPUT+0x2>
    6956:	90 91 72 2a 	lds	r25, 0x2A72	; 0x802a72 <PID_INPUT+0x3>
    695a:	24 d2       	rcall	.+1096   	; 0x6da4 <__cmpsf2>
    695c:	87 ff       	sbrs	r24, 7
    695e:	63 c0       	rjmp	.+198    	; 0x6a26 <main+0x20b0>
    6960:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    6964:	88 23       	and	r24, r24
    6966:	09 f4       	brne	.+2      	; 0x696a <main+0x1ff4>
    6968:	5e c0       	rjmp	.+188    	; 0x6a26 <main+0x20b0>
    696a:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    696e:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    6972:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    6976:	07 2e       	mov	r0, r23
    6978:	00 0c       	add	r0, r0
    697a:	88 0b       	sbc	r24, r24
    697c:	99 0b       	sbc	r25, r25
    697e:	b1 d2       	rcall	.+1378   	; 0x6ee2 <__floatsisf>
    6980:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6984:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6988:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    698c:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    6990:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    6994:	8d eb       	ldi	r24, 0xBD	; 189
    6996:	9b e2       	ldi	r25, 0x2B	; 43
    6998:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
digitalWrite():
    699c:	60 e0       	ldi	r22, 0x00	; 0
    699e:	8b e1       	ldi	r24, 0x1B	; 27
    69a0:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    69a4:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    69a8:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    69ac:	89 31       	cpi	r24, 0x19	; 25
    69ae:	91 05       	cpc	r25, r1
    69b0:	1c f5       	brge	.+70     	; 0x69f8 <main+0x2082>
DISPLAY_DIGIT1():
    69b2:	00 93 ef 28 	sts	0x28EF, r16	; 0x8028ef <digits1>
    69b6:	10 93 f0 28 	sts	0x28F0, r17	; 0x8028f0 <digits1+0x1>
    69ba:	00 93 f1 28 	sts	0x28F1, r16	; 0x8028f1 <digits1+0x2>
    69be:	10 93 f2 28 	sts	0x28F2, r17	; 0x8028f2 <digits1+0x3>
    69c2:	00 93 f3 28 	sts	0x28F3, r16	; 0x8028f3 <digits1+0x4>
    69c6:	10 93 f4 28 	sts	0x28F4, r17	; 0x8028f4 <digits1+0x5>
    69ca:	00 93 f5 28 	sts	0x28F5, r16	; 0x8028f5 <digits1+0x6>
    69ce:	10 93 f6 28 	sts	0x28F6, r17	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    69d2:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    69d6:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    69da:	07 2e       	mov	r0, r23
    69dc:	00 0c       	add	r0, r0
    69de:	88 0b       	sbc	r24, r24
    69e0:	99 0b       	sbc	r25, r25
    69e2:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    69e6:	40 92 e7 28 	sts	0x28E7, r4	; 0x8028e7 <digits2>
    69ea:	50 92 e8 28 	sts	0x28E8, r5	; 0x8028e8 <digits2+0x1>
    69ee:	60 92 e9 28 	sts	0x28E9, r6	; 0x8028e9 <digits2+0x2>
    69f2:	70 92 ea 28 	sts	0x28EA, r7	; 0x8028ea <digits2+0x3>
    69f6:	a1 cf       	rjmp	.-190    	; 0x693a <main+0x1fc4>
DISPLAY_DIGIT1():
    69f8:	40 92 ef 28 	sts	0x28EF, r4	; 0x8028ef <digits1>
    69fc:	50 92 f0 28 	sts	0x28F0, r5	; 0x8028f0 <digits1+0x1>
    6a00:	c0 92 f1 28 	sts	0x28F1, r12	; 0x8028f1 <digits1+0x2>
    6a04:	d0 92 f2 28 	sts	0x28F2, r13	; 0x8028f2 <digits1+0x3>
    6a08:	a0 92 f3 28 	sts	0x28F3, r10	; 0x8028f3 <digits1+0x4>
    6a0c:	b0 92 f4 28 	sts	0x28F4, r11	; 0x8028f4 <digits1+0x5>
    6a10:	80 92 f5 28 	sts	0x28F5, r8	; 0x8028f5 <digits1+0x6>
    6a14:	90 92 f6 28 	sts	0x28F6, r9	; 0x8028f6 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    6a18:	c3 97       	sbiw	r24, 0x33	; 51
    6a1a:	dc f2       	brlt	.-74     	; 0x69d2 <main+0x205c>
    6a1c:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    6a20:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    6a24:	d6 cf       	rjmp	.-84     	; 0x69d2 <main+0x205c>
digitalWrite():
    6a26:	60 e0       	ldi	r22, 0x00	; 0
    6a28:	81 e2       	ldi	r24, 0x21	; 33
    6a2a:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6a2e:	40 92 9a 28 	sts	0x289A, r4	; 0x80289a <SET_MIN>
    6a32:	50 92 9b 28 	sts	0x289B, r5	; 0x80289b <SET_MIN+0x1>
    6a36:	81 e0       	ldi	r24, 0x01	; 1
    6a38:	80 93 62 28 	sts	0x2862, r24	; 0x802862 <COUNTDOWN_START>
    6a3c:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    6a40:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    6a44:	01 96       	adiw	r24, 0x01	; 1
    6a46:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    6a4a:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    6a4e:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>
digitalWrite():
    6a52:	61 e0       	ldi	r22, 0x01	; 1
    6a54:	81 e2       	ldi	r24, 0x21	; 33
    6a56:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6a5a:	d0 90 62 28 	lds	r13, 0x2862	; 0x802862 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    6a5e:	80 91 a7 28 	lds	r24, 0x28A7	; 0x8028a7 <Mode_Button_Single_Press_In_Settings>
    6a62:	81 11       	cpse	r24, r1
    6a64:	a4 c0       	rjmp	.+328    	; 0x6bae <main+0x2238>
    6a66:	80 91 4a 28 	lds	r24, 0x284A	; 0x80284a <RST_BUTT>
    6a6a:	88 23       	and	r24, r24
    6a6c:	09 f4       	brne	.+2      	; 0x6a70 <main+0x20fa>
    6a6e:	9f c0       	rjmp	.+318    	; 0x6bae <main+0x2238>
    6a70:	dd 20       	and	r13, r13
    6a72:	09 f4       	brne	.+2      	; 0x6a76 <main+0x2100>
    6a74:	9c c0       	rjmp	.+312    	; 0x6bae <main+0x2238>
    6a76:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <Mclass::RTD_TEMP_CONV() [clone .constprop.31]>
    6a7a:	60 91 2e 29 	lds	r22, 0x292E	; 0x80292e <SET_LONG_VALUE+0x14>
    6a7e:	70 91 2f 29 	lds	r23, 0x292F	; 0x80292f <SET_LONG_VALUE+0x15>
    6a82:	07 2e       	mov	r0, r23
    6a84:	00 0c       	add	r0, r0
    6a86:	88 0b       	sbc	r24, r24
    6a88:	99 0b       	sbc	r25, r25
    6a8a:	2b d2       	rcall	.+1110   	; 0x6ee2 <__floatsisf>
    6a8c:	60 93 67 2a 	sts	0x2A67, r22	; 0x802a67 <PID_SETPOINT>
    6a90:	70 93 68 2a 	sts	0x2A68, r23	; 0x802a68 <PID_SETPOINT+0x1>
    6a94:	80 93 69 2a 	sts	0x2A69, r24	; 0x802a69 <PID_SETPOINT+0x2>
    6a98:	90 93 6a 2a 	sts	0x2A6A, r25	; 0x802a6a <PID_SETPOINT+0x3>
    6a9c:	0e 94 bf 08 	call	0x117e	; 0x117e <Lclass::PID_callingg() [clone .constprop.43]>
DISP_UPDATE():
    6aa0:	8d eb       	ldi	r24, 0xBD	; 189
    6aa2:	9b e2       	ldi	r25, 0x2B	; 43
    6aa4:	0e 94 84 0a 	call	0x1508	; 0x1508 <Ticker::update()>
digitalWrite():
    6aa8:	60 e0       	ldi	r22, 0x00	; 0
    6aaa:	8a e1       	ldi	r24, 0x1A	; 26
    6aac:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6ab0:	61 e0       	ldi	r22, 0x01	; 1
    6ab2:	8b e1       	ldi	r24, 0x1B	; 27
    6ab4:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6ab8:	60 91 43 28 	lds	r22, 0x2843	; 0x802843 <HIGH_CAL_VALUE_SET>
    6abc:	70 91 44 28 	lds	r23, 0x2844	; 0x802844 <HIGH_CAL_VALUE_SET+0x1>
    6ac0:	07 2e       	mov	r0, r23
    6ac2:	00 0c       	add	r0, r0
    6ac4:	88 0b       	sbc	r24, r24
    6ac6:	99 0b       	sbc	r25, r25
    6ac8:	0e 94 95 03 	call	0x72a	; 0x72a <Eclass::BREAK_NUMBER2(long) [clone .constprop.33]>
    6acc:	8e e1       	ldi	r24, 0x1E	; 30
    6ace:	90 e0       	ldi	r25, 0x00	; 0
    6ad0:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6ad4:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6ad8:	a9 e1       	ldi	r26, 0x19	; 25
    6ada:	b0 e0       	ldi	r27, 0x00	; 0
    6adc:	a0 93 e9 28 	sts	0x28E9, r26	; 0x8028e9 <digits2+0x2>
    6ae0:	b0 93 ea 28 	sts	0x28EA, r27	; 0x8028ea <digits2+0x3>
    6ae4:	dd 24       	eor	r13, r13
    6ae6:	d3 94       	inc	r13
    6ae8:	d0 92 9e 28 	sts	0x289E, r13	; 0x80289e <DOT2_1>
    6aec:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6af0:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6af4:	49 97       	sbiw	r24, 0x19	; 25
    6af6:	04 f5       	brge	.+64     	; 0x6b38 <main+0x21c2>
DISPLAY_DIGIT1():
    6af8:	20 92 ef 28 	sts	0x28EF, r2	; 0x8028ef <digits1>
    6afc:	30 92 f0 28 	sts	0x28F0, r3	; 0x8028f0 <digits1+0x1>
    6b00:	20 92 f1 28 	sts	0x28F1, r2	; 0x8028f1 <digits1+0x2>
    6b04:	30 92 f2 28 	sts	0x28F2, r3	; 0x8028f2 <digits1+0x3>
    6b08:	20 92 f3 28 	sts	0x28F3, r2	; 0x8028f3 <digits1+0x4>
    6b0c:	30 92 f4 28 	sts	0x28F4, r3	; 0x8028f4 <digits1+0x5>
    6b10:	20 92 f5 28 	sts	0x28F5, r2	; 0x8028f5 <digits1+0x6>
    6b14:	30 92 f6 28 	sts	0x28F6, r3	; 0x8028f6 <digits1+0x7>
digitalWrite():
    6b18:	60 e0       	ldi	r22, 0x00	; 0
    6b1a:	85 e1       	ldi	r24, 0x15	; 21
    6b1c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6b20:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6b24:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6b28:	c3 97       	sbiw	r24, 0x33	; 51
    6b2a:	0c f4       	brge	.+2      	; 0x6b2e <main+0x21b8>
    6b2c:	96 cf       	rjmp	.-212    	; 0x6a5a <main+0x20e4>
    6b2e:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <i>
    6b32:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <i+0x1>
    6b36:	91 cf       	rjmp	.-222    	; 0x6a5a <main+0x20e4>
digitalWrite():
    6b38:	61 e0       	ldi	r22, 0x01	; 1
    6b3a:	85 e1       	ldi	r24, 0x15	; 21
    6b3c:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
    6b40:	80 90 fb 28 	lds	r8, 0x28FB	; 0x8028fb <TEMP_DEG_RAW>
    6b44:	90 90 fc 28 	lds	r9, 0x28FC	; 0x8028fc <TEMP_DEG_RAW+0x1>
    6b48:	a0 90 fd 28 	lds	r10, 0x28FD	; 0x8028fd <TEMP_DEG_RAW+0x2>
    6b4c:	b0 90 fe 28 	lds	r11, 0x28FE	; 0x8028fe <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    6b50:	2d ec       	ldi	r18, 0xCD	; 205
    6b52:	3c ec       	ldi	r19, 0xCC	; 204
    6b54:	47 ec       	ldi	r20, 0xC7	; 199
    6b56:	52 e4       	ldi	r21, 0x42	; 66
    6b58:	60 91 ff 28 	lds	r22, 0x28FF	; 0x8028ff <TEMP_DEG>
    6b5c:	70 91 00 29 	lds	r23, 0x2900	; 0x802900 <TEMP_DEG+0x1>
    6b60:	80 91 01 29 	lds	r24, 0x2901	; 0x802901 <TEMP_DEG+0x2>
    6b64:	90 91 02 29 	lds	r25, 0x2902	; 0x802902 <TEMP_DEG+0x3>
    6b68:	6c d2       	rcall	.+1240   	; 0x7042 <__gesf2>
    6b6a:	18 16       	cp	r1, r24
    6b6c:	9c f4       	brge	.+38     	; 0x6b94 <main+0x221e>
    6b6e:	20 e0       	ldi	r18, 0x00	; 0
    6b70:	30 e0       	ldi	r19, 0x00	; 0
    6b72:	40 e2       	ldi	r20, 0x20	; 32
    6b74:	51 e4       	ldi	r21, 0x41	; 65
    6b76:	c5 01       	movw	r24, r10
    6b78:	b4 01       	movw	r22, r8
    6b7a:	67 d2       	rcall	.+1230   	; 0x704a <__mulsf3>
    6b7c:	7f d1       	rcall	.+766    	; 0x6e7c <__fixsfsi>
    6b7e:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6b82:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6b86:	ea e0       	ldi	r30, 0x0A	; 10
    6b88:	f0 e0       	ldi	r31, 0x00	; 0
    6b8a:	e0 93 f5 28 	sts	0x28F5, r30	; 0x8028f5 <digits1+0x6>
    6b8e:	f0 93 f6 28 	sts	0x28F6, r31	; 0x8028f6 <digits1+0x7>
    6b92:	c6 cf       	rjmp	.-116    	; 0x6b20 <main+0x21aa>
    6b94:	20 e0       	ldi	r18, 0x00	; 0
    6b96:	30 e0       	ldi	r19, 0x00	; 0
    6b98:	48 ec       	ldi	r20, 0xC8	; 200
    6b9a:	52 e4       	ldi	r21, 0x42	; 66
    6b9c:	c5 01       	movw	r24, r10
    6b9e:	b4 01       	movw	r22, r8
    6ba0:	54 d2       	rcall	.+1192   	; 0x704a <__mulsf3>
    6ba2:	6c d1       	rcall	.+728    	; 0x6e7c <__fixsfsi>
    6ba4:	0e 94 56 03 	call	0x6ac	; 0x6ac <Eclass::BREAK_NUMBER1(long) [clone .constprop.34]>
    6ba8:	d0 92 b9 28 	sts	0x28B9, r13	; 0x8028b9 <DOT1_1>
    6bac:	ec cf       	rjmp	.-40     	; 0x6b86 <main+0x2210>
digitalWrite():
    6bae:	60 e0       	ldi	r22, 0x00	; 0
    6bb0:	81 e2       	ldi	r24, 0x21	; 33
    6bb2:	0e 94 4f 07 	call	0xe9e	; 0xe9e <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    6bb6:	10 92 67 2a 	sts	0x2A67, r1	; 0x802a67 <PID_SETPOINT>
    6bba:	10 92 68 2a 	sts	0x2A68, r1	; 0x802a68 <PID_SETPOINT+0x1>
    6bbe:	10 92 69 2a 	sts	0x2A69, r1	; 0x802a69 <PID_SETPOINT+0x2>
    6bc2:	10 92 6a 2a 	sts	0x2A6A, r1	; 0x802a6a <PID_SETPOINT+0x3>
    6bc6:	dd 20       	and	r13, r13
    6bc8:	19 f0       	breq	.+6      	; 0x6bd0 <main+0x225a>
    6bca:	8d e0       	ldi	r24, 0x0D	; 13
    6bcc:	90 e0       	ldi	r25, 0x00	; 0
    6bce:	3b cf       	rjmp	.-394    	; 0x6a46 <main+0x20d0>
    6bd0:	10 92 4d 29 	sts	0x294D, r1	; 0x80294d <LONG_PRESS>
    6bd4:	89 ce       	rjmp	.-750    	; 0x68e8 <main+0x1f72>
    6bd6:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6bda:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6bde:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <i>
    6be2:	90 91 a0 28 	lds	r25, 0x28A0	; 0x8028a0 <i+0x1>
    6be6:	88 3c       	cpi	r24, 0xC8	; 200
    6be8:	91 05       	cpc	r25, r1
    6bea:	1c f5       	brge	.+70     	; 0x6c32 <main+0x22bc>
DISPLAY_DIGIT2():
    6bec:	e0 92 e7 28 	sts	0x28E7, r14	; 0x8028e7 <digits2>
    6bf0:	f0 92 e8 28 	sts	0x28E8, r15	; 0x8028e8 <digits2+0x1>
    6bf4:	8d e0       	ldi	r24, 0x0D	; 13
    6bf6:	90 e0       	ldi	r25, 0x00	; 0
    6bf8:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6bfc:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6c00:	2a e1       	ldi	r18, 0x1A	; 26
    6c02:	30 e0       	ldi	r19, 0x00	; 0
    6c04:	20 93 eb 28 	sts	0x28EB, r18	; 0x8028eb <digits2+0x4>
    6c08:	30 93 ec 28 	sts	0x28EC, r19	; 0x8028ec <digits2+0x5>
    6c0c:	2e e0       	ldi	r18, 0x0E	; 14
    6c0e:	30 e0       	ldi	r19, 0x00	; 0
    6c10:	20 93 ed 28 	sts	0x28ED, r18	; 0x8028ed <digits2+0x6>
    6c14:	30 93 ee 28 	sts	0x28EE, r19	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6c18:	2c e0       	ldi	r18, 0x0C	; 12
    6c1a:	30 e0       	ldi	r19, 0x00	; 0
    6c1c:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6c20:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6c24:	80 93 f1 28 	sts	0x28F1, r24	; 0x8028f1 <digits1+0x2>
    6c28:	90 93 f2 28 	sts	0x28F2, r25	; 0x8028f2 <digits1+0x3>
    6c2c:	8c e1       	ldi	r24, 0x1C	; 28
    6c2e:	90 e0       	ldi	r25, 0x00	; 0
    6c30:	b2 cb       	rjmp	.-2204   	; 0x6396 <main+0x1a20>
SET_LONG_PRESS_FUNCTION():
    6c32:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <Service_Menu>
    6c36:	2c ca       	rjmp	.-2984   	; 0x6090 <main+0x171a>
    6c38:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6c3c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6c40:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6c44:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6c48:	8a e1       	ldi	r24, 0x1A	; 26
    6c4a:	90 e0       	ldi	r25, 0x00	; 0
    6c4c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6c50:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6c54:	87 e1       	ldi	r24, 0x17	; 23
    6c56:	90 e0       	ldi	r25, 0x00	; 0
    6c58:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6c5c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6c60:	8b e1       	ldi	r24, 0x1B	; 27
    6c62:	90 e0       	ldi	r25, 0x00	; 0
    6c64:	80 93 eb 28 	sts	0x28EB, r24	; 0x8028eb <digits2+0x4>
    6c68:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <digits2+0x5>
    6c6c:	00 93 ed 28 	sts	0x28ED, r16	; 0x8028ed <digits2+0x6>
    6c70:	10 93 ee 28 	sts	0x28EE, r17	; 0x8028ee <digits2+0x7>
    6c74:	0c 94 c0 29 	jmp	0x5380	; 0x5380 <main+0xa0a>
SET_LONG_PRESS_FUNCTION():
    6c78:	10 92 ba 28 	sts	0x28BA, r1	; 0x8028ba <DOT1_0>
    6c7c:	10 92 b9 28 	sts	0x28B9, r1	; 0x8028b9 <DOT1_1>
    6c80:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_1>
    6c84:	0e 94 5e 08 	call	0x10bc	; 0x10bc <Pclass::ALL_LED_OFF() [clone .constprop.38]>
DISPLAY_DIGIT2():
    6c88:	85 e1       	ldi	r24, 0x15	; 21
    6c8a:	90 e0       	ldi	r25, 0x00	; 0
    6c8c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <digits2>
    6c90:	90 93 e8 28 	sts	0x28E8, r25	; 0x8028e8 <digits2+0x1>
    6c94:	8d e0       	ldi	r24, 0x0D	; 13
    6c96:	90 e0       	ldi	r25, 0x00	; 0
    6c98:	80 93 e9 28 	sts	0x28E9, r24	; 0x8028e9 <digits2+0x2>
    6c9c:	90 93 ea 28 	sts	0x28EA, r25	; 0x8028ea <digits2+0x3>
    6ca0:	e0 92 eb 28 	sts	0x28EB, r14	; 0x8028eb <digits2+0x4>
    6ca4:	f0 92 ec 28 	sts	0x28EC, r15	; 0x8028ec <digits2+0x5>
    6ca8:	80 e1       	ldi	r24, 0x10	; 16
    6caa:	90 e0       	ldi	r25, 0x00	; 0
    6cac:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <digits2+0x6>
    6cb0:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <digits2+0x7>
DISPLAY_DIGIT1():
    6cb4:	21 e1       	ldi	r18, 0x11	; 17
    6cb6:	30 e0       	ldi	r19, 0x00	; 0
    6cb8:	20 93 ef 28 	sts	0x28EF, r18	; 0x8028ef <digits1>
    6cbc:	30 93 f0 28 	sts	0x28F0, r19	; 0x8028f0 <digits1+0x1>
    6cc0:	2f e0       	ldi	r18, 0x0F	; 15
    6cc2:	30 e0       	ldi	r19, 0x00	; 0
    6cc4:	20 93 f1 28 	sts	0x28F1, r18	; 0x8028f1 <digits1+0x2>
    6cc8:	30 93 f2 28 	sts	0x28F2, r19	; 0x8028f2 <digits1+0x3>
    6ccc:	2c e0       	ldi	r18, 0x0C	; 12
    6cce:	30 e0       	ldi	r19, 0x00	; 0
    6cd0:	bc c8       	rjmp	.-3720   	; 0x5e4a <main+0x14d4>
loop():
    6cd2:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <Pclass::SET_SHORT_PRESS_FUNCTION() [clone .constprop.22]>
    6cd6:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <main+0x72c>

00006cda <__subsf3>:
__subsf3():
    6cda:	50 58       	subi	r21, 0x80	; 128

00006cdc <__addsf3>:
    6cdc:	bb 27       	eor	r27, r27
    6cde:	aa 27       	eor	r26, r26
    6ce0:	0e d0       	rcall	.+28     	; 0x6cfe <__addsf3x>
    6ce2:	75 c1       	rjmp	.+746    	; 0x6fce <__fp_round>
__addsf3():
    6ce4:	66 d1       	rcall	.+716    	; 0x6fb2 <__fp_pscA>
    6ce6:	30 f0       	brcs	.+12     	; 0x6cf4 <__addsf3+0x18>
    6ce8:	6b d1       	rcall	.+726    	; 0x6fc0 <__fp_pscB>
    6cea:	20 f0       	brcs	.+8      	; 0x6cf4 <__addsf3+0x18>
    6cec:	31 f4       	brne	.+12     	; 0x6cfa <__addsf3+0x1e>
    6cee:	9f 3f       	cpi	r25, 0xFF	; 255
    6cf0:	11 f4       	brne	.+4      	; 0x6cf6 <__addsf3+0x1a>
    6cf2:	1e f4       	brtc	.+6      	; 0x6cfa <__addsf3+0x1e>
    6cf4:	5b c1       	rjmp	.+694    	; 0x6fac <__fp_nan>
    6cf6:	0e f4       	brtc	.+2      	; 0x6cfa <__addsf3+0x1e>
    6cf8:	e0 95       	com	r30
    6cfa:	e7 fb       	bst	r30, 7
    6cfc:	51 c1       	rjmp	.+674    	; 0x6fa0 <__fp_inf>

00006cfe <__addsf3x>:
__addsf3x():
    6cfe:	e9 2f       	mov	r30, r25
    6d00:	77 d1       	rcall	.+750    	; 0x6ff0 <__fp_split3>
    6d02:	80 f3       	brcs	.-32     	; 0x6ce4 <__addsf3+0x8>
    6d04:	ba 17       	cp	r27, r26
    6d06:	62 07       	cpc	r22, r18
    6d08:	73 07       	cpc	r23, r19
    6d0a:	84 07       	cpc	r24, r20
    6d0c:	95 07       	cpc	r25, r21
    6d0e:	18 f0       	brcs	.+6      	; 0x6d16 <__addsf3x+0x18>
    6d10:	71 f4       	brne	.+28     	; 0x6d2e <__addsf3x+0x30>
    6d12:	9e f5       	brtc	.+102    	; 0x6d7a <__addsf3x+0x7c>
    6d14:	8f c1       	rjmp	.+798    	; 0x7034 <__fp_zero>
    6d16:	0e f4       	brtc	.+2      	; 0x6d1a <__addsf3x+0x1c>
    6d18:	e0 95       	com	r30
    6d1a:	0b 2e       	mov	r0, r27
    6d1c:	ba 2f       	mov	r27, r26
    6d1e:	a0 2d       	mov	r26, r0
    6d20:	0b 01       	movw	r0, r22
    6d22:	b9 01       	movw	r22, r18
    6d24:	90 01       	movw	r18, r0
    6d26:	0c 01       	movw	r0, r24
    6d28:	ca 01       	movw	r24, r20
    6d2a:	a0 01       	movw	r20, r0
    6d2c:	11 24       	eor	r1, r1
    6d2e:	ff 27       	eor	r31, r31
    6d30:	59 1b       	sub	r21, r25
    6d32:	99 f0       	breq	.+38     	; 0x6d5a <__addsf3x+0x5c>
    6d34:	59 3f       	cpi	r21, 0xF9	; 249
    6d36:	50 f4       	brcc	.+20     	; 0x6d4c <__addsf3x+0x4e>
    6d38:	50 3e       	cpi	r21, 0xE0	; 224
    6d3a:	68 f1       	brcs	.+90     	; 0x6d96 <__addsf3x+0x98>
    6d3c:	1a 16       	cp	r1, r26
    6d3e:	f0 40       	sbci	r31, 0x00	; 0
    6d40:	a2 2f       	mov	r26, r18
    6d42:	23 2f       	mov	r18, r19
    6d44:	34 2f       	mov	r19, r20
    6d46:	44 27       	eor	r20, r20
    6d48:	58 5f       	subi	r21, 0xF8	; 248
    6d4a:	f3 cf       	rjmp	.-26     	; 0x6d32 <__addsf3x+0x34>
    6d4c:	46 95       	lsr	r20
    6d4e:	37 95       	ror	r19
    6d50:	27 95       	ror	r18
    6d52:	a7 95       	ror	r26
    6d54:	f0 40       	sbci	r31, 0x00	; 0
    6d56:	53 95       	inc	r21
    6d58:	c9 f7       	brne	.-14     	; 0x6d4c <__addsf3x+0x4e>
    6d5a:	7e f4       	brtc	.+30     	; 0x6d7a <__addsf3x+0x7c>
    6d5c:	1f 16       	cp	r1, r31
    6d5e:	ba 0b       	sbc	r27, r26
    6d60:	62 0b       	sbc	r22, r18
    6d62:	73 0b       	sbc	r23, r19
    6d64:	84 0b       	sbc	r24, r20
    6d66:	ba f0       	brmi	.+46     	; 0x6d96 <__addsf3x+0x98>
    6d68:	91 50       	subi	r25, 0x01	; 1
    6d6a:	a1 f0       	breq	.+40     	; 0x6d94 <__addsf3x+0x96>
    6d6c:	ff 0f       	add	r31, r31
    6d6e:	bb 1f       	adc	r27, r27
    6d70:	66 1f       	adc	r22, r22
    6d72:	77 1f       	adc	r23, r23
    6d74:	88 1f       	adc	r24, r24
    6d76:	c2 f7       	brpl	.-16     	; 0x6d68 <__addsf3x+0x6a>
    6d78:	0e c0       	rjmp	.+28     	; 0x6d96 <__addsf3x+0x98>
    6d7a:	ba 0f       	add	r27, r26
    6d7c:	62 1f       	adc	r22, r18
    6d7e:	73 1f       	adc	r23, r19
    6d80:	84 1f       	adc	r24, r20
    6d82:	48 f4       	brcc	.+18     	; 0x6d96 <__addsf3x+0x98>
    6d84:	87 95       	ror	r24
    6d86:	77 95       	ror	r23
    6d88:	67 95       	ror	r22
    6d8a:	b7 95       	ror	r27
    6d8c:	f7 95       	ror	r31
    6d8e:	9e 3f       	cpi	r25, 0xFE	; 254
    6d90:	08 f0       	brcs	.+2      	; 0x6d94 <__addsf3x+0x96>
    6d92:	b3 cf       	rjmp	.-154    	; 0x6cfa <__addsf3+0x1e>
    6d94:	93 95       	inc	r25
    6d96:	88 0f       	add	r24, r24
    6d98:	08 f0       	brcs	.+2      	; 0x6d9c <__addsf3x+0x9e>
    6d9a:	99 27       	eor	r25, r25
    6d9c:	ee 0f       	add	r30, r30
    6d9e:	97 95       	ror	r25
    6da0:	87 95       	ror	r24
    6da2:	08 95       	ret

00006da4 <__cmpsf2>:
    6da4:	d9 d0       	rcall	.+434    	; 0x6f58 <__fp_cmp>
    6da6:	08 f4       	brcc	.+2      	; 0x6daa <__cmpsf2+0x6>
    6da8:	81 e0       	ldi	r24, 0x01	; 1
    6daa:	08 95       	ret

00006dac <__divsf3>:
    6dac:	0c d0       	rcall	.+24     	; 0x6dc6 <__divsf3x>
    6dae:	0f c1       	rjmp	.+542    	; 0x6fce <__fp_round>
    6db0:	07 d1       	rcall	.+526    	; 0x6fc0 <__fp_pscB>
    6db2:	40 f0       	brcs	.+16     	; 0x6dc4 <__divsf3+0x18>
    6db4:	fe d0       	rcall	.+508    	; 0x6fb2 <__fp_pscA>
    6db6:	30 f0       	brcs	.+12     	; 0x6dc4 <__divsf3+0x18>
    6db8:	21 f4       	brne	.+8      	; 0x6dc2 <__divsf3+0x16>
    6dba:	5f 3f       	cpi	r21, 0xFF	; 255
    6dbc:	19 f0       	breq	.+6      	; 0x6dc4 <__divsf3+0x18>
    6dbe:	f0 c0       	rjmp	.+480    	; 0x6fa0 <__fp_inf>
    6dc0:	51 11       	cpse	r21, r1
    6dc2:	39 c1       	rjmp	.+626    	; 0x7036 <__fp_szero>
    6dc4:	f3 c0       	rjmp	.+486    	; 0x6fac <__fp_nan>

00006dc6 <__divsf3x>:
    6dc6:	14 d1       	rcall	.+552    	; 0x6ff0 <__fp_split3>
    6dc8:	98 f3       	brcs	.-26     	; 0x6db0 <__divsf3+0x4>

00006dca <__divsf3_pse>:
__divsf3_pse():
    6dca:	99 23       	and	r25, r25
    6dcc:	c9 f3       	breq	.-14     	; 0x6dc0 <__divsf3+0x14>
    6dce:	55 23       	and	r21, r21
    6dd0:	b1 f3       	breq	.-20     	; 0x6dbe <__divsf3+0x12>
    6dd2:	95 1b       	sub	r25, r21
    6dd4:	55 0b       	sbc	r21, r21
    6dd6:	bb 27       	eor	r27, r27
    6dd8:	aa 27       	eor	r26, r26
    6dda:	62 17       	cp	r22, r18
    6ddc:	73 07       	cpc	r23, r19
    6dde:	84 07       	cpc	r24, r20
    6de0:	38 f0       	brcs	.+14     	; 0x6df0 <__divsf3_pse+0x26>
    6de2:	9f 5f       	subi	r25, 0xFF	; 255
    6de4:	5f 4f       	sbci	r21, 0xFF	; 255
    6de6:	22 0f       	add	r18, r18
    6de8:	33 1f       	adc	r19, r19
    6dea:	44 1f       	adc	r20, r20
    6dec:	aa 1f       	adc	r26, r26
    6dee:	a9 f3       	breq	.-22     	; 0x6dda <__divsf3_pse+0x10>
    6df0:	33 d0       	rcall	.+102    	; 0x6e58 <__divsf3_pse+0x8e>
    6df2:	0e 2e       	mov	r0, r30
    6df4:	3a f0       	brmi	.+14     	; 0x6e04 <__divsf3_pse+0x3a>
    6df6:	e0 e8       	ldi	r30, 0x80	; 128
    6df8:	30 d0       	rcall	.+96     	; 0x6e5a <__divsf3_pse+0x90>
    6dfa:	91 50       	subi	r25, 0x01	; 1
    6dfc:	50 40       	sbci	r21, 0x00	; 0
    6dfe:	e6 95       	lsr	r30
    6e00:	00 1c       	adc	r0, r0
    6e02:	ca f7       	brpl	.-14     	; 0x6df6 <__divsf3_pse+0x2c>
    6e04:	29 d0       	rcall	.+82     	; 0x6e58 <__divsf3_pse+0x8e>
    6e06:	fe 2f       	mov	r31, r30
    6e08:	27 d0       	rcall	.+78     	; 0x6e58 <__divsf3_pse+0x8e>
    6e0a:	66 0f       	add	r22, r22
    6e0c:	77 1f       	adc	r23, r23
    6e0e:	88 1f       	adc	r24, r24
    6e10:	bb 1f       	adc	r27, r27
    6e12:	26 17       	cp	r18, r22
    6e14:	37 07       	cpc	r19, r23
    6e16:	48 07       	cpc	r20, r24
    6e18:	ab 07       	cpc	r26, r27
    6e1a:	b0 e8       	ldi	r27, 0x80	; 128
    6e1c:	09 f0       	breq	.+2      	; 0x6e20 <__divsf3_pse+0x56>
    6e1e:	bb 0b       	sbc	r27, r27
    6e20:	80 2d       	mov	r24, r0
    6e22:	bf 01       	movw	r22, r30
    6e24:	ff 27       	eor	r31, r31
    6e26:	93 58       	subi	r25, 0x83	; 131
    6e28:	5f 4f       	sbci	r21, 0xFF	; 255
    6e2a:	2a f0       	brmi	.+10     	; 0x6e36 <__divsf3_pse+0x6c>
    6e2c:	9e 3f       	cpi	r25, 0xFE	; 254
    6e2e:	51 05       	cpc	r21, r1
    6e30:	68 f0       	brcs	.+26     	; 0x6e4c <__divsf3_pse+0x82>
    6e32:	b6 c0       	rjmp	.+364    	; 0x6fa0 <__fp_inf>
    6e34:	00 c1       	rjmp	.+512    	; 0x7036 <__fp_szero>
    6e36:	5f 3f       	cpi	r21, 0xFF	; 255
    6e38:	ec f3       	brlt	.-6      	; 0x6e34 <__divsf3_pse+0x6a>
    6e3a:	98 3e       	cpi	r25, 0xE8	; 232
    6e3c:	dc f3       	brlt	.-10     	; 0x6e34 <__divsf3_pse+0x6a>
    6e3e:	86 95       	lsr	r24
    6e40:	77 95       	ror	r23
    6e42:	67 95       	ror	r22
    6e44:	b7 95       	ror	r27
    6e46:	f7 95       	ror	r31
    6e48:	9f 5f       	subi	r25, 0xFF	; 255
    6e4a:	c9 f7       	brne	.-14     	; 0x6e3e <__divsf3_pse+0x74>
    6e4c:	88 0f       	add	r24, r24
    6e4e:	91 1d       	adc	r25, r1
    6e50:	96 95       	lsr	r25
    6e52:	87 95       	ror	r24
    6e54:	97 f9       	bld	r25, 7
    6e56:	08 95       	ret
    6e58:	e1 e0       	ldi	r30, 0x01	; 1
    6e5a:	66 0f       	add	r22, r22
    6e5c:	77 1f       	adc	r23, r23
    6e5e:	88 1f       	adc	r24, r24
    6e60:	bb 1f       	adc	r27, r27
    6e62:	62 17       	cp	r22, r18
    6e64:	73 07       	cpc	r23, r19
    6e66:	84 07       	cpc	r24, r20
    6e68:	ba 07       	cpc	r27, r26
    6e6a:	20 f0       	brcs	.+8      	; 0x6e74 <__divsf3_pse+0xaa>
    6e6c:	62 1b       	sub	r22, r18
    6e6e:	73 0b       	sbc	r23, r19
    6e70:	84 0b       	sbc	r24, r20
    6e72:	ba 0b       	sbc	r27, r26
    6e74:	ee 1f       	adc	r30, r30
    6e76:	88 f7       	brcc	.-30     	; 0x6e5a <__divsf3_pse+0x90>
    6e78:	e0 95       	com	r30
    6e7a:	08 95       	ret

00006e7c <__fixsfsi>:
__fixsfsi():
    6e7c:	04 d0       	rcall	.+8      	; 0x6e86 <__fixunssfsi>
    6e7e:	68 94       	set
    6e80:	b1 11       	cpse	r27, r1
    6e82:	d9 c0       	rjmp	.+434    	; 0x7036 <__fp_szero>
    6e84:	08 95       	ret

00006e86 <__fixunssfsi>:
__fixunssfsi():
    6e86:	bc d0       	rcall	.+376    	; 0x7000 <__fp_splitA>
    6e88:	88 f0       	brcs	.+34     	; 0x6eac <__fixunssfsi+0x26>
    6e8a:	9f 57       	subi	r25, 0x7F	; 127
    6e8c:	90 f0       	brcs	.+36     	; 0x6eb2 <__fixunssfsi+0x2c>
    6e8e:	b9 2f       	mov	r27, r25
    6e90:	99 27       	eor	r25, r25
    6e92:	b7 51       	subi	r27, 0x17	; 23
    6e94:	a0 f0       	brcs	.+40     	; 0x6ebe <__fixunssfsi+0x38>
    6e96:	d1 f0       	breq	.+52     	; 0x6ecc <__fixunssfsi+0x46>
    6e98:	66 0f       	add	r22, r22
    6e9a:	77 1f       	adc	r23, r23
    6e9c:	88 1f       	adc	r24, r24
    6e9e:	99 1f       	adc	r25, r25
    6ea0:	1a f0       	brmi	.+6      	; 0x6ea8 <__fixunssfsi+0x22>
    6ea2:	ba 95       	dec	r27
    6ea4:	c9 f7       	brne	.-14     	; 0x6e98 <__fixunssfsi+0x12>
    6ea6:	12 c0       	rjmp	.+36     	; 0x6ecc <__fixunssfsi+0x46>
    6ea8:	b1 30       	cpi	r27, 0x01	; 1
    6eaa:	81 f0       	breq	.+32     	; 0x6ecc <__fixunssfsi+0x46>
    6eac:	c3 d0       	rcall	.+390    	; 0x7034 <__fp_zero>
    6eae:	b1 e0       	ldi	r27, 0x01	; 1
    6eb0:	08 95       	ret
    6eb2:	c0 c0       	rjmp	.+384    	; 0x7034 <__fp_zero>
    6eb4:	67 2f       	mov	r22, r23
    6eb6:	78 2f       	mov	r23, r24
    6eb8:	88 27       	eor	r24, r24
    6eba:	b8 5f       	subi	r27, 0xF8	; 248
    6ebc:	39 f0       	breq	.+14     	; 0x6ecc <__fixunssfsi+0x46>
    6ebe:	b9 3f       	cpi	r27, 0xF9	; 249
    6ec0:	cc f3       	brlt	.-14     	; 0x6eb4 <__fixunssfsi+0x2e>
    6ec2:	86 95       	lsr	r24
    6ec4:	77 95       	ror	r23
    6ec6:	67 95       	ror	r22
    6ec8:	b3 95       	inc	r27
    6eca:	d9 f7       	brne	.-10     	; 0x6ec2 <__fixunssfsi+0x3c>
    6ecc:	3e f4       	brtc	.+14     	; 0x6edc <__fixunssfsi+0x56>
    6ece:	90 95       	com	r25
    6ed0:	80 95       	com	r24
    6ed2:	70 95       	com	r23
    6ed4:	61 95       	neg	r22
    6ed6:	7f 4f       	sbci	r23, 0xFF	; 255
    6ed8:	8f 4f       	sbci	r24, 0xFF	; 255
    6eda:	9f 4f       	sbci	r25, 0xFF	; 255
    6edc:	08 95       	ret

00006ede <__floatunsisf>:
__floatunsisf():
    6ede:	e8 94       	clt
    6ee0:	09 c0       	rjmp	.+18     	; 0x6ef4 <__floatsisf+0x12>

00006ee2 <__floatsisf>:
    6ee2:	97 fb       	bst	r25, 7
    6ee4:	3e f4       	brtc	.+14     	; 0x6ef4 <__floatsisf+0x12>
    6ee6:	90 95       	com	r25
    6ee8:	80 95       	com	r24
    6eea:	70 95       	com	r23
    6eec:	61 95       	neg	r22
    6eee:	7f 4f       	sbci	r23, 0xFF	; 255
    6ef0:	8f 4f       	sbci	r24, 0xFF	; 255
    6ef2:	9f 4f       	sbci	r25, 0xFF	; 255
    6ef4:	99 23       	and	r25, r25
    6ef6:	a9 f0       	breq	.+42     	; 0x6f22 <__floatsisf+0x40>
    6ef8:	f9 2f       	mov	r31, r25
    6efa:	96 e9       	ldi	r25, 0x96	; 150
    6efc:	bb 27       	eor	r27, r27
    6efe:	93 95       	inc	r25
    6f00:	f6 95       	lsr	r31
    6f02:	87 95       	ror	r24
    6f04:	77 95       	ror	r23
    6f06:	67 95       	ror	r22
    6f08:	b7 95       	ror	r27
    6f0a:	f1 11       	cpse	r31, r1
    6f0c:	f8 cf       	rjmp	.-16     	; 0x6efe <__floatsisf+0x1c>
    6f0e:	fa f4       	brpl	.+62     	; 0x6f4e <__floatsisf+0x6c>
    6f10:	bb 0f       	add	r27, r27
    6f12:	11 f4       	brne	.+4      	; 0x6f18 <__floatsisf+0x36>
    6f14:	60 ff       	sbrs	r22, 0
    6f16:	1b c0       	rjmp	.+54     	; 0x6f4e <__floatsisf+0x6c>
    6f18:	6f 5f       	subi	r22, 0xFF	; 255
    6f1a:	7f 4f       	sbci	r23, 0xFF	; 255
    6f1c:	8f 4f       	sbci	r24, 0xFF	; 255
    6f1e:	9f 4f       	sbci	r25, 0xFF	; 255
    6f20:	16 c0       	rjmp	.+44     	; 0x6f4e <__floatsisf+0x6c>
    6f22:	88 23       	and	r24, r24
    6f24:	11 f0       	breq	.+4      	; 0x6f2a <__floatsisf+0x48>
    6f26:	96 e9       	ldi	r25, 0x96	; 150
    6f28:	11 c0       	rjmp	.+34     	; 0x6f4c <__floatsisf+0x6a>
    6f2a:	77 23       	and	r23, r23
    6f2c:	21 f0       	breq	.+8      	; 0x6f36 <__floatsisf+0x54>
    6f2e:	9e e8       	ldi	r25, 0x8E	; 142
    6f30:	87 2f       	mov	r24, r23
    6f32:	76 2f       	mov	r23, r22
    6f34:	05 c0       	rjmp	.+10     	; 0x6f40 <__floatsisf+0x5e>
    6f36:	66 23       	and	r22, r22
    6f38:	71 f0       	breq	.+28     	; 0x6f56 <__floatsisf+0x74>
    6f3a:	96 e8       	ldi	r25, 0x86	; 134
    6f3c:	86 2f       	mov	r24, r22
    6f3e:	70 e0       	ldi	r23, 0x00	; 0
    6f40:	60 e0       	ldi	r22, 0x00	; 0
    6f42:	2a f0       	brmi	.+10     	; 0x6f4e <__floatsisf+0x6c>
    6f44:	9a 95       	dec	r25
    6f46:	66 0f       	add	r22, r22
    6f48:	77 1f       	adc	r23, r23
    6f4a:	88 1f       	adc	r24, r24
    6f4c:	da f7       	brpl	.-10     	; 0x6f44 <__floatsisf+0x62>
    6f4e:	88 0f       	add	r24, r24
    6f50:	96 95       	lsr	r25
    6f52:	87 95       	ror	r24
    6f54:	97 f9       	bld	r25, 7
    6f56:	08 95       	ret

00006f58 <__fp_cmp>:
__fp_cmp():
    6f58:	99 0f       	add	r25, r25
    6f5a:	00 08       	sbc	r0, r0
    6f5c:	55 0f       	add	r21, r21
    6f5e:	aa 0b       	sbc	r26, r26
    6f60:	e0 e8       	ldi	r30, 0x80	; 128
    6f62:	fe ef       	ldi	r31, 0xFE	; 254
    6f64:	16 16       	cp	r1, r22
    6f66:	17 06       	cpc	r1, r23
    6f68:	e8 07       	cpc	r30, r24
    6f6a:	f9 07       	cpc	r31, r25
    6f6c:	c0 f0       	brcs	.+48     	; 0x6f9e <__fp_cmp+0x46>
    6f6e:	12 16       	cp	r1, r18
    6f70:	13 06       	cpc	r1, r19
    6f72:	e4 07       	cpc	r30, r20
    6f74:	f5 07       	cpc	r31, r21
    6f76:	98 f0       	brcs	.+38     	; 0x6f9e <__fp_cmp+0x46>
    6f78:	62 1b       	sub	r22, r18
    6f7a:	73 0b       	sbc	r23, r19
    6f7c:	84 0b       	sbc	r24, r20
    6f7e:	95 0b       	sbc	r25, r21
    6f80:	39 f4       	brne	.+14     	; 0x6f90 <__fp_cmp+0x38>
    6f82:	0a 26       	eor	r0, r26
    6f84:	61 f0       	breq	.+24     	; 0x6f9e <__fp_cmp+0x46>
    6f86:	23 2b       	or	r18, r19
    6f88:	24 2b       	or	r18, r20
    6f8a:	25 2b       	or	r18, r21
    6f8c:	21 f4       	brne	.+8      	; 0x6f96 <__fp_cmp+0x3e>
    6f8e:	08 95       	ret
    6f90:	0a 26       	eor	r0, r26
    6f92:	09 f4       	brne	.+2      	; 0x6f96 <__fp_cmp+0x3e>
    6f94:	a1 40       	sbci	r26, 0x01	; 1
    6f96:	a6 95       	lsr	r26
    6f98:	8f ef       	ldi	r24, 0xFF	; 255
    6f9a:	81 1d       	adc	r24, r1
    6f9c:	81 1d       	adc	r24, r1
    6f9e:	08 95       	ret

00006fa0 <__fp_inf>:
__fp_inf():
    6fa0:	97 f9       	bld	r25, 7
    6fa2:	9f 67       	ori	r25, 0x7F	; 127
    6fa4:	80 e8       	ldi	r24, 0x80	; 128
    6fa6:	70 e0       	ldi	r23, 0x00	; 0
    6fa8:	60 e0       	ldi	r22, 0x00	; 0
    6faa:	08 95       	ret

00006fac <__fp_nan>:
__fp_nan():
    6fac:	9f ef       	ldi	r25, 0xFF	; 255
    6fae:	80 ec       	ldi	r24, 0xC0	; 192
    6fb0:	08 95       	ret

00006fb2 <__fp_pscA>:
__fp_pscA():
    6fb2:	00 24       	eor	r0, r0
    6fb4:	0a 94       	dec	r0
    6fb6:	16 16       	cp	r1, r22
    6fb8:	17 06       	cpc	r1, r23
    6fba:	18 06       	cpc	r1, r24
    6fbc:	09 06       	cpc	r0, r25
    6fbe:	08 95       	ret

00006fc0 <__fp_pscB>:
__fp_pscB():
    6fc0:	00 24       	eor	r0, r0
    6fc2:	0a 94       	dec	r0
    6fc4:	12 16       	cp	r1, r18
    6fc6:	13 06       	cpc	r1, r19
    6fc8:	14 06       	cpc	r1, r20
    6fca:	05 06       	cpc	r0, r21
    6fcc:	08 95       	ret

00006fce <__fp_round>:
__fp_round():
    6fce:	09 2e       	mov	r0, r25
    6fd0:	03 94       	inc	r0
    6fd2:	00 0c       	add	r0, r0
    6fd4:	11 f4       	brne	.+4      	; 0x6fda <__fp_round+0xc>
    6fd6:	88 23       	and	r24, r24
    6fd8:	52 f0       	brmi	.+20     	; 0x6fee <__fp_round+0x20>
    6fda:	bb 0f       	add	r27, r27
    6fdc:	40 f4       	brcc	.+16     	; 0x6fee <__fp_round+0x20>
    6fde:	bf 2b       	or	r27, r31
    6fe0:	11 f4       	brne	.+4      	; 0x6fe6 <__fp_round+0x18>
    6fe2:	60 ff       	sbrs	r22, 0
    6fe4:	04 c0       	rjmp	.+8      	; 0x6fee <__fp_round+0x20>
    6fe6:	6f 5f       	subi	r22, 0xFF	; 255
    6fe8:	7f 4f       	sbci	r23, 0xFF	; 255
    6fea:	8f 4f       	sbci	r24, 0xFF	; 255
    6fec:	9f 4f       	sbci	r25, 0xFF	; 255
    6fee:	08 95       	ret

00006ff0 <__fp_split3>:
__fp_split3():
    6ff0:	57 fd       	sbrc	r21, 7
    6ff2:	90 58       	subi	r25, 0x80	; 128
    6ff4:	44 0f       	add	r20, r20
    6ff6:	55 1f       	adc	r21, r21
    6ff8:	59 f0       	breq	.+22     	; 0x7010 <__fp_splitA+0x10>
    6ffa:	5f 3f       	cpi	r21, 0xFF	; 255
    6ffc:	71 f0       	breq	.+28     	; 0x701a <__fp_splitA+0x1a>
    6ffe:	47 95       	ror	r20

00007000 <__fp_splitA>:
    7000:	88 0f       	add	r24, r24
    7002:	97 fb       	bst	r25, 7
    7004:	99 1f       	adc	r25, r25
    7006:	61 f0       	breq	.+24     	; 0x7020 <__fp_splitA+0x20>
    7008:	9f 3f       	cpi	r25, 0xFF	; 255
    700a:	79 f0       	breq	.+30     	; 0x702a <__fp_splitA+0x2a>
    700c:	87 95       	ror	r24
    700e:	08 95       	ret
    7010:	12 16       	cp	r1, r18
    7012:	13 06       	cpc	r1, r19
    7014:	14 06       	cpc	r1, r20
    7016:	55 1f       	adc	r21, r21
    7018:	f2 cf       	rjmp	.-28     	; 0x6ffe <__fp_split3+0xe>
    701a:	46 95       	lsr	r20
    701c:	f1 df       	rcall	.-30     	; 0x7000 <__fp_splitA>
    701e:	08 c0       	rjmp	.+16     	; 0x7030 <__fp_splitA+0x30>
    7020:	16 16       	cp	r1, r22
    7022:	17 06       	cpc	r1, r23
    7024:	18 06       	cpc	r1, r24
    7026:	99 1f       	adc	r25, r25
    7028:	f1 cf       	rjmp	.-30     	; 0x700c <__fp_splitA+0xc>
    702a:	86 95       	lsr	r24
    702c:	71 05       	cpc	r23, r1
    702e:	61 05       	cpc	r22, r1
    7030:	08 94       	sec
    7032:	08 95       	ret

00007034 <__fp_zero>:
__fp_zero():
    7034:	e8 94       	clt

00007036 <__fp_szero>:
    7036:	bb 27       	eor	r27, r27
    7038:	66 27       	eor	r22, r22
    703a:	77 27       	eor	r23, r23
    703c:	cb 01       	movw	r24, r22
    703e:	97 f9       	bld	r25, 7
    7040:	08 95       	ret

00007042 <__gesf2>:
__gesf2():
    7042:	8a df       	rcall	.-236    	; 0x6f58 <__fp_cmp>
    7044:	08 f4       	brcc	.+2      	; 0x7048 <__gesf2+0x6>
    7046:	8f ef       	ldi	r24, 0xFF	; 255
    7048:	08 95       	ret

0000704a <__mulsf3>:
__mulsf3():
    704a:	0b d0       	rcall	.+22     	; 0x7062 <__mulsf3x>
    704c:	c0 cf       	rjmp	.-128    	; 0x6fce <__fp_round>
    704e:	b1 df       	rcall	.-158    	; 0x6fb2 <__fp_pscA>
    7050:	28 f0       	brcs	.+10     	; 0x705c <__mulsf3+0x12>
    7052:	b6 df       	rcall	.-148    	; 0x6fc0 <__fp_pscB>
    7054:	18 f0       	brcs	.+6      	; 0x705c <__mulsf3+0x12>
    7056:	95 23       	and	r25, r21
    7058:	09 f0       	breq	.+2      	; 0x705c <__mulsf3+0x12>
    705a:	a2 cf       	rjmp	.-188    	; 0x6fa0 <__fp_inf>
    705c:	a7 cf       	rjmp	.-178    	; 0x6fac <__fp_nan>
    705e:	11 24       	eor	r1, r1
    7060:	ea cf       	rjmp	.-44     	; 0x7036 <__fp_szero>

00007062 <__mulsf3x>:
__mulsf3x():
    7062:	c6 df       	rcall	.-116    	; 0x6ff0 <__fp_split3>
    7064:	a0 f3       	brcs	.-24     	; 0x704e <__mulsf3+0x4>

00007066 <__mulsf3_pse>:
    7066:	95 9f       	mul	r25, r21
    7068:	d1 f3       	breq	.-12     	; 0x705e <__mulsf3+0x14>
    706a:	95 0f       	add	r25, r21
    706c:	50 e0       	ldi	r21, 0x00	; 0
    706e:	55 1f       	adc	r21, r21
    7070:	62 9f       	mul	r22, r18
    7072:	f0 01       	movw	r30, r0
    7074:	72 9f       	mul	r23, r18
    7076:	bb 27       	eor	r27, r27
    7078:	f0 0d       	add	r31, r0
    707a:	b1 1d       	adc	r27, r1
    707c:	63 9f       	mul	r22, r19
    707e:	aa 27       	eor	r26, r26
    7080:	f0 0d       	add	r31, r0
    7082:	b1 1d       	adc	r27, r1
    7084:	aa 1f       	adc	r26, r26
    7086:	64 9f       	mul	r22, r20
    7088:	66 27       	eor	r22, r22
    708a:	b0 0d       	add	r27, r0
    708c:	a1 1d       	adc	r26, r1
    708e:	66 1f       	adc	r22, r22
    7090:	82 9f       	mul	r24, r18
    7092:	22 27       	eor	r18, r18
    7094:	b0 0d       	add	r27, r0
    7096:	a1 1d       	adc	r26, r1
    7098:	62 1f       	adc	r22, r18
    709a:	73 9f       	mul	r23, r19
    709c:	b0 0d       	add	r27, r0
    709e:	a1 1d       	adc	r26, r1
    70a0:	62 1f       	adc	r22, r18
    70a2:	83 9f       	mul	r24, r19
    70a4:	a0 0d       	add	r26, r0
    70a6:	61 1d       	adc	r22, r1
    70a8:	22 1f       	adc	r18, r18
    70aa:	74 9f       	mul	r23, r20
    70ac:	33 27       	eor	r19, r19
    70ae:	a0 0d       	add	r26, r0
    70b0:	61 1d       	adc	r22, r1
    70b2:	23 1f       	adc	r18, r19
    70b4:	84 9f       	mul	r24, r20
    70b6:	60 0d       	add	r22, r0
    70b8:	21 1d       	adc	r18, r1
    70ba:	82 2f       	mov	r24, r18
    70bc:	76 2f       	mov	r23, r22
    70be:	6a 2f       	mov	r22, r26
    70c0:	11 24       	eor	r1, r1
    70c2:	9f 57       	subi	r25, 0x7F	; 127
    70c4:	50 40       	sbci	r21, 0x00	; 0
    70c6:	8a f0       	brmi	.+34     	; 0x70ea <__mulsf3_pse+0x84>
    70c8:	e1 f0       	breq	.+56     	; 0x7102 <__mulsf3_pse+0x9c>
    70ca:	88 23       	and	r24, r24
    70cc:	4a f0       	brmi	.+18     	; 0x70e0 <__mulsf3_pse+0x7a>
    70ce:	ee 0f       	add	r30, r30
    70d0:	ff 1f       	adc	r31, r31
    70d2:	bb 1f       	adc	r27, r27
    70d4:	66 1f       	adc	r22, r22
    70d6:	77 1f       	adc	r23, r23
    70d8:	88 1f       	adc	r24, r24
    70da:	91 50       	subi	r25, 0x01	; 1
    70dc:	50 40       	sbci	r21, 0x00	; 0
    70de:	a9 f7       	brne	.-22     	; 0x70ca <__mulsf3_pse+0x64>
    70e0:	9e 3f       	cpi	r25, 0xFE	; 254
    70e2:	51 05       	cpc	r21, r1
    70e4:	70 f0       	brcs	.+28     	; 0x7102 <__mulsf3_pse+0x9c>
    70e6:	5c cf       	rjmp	.-328    	; 0x6fa0 <__fp_inf>
    70e8:	a6 cf       	rjmp	.-180    	; 0x7036 <__fp_szero>
    70ea:	5f 3f       	cpi	r21, 0xFF	; 255
    70ec:	ec f3       	brlt	.-6      	; 0x70e8 <__mulsf3_pse+0x82>
    70ee:	98 3e       	cpi	r25, 0xE8	; 232
    70f0:	dc f3       	brlt	.-10     	; 0x70e8 <__mulsf3_pse+0x82>
    70f2:	86 95       	lsr	r24
    70f4:	77 95       	ror	r23
    70f6:	67 95       	ror	r22
    70f8:	b7 95       	ror	r27
    70fa:	f7 95       	ror	r31
    70fc:	e7 95       	ror	r30
    70fe:	9f 5f       	subi	r25, 0xFF	; 255
    7100:	c1 f7       	brne	.-16     	; 0x70f2 <__mulsf3_pse+0x8c>
    7102:	fe 2b       	or	r31, r30
    7104:	88 0f       	add	r24, r24
    7106:	91 1d       	adc	r25, r1
    7108:	96 95       	lsr	r25
    710a:	87 95       	ror	r24
    710c:	97 f9       	bld	r25, 7
    710e:	08 95       	ret

00007110 <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    7110:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    7112:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    7114:	16 f4       	brtc	.+4      	; 0x711a <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    7116:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    7118:	06 d0       	rcall	.+12     	; 0x7126 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    711a:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    711c:	08 d0       	rcall	.+16     	; 0x712e <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    711e:	65 d0       	rcall	.+202    	; 0x71ea <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    7120:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    7122:	05 d0       	rcall	.+10     	; 0x712e <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    7124:	3e f4       	brtc	.+14     	; 0x7134 <__divmodhi4_exit>

00007126 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    7126:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    7128:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    712a:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    712c:	08 95       	ret

0000712e <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    712e:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    7130:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    7132:	7f 4f       	sbci	r23, 0xFF	; 255

00007134 <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    7134:	08 95       	ret

00007136 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    7136:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    7138:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    713a:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    713c:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    713e:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    7140:	0d c0       	rjmp	.+26     	; 0x715c <__udivmodsi4_ep>

00007142 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    7142:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    7144:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    7146:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    7148:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    714a:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    714c:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    714e:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    7150:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    7152:	20 f0       	brcs	.+8      	; 0x715c <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    7154:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    7156:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    7158:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    715a:	f5 0b       	sbc	r31, r21

0000715c <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    715c:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    715e:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    7160:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    7162:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    7164:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    7166:	69 f7       	brne	.-38     	; 0x7142 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    7168:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    716a:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    716c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    716e:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    7170:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    7172:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    7174:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    7176:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    7178:	08 95       	ret

0000717a <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    717a:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    717c:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    717e:	16 f4       	brtc	.+4      	; 0x7184 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    7180:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    7182:	0f d0       	rcall	.+30     	; 0x71a2 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    7184:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    7186:	05 d0       	rcall	.+10     	; 0x7192 <__divmodsi4_neg2>
    7188:	d6 df       	rcall	.-84     	; 0x7136 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    718a:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    718c:	02 d0       	rcall	.+4      	; 0x7192 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    718e:	46 f4       	brtc	.+16     	; 0x71a0 <__divmodsi4_exit>
    7190:	08 c0       	rjmp	.+16     	; 0x71a2 <__negsi2>

00007192 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    7192:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    7194:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    7196:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    7198:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    719a:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    719c:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    719e:	5f 4f       	sbci	r21, 0xFF	; 255

000071a0 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    71a0:	08 95       	ret

000071a2 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    71a2:	90 95       	com	r25
    71a4:	80 95       	com	r24
    71a6:	70 95       	com	r23
    71a8:	61 95       	neg	r22
    71aa:	7f 4f       	sbci	r23, 0xFF	; 255
    71ac:	8f 4f       	sbci	r24, 0xFF	; 255
    71ae:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    71b0:	08 95       	ret

000071b2 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    71b2:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    71b4:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    71b6:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    71b8:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    71ba:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    71bc:	09 94       	ijmp

000071be <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    71be:	29 d0       	rcall	.+82     	; 0x7212 <__umulhisi3>

000071c0 <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    71c0:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    71c2:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    71c4:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    71c6:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    71c8:	08 95       	ret

000071ca <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    71ca:	23 d0       	rcall	.+70     	; 0x7212 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    71cc:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    71ce:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    71d0:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    71d2:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    71d4:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    71d6:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    71d8:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    71da:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    71dc:	08 95       	ret

000071de <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    71de:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    71e0:	f4 cf       	rjmp	.-24     	; 0x71ca <__muluhisi3>

000071e2 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    71e2:	f3 df       	rcall	.-26     	; 0x71ca <__muluhisi3>
    71e4:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    71e6:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    71e8:	08 95       	ret

000071ea <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    71ea:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    71ec:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    71ee:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    71f0:	07 c0       	rjmp	.+14     	; 0x7200 <__udivmodhi4_ep>

000071f2 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    71f2:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    71f4:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    71f6:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    71f8:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    71fa:	10 f0       	brcs	.+4      	; 0x7200 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    71fc:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    71fe:	b7 0b       	sbc	r27, r23

00007200 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    7200:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    7202:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    7204:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    7206:	a9 f7       	brne	.-22     	; 0x71f2 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    7208:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    720a:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    720c:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    720e:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    7210:	08 95       	ret

00007212 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    7212:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    7214:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    7216:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    7218:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    721a:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    721c:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    721e:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    7220:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    7222:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    7224:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    7226:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    7228:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    722a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    722c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    722e:	08 95       	ret

00007230 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    7230:	f8 94       	cli

00007232 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    7232:	ff cf       	rjmp	.-2      	; 0x7232 <__stop_program>

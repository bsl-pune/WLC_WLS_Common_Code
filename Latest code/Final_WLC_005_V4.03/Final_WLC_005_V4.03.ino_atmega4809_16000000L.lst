
C:\Users\SIDDHE~1.HAD\AppData\Local\Temp\arduino_build_978252/Final_WLC_005_V4.03.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000200 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
     200:	50 c0       	rjmp	.+160    	; 0x2a2 <__ctors_end>
     202:	00 00       	nop
../../../../crt1/gcrt1.S:67
     204:	76 c0       	rjmp	.+236    	; 0x2f2 <__bad_interrupt>
     206:	00 00       	nop
../../../../crt1/gcrt1.S:68
     208:	74 c0       	rjmp	.+232    	; 0x2f2 <__bad_interrupt>
     20a:	00 00       	nop
../../../../crt1/gcrt1.S:69
     20c:	72 c0       	rjmp	.+228    	; 0x2f2 <__bad_interrupt>
     20e:	00 00       	nop
../../../../crt1/gcrt1.S:70
     210:	70 c0       	rjmp	.+224    	; 0x2f2 <__bad_interrupt>
     212:	00 00       	nop
../../../../crt1/gcrt1.S:71
     214:	6e c0       	rjmp	.+220    	; 0x2f2 <__bad_interrupt>
     216:	00 00       	nop
../../../../crt1/gcrt1.S:72
     218:	6c c0       	rjmp	.+216    	; 0x2f2 <__bad_interrupt>
     21a:	00 00       	nop
../../../../crt1/gcrt1.S:73
     21c:	0c 94 82 26 	jmp	0x4d04	; 0x4d04 <__vector_7>
../../../../crt1/gcrt1.S:74
     220:	68 c0       	rjmp	.+208    	; 0x2f2 <__bad_interrupt>
     222:	00 00       	nop
../../../../crt1/gcrt1.S:75
     224:	66 c0       	rjmp	.+204    	; 0x2f2 <__bad_interrupt>
     226:	00 00       	nop
../../../../crt1/gcrt1.S:76
     228:	64 c0       	rjmp	.+200    	; 0x2f2 <__bad_interrupt>
     22a:	00 00       	nop
../../../../crt1/gcrt1.S:77
     22c:	62 c0       	rjmp	.+196    	; 0x2f2 <__bad_interrupt>
     22e:	00 00       	nop
../../../../crt1/gcrt1.S:78
     230:	60 c0       	rjmp	.+192    	; 0x2f2 <__bad_interrupt>
     232:	00 00       	nop
../../../../crt1/gcrt1.S:79
     234:	5e c0       	rjmp	.+188    	; 0x2f2 <__bad_interrupt>
     236:	00 00       	nop
../../../../crt1/gcrt1.S:80
     238:	5c c0       	rjmp	.+184    	; 0x2f2 <__bad_interrupt>
     23a:	00 00       	nop
../../../../crt1/gcrt1.S:81
     23c:	5a c0       	rjmp	.+180    	; 0x2f2 <__bad_interrupt>
     23e:	00 00       	nop
../../../../crt1/gcrt1.S:82
     240:	58 c0       	rjmp	.+176    	; 0x2f2 <__bad_interrupt>
     242:	00 00       	nop
../../../../crt1/gcrt1.S:83
     244:	56 c0       	rjmp	.+172    	; 0x2f2 <__bad_interrupt>
     246:	00 00       	nop
../../../../crt1/gcrt1.S:84
     248:	54 c0       	rjmp	.+168    	; 0x2f2 <__bad_interrupt>
     24a:	00 00       	nop
../../../../crt1/gcrt1.S:85
     24c:	52 c0       	rjmp	.+164    	; 0x2f2 <__bad_interrupt>
     24e:	00 00       	nop
../../../../crt1/gcrt1.S:86
     250:	50 c0       	rjmp	.+160    	; 0x2f2 <__bad_interrupt>
     252:	00 00       	nop
../../../../crt1/gcrt1.S:87
     254:	4e c0       	rjmp	.+156    	; 0x2f2 <__bad_interrupt>
     256:	00 00       	nop
../../../../crt1/gcrt1.S:88
     258:	4c c0       	rjmp	.+152    	; 0x2f2 <__bad_interrupt>
     25a:	00 00       	nop
../../../../crt1/gcrt1.S:89
     25c:	4a c0       	rjmp	.+148    	; 0x2f2 <__bad_interrupt>
     25e:	00 00       	nop
../../../../crt1/gcrt1.S:90
     260:	48 c0       	rjmp	.+144    	; 0x2f2 <__bad_interrupt>
     262:	00 00       	nop
../../../../crt1/gcrt1.S:91
     264:	0c 94 5a 26 	jmp	0x4cb4	; 0x4cb4 <__vector_25>
../../../../crt1/gcrt1.S:92
     268:	44 c0       	rjmp	.+136    	; 0x2f2 <__bad_interrupt>
     26a:	00 00       	nop
../../../../crt1/gcrt1.S:93
     26c:	42 c0       	rjmp	.+132    	; 0x2f2 <__bad_interrupt>
     26e:	00 00       	nop
../../../../crt1/gcrt1.S:94
     270:	40 c0       	rjmp	.+128    	; 0x2f2 <__bad_interrupt>
     272:	00 00       	nop
../../../../crt1/gcrt1.S:95
     274:	3e c0       	rjmp	.+124    	; 0x2f2 <__bad_interrupt>
     276:	00 00       	nop
../../../../crt1/gcrt1.S:96
     278:	3c c0       	rjmp	.+120    	; 0x2f2 <__bad_interrupt>
     27a:	00 00       	nop
../../../../crt1/gcrt1.S:97
     27c:	0c 94 2c 26 	jmp	0x4c58	; 0x4c58 <__vector_31>
../../../../crt1/gcrt1.S:98
     280:	0c 94 06 26 	jmp	0x4c0c	; 0x4c0c <__vector_32>
../../../../crt1/gcrt1.S:99
     284:	36 c0       	rjmp	.+108    	; 0x2f2 <__bad_interrupt>
     286:	00 00       	nop
../../../../crt1/gcrt1.S:100
     288:	34 c0       	rjmp	.+104    	; 0x2f2 <__bad_interrupt>
     28a:	00 00       	nop
../../../../crt1/gcrt1.S:101
     28c:	32 c0       	rjmp	.+100    	; 0x2f2 <__bad_interrupt>
     28e:	00 00       	nop
../../../../crt1/gcrt1.S:102
     290:	30 c0       	rjmp	.+96     	; 0x2f2 <__bad_interrupt>
     292:	00 00       	nop
../../../../crt1/gcrt1.S:103
     294:	2e c0       	rjmp	.+92     	; 0x2f2 <__bad_interrupt>
     296:	00 00       	nop
../../../../crt1/gcrt1.S:104
     298:	2c c0       	rjmp	.+88     	; 0x2f2 <__bad_interrupt>
     29a:	00 00       	nop
../../../../crt1/gcrt1.S:105
     29c:	2a c0       	rjmp	.+84     	; 0x2f2 <__bad_interrupt>
	...

000002a0 <__ctors_start>:
__trampolines_start():
     2a0:	17 27       	eor	r17, r23

000002a2 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     2a2:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     2a4:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     2a6:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     2a8:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     2aa:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
     2ac:	de bf       	out	0x3e, r29	; 62

000002ae <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
     2ae:	18 e2       	ldi	r17, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
     2b0:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
     2b2:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
     2b4:	e9 e1       	ldi	r30, 0x19	; 25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
     2b6:	fa e7       	ldi	r31, 0x7A	; 122
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
     2ba:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
     2bc:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
     2be:	a8 31       	cpi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
     2c0:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
     2c2:	d9 f7       	brne	.-10     	; 0x2ba <__do_copy_data+0xc>

000002c4 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
     2c4:	2b e2       	ldi	r18, 0x2B	; 43
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
     2c6:	a8 e1       	ldi	r26, 0x18	; 24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
     2c8:	b8 e2       	ldi	r27, 0x28	; 40
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
     2ca:	01 c0       	rjmp	.+2      	; 0x2ce <.do_clear_bss_start>

000002cc <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
     2cc:	1d 92       	st	X+, r1

000002ce <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
     2ce:	aa 3f       	cpi	r26, 0xFA	; 250
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
     2d0:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
     2d2:	e1 f7       	brne	.-8      	; 0x2cc <.do_clear_bss_loop>

000002d4 <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
     2d4:	11 e0       	ldi	r17, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
     2d6:	c1 e5       	ldi	r28, 0x51	; 81
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
     2d8:	d1 e0       	ldi	r29, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
     2da:	04 c0       	rjmp	.+8      	; 0x2e4 <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
     2dc:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
     2de:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
     2e0:	0e 94 06 3c 	call	0x780c	; 0x780c <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
     2e4:	c0 35       	cpi	r28, 0x50	; 80
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
     2e6:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
     2e8:	c9 f7       	brne	.-14     	; 0x2dc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     2ea:	0e 94 9c 2a 	call	0x5538	; 0x5538 <main>
../../../../crt1/gcrt1.S:315
     2ee:	0c 94 45 3c 	jmp	0x788a	; 0x788a <_exit>

000002f2 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     2f2:	86 cf       	rjmp	.-244    	; 0x200 <__vectors>

000002f4 <VerDisp()>:
VerDisp():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:115
  toggle_ticker.update();
}

void VerDisp()
{
  StopVersionDisplay=0;                      //-----------------------To stop version display  
     2f4:	10 92 06 28 	sts	0x2806, r1	; 0x802806 <StopVersionDisplay>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:116
}
     2f8:	08 95       	ret

000002fa <toggle_fun()>:
toggle_fun():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:37

void toggle_fun();
Ticker toggle_ticker(toggle_fun, 1000, 0, MILLIS);      //Time_speed_show_toggle
void toggle_fun()
{    
   toggle == 0 ? toggle = 1 : toggle = 0;   
     2fa:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <toggle>
     2fe:	81 11       	cpse	r24, r1
     300:	04 c0       	rjmp	.+8      	; 0x30a <toggle_fun()+0x10>
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	80 93 41 28 	sts	0x2841, r24	; 0x802841 <toggle>
     308:	08 95       	ret
     30a:	10 92 41 28 	sts	0x2841, r1	; 0x802841 <toggle>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:38
}
     30e:	08 95       	ret

00000310 <Alternate_Display()>:
Alternate_Display():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Procss.cpp:71
bool select_heating_type=0;
bool checkTempRaised=0; 

void Alternate_Display()                    //------------------to show set and current temoerature alternatively on display
{
  if(Alternate_Display_Flag) Alternate_Display_Flag=0;
     310:	80 91 73 28 	lds	r24, 0x2873	; 0x802873 <Alternate_Display_Flag>
     314:	88 23       	and	r24, r24
     316:	19 f0       	breq	.+6      	; 0x31e <Alternate_Display()+0xe>
     318:	10 92 73 28 	sts	0x2873, r1	; 0x802873 <Alternate_Display_Flag>
     31c:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Procss.cpp:72
  else                       Alternate_Display_Flag=1;
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	80 93 73 28 	sts	0x2873, r24	; 0x802873 <Alternate_Display_Flag>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Procss.cpp:73
}
     324:	08 95       	ret

00000326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>:
SET_CHANGE_UP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:62
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;  
}

void Bclass :: SET_CHANGE_UP()
{
  if(LONG_PRESS )
     326:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
     32a:	88 23       	and	r24, r24
     32c:	09 f4       	brne	.+2      	; 0x330 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xa>
     32e:	5e c0       	rjmp	.+188    	; 0x3ec <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xc6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:64
   {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)     SET_LONG_VALUE[Safe_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Safe_In_Fah] > 212) SET_LONG_VALUE[Safe_In_Fah] = 212;  
     330:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     334:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     338:	82 30       	cpi	r24, 0x02	; 2
     33a:	91 05       	cpc	r25, r1
     33c:	71 f4       	brne	.+28     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x34>
     33e:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     342:	22 23       	and	r18, r18
     344:	51 f0       	breq	.+20     	; 0x35a <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x34>
     346:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     34a:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     34e:	2f 5f       	subi	r18, 0xFF	; 255
     350:	3f 4f       	sbci	r19, 0xFF	; 255
     352:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     356:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
     35a:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     35e:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     362:	25 3d       	cpi	r18, 0xD5	; 213
     364:	31 05       	cpc	r19, r1
     366:	a4 f0       	brlt	.+40     	; 0x390 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x6a>
     368:	24 ed       	ldi	r18, 0xD4	; 212
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     370:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:65
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET) SET_LONG_VALUE[Cal1_In_Fah] += SPEED_SW[INC];   if(SET_LONG_VALUE[Cal1_In_Fah] > 212) SET_LONG_VALUE[Cal1_In_Fah] = 212;  
     374:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     378:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     37c:	25 3d       	cpi	r18, 0xD5	; 213
     37e:	31 05       	cpc	r19, r1
     380:	cc f0       	brlt	.+50     	; 0x3b4 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x8e>
     382:	84 ed       	ldi	r24, 0xD4	; 212
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	80 93 4b 29 	sts	0x294B, r24	; 0x80294b <SET_LONG_VALUE+0x2a>
     38a:	90 93 4c 29 	sts	0x294C, r25	; 0x80294c <SET_LONG_VALUE+0x2b>
     38e:	08 95       	ret
     390:	88 30       	cpi	r24, 0x08	; 8
     392:	91 05       	cpc	r25, r1
     394:	79 f7       	brne	.-34     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
     396:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     39a:	22 23       	and	r18, r18
     39c:	59 f3       	breq	.-42     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
     39e:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     3a2:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     3a6:	2f 5f       	subi	r18, 0xFF	; 255
     3a8:	3f 4f       	sbci	r19, 0xFF	; 255
     3aa:	20 93 4b 29 	sts	0x294B, r18	; 0x80294b <SET_LONG_VALUE+0x2a>
     3ae:	30 93 4c 29 	sts	0x294C, r19	; 0x80294c <SET_LONG_VALUE+0x2b>
     3b2:	e0 cf       	rjmp	.-64     	; 0x374 <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:68
      else
      {
         SET_LONG_VALUE[SELECTION_PARAMETER] += SPEED_SW[INC];
     3b4:	88 0f       	add	r24, r24
     3b6:	99 1f       	adc	r25, r25
     3b8:	fc 01       	movw	r30, r24
     3ba:	ef 5d       	subi	r30, 0xDF	; 223
     3bc:	f6 4d       	sbci	r31, 0xD6	; 214
     3be:	20 81       	ld	r18, Z
     3c0:	31 81       	ldd	r19, Z+1	; 0x01
     3c2:	2f 5f       	subi	r18, 0xFF	; 255
     3c4:	3f 4f       	sbci	r19, 0xFF	; 255
     3c6:	20 83       	st	Z, r18
     3c8:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:69
         if(SET_LONG_VALUE[SELECTION_PARAMETER] > MAX_SET_VALUE_LONG[SELECTION_PARAMETER])    SET_LONG_VALUE[SELECTION_PARAMETER]= Menu_Limit_Upper_Side[SELECTION_PARAMETER]; 
     3ca:	dc 01       	movw	r26, r24
     3cc:	a2 54       	subi	r26, 0x42	; 66
     3ce:	b6 44       	sbci	r27, 0x46	; 70
     3d0:	4d 91       	ld	r20, X+
     3d2:	5c 91       	ld	r21, X
     3d4:	42 17       	cp	r20, r18
     3d6:	53 07       	cpc	r21, r19
     3d8:	0c f0       	brlt	.+2      	; 0x3dc <Bclass::SET_CHANGE_UP() [clone .constprop.82]+0xb6>
     3da:	8e c0       	rjmp	.+284    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     3dc:	88 56       	subi	r24, 0x68	; 104
     3de:	96 44       	sbci	r25, 0x46	; 70
     3e0:	dc 01       	movw	r26, r24
     3e2:	8d 91       	ld	r24, X+
     3e4:	9c 91       	ld	r25, X
     3e6:	80 83       	st	Z, r24
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:74
      }
  }
  else
  {
               if( ENTER_BUT == 1 )   
     3ec:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
     3f0:	81 30       	cpi	r24, 0x01	; 1
     3f2:	b1 f4       	brne	.+44     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:76
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
     3f4:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
     3f8:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     402:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     406:	20 91 12 29 	lds	r18, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
     40a:	30 91 13 29 	lds	r19, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
     40e:	28 17       	cp	r18, r24
     410:	39 07       	cpc	r19, r25
     412:	0c f0       	brlt	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	71 c0       	rjmp	.+226    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     416:	10 92 16 29 	sts	0x2916, r1	; 0x802916 <SET_VALUE+0x2>
     41a:	10 92 17 29 	sts	0x2917, r1	; 0x802917 <SET_VALUE+0x3>
     41e:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:78
               }
                else if( ENTER_BUT == 2 )   
     420:	82 30       	cpi	r24, 0x02	; 2
     422:	39 f5       	brne	.+78     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:80
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     424:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     428:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	8a 30       	cpi	r24, 0x0A	; 10
     430:	91 05       	cpc	r25, r1
     432:	e4 f4       	brge	.+56     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     434:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     438:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:81
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
     43c:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     440:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     444:	01 96       	adiw	r24, 0x01	; 1
     446:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     44a:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     44e:	20 91 10 29 	lds	r18, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
     452:	30 91 11 29 	lds	r19, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
     456:	28 17       	cp	r18, r24
     458:	39 07       	cpc	r19, r25
     45a:	0c f0       	brlt	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     45c:	4d c0       	rjmp	.+154    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     45e:	80 e2       	ldi	r24, 0x20	; 32
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     466:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     46a:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:80
               {
                 SET_VALUE[ENTER_BUT] += SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > SAFE_VALUE_SET_DEG) SET_VALUE[ENTER_BUT] = 0; 
               }
                else if( ENTER_BUT == 2 )   
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > 9) SET_VALUE[ENTER_BUT] = 9; 
     46c:	89 e0       	ldi	r24, 0x09	; 9
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	e1 cf       	rjmp	.-62     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:83
                SET_VALUE[22] +=SPEED_SW[INC]; if(SET_VALUE[22] > SAFE_VALUE_SET_FAH) SET_VALUE[22] = 32; 
               }
               else if( ENTER_BUT == 3 )   
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	91 f4       	brne	.+36     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:85
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     476:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
     47a:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
     47e:	01 96       	adiw	r24, 0x01	; 1
     480:	84 36       	cpi	r24, 0x64	; 100
     482:	91 05       	cpc	r25, r1
     484:	2c f4       	brge	.+10     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     486:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
     48a:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
     48e:	08 95       	ret
     490:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_VALUE+0x6>
     494:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_VALUE+0x7>
     498:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:87
               }
               else if( ENTER_BUT == 4 )   
     49a:	84 30       	cpi	r24, 0x04	; 4
     49c:	91 f4       	brne	.+36     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:89
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     49e:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
     4a2:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
     4a6:	01 96       	adiw	r24, 0x01	; 1
     4a8:	8c 33       	cpi	r24, 0x3C	; 60
     4aa:	91 05       	cpc	r25, r1
     4ac:	2c f4       	brge	.+10     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     4ae:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
     4b2:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
     4b6:	08 95       	ret
     4b8:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_VALUE+0x8>
     4bc:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_VALUE+0x9>
     4c0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:91
               }  
               if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     4c2:	85 30       	cpi	r24, 0x05	; 5
     4c4:	c9 f4       	brne	.+50     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4c6:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
     4ca:	88 23       	and	r24, r24
     4cc:	a9 f0       	breq	.+42     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     4ce:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
     4d2:	88 23       	and	r24, r24
     4d4:	89 f0       	breq	.+34     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:93
               {
                SET_VALUE[ENTER_BUT] +=SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] > MAX_SET_VALUE[ENTER_BUT]) SET_VALUE[ENTER_BUT] = 0; 
     4d6:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
     4da:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
     4de:	01 96       	adiw	r24, 0x01	; 1
     4e0:	82 30       	cpi	r24, 0x02	; 2
     4e2:	91 05       	cpc	r25, r1
     4e4:	2c f4       	brge	.+10     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     4e6:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
     4ea:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
     4ee:	08 95       	ret
     4f0:	10 92 1e 29 	sts	0x291E, r1	; 0x80291e <SET_VALUE+0xa>
     4f4:	10 92 1f 29 	sts	0x291F, r1	; 0x80291f <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:96
               }
  }
}
     4f8:	08 95       	ret

000004fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>:
SET_CHANGE_DOWN():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:100

void Bclass :: SET_CHANGE_DOWN()
{
  if(LONG_PRESS )
     4fa:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
     4fe:	88 23       	and	r24, r24
     500:	09 f4       	brne	.+2      	; 0x504 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xa>
     502:	57 c0       	rjmp	.+174    	; 0x5b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:102
  {
      if(SELECTION_PARAMETER == Safe_Value  && DEGREE_VALUE_SET)      SET_LONG_VALUE[Safe_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Safe_In_Fah] < 32) SET_LONG_VALUE[Safe_In_Fah] = 32;   
     504:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
     508:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
     50c:	82 30       	cpi	r24, 0x02	; 2
     50e:	91 05       	cpc	r25, r1
     510:	71 f4       	brne	.+28     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x34>
     512:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     516:	22 23       	and	r18, r18
     518:	51 f0       	breq	.+20     	; 0x52e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x34>
     51a:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     51e:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     522:	21 50       	subi	r18, 0x01	; 1
     524:	31 09       	sbc	r19, r1
     526:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     52a:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
     52e:	20 91 49 29 	lds	r18, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
     532:	30 91 4a 29 	lds	r19, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
     536:	20 32       	cpi	r18, 0x20	; 32
     538:	31 05       	cpc	r19, r1
     53a:	a4 f4       	brge	.+40     	; 0x564 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x6a>
     53c:	20 e2       	ldi	r18, 0x20	; 32
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
     544:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:103
      else if(SELECTION_PARAMETER == Cal1_Point && DEGREE_VALUE_SET)  SET_LONG_VALUE[Cal1_In_Fah] -= SPEED_SW[INC];  if(SET_LONG_VALUE[Cal1_In_Fah] < 32) SET_LONG_VALUE[Cal1_In_Fah] = 32;   
     548:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     54c:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     550:	20 32       	cpi	r18, 0x20	; 32
     552:	31 05       	cpc	r19, r1
     554:	cc f4       	brge	.+50     	; 0x588 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x8e>
     556:	80 e2       	ldi	r24, 0x20	; 32
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	80 93 4b 29 	sts	0x294B, r24	; 0x80294b <SET_LONG_VALUE+0x2a>
     55e:	90 93 4c 29 	sts	0x294C, r25	; 0x80294c <SET_LONG_VALUE+0x2b>
     562:	08 95       	ret
     564:	88 30       	cpi	r24, 0x08	; 8
     566:	91 05       	cpc	r25, r1
     568:	79 f7       	brne	.-34     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
     56a:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     56e:	22 23       	and	r18, r18
     570:	59 f3       	breq	.-42     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
     572:	20 91 4b 29 	lds	r18, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
     576:	30 91 4c 29 	lds	r19, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
     57a:	21 50       	subi	r18, 0x01	; 1
     57c:	31 09       	sbc	r19, r1
     57e:	20 93 4b 29 	sts	0x294B, r18	; 0x80294b <SET_LONG_VALUE+0x2a>
     582:	30 93 4c 29 	sts	0x294C, r19	; 0x80294c <SET_LONG_VALUE+0x2b>
     586:	e0 cf       	rjmp	.-64     	; 0x548 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x4e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:106
      else
      {
        SET_LONG_VALUE[SELECTION_PARAMETER] -= SPEED_SW[INC]; 
     588:	88 0f       	add	r24, r24
     58a:	99 1f       	adc	r25, r25
     58c:	fc 01       	movw	r30, r24
     58e:	ef 5d       	subi	r30, 0xDF	; 223
     590:	f6 4d       	sbci	r31, 0xD6	; 214
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	21 50       	subi	r18, 0x01	; 1
     598:	31 09       	sbc	r19, r1
     59a:	20 83       	st	Z, r18
     59c:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:107
        if(SET_LONG_VALUE[SELECTION_PARAMETER] < 0)     SET_LONG_VALUE[SELECTION_PARAMETER] = Menu_Limit_Lower_Side[SELECTION_PARAMETER];
     59e:	37 ff       	sbrs	r19, 7
     5a0:	8c c0       	rjmp	.+280    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     5a2:	82 59       	subi	r24, 0x92	; 146
     5a4:	96 44       	sbci	r25, 0x46	; 70
     5a6:	dc 01       	movw	r26, r24
     5a8:	8d 91       	ld	r24, X+
     5aa:	9c 91       	ld	r25, X
     5ac:	80 83       	st	Z, r24
     5ae:	91 83       	std	Z+1, r25	; 0x01
     5b0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:112
      }
  }
  else
  {
    if( ENTER_BUT == 1 )   
     5b2:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	a1 f4       	brne	.+40     	; 0x5e2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0xe8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:114
    {
       SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = SAFE_VALUE_SET_DEG; 
     5ba:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
     5be:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
     5c2:	01 97       	sbiw	r24, 0x01	; 1
     5c4:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     5c8:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     5cc:	97 ff       	sbrs	r25, 7
     5ce:	75 c0       	rjmp	.+234    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     5d0:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
     5d4:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
     5d8:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
     5dc:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
     5e0:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:116
    }
    else if( ENTER_BUT == 2 )   
     5e2:	82 30       	cpi	r24, 0x02	; 2
     5e4:	99 f5       	brne	.+102    	; 0x64c <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x152>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:118
    {
      if(!DEGREE_VALUE_SET) SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 9; 
     5e6:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
     5ea:	81 11       	cpse	r24, r1
     5ec:	09 c0       	rjmp	.+18     	; 0x600 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x106>
     5ee:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     5f2:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     5f6:	01 97       	sbiw	r24, 0x01	; 1
     5f8:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     5fc:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
     600:	80 91 18 29 	lds	r24, 0x2918	; 0x802918 <SET_VALUE+0x4>
     604:	90 91 19 29 	lds	r25, 0x2919	; 0x802919 <SET_VALUE+0x5>
     608:	97 ff       	sbrs	r25, 7
     60a:	16 c0       	rjmp	.+44     	; 0x638 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x13e>
     60c:	89 e0       	ldi	r24, 0x09	; 9
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
     614:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:119
      else                  SET_VALUE[22] -= SPEED_SW[INC]; if(SET_VALUE[22] < 32) SET_VALUE[22] = SAFE_VALUE_SET_FAH; 
     618:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     61c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     620:	80 97       	sbiw	r24, 0x20	; 32
     622:	0c f0       	brlt	.+2      	; 0x626 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x12c>
     624:	4a c0       	rjmp	.+148    	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     626:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
     62a:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
     62e:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     632:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     636:	08 95       	ret
     638:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
     63c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
     646:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
     64a:	e6 cf       	rjmp	.-52     	; 0x618 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x11e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:121
    }
    else if( ENTER_BUT == 3 )   
     64c:	83 30       	cpi	r24, 0x03	; 3
     64e:	79 f4       	brne	.+30     	; 0x66e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x174>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:123
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 99; 
     650:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
     654:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	97 fd       	sbrc	r25, 7
     65c:	05 c0       	rjmp	.+10     	; 0x668 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x16e>
     65e:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
     662:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
     666:	08 95       	ret
     668:	83 e6       	ldi	r24, 0x63	; 99
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	f8 cf       	rjmp	.-16     	; 0x65e <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x164>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:125
    }
    else if( ENTER_BUT == 4 )   
     66e:	84 30       	cpi	r24, 0x04	; 4
     670:	79 f4       	brne	.+30     	; 0x690 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x196>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:127
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
     672:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
     676:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	97 fd       	sbrc	r25, 7
     67e:	05 c0       	rjmp	.+10     	; 0x68a <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x190>
     680:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
     684:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
     688:	08 95       	ret
     68a:	8b e3       	ldi	r24, 0x3B	; 59
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	f8 cf       	rjmp	.-16     	; 0x680 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x186>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:129
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
     690:	85 30       	cpi	r24, 0x05	; 5
     692:	99 f4       	brne	.+38     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     694:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
     698:	88 23       	and	r24, r24
     69a:	79 f0       	breq	.+30     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
     69c:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
     6a0:	88 23       	and	r24, r24
     6a2:	59 f0       	breq	.+22     	; 0x6ba <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:131
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6a4:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
     6a8:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
     6ac:	01 97       	sbiw	r24, 0x01	; 1
     6ae:	97 fd       	sbrc	r25, 7
     6b0:	05 c0       	rjmp	.+10     	; 0x6bc <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1c2>
     6b2:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
     6b6:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:134
    }
  }
}
     6ba:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Butn.cpp:131
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 59; 
    }
    else if( ENTER_BUT == 5 && PUMP_FLAG && select_product_type)   
    {
      SET_VALUE[ENTER_BUT] -= SPEED_SW[INC]; if(SET_VALUE[ENTER_BUT] < 0) SET_VALUE[ENTER_BUT] = 1; 
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	f8 cf       	rjmp	.-16     	; 0x6b2 <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]+0x1b8>

000006c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>:
BREAK_NUMBER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:223
    digits1[2] = third_digit;
    fourth_digit = second_left - (third_digit * 10);
    digits1[3] = fourth_digit;
}

void Eclass:: BREAK_NUMBER2(long num2) 
     6c2:	cf 92       	push	r12
     6c4:	df 92       	push	r13
     6c6:	ef 92       	push	r14
     6c8:	ff 92       	push	r15
     6ca:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:225
{ 
    first_digit2 = num2 / 1000;
     6cc:	28 ee       	ldi	r18, 0xE8	; 232
     6ce:	33 e0       	ldi	r19, 0x03	; 3
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	50 e0       	ldi	r21, 0x00	; 0
     6d4:	0e 94 ea 3b 	call	0x77d4	; 0x77d4 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:226
    digits2[0] = first_digit2;
     6d8:	e2 e0       	ldi	r30, 0x02	; 2
     6da:	f9 e2       	ldi	r31, 0x29	; 41
     6dc:	20 83       	st	Z, r18
     6de:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:227
    int first_left2 = num2 - (first_digit2 * 1000);
     6e0:	68 ee       	ldi	r22, 0xE8	; 232
     6e2:	73 e0       	ldi	r23, 0x03	; 3
     6e4:	62 9f       	mul	r22, r18
     6e6:	c0 01       	movw	r24, r0
     6e8:	63 9f       	mul	r22, r19
     6ea:	90 0d       	add	r25, r0
     6ec:	72 9f       	mul	r23, r18
     6ee:	90 0d       	add	r25, r0
     6f0:	11 24       	eor	r1, r1
     6f2:	c8 1a       	sub	r12, r24
     6f4:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:228
    second_digit2 = first_left2 / 100;
     6f6:	c6 01       	movw	r24, r12
     6f8:	64 e6       	ldi	r22, 0x64	; 100
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:229
    digits2[1] = second_digit2;
     700:	62 83       	std	Z+2, r22	; 0x02
     702:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:230
    int second_left2 = first_left2 - (second_digit2 * 100);
     704:	2c e9       	ldi	r18, 0x9C	; 156
     706:	26 03       	mulsu	r18, r22
     708:	c0 01       	movw	r24, r0
     70a:	27 9f       	mul	r18, r23
     70c:	90 0d       	add	r25, r0
     70e:	11 24       	eor	r1, r1
     710:	c8 0e       	add	r12, r24
     712:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:231
    third_digit2 = second_left2 / 10;
     714:	c6 01       	movw	r24, r12
     716:	6a e0       	ldi	r22, 0x0A	; 10
     718:	70 e0       	ldi	r23, 0x00	; 0
     71a:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:232
    digits2[2] = third_digit2;
     71e:	64 83       	std	Z+4, r22	; 0x04
     720:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:233
    fourth_digit2 = second_left2 - (third_digit2 * 10);
     722:	26 ef       	ldi	r18, 0xF6	; 246
     724:	26 03       	mulsu	r18, r22
     726:	c0 01       	movw	r24, r0
     728:	27 9f       	mul	r18, r23
     72a:	90 0d       	add	r25, r0
     72c:	11 24       	eor	r1, r1
     72e:	c8 0e       	add	r12, r24
     730:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:234
    digits2[3] = fourth_digit2;
     732:	c6 82       	std	Z+6, r12	; 0x06
     734:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:235
}
     736:	ff 90       	pop	r15
     738:	ef 90       	pop	r14
     73a:	df 90       	pop	r13
     73c:	cf 90       	pop	r12
     73e:	08 95       	ret

00000740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>:
BREAK_NUMBER1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:209
    digitalWrite(CA_3, HIGH);
    digitalWrite(CA_2, HIGH);
    digitalWrite(CA_1, HIGH);
}

void Eclass:: BREAK_NUMBER1(long num) 
     740:	cf 92       	push	r12
     742:	df 92       	push	r13
     744:	ef 92       	push	r14
     746:	ff 92       	push	r15
     748:	6b 01       	movw	r12, r22
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:211
{ 
    first_digit = num / 1000;
     74a:	28 ee       	ldi	r18, 0xE8	; 232
     74c:	33 e0       	ldi	r19, 0x03	; 3
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	50 e0       	ldi	r21, 0x00	; 0
     752:	0e 94 ea 3b 	call	0x77d4	; 0x77d4 <__divmodsi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:212
    digits1[0] = first_digit;
     756:	ea ef       	ldi	r30, 0xFA	; 250
     758:	f8 e2       	ldi	r31, 0x28	; 40
     75a:	20 83       	st	Z, r18
     75c:	31 83       	std	Z+1, r19	; 0x01
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:213
    int first_left = num - (first_digit * 1000);
     75e:	68 ee       	ldi	r22, 0xE8	; 232
     760:	73 e0       	ldi	r23, 0x03	; 3
     762:	62 9f       	mul	r22, r18
     764:	c0 01       	movw	r24, r0
     766:	63 9f       	mul	r22, r19
     768:	90 0d       	add	r25, r0
     76a:	72 9f       	mul	r23, r18
     76c:	90 0d       	add	r25, r0
     76e:	11 24       	eor	r1, r1
     770:	c8 1a       	sub	r12, r24
     772:	d9 0a       	sbc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:214
    second_digit = first_left / 100;
     774:	c6 01       	movw	r24, r12
     776:	64 e6       	ldi	r22, 0x64	; 100
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:215
    digits1[1] = second_digit;
     77e:	62 83       	std	Z+2, r22	; 0x02
     780:	73 83       	std	Z+3, r23	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:216
    int second_left = first_left - (second_digit * 100);
     782:	2c e9       	ldi	r18, 0x9C	; 156
     784:	26 03       	mulsu	r18, r22
     786:	c0 01       	movw	r24, r0
     788:	27 9f       	mul	r18, r23
     78a:	90 0d       	add	r25, r0
     78c:	11 24       	eor	r1, r1
     78e:	c8 0e       	add	r12, r24
     790:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:217
    third_digit = second_left / 10;
     792:	c6 01       	movw	r24, r12
     794:	6a e0       	ldi	r22, 0x0A	; 10
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:218
    digits1[2] = third_digit;
     79c:	64 83       	std	Z+4, r22	; 0x04
     79e:	75 83       	std	Z+5, r23	; 0x05
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:219
    fourth_digit = second_left - (third_digit * 10);
     7a0:	26 ef       	ldi	r18, 0xF6	; 246
     7a2:	26 03       	mulsu	r18, r22
     7a4:	c0 01       	movw	r24, r0
     7a6:	27 9f       	mul	r18, r23
     7a8:	90 0d       	add	r25, r0
     7aa:	11 24       	eor	r1, r1
     7ac:	c8 0e       	add	r12, r24
     7ae:	d9 1e       	adc	r13, r25
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:220
    digits1[3] = fourth_digit;
     7b0:	c6 82       	std	Z+6, r12	; 0x06
     7b2:	d7 82       	std	Z+7, r13	; 0x07
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:221
}
     7b4:	ff 90       	pop	r15
     7b6:	ef 90       	pop	r14
     7b8:	df 90       	pop	r13
     7ba:	cf 90       	pop	r12
     7bc:	08 95       	ret

000007be <PID::SetTunings(double, double, double) [clone .constprop.52]>:
SetTunings():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:127
}

/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
     7be:	4f 92       	push	r4
     7c0:	5f 92       	push	r5
     7c2:	6f 92       	push	r6
     7c4:	7f 92       	push	r7
     7c6:	8f 92       	push	r8
     7c8:	9f 92       	push	r9
     7ca:	af 92       	push	r10
     7cc:	bf 92       	push	r11
     7ce:	cf 92       	push	r12
     7d0:	df 92       	push	r13
     7d2:	ef 92       	push	r14
     7d4:	ff 92       	push	r15
     7d6:	6b 01       	movw	r12, r22
     7d8:	7c 01       	movw	r14, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:104
 * it's called automatically from the constructor, but tunings can also
 * be adjusted on the fly during normal operation
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd, int POn)
{
   if (Kp<0 || Ki<0 || Kd<0) return;
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	a9 01       	movw	r20, r18
     7e0:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
     7e4:	87 fd       	sbrc	r24, 7
     7e6:	9a c0       	rjmp	.+308    	; 0x91c <PID::SetTunings(double, double, double) [clone .constprop.52]+0x15e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:107

   pOn = POn;
   pOnE = POn == P_ON_E;
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	20 91 18 2a 	lds	r18, 0x2A18	; 0x802a18 <myPID+0x1a>
     7ee:	30 91 19 2a 	lds	r19, 0x2A19	; 0x802a19 <myPID+0x1b>
     7f2:	21 30       	cpi	r18, 0x01	; 1
     7f4:	31 05       	cpc	r19, r1
     7f6:	09 f0       	breq	.+2      	; 0x7fa <PID::SetTunings(double, double, double) [clone .constprop.52]+0x3c>
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	80 93 39 2a 	sts	0x2A39, r24	; 0x802a39 <myPID+0x3b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:109

   dispKp = Kp; dispKi = Ki; dispKd = Kd;
     7fe:	c0 92 fe 29 	sts	0x29FE, r12	; 0x8029fe <myPID>
     802:	d0 92 ff 29 	sts	0x29FF, r13	; 0x8029ff <myPID+0x1>
     806:	e0 92 00 2a 	sts	0x2A00, r14	; 0x802a00 <myPID+0x2>
     80a:	f0 92 01 2a 	sts	0x2A01, r15	; 0x802a01 <myPID+0x3>
     80e:	8a e0       	ldi	r24, 0x0A	; 10
     810:	97 ed       	ldi	r25, 0xD7	; 215
     812:	a3 e2       	ldi	r26, 0x23	; 35
     814:	bc e3       	ldi	r27, 0x3C	; 60
     816:	80 93 02 2a 	sts	0x2A02, r24	; 0x802a02 <myPID+0x4>
     81a:	90 93 03 2a 	sts	0x2A03, r25	; 0x802a03 <myPID+0x5>
     81e:	a0 93 04 2a 	sts	0x2A04, r26	; 0x802a04 <myPID+0x6>
     822:	b0 93 05 2a 	sts	0x2A05, r27	; 0x802a05 <myPID+0x7>
     826:	80 e0       	ldi	r24, 0x00	; 0
     828:	90 e8       	ldi	r25, 0x80	; 128
     82a:	a4 e5       	ldi	r26, 0x54	; 84
     82c:	b4 e4       	ldi	r27, 0x44	; 68
     82e:	80 93 06 2a 	sts	0x2A06, r24	; 0x802a06 <myPID+0x8>
     832:	90 93 07 2a 	sts	0x2A07, r25	; 0x802a07 <myPID+0x9>
     836:	a0 93 08 2a 	sts	0x2A08, r26	; 0x802a08 <myPID+0xa>
     83a:	b0 93 09 2a 	sts	0x2A09, r27	; 0x802a09 <myPID+0xb>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:111

   double SampleTimeInSec = ((double)SampleTime)/1000;
     83e:	60 91 2c 2a 	lds	r22, 0x2A2C	; 0x802a2c <myPID+0x2e>
     842:	70 91 2d 2a 	lds	r23, 0x2A2D	; 0x802a2d <myPID+0x2f>
     846:	80 91 2e 2a 	lds	r24, 0x2A2E	; 0x802a2e <myPID+0x30>
     84a:	90 91 2f 2a 	lds	r25, 0x2A2F	; 0x802a2f <myPID+0x31>
     84e:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
     852:	20 e0       	ldi	r18, 0x00	; 0
     854:	30 e0       	ldi	r19, 0x00	; 0
     856:	4a e7       	ldi	r20, 0x7A	; 122
     858:	54 e4       	ldi	r21, 0x44	; 68
     85a:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     85e:	4b 01       	movw	r8, r22
     860:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:112
   kp = Kp;
     862:	c0 92 0a 2a 	sts	0x2A0A, r12	; 0x802a0a <myPID+0xc>
     866:	d0 92 0b 2a 	sts	0x2A0B, r13	; 0x802a0b <myPID+0xd>
     86a:	e0 92 0c 2a 	sts	0x2A0C, r14	; 0x802a0c <myPID+0xe>
     86e:	f0 92 0d 2a 	sts	0x2A0D, r15	; 0x802a0d <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:113
   ki = Ki * SampleTimeInSec;
     872:	2a e0       	ldi	r18, 0x0A	; 10
     874:	37 ed       	ldi	r19, 0xD7	; 215
     876:	43 e2       	ldi	r20, 0x23	; 35
     878:	5c e3       	ldi	r21, 0x3C	; 60
     87a:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
     87e:	2b 01       	movw	r4, r22
     880:	3c 01       	movw	r6, r24
     882:	40 92 0e 2a 	sts	0x2A0E, r4	; 0x802a0e <myPID+0x10>
     886:	50 92 0f 2a 	sts	0x2A0F, r5	; 0x802a0f <myPID+0x11>
     88a:	60 92 10 2a 	sts	0x2A10, r6	; 0x802a10 <myPID+0x12>
     88e:	70 92 11 2a 	sts	0x2A11, r7	; 0x802a11 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:114
   kd = Kd / SampleTimeInSec;
     892:	a5 01       	movw	r20, r10
     894:	94 01       	movw	r18, r8
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	70 e8       	ldi	r23, 0x80	; 128
     89a:	84 e5       	ldi	r24, 0x54	; 84
     89c:	94 e4       	ldi	r25, 0x44	; 68
     89e:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     8a2:	4b 01       	movw	r8, r22
     8a4:	5c 01       	movw	r10, r24
     8a6:	80 92 12 2a 	sts	0x2A12, r8	; 0x802a12 <myPID+0x14>
     8aa:	90 92 13 2a 	sts	0x2A13, r9	; 0x802a13 <myPID+0x15>
     8ae:	a0 92 14 2a 	sts	0x2A14, r10	; 0x802a14 <myPID+0x16>
     8b2:	b0 92 15 2a 	sts	0x2A15, r11	; 0x802a15 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:116

  if(controllerDirection ==REVERSE)
     8b6:	80 91 16 2a 	lds	r24, 0x2A16	; 0x802a16 <myPID+0x18>
     8ba:	90 91 17 2a 	lds	r25, 0x2A17	; 0x802a17 <myPID+0x19>
     8be:	01 97       	sbiw	r24, 0x01	; 1
     8c0:	69 f5       	brne	.+90     	; 0x91c <PID::SetTunings(double, double, double) [clone .constprop.52]+0x15e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:118
   {
      kp = (0 - kp);
     8c2:	a7 01       	movw	r20, r14
     8c4:	96 01       	movw	r18, r12
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	cb 01       	movw	r24, r22
     8cc:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     8d0:	60 93 0a 2a 	sts	0x2A0A, r22	; 0x802a0a <myPID+0xc>
     8d4:	70 93 0b 2a 	sts	0x2A0B, r23	; 0x802a0b <myPID+0xd>
     8d8:	80 93 0c 2a 	sts	0x2A0C, r24	; 0x802a0c <myPID+0xe>
     8dc:	90 93 0d 2a 	sts	0x2A0D, r25	; 0x802a0d <myPID+0xf>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:119
      ki = (0 - ki);
     8e0:	a3 01       	movw	r20, r6
     8e2:	92 01       	movw	r18, r4
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	cb 01       	movw	r24, r22
     8ea:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     8ee:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x10>
     8f2:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x11>
     8f6:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x12>
     8fa:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x13>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:120
      kd = (0 - kd);
     8fe:	a5 01       	movw	r20, r10
     900:	94 01       	movw	r18, r8
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	cb 01       	movw	r24, r22
     908:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     90c:	60 93 12 2a 	sts	0x2A12, r22	; 0x802a12 <myPID+0x14>
     910:	70 93 13 2a 	sts	0x2A13, r23	; 0x802a13 <myPID+0x15>
     914:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <myPID+0x16>
     918:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <myPID+0x17>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:129
/* SetTunings(...)*************************************************************
 * Set Tunings using the last-rembered POn setting
 ******************************************************************************/
void PID::SetTunings(double Kp, double Ki, double Kd){
    SetTunings(Kp, Ki, Kd, pOn); 
}
     91c:	ff 90       	pop	r15
     91e:	ef 90       	pop	r14
     920:	df 90       	pop	r13
     922:	cf 90       	pop	r12
     924:	bf 90       	pop	r11
     926:	af 90       	pop	r10
     928:	9f 90       	pop	r9
     92a:	8f 90       	pop	r8
     92c:	7f 90       	pop	r7
     92e:	6f 90       	pop	r6
     930:	5f 90       	pop	r5
     932:	4f 90       	pop	r4
     934:	08 95       	ret

00000936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>:
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:58
      sample = 0;   AvgVout = 0;   
    }
      avrage_val = 50;
}

void Mclass :: RTD_TEMP_CONV()    //-------------------------Pt100 Temp read
     936:	4f 92       	push	r4
     938:	5f 92       	push	r5
     93a:	6f 92       	push	r6
     93c:	7f 92       	push	r7
     93e:	8f 92       	push	r8
     940:	9f 92       	push	r9
     942:	af 92       	push	r10
     944:	bf 92       	push	r11
     946:	cf 92       	push	r12
     948:	df 92       	push	r13
     94a:	ef 92       	push	r14
     94c:	ff 92       	push	r15
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	40 e2       	ldi	r20, 0x20	; 32
     954:	51 e4       	ldi	r21, 0x41	; 65
     956:	60 91 0a 29 	lds	r22, 0x290A	; 0x80290a <ERROR_CAL1>
     95a:	70 91 0b 29 	lds	r23, 0x290B	; 0x80290b <ERROR_CAL1+0x1>
     95e:	80 91 0c 29 	lds	r24, 0x290C	; 0x80290c <ERROR_CAL1+0x2>
     962:	90 91 0d 29 	lds	r25, 0x290D	; 0x80290d <ERROR_CAL1+0x3>
     966:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:60
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
     96a:	20 91 ec 28 	lds	r18, 0x28EC	; 0x8028ec <SIGN>
     96e:	21 11       	cpse	r18, r1
     970:	90 58       	subi	r25, 0x80	; 128
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:61
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
     972:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
     976:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
     97a:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
     97e:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:63
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
     982:	f0 90 e7 28 	lds	r15, 0x28E7	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
     986:	ff 20       	and	r15, r15
     988:	09 f4       	brne	.+2      	; 0x98c <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x56>
     98a:	55 c0       	rjmp	.+170    	; 0xa36 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x100>
     98c:	20 91 e8 28 	lds	r18, 0x28E8	; 0x8028e8 <ERROR_CAL>
     990:	30 91 e9 28 	lds	r19, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
     994:	40 91 ea 28 	lds	r20, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
     998:	50 91 eb 28 	lds	r21, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
     99c:	60 91 f2 28 	lds	r22, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
     9a0:	70 91 f3 28 	lds	r23, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
     9a4:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
     9a8:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
     9ac:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
     9b0:	60 93 e3 28 	sts	0x28E3, r22	; 0x8028e3 <TEMP_DEG_RAW2>
     9b4:	70 93 e4 28 	sts	0x28E4, r23	; 0x8028e4 <TEMP_DEG_RAW2+0x1>
     9b8:	80 93 e5 28 	sts	0x28E5, r24	; 0x8028e5 <TEMP_DEG_RAW2+0x2>
     9bc:	90 93 e6 28 	sts	0x28E6, r25	; 0x8028e6 <TEMP_DEG_RAW2+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:66
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;
    
    if (!CAL_SELECT_VALUE)
     9c0:	80 91 d8 28 	lds	r24, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
     9c4:	90 91 d9 28 	lds	r25, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
     9c8:	89 2b       	or	r24, r25
     9ca:	09 f0       	breq	.+2      	; 0x9ce <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x98>
     9cc:	7e c0       	rjmp	.+252    	; 0xaca <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x194>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:68
    {
        if(ERROR_SET_IN_DEG_FLAG)                         
     9ce:	ff 20       	and	r15, r15
     9d0:	09 f4       	brne	.+2      	; 0x9d4 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x9e>
     9d2:	50 c0       	rjmp	.+160    	; 0xa74 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x13e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:70
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
     9d4:	60 91 e3 28 	lds	r22, 0x28E3	; 0x8028e3 <TEMP_DEG_RAW2>
     9d8:	70 91 e4 28 	lds	r23, 0x28E4	; 0x8028e4 <TEMP_DEG_RAW2+0x1>
     9dc:	80 91 e5 28 	lds	r24, 0x28E5	; 0x8028e5 <TEMP_DEG_RAW2+0x2>
     9e0:	90 91 e6 28 	lds	r25, 0x28E6	; 0x8028e6 <TEMP_DEG_RAW2+0x3>
     9e4:	60 93 f6 28 	sts	0x28F6, r22	; 0x8028f6 <TEMP_DEG>
     9e8:	70 93 f7 28 	sts	0x28F7, r23	; 0x8028f7 <TEMP_DEG+0x1>
     9ec:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <TEMP_DEG+0x2>
     9f0:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:71
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
     9f4:	26 e6       	ldi	r18, 0x66	; 102
     9f6:	36 e6       	ldi	r19, 0x66	; 102
     9f8:	46 ee       	ldi	r20, 0xE6	; 230
     9fa:	5f e3       	ldi	r21, 0x3F	; 63
     9fc:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
     a00:	20 e0       	ldi	r18, 0x00	; 0
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	52 e4       	ldi	r21, 0x42	; 66
     a08:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
     a0c:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH>
     a10:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH+0x1>
     a14:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH+0x2>
     a18:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:89
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
   }
}
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	cf 90       	pop	r12
     a24:	bf 90       	pop	r11
     a26:	af 90       	pop	r10
     a28:	9f 90       	pop	r9
     a2a:	8f 90       	pop	r8
     a2c:	7f 90       	pop	r7
     a2e:	6f 90       	pop	r6
     a30:	5f 90       	pop	r5
     a32:	4f 90       	pop	r4
     a34:	08 95       	ret
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:64
{
    if(SIGN) {ERROR_CAL =(ERROR_CAL1/10) * -1;}
    else     {ERROR_CAL =(ERROR_CAL1/10) ;}
    
    if(ERROR_SET_IN_DEG_FLAG)           TEMP_DEG_RAW2  = TEMP_DEG_RAW   + ERROR_CAL;
    else  if(ERROR_SET_IN_FAH_FLAG)     TEMP_FAH_RAW2  = TEMP_FAH_RAW   + ERROR_CAL;
     a36:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
     a3a:	88 23       	and	r24, r24
     a3c:	09 f2       	breq	.-126    	; 0x9c0 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x8a>
     a3e:	20 91 e8 28 	lds	r18, 0x28E8	; 0x8028e8 <ERROR_CAL>
     a42:	30 91 e9 28 	lds	r19, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
     a46:	40 91 ea 28 	lds	r20, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
     a4a:	50 91 eb 28 	lds	r21, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
     a4e:	60 91 de 28 	lds	r22, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
     a52:	70 91 df 28 	lds	r23, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
     a56:	80 91 e0 28 	lds	r24, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
     a5a:	90 91 e1 28 	lds	r25, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
     a5e:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
     a62:	60 93 da 28 	sts	0x28DA, r22	; 0x8028da <TEMP_FAH_RAW2>
     a66:	70 93 db 28 	sts	0x28DB, r23	; 0x8028db <TEMP_FAH_RAW2+0x1>
     a6a:	80 93 dc 28 	sts	0x28DC, r24	; 0x8028dc <TEMP_FAH_RAW2+0x2>
     a6e:	90 93 dd 28 	sts	0x28DD, r25	; 0x8028dd <TEMP_FAH_RAW2+0x3>
     a72:	a6 cf       	rjmp	.-180    	; 0x9c0 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0x8a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:73
        if(ERROR_SET_IN_DEG_FLAG)                         
        {
          TEMP_DEG  =   TEMP_DEG_RAW2;
          TEMP_FAH  =  (( TEMP_DEG_RAW2 * 1.8 ) + 32);
        }
        else if(ERROR_SET_IN_FAH_FLAG)  
     a74:	80 91 e2 28 	lds	r24, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
     a78:	88 23       	and	r24, r24
     a7a:	81 f2       	breq	.-96     	; 0xa1c <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:75
        {
          TEMP_DEG  =  (( TEMP_FAH_RAW2 - 32) / 1.8);
     a7c:	c0 90 da 28 	lds	r12, 0x28DA	; 0x8028da <TEMP_FAH_RAW2>
     a80:	d0 90 db 28 	lds	r13, 0x28DB	; 0x8028db <TEMP_FAH_RAW2+0x1>
     a84:	e0 90 dc 28 	lds	r14, 0x28DC	; 0x8028dc <TEMP_FAH_RAW2+0x2>
     a88:	f0 90 dd 28 	lds	r15, 0x28DD	; 0x8028dd <TEMP_FAH_RAW2+0x3>
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	52 e4       	ldi	r21, 0x42	; 66
     a94:	c7 01       	movw	r24, r14
     a96:	b6 01       	movw	r22, r12
     a98:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     a9c:	26 e6       	ldi	r18, 0x66	; 102
     a9e:	36 e6       	ldi	r19, 0x66	; 102
     aa0:	46 ee       	ldi	r20, 0xE6	; 230
     aa2:	5f e3       	ldi	r21, 0x3F	; 63
     aa4:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     aa8:	60 93 f6 28 	sts	0x28F6, r22	; 0x8028f6 <TEMP_DEG>
     aac:	70 93 f7 28 	sts	0x28F7, r23	; 0x8028f7 <TEMP_DEG+0x1>
     ab0:	80 93 f8 28 	sts	0x28F8, r24	; 0x8028f8 <TEMP_DEG+0x2>
     ab4:	90 93 f9 28 	sts	0x28F9, r25	; 0x8028f9 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:76
          TEMP_FAH  =  TEMP_FAH_RAW2;
     ab8:	c0 92 d4 28 	sts	0x28D4, r12	; 0x8028d4 <TEMP_FAH>
     abc:	d0 92 d5 28 	sts	0x28D5, r13	; 0x8028d5 <TEMP_FAH+0x1>
     ac0:	e0 92 d6 28 	sts	0x28D6, r14	; 0x8028d6 <TEMP_FAH+0x2>
     ac4:	f0 92 d7 28 	sts	0x28D7, r15	; 0x8028d7 <TEMP_FAH+0x3>
     ac8:	a9 cf       	rjmp	.-174    	; 0xa1c <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0xe6>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:81
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
     aca:	60 91 d0 28 	lds	r22, 0x28D0	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
     ace:	70 91 d1 28 	lds	r23, 0x28D1	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
     ad2:	80 91 d2 28 	lds	r24, 0x28D2	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
     ad6:	90 91 d3 28 	lds	r25, 0x28D3	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
     ada:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	40 e2       	ldi	r20, 0x20	; 32
     ae4:	51 e4       	ldi	r21, 0x41	; 65
     ae6:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     aea:	4b 01       	movw	r8, r22
     aec:	5c 01       	movw	r10, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:83
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
     aee:	60 91 c8 28 	lds	r22, 0x28C8	; 0x8028c8 <MASTER_LOW_CONV>
     af2:	70 91 c9 28 	lds	r23, 0x28C9	; 0x8028c9 <MASTER_LOW_CONV+0x1>
     af6:	80 91 ca 28 	lds	r24, 0x28CA	; 0x8028ca <MASTER_LOW_CONV+0x2>
     afa:	90 91 cb 28 	lds	r25, 0x28CB	; 0x8028cb <MASTER_LOW_CONV+0x3>
     afe:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e2       	ldi	r20, 0x20	; 32
     b08:	51 e4       	ldi	r21, 0x41	; 65
     b0a:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     b0e:	6b 01       	movw	r12, r22
     b10:	7c 01       	movw	r14, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:84
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
     b12:	60 91 c4 28 	lds	r22, 0x28C4	; 0x8028c4 <MASTER_HIGH_CONV>
     b16:	70 91 c5 28 	lds	r23, 0x28C5	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
     b1a:	80 91 c6 28 	lds	r24, 0x28C6	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
     b1e:	90 91 c7 28 	lds	r25, 0x28C7	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
     b22:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	40 e2       	ldi	r20, 0x20	; 32
     b2c:	51 e4       	ldi	r21, 0x41	; 65
     b2e:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13


#include "MapFloat.h"

float mapFloat(float value, float fromLow, float fromHigh, float toLow, float toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow; 
     b32:	a7 01       	movw	r20, r14
     b34:	96 01       	movw	r18, r12
     b36:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     b3a:	2b 01       	movw	r4, r22
     b3c:	3c 01       	movw	r6, r24
     b3e:	a5 01       	movw	r20, r10
     b40:	94 01       	movw	r18, r8
     b42:	60 91 f2 28 	lds	r22, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
     b46:	70 91 f3 28 	lds	r23, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
     b4a:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
     b4e:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
     b52:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     b56:	9b 01       	movw	r18, r22
     b58:	ac 01       	movw	r20, r24
     b5a:	c3 01       	movw	r24, r6
     b5c:	b2 01       	movw	r22, r4
     b5e:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
     b62:	2b 01       	movw	r4, r22
     b64:	3c 01       	movw	r6, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:82
        }
    }
    else
    {
        CAL2_RAW_LOW_VALUE = (CAL2_RAW_LOW_VALUE_CONV / 10.0);
        CAL2_RAW_HIGH_VALUE = (CAL2_RAW_HIGH_VALUE_CONV  / 10.0);
     b66:	60 91 cc 28 	lds	r22, 0x28CC	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
     b6a:	70 91 cd 28 	lds	r23, 0x28CD	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
     b6e:	80 91 ce 28 	lds	r24, 0x28CE	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
     b72:	90 91 cf 28 	lds	r25, 0x28CF	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
     b76:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	40 e2       	ldi	r20, 0x20	; 32
     b80:	51 e4       	ldi	r21, 0x41	; 65
     b82:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
mapFloat():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\MapFloat-master\src/MapFloat.cpp:13
     b86:	a5 01       	movw	r20, r10
     b88:	94 01       	movw	r18, r8
     b8a:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
     b8e:	9b 01       	movw	r18, r22
     b90:	ac 01       	movw	r20, r24
     b92:	c3 01       	movw	r24, r6
     b94:	b2 01       	movw	r22, r4
     b96:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
     b9a:	a7 01       	movw	r20, r14
     b9c:	96 01       	movw	r18, r12
     b9e:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
     ba2:	6b 01       	movw	r12, r22
     ba4:	7c 01       	movw	r14, r24
RTD_TEMP_CONV():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:85
        MASTER_LOW =  (MASTER_LOW_CONV  / 10.0);
        MASTER_HIGH = (MASTER_HIGH_CONV  / 10.0);
        TEMP_DEG = mapFloat( TEMP_DEG_RAW, CAL2_RAW_LOW_VALUE, CAL2_RAW_HIGH_VALUE, MASTER_LOW, MASTER_HIGH);
     ba6:	c0 92 f6 28 	sts	0x28F6, r12	; 0x8028f6 <TEMP_DEG>
     baa:	d0 92 f7 28 	sts	0x28F7, r13	; 0x8028f7 <TEMP_DEG+0x1>
     bae:	e0 92 f8 28 	sts	0x28F8, r14	; 0x8028f8 <TEMP_DEG+0x2>
     bb2:	f0 92 f9 28 	sts	0x28F9, r15	; 0x8028f9 <TEMP_DEG+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:86
        TEMP_FAH  = ( TEMP_DEG * 1.8 ) + 32;
     bb6:	26 e6       	ldi	r18, 0x66	; 102
     bb8:	36 e6       	ldi	r19, 0x66	; 102
     bba:	46 ee       	ldi	r20, 0xE6	; 230
     bbc:	5f e3       	ldi	r21, 0x3F	; 63
     bbe:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	52 e4       	ldi	r21, 0x42	; 66
     bca:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
     bce:	60 93 d4 28 	sts	0x28D4, r22	; 0x8028d4 <TEMP_FAH>
     bd2:	70 93 d5 28 	sts	0x28D5, r23	; 0x8028d5 <TEMP_FAH+0x1>
     bd6:	80 93 d6 28 	sts	0x28D6, r24	; 0x8028d6 <TEMP_FAH+0x2>
     bda:	90 93 d7 28 	sts	0x28D7, r25	; 0x8028d7 <TEMP_FAH+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Temp.cpp:87
        if(TEMP_DEG>=100) TEMP_DEG = 99.9; 
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	48 ec       	ldi	r20, 0xC8	; 200
     be4:	52 e4       	ldi	r21, 0x42	; 66
     be6:	c7 01       	movw	r24, r14
     be8:	b6 01       	movw	r22, r12
     bea:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
     bee:	87 fd       	sbrc	r24, 7
     bf0:	15 cf       	rjmp	.-470    	; 0xa1c <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0xe6>
     bf2:	8d ec       	ldi	r24, 0xCD	; 205
     bf4:	9c ec       	ldi	r25, 0xCC	; 204
     bf6:	a7 ec       	ldi	r26, 0xC7	; 199
     bf8:	b2 e4       	ldi	r27, 0x42	; 66
     bfa:	80 93 f6 28 	sts	0x28F6, r24	; 0x8028f6 <TEMP_DEG>
     bfe:	90 93 f7 28 	sts	0x28F7, r25	; 0x8028f7 <TEMP_DEG+0x1>
     c02:	a0 93 f8 28 	sts	0x28F8, r26	; 0x8028f8 <TEMP_DEG+0x2>
     c06:	b0 93 f9 28 	sts	0x28F9, r27	; 0x8028f9 <TEMP_DEG+0x3>
     c0a:	08 cf       	rjmp	.-496    	; 0xa1c <Mclass::RTD_TEMP_CONV() [clone .constprop.49]+0xe6>

00000c0c <DEC_LONGPRESS_STOP()>:
DEC_LONGPRESS_STOP():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:519
}
}

void DEC_LONGPRESS_STOP()
{
  if(checkTempRaised==0)
     c0c:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
     c10:	81 11       	cpse	r24, r1
     c12:	06 c0       	rjmp	.+12     	; 0xc20 <DEC_LONGPRESS_STOP()+0x14>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:521
  {
  i = 0;
     c14:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
     c18:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:522
  BLINK_STATS=0;
     c1c:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:524
  }
}
     c20:	08 95       	ret

00000c22 <INC_LONGPRESS_STOP()>:
_Z18INC_LONGPRESS_STOPv():
     c22:	f4 cf       	rjmp	.-24     	; 0xc0c <DEC_LONGPRESS_STOP()>

00000c24 <Print::write(unsigned char const*, unsigned int)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:30

// Public Methods //////////////////////////////////////////////////////////////

/* default implementation: may be overridden */
size_t Print::write(const uint8_t *buffer, size_t size)
{
     c24:	af 92       	push	r10
     c26:	bf 92       	push	r11
     c28:	cf 92       	push	r12
     c2a:	df 92       	push	r13
     c2c:	ef 92       	push	r14
     c2e:	ff 92       	push	r15
     c30:	0f 93       	push	r16
     c32:	1f 93       	push	r17
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
     c38:	6c 01       	movw	r12, r24
     c3a:	7b 01       	movw	r14, r22
     c3c:	8b 01       	movw	r16, r22
     c3e:	04 0f       	add	r16, r20
     c40:	15 1f       	adc	r17, r21
     c42:	eb 01       	movw	r28, r22
     c44:	5e 01       	movw	r10, r28
     c46:	ae 18       	sub	r10, r14
     c48:	bf 08       	sbc	r11, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:32
  size_t n = 0;
  while (size--)
     c4a:	c0 17       	cp	r28, r16
     c4c:	d1 07       	cpc	r29, r17
     c4e:	59 f0       	breq	.+22     	; 0xc66 <Print::write(unsigned char const*, unsigned int)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:34
  {
    if (write(*buffer++))
     c50:	69 91       	ld	r22, Y+
     c52:	d6 01       	movw	r26, r12
     c54:	ed 91       	ld	r30, X+
     c56:	fc 91       	ld	r31, X
     c58:	01 90       	ld	r0, Z+
     c5a:	f0 81       	ld	r31, Z
     c5c:	e0 2d       	mov	r30, r0
     c5e:	c6 01       	movw	r24, r12
     c60:	09 95       	icall
     c62:	89 2b       	or	r24, r25
     c64:	79 f7       	brne	.-34     	; 0xc44 <Print::write(unsigned char const*, unsigned int)+0x20>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles\api/Print.cpp:40
      n++;
    else
      break;
  }
  return n;
}
     c66:	c5 01       	movw	r24, r10
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	1f 91       	pop	r17
     c6e:	0f 91       	pop	r16
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	df 90       	pop	r13
     c76:	cf 90       	pop	r12
     c78:	bf 90       	pop	r11
     c7a:	af 90       	pop	r10
     c7c:	08 95       	ret

00000c7e <UartClass::availableForWrite()>:
availableForWrite():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:295
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC
  {
    head = _tx_buffer_head;
     c7e:	fc 01       	movw	r30, r24
     c80:	50 8d       	ldd	r21, Z+24	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:296
    tail = _tx_buffer_tail;
     c82:	41 8d       	ldd	r20, Z+25	; 0x19
     c84:	25 2f       	mov	r18, r21
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	84 2f       	mov	r24, r20
     c8a:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:298
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
     c8c:	82 1b       	sub	r24, r18
     c8e:	93 0b       	sbc	r25, r19
     c90:	54 17       	cp	r21, r20
     c92:	10 f0       	brcs	.+4      	; 0xc98 <UartClass::availableForWrite()+0x1a>
     c94:	cf 96       	adiw	r24, 0x3f	; 63
     c96:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:299
  return tail - head - 1;
     c98:	01 97       	sbiw	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:300
}
     c9a:	08 95       	ret

00000c9c <UartClass::read()>:
read():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:274
    return _rx_buffer[_rx_buffer_tail];
  }
}

int UartClass::read(void)
{
     c9c:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:276
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
     c9e:	96 89       	ldd	r25, Z+22	; 0x16
     ca0:	87 89       	ldd	r24, Z+23	; 0x17
     ca2:	98 17       	cp	r25, r24
     ca4:	61 f0       	breq	.+24     	; 0xcbe <UartClass::read()+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:282
  {
    return -1;
  }
  else
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
     ca6:	a7 89       	ldd	r26, Z+23	; 0x17
     ca8:	ae 0f       	add	r26, r30
     caa:	bf 2f       	mov	r27, r31
     cac:	b1 1d       	adc	r27, r1
     cae:	5d 96       	adiw	r26, 0x1d	; 29
     cb0:	8c 91       	ld	r24, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:283
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
     cb2:	97 89       	ldd	r25, Z+23	; 0x17
     cb4:	9f 5f       	subi	r25, 0xFF	; 255
     cb6:	9f 73       	andi	r25, 0x3F	; 63
     cb8:	97 8b       	std	Z+23, r25	; 0x17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:284
    return c;
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:278
int UartClass::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:286
  {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
     cc2:	08 95       	ret

00000cc4 <UartClass::peek()>:
peek():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:262
{
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
}

int UartClass::peek(void)
{
     cc4:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:263
  if (_rx_buffer_head == _rx_buffer_tail)
     cc6:	96 89       	ldd	r25, Z+22	; 0x16
     cc8:	87 89       	ldd	r24, Z+23	; 0x17
     cca:	98 17       	cp	r25, r24
     ccc:	31 f0       	breq	.+12     	; 0xcda <UartClass::peek()+0x16>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:269
  {
    return -1;
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
     cce:	87 89       	ldd	r24, Z+23	; 0x17
     cd0:	e8 0f       	add	r30, r24
     cd2:	f1 1d       	adc	r31, r1
     cd4:	85 8d       	ldd	r24, Z+29	; 0x1d
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:265

int UartClass::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail)
  {
    return -1;
     cda:	8f ef       	ldi	r24, 0xFF	; 255
     cdc:	9f ef       	ldi	r25, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:271
  }
  else
  {
    return _rx_buffer[_rx_buffer_tail];
  }
}
     cde:	08 95       	ret

00000ce0 <UartClass::available()>:
available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:257
  // Note: Does not change output pins
  _written = false;
}

int UartClass::available(void)
{
     ce0:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:258
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
     ce2:	96 89       	ldd	r25, Z+22	; 0x16
     ce4:	27 89       	ldd	r18, Z+23	; 0x17
     ce6:	89 2f       	mov	r24, r25
     ce8:	90 e0       	ldi	r25, 0x00	; 0
     cea:	80 5c       	subi	r24, 0xC0	; 192
     cec:	9f 4f       	sbci	r25, 0xFF	; 255
     cee:	82 1b       	sub	r24, r18
     cf0:	91 09       	sbc	r25, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:259
}
     cf2:	8f 73       	andi	r24, 0x3F	; 63
     cf4:	99 27       	eor	r25, r25
     cf6:	08 95       	ret

00000cf8 <Serial2_available()>:
Serial2_available():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:65

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial2_available()
{
  return Serial2.available();
     cf8:	85 e5       	ldi	r24, 0x55	; 85
     cfa:	99 e2       	ldi	r25, 0x29	; 41
     cfc:	f1 df       	rcall	.-30     	; 0xce0 <UartClass::available()>
     cfe:	21 e0       	ldi	r18, 0x01	; 1
     d00:	89 2b       	or	r24, r25
     d02:	09 f4       	brne	.+2      	; 0xd06 <Serial2_available()+0xe>
     d04:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART2.cpp:66
}
     d06:	82 2f       	mov	r24, r18
     d08:	08 95       	ret

00000d0a <UartClass::end()>:
end():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:240
  // Restore SREG content
  SREG = oldSREG;
}

void UartClass::end()
{
     d0a:	cf 93       	push	r28
     d0c:	df 93       	push	r29
     d0e:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:242
  // wait for transmission of outgoing data
  flush();
     d10:	e8 81       	ld	r30, Y
     d12:	f9 81       	ldd	r31, Y+1	; 0x01
     d14:	06 80       	ldd	r0, Z+6	; 0x06
     d16:	f7 81       	ldd	r31, Z+7	; 0x07
     d18:	e0 2d       	mov	r30, r0
     d1a:	09 95       	icall
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:246

  // Disable receiver and transmitter as well as the RX complete and
  // data register empty interrupts.
  (*_hwserial_module).CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
     d1c:	ec 85       	ldd	r30, Y+12	; 0x0c
     d1e:	fd 85       	ldd	r31, Y+13	; 0x0d
     d20:	86 81       	ldd	r24, Z+6	; 0x06
     d22:	8f 73       	andi	r24, 0x3F	; 63
     d24:	86 83       	std	Z+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:247
  (*_hwserial_module).CTRLA &= ~(USART_RXCIE_bm | USART_DREIE_bm);
     d26:	ec 85       	ldd	r30, Y+12	; 0x0c
     d28:	fd 85       	ldd	r31, Y+13	; 0x0d
     d2a:	85 81       	ldd	r24, Z+5	; 0x05
     d2c:	8f 75       	andi	r24, 0x5F	; 95
     d2e:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:250

  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
     d30:	8f 89       	ldd	r24, Y+23	; 0x17
     d32:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:253

  // Note: Does not change output pins
  _written = false;
     d34:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:254
}
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	08 95       	ret

00000d3c <UartClass::swap(unsigned char)>:
swap():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:161
  _pin_set = 0; // Default to standard
  return false;
}

bool UartClass::swap(uint8_t state)
{
     d3c:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:162
  if (state == 1) // Use alternative pin position
     d3e:	61 30       	cpi	r22, 0x01	; 1
     d40:	19 f4       	brne	.+6      	; 0xd48 <UartClass::swap(unsigned char)+0xc>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:164
  {
    _pin_set = state;
     d42:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:170
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
    return true;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:169
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
  {
    _pin_set = 0;
     d48:	14 8a       	std	Z+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:167
  if (state == 1) // Use alternative pin position
  {
    _pin_set = state;
    return true;
  }
  else if (state == 0) // Use default pin position
     d4a:	66 23       	and	r22, r22
     d4c:	d9 f3       	breq	.-10     	; 0xd44 <UartClass::swap(unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:175
    return true;
  }
  else // Invalid swap value. Use default position
  {
    _pin_set = 0;
    return false;
     d4e:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:177
  }
}
     d50:	08 95       	ret

00000d52 <UartClass::pins(unsigned char, unsigned char)>:
pins():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:147

// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
     d52:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     d54:	54 96       	adiw	r26, 0x14	; 20
     d56:	1c 92       	st	X, r1
     d58:	54 97       	sbiw	r26, 0x14	; 20
     d5a:	54 96       	adiw	r26, 0x14	; 20
     d5c:	8c 91       	ld	r24, X
     d5e:	54 97       	sbiw	r26, 0x14	; 20
     d60:	82 30       	cpi	r24, 0x02	; 2
     d62:	a0 f4       	brcc	.+40     	; 0xd8c <UartClass::pins(unsigned char, unsigned char)+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:150
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
     d64:	28 2f       	mov	r18, r24
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	f9 01       	movw	r30, r18
     d6a:	ee 0f       	add	r30, r30
     d6c:	ff 1f       	adc	r31, r31
     d6e:	e2 0f       	add	r30, r18
     d70:	f3 1f       	adc	r31, r19
     d72:	ea 0f       	add	r30, r26
     d74:	fb 1f       	adc	r31, r27
     d76:	97 85       	ldd	r25, Z+15	; 0x0f
     d78:	96 13       	cpse	r25, r22
     d7a:	03 c0       	rjmp	.+6      	; 0xd82 <UartClass::pins(unsigned char, unsigned char)+0x30>
     d7c:	96 85       	ldd	r25, Z+14	; 0x0e
     d7e:	94 17       	cp	r25, r20
     d80:	49 f0       	breq	.+18     	; 0xd94 <UartClass::pins(unsigned char, unsigned char)+0x42>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:148
// Public Methods //////////////////////////////////////////////////////////////

// Invoke this function before 'begin' to define the pins used
bool UartClass::pins(uint8_t tx, uint8_t rx)
{
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
     d82:	8f 5f       	subi	r24, 0xFF	; 255
     d84:	54 96       	adiw	r26, 0x14	; 20
     d86:	8c 93       	st	X, r24
     d88:	54 97       	sbiw	r26, 0x14	; 20
     d8a:	e7 cf       	rjmp	.-50     	; 0xd5a <UartClass::pins(unsigned char, unsigned char)+0x8>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:156
    {
      // We are good, this set of pins is supported
      return true;
    }
  }
  _pin_set = 0; // Default to standard
     d8c:	54 96       	adiw	r26, 0x14	; 20
     d8e:	1c 92       	st	X, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:157
  return false;
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:153
  for (_pin_set = 0; _pin_set < SERIAL_PIN_SETS; ++_pin_set)
  {
    if (tx == _hw_set[_pin_set].tx_pin && rx == _hw_set[_pin_set].rx_pin)
    {
      // We are good, this set of pins is supported
      return true;
     d94:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:158
    }
  }
  _pin_set = 0; // Default to standard
  return false;
}
     d96:	08 95       	ret

00000d98 <UartClass::_tx_data_empty_irq()>:
_tx_data_empty_irq():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:89
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void UartClass::_tx_data_empty_irq(void)
{
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:91
  // Check if tx buffer already empty.
  if (_tx_buffer_head == _tx_buffer_tail)
     d9e:	90 8d       	ldd	r25, Z+24	; 0x18
     da0:	81 8d       	ldd	r24, Z+25	; 0x19
     da2:	c4 85       	ldd	r28, Z+12	; 0x0c
     da4:	d5 85       	ldd	r29, Z+13	; 0x0d
     da6:	98 13       	cpse	r25, r24
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <UartClass::_tx_data_empty_irq()+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:94
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     daa:	8d 81       	ldd	r24, Y+5	; 0x05
     dac:	8f 7d       	andi	r24, 0xDF	; 223
     dae:	8d 83       	std	Y+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:122
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
      _hwserial_dre_interrupt_elevated = 0;
    }
  }
}
     db0:	df 91       	pop	r29
     db2:	cf 91       	pop	r28
     db4:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:100
    return;
  }

  // There must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
     db6:	a1 8d       	ldd	r26, Z+25	; 0x19
     db8:	ae 0f       	add	r26, r30
     dba:	bf 2f       	mov	r27, r31
     dbc:	b1 1d       	adc	r27, r1
     dbe:	a3 5a       	subi	r26, 0xA3	; 163
     dc0:	bf 4f       	sbci	r27, 0xFF	; 255
     dc2:	2c 91       	ld	r18, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:101
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
     dc4:	81 8d       	ldd	r24, Z+25	; 0x19
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	8f 73       	andi	r24, 0x3F	; 63
     dcc:	99 27       	eor	r25, r25
     dce:	81 8f       	std	Z+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:106

  // clear the TXCIF flag -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  (*_hwserial_module).STATUS = USART_TXCIF_bm;
     dd0:	80 e4       	ldi	r24, 0x40	; 64
     dd2:	8c 83       	std	Y+4, r24	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:108

  (*_hwserial_module).TXDATAL = c;
     dd4:	a4 85       	ldd	r26, Z+12	; 0x0c
     dd6:	b5 85       	ldd	r27, Z+13	; 0x0d
     dd8:	12 96       	adiw	r26, 0x02	; 2
     dda:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:110

  if (_tx_buffer_head == _tx_buffer_tail)
     ddc:	90 8d       	ldd	r25, Z+24	; 0x18
     dde:	81 8d       	ldd	r24, Z+25	; 0x19
     de0:	98 13       	cpse	r25, r24
     de2:	e6 cf       	rjmp	.-52     	; 0xdb0 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:113
  {
    // Buffer empty, so disable "data register empty" interrupt
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     de4:	a4 85       	ldd	r26, Z+12	; 0x0c
     de6:	b5 85       	ldd	r27, Z+13	; 0x0d
     de8:	15 96       	adiw	r26, 0x05	; 5
     dea:	8c 91       	ld	r24, X
     dec:	15 97       	sbiw	r26, 0x05	; 5
     dee:	8f 7d       	andi	r24, 0xDF	; 223
     df0:	15 96       	adiw	r26, 0x05	; 5
     df2:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:116

    //Take the DRE interrupt back no normal priority level if it has been elevated
    if (_hwserial_dre_interrupt_elevated)
     df4:	83 8d       	ldd	r24, Z+27	; 0x1b
     df6:	88 23       	and	r24, r24
     df8:	d9 f2       	breq	.-74     	; 0xdb0 <UartClass::_tx_data_empty_irq()+0x18>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:118
    {
      CPUINT.LVL1VEC = _prev_lvl1_interrupt_vect;
     dfa:	84 8d       	ldd	r24, Z+28	; 0x1c
     dfc:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:119
      _hwserial_dre_interrupt_elevated = 0;
     e00:	13 8e       	std	Z+27, r1	; 0x1b
     e02:	d6 cf       	rjmp	.-84     	; 0xdb0 <UartClass::_tx_data_empty_irq()+0x18>

00000e04 <UartClass::_poll_tx_data_empty()>:
_poll_tx_data_empty():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:126
  }
}

// To invoke data empty "interrupt" via a call, use this method
void UartClass::_poll_tx_data_empty(void)
{
     e04:	dc 01       	movw	r26, r24
     e06:	1c 96       	adiw	r26, 0x0c	; 12
     e08:	ed 91       	ld	r30, X+
     e0a:	fc 91       	ld	r31, X
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:127
  if ((!(SREG & CPU_I_bm)) || (!((*_hwserial_module).CTRLA & USART_DREIE_bm)))
     e0c:	0f b6       	in	r0, 0x3f	; 63
     e0e:	07 fe       	sbrs	r0, 7
     e10:	03 c0       	rjmp	.+6      	; 0xe18 <UartClass::_poll_tx_data_empty()+0x14>
     e12:	25 81       	ldd	r18, Z+5	; 0x05
     e14:	25 fd       	sbrc	r18, 5
     e16:	03 c0       	rjmp	.+6      	; 0xe1e <UartClass::_poll_tx_data_empty()+0x1a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:135
    // so we'll have to poll the "data register empty" flag ourselves.
    // If it is set, pretend an interrupt has happened and call the handler
    // to free up space for us.

    // Invoke interrupt handler only if conditions data register is empty
    if ((*_hwserial_module).STATUS & USART_DREIF_bm)
     e18:	24 81       	ldd	r18, Z+4	; 0x04
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:137
    {
      _tx_data_empty_irq();
     e1a:	25 fd       	sbrc	r18, 5
     e1c:	bd cf       	rjmp	.-134    	; 0xd98 <UartClass::_tx_data_empty_irq()>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:141
    }
  }
  // In case interrupts are enabled, the interrupt routine will be invoked by itself
}
     e1e:	08 95       	ret

00000e20 <UartClass::write(unsigned char)>:
write():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:336
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}

size_t UartClass::write(uint8_t c)
{
     e20:	ef 92       	push	r14
     e22:	ff 92       	push	r15
     e24:	0f 93       	push	r16
     e26:	1f 93       	push	r17
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:337
  _written = true;
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	8d 8b       	std	Y+21, r24	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:343

  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective data rate at high (>
  // 500kbit/s) bit rates, where interrupt overhead becomes a slowdown.
  if ((_tx_buffer_head == _tx_buffer_tail) && ((*_hwserial_module).STATUS & USART_DREIF_bm))
     e32:	98 8d       	ldd	r25, Y+24	; 0x18
     e34:	89 8d       	ldd	r24, Y+25	; 0x19
     e36:	98 13       	cpse	r25, r24
     e38:	1c c0       	rjmp	.+56     	; 0xe72 <UartClass::write(unsigned char)+0x52>
     e3a:	ac 85       	ldd	r26, Y+12	; 0x0c
     e3c:	bd 85       	ldd	r27, Y+13	; 0x0d
     e3e:	14 96       	adiw	r26, 0x04	; 4
     e40:	8c 91       	ld	r24, X
     e42:	14 97       	sbiw	r26, 0x04	; 4
     e44:	85 ff       	sbrs	r24, 5
     e46:	15 c0       	rjmp	.+42     	; 0xe72 <UartClass::write(unsigned char)+0x52>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:345
  {
    (*_hwserial_module).TXDATAL = c;
     e48:	12 96       	adiw	r26, 0x02	; 2
     e4a:	6c 93       	st	X, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:346
    (*_hwserial_module).STATUS = USART_TXCIF_bm;
     e4c:	ac 85       	ldd	r26, Y+12	; 0x0c
     e4e:	bd 85       	ldd	r27, Y+13	; 0x0d
     e50:	80 e4       	ldi	r24, 0x40	; 64
     e52:	14 96       	adiw	r26, 0x04	; 4
     e54:	8c 93       	st	X, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:350

    // Make sure data register empty interrupt is disabled to avoid
    // that the interrupt handler is called in this situation
    (*_hwserial_module).CTRLA &= (~USART_DREIE_bm);
     e56:	ec 85       	ldd	r30, Y+12	; 0x0c
     e58:	fd 85       	ldd	r31, Y+13	; 0x0d
     e5a:	85 81       	ldd	r24, Z+5	; 0x05
     e5c:	8f 7d       	andi	r24, 0xDF	; 223
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  _tx_buffer[_tx_buffer_head] = c;
  _tx_buffer_head = i;

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     e5e:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:383

  return 1;
}
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	df 91       	pop	r29
     e66:	cf 91       	pop	r28
     e68:	1f 91       	pop	r17
     e6a:	0f 91       	pop	r16
     e6c:	ff 90       	pop	r15
     e6e:	ef 90       	pop	r14
     e70:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:357
    return 1;
  }

  //Check if we are inside an ISR already (could be from by a source other than UART),
  // in which case the UART ISRs will be blocked.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     e72:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     e76:	80 ff       	sbrs	r24, 0
     e78:	08 c0       	rjmp	.+16     	; 0xe8a <UartClass::write(unsigned char)+0x6a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:361
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     e7a:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     e7e:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:362
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     e80:	8a 8d       	ldd	r24, Y+26	; 0x1a
     e82:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:364

    _hwserial_dre_interrupt_elevated = 1;
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	8b 8f       	std	Y+27, r24	; 0x1b
     e8a:	f6 2e       	mov	r15, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:367
  }

  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
     e8c:	08 8d       	ldd	r16, Y+24	; 0x18
     e8e:	10 e0       	ldi	r17, 0x00	; 0
     e90:	0f 5f       	subi	r16, 0xFF	; 255
     e92:	1f 4f       	sbci	r17, 0xFF	; 255
     e94:	0f 73       	andi	r16, 0x3F	; 63
     e96:	11 27       	eor	r17, r17
     e98:	e0 2e       	mov	r14, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:371

  //If the output buffer is full, there's nothing for it other than to
  //wait for the interrupt handler to empty it a bit (or emulate interrupts)
  while (i == _tx_buffer_tail)
     e9a:	89 8d       	ldd	r24, Y+25	; 0x19
     e9c:	8e 11       	cpse	r24, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:373
  {
    _poll_tx_data_empty();
     e9e:	03 c0       	rjmp	.+6      	; 0xea6 <UartClass::write(unsigned char)+0x86>
     ea0:	ce 01       	movw	r24, r28
     ea2:	b0 df       	rcall	.-160    	; 0xe04 <UartClass::_poll_tx_data_empty()>
     ea4:	fa cf       	rjmp	.-12     	; 0xe9a <UartClass::write(unsigned char)+0x7a>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:376
  }

  _tx_buffer[_tx_buffer_head] = c;
     ea6:	e8 8d       	ldd	r30, Y+24	; 0x18
     ea8:	ec 0f       	add	r30, r28
     eaa:	fd 2f       	mov	r31, r29
     eac:	f1 1d       	adc	r31, r1
     eae:	e3 5a       	subi	r30, 0xA3	; 163
     eb0:	ff 4f       	sbci	r31, 0xFF	; 255
     eb2:	f0 82       	st	Z, r15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:377
  _tx_buffer_head = i;
     eb4:	08 8f       	std	Y+24, r16	; 0x18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:380

  // Enable data "register empty interrupt"
  (*_hwserial_module).CTRLA |= USART_DREIE_bm;
     eb6:	ec 85       	ldd	r30, Y+12	; 0x0c
     eb8:	fd 85       	ldd	r31, Y+13	; 0x0d
     eba:	85 81       	ldd	r24, Z+5	; 0x05
     ebc:	80 62       	ori	r24, 0x20	; 32
     ebe:	cf cf       	rjmp	.-98     	; 0xe5e <UartClass::write(unsigned char)+0x3e>

00000ec0 <UartClass::flush()>:
flush():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:303
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void UartClass::flush()
{
     ec0:	cf 93       	push	r28
     ec2:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:307
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXCIF (transmit
  // complete) bit to 1 during initialization
  if (!_written)
     ec4:	fc 01       	movw	r30, r24
     ec6:	25 89       	ldd	r18, Z+21	; 0x15
     ec8:	22 23       	and	r18, r18
     eca:	c1 f0       	breq	.+48     	; 0xefc <UartClass::flush()+0x3c>
     ecc:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:314
    return;
  }

  //Check if we are inside an ISR already (e.g. connected to a different peripheral then UART), in which case the UART ISRs will not be called.
  //Temporarily elevate the DRE interrupt to allow it to run.
  if (CPUINT.STATUS & CPUINT_LVL0EX_bm)
     ece:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <__TEXT_REGION_LENGTH__+0x7f4111>
     ed2:	80 ff       	sbrs	r24, 0
     ed4:	08 c0       	rjmp	.+16     	; 0xee6 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:318
  {
    //Elevate the priority level of the Data Register Empty Interrupt vector
    //and copy whatever vector number that might be in the register already.
    _prev_lvl1_interrupt_vect = CPUINT.LVL1VEC;
     ed6:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
     eda:	84 8f       	std	Z+28, r24	; 0x1c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:319
    CPUINT.LVL1VEC = _hwserial_dre_interrupt_vect_num;
     edc:	82 8d       	ldd	r24, Z+26	; 0x1a
     ede:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__TEXT_REGION_LENGTH__+0x7f4113>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:321

    _hwserial_dre_interrupt_elevated = 1;
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	83 8f       	std	Z+27, r24	; 0x1b
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:325
  }

  // Spin until the data-register-empty-interrupt is disabled and TX complete interrupt flag is raised
  while (((*_hwserial_module).CTRLA & USART_DREIE_bm) || (!((*_hwserial_module).STATUS & USART_TXCIF_bm)))
     ee6:	ec 85       	ldd	r30, Y+12	; 0x0c
     ee8:	fd 85       	ldd	r31, Y+13	; 0x0d
     eea:	85 81       	ldd	r24, Z+5	; 0x05
     eec:	85 fd       	sbrc	r24, 5
     eee:	03 c0       	rjmp	.+6      	; 0xef6 <UartClass::flush()+0x36>
     ef0:	84 81       	ldd	r24, Z+4	; 0x04
     ef2:	86 fd       	sbrc	r24, 6
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:329
  {
    // If interrupts are globally disabled or the and DR empty interrupt is disabled,
    // poll the "data register empty" interrupt flag to prevent deadlock
    _poll_tx_data_empty();
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <UartClass::flush()+0x3c>
     ef6:	ce 01       	movw	r24, r28
     ef8:	85 df       	rcall	.-246    	; 0xe04 <UartClass::_poll_tx_data_empty()>
     efa:	f5 cf       	rjmp	.-22     	; 0xee6 <UartClass::flush()+0x26>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:333
  }
  // If we get here, nothing is queued anymore (DREIE is disabled) and
  // the hardware finished transmission (TXCIF is set).
}
     efc:	df 91       	pop	r29
     efe:	cf 91       	pop	r28
     f00:	08 95       	ret

00000f02 <serialEventRun()>:
serialEventRun():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:66
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	89 2b       	or	r24, r25
     f08:	49 f0       	breq	.+18     	; 0xf1c <serialEventRun()+0x1a>
     f0a:	80 e0       	ldi	r24, 0x00	; 0
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	89 2b       	or	r24, r25
     f10:	29 f0       	breq	.+10     	; 0xf1c <serialEventRun()+0x1a>
     f12:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f16:	81 11       	cpse	r24, r1
     f18:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:69
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	89 2b       	or	r24, r25
     f22:	49 f0       	breq	.+18     	; 0xf36 <serialEventRun()+0x34>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	89 2b       	or	r24, r25
     f2a:	29 f0       	breq	.+10     	; 0xf36 <serialEventRun()+0x34>
     f2c:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f30:	81 11       	cpse	r24, r1
     f32:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:72
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
     f36:	80 e0       	ldi	r24, 0x00	; 0
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	89 2b       	or	r24, r25
     f3c:	21 f0       	breq	.+8      	; 0xf46 <serialEventRun()+0x44>
     f3e:	dc de       	rcall	.-584    	; 0xcf8 <Serial2_available()>
     f40:	81 11       	cpse	r24, r1
     f42:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:75
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	89 2b       	or	r24, r25
     f4c:	49 f0       	breq	.+18     	; 0xf60 <serialEventRun()+0x5e>
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	89 2b       	or	r24, r25
     f54:	29 f0       	breq	.+10     	; 0xf60 <serialEventRun()+0x5e>
     f56:	0e 94 00 00 	call	0	; 0x0 <__TEXT_REGION_ORIGIN__>
     f5a:	81 11       	cpse	r24, r1
     f5c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:77
#endif
}
     f60:	08 95       	ret

00000f62 <UartClass::operator bool()>:
operator 3():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:174
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    using Print::write; // pull in write(str) and write(buf, size) from Print
    explicit operator bool() { return true; }
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	08 95       	ret

00000f66 <pinMode.part.1>:
pinMode.part.1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:29

#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	fc 01       	movw	r30, r24
     f6e:	eb 5b       	subi	r30, 0xBB	; 187
     f70:	f6 44       	sbci	r31, 0x46	; 70
     f72:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:33

  if ((bit_mask == NOT_A_PIN) || (mode > INPUT_PULLUP))
     f74:	2f 3f       	cpi	r18, 0xFF	; 255
     f76:	69 f0       	breq	.+26     	; 0xf92 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:36
    return;

  PORT_t *port = digitalPinToPortStruct(pin);
     f78:	fc 01       	movw	r30, r24
     f7a:	e4 5e       	subi	r30, 0xE4	; 228
     f7c:	f6 44       	sbci	r31, 0x46	; 70
     f7e:	a0 81       	ld	r26, Z
     f80:	30 e2       	ldi	r19, 0x20	; 32
     f82:	a3 9f       	mul	r26, r19
     f84:	d0 01       	movw	r26, r0
     f86:	11 24       	eor	r1, r1
     f88:	bc 5f       	subi	r27, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:40
  if (port == NULL)
    return;

  if (mode == OUTPUT)
     f8a:	61 30       	cpi	r22, 0x01	; 1
     f8c:	29 f4       	brne	.+10     	; 0xf98 <pinMode.part.1+0x32>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:43
  {
    /* Configure direction as output */
    port->DIRSET = bit_mask;
     f8e:	11 96       	adiw	r26, 0x01	; 1
     f90:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     f92:	df 91       	pop	r29
     f94:	cf 91       	pop	r28
     f96:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:48
    port->DIRSET = bit_mask;
  }
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
     f98:	8d 50       	subi	r24, 0x0D	; 13
     f9a:	97 44       	sbci	r25, 0x47	; 71
     f9c:	ec 01       	movw	r28, r24
     f9e:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     fa0:	ef 3f       	cpi	r30, 0xFF	; 255
     fa2:	81 f0       	breq	.+32     	; 0xfc4 <pinMode.part.1+0x5e>
     fa4:	cd 01       	movw	r24, r26
     fa6:	40 96       	adiw	r24, 0x10	; 16
     fa8:	e8 0f       	add	r30, r24
     faa:	f9 2f       	mov	r31, r25
     fac:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:53

    /* Save state */
    uint8_t status = SREG;
     fae:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:54
    cli();
     fb0:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:57

    /* Configure direction as input */
    port->DIRCLR = bit_mask;
     fb2:	12 96       	adiw	r26, 0x02	; 2
     fb4:	2c 93       	st	X, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     fb6:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:60

    /* Configure direction as input */
    port->DIRCLR = bit_mask;

    /* Configure pull-up resistor */
    if (mode == INPUT_PULLUP)
     fb8:	62 30       	cpi	r22, 0x02	; 2
     fba:	39 f4       	brne	.+14     	; 0xfca <pinMode.part.1+0x64>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:63
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
     fbc:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     fbe:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:73
    }

    /* Restore state */
    SREG = status;
     fc0:	9f bf       	out	0x3f, r25	; 63
     fc2:	e7 cf       	rjmp	.-50     	; 0xf92 <pinMode.part.1+0x2c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:50
  else
  { /* mode == INPUT or INPUT_PULLUP */

    uint8_t bit_pos = digitalPinToBitPosition(pin);
    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:69
    }
    else
    { /* mode == INPUT (no pullup) */

      /* Disable pull-up */
      *pin_ctrl_reg &= ~(PORT_PULLUPEN_bm);
     fc8:	f2 cf       	rjmp	.-28     	; 0xfae <pinMode.part.1+0x48>
     fca:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:31
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  uint8_t bit_mask = digitalPinToBitMask(pin);
     fcc:	f8 cf       	rjmp	.-16     	; 0xfbe <pinMode.part.1+0x58>

00000fce <pinMode>:
pinMode():
     fce:	89 32       	cpi	r24, 0x29	; 41
     fd0:	08 f4       	brcc	.+2      	; 0xfd4 <pinMode+0x6>
     fd2:	c9 cf       	rjmp	.-110    	; 0xf66 <pinMode.part.1>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:75
    }

    /* Restore state */
    SREG = status;
  }
}
     fd4:	08 95       	ret

00000fd6 <turnOffPWM.part.0>:
turnOffPWM.part.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	fc 01       	movw	r30, r24
     fda:	e6 53       	subi	r30, 0x36	; 54
     fdc:	f7 44       	sbci	r31, 0x47	; 71
     fde:	e0 81       	ld	r30, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:98
  if (timer == NOT_ON_TIMER)
     fe0:	ee 23       	and	r30, r30
     fe2:	19 f1       	breq	.+70     	; 0x102a <turnOffPWM.part.0+0x54>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:104
    return;

  uint8_t bit_pos;
  TCB_t *timerB;

  switch (timer)
     fe4:	e1 30       	cpi	r30, 0x01	; 1
     fe6:	21 f0       	breq	.+8      	; 0xff0 <turnOffPWM.part.0+0x1a>
     fe8:	00 f1       	brcs	.+64     	; 0x102a <turnOffPWM.part.0+0x54>
     fea:	e6 30       	cpi	r30, 0x06	; 6
     fec:	a8 f0       	brcs	.+42     	; 0x1018 <turnOffPWM.part.0+0x42>
     fee:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:109
  {
    /* TCA0 */
    case TIMERA0:
      /* Bit position will give output channel */
      bit_pos = digitalPinToBitPosition(pin);
     ff0:	8d 50       	subi	r24, 0x0D	; 13
     ff2:	97 44       	sbci	r25, 0x47	; 71
     ff4:	fc 01       	movw	r30, r24
     ff6:	20 81       	ld	r18, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:112

      /* Disable corresponding channel */
      if (bit_pos >= 3) ++bit_pos; /* Upper 3 bits are shifted by 1 */
     ff8:	23 30       	cpi	r18, 0x03	; 3
     ffa:	08 f0       	brcs	.+2      	; 0xffe <turnOffPWM.part.0+0x28>
     ffc:	2f 5f       	subi	r18, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:113
      TCA0.SPLIT.CTRLB &= ~(1 << (TCA_SPLIT_LCMP0EN_bp + bit_pos));
     ffe:	30 91 01 0a 	lds	r19, 0x0A01	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	01 c0       	rjmp	.+2      	; 0x100a <turnOffPWM.part.0+0x34>
    1008:	88 0f       	add	r24, r24
    100a:	2a 95       	dec	r18
    100c:	ea f7       	brpl	.-6      	; 0x1008 <turnOffPWM.part.0+0x32>
    100e:	80 95       	com	r24
    1010:	83 23       	and	r24, r19
    1012:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    1016:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:123
    case TIMERB0:
    case TIMERB1:
    case TIMERB2:
    case TIMERB3:

      timerB = (TCB_t *)&TCB0 + (timer - TIMERB0);
    1018:	80 e1       	ldi	r24, 0x10	; 16
    101a:	e8 9f       	mul	r30, r24
    101c:	f0 01       	movw	r30, r0
    101e:	11 24       	eor	r1, r1
    1020:	e0 5a       	subi	r30, 0xA0	; 160
    1022:	f5 4f       	sbci	r31, 0xF5	; 245
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:126

      /* Disable TCB compare channel */
      timerB->CTRLB &= ~(TCB_CCMPEN_bm);
    1024:	81 81       	ldd	r24, Z+1	; 0x01
    1026:	8f 7e       	andi	r24, 0xEF	; 239
    1028:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:132

      break;
    default:
      break;
  }
}
    102a:	08 95       	ret

0000102c <digitalWrite.part.2>:
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:134

void digitalWrite(uint8_t pin, uint8_t val)
    102c:	0f 93       	push	r16
    102e:	1f 93       	push	r17
    1030:	cf 93       	push	r28
    1032:	df 93       	push	r29
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    1034:	c8 2f       	mov	r28, r24
    1036:	d0 e0       	ldi	r29, 0x00	; 0
    1038:	fe 01       	movw	r30, r28
    103a:	eb 5b       	subi	r30, 0xBB	; 187
    103c:	f6 44       	sbci	r31, 0x46	; 70
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:138
  if (bit_mask == NOT_A_PIN)
    103e:	00 81       	ld	r16, Z
    1040:	0f 3f       	cpi	r16, 0xFF	; 255
    1042:	99 f0       	breq	.+38     	; 0x106a <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    1044:	16 2f       	mov	r17, r22
turnOffPWM():
    1046:	89 32       	cpi	r24, 0x29	; 41
    1048:	08 f4       	brcc	.+2      	; 0x104c <digitalWrite.part.2+0x20>
    104a:	c5 df       	rcall	.-118    	; 0xfd6 <turnOffPWM.part.0>
digitalWrite.part.2():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:150
  turnOffPWM(pin);

  /* Assuming the direction is already output !! */

  /* Get port */
  PORT_t *port = digitalPinToPortStruct(pin);
    104c:	fe 01       	movw	r30, r28
    104e:	e4 5e       	subi	r30, 0xE4	; 228
    1050:	f6 44       	sbci	r31, 0x46	; 70
    1052:	e0 81       	ld	r30, Z
    1054:	80 e2       	ldi	r24, 0x20	; 32
    1056:	e8 9f       	mul	r30, r24
    1058:	f0 01       	movw	r30, r0
    105a:	11 24       	eor	r1, r1
    105c:	fc 5f       	subi	r31, 0xFC	; 252
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:153

  /* Output direction */
  if (port->DIR & bit_mask)
    105e:	80 81       	ld	r24, Z
    1060:	80 23       	and	r24, r16
    1062:	51 f0       	breq	.+20     	; 0x1078 <digitalWrite.part.2+0x4c>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:156
  {
    /* Set output to value */
    if (val == LOW)
    1064:	11 11       	cpse	r17, r1
    1066:	06 c0       	rjmp	.+12     	; 0x1074 <digitalWrite.part.2+0x48>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:158
    { /* If LOW */
      port->OUTCLR = bit_mask;
    1068:	06 83       	std	Z+6, r16	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    106a:	df 91       	pop	r29
    106c:	cf 91       	pop	r28
    106e:	1f 91       	pop	r17
    1070:	0f 91       	pop	r16
    1072:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:167
      port->OUTTGL = bit_mask;
      /* If HIGH OR  > TOGGLE  */
    }
    else
    {
      port->OUTSET = bit_mask;
    1074:	05 83       	std	Z+5, r16	; 0x05
    1076:	f9 cf       	rjmp	.-14     	; 0x106a <digitalWrite.part.2+0x3e>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:180
    pull up is enabled if this function is called.
    Should we purposely implement this side effect?
    */

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);
    1078:	cd 50       	subi	r28, 0x0D	; 13
    107a:	d7 44       	sbci	r29, 0x47	; 71
    107c:	88 81       	ld	r24, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    107e:	30 97       	sbiw	r30, 0x00	; 0
    1080:	71 f0       	breq	.+28     	; 0x109e <digitalWrite.part.2+0x72>
    1082:	8f 3f       	cpi	r24, 0xFF	; 255
    1084:	61 f0       	breq	.+24     	; 0x109e <digitalWrite.part.2+0x72>
    1086:	70 96       	adiw	r30, 0x10	; 16
    1088:	e8 0f       	add	r30, r24
    108a:	f1 1d       	adc	r31, r1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:186

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    108c:	9f b7       	in	r25, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:187
    cli();
    108e:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192

    if (val == LOW)
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    1090:	80 81       	ld	r24, Z
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:189

    /* Save system status and disable interrupts */
    uint8_t status = SREG;
    cli();

    if (val == LOW)
    1092:	11 11       	cpse	r17, r1
    1094:	07 c0       	rjmp	.+14     	; 0x10a4 <digitalWrite.part.2+0x78>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:192
    {
      /* Disable pullup */
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    1096:	87 7f       	andi	r24, 0xF7	; 247
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    1098:	80 83       	st	Z, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:201
    }

    /* Restore system status */
    SREG = status;
    109a:	9f bf       	out	0x3f, r25	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:183

    /* Get bit position for getting pin ctrl reg */
    uint8_t bit_pos = digitalPinToBitPosition(pin);

    /* Calculate where pin control register is */
    volatile uint8_t *pin_ctrl_reg = getPINnCTRLregister(port, bit_pos);
    109c:	e6 cf       	rjmp	.-52     	; 0x106a <digitalWrite.part.2+0x3e>
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	e0 e0       	ldi	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:197
      *pin_ctrl_reg &= ~PORT_PULLUPEN_bm;
    }
    else
    {
      /* Enable pull-up */
      *pin_ctrl_reg |= PORT_PULLUPEN_bm;
    10a2:	f4 cf       	rjmp	.-24     	; 0x108c <digitalWrite.part.2+0x60>
    10a4:	88 60       	ori	r24, 0x08	; 8
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:137
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  /* Get bit mask for pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    10a6:	f8 cf       	rjmp	.-16     	; 0x1098 <digitalWrite.part.2+0x6c>

000010a8 <digitalWrite>:
digitalWrite():
    10a8:	89 32       	cpi	r24, 0x29	; 41
    10aa:	08 f4       	brcc	.+2      	; 0x10ae <digitalWrite+0x6>
    10ac:	bf cf       	rjmp	.-130    	; 0x102c <digitalWrite.part.2>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:203
    }

    /* Restore system status */
    SREG = status;
  }
}
    10ae:	08 95       	ret

000010b0 <OneButton::OneButton(int, int) [clone .constprop.71]>:
__base_ctor ():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:15

#include "OneButton.h"

// ----- Initialization and Default Values -----

OneButton::OneButton(int pin, int activeLow)
    10b0:	0f 93       	push	r16
    10b2:	1f 93       	push	r17
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	ec 01       	movw	r28, r24
    10ba:	16 2f       	mov	r17, r22
    10bc:	07 2f       	mov	r16, r23
    10be:	82 e3       	ldi	r24, 0x32	; 50
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:17
{
  pinMode(pin, INPUT);      // sets the MenuPin as input
    10c4:	9f 83       	std	Y+7, r25	; 0x07
    10c6:	60 e0       	ldi	r22, 0x00	; 0
    10c8:	81 2f       	mov	r24, r17
    10ca:	81 df       	rcall	.-254    	; 0xfce <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:18
  _pin = pin;
    10cc:	18 83       	st	Y, r17
    10ce:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:20

  _clickTicks = 600;        // number of millisec that have to pass by before a click is detected.
    10d0:	88 e5       	ldi	r24, 0x58	; 88
    10d2:	92 e0       	ldi	r25, 0x02	; 2
    10d4:	8a 83       	std	Y+2, r24	; 0x02
    10d6:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:21
  _pressTicks = 1000;       // number of millisec that have to pass by before a long button press is detected.
    10d8:	88 ee       	ldi	r24, 0xE8	; 232
    10da:	93 e0       	ldi	r25, 0x03	; 3
    10dc:	8c 83       	std	Y+4, r24	; 0x04
    10de:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:23
 
  _state = 0; // starting with state 0: waiting for button to be pressed
    10e0:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:24
  _isLongPressed = false;  // Keep track of long press state
    10e2:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:28

  if (activeLow) {
    // button connects ground to the pin when pressed.
    _buttonReleased = HIGH; // notPressed
    10e4:	1c 86       	std	Y+12, r1	; 0x0c
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	88 87       	std	Y+8, r24	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:29
    _buttonPressed = LOW;
    10ec:	99 87       	std	Y+9, r25	; 0x09
    10ee:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:30
    digitalWrite(pin, HIGH);   // turn on pullUp resistor
    10f0:	1b 86       	std	Y+11, r1	; 0x0b
    10f2:	61 e0       	ldi	r22, 0x01	; 1
    10f4:	81 2f       	mov	r24, r17
    10f6:	d8 df       	rcall	.-80     	; 0x10a8 <digitalWrite>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:39
    _buttonReleased = LOW;
    _buttonPressed = HIGH;
  } // if


  _doubleClickFunc = NULL;
    10f8:	1f 86       	std	Y+15, r1	; 0x0f
    10fa:	18 8a       	std	Y+16, r1	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:40
  _pressFunc = NULL;
    10fc:	19 8a       	std	Y+17, r1	; 0x11
    10fe:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:41
  _longPressStartFunc = NULL;
    1100:	1b 8a       	std	Y+19, r1	; 0x13
    1102:	1c 8a       	std	Y+20, r1	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:42
  _longPressStopFunc = NULL;
    1104:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:43
  _duringLongPressFunc = NULL;
    1106:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:44
} // OneButton
    1108:	1f 8a       	std	Y+23, r1	; 0x17
    110a:	18 8e       	std	Y+24, r1	; 0x18
    110c:	df 91       	pop	r29
    110e:	cf 91       	pop	r28
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:195
    digits2[3] = DIG2_4;
}

void Eclass:: cathode_high1()
{ 
    digitalWrite(CA_5, HIGH);
    1110:	1f 91       	pop	r17
    1112:	0f 91       	pop	r16
    1114:	08 95       	ret

00001116 <Eclass::cathode_high1() [clone .constprop.6]>:
cathode_high1():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:196
    digitalWrite(CA_6, HIGH);
    1116:	61 e0       	ldi	r22, 0x01	; 1
    1118:	8b e0       	ldi	r24, 0x0B	; 11
    111a:	c6 df       	rcall	.-116    	; 0x10a8 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:197
    digitalWrite(CA_7, HIGH);
    111c:	61 e0       	ldi	r22, 0x01	; 1
    111e:	8a e0       	ldi	r24, 0x0A	; 10
    1120:	c3 df       	rcall	.-122    	; 0x10a8 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:198
    digitalWrite(CA_8, HIGH);
    1122:	61 e0       	ldi	r22, 0x01	; 1
    1124:	89 e0       	ldi	r24, 0x09	; 9
    1126:	c0 df       	rcall	.-128    	; 0x10a8 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:203
}

void Eclass:: cathode_high2()
{ 
    digitalWrite(CA_4, HIGH);
    1128:	61 e0       	ldi	r22, 0x01	; 1
    112a:	88 e0       	ldi	r24, 0x08	; 8
    112c:	bd cf       	rjmp	.-134    	; 0x10a8 <digitalWrite>

0000112e <Eclass::cathode_high2() [clone .constprop.4]>:
cathode_high2():
    112e:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:204
    digitalWrite(CA_3, HIGH);
    1130:	87 e0       	ldi	r24, 0x07	; 7
    1132:	ba df       	rcall	.-140    	; 0x10a8 <digitalWrite>
    1134:	61 e0       	ldi	r22, 0x01	; 1
    1136:	86 e0       	ldi	r24, 0x06	; 6
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:205
    digitalWrite(CA_2, HIGH);
    1138:	b7 df       	rcall	.-146    	; 0x10a8 <digitalWrite>
    113a:	61 e0       	ldi	r22, 0x01	; 1
    113c:	85 e0       	ldi	r24, 0x05	; 5
    113e:	b4 df       	rcall	.-152    	; 0x10a8 <digitalWrite>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/led.cpp:206
    digitalWrite(CA_1, HIGH);
    1140:	61 e0       	ldi	r22, 0x01	; 1
    1142:	84 e0       	ldi	r24, 0x04	; 4
    1144:	b1 cf       	rjmp	.-158    	; 0x10a8 <digitalWrite>

00001146 <UartClass::begin(unsigned long, unsigned int)>:
begin():
    1146:	af 92       	push	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:180
    return false;
  }
}

void UartClass::begin(unsigned long baud, uint16_t config)
{
    1148:	bf 92       	push	r11
    114a:	cf 92       	push	r12
    114c:	df 92       	push	r13
    114e:	ef 92       	push	r14
    1150:	ff 92       	push	r15
    1152:	0f 93       	push	r16
    1154:	1f 93       	push	r17
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29
    115a:	ec 01       	movw	r28, r24
    115c:	6a 01       	movw	r12, r20
    115e:	7b 01       	movw	r14, r22
    1160:	a2 2e       	mov	r10, r18
    1162:	8d 89       	ldd	r24, Y+21	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:183
  // Make sure no transmissions are ongoing and USART is disabled in case begin() is called by accident
  // without first calling end()
  if (_written)
    1164:	88 23       	and	r24, r24
    1166:	39 f0       	breq	.+14     	; 0x1176 <UartClass::begin(unsigned long, unsigned int)+0x30>
    1168:	e8 81       	ld	r30, Y
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:185
  {
    this->end();
    116a:	f9 81       	ldd	r31, Y+1	; 0x01
    116c:	06 88       	ldd	r0, Z+22	; 0x16
    116e:	f7 89       	ldd	r31, Z+23	; 0x17
    1170:	e0 2d       	mov	r30, r0
    1172:	ce 01       	movw	r24, r28
    1174:	09 95       	icall
    1176:	0c 89       	ldd	r16, Y+20	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:188
  }

  struct UartPinSet *set = &_hw_set[_pin_set];
    1178:	10 e0       	ldi	r17, 0x00	; 0
    117a:	bf b6       	in	r11, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:193

  int32_t baud_setting = 0;

  //Make sure global interrupts are disabled during initialization
  uint8_t oldSREG = SREG;
    117c:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:194
  cli();
    117e:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:196

  baud_setting = (((8 * F_CPU) / baud) + 1) / 2;
    1180:	70 e2       	ldi	r23, 0x20	; 32
    1182:	81 ea       	ldi	r24, 0xA1	; 161
    1184:	97 e0       	ldi	r25, 0x07	; 7
    1186:	a7 01       	movw	r20, r14
    1188:	96 01       	movw	r18, r12
    118a:	0e 94 c8 3b 	call	0x7790	; 0x7790 <__udivmodsi4>
    118e:	69 01       	movw	r12, r18
    1190:	7a 01       	movw	r14, r20
    1192:	8f ef       	ldi	r24, 0xFF	; 255
    1194:	c8 1a       	sub	r12, r24
    1196:	d8 0a       	sbc	r13, r24
    1198:	e8 0a       	sbc	r14, r24
    119a:	f8 0a       	sbc	r15, r24
    119c:	f6 94       	lsr	r15
    119e:	e7 94       	ror	r14
    11a0:	d7 94       	ror	r13
    11a2:	c7 94       	ror	r12
    11a4:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:198
  // Disable CLK2X
  (*_hwserial_module).CTRLB &= (~USART_RXMODE_CLK2X_gc);
    11a6:	fd 85       	ldd	r31, Y+13	; 0x0d
    11a8:	86 81       	ldd	r24, Z+6	; 0x06
    11aa:	8d 7f       	andi	r24, 0xFD	; 253
    11ac:	86 83       	std	Z+6, r24	; 0x06
    11ae:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:199
  (*_hwserial_module).CTRLB |= USART_RXMODE_NORMAL_gc;
    11b0:	fd 85       	ldd	r31, Y+13	; 0x0d
    11b2:	86 81       	ldd	r24, Z+6	; 0x06
    11b4:	86 83       	std	Z+6, r24	; 0x06
    11b6:	1d 8a       	std	Y+21, r1	; 0x15
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:201

  _written = false;
    11b8:	a0 91 23 11 	lds	r26, 0x1123	; 0x801123 <__TEXT_REGION_LENGTH__+0x7f5123>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:210
// Use error compensation if internal oscillator is used
#if !defined(USE_EXTERNAL_OSCILLATOR)
#if F_CPU == 20000000L
  sigrow_val = SIGROW.OSC20ERR5V;
#else
  sigrow_val = SIGROW.OSC16ERR5V;
    11bc:	0a 2e       	mov	r0, r26
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    11be:	00 0c       	add	r0, r0
    11c0:	bb 0b       	sbc	r27, r27
    11c2:	a7 01       	movw	r20, r14
    11c4:	96 01       	movw	r18, r12
    11c6:	0e 94 1c 3c 	call	0x7838	; 0x7838 <__mulshisi3>
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	34 e0       	ldi	r19, 0x04	; 4
    11ce:	40 e0       	ldi	r20, 0x00	; 0
    11d0:	50 e0       	ldi	r21, 0x00	; 0
    11d2:	0e 94 ea 3b 	call	0x77d4	; 0x77d4 <__divmodsi4>
    11d6:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    11d8:	fd 85       	ldd	r31, Y+13	; 0x0d
    11da:	c2 0e       	add	r12, r18
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:214
#else
  sigrow_val = SIGROW.OSC16ERR5V;
#endif
#endif

  baud_setting += (baud_setting * sigrow_val) / 1024;
    11dc:	d3 1e       	adc	r13, r19
    11de:	e4 1e       	adc	r14, r20
    11e0:	f5 1e       	adc	r15, r21
    11e2:	c0 86       	std	Z+8, r12	; 0x08
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:217

  // assign the baud_setting, a.k.a. BAUD (USART Baud Rate Register)
  (*_hwserial_module).BAUD = (uint16_t)baud_setting;
    11e4:	d1 86       	std	Z+9, r13	; 0x09
    11e6:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:220

  // Set USART mode of operation
  (*_hwserial_module).CTRLC = config;
    11e8:	fd 85       	ldd	r31, Y+13	; 0x0d
    11ea:	a7 82       	std	Z+7, r10	; 0x07
    11ec:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:223

  // Enable transmitter and receiver
  (*_hwserial_module).CTRLB |= (USART_RXEN_bm | USART_TXEN_bm);
    11ee:	fd 85       	ldd	r31, Y+13	; 0x0d
    11f0:	86 81       	ldd	r24, Z+6	; 0x06
    11f2:	80 6c       	ori	r24, 0xC0	; 192
    11f4:	86 83       	std	Z+6, r24	; 0x06
    11f6:	ec 85       	ldd	r30, Y+12	; 0x0c
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:225

  (*_hwserial_module).CTRLA |= USART_RXCIE_bm;
    11f8:	fd 85       	ldd	r31, Y+13	; 0x0d
    11fa:	85 81       	ldd	r24, Z+5	; 0x05
    11fc:	80 68       	ori	r24, 0x80	; 128
    11fe:	85 83       	std	Z+5, r24	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:228

  // Let PORTMUX point to alternative UART pins as requested
  PORTMUX.USARTROUTEA = set->mux | (PORTMUX.USARTROUTEA & ~_hw_set[1].mux);
    1200:	90 91 e2 05 	lds	r25, 0x05E2	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1204:	8b 89       	ldd	r24, Y+19	; 0x13
    1206:	80 95       	com	r24
    1208:	89 23       	and	r24, r25
    120a:	98 01       	movw	r18, r16
    120c:	22 0f       	add	r18, r18
    120e:	33 1f       	adc	r19, r19
    1210:	02 0f       	add	r16, r18
    1212:	13 1f       	adc	r17, r19
    1214:	c0 0f       	add	r28, r16
    1216:	d1 1f       	adc	r29, r17
    1218:	98 89       	ldd	r25, Y+16	; 0x10
    121a:	89 2b       	or	r24, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:231

  // Set pin state for swapped UART pins
  pinMode(set->rx_pin, INPUT_PULLUP);
    121c:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
    1220:	62 e0       	ldi	r22, 0x02	; 2
    1222:	8e 85       	ldd	r24, Y+14	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:232
  digitalWrite(set->tx_pin, HIGH);
    1224:	d4 de       	rcall	.-600    	; 0xfce <pinMode>
    1226:	61 e0       	ldi	r22, 0x01	; 1
    1228:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:233
  pinMode(set->tx_pin, OUTPUT);
    122a:	3e df       	rcall	.-388    	; 0x10a8 <digitalWrite>
    122c:	61 e0       	ldi	r22, 0x01	; 1
    122e:	8f 85       	ldd	r24, Y+15	; 0x0f
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:236

  // Restore SREG content
  SREG = oldSREG;
    1230:	ce de       	rcall	.-612    	; 0xfce <pinMode>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.cpp:237
}
    1232:	bf be       	out	0x3f, r11	; 63
    1234:	df 91       	pop	r29
    1236:	cf 91       	pop	r28
    1238:	1f 91       	pop	r17
    123a:	0f 91       	pop	r16
    123c:	ff 90       	pop	r15
    123e:	ef 90       	pop	r14
    1240:	df 90       	pop	r13
    1242:	cf 90       	pop	r12
    1244:	bf 90       	pop	r11
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Procss.cpp:1258
             break;                 
      }      
  }  
}

void Pclass :: ALL_LED_OFF()
    1246:	af 90       	pop	r10
    1248:	08 95       	ret

0000124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>:
digitalWrite():
    124a:	61 e0       	ldi	r22, 0x01	; 1
    124c:	8a e1       	ldi	r24, 0x1A	; 26
    124e:	ee de       	rcall	.-548    	; 0x102c <digitalWrite.part.2>
    1250:	61 e0       	ldi	r22, 0x01	; 1
    1252:	8d e1       	ldi	r24, 0x1D	; 29
    1254:	eb de       	rcall	.-554    	; 0x102c <digitalWrite.part.2>
    1256:	61 e0       	ldi	r22, 0x01	; 1
    1258:	8c e1       	ldi	r24, 0x1C	; 28
    125a:	e8 de       	rcall	.-560    	; 0x102c <digitalWrite.part.2>
    125c:	61 e0       	ldi	r22, 0x01	; 1
    125e:	8b e1       	ldi	r24, 0x1B	; 27
    1260:	e5 ce       	rjmp	.-566    	; 0x102c <digitalWrite.part.2>

00001262 <digitalRead.part.3>:
digitalRead.part.3():
    1262:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:227
    vport->OUT &= ~mask;
  else // CHANGE
    vport->IN = mask;
}

uint8_t digitalRead(uint8_t pin)
    1264:	1f 93       	push	r17
    1266:	cf 93       	push	r28
    1268:	08 2f       	mov	r16, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    126a:	10 e0       	ldi	r17, 0x00	; 0
    126c:	f8 01       	movw	r30, r16
    126e:	eb 5b       	subi	r30, 0xBB	; 187
    1270:	f6 44       	sbci	r31, 0x46	; 70
    1272:	c0 81       	ld	r28, Z
    1274:	cf 3f       	cpi	r28, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:231
  if (bit_mask == NOT_A_PIN)
    1276:	81 f0       	breq	.+32     	; 0x1298 <digitalRead.part.3+0x36>
turnOffPWM():
    1278:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:97
static void turnOffPWM(uint8_t pin)
{
  /* Actually turn off compare channel, not the timer */

  /* Get pin's timer */
  uint8_t timer = digitalPinToTimer(pin);
    127a:	08 f4       	brcc	.+2      	; 0x127e <digitalRead.part.3+0x1c>
    127c:	ac de       	rcall	.-680    	; 0xfd6 <turnOffPWM.part.0>
digitalRead.part.3():
    127e:	f8 01       	movw	r30, r16
    1280:	e4 5e       	subi	r30, 0xE4	; 228
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:239
  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  turnOffPWM(pin);

  /* Get port and check valid port */
  PORT_t *port = digitalPinToPortStruct(pin);
    1282:	f6 44       	sbci	r31, 0x46	; 70
    1284:	e0 81       	ld	r30, Z
    1286:	80 e2       	ldi	r24, 0x20	; 32
    1288:	e8 9f       	mul	r30, r24
    128a:	f0 01       	movw	r30, r0
    128c:	11 24       	eor	r1, r1
    128e:	fc 5f       	subi	r31, 0xFC	; 252
    1290:	80 85       	ldd	r24, Z+8	; 0x08
    1292:	c8 23       	and	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:242

  /* Read pin value from PORTx.IN register */
  if (port->IN & bit_mask)
    1294:	81 e0       	ldi	r24, 0x01	; 1
    1296:	09 f4       	brne	.+2      	; 0x129a <digitalRead.part.3+0x38>
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	cf 91       	pop	r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
  if (bit_mask == NOT_A_PIN)
    return LOW;
    129c:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:248
    return HIGH;
  else
    return LOW;

  return LOW;
}
    129e:	0f 91       	pop	r16
    12a0:	08 95       	ret

000012a2 <micros>:
micros():
    12a2:	8f b7       	in	r24, 0x3f	; 63
    12a4:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:103
{
  uint32_t m;
  uint16_t t;

  /* Save current state and disable interrupts */
  uint8_t status = SREG;
    12a6:	20 91 3d 28 	lds	r18, 0x283D	; 0x80283d <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:107
  cli();

  /* Get current number of millis (i.e. overflows) and timer count */
  m = timer_millis;
    12aa:	30 91 3e 28 	lds	r19, 0x283E	; 0x80283e <timer_millis+0x1>
    12ae:	40 91 3f 28 	lds	r20, 0x283F	; 0x80283f <timer_millis+0x2>
    12b2:	50 91 40 28 	lds	r21, 0x2840	; 0x802840 <timer_millis+0x3>
    12b6:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:108
  t = _timer->CNT;
    12ba:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12be:	90 91 a6 0a 	lds	r25, 0x0AA6	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:112

  /* If the timer overflow flag is raised, we just missed it,
  increment to account for it, & read new ticks */
  if (_timer->INTFLAGS & TCB_CAPT_bm)
    12c2:	90 ff       	sbrs	r25, 0
    12c4:	08 c0       	rjmp	.+16     	; 0x12d6 <micros+0x34>
    12c6:	2f 5f       	subi	r18, 0xFF	; 255
    12c8:	3f 4f       	sbci	r19, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:114
  {
    m++;
    12ca:	4f 4f       	sbci	r20, 0xFF	; 255
    12cc:	5f 4f       	sbci	r21, 0xFF	; 255
    12ce:	e0 91 aa 0a 	lds	r30, 0x0AAA	; 0x800aaa <__TEXT_REGION_LENGTH__+0x7f4aaa>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:115
    t = _timer->CNT;
    12d2:	f0 91 ab 0a 	lds	r31, 0x0AAB	; 0x800aab <__TEXT_REGION_LENGTH__+0x7f4aab>
    12d6:	8f bf       	out	0x3f, r24	; 63
    12d8:	a8 ee       	ldi	r26, 0xE8	; 232
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:119
  }

  // Restore SREG
  SREG = status;
    12da:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:125

#if (F_CPU == 20000000L)
  t = t >> 4;
  return m * 1000 + (t - (t >> 2) + (t >> 4) - (t >> 6));
#elif (F_CPU == 16000000L)
  return m * 1000 + (t >> 4);
    12dc:	0e 94 12 3c 	call	0x7824	; 0x7824 <__muluhisi3>
    12e0:	24 e0       	ldi	r18, 0x04	; 4
    12e2:	f6 95       	lsr	r31
    12e4:	e7 95       	ror	r30
    12e6:	2a 95       	dec	r18
    12e8:	e1 f7       	brne	.-8      	; 0x12e2 <micros+0x40>
    12ea:	6e 0f       	add	r22, r30
    12ec:	7f 1f       	adc	r23, r31
    12ee:	81 1d       	adc	r24, r1
    12f0:	91 1d       	adc	r25, r1
    12f2:	08 95       	ret

000012f4 <millis>:
millis():
    12f4:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:143
#elif (F_CPU == 1000000L)
  return m * 1000 + t;
#else
  return 0;
#endif
}
    12f6:	f8 94       	cli
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:87
{
  unsigned long m;

  // disable interrupts while we read timer0_millis or we might get an
  // inconsistent value (e.g. in the middle of a write to timer_millis)
  uint8_t status = SREG;
    12f8:	60 91 3d 28 	lds	r22, 0x283D	; 0x80283d <timer_millis>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:90
  cli();

  m = timer_millis;
    12fc:	70 91 3e 28 	lds	r23, 0x283E	; 0x80283e <timer_millis+0x1>
    1300:	80 91 3f 28 	lds	r24, 0x283F	; 0x80283f <timer_millis+0x2>
    1304:	90 91 40 28 	lds	r25, 0x2840	; 0x802840 <timer_millis+0x3>
    1308:	2f bf       	out	0x3f, r18	; 63
    130a:	08 95       	ret

0000130c <Lclass::PID_callingg() [clone .constprop.51]>:
PID_callingg():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:92

  SREG = status;
    130c:	0f 93       	push	r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring.c:95

  return m;
}
    130e:	1f 93       	push	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:35
void PID_RUN()
{
   myPID.Compute();  
}

void Lclass ::PID_callingg()
    1310:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:37
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
    1314:	81 11       	cpse	r24, r1
    1316:	80 c0       	rjmp	.+256    	; 0x1418 <Lclass::PID_callingg() [clone .constprop.51]+0x10c>
    1318:	80 91 f6 28 	lds	r24, 0x28F6	; 0x8028f6 <TEMP_DEG>
    131c:	90 91 f7 28 	lds	r25, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    1320:	a0 91 f8 28 	lds	r26, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    1324:	b0 91 f9 28 	lds	r27, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    1328:	80 93 fa 29 	sts	0x29FA, r24	; 0x8029fa <PID_INPUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:38
  else               PID_INPUT = TEMP_DEG_RAW;
    132c:	90 93 fb 29 	sts	0x29FB, r25	; 0x8029fb <PID_INPUT+0x1>
    1330:	a0 93 fc 29 	sts	0x29FC, r26	; 0x8029fc <PID_INPUT+0x2>
    1334:	b0 93 fd 29 	sts	0x29FD, r27	; 0x8029fd <PID_INPUT+0x3>
    1338:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <select_heating_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:43


//-------------------------------------------------------Slow_Heating-------------------------------------------------------------//

if(select_heating_type==0)
    133c:	81 11       	cpse	r24, r1
    133e:	8b c0       	rjmp	.+278    	; 0x1456 <Lclass::PID_callingg() [clone .constprop.51]+0x14a>
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:48
{
//        Serial2.println("Product Slow");
        if(PID_SETPOINT < 51)
          {
            Kp= 25; Ki=0.010; Kd=850;    
    1344:	a8 ec       	ldi	r26, 0xC8	; 200
    1346:	b1 e4       	ldi	r27, 0x41	; 65
    1348:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    134c:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1350:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    1354:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    1358:	8a e0       	ldi	r24, 0x0A	; 10
    135a:	97 ed       	ldi	r25, 0xD7	; 215
    135c:	a3 e2       	ldi	r26, 0x23	; 35
    135e:	bc e3       	ldi	r27, 0x3C	; 60
    1360:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    1364:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    1368:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    136c:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	90 e8       	ldi	r25, 0x80	; 128
    1374:	a4 e5       	ldi	r26, 0x54	; 84
    1376:	b4 e4       	ldi	r27, 0x44	; 68
    1378:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    137c:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    1380:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    1384:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:49
            myPID.SetTunings(Kp, Ki, Kd);    
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	88 ec       	ldi	r24, 0xC8	; 200
    138e:	91 e4       	ldi	r25, 0x41	; 65
    1390:	16 da       	rcall	.-3028   	; 0x7be <PID::SetTunings(double, double, double) [clone .constprop.52]>
    1392:	b0 df       	rcall	.-160    	; 0x12f4 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:57
          {
            Kp= 25; Ki=0.010; Kd=850;  
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    1394:	00 91 ed 28 	lds	r16, 0x28ED	; 0x8028ed <WINDOW_START_TIME>
    1398:	10 91 ee 28 	lds	r17, 0x28EE	; 0x8028ee <WINDOW_START_TIME+0x1>
    139c:	20 91 ef 28 	lds	r18, 0x28EF	; 0x8028ef <WINDOW_START_TIME+0x2>
    13a0:	30 91 f0 28 	lds	r19, 0x28F0	; 0x8028f0 <WINDOW_START_TIME+0x3>
    13a4:	ab 01       	movw	r20, r22
    13a6:	bc 01       	movw	r22, r24
    13a8:	40 1b       	sub	r20, r16
    13aa:	51 0b       	sbc	r21, r17
    13ac:	62 0b       	sbc	r22, r18
    13ae:	73 0b       	sbc	r23, r19
    13b0:	4d 34       	cpi	r20, 0x4D	; 77
    13b2:	54 40       	sbci	r21, 0x04	; 4
    13b4:	61 05       	cpc	r22, r1
    13b6:	71 05       	cpc	r23, r1
    13b8:	70 f0       	brcs	.+28     	; 0x13d6 <Lclass::PID_callingg() [clone .constprop.51]+0xca>
    13ba:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:58
                         WINDOW_START_TIME += WINDOW_SIZE;
    13bc:	c8 01       	movw	r24, r16
    13be:	84 5b       	subi	r24, 0xB4	; 180
    13c0:	9b 4f       	sbci	r25, 0xFB	; 251
    13c2:	af 4f       	sbci	r26, 0xFF	; 255
    13c4:	bf 4f       	sbci	r27, 0xFF	; 255
    13c6:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <WINDOW_START_TIME>
    13ca:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <WINDOW_START_TIME+0x1>
    13ce:	a0 93 ef 28 	sts	0x28EF, r26	; 0x8028ef <WINDOW_START_TIME+0x2>
    13d2:	b0 93 f0 28 	sts	0x28F0, r27	; 0x8028f0 <WINDOW_START_TIME+0x3>
    13d6:	8e df       	rcall	.-228    	; 0x12f4 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:62
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    13d8:	00 91 ed 28 	lds	r16, 0x28ED	; 0x8028ed <WINDOW_START_TIME>
    13dc:	10 91 ee 28 	lds	r17, 0x28EE	; 0x8028ee <WINDOW_START_TIME+0x1>
    13e0:	20 91 ef 28 	lds	r18, 0x28EF	; 0x8028ef <WINDOW_START_TIME+0x2>
    13e4:	30 91 f0 28 	lds	r19, 0x28F0	; 0x8028f0 <WINDOW_START_TIME+0x3>
    13e8:	60 1b       	sub	r22, r16
    13ea:	71 0b       	sbc	r23, r17
    13ec:	82 0b       	sbc	r24, r18
    13ee:	93 0b       	sbc	r25, r19
    13f0:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
    13f4:	20 91 f6 29 	lds	r18, 0x29F6	; 0x8029f6 <PID_OUTPUT>
    13f8:	30 91 f7 29 	lds	r19, 0x29F7	; 0x8029f7 <PID_OUTPUT+0x1>
    13fc:	40 91 f8 29 	lds	r20, 0x29F8	; 0x8029f8 <PID_OUTPUT+0x2>
    1400:	50 91 f9 29 	lds	r21, 0x29F9	; 0x8029f9 <PID_OUTPUT+0x3>
    1404:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    1408:	18 16       	cp	r1, r24
    140a:	7c f4       	brge	.+30     	; 0x142a <Lclass::PID_callingg() [clone .constprop.51]+0x11e>
digitalWrite():
    140c:	60 e0       	ldi	r22, 0x00	; 0
    140e:	88 e1       	ldi	r24, 0x18	; 24
    1410:	0d de       	rcall	.-998    	; 0x102c <digitalWrite.part.2>
PID_callingg():
    1412:	1f 91       	pop	r17
    1414:	0f 91       	pop	r16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    1416:	08 95       	ret
    1418:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:38
}

void Lclass ::PID_callingg()
{
  if(!LONG_PRESS)    PID_INPUT = TEMP_DEG;
  else               PID_INPUT = TEMP_DEG_RAW;
    141c:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    1420:	a0 91 f4 28 	lds	r26, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    1424:	b0 91 f5 28 	lds	r27, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    1428:	7f cf       	rjmp	.-258    	; 0x1328 <Lclass::PID_callingg() [clone .constprop.51]+0x1c>
    142a:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:65
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    142e:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    1432:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    1436:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    143a:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    143e:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    1442:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    1446:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    144a:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    144e:	87 ff       	sbrs	r24, 7
    1450:	dd cf       	rjmp	.-70     	; 0x140c <Lclass::PID_callingg() [clone .constprop.51]+0x100>
digitalWrite():
    1452:	61 e0       	ldi	r22, 0x01	; 1
    1454:	dc cf       	rjmp	.-72     	; 0x140e <Lclass::PID_callingg() [clone .constprop.51]+0x102>
PID_callingg():
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:76
 
  {
//          Serial2.println("Product Fast");
            if(PID_SETPOINT < 51)
          {
            Kp= 50; Ki=0.010; Kd=850;  //Ring Heater <51 
    145a:	a8 e4       	ldi	r26, 0x48	; 72
    145c:	b2 e4       	ldi	r27, 0x42	; 66
    145e:	80 93 0b 28 	sts	0x280B, r24	; 0x80280b <Kp>
    1462:	90 93 0c 28 	sts	0x280C, r25	; 0x80280c <Kp+0x1>
    1466:	a0 93 0d 28 	sts	0x280D, r26	; 0x80280d <Kp+0x2>
    146a:	b0 93 0e 28 	sts	0x280E, r27	; 0x80280e <Kp+0x3>
    146e:	8a e0       	ldi	r24, 0x0A	; 10
    1470:	97 ed       	ldi	r25, 0xD7	; 215
    1472:	a3 e2       	ldi	r26, 0x23	; 35
    1474:	bc e3       	ldi	r27, 0x3C	; 60
    1476:	80 93 0f 28 	sts	0x280F, r24	; 0x80280f <Ki>
    147a:	90 93 10 28 	sts	0x2810, r25	; 0x802810 <Ki+0x1>
    147e:	a0 93 11 28 	sts	0x2811, r26	; 0x802811 <Ki+0x2>
    1482:	b0 93 12 28 	sts	0x2812, r27	; 0x802812 <Ki+0x3>
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	90 e8       	ldi	r25, 0x80	; 128
    148a:	a4 e5       	ldi	r26, 0x54	; 84
    148c:	b4 e4       	ldi	r27, 0x44	; 68
    148e:	80 93 13 28 	sts	0x2813, r24	; 0x802813 <Kd>
    1492:	90 93 14 28 	sts	0x2814, r25	; 0x802814 <Kd+0x1>
    1496:	a0 93 15 28 	sts	0x2815, r26	; 0x802815 <Kd+0x2>
    149a:	b0 93 16 28 	sts	0x2816, r27	; 0x802816 <Kd+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:77
            myPID.SetTunings(Kp, Ki, Kd);    
    149e:	60 e0       	ldi	r22, 0x00	; 0
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	88 e4       	ldi	r24, 0x48	; 72
    14a4:	92 e4       	ldi	r25, 0x42	; 66
    14a6:	8b d9       	rcall	.-3306   	; 0x7be <PID::SetTunings(double, double, double) [clone .constprop.52]>
    14a8:	25 df       	rcall	.-438    	; 0x12f4 <millis>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:85
          {
            Kp= 50; Ki=0.010; Kd=850;  //Ring Heater >51    
            myPID.SetTunings(Kp, Ki, Kd);        
          }   
          
          if (millis() - WINDOW_START_TIME > WINDOW_SIZE)
    14aa:	00 91 ed 28 	lds	r16, 0x28ED	; 0x8028ed <WINDOW_START_TIME>
    14ae:	10 91 ee 28 	lds	r17, 0x28EE	; 0x8028ee <WINDOW_START_TIME+0x1>
    14b2:	20 91 ef 28 	lds	r18, 0x28EF	; 0x8028ef <WINDOW_START_TIME+0x2>
    14b6:	30 91 f0 28 	lds	r19, 0x28F0	; 0x8028f0 <WINDOW_START_TIME+0x3>
    14ba:	ab 01       	movw	r20, r22
    14bc:	bc 01       	movw	r22, r24
    14be:	40 1b       	sub	r20, r16
    14c0:	51 0b       	sbc	r21, r17
    14c2:	62 0b       	sbc	r22, r18
    14c4:	73 0b       	sbc	r23, r19
    14c6:	4d 34       	cpi	r20, 0x4D	; 77
    14c8:	54 40       	sbci	r21, 0x04	; 4
    14ca:	61 05       	cpc	r22, r1
    14cc:	71 05       	cpc	r23, r1
    14ce:	70 f0       	brcs	.+28     	; 0x14ec <Lclass::PID_callingg() [clone .constprop.51]+0x1e0>
    14d0:	d9 01       	movw	r26, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:86
                         WINDOW_START_TIME += WINDOW_SIZE;
    14d2:	c8 01       	movw	r24, r16
    14d4:	84 5b       	subi	r24, 0xB4	; 180
    14d6:	9b 4f       	sbci	r25, 0xFB	; 251
    14d8:	af 4f       	sbci	r26, 0xFF	; 255
    14da:	bf 4f       	sbci	r27, 0xFF	; 255
    14dc:	80 93 ed 28 	sts	0x28ED, r24	; 0x8028ed <WINDOW_START_TIME>
    14e0:	90 93 ee 28 	sts	0x28EE, r25	; 0x8028ee <WINDOW_START_TIME+0x1>
    14e4:	a0 93 ef 28 	sts	0x28EF, r26	; 0x8028ef <WINDOW_START_TIME+0x2>
    14e8:	b0 93 f0 28 	sts	0x28F0, r27	; 0x8028f0 <WINDOW_START_TIME+0x3>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:90
        
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
    14ec:	03 df       	rcall	.-506    	; 0x12f4 <millis>
    14ee:	00 91 ed 28 	lds	r16, 0x28ED	; 0x8028ed <WINDOW_START_TIME>
    14f2:	10 91 ee 28 	lds	r17, 0x28EE	; 0x8028ee <WINDOW_START_TIME+0x1>
    14f6:	20 91 ef 28 	lds	r18, 0x28EF	; 0x8028ef <WINDOW_START_TIME+0x2>
    14fa:	30 91 f0 28 	lds	r19, 0x28F0	; 0x8028f0 <WINDOW_START_TIME+0x3>
    14fe:	60 1b       	sub	r22, r16
    1500:	71 0b       	sbc	r23, r17
    1502:	82 0b       	sbc	r24, r18
    1504:	93 0b       	sbc	r25, r19
    1506:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
    150a:	20 91 f6 29 	lds	r18, 0x29F6	; 0x8029f6 <PID_OUTPUT>
    150e:	30 91 f7 29 	lds	r19, 0x29F7	; 0x8029f7 <PID_OUTPUT+0x1>
    1512:	40 91 f8 29 	lds	r20, 0x29F8	; 0x8029f8 <PID_OUTPUT+0x2>
    1516:	50 91 f9 29 	lds	r21, 0x29F9	; 0x8029f9 <PID_OUTPUT+0x3>
    151a:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    151e:	18 16       	cp	r1, r24
    1520:	2c f4       	brge	.+10     	; 0x152c <Lclass::PID_callingg() [clone .constprop.51]+0x220>
digitalWrite():
    1522:	60 e0       	ldi	r22, 0x00	; 0
    1524:	88 e1       	ldi	r24, 0x18	; 24
PID_callingg():
    1526:	1f 91       	pop	r17
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:100
          }
  }
  
//  */
//  digitalWrite(HEATER, HIGH);  //Check SSR Fail Error only validation
}
    1528:	0f 91       	pop	r16
digitalWrite():
    152a:	80 cd       	rjmp	.-1280   	; 0x102c <digitalWrite.part.2>
PID_callingg():
    152c:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:93
        //  /*        
         
          if (PID_OUTPUT < millis() - WINDOW_START_TIME)         digitalWrite(HEATER, LOW);    
          else 
          {
            if(PID_INPUT >= (float(PID_SETPOINT)))               digitalWrite(HEATER, LOW);    
    1530:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    1534:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    1538:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    153c:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    1540:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    1544:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    1548:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    154c:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    1550:	87 ff       	sbrs	r24, 7
    1552:	e7 cf       	rjmp	.-50     	; 0x1522 <Lclass::PID_callingg() [clone .constprop.51]+0x216>
digitalWrite():
    1554:	61 e0       	ldi	r22, 0x01	; 1
    1556:	e6 cf       	rjmp	.-52     	; 0x1524 <Lclass::PID_callingg() [clone .constprop.51]+0x218>

00001558 <Ticker::update()>:
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:71
	else diffTime = micros() - lastTime;
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:76
	if (tick()) callback();
	}

bool Ticker::tick() {
	if (!enabled)	return false;
    1560:	fc 01       	movw	r30, r24
    1562:	20 81       	ld	r18, Z
    1564:	22 23       	and	r18, r18
    1566:	09 f4       	brne	.+2      	; 0x156a <Ticker::update()+0x12>
    1568:	50 c0       	rjmp	.+160    	; 0x160a <Ticker::update()+0xb2>
    156a:	ec 01       	movw	r28, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:77
	if (resolution == MILLIS) {
    156c:	81 85       	ldd	r24, Z+9	; 0x09
    156e:	92 85       	ldd	r25, Z+10	; 0x0a
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	b9 f5       	brne	.+110    	; 0x15e2 <Ticker::update()+0x8a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:78
		if ((millis() - lastTime) >= timer) {
    1574:	bf de       	rcall	.-642    	; 0x12f4 <millis>
    1576:	0b 89       	ldd	r16, Y+19	; 0x13
    1578:	1c 89       	ldd	r17, Y+20	; 0x14
    157a:	2d 89       	ldd	r18, Y+21	; 0x15
    157c:	3e 89       	ldd	r19, Y+22	; 0x16
    157e:	60 1b       	sub	r22, r16
    1580:	71 0b       	sbc	r23, r17
    1582:	82 0b       	sbc	r24, r18
    1584:	93 0b       	sbc	r25, r19
    1586:	09 81       	ldd	r16, Y+1	; 0x01
    1588:	1a 81       	ldd	r17, Y+2	; 0x02
    158a:	2b 81       	ldd	r18, Y+3	; 0x03
    158c:	3c 81       	ldd	r19, Y+4	; 0x04
    158e:	60 17       	cp	r22, r16
    1590:	71 07       	cpc	r23, r17
    1592:	82 07       	cpc	r24, r18
    1594:	93 07       	cpc	r25, r19
    1596:	c8 f1       	brcs	.+114    	; 0x160a <Ticker::update()+0xb2>
    1598:	ad de       	rcall	.-678    	; 0x12f4 <millis>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:79
			lastTime = millis();
    159a:	6b 8b       	std	Y+19, r22	; 0x13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
			lastTime = micros();
    159c:	7c 8b       	std	Y+20, r23	; 0x14
    159e:	8d 8b       	std	Y+21, r24	; 0x15
    15a0:	9e 8b       	std	Y+22, r25	; 0x16
    15a2:	8b 85       	ldd	r24, Y+11	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:88
			if (repeat - counts == 1) enabled = false;
    15a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    15a6:	ad 85       	ldd	r26, Y+13	; 0x0d
    15a8:	be 85       	ldd	r27, Y+14	; 0x0e
    15aa:	4d 81       	ldd	r20, Y+5	; 0x05
    15ac:	5e 81       	ldd	r21, Y+6	; 0x06
    15ae:	6f 81       	ldd	r22, Y+7	; 0x07
    15b0:	78 85       	ldd	r23, Y+8	; 0x08
    15b2:	48 1b       	sub	r20, r24
    15b4:	59 0b       	sbc	r21, r25
    15b6:	6a 0b       	sbc	r22, r26
    15b8:	7b 0b       	sbc	r23, r27
    15ba:	41 30       	cpi	r20, 0x01	; 1
    15bc:	51 05       	cpc	r21, r1
    15be:	61 05       	cpc	r22, r1
    15c0:	71 05       	cpc	r23, r1
    15c2:	09 f4       	brne	.+2      	; 0x15c6 <Ticker::update()+0x6e>
    15c4:	18 82       	st	Y, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:89
			counts++;
    15c6:	01 96       	adiw	r24, 0x01	; 1
    15c8:	a1 1d       	adc	r26, r1
    15ca:	b1 1d       	adc	r27, r1
    15cc:	8b 87       	std	Y+11, r24	; 0x0b
    15ce:	9c 87       	std	Y+12, r25	; 0x0c
    15d0:	ad 87       	std	Y+13, r26	; 0x0d
    15d2:	be 87       	std	Y+14, r27	; 0x0e
update():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    15d4:	e9 89       	ldd	r30, Y+17	; 0x11
    15d6:	fa 89       	ldd	r31, Y+18	; 0x12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	}
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	1f 91       	pop	r17
    15de:	0f 91       	pop	r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:72
	enabled = false;
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
    15e0:	09 94       	ijmp
tick():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:86
			counts++;				
	  	return true;
			}
		}
	else {
		if ((micros() - lastTime) >= timer) {
    15e2:	5f de       	rcall	.-834    	; 0x12a2 <micros>
    15e4:	0b 89       	ldd	r16, Y+19	; 0x13
    15e6:	1c 89       	ldd	r17, Y+20	; 0x14
    15e8:	2d 89       	ldd	r18, Y+21	; 0x15
    15ea:	3e 89       	ldd	r19, Y+22	; 0x16
    15ec:	60 1b       	sub	r22, r16
    15ee:	71 0b       	sbc	r23, r17
    15f0:	82 0b       	sbc	r24, r18
    15f2:	93 0b       	sbc	r25, r19
    15f4:	09 81       	ldd	r16, Y+1	; 0x01
    15f6:	1a 81       	ldd	r17, Y+2	; 0x02
    15f8:	2b 81       	ldd	r18, Y+3	; 0x03
    15fa:	3c 81       	ldd	r19, Y+4	; 0x04
    15fc:	60 17       	cp	r22, r16
    15fe:	71 07       	cpc	r23, r17
    1600:	82 07       	cpc	r24, r18
    1602:	93 07       	cpc	r25, r19
    1604:	10 f0       	brcs	.+4      	; 0x160a <Ticker::update()+0xb2>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:87
			lastTime = micros();
    1606:	4d de       	rcall	.-870    	; 0x12a2 <micros>
    1608:	c8 cf       	rjmp	.-112    	; 0x159a <Ticker::update()+0x42>
update():
    160a:	df 91       	pop	r29
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:73
	status = PAUSED;
	}

void Ticker::update() {
	if (tick()) callback();
	}
    160c:	cf 91       	pop	r28
    160e:	1f 91       	pop	r17
    1610:	0f 91       	pop	r16
    1612:	08 95       	ret

00001614 <Ticker::start()>:
start():
    1614:	cf 93       	push	r28
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:40
	counts = 0;
	}

Ticker::~Ticker() {}

void Ticker::start() {
    1616:	df 93       	push	r29
    1618:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:41
	if (callback == NULL) return;
    161a:	21 89       	ldd	r18, Z+17	; 0x11
    161c:	32 89       	ldd	r19, Z+18	; 0x12
    161e:	23 2b       	or	r18, r19
    1620:	a1 f0       	breq	.+40     	; 0x164a <Ticker::start()+0x36>
    1622:	ec 01       	movw	r28, r24
    1624:	81 85       	ldd	r24, Z+9	; 0x09
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:42
	if (resolution == MILLIS) lastTime = millis();
    1626:	92 85       	ldd	r25, Z+10	; 0x0a
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	91 f4       	brne	.+36     	; 0x1650 <Ticker::start()+0x3c>
    162c:	63 de       	rcall	.-826    	; 0x12f4 <millis>
    162e:	6b 8b       	std	Y+19, r22	; 0x13
    1630:	7c 8b       	std	Y+20, r23	; 0x14
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
	else lastTime = micros();
    1632:	8d 8b       	std	Y+21, r24	; 0x15
    1634:	9e 8b       	std	Y+22, r25	; 0x16
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	88 83       	st	Y, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:44
	enabled = true;
    163a:	1b 86       	std	Y+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:45
	counts = 0;
    163c:	1c 86       	std	Y+12, r1	; 0x0c
    163e:	1d 86       	std	Y+13, r1	; 0x0d
    1640:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:46
	status = RUNNING;
    1642:	81 e0       	ldi	r24, 0x01	; 1
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	8f 87       	std	Y+15, r24	; 0x0f
    1648:	98 8b       	std	Y+16, r25	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:47
	}
    164a:	df 91       	pop	r29
    164c:	cf 91       	pop	r28
    164e:	08 95       	ret
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:43
Ticker::~Ticker() {}

void Ticker::start() {
	if (callback == NULL) return;
	if (resolution == MILLIS) lastTime = millis();
	else lastTime = micros();
    1650:	28 de       	rcall	.-944    	; 0x12a2 <micros>
    1652:	ed cf       	rjmp	.-38     	; 0x162e <Ticker::start()+0x1a>

00001654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>:
BUZZ_INTERVAL():
    1654:	dc 01       	movw	r26, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:62
  Blink_LED_ON.start();  
}

void Tclass :: BUZZ_INTERVAL(int i)
{
  BUZZ.interval(i);
    1656:	bc 01       	movw	r22, r24
    1658:	99 0f       	add	r25, r25
    165a:	88 0b       	sbc	r24, r24
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:97
		}
	return false;
	}

void Ticker::interval(uint32_t timer) {
	if (resolution == MICROS) timer = timer * 1000;
    165c:	99 0b       	sbc	r25, r25
interval():
    165e:	20 91 cd 2b 	lds	r18, 0x2BCD	; 0x802bcd <BUZZ+0x9>
    1662:	30 91 ce 2b 	lds	r19, 0x2BCE	; 0x802bce <BUZZ+0xa>
    1666:	23 2b       	or	r18, r19
    1668:	21 f4       	brne	.+8      	; 0x1672 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]+0x1e>
    166a:	28 ee       	ldi	r18, 0xE8	; 232
    166c:	33 e0       	ldi	r19, 0x03	; 3
    166e:	0e 94 0c 3c 	call	0x7818	; 0x7818 <__usmulhisi3>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:98
	this->timer = timer;
    1672:	60 93 c5 2b 	sts	0x2BC5, r22	; 0x802bc5 <BUZZ+0x1>
    1676:	70 93 c6 2b 	sts	0x2BC6, r23	; 0x802bc6 <BUZZ+0x2>
    167a:	80 93 c7 2b 	sts	0x2BC7, r24	; 0x802bc7 <BUZZ+0x3>
    167e:	90 93 c8 2b 	sts	0x2BC8, r25	; 0x802bc8 <BUZZ+0x4>
digitalWrite():
    1682:	61 e0       	ldi	r22, 0x01	; 1
    1684:	85 e1       	ldi	r24, 0x15	; 21
    1686:	d2 dc       	rcall	.-1628   	; 0x102c <digitalWrite.part.2>
BUZZ_INTERVAL():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:64
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
    1688:	84 ec       	ldi	r24, 0xC4	; 196
    168a:	9b e2       	ldi	r25, 0x2B	; 43
    168c:	c3 cf       	rjmp	.-122    	; 0x1614 <Ticker::start()>

0000168e <OneButton::tick()>:
tick():
    168e:	cf 92       	push	r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:104
bool OneButton::isLongPressed(){
  return _isLongPressed;
}

void OneButton::tick(void)
{
    1690:	df 92       	push	r13
    1692:	ef 92       	push	r14
    1694:	ff 92       	push	r15
    1696:	0f 93       	push	r16
    1698:	1f 93       	push	r17
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	ec 01       	movw	r28, r24
    16a0:	88 81       	ld	r24, Y
digitalRead():
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
  // Detect the input information 
  int buttonLevel = digitalRead(_pin); // current button signal.
    16a2:	89 32       	cpi	r24, 0x29	; 41
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:230
}

uint8_t digitalRead(uint8_t pin)
{
  /* Get bit mask and check valid pin */
  uint8_t bit_mask = digitalPinToBitMask(pin);
    16a4:	f8 f4       	brcc	.+62     	; 0x16e4 <OneButton::tick()+0x56>
    16a6:	dd dd       	rcall	.-1094   	; 0x1262 <digitalRead.part.3>
tick():
    16a8:	08 2f       	mov	r16, r24
    16aa:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:106
    16ac:	23 de       	rcall	.-954    	; 0x12f4 <millis>
    16ae:	29 8d       	ldd	r18, Y+25	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:107
  unsigned long now = millis(); // current (relative) time in msecs.
    16b0:	3a 8d       	ldd	r19, Y+26	; 0x1a
    16b2:	21 15       	cp	r18, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:110

  // Implementation of the state machine
  if (_state == 0) { // waiting for menu pin being pressed.
    16b4:	31 05       	cpc	r19, r1
    16b6:	c1 f4       	brne	.+48     	; 0x16e8 <OneButton::tick()+0x5a>
    16b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ba:	3b 85       	ldd	r19, Y+11	; 0x0b
    16bc:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:111
    if (buttonLevel == _buttonPressed) {
    16be:	31 07       	cpc	r19, r17
    16c0:	41 f4       	brne	.+16     	; 0x16d2 <OneButton::tick()+0x44>
    16c2:	21 e0       	ldi	r18, 0x01	; 1
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	29 8f       	std	Y+25, r18	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:112
      _state = 1; // step to state 1
    16c8:	3a 8f       	std	Y+26, r19	; 0x1a
    16ca:	6b 8f       	std	Y+27, r22	; 0x1b
    16cc:	7c 8f       	std	Y+28, r23	; 0x1c
    16ce:	8d 8f       	std	Y+29, r24	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:113
      _startTime = now; // remember starting time
    16d0:	9e 8f       	std	Y+30, r25	; 0x1e
    16d2:	df 91       	pop	r29
    16d4:	cf 91       	pop	r28
    16d6:	1f 91       	pop	r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    } // if  

  } // if  
} // OneButton.tick()
    16d8:	0f 91       	pop	r16
    16da:	ff 90       	pop	r15
    16dc:	ef 90       	pop	r14
    16de:	df 90       	pop	r13
    16e0:	cf 90       	pop	r12
    16e2:	08 95       	ret
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	e0 cf       	rjmp	.-64     	; 0x16a8 <OneButton::tick()+0x1a>
    16e8:	21 30       	cpi	r18, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_digital.c:232
  if (bit_mask == NOT_A_PIN)
    return LOW;
    16ea:	31 05       	cpc	r19, r1
    16ec:	09 f0       	breq	.+2      	; 0x16f0 <OneButton::tick()+0x62>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:116
    if (buttonLevel == _buttonPressed) {
      _state = 1; // step to state 1
      _startTime = now; // remember starting time
    } // if

  } else if (_state == 1) { // waiting for menu pin being released.
    16ee:	51 c0       	rjmp	.+162    	; 0x1792 <OneButton::tick()+0x104>
    16f0:	28 85       	ldd	r18, Y+8	; 0x08
    16f2:	39 85       	ldd	r19, Y+9	; 0x09
    16f4:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:118

    if ((buttonLevel == _buttonReleased) && ((unsigned long)(now - _startTime) < _debounceTicks)) {
    16f6:	31 07       	cpc	r19, r17
    16f8:	e9 f4       	brne	.+58     	; 0x1734 <OneButton::tick()+0xa6>
    16fa:	0b 8d       	ldd	r16, Y+27	; 0x1b
    16fc:	1c 8d       	ldd	r17, Y+28	; 0x1c
    16fe:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1700:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1702:	ab 01       	movw	r20, r22
    1704:	bc 01       	movw	r22, r24
    1706:	40 1b       	sub	r20, r16
    1708:	51 0b       	sbc	r21, r17
    170a:	62 0b       	sbc	r22, r18
    170c:	73 0b       	sbc	r23, r19
    170e:	8e 81       	ldd	r24, Y+6	; 0x06
    1710:	9f 81       	ldd	r25, Y+7	; 0x07
    1712:	09 2e       	mov	r0, r25
    1714:	00 0c       	add	r0, r0
    1716:	aa 0b       	sbc	r26, r26
    1718:	bb 0b       	sbc	r27, r27
    171a:	48 17       	cp	r20, r24
    171c:	59 07       	cpc	r21, r25
    171e:	6a 07       	cpc	r22, r26
    1720:	7b 07       	cpc	r23, r27
    1722:	18 f4       	brcc	.+6      	; 0x172a <OneButton::tick()+0x9c>
    1724:	19 8e       	std	Y+25, r1	; 0x19
    1726:	1a 8e       	std	Y+26, r1	; 0x1a
    1728:	d4 cf       	rjmp	.-88     	; 0x16d2 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:121
      // button was released to quickly so I assume some debouncing.
	  // go back to state 0 without calling a function.
      _state = 0;
    172a:	82 e0       	ldi	r24, 0x02	; 2
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	89 8f       	std	Y+25, r24	; 0x19
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:124

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2
    1730:	9a 8f       	std	Y+26, r25	; 0x1a
    1732:	cf cf       	rjmp	.-98     	; 0x16d2 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
      _isLongPressed = true;  // Keep track of long press state
      if (_pressFunc) _pressFunc();
	  if (_longPressStartFunc) _longPressStartFunc();
	  if (_duringLongPressFunc) _duringLongPressFunc();
      _state = 6; // step to state 6
    1734:	2a 85       	ldd	r18, Y+10	; 0x0a
    1736:	3b 85       	ldd	r19, Y+11	; 0x0b
    1738:	20 17       	cp	r18, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:126
      _state = 0;

    } else if (buttonLevel == _buttonReleased) {
      _state = 2; // step to state 2

    } else if ((buttonLevel == _buttonPressed) && ((unsigned long)(now - _startTime) > _pressTicks)) {
    173a:	31 07       	cpc	r19, r17
    173c:	51 f6       	brne	.-108    	; 0x16d2 <OneButton::tick()+0x44>
    173e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1740:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1742:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1744:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1746:	ab 01       	movw	r20, r22
    1748:	bc 01       	movw	r22, r24
    174a:	40 1b       	sub	r20, r16
    174c:	51 0b       	sbc	r21, r17
    174e:	62 0b       	sbc	r22, r18
    1750:	73 0b       	sbc	r23, r19
    1752:	8c 81       	ldd	r24, Y+4	; 0x04
    1754:	9d 81       	ldd	r25, Y+5	; 0x05
    1756:	09 2e       	mov	r0, r25
    1758:	00 0c       	add	r0, r0
    175a:	aa 0b       	sbc	r26, r26
    175c:	bb 0b       	sbc	r27, r27
    175e:	84 17       	cp	r24, r20
    1760:	95 07       	cpc	r25, r21
    1762:	a6 07       	cpc	r26, r22
    1764:	b7 07       	cpc	r27, r23
    1766:	08 f0       	brcs	.+2      	; 0x176a <OneButton::tick()+0xdc>
    1768:	b4 cf       	rjmp	.-152    	; 0x16d2 <OneButton::tick()+0x44>
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	8c 87       	std	Y+12, r24	; 0x0c
    176e:	e9 89       	ldd	r30, Y+17	; 0x11
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:127
      _isLongPressed = true;  // Keep track of long press state
    1770:	fa 89       	ldd	r31, Y+18	; 0x12
    1772:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:128
      if (_pressFunc) _pressFunc();
    1774:	09 f0       	breq	.+2      	; 0x1778 <OneButton::tick()+0xea>
    1776:	09 95       	icall
    1778:	eb 89       	ldd	r30, Y+19	; 0x13
    177a:	fc 89       	ldd	r31, Y+20	; 0x14
    177c:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:129
	  if (_longPressStartFunc) _longPressStartFunc();
    177e:	09 f0       	breq	.+2      	; 0x1782 <OneButton::tick()+0xf4>
    1780:	09 95       	icall
    1782:	ef 89       	ldd	r30, Y+23	; 0x17
    1784:	f8 8d       	ldd	r31, Y+24	; 0x18
    1786:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:130
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1788:	09 f0       	breq	.+2      	; 0x178c <OneButton::tick()+0xfe>
    178a:	09 95       	icall
    178c:	86 e0       	ldi	r24, 0x06	; 6
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	ce cf       	rjmp	.-100    	; 0x172e <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:131
      _state = 6; // step to state 6
    1792:	22 30       	cpi	r18, 0x02	; 2
    1794:	31 05       	cpc	r19, r1
    1796:	19 f5       	brne	.+70     	; 0x17de <OneButton::tick()+0x150>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:137
      
    } else {
      // wait. Stay in this state.
    } // if

  } else if (_state == 2) { // waiting for menu pin being pressed the second time or timeout.
    1798:	cb 8c       	ldd	r12, Y+27	; 0x1b
    179a:	dc 8c       	ldd	r13, Y+28	; 0x1c
    179c:	ed 8c       	ldd	r14, Y+29	; 0x1d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:138
    if ((unsigned long)(now - _startTime) > _clickTicks) {
    179e:	fe 8c       	ldd	r15, Y+30	; 0x1e
    17a0:	6c 19       	sub	r22, r12
    17a2:	7d 09       	sbc	r23, r13
    17a4:	8e 09       	sbc	r24, r14
    17a6:	9f 09       	sbc	r25, r15
    17a8:	ca 80       	ldd	r12, Y+2	; 0x02
    17aa:	db 80       	ldd	r13, Y+3	; 0x03
    17ac:	0d 2c       	mov	r0, r13
    17ae:	00 0c       	add	r0, r0
    17b0:	ee 08       	sbc	r14, r14
    17b2:	ff 08       	sbc	r15, r15
    17b4:	c6 16       	cp	r12, r22
    17b6:	d7 06       	cpc	r13, r23
    17b8:	e8 06       	cpc	r14, r24
    17ba:	f9 06       	cpc	r15, r25
    17bc:	38 f4       	brcc	.+14     	; 0x17cc <OneButton::tick()+0x13e>
    17be:	ed 85       	ldd	r30, Y+13	; 0x0d
    17c0:	fe 85       	ldd	r31, Y+14	; 0x0e
    17c2:	30 97       	sbiw	r30, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:140
      // this was only a single short click
      if (_clickFunc) _clickFunc();
    17c4:	09 f4       	brne	.+2      	; 0x17c8 <OneButton::tick()+0x13a>
    17c6:	ae cf       	rjmp	.-164    	; 0x1724 <OneButton::tick()+0x96>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    if (buttonLevel == _buttonReleased) {
	  _isLongPressed = false;  // Keep track of long press state
	  if(_longPressStopFunc) _longPressStopFunc();
    17c8:	09 95       	icall
    17ca:	ac cf       	rjmp	.-168    	; 0x1724 <OneButton::tick()+0x96>
    17cc:	8a 85       	ldd	r24, Y+10	; 0x0a
    17ce:	9b 85       	ldd	r25, Y+11	; 0x0b
    17d0:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:143
    if ((unsigned long)(now - _startTime) > _clickTicks) {
      // this was only a single short click
      if (_clickFunc) _clickFunc();
      _state = 0; // restart.

    } else if (buttonLevel == _buttonPressed) {
    17d2:	91 07       	cpc	r25, r17
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <OneButton::tick()+0x14a>
    17d6:	7d cf       	rjmp	.-262    	; 0x16d2 <OneButton::tick()+0x44>
    17d8:	83 e0       	ldi	r24, 0x03	; 3
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	a8 cf       	rjmp	.-176    	; 0x172e <OneButton::tick()+0xa0>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:144
      _state = 3; // step to state 3
    17de:	23 30       	cpi	r18, 0x03	; 3
    17e0:	31 05       	cpc	r19, r1
    17e2:	49 f4       	brne	.+18     	; 0x17f6 <OneButton::tick()+0x168>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:147
    } // if

  } else if (_state == 3) { // waiting for menu pin being released finally.
    17e4:	88 85       	ldd	r24, Y+8	; 0x08
    17e6:	99 85       	ldd	r25, Y+9	; 0x09
    17e8:	80 17       	cp	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:148
    if (buttonLevel == _buttonReleased) {
    17ea:	91 07       	cpc	r25, r17
    17ec:	09 f0       	breq	.+2      	; 0x17f0 <OneButton::tick()+0x162>
    17ee:	71 cf       	rjmp	.-286    	; 0x16d2 <OneButton::tick()+0x44>
    17f0:	ef 85       	ldd	r30, Y+15	; 0x0f
    17f2:	f8 89       	ldd	r31, Y+16	; 0x10
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:150
      // this was a 2 click sequence.
      if (_doubleClickFunc) _doubleClickFunc();
    17f4:	e6 cf       	rjmp	.-52     	; 0x17c2 <OneButton::tick()+0x134>
    17f6:	26 30       	cpi	r18, 0x06	; 6
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:154
      _state = 0; // restart.
    } // if

  } else if (_state == 6) { // waiting for menu pin being release after long press.
    17f8:	31 05       	cpc	r19, r1
    17fa:	09 f0       	breq	.+2      	; 0x17fe <OneButton::tick()+0x170>
    17fc:	6a cf       	rjmp	.-300    	; 0x16d2 <OneButton::tick()+0x44>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:155
    if (buttonLevel == _buttonReleased) {
    17fe:	88 85       	ldd	r24, Y+8	; 0x08
    1800:	99 85       	ldd	r25, Y+9	; 0x09
    1802:	80 17       	cp	r24, r16
    1804:	91 07       	cpc	r25, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:156
	  _isLongPressed = false;  // Keep track of long press state
    1806:	21 f4       	brne	.+8      	; 0x1810 <__DATA_REGION_LENGTH__+0x10>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:157
	  if(_longPressStopFunc) _longPressStopFunc();
    1808:	1c 86       	std	Y+12, r1	; 0x0c
    180a:	ed 89       	ldd	r30, Y+21	; 0x15
    180c:	fe 89       	ldd	r31, Y+22	; 0x16
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:161
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
    180e:	d9 cf       	rjmp	.-78     	; 0x17c2 <OneButton::tick()+0x134>
    1810:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if (_duringLongPressFunc) _duringLongPressFunc();
    1812:	8c 87       	std	Y+12, r24	; 0x0c
    1814:	ef 89       	ldd	r30, Y+23	; 0x17
    1816:	f8 8d       	ldd	r31, Y+24	; 0x18
    1818:	30 97       	sbiw	r30, 0x00	; 0
    181a:	09 f4       	brne	.+2      	; 0x181e <__DATA_REGION_LENGTH__+0x1e>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:166
    } // if  

  } // if  
} // OneButton.tick()
    181c:	5a cf       	rjmp	.-332    	; 0x16d2 <OneButton::tick()+0x44>
    181e:	df 91       	pop	r29
    1820:	cf 91       	pop	r28
    1822:	1f 91       	pop	r17
    1824:	0f 91       	pop	r16
    1826:	ff 90       	pop	r15
    1828:	ef 90       	pop	r14
    182a:	df 90       	pop	r13
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\OneButton-master/OneButton.cpp:162
	  if(_longPressStopFunc) _longPressStopFunc();
      _state = 0; // restart.
    } else {
	  // button is being long pressed
	  _isLongPressed = true; // Keep track of long press state
	  if (_duringLongPressFunc) _duringLongPressFunc();
    182c:	cf 90       	pop	r12
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:59
	enabled = true;
	status = RUNNING;
	}

void Ticker::stop() {
	enabled = false;
    182e:	09 94       	ijmp

00001830 <STOP_BUZZER()>:
stop():
    1830:	e4 ec       	ldi	r30, 0xC4	; 196
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:60
	counts = 0;
    1832:	fb e2       	ldi	r31, 0x2B	; 43
    1834:	10 82       	st	Z, r1
    1836:	13 86       	std	Z+11, r1	; 0x0b
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Ticker-master/Ticker.cpp:61
	status = STOPPED;
    1838:	14 86       	std	Z+12, r1	; 0x0c
    183a:	15 86       	std	Z+13, r1	; 0x0d
    183c:	16 86       	std	Z+14, r1	; 0x0e
    183e:	17 86       	std	Z+15, r1	; 0x0f
    1840:	10 8a       	std	Z+16, r1	; 0x10
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:86
  BUZZ_TICK1.start();
}

void STOP_BUZZER1()
{
  BUZZ_TICK2.start();
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	85 e1       	ldi	r24, 0x15	; 21
    1846:	f2 cb       	rjmp	.-2076   	; 0x102c <digitalWrite.part.2>

00001848 <STOP_BUZZER1()>:
STOP_BUZZER1():
    1848:	8e e8       	ldi	r24, 0x8E	; 142
    184a:	9b e2       	ldi	r25, 0x2B	; 43
    184c:	e3 de       	rcall	.-570    	; 0x1614 <Ticker::start()>
digitalWrite():
    184e:	61 e0       	ldi	r22, 0x01	; 1
    1850:	85 e1       	ldi	r24, 0x15	; 21
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:68
  digitalWrite(BUZZER, HIGH);
  BUZZ.start();
}

void STOP_BUZZER2()
{
    1852:	ec cb       	rjmp	.-2088   	; 0x102c <digitalWrite.part.2>

00001854 <STOP_BUZZER2()>:
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	85 e1       	ldi	r24, 0x15	; 21
    1858:	e9 db       	rcall	.-2094   	; 0x102c <digitalWrite.part.2>
STOP_BUZZER2():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:70
  digitalWrite(BUZZER, LOW);  
   if(REPETATION_FLAG) FOR_REP++;
    185a:	80 91 8c 28 	lds	r24, 0x288C	; 0x80288c <REPETATION_FLAG>
    185e:	88 23       	and	r24, r24
    1860:	49 f0       	breq	.+18     	; 0x1874 <STOP_BUZZER2()+0x20>
    1862:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <FOR_REP>
    1866:	90 91 99 28 	lds	r25, 0x2899	; 0x802899 <FOR_REP+0x1>
    186a:	01 96       	adiw	r24, 0x01	; 1
    186c:	80 93 98 28 	sts	0x2898, r24	; 0x802898 <FOR_REP>
    1870:	90 93 99 28 	sts	0x2899, r25	; 0x802899 <FOR_REP+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:71
   FOR_REP2++;
    1874:	80 91 9a 28 	lds	r24, 0x289A	; 0x80289a <FOR_REP2>
    1878:	90 91 9b 28 	lds	r25, 0x289B	; 0x80289b <FOR_REP2+0x1>
    187c:	01 96       	adiw	r24, 0x01	; 1
    187e:	80 93 9a 28 	sts	0x289A, r24	; 0x80289a <FOR_REP2>
    1882:	90 93 9b 28 	sts	0x289B, r25	; 0x80289b <FOR_REP2+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:72
}
    1886:	08 95       	ret

00001888 <LED_off()>:
digitalWrite():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:55
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
}

void LED_off()
{
    1888:	60 e0       	ldi	r22, 0x00	; 0
    188a:	8a e1       	ldi	r24, 0x1A	; 26
    188c:	cf db       	rcall	.-2146   	; 0x102c <digitalWrite.part.2>
LED_off():
    188e:	83 e7       	ldi	r24, 0x73	; 115
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:57
  digitalWrite(ALARM_LED, LOW);  
  Blink_LED_ON.start();  
    1890:	9b e2       	ldi	r25, 0x2B	; 43
    1892:	c0 ce       	rjmp	.-640    	; 0x1614 <Ticker::start()>

00001894 <LED_on()>:
digitalWrite():
    1894:	61 e0       	ldi	r22, 0x01	; 1
    1896:	8a e1       	ldi	r24, 0x1A	; 26
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:49
  Blink_LED_ON.stop();   
  Blink_LED_OFF.stop();
}

void LED_on()
{  
    1898:	c9 db       	rcall	.-2158   	; 0x102c <digitalWrite.part.2>
LED_on():
    189a:	80 91 92 28 	lds	r24, 0x2892	; 0x802892 <Blinking_Freq>
    189e:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:51
  digitalWrite(ALARM_LED, HIGH); 
 Blinking_Freq++;  
    18a0:	80 93 92 28 	sts	0x2892, r24	; 0x802892 <Blinking_Freq>
    18a4:	08 95       	ret

000018a6 <RTD_TEMP_CAL_1()>:
RTD_TEMP_CAL_1():
    18a6:	8f 92       	push	r8
    18a8:	9f 92       	push	r9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Tick.cpp:52
}
    18aa:	af 92       	push	r10
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:27
{  
  TEMP_UPDATE_1.start();
}

void RTD_TEMP_CAL_1()
{
    18ac:	bf 92       	push	r11
    18ae:	cf 92       	push	r12
    18b0:	df 92       	push	r13
    18b2:	ef 92       	push	r14
    18b4:	ff 92       	push	r15
    18b6:	cf 93       	push	r28
    18b8:	df 93       	push	r29
    18ba:	c0 91 2d 28 	lds	r28, 0x282D	; 0x80282d <sample_1>
    18be:	d0 91 2e 28 	lds	r29, 0x282E	; 0x80282e <sample_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:28
    sample_1++;
    18c2:	21 96       	adiw	r28, 0x01	; 1
    18c4:	c0 93 2d 28 	sts	0x282D, r28	; 0x80282d <sample_1>
    18c8:	d0 93 2e 28 	sts	0x282E, r29	; 0x80282e <sample_1+0x1>
analogRead():
    18cc:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    18d0:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:63
    return NOT_A_PIN;

#if defined(ADC0)
  /* Reference should be already set up */
  /* Select channel */
  ADC0.MUXPOS = (pin << ADC_MUXPOS_gp);
    18d2:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:66

  /* Start conversion */
  ADC0.COMMAND = ADC_STCONV_bm;
    18d6:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
    18da:	80 ff       	sbrs	r24, 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:69

  /* Wait for result ready */
  while (!(ADC0.INTFLAGS & ADC_RESRDY_bm))
    18dc:	fc cf       	rjmp	.-8      	; 0x18d6 <RTD_TEMP_CAL_1()+0x30>
    18de:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    18e2:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL_1():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/wiring_analog.c:73
    ;

  /* Combine two bytes */
  return ADC0.RES;
    18e6:	07 2e       	mov	r0, r23
    18e8:	00 0c       	add	r0, r0
    18ea:	88 0b       	sbc	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:29
    AvgVout_1 = analogRead(A0);
    18ec:	99 0b       	sbc	r25, r25
    18ee:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    18f2:	20 91 29 28 	lds	r18, 0x2829	; 0x802829 <TotalVout_1>
    18f6:	30 91 2a 28 	lds	r19, 0x282A	; 0x80282a <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:30
    TotalVout_1  += AvgVout_1 ; 
    18fa:	40 91 2b 28 	lds	r20, 0x282B	; 0x80282b <TotalVout_1+0x2>
    18fe:	50 91 2c 28 	lds	r21, 0x282C	; 0x80282c <TotalVout_1+0x3>
    1902:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    1906:	69 97       	sbiw	r28, 0x19	; 25
    1908:	9c f4       	brge	.+38     	; 0x1930 <RTD_TEMP_CAL_1()+0x8a>
    190a:	60 93 29 28 	sts	0x2829, r22	; 0x802829 <TotalVout_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:31
    if(sample_1 >= avrage_val_1)
    190e:	70 93 2a 28 	sts	0x282A, r23	; 0x80282a <TotalVout_1+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:30

void RTD_TEMP_CAL_1()
{
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    1912:	80 93 2b 28 	sts	0x282B, r24	; 0x80282b <TotalVout_1+0x2>
    1916:	90 93 2c 28 	sts	0x282C, r25	; 0x80282c <TotalVout_1+0x3>
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	ff 90       	pop	r15
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:40
      Vin1 = Vout1 / 10;                                     // Gain
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1));     //   Va = Vb + Vin 
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha);          // alpha is temp coefficient for paltinum
      sample_1 = 0;  AvgVout_1 = 0;   
    }
}
    1920:	ef 90       	pop	r14
    1922:	df 90       	pop	r13
    1924:	cf 90       	pop	r12
    1926:	bf 90       	pop	r11
    1928:	af 90       	pop	r10
    192a:	9f 90       	pop	r9
    192c:	8f 90       	pop	r8
    192e:	08 95       	ret
    1930:	20 e0       	ldi	r18, 0x00	; 0
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:33
    sample_1++;
    AvgVout_1 = analogRead(A0);
    TotalVout_1  += AvgVout_1 ; 
    if(sample_1 >= avrage_val_1)
    {
      TotalVout_1 /= avrage_val_1;
    1936:	51 e4       	ldi	r21, 0x41	; 65
    1938:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    193c:	60 93 29 28 	sts	0x2829, r22	; 0x802829 <TotalVout_1>
    1940:	70 93 2a 28 	sts	0x282A, r23	; 0x80282a <TotalVout_1+0x1>
    1944:	80 93 2b 28 	sts	0x282B, r24	; 0x80282b <TotalVout_1+0x2>
    1948:	90 93 2c 28 	sts	0x282C, r25	; 0x80282c <TotalVout_1+0x3>
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 ea       	ldi	r20, 0xA0	; 160
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:34
      float Vout1 = ((TotalVout_1 * Vs1) / 1023.0);          // Voltage conversion
    1952:	50 e4       	ldi	r21, 0x40	; 64
    1954:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    1958:	20 e0       	ldi	r18, 0x00	; 0
    195a:	30 ec       	ldi	r19, 0xC0	; 192
    195c:	4f e7       	ldi	r20, 0x7F	; 127
    195e:	54 e4       	ldi	r21, 0x44	; 68
    1960:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    1964:	20 e0       	ldi	r18, 0x00	; 0
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	40 e2       	ldi	r20, 0x20	; 32
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:35
      Vin1 = Vout1 / 10;                                     // Gain
    196a:	51 e4       	ldi	r21, 0x41	; 65
    196c:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    1970:	25 e5       	ldi	r18, 0x55	; 85
    1972:	35 e5       	ldi	r19, 0x55	; 85
    1974:	45 ed       	ldi	r20, 0xD5	; 213
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:36
      Rt1 = ((Vb1 + Vin1) * Rc1) / (Vs1 - (Vb1 + Vin1));     //   Va = Vb + Vin 
    1976:	5d e3       	ldi	r21, 0x3D	; 61
    1978:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    197c:	6b 01       	movw	r12, r22
    197e:	7c 01       	movw	r14, r24
    1980:	20 e0       	ldi	r18, 0x00	; 0
    1982:	30 ee       	ldi	r19, 0xE0	; 224
    1984:	42 e9       	ldi	r20, 0x92	; 146
    1986:	55 e4       	ldi	r21, 0x45	; 69
    1988:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    198c:	4b 01       	movw	r8, r22
    198e:	5c 01       	movw	r10, r24
    1990:	a7 01       	movw	r20, r14
    1992:	96 01       	movw	r18, r12
    1994:	60 e0       	ldi	r22, 0x00	; 0
    1996:	70 e0       	ldi	r23, 0x00	; 0
    1998:	80 ea       	ldi	r24, 0xA0	; 160
    199a:	90 e4       	ldi	r25, 0x40	; 64
    199c:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    19a0:	9b 01       	movw	r18, r22
    19a2:	ac 01       	movw	r20, r24
    19a4:	c5 01       	movw	r24, r10
    19a6:	b4 01       	movw	r22, r8
    19a8:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    19ac:	20 e0       	ldi	r18, 0x00	; 0
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:37
      TEMP_DEG_RAW_1 = ((Rt1 / Rb1) - 1) / (Alpha);          // alpha is temp coefficient for paltinum
    19b2:	52 e4       	ldi	r21, 0x42	; 66
    19b4:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e8       	ldi	r20, 0x80	; 128
    19be:	5f e3       	ldi	r21, 0x3F	; 63
    19c0:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    19c4:	28 e4       	ldi	r18, 0x48	; 72
    19c6:	30 e5       	ldi	r19, 0x50	; 80
    19c8:	4c e7       	ldi	r20, 0x7C	; 124
    19ca:	5b e3       	ldi	r21, 0x3B	; 59
    19cc:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    19d0:	60 93 2f 28 	sts	0x282F, r22	; 0x80282f <TEMP_DEG_RAW_1>
    19d4:	70 93 30 28 	sts	0x2830, r23	; 0x802830 <TEMP_DEG_RAW_1+0x1>
    19d8:	80 93 31 28 	sts	0x2831, r24	; 0x802831 <TEMP_DEG_RAW_1+0x2>
    19dc:	90 93 32 28 	sts	0x2832, r25	; 0x802832 <TEMP_DEG_RAW_1+0x3>
    19e0:	10 92 2d 28 	sts	0x282D, r1	; 0x80282d <sample_1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Safety_probe.cpp:38
      sample_1 = 0;  AvgVout_1 = 0;   
    19e4:	10 92 2e 28 	sts	0x282E, r1	; 0x80282e <sample_1+0x1>
    19e8:	98 cf       	rjmp	.-208    	; 0x191a <RTD_TEMP_CAL_1()+0x74>

000019ea <PID_RUN()>:
PID_RUN():
    19ea:	3f 92       	push	r3
    19ec:	4f 92       	push	r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:31
  WINDOW_START_TIME = millis();
  myPID.SetMode(AUTOMATIC);
}

void PID_RUN()
{
    19ee:	5f 92       	push	r5
    19f0:	6f 92       	push	r6
    19f2:	7f 92       	push	r7
    19f4:	8f 92       	push	r8
    19f6:	9f 92       	push	r9
    19f8:	af 92       	push	r10
    19fa:	bf 92       	push	r11
    19fc:	cf 92       	push	r12
    19fe:	df 92       	push	r13
    1a00:	ef 92       	push	r14
    1a02:	ff 92       	push	r15
    1a04:	0f 93       	push	r16
    1a06:	1f 93       	push	r17
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	cd b7       	in	r28, 0x3d	; 61
    1a0e:	de b7       	in	r29, 0x3e	; 62
    1a10:	2e 97       	sbiw	r28, 0x0e	; 14
    1a12:	cd bf       	out	0x3d, r28	; 61
    1a14:	de bf       	out	0x3e, r29	; 62
Compute():
    1a16:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:60
 *   pid Output needs to be computed.  returns true when the output is computed,
 *   false when nothing has been done.
 **********************************************************************************/
bool PID::Compute()
{
   if(!inAuto) return false;
    1a1a:	88 23       	and	r24, r24
    1a1c:	09 f4       	brne	.+2      	; 0x1a20 <PID_RUN()+0x36>
    1a1e:	29 c1       	rjmp	.+594    	; 0x1c72 <PID_RUN()+0x288>
    1a20:	69 dc       	rcall	.-1838   	; 0x12f4 <millis>
    1a22:	6d 83       	std	Y+5, r22	; 0x05
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:61
   unsigned long now = millis();
    1a24:	7e 83       	std	Y+6, r23	; 0x06
    1a26:	8f 83       	std	Y+7, r24	; 0x07
    1a28:	98 87       	std	Y+8, r25	; 0x08
    1a2a:	80 91 20 2a 	lds	r24, 0x2A20	; 0x802a20 <myPID+0x22>
    1a2e:	90 91 21 2a 	lds	r25, 0x2A21	; 0x802a21 <myPID+0x23>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:62
   unsigned long timeChange = (now - lastTime);
    1a32:	a0 91 22 2a 	lds	r26, 0x2A22	; 0x802a22 <myPID+0x24>
    1a36:	b0 91 23 2a 	lds	r27, 0x2A23	; 0x802a23 <myPID+0x25>
    1a3a:	4d 81       	ldd	r20, Y+5	; 0x05
    1a3c:	5e 81       	ldd	r21, Y+6	; 0x06
    1a3e:	6f 81       	ldd	r22, Y+7	; 0x07
    1a40:	78 85       	ldd	r23, Y+8	; 0x08
    1a42:	48 1b       	sub	r20, r24
    1a44:	59 0b       	sbc	r21, r25
    1a46:	6a 0b       	sbc	r22, r26
    1a48:	7b 0b       	sbc	r23, r27
    1a4a:	80 91 2c 2a 	lds	r24, 0x2A2C	; 0x802a2c <myPID+0x2e>
    1a4e:	90 91 2d 2a 	lds	r25, 0x2A2D	; 0x802a2d <myPID+0x2f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:63
   if(timeChange>=SampleTime)
    1a52:	a0 91 2e 2a 	lds	r26, 0x2A2E	; 0x802a2e <myPID+0x30>
    1a56:	b0 91 2f 2a 	lds	r27, 0x2A2F	; 0x802a2f <myPID+0x31>
    1a5a:	48 17       	cp	r20, r24
    1a5c:	59 07       	cpc	r21, r25
    1a5e:	6a 07       	cpc	r22, r26
    1a60:	7b 07       	cpc	r23, r27
    1a62:	08 f4       	brcc	.+2      	; 0x1a66 <PID_RUN()+0x7c>
    1a64:	06 c1       	rjmp	.+524    	; 0x1c72 <PID_RUN()+0x288>
    1a66:	e0 91 1a 2a 	lds	r30, 0x2A1A	; 0x802a1a <myPID+0x1c>
    1a6a:	f0 91 1b 2a 	lds	r31, 0x2A1B	; 0x802a1b <myPID+0x1d>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:66
   {
      /*Compute all the working error variables*/
      double input = *myInput;
    1a6e:	80 81       	ld	r24, Z
    1a70:	91 81       	ldd	r25, Z+1	; 0x01
    1a72:	a2 81       	ldd	r26, Z+2	; 0x02
    1a74:	b3 81       	ldd	r27, Z+3	; 0x03
    1a76:	89 83       	std	Y+1, r24	; 0x01
    1a78:	9a 83       	std	Y+2, r25	; 0x02
    1a7a:	ab 83       	std	Y+3, r26	; 0x03
    1a7c:	bc 83       	std	Y+4, r27	; 0x04
    1a7e:	e0 91 1e 2a 	lds	r30, 0x2A1E	; 0x802a1e <myPID+0x20>
    1a82:	f0 91 1f 2a 	lds	r31, 0x2A1F	; 0x802a1f <myPID+0x21>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:67
      double error = *mySetpoint - input;
    1a86:	9c 01       	movw	r18, r24
    1a88:	ad 01       	movw	r20, r26
    1a8a:	60 81       	ld	r22, Z
    1a8c:	71 81       	ldd	r23, Z+1	; 0x01
    1a8e:	82 81       	ldd	r24, Z+2	; 0x02
    1a90:	93 81       	ldd	r25, Z+3	; 0x03
    1a92:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    1a96:	4b 01       	movw	r8, r22
    1a98:	5c 01       	movw	r10, r24
    1a9a:	20 91 28 2a 	lds	r18, 0x2A28	; 0x802a28 <myPID+0x2a>
    1a9e:	30 91 29 2a 	lds	r19, 0x2A29	; 0x802a29 <myPID+0x2b>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:68
      double dInput = (input - lastInput);
    1aa2:	40 91 2a 2a 	lds	r20, 0x2A2A	; 0x802a2a <myPID+0x2c>
    1aa6:	50 91 2b 2a 	lds	r21, 0x2A2B	; 0x802a2b <myPID+0x2d>
    1aaa:	69 81       	ldd	r22, Y+1	; 0x01
    1aac:	7a 81       	ldd	r23, Y+2	; 0x02
    1aae:	8b 81       	ldd	r24, Y+3	; 0x03
    1ab0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ab2:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    1ab6:	6b 01       	movw	r12, r22
    1ab8:	7c 01       	movw	r14, r24
    1aba:	20 91 0e 2a 	lds	r18, 0x2A0E	; 0x802a0e <myPID+0x10>
    1abe:	30 91 0f 2a 	lds	r19, 0x2A0F	; 0x802a0f <myPID+0x11>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:69
      outputSum+= (ki * error);
    1ac2:	40 91 10 2a 	lds	r20, 0x2A10	; 0x802a10 <myPID+0x12>
    1ac6:	50 91 11 2a 	lds	r21, 0x2A11	; 0x802a11 <myPID+0x13>
    1aca:	c5 01       	movw	r24, r10
    1acc:	b4 01       	movw	r22, r8
    1ace:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    1ad2:	20 91 24 2a 	lds	r18, 0x2A24	; 0x802a24 <myPID+0x26>
    1ad6:	30 91 25 2a 	lds	r19, 0x2A25	; 0x802a25 <myPID+0x27>
    1ada:	40 91 26 2a 	lds	r20, 0x2A26	; 0x802a26 <myPID+0x28>
    1ade:	50 91 27 2a 	lds	r21, 0x2A27	; 0x802a27 <myPID+0x29>
    1ae2:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    1ae6:	2b 01       	movw	r4, r22
    1ae8:	3c 01       	movw	r6, r24
    1aea:	40 92 24 2a 	sts	0x2A24, r4	; 0x802a24 <myPID+0x26>
    1aee:	50 92 25 2a 	sts	0x2A25, r5	; 0x802a25 <myPID+0x27>
    1af2:	60 92 26 2a 	sts	0x2A26, r6	; 0x802a26 <myPID+0x28>
    1af6:	70 92 27 2a 	sts	0x2A27, r7	; 0x802a27 <myPID+0x29>
    1afa:	30 90 39 2a 	lds	r3, 0x2A39	; 0x802a39 <myPID+0x3b>
    1afe:	31 10       	cpse	r3, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:72

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;
    1b00:	1a c0       	rjmp	.+52     	; 0x1b36 <PID_RUN()+0x14c>
    1b02:	20 91 0a 2a 	lds	r18, 0x2A0A	; 0x802a0a <myPID+0xc>
    1b06:	30 91 0b 2a 	lds	r19, 0x2A0B	; 0x802a0b <myPID+0xd>
    1b0a:	40 91 0c 2a 	lds	r20, 0x2A0C	; 0x802a0c <myPID+0xe>
    1b0e:	50 91 0d 2a 	lds	r21, 0x2A0D	; 0x802a0d <myPID+0xf>
    1b12:	c7 01       	movw	r24, r14
    1b14:	b6 01       	movw	r22, r12
    1b16:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    1b1a:	9b 01       	movw	r18, r22
    1b1c:	ac 01       	movw	r20, r24
    1b1e:	c3 01       	movw	r24, r6
    1b20:	b2 01       	movw	r22, r4
    1b22:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    1b26:	60 93 24 2a 	sts	0x2A24, r22	; 0x802a24 <myPID+0x26>
    1b2a:	70 93 25 2a 	sts	0x2A25, r23	; 0x802a25 <myPID+0x27>
    1b2e:	80 93 26 2a 	sts	0x2A26, r24	; 0x802a26 <myPID+0x28>
    1b32:	90 93 27 2a 	sts	0x2A27, r25	; 0x802a27 <myPID+0x29>
    1b36:	40 90 24 2a 	lds	r4, 0x2A24	; 0x802a24 <myPID+0x26>
    1b3a:	50 90 25 2a 	lds	r5, 0x2A25	; 0x802a25 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:74

      if(outputSum > outMax) outputSum= outMax;
    1b3e:	60 90 26 2a 	lds	r6, 0x2A26	; 0x802a26 <myPID+0x28>
    1b42:	70 90 27 2a 	lds	r7, 0x2A27	; 0x802a27 <myPID+0x29>
    1b46:	10 91 34 2a 	lds	r17, 0x2A34	; 0x802a34 <myPID+0x36>
    1b4a:	90 91 35 2a 	lds	r25, 0x2A35	; 0x802a35 <myPID+0x37>
    1b4e:	9e 87       	std	Y+14, r25	; 0x0e
    1b50:	a0 91 36 2a 	lds	r26, 0x2A36	; 0x802a36 <myPID+0x38>
    1b54:	ad 87       	std	Y+13, r26	; 0x0d
    1b56:	00 91 37 2a 	lds	r16, 0x2A37	; 0x802a37 <myPID+0x39>
    1b5a:	21 2f       	mov	r18, r17
    1b5c:	39 2f       	mov	r19, r25
    1b5e:	4a 2f       	mov	r20, r26
    1b60:	50 2f       	mov	r21, r16
    1b62:	c3 01       	movw	r24, r6
    1b64:	b2 01       	movw	r22, r4
    1b66:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    1b6a:	18 16       	cp	r1, r24
    1b6c:	0c f0       	brlt	.+2      	; 0x1b70 <PID_RUN()+0x186>
    1b6e:	96 c0       	rjmp	.+300    	; 0x1c9c <PID_RUN()+0x2b2>
    1b70:	81 2f       	mov	r24, r17
    1b72:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b74:	ad 85       	ldd	r26, Y+13	; 0x0d
    1b76:	b0 2f       	mov	r27, r16
    1b78:	80 93 24 2a 	sts	0x2A24, r24	; 0x802a24 <myPID+0x26>
    1b7c:	90 93 25 2a 	sts	0x2A25, r25	; 0x802a25 <myPID+0x27>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75
      else if(outputSum < outMin) outputSum= outMin;
    1b80:	a0 93 26 2a 	sts	0x2A26, r26	; 0x802a26 <myPID+0x28>
    1b84:	b0 93 27 2a 	sts	0x2A27, r27	; 0x802a27 <myPID+0x29>
    1b88:	33 20       	and	r3, r3
    1b8a:	09 f4       	brne	.+2      	; 0x1b8e <PID_RUN()+0x1a4>
    1b8c:	a0 c0       	rjmp	.+320    	; 0x1cce <PID_RUN()+0x2e4>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:79

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
    1b8e:	20 91 0a 2a 	lds	r18, 0x2A0A	; 0x802a0a <myPID+0xc>
    1b92:	30 91 0b 2a 	lds	r19, 0x2A0B	; 0x802a0b <myPID+0xd>
    1b96:	40 91 0c 2a 	lds	r20, 0x2A0C	; 0x802a0c <myPID+0xe>
    1b9a:	50 91 0d 2a 	lds	r21, 0x2A0D	; 0x802a0d <myPID+0xf>
    1b9e:	c5 01       	movw	r24, r10
    1ba0:	b4 01       	movw	r22, r8
    1ba2:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    1ba6:	4b 01       	movw	r8, r22
    1ba8:	5c 01       	movw	r10, r24
    1baa:	20 91 12 2a 	lds	r18, 0x2A12	; 0x802a12 <myPID+0x14>
    1bae:	30 91 13 2a 	lds	r19, 0x2A13	; 0x802a13 <myPID+0x15>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1bb2:	40 91 14 2a 	lds	r20, 0x2A14	; 0x802a14 <myPID+0x16>
    1bb6:	50 91 15 2a 	lds	r21, 0x2A15	; 0x802a15 <myPID+0x17>
    1bba:	c7 01       	movw	r24, r14
    1bbc:	b6 01       	movw	r22, r12
    1bbe:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    1bc2:	9b 01       	movw	r18, r22
    1bc4:	ac 01       	movw	r20, r24
    1bc6:	60 91 24 2a 	lds	r22, 0x2A24	; 0x802a24 <myPID+0x26>
    1bca:	70 91 25 2a 	lds	r23, 0x2A25	; 0x802a25 <myPID+0x27>
    1bce:	80 91 26 2a 	lds	r24, 0x2A26	; 0x802a26 <myPID+0x28>
    1bd2:	90 91 27 2a 	lds	r25, 0x2A27	; 0x802a27 <myPID+0x29>
    1bd6:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    1bda:	a5 01       	movw	r20, r10
    1bdc:	94 01       	movw	r18, r8
    1bde:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    1be2:	6b 01       	movw	r12, r22
    1be4:	7c 01       	movw	r14, r24
    1be6:	9b 01       	movw	r18, r22
    1be8:	ac 01       	movw	r20, r24
    1bea:	61 2f       	mov	r22, r17
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:85
	  
	    if(output > outMax) output = outMax;
    1bec:	7e 85       	ldd	r23, Y+14	; 0x0e
    1bee:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bf0:	90 2f       	mov	r25, r16
    1bf2:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    1bf6:	87 fd       	sbrc	r24, 7
    1bf8:	18 c0       	rjmp	.+48     	; 0x1c2a <PID_RUN()+0x240>
    1bfa:	10 91 30 2a 	lds	r17, 0x2A30	; 0x802a30 <myPID+0x32>
    1bfe:	90 91 31 2a 	lds	r25, 0x2A31	; 0x802a31 <myPID+0x33>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:86
      else if(output < outMin) output = outMin;
    1c02:	9e 87       	std	Y+14, r25	; 0x0e
    1c04:	a0 91 32 2a 	lds	r26, 0x2A32	; 0x802a32 <myPID+0x34>
    1c08:	ad 87       	std	Y+13, r26	; 0x0d
    1c0a:	00 91 33 2a 	lds	r16, 0x2A33	; 0x802a33 <myPID+0x35>
    1c0e:	21 2f       	mov	r18, r17
    1c10:	39 2f       	mov	r19, r25
    1c12:	4a 2f       	mov	r20, r26
    1c14:	50 2f       	mov	r21, r16
    1c16:	b6 01       	movw	r22, r12
    1c18:	c7 01       	movw	r24, r14
    1c1a:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    1c1e:	87 fd       	sbrc	r24, 7
    1c20:	04 c0       	rjmp	.+8      	; 0x1c2a <PID_RUN()+0x240>
PID_RUN():
    1c22:	1c 2d       	mov	r17, r12
    1c24:	de 86       	std	Y+14, r13	; 0x0e
    1c26:	ed 86       	std	Y+13, r14	; 0x0d
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:83
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;

      /*Compute Rest of PID Output*/
      output += outputSum - kd * dInput;
    1c28:	0f 2d       	mov	r16, r15
Compute():
    1c2a:	e0 91 1c 2a 	lds	r30, 0x2A1C	; 0x802a1c <myPID+0x1e>
    1c2e:	f0 91 1d 2a 	lds	r31, 0x2A1D	; 0x802a1d <myPID+0x1f>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:87
	  
	    if(output > outMax) output = outMax;
      else if(output < outMin) output = outMin;
	    *myOutput = output;
    1c32:	81 2f       	mov	r24, r17
    1c34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c36:	ad 85       	ldd	r26, Y+13	; 0x0d
    1c38:	b0 2f       	mov	r27, r16
    1c3a:	80 83       	st	Z, r24
    1c3c:	91 83       	std	Z+1, r25	; 0x01
    1c3e:	a2 83       	std	Z+2, r26	; 0x02
    1c40:	b3 83       	std	Z+3, r27	; 0x03
    1c42:	89 81       	ldd	r24, Y+1	; 0x01
    1c44:	9a 81       	ldd	r25, Y+2	; 0x02
    1c46:	ab 81       	ldd	r26, Y+3	; 0x03
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:90

      /*Remember some variables for next time*/
      lastInput = input;
    1c48:	bc 81       	ldd	r27, Y+4	; 0x04
    1c4a:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <myPID+0x2a>
    1c4e:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <myPID+0x2b>
    1c52:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <myPID+0x2c>
    1c56:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <myPID+0x2d>
    1c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c5e:	af 81       	ldd	r26, Y+7	; 0x07
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:91
      lastTime = now;
    1c60:	b8 85       	ldd	r27, Y+8	; 0x08
    1c62:	80 93 20 2a 	sts	0x2A20, r24	; 0x802a20 <myPID+0x22>
    1c66:	90 93 21 2a 	sts	0x2A21, r25	; 0x802a21 <myPID+0x23>
    1c6a:	a0 93 22 2a 	sts	0x2A22, r26	; 0x802a22 <myPID+0x24>
    1c6e:	b0 93 23 2a 	sts	0x2A23, r27	; 0x802a23 <myPID+0x25>
PID_RUN():
    1c72:	2e 96       	adiw	r28, 0x0e	; 14
    1c74:	cd bf       	out	0x3d, r28	; 61
    1c76:	de bf       	out	0x3e, r29	; 62
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Pid.cpp:33
   myPID.Compute();  
}
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	1f 91       	pop	r17
    1c7e:	0f 91       	pop	r16
    1c80:	ff 90       	pop	r15
    1c82:	ef 90       	pop	r14
    1c84:	df 90       	pop	r13
    1c86:	cf 90       	pop	r12
    1c88:	bf 90       	pop	r11
    1c8a:	af 90       	pop	r10
    1c8c:	9f 90       	pop	r9
    1c8e:	8f 90       	pop	r8
    1c90:	7f 90       	pop	r7
    1c92:	6f 90       	pop	r6
    1c94:	5f 90       	pop	r5
    1c96:	4f 90       	pop	r4
    1c98:	3f 90       	pop	r3
    1c9a:	08 95       	ret
Compute():
    1c9c:	80 91 30 2a 	lds	r24, 0x2A30	; 0x802a30 <myPID+0x32>
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:75

      /*Add Proportional on Measurement, if P_ON_M is specified*/
      if(!pOnE) outputSum-= kp * dInput;

      if(outputSum > outMax) outputSum= outMax;
      else if(outputSum < outMin) outputSum= outMin;
    1ca0:	90 91 31 2a 	lds	r25, 0x2A31	; 0x802a31 <myPID+0x33>
    1ca4:	a0 91 32 2a 	lds	r26, 0x2A32	; 0x802a32 <myPID+0x34>
    1ca8:	b0 91 33 2a 	lds	r27, 0x2A33	; 0x802a33 <myPID+0x35>
    1cac:	89 87       	std	Y+9, r24	; 0x09
    1cae:	9a 87       	std	Y+10, r25	; 0x0a
    1cb0:	ab 87       	std	Y+11, r26	; 0x0b
    1cb2:	bc 87       	std	Y+12, r27	; 0x0c
    1cb4:	9c 01       	movw	r18, r24
    1cb6:	ad 01       	movw	r20, r26
    1cb8:	c3 01       	movw	r24, r6
    1cba:	b2 01       	movw	r22, r4
    1cbc:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    1cc0:	87 ff       	sbrs	r24, 7
    1cc2:	62 cf       	rjmp	.-316    	; 0x1b88 <PID_RUN()+0x19e>
    1cc4:	89 85       	ldd	r24, Y+9	; 0x09
    1cc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cc8:	ab 85       	ldd	r26, Y+11	; 0x0b
    1cca:	bc 85       	ldd	r27, Y+12	; 0x0c
    1ccc:	55 cf       	rjmp	.-342    	; 0x1b78 <PID_RUN()+0x18e>
PID_RUN():
    1cce:	81 2c       	mov	r8, r1
    1cd0:	91 2c       	mov	r9, r1
C:\Users\Siddhesh.Hadawale\Documents\Arduino\libraries\Arduino-PID-Library-master/PID_v1.cpp:80

      /*Add Proportional on Error, if P_ON_E is specified*/
	   double output;
      if(pOnE) output = kp * error;
      else output = 0;
    1cd2:	54 01       	movw	r10, r8
    1cd4:	6a cf       	rjmp	.-300    	; 0x1baa <PID_RUN()+0x1c0>

00001cd6 <RESET_LONG_PRESS_START()>:
RESET_LONG_PRESS_START():
    1cd6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:592
}
}

void RESET_LONG_PRESS_START()
{
  if(checkTempRaised==0)
    1cda:	81 11       	cpse	r24, r1
    1cdc:	22 c0       	rjmp	.+68     	; 0x1d22 <RESET_LONG_PRESS_START()+0x4c>
    1cde:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:594
  {
  if (!LONG_PRESS )   
    1ce2:	81 11       	cpse	r24, r1
    1ce4:	16 c0       	rjmp	.+44     	; 0x1d12 <RESET_LONG_PRESS_START()+0x3c>
    1ce6:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:596
  {
  if(!ENTER_BUT)
    1cea:	81 11       	cpse	r24, r1
    1cec:	0b c0       	rjmp	.+22     	; 0x1d04 <RESET_LONG_PRESS_START()+0x2e>
    1cee:	10 92 a8 28 	sts	0x28A8, r1	; 0x8028a8 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:598
  {
    RST_BUTT = 0;    
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:600
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;
    1cf6:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1cfa:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1cfe:	88 ec       	ldi	r24, 0xC8	; 200
    1d00:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:613
  if (LONG_PRESS)
  {
    if(Service_Menu) Service_Menu=0;
    LONG_PRESS = 0;
  }
 Tick.BUZZ_INTERVAL(200); 
    1d02:	a8 cc       	rjmp	.-1712   	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    1d04:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    1d08:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <SET_MIN>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:604
    LONG_PRESS = 0;
    SELECTION_PARAMETER = Unit_C_F;
  }
  else
  {
      ENTER_BUT = 0;
    1d0c:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <SET_MIN+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:605
      SET_MIN = 0;
    1d10:	f6 cf       	rjmp	.-20     	; 0x1cfe <RESET_LONG_PRESS_START()+0x28>
    1d12:	80 91 b1 28 	lds	r24, 0x28B1	; 0x8028b1 <Service_Menu>
    1d16:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:610
  }
  }
  if (LONG_PRESS)
  {
    if(Service_Menu) Service_Menu=0;
    1d18:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <Service_Menu>
    1d1c:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    1d20:	ee cf       	rjmp	.-36     	; 0x1cfe <RESET_LONG_PRESS_START()+0x28>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:611
    LONG_PRESS = 0;
    1d22:	08 95       	ret

00001d24 <RESET_CLICK()>:
RESET_CLICK():
    1d24:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:615
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    1d28:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:560
  }
}

void RESET_CLICK()
{
  if(checkTempRaised==0)
    1d2a:	5e c0       	rjmp	.+188    	; 0x1de8 <RESET_CLICK()+0xc4>
    1d2c:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    1d30:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:562
  {
   if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point  || 
    1d34:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1d38:	21 11       	cpse	r18, r1
    1d3a:	03 c0       	rjmp	.+6      	; 0x1d42 <RESET_CLICK()+0x1e>
    1d3c:	88 30       	cpi	r24, 0x08	; 8
    1d3e:	91 05       	cpc	r25, r1
    1d40:	29 f0       	breq	.+10     	; 0x1d4c <RESET_CLICK()+0x28>
    1d42:	ac 01       	movw	r20, r24
    1d44:	4d 7f       	andi	r20, 0xFD	; 253
    1d46:	4c 30       	cpi	r20, 0x0C	; 12
    1d48:	51 05       	cpc	r21, r1
    1d4a:	b9 f5       	brne	.+110    	; 0x1dba <RESET_CLICK()+0x96>
    1d4c:	01 97       	sbiw	r24, 0x01	; 1
    1d4e:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:565
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
    1d52:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1d56:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:576
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
      }
   }
  if (!LONG_PRESS )
    1d5a:	81 11       	cpse	r24, r1
    1d5c:	2b c0       	rjmp	.+86     	; 0x1db4 <RESET_CLICK()+0x90>
    1d5e:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    1d62:	22 23       	and	r18, r18
    1d64:	d9 f1       	breq	.+118    	; 0x1ddc <RESET_CLICK()+0xb8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:578
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    1d66:	82 30       	cpi	r24, 0x02	; 2
    1d68:	c9 f5       	brne	.+114    	; 0x1ddc <RESET_CLICK()+0xb8>
    1d6a:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    1d6e:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:580
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
   if ( ENTER_BUT == 5   &&  RATE_OF_HEATING >= 1  && CHECK_RATE_OF_HEATING == 1 )
    1d72:	85 30       	cpi	r24, 0x05	; 5
    1d74:	f9 f4       	brne	.+62     	; 0x1db4 <RESET_CLICK()+0x90>
    1d76:	20 e0       	ldi	r18, 0x00	; 0
    1d78:	30 e0       	ldi	r19, 0x00	; 0
    1d7a:	40 e8       	ldi	r20, 0x80	; 128
    1d7c:	5f e3       	ldi	r21, 0x3F	; 63
    1d7e:	60 91 8e 28 	lds	r22, 0x288E	; 0x80288e <RATE_OF_HEATING>
    1d82:	70 91 8f 28 	lds	r23, 0x288F	; 0x80288f <RATE_OF_HEATING+0x1>
    1d86:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <RATE_OF_HEATING+0x2>
    1d8a:	90 91 91 28 	lds	r25, 0x2891	; 0x802891 <RATE_OF_HEATING+0x3>
    1d8e:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    1d92:	87 fd       	sbrc	r24, 7
    1d94:	0f c0       	rjmp	.+30     	; 0x1db4 <RESET_CLICK()+0x90>
    1d96:	80 91 8b 28 	lds	r24, 0x288B	; 0x80288b <CHECK_RATE_OF_HEATING>
    1d9a:	88 23       	and	r24, r24
    1d9c:	59 f0       	breq	.+22     	; 0x1db4 <RESET_CLICK()+0x90>
    1d9e:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:582
   {
     RATE_OF_HEATING =0;
    1da2:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <RATE_OF_HEATING+0x1>
    1da6:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <RATE_OF_HEATING+0x2>
    1daa:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <RATE_OF_HEATING+0x3>
    1dae:	81 e0       	ldi	r24, 0x01	; 1
    1db0:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <CHECK_RATE_OF_HEATING>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:583
     CHECK_RATE_OF_HEATING =1;
    1db4:	82 e3       	ldi	r24, 0x32	; 50
    1db6:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:586
   }
  }
   Tick.BUZZ_INTERVAL(50); 
    1db8:	4d cc       	rjmp	.-1894   	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    1dba:	8b 30       	cpi	r24, 0x0B	; 11
    1dbc:	91 05       	cpc	r25, r1
    1dbe:	11 f0       	breq	.+4      	; 0x1dc4 <RESET_CLICK()+0xa0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:568
        SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain || 
        SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain ) 
        SELECTION_PARAMETER--;
   else
   {
      if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat    || 
    1dc0:	0d 97       	sbiw	r24, 0x0d	; 13
    1dc2:	21 f4       	brne	.+8      	; 0x1dcc <RESET_CLICK()+0xa8>
    1dc4:	81 e0       	ldi	r24, 0x01	; 1
    1dc6:	80 93 c3 28 	sts	0x28C3, r24	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:570
          SELECTION_PARAMETER == Cal2HighDecimalTemp_Enter_Heat )    
          Mode_Button_Single_Press_In_Settings =1;
    1dca:	c5 cf       	rjmp	.-118    	; 0x1d56 <RESET_CLICK()+0x32>
    1dcc:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    1dd0:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:573
      else
      {
        if(Mode_Button_Single_Press_In_Settings) Mode_Button_Single_Press_In_Settings=0;
    1dd2:	09 f4       	brne	.+2      	; 0x1dd6 <RESET_CLICK()+0xb2>
    1dd4:	c0 cf       	rjmp	.-128    	; 0x1d56 <RESET_CLICK()+0x32>
    1dd6:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    1dda:	bd cf       	rjmp	.-134    	; 0x1d56 <RESET_CLICK()+0x32>
    1ddc:	81 50       	subi	r24, 0x01	; 1
    1dde:	84 30       	cpi	r24, 0x04	; 4
    1de0:	30 f6       	brcc	.-116    	; 0x1d6e <RESET_CLICK()+0x4a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:579
      }
   }
  if (!LONG_PRESS )
  {
    if(DEGREE_VALUE_SET && ENTER_BUT==2)   ENTER_BUT=0;
    else if (ENTER_BUT >= 1 && ENTER_BUT <= 4)  ENTER_BUT--;
    1de2:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
    1de6:	c3 cf       	rjmp	.-122    	; 0x1d6e <RESET_CLICK()+0x4a>
    1de8:	08 95       	ret

00001dea <DEC_LONGPRESS()>:
DEC_LONGPRESS():
    1dea:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:588
     CHECK_RATE_OF_HEATING =1;
   }
  }
   Tick.BUZZ_INTERVAL(50); 
}
}
    1dee:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:502
}
}

void DEC_LONGPRESS()
{ 
  if(checkTempRaised==0)
    1df0:	12 c0       	rjmp	.+36     	; 0x1e16 <DEC_LONGPRESS()+0x2c>
    1df2:	80 91 46 28 	lds	r24, 0x2846	; 0x802846 <but1>
    1df6:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:504
  {
  if(!but1)
    1df8:	0e c0       	rjmp	.+28     	; 0x1e16 <DEC_LONGPRESS()+0x2c>
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	80 93 bd 28 	sts	0x28BD, r24	; 0x8028bd <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:506
  {
    BLINK_STATS=1;
    1e00:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <INC5>
    1e04:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:507
    INC5++;
    1e06:	80 93 28 28 	sts	0x2828, r24	; 0x802828 <INC5>
    1e0a:	89 31       	cpi	r24, 0x19	; 25
    1e0c:	24 f0       	brlt	.+8      	; 0x1e16 <DEC_LONGPRESS()+0x2c>
    1e0e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:508
    if (INC5 >= 25)
    1e12:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:510
    {
      Butn.SET_CHANGE_DOWN();
    1e16:	08 95       	ret

00001e18 <DEC_CLICK()>:
DEC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:511
      INC5 = 0;
    1e18:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:515
    }
  }
}
}
    1e1c:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:462
  }
}

void DEC_CLICK()
{ 
  if(checkTempRaised==0)
    1e1e:	5a c0       	rjmp	.+180    	; 0x1ed4 <DEC_CLICK()+0xbc>
    1e20:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    1e24:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:464
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1e26:	09 f4       	brne	.+2      	; 0x1e2a <DEC_CLICK()+0x12>
    1e28:	53 c0       	rjmp	.+166    	; 0x1ed0 <DEC_CLICK()+0xb8>
    1e2a:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    1e2e:	81 11       	cpse	r24, r1
    1e30:	4f c0       	rjmp	.+158    	; 0x1ed0 <DEC_CLICK()+0xb8>
    1e32:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1e36:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1e3a:	20 91 b1 28 	lds	r18, 0x28B1	; 0x8028b1 <Service_Menu>
    1e3e:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:466
  {
    if(!Service_Menu){
    1e40:	19 c0       	rjmp	.+50     	; 0x1e74 <DEC_CLICK()+0x5c>
    1e42:	01 96       	adiw	r24, 0x01	; 1
    1e44:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:467
        SELECTION_PARAMETER++;
    1e48:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1e4c:	20 91 0e 29 	lds	r18, 0x290E	; 0x80290e <select_product_type>
    1e50:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:469

      if(select_product_type )
    1e52:	39 f0       	breq	.+14     	; 0x1e62 <DEC_CLICK()+0x4a>
    1e54:	05 97       	sbiw	r24, 0x05	; 5
    1e56:	f4 f1       	brlt	.+124    	; 0x1ed4 <DEC_CLICK()+0xbc>
    1e58:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:471
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)  SELECTION_PARAMETER = Stir_ON_OFF;
    1e5c:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    1e60:	08 95       	ret
    1e62:	05 97       	sbiw	r24, 0x05	; 5
    1e64:	bc f1       	brlt	.+110    	; 0x1ed4 <DEC_CLICK()+0xbc>
    1e66:	81 e0       	ldi	r24, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:475
      }
      else 
      {
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1e6e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:481
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
    1e72:	08 95       	ret
    1e74:	86 30       	cpi	r24, 0x06	; 6
    1e76:	91 05       	cpc	r25, r1
    1e78:	19 f4       	brne	.+6      	; 0x1e80 <DEC_CLICK()+0x68>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:480
         if (SELECTION_PARAMETER > Auto_Resume_Enable)   SELECTION_PARAMETER = Unit_C_F;        
      }
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
    1e7a:	88 e0       	ldi	r24, 0x08	; 8
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	f5 cf       	rjmp	.-22     	; 0x1e6a <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:481
                   SELECTION_PARAMETER = Cal1_Point;
    1e80:	20 91 bc 28 	lds	r18, 0x28BC	; 0x8028bc <CAL2_START>
    1e84:	89 30       	cpi	r24, 0x09	; 9
    1e86:	91 05       	cpc	r25, r1
    1e88:	39 f4       	brne	.+14     	; 0x1e98 <DEC_CLICK()+0x80>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:482
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1e8a:	8b e0       	ldi	r24, 0x0B	; 11
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:483
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
    1e90:	ec cf       	rjmp	.-40     	; 0x1e6a <DEC_CLICK()+0x52>
    1e92:	80 e1       	ldi	r24, 0x10	; 16
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:482
    }
    else 
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	e9 cf       	rjmp	.-46     	; 0x1e6a <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:485
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
                       SELECTION_PARAMETER = Slow_Fast_Heating;
    1e98:	21 11       	cpse	r18, r1
    1e9a:	06 c0       	rjmp	.+12     	; 0x1ea8 <DEC_CLICK()+0x90>
    1e9c:	89 30       	cpi	r24, 0x09	; 9
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:484
    {
      if (SELECTION_PARAMETER == Calibration_Selection )     
                   SELECTION_PARAMETER = Cal1_Point;
      else if (SELECTION_PARAMETER == Cal2LowTemp_Set_Display  &&  CAL2_START )      
                      SELECTION_PARAMETER = Cal2LowDecimalTemp_Enter_Heat;
      else if (CAL2_START == 0 && SELECTION_PARAMETER >= Cal2LowTemp_Set_Display && SELECTION_PARAMETER <= Cal2_Complete_Display  )  
    1e9e:	91 05       	cpc	r25, r1
    1ea0:	4c f0       	brlt	.+18     	; 0x1eb4 <DEC_CLICK()+0x9c>
    1ea2:	80 31       	cpi	r24, 0x10	; 16
    1ea4:	91 05       	cpc	r25, r1
    1ea6:	ac f3       	brlt	.-22     	; 0x1e92 <DEC_CLICK()+0x7a>
    1ea8:	80 31       	cpi	r24, 0x10	; 16
    1eaa:	91 05       	cpc	r25, r1
    1eac:	19 f4       	brne	.+6      	; 0x1eb4 <DEC_CLICK()+0x9c>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:486
                       SELECTION_PARAMETER = Slow_Fast_Heating;
      else if(SELECTION_PARAMETER ==  Slow_Fast_Heating)            
    1eae:	81 e1       	ldi	r24, 0x11	; 17
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	db cf       	rjmp	.-74     	; 0x1e6a <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:487
              SELECTION_PARAMETER = Log;                  
    1eb4:	81 31       	cpi	r24, 0x11	; 17
    1eb6:	91 05       	cpc	r25, r1
    1eb8:	19 f4       	brne	.+6      	; 0x1ec0 <DEC_CLICK()+0xa8>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:488
      else if(SELECTION_PARAMETER ==  Log)            
    1eba:	82 e1       	ldi	r24, 0x12	; 18
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	d5 cf       	rjmp	.-86     	; 0x1e6a <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:489
              SELECTION_PARAMETER = FactoryAndSure_Reset;       
    1ec0:	82 31       	cpi	r24, 0x12	; 18
    1ec2:	91 05       	cpc	r25, r1
    1ec4:	1c f0       	brlt	.+6      	; 0x1ecc <DEC_CLICK()+0xb4>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:490
      else if(SELECTION_PARAMETER >=  FactoryAndSure_Reset)            
    1ec6:	85 e0       	ldi	r24, 0x05	; 5
    1ec8:	90 e0       	ldi	r25, 0x00	; 0
    1eca:	cf cf       	rjmp	.-98     	; 0x1e6a <DEC_CLICK()+0x52>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:491
              SELECTION_PARAMETER = Product_Selection_Parameter;
    1ecc:	01 96       	adiw	r24, 0x01	; 1
    1ece:	cd cf       	rjmp	.-102    	; 0x1e6a <DEC_CLICK()+0x52>
    1ed0:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <Bclass::SET_CHANGE_DOWN() [clone .constprop.81]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:493
      else                                                 
             SELECTION_PARAMETER++;             
    1ed4:	08 95       	ret

00001ed6 <INC_LONGPRESS()>:
INC_LONGPRESS():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:496
    }
  }
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))       Butn.SET_CHANGE_DOWN();
    1ed6:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:498
}
}
    1eda:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:436
}
}

void INC_LONGPRESS()
{
  if(checkTempRaised==0)
    1edc:	12 c0       	rjmp	.+36     	; 0x1f02 <INC_LONGPRESS()+0x2c>
    1ede:	80 91 46 28 	lds	r24, 0x2846	; 0x802846 <but1>
    1ee2:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:438
  {
  if(!but1)
    1ee4:	0e c0       	rjmp	.+28     	; 0x1f02 <INC_LONGPRESS()+0x2c>
    1ee6:	81 e0       	ldi	r24, 0x01	; 1
    1ee8:	80 93 bd 28 	sts	0x28BD, r24	; 0x8028bd <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:440
  {
    BLINK_STATS=1;
    1eec:	80 91 28 28 	lds	r24, 0x2828	; 0x802828 <INC5>
    1ef0:	8f 5f       	subi	r24, 0xFF	; 255
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:441
    INC5++;
    1ef2:	80 93 28 28 	sts	0x2828, r24	; 0x802828 <INC5>
    1ef6:	89 31       	cpi	r24, 0x19	; 25
    1ef8:	24 f0       	brlt	.+8      	; 0x1f02 <INC_LONGPRESS()+0x2c>
    1efa:	0e 94 93 01 	call	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:442
    if (INC5 >= 25)
    1efe:	10 92 28 28 	sts	0x2828, r1	; 0x802828 <INC5>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:444
    {
      Butn.SET_CHANGE_UP();
    1f02:	08 95       	ret

00001f04 <INC_CLICK()>:
INC_CLICK():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:445
      INC5 = 0;
    1f04:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:449
    }
  }
}
}
    1f08:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:391
  button4.tick();  
}

void INC_CLICK()
{ 
  if(checkTempRaised==0)
    1f0a:	26 c0       	rjmp	.+76     	; 0x1f58 <INC_CLICK()+0x54>
    1f0c:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    1f10:	88 23       	and	r24, r24
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:393
  {
  if (LONG_PRESS && !Mode_Button_Single_Press_In_Settings )
    1f12:	09 f4       	brne	.+2      	; 0x1f16 <INC_CLICK()+0x12>
    1f14:	45 c0       	rjmp	.+138    	; 0x1fa0 <INC_CLICK()+0x9c>
    1f16:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    1f1a:	81 11       	cpse	r24, r1
    1f1c:	41 c0       	rjmp	.+130    	; 0x1fa0 <INC_CLICK()+0x9c>
    1f1e:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    1f22:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    1f26:	20 91 b1 28 	lds	r18, 0x28B1	; 0x8028b1 <Service_Menu>
    1f2a:	21 11       	cpse	r18, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:395
  {    
    if(!Service_Menu)
    1f2c:	16 c0       	rjmp	.+44     	; 0x1f5a <INC_CLICK()+0x56>
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:397
    {
      SELECTION_PARAMETER--;                              //------------------- scroll down menu
    1f34:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1f38:	20 91 0e 29 	lds	r18, 0x290E	; 0x80290e <select_product_type>
    1f3c:	22 23       	and	r18, r18
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:398
      if(select_product_type )
    1f3e:	49 f0       	breq	.+18     	; 0x1f52 <INC_CLICK()+0x4e>
    1f40:	97 ff       	sbrs	r25, 7
    1f42:	0a c0       	rjmp	.+20     	; 0x1f58 <INC_CLICK()+0x54>
    1f44:	84 e0       	ldi	r24, 0x04	; 4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:400
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1f4c:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:410
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
                              SELECTION_PARAMETER = Calibration_Selection;
    1f50:	08 95       	ret
    1f52:	18 16       	cp	r1, r24
    1f54:	19 06       	cpc	r1, r25
    1f56:	b4 f7       	brge	.-20     	; 0x1f44 <INC_CLICK()+0x40>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:404
      {
         if(SELECTION_PARAMETER < Stir_ON_OFF) SELECTION_PARAMETER = Auto_Resume_Enable;
      }
      else 
      {
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
    1f58:	08 95       	ret
    1f5a:	88 30       	cpi	r24, 0x08	; 8
    1f5c:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:432
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
}
}
    1f5e:	19 f4       	brne	.+6      	; 0x1f66 <INC_CLICK()+0x62>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:409
        if(SELECTION_PARAMETER < Unit_C_F) SELECTION_PARAMETER = Auto_Resume_Enable;        
      }
    }
    else
    {
      if ( SELECTION_PARAMETER == Cal1_Point ) 
    1f60:	86 e0       	ldi	r24, 0x06	; 6
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	f1 cf       	rjmp	.-30     	; 0x1f48 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:410
                              SELECTION_PARAMETER = Calibration_Selection;
    1f66:	8b 30       	cpi	r24, 0x0B	; 11
    1f68:	91 05       	cpc	r25, r1
    1f6a:	19 f4       	brne	.+6      	; 0x1f72 <INC_CLICK()+0x6e>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:412
                              
      else if (SELECTION_PARAMETER == Cal2LowDecimalTemp_Enter_Heat ) 
    1f6c:	89 e0       	ldi	r24, 0x09	; 9
    1f6e:	90 e0       	ldi	r25, 0x00	; 0
    1f70:	eb cf       	rjmp	.-42     	; 0x1f48 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:413
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;
    1f72:	81 31       	cpi	r24, 0x11	; 17
    1f74:	91 05       	cpc	r25, r1
    1f76:	19 f4       	brne	.+6      	; 0x1f7e <INC_CLICK()+0x7a>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:415
                                
      else if(SELECTION_PARAMETER == Log)   
    1f78:	80 e1       	ldi	r24, 0x10	; 16
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	e5 cf       	rjmp	.-54     	; 0x1f48 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:416
                                SELECTION_PARAMETER = Slow_Fast_Heating;
    1f7e:	82 31       	cpi	r24, 0x12	; 18
    1f80:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:418
                                                         
      else if(SELECTION_PARAMETER == FactoryAndSure_Reset)   
    1f82:	19 f4       	brne	.+6      	; 0x1f8a <INC_CLICK()+0x86>
    1f84:	81 e1       	ldi	r24, 0x11	; 17
    1f86:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:419
                                SELECTION_PARAMETER = Log;
    1f88:	df cf       	rjmp	.-66     	; 0x1f48 <INC_CLICK()+0x44>
    1f8a:	80 31       	cpi	r24, 0x10	; 16
    1f8c:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:421
                                
      else if(SELECTION_PARAMETER == Slow_Fast_Heating)   
    1f8e:	71 f3       	breq	.-36     	; 0x1f6c <INC_CLICK()+0x68>
    1f90:	86 30       	cpi	r24, 0x06	; 6
    1f92:	91 05       	cpc	r25, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:424
                                SELECTION_PARAMETER = Cal2LowTemp_Set_Display;  
                                                              
      else if (SELECTION_PARAMETER < Calibration_Selection)
    1f94:	1c f4       	brge	.+6      	; 0x1f9c <INC_CLICK()+0x98>
    1f96:	82 e1       	ldi	r24, 0x12	; 18
    1f98:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:425
       SELECTION_PARAMETER = FactoryAndSure_Reset;  
    1f9a:	d6 cf       	rjmp	.-84     	; 0x1f48 <INC_CLICK()+0x44>
    1f9c:	01 97       	sbiw	r24, 0x01	; 1
    1f9e:	d4 cf       	rjmp	.-88     	; 0x1f48 <INC_CLICK()+0x44>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:426
      else                      SELECTION_PARAMETER--;      
    1fa0:	0c 94 93 01 	jmp	0x326	; 0x326 <Bclass::SET_CHANGE_UP() [clone .constprop.82]>

00001fa4 <MODE_LONG_PRESS_START()>:
MODE_LONG_PRESS_START():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:430
          
    }
  }  
  if (!LONG_PRESS  || (LONG_PRESS && Mode_Button_Single_Press_In_Settings ))    Butn.SET_CHANGE_UP();
    1fa4:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:364
}
}

void MODE_LONG_PRESS_START()
{ 
  if(checkTempRaised==0)
    1fa8:	81 11       	cpse	r24, r1
    1faa:	25 c0       	rjmp	.+74     	; 0x1ff6 <MODE_LONG_PRESS_START()+0x52>
    1fac:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:366
  {
  if (!ENTER_BUT)
    1fb0:	81 11       	cpse	r24, r1
    1fb2:	17 c0       	rjmp	.+46     	; 0x1fe2 <MODE_LONG_PRESS_START()+0x3e>
    1fb4:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:368
  {
    if (!LONG_PRESS )                                    //------------------at home page  user setting
    1fb8:	81 11       	cpse	r24, r1
    1fba:	13 c0       	rjmp	.+38     	; 0x1fe2 <MODE_LONG_PRESS_START()+0x3e>
    1fbc:	8e e5       	ldi	r24, 0x5E	; 94
    1fbe:	91 e0       	ldi	r25, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:370
    {
      i = 350;
    1fc0:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    1fc4:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    1fc8:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:371
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
    1fcc:	88 23       	and	r24, r24
    1fce:	61 f0       	breq	.+24     	; 0x1fe8 <MODE_LONG_PRESS_START()+0x44>
    1fd0:	10 92 09 28 	sts	0x2809, r1	; 0x802809 <SELECTION_PARAMETER>
    1fd4:	10 92 0a 28 	sts	0x280A, r1	; 0x80280a <SELECTION_PARAMETER+0x1>
    1fd8:	81 e0       	ldi	r24, 0x01	; 1
    1fda:	80 93 54 29 	sts	0x2954, r24	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:373
      else                      SELECTION_PARAMETER = Unit_C_F;
      LONG_PRESS = 1;                                    //------------------go to menu 
    1fde:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <RST_BUTT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:374
      RST_BUTT = 1;
    1fe2:	88 ec       	ldi	r24, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:377
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	36 cb       	rjmp	.-2452   	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    1fe8:	81 e0       	ldi	r24, 0x01	; 1
    1fea:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:372
  {
    if (!LONG_PRESS )                                    //------------------at home page  user setting
    {
      i = 350;
      if (select_product_type ) SELECTION_PARAMETER = Stir_ON_OFF;
      else                      SELECTION_PARAMETER = Unit_C_F;
    1fec:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    1ff0:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    1ff4:	f1 cf       	rjmp	.-30     	; 0x1fd8 <MODE_LONG_PRESS_START()+0x34>
    1ff6:	08 95       	ret

00001ff8 <UartClass::begin(unsigned long)>:
begin():
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:379
      RST_BUTT = 1;
    }   
  }
 Tick.BUZZ_INTERVAL(200); 
}
}
    1ff8:	dc 01       	movw	r26, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\cores\coreX-corefiles/UART.h:160

  public:
    inline UartClass(volatile USART_t *hwserial_module, uint8_t hwserial_rx_pin, uint8_t hwserial_tx_pin, uint8_t hwserial_rx_pin_swap, uint8_t hwserial_tx_pin_swap, uint8_t dre_vect_num, uint8_t uart_mux, uint8_t uart_mux_swap);
    bool pins(uint8_t tx, uint8_t rx);
    bool swap(uint8_t state = 1);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    1ffa:	ed 91       	ld	r30, X+
    1ffc:	fc 91       	ld	r31, X
    1ffe:	04 88       	ldd	r0, Z+20	; 0x14
    2000:	f5 89       	ldd	r31, Z+21	; 0x15
    2002:	e0 2d       	mov	r30, r0
    2004:	23 e0       	ldi	r18, 0x03	; 3
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	09 94       	ijmp

0000200a <EERef::operator*() const>:
operator*():
    200a:	fc 01       	movw	r30, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:52
{
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
    200c:	80 81       	ld	r24, Z
    200e:	91 81       	ldd	r25, Z+1	; 0x01
    2010:	fc 01       	movw	r30, r24
    2012:	ff 27       	eor	r31, r31
    2014:	90 fd       	sbrc	r25, 0
    2016:	06 c0       	rjmp	.+12     	; 0x2024 <EERef::operator*() const+0x1a>
    2018:	80 e0       	ldi	r24, 0x00	; 0
    201a:	94 e1       	ldi	r25, 0x14	; 20
    201c:	e8 2b       	or	r30, r24
    201e:	f9 2b       	or	r31, r25
    2020:	80 81       	ld	r24, Z
    2022:	08 95       	ret
    2024:	80 e0       	ldi	r24, 0x00	; 0
    2026:	93 e1       	ldi	r25, 0x13	; 19
    2028:	f9 cf       	rjmp	.-14     	; 0x201c <EERef::operator*() const+0x12>

0000202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>:
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    202a:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    202c:	ff 92       	push	r15
    202e:	0f 93       	push	r16
    2030:	1f 93       	push	r17
    2032:	cf 93       	push	r28
    2034:	df 93       	push	r29
    2036:	00 d0       	rcall	.+0      	; 0x2038 <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]+0xe>
    2038:	cd b7       	in	r28, 0x3d	; 61
    203a:	de b7       	in	r29, 0x3e	; 62
    203c:	8c 01       	movw	r16, r24
    203e:	7b 01       	movw	r14, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2040:	89 83       	std	Y+1, r24	; 0x01
    2042:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2044:	ce 01       	movw	r24, r28
    2046:	01 96       	adiw	r24, 0x01	; 1
    2048:	e0 df       	rcall	.-64     	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    204a:	f7 01       	movw	r30, r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    204c:	80 83       	st	Z, r24
_ZN5EEPtrppEv():
    204e:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    2050:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    2052:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2054:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    2056:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2058:	01 96       	adiw	r24, 0x01	; 1
    205a:	d7 df       	rcall	.-82     	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass3getIiEERT_iS2_.isra.4():
    205c:	f7 01       	movw	r30, r14
    205e:	81 83       	std	Z+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    2060:	c7 01       	movw	r24, r14
    2062:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    2064:	0f 90       	pop	r0
    2066:	df 91       	pop	r29
    2068:	cf 91       	pop	r28
    206a:	1f 91       	pop	r17
    206c:	0f 91       	pop	r16
    206e:	ff 90       	pop	r15
    2070:	ef 90       	pop	r14
    2072:	08 95       	ret

00002074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>:
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    2074:	af 92       	push	r10
    2076:	bf 92       	push	r11
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:141
  EEPtr end() { return length(); } //Standards requires this to be the item after the last valid entry. The returned pointer is invalid.
  uint16_t length() { return EEPROM_SIZE; }

  //Functionality to 'get' and 'put' objects to and from EEPROM.
  template <typename T>
  T &get(int idx, T &t)
    2078:	cf 92       	push	r12
    207a:	df 92       	push	r13
    207c:	ef 92       	push	r14
    207e:	ff 92       	push	r15
    2080:	0f 93       	push	r16
    2082:	1f 93       	push	r17
    2084:	cf 93       	push	r28
    2086:	df 93       	push	r29
    2088:	00 d0       	rcall	.+0      	; 0x208a <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x16>
    208a:	cd b7       	in	r28, 0x3d	; 61
    208c:	de b7       	in	r29, 0x3e	; 62
    208e:	8b 01       	movw	r16, r22
    2090:	6b 01       	movw	r12, r22
    2092:	24 e0       	ldi	r18, 0x04	; 4
    2094:	c2 0e       	add	r12, r18
    2096:	d1 1c       	adc	r13, r1
    2098:	7b 01       	movw	r14, r22
    209a:	5c 01       	movw	r10, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    209c:	a6 1a       	sub	r10, r22
    209e:	b7 0a       	sbc	r11, r23
    20a0:	c5 01       	movw	r24, r10
    20a2:	8e 0d       	add	r24, r14
    20a4:	9f 1d       	adc	r25, r15
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20aa:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20ac:	01 96       	adiw	r24, 0x01	; 1
    20ae:	ad df       	rcall	.-166    	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass3getIlEERT_iS2_.isra.6():
    20b0:	f7 01       	movw	r30, r14
    20b2:	81 93       	st	Z+, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:145
  template <typename T>
  T &get(int idx, T &t)
  {
    EEPtr e = idx;
    uint8_t *ptr = (uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    20b4:	7f 01       	movw	r14, r30
    20b6:	ec 15       	cp	r30, r12
    20b8:	fd 05       	cpc	r31, r13
    20ba:	91 f7       	brne	.-28     	; 0x20a0 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]+0x2c>
    20bc:	c8 01       	movw	r24, r16
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:147
    return t;
  }
    20be:	0f 90       	pop	r0
    20c0:	0f 90       	pop	r0
    20c2:	df 91       	pop	r29
    20c4:	cf 91       	pop	r28
    20c6:	1f 91       	pop	r17
    20c8:	0f 91       	pop	r16
    20ca:	ff 90       	pop	r15
    20cc:	ef 90       	pop	r14
    20ce:	df 90       	pop	r13
    20d0:	cf 90       	pop	r12
    20d2:	bf 90       	pop	r11
    20d4:	af 90       	pop	r10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    20d6:	08 95       	ret

000020d8 <EEPROMClass::read(int) [clone .isra.0]>:
_ZN11EEPROMClass4readEi.isra.0():
    20d8:	cf 93       	push	r28
    20da:	df 93       	push	r29
    20dc:	00 d0       	rcall	.+0      	; 0x20de <EEPROMClass::read(int) [clone .isra.0]+0x6>
    20de:	cd b7       	in	r28, 0x3d	; 61
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:49
}

struct EERef
{
  EERef(const int index)
      : index(index) {}
    20e0:	de b7       	in	r29, 0x3e	; 62
_ZN5EERefC2Ei():
    20e2:	89 83       	std	Y+1, r24	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    20e4:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    20e6:	ce 01       	movw	r24, r28
    20e8:	01 96       	adiw	r24, 0x01	; 1
    20ea:	8f df       	rcall	.-226    	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass4readEi.isra.0():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:130

struct EEPROMClass
{
  //Basic user access methods.
  EERef operator[](const int idx) { return idx; }
  uint8_t read(int idx) { return EERef(idx); }
    20ec:	0f 90       	pop	r0
    20ee:	0f 90       	pop	r0
    20f0:	df 91       	pop	r29
    20f2:	cf 91       	pop	r28
    20f4:	08 95       	ret

000020f6 <nvm_write_byte(unsigned int, unsigned char)>:
nvm_write_byte():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    20f6:	fc 01       	movw	r30, r24
    20f8:	ff 27       	eor	r31, r31
    20fa:	90 fd       	sbrc	r25, 0
    20fc:	12 c0       	rjmp	.+36     	; 0x2122 <nvm_write_byte(unsigned int, unsigned char)+0x2c>
    20fe:	80 e0       	ldi	r24, 0x00	; 0
    2100:	94 e1       	ldi	r25, 0x14	; 20
    2102:	e8 2b       	or	r30, r24
    2104:	f9 2b       	or	r31, r25
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:38
  uint8_t oldSREG = SREG;
    2106:	60 83       	st	Z, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:39
  cli();
    2108:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:40
  _PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_PAGEERASEWRITE_gc);
    210a:	f8 94       	cli
    210c:	9d e9       	ldi	r25, 0x9D	; 157
    210e:	23 e0       	ldi	r18, 0x03	; 3
    2110:	94 bf       	out	0x34, r25	; 52
    2112:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__TEXT_REGION_LENGTH__+0x7f5000>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:42
  SREG = oldSREG;
  while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm)
    2116:	8f bf       	out	0x3f, r24	; 63
    2118:	80 91 02 10 	lds	r24, 0x1002	; 0x801002 <__TEXT_REGION_LENGTH__+0x7f5002>
    211c:	81 fd       	sbrc	r24, 1
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:44
    ;
}
    211e:	fc cf       	rjmp	.-8      	; 0x2118 <nvm_write_byte(unsigned int, unsigned char)+0x22>
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:37

#define nvm_read_byte(idx) *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START))

static void nvm_write_byte(uint16_t idx, uint8_t dat)
{
  *(uint8_t *)((idx & 0xFF) | ((idx & 0x100) ? USER_SIGNATURES_START : EEPROM_START)) = dat;
    2120:	08 95       	ret
    2122:	80 e0       	ldi	r24, 0x00	; 0
    2124:	93 e1       	ldi	r25, 0x13	; 19
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    2126:	ed cf       	rjmp	.-38     	; 0x2102 <nvm_write_byte(unsigned int, unsigned char)+0xc>

00002128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>:
operator=():
    2128:	e6 cf       	rjmp	.-52     	; 0x20f6 <nvm_write_byte(unsigned int, unsigned char)>

0000212a <EERef::update(unsigned char)>:
update():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    212a:	1f 93       	push	r17
    212c:	cf 93       	push	r28
    212e:	df 93       	push	r29
    2130:	ec 01       	movw	r28, r24
    2132:	16 2f       	mov	r17, r22
_ZNK5EERefcvhEv():
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:53
  EERef(const int index)
      : index(index) {}

  //Access/read members.
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }
    2134:	6a df       	rcall	.-300    	; 0x200a <EERef::operator*() const>
update():
    2136:	81 17       	cp	r24, r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2138:	21 f0       	breq	.+8      	; 0x2142 <EERef::update(unsigned char)+0x18>
operator=():
    213a:	61 2f       	mov	r22, r17
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:57
  uint8_t operator*() const { return nvm_read_byte(index); }
  operator uint8_t() const { return **this; }

  //Assignment/write members.
  EERef &operator=(const EERef &ref) { return *this = *ref; }
  EERef &operator=(uint8_t in) { return nvm_write_byte(index, in), *this; }
    213c:	88 81       	ld	r24, Y
    213e:	99 81       	ldd	r25, Y+1	; 0x01
    2140:	da df       	rcall	.-76     	; 0x20f6 <nvm_write_byte(unsigned int, unsigned char)>
update():
    2142:	ce 01       	movw	r24, r28
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:69
  EERef &operator&=(uint8_t in) { return *this = **this & in; }
  EERef &operator|=(uint8_t in) { return *this = **this | in; }
  EERef &operator<<=(uint8_t in) { return *this = **this << in; }
  EERef &operator>>=(uint8_t in) { return *this = **this >> in; }

  EERef &update(uint8_t in) { return in != *this ? *this = in : *this; }
    2144:	df 91       	pop	r29
    2146:	cf 91       	pop	r28
    2148:	1f 91       	pop	r17
    214a:	08 95       	ret

0000214c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>:
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    214c:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    214e:	ff 92       	push	r15
    2150:	0f 93       	push	r16
    2152:	1f 93       	push	r17
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	00 d0       	rcall	.+0      	; 0x215a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]+0xe>
    215a:	cd b7       	in	r28, 0x3d	; 61
    215c:	de b7       	in	r29, 0x3e	; 62
    215e:	8a e0       	ldi	r24, 0x0A	; 10
    2160:	e8 2e       	mov	r14, r24
    2162:	89 e2       	ldi	r24, 0x29	; 41
    2164:	f8 2e       	mov	r15, r24
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:101
***/

struct EEPtr
{
  EEPtr(const int index)
      : index(index) {}
    2166:	06 e4       	ldi	r16, 0x46	; 70
    2168:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    216a:	09 83       	std	Y+1, r16	; 0x01
    216c:	1a 83       	std	Y+2, r17	; 0x02
    216e:	f7 01       	movw	r30, r14
    2170:	61 91       	ld	r22, Z+
    2172:	7f 01       	movw	r14, r30
    2174:	ce 01       	movw	r24, r28
    2176:	01 96       	adiw	r24, 0x01	; 1
    2178:	d8 df       	rcall	.-80     	; 0x212a <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    217a:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    217c:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIdEERKT_iS3_.isra.10():
    217e:	0a 34       	cpi	r16, 0x4A	; 74
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    2180:	11 05       	cpc	r17, r1
    2182:	99 f7       	brne	.-26     	; 0x216a <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]+0x1e>
    2184:	8a e0       	ldi	r24, 0x0A	; 10
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2186:	99 e2       	ldi	r25, 0x29	; 41
    2188:	0f 90       	pop	r0
    218a:	0f 90       	pop	r0
    218c:	df 91       	pop	r29
    218e:	cf 91       	pop	r28
    2190:	1f 91       	pop	r17
    2192:	0f 91       	pop	r16
    2194:	ff 90       	pop	r15
    2196:	ef 90       	pop	r14
    2198:	08 95       	ret

0000219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>:
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    219a:	ef 92       	push	r14
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    219c:	ff 92       	push	r15
    219e:	0f 93       	push	r16
    21a0:	1f 93       	push	r17
    21a2:	cf 93       	push	r28
    21a4:	df 93       	push	r29
    21a6:	00 d0       	rcall	.+0      	; 0x21a8 <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]+0xe>
    21a8:	cd b7       	in	r28, 0x3d	; 61
    21aa:	de b7       	in	r29, 0x3e	; 62
    21ac:	8c 01       	movw	r16, r24
    21ae:	7b 01       	movw	r14, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21b0:	89 83       	std	Y+1, r24	; 0x01
    21b2:	9a 83       	std	Y+2, r25	; 0x02
    21b4:	fb 01       	movw	r30, r22
    21b6:	60 81       	ld	r22, Z
    21b8:	ce 01       	movw	r24, r28
    21ba:	01 96       	adiw	r24, 0x01	; 1
    21bc:	b6 df       	rcall	.-148    	; 0x212a <EERef::update(unsigned char)>
_ZN5EEPtrppEv():
    21be:	0f 5f       	subi	r16, 0xFF	; 255
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:111
  //Iterator functionality.
  bool operator!=(const EEPtr &ptr) { return index != ptr.index; }
  EERef operator*() { return index; }

  /** Prefix & Postfix increment/decrement **/
  EEPtr &operator++() { return ++index, *this; }
    21c0:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3putIiEERKT_iS3_.isra.9():
    21c2:	09 83       	std	Y+1, r16	; 0x01
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  template <typename T>
  const T &put(int idx, const T &t)
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    21c4:	1a 83       	std	Y+2, r17	; 0x02
    21c6:	f7 01       	movw	r30, r14
    21c8:	61 81       	ldd	r22, Z+1	; 0x01
    21ca:	ce 01       	movw	r24, r28
    21cc:	01 96       	adiw	r24, 0x01	; 1
    21ce:	ad df       	rcall	.-166    	; 0x212a <EERef::update(unsigned char)>
    21d0:	c7 01       	movw	r24, r14
    21d2:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    21d4:	0f 90       	pop	r0
    21d6:	df 91       	pop	r29
    21d8:	cf 91       	pop	r28
    21da:	1f 91       	pop	r17
    21dc:	0f 91       	pop	r16
    21de:	ff 90       	pop	r15
    21e0:	ef 90       	pop	r14
    21e2:	08 95       	ret

000021e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>:
_ZN11EEPROMClass3putIlEERKT_iS3_.isra.11():
    21e4:	af 92       	push	r10
    21e6:	bf 92       	push	r11
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:150
    for (int count = sizeof(T); count; --count, ++e) *ptr++ = *e;
    return t;
  }

  template <typename T>
  const T &put(int idx, const T &t)
    21e8:	cf 92       	push	r12
    21ea:	df 92       	push	r13
    21ec:	ef 92       	push	r14
    21ee:	ff 92       	push	r15
    21f0:	0f 93       	push	r16
    21f2:	1f 93       	push	r17
    21f4:	cf 93       	push	r28
    21f6:	df 93       	push	r29
    21f8:	00 d0       	rcall	.+0      	; 0x21fa <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]+0x16>
    21fa:	cd b7       	in	r28, 0x3d	; 61
    21fc:	de b7       	in	r29, 0x3e	; 62
    21fe:	8b 01       	movw	r16, r22
    2200:	6b 01       	movw	r12, r22
    2202:	24 e0       	ldi	r18, 0x04	; 4
    2204:	c2 0e       	add	r12, r18
    2206:	d1 1c       	adc	r13, r1
    2208:	7b 01       	movw	r14, r22
    220a:	5c 01       	movw	r10, r24
    220c:	a6 1a       	sub	r10, r22
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:154
  {
    EEPtr e = idx;
    const uint8_t *ptr = (const uint8_t *)&t;
    for (int count = sizeof(T); count; --count, ++e) (*e).update(*ptr++);
    220e:	b7 0a       	sbc	r11, r23
    2210:	c5 01       	movw	r24, r10
    2212:	8e 0d       	add	r24, r14
    2214:	9f 1d       	adc	r25, r15
    2216:	89 83       	std	Y+1, r24	; 0x01
    2218:	9a 83       	std	Y+2, r25	; 0x02
    221a:	f7 01       	movw	r30, r14
    221c:	61 91       	ld	r22, Z+
    221e:	7f 01       	movw	r14, r30
    2220:	ce 01       	movw	r24, r28
    2222:	01 96       	adiw	r24, 0x01	; 1
    2224:	82 df       	rcall	.-252    	; 0x212a <EERef::update(unsigned char)>
    2226:	ec 14       	cp	r14, r12
    2228:	fd 04       	cpc	r15, r13
    222a:	91 f7       	brne	.-28     	; 0x2210 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]+0x2c>
    222c:	c8 01       	movw	r24, r16
    222e:	0f 90       	pop	r0
    2230:	0f 90       	pop	r0
C:\Users\Siddhesh.Hadawale\Documents\ArduinoData\packages\MegaCoreX\hardware\megaavr\1.1.2\libraries\EEPROM\src/EEPROM.h:156
    return t;
  }
    2232:	df 91       	pop	r29
    2234:	cf 91       	pop	r28
    2236:	1f 91       	pop	r17
    2238:	0f 91       	pop	r16
    223a:	ff 90       	pop	r15
    223c:	ef 90       	pop	r14
    223e:	df 90       	pop	r13
    2240:	cf 90       	pop	r12
    2242:	bf 90       	pop	r11
    2244:	af 90       	pop	r10
    2246:	08 95       	ret

00002248 <MODE_CLICK()>:
MODE_CLICK():
    2248:	2f 92       	push	r2
    224a:	3f 92       	push	r3
    224c:	4f 92       	push	r4
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:148
//     REP++;
//   }
}

void MODE_CLICK()
{
    224e:	5f 92       	push	r5
    2250:	6f 92       	push	r6
    2252:	7f 92       	push	r7
    2254:	8f 92       	push	r8
    2256:	9f 92       	push	r9
    2258:	af 92       	push	r10
    225a:	bf 92       	push	r11
    225c:	cf 92       	push	r12
    225e:	df 92       	push	r13
    2260:	ef 92       	push	r14
    2262:	ff 92       	push	r15
    2264:	0f 93       	push	r16
    2266:	1f 93       	push	r17
    2268:	cf 93       	push	r28
    226a:	df 93       	push	r29
    226c:	00 d0       	rcall	.+0      	; 0x226e <MODE_CLICK()+0x26>
    226e:	1f 92       	push	r1
    2270:	cd b7       	in	r28, 0x3d	; 61
    2272:	de b7       	in	r29, 0x3e	; 62
    2274:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
    2278:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:149
  if(checkTempRaised==0)
    227a:	58 c0       	rjmp	.+176    	; 0x232c <MODE_CLICK()+0xe4>
    227c:	10 92 bd 28 	sts	0x28BD, r1	; 0x8028bd <BLINK_STATS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:151
  {
  BLINK_STATS=0;                                                        //-----------------------To blink start parameter
    2280:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:152
  if (!LONG_PRESS )                                                     //-----------------------no longpress (out of settings)
    2284:	81 11       	cpse	r24, r1
    2286:	6a c0       	rjmp	.+212    	; 0x235c <MODE_CLICK()+0x114>
    2288:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:154
  {
    i = 0;
    228c:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    2290:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:156
         
    if (ENTER_BUT == 4 && SET_MIN == 0 ) ENTER_BUT = 4;                 //-----------------------when selected time is zero, process should not start
    2294:	84 30       	cpi	r24, 0x04	; 4
    2296:	31 f4       	brne	.+12     	; 0x22a4 <MODE_CLICK()+0x5c>
    2298:	20 91 a6 28 	lds	r18, 0x28A6	; 0x8028a6 <SET_MIN>
    229c:	30 91 a7 28 	lds	r19, 0x28A7	; 0x8028a7 <SET_MIN+0x1>
    22a0:	23 2b       	or	r18, r19
    22a2:	51 f0       	breq	.+20     	; 0x22b8 <MODE_CLICK()+0x70>
    22a4:	90 91 53 29 	lds	r25, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:157
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    22a8:	99 23       	and	r25, r25
    22aa:	09 f4       	brne	.+2      	; 0x22ae <MODE_CLICK()+0x66>
    22ac:	55 c0       	rjmp	.+170    	; 0x2358 <MODE_CLICK()+0x110>
    22ae:	81 11       	cpse	r24, r1
    22b0:	53 c0       	rjmp	.+166    	; 0x2358 <MODE_CLICK()+0x110>
    22b2:	82 e0       	ldi	r24, 0x02	; 2
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:160
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    22b4:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:162
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    22b8:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:349
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
  }
   if (( ENTER_BUT >= 5) && select_product_type )                       //Product Selections
    22bc:	85 30       	cpi	r24, 0x05	; 5
    22be:	0c f4       	brge	.+2      	; 0x22c2 <MODE_CLICK()+0x7a>
    22c0:	80 c3       	rjmp	.+1792   	; 0x29c2 <MODE_CLICK()+0x77a>
    22c2:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    22c6:	88 23       	and	r24, r24
    22c8:	01 f1       	breq	.+64     	; 0x230a <MODE_CLICK()+0xc2>
    22ca:	85 e0       	ldi	r24, 0x05	; 5
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:351
   {
      ENTER_BUT = 5;  
    22cc:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
    22d0:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:352
      if(PUMP_FLAG)   PUMP_FLAG=0;
    22d4:	88 23       	and	r24, r24
    22d6:	09 f4       	brne	.+2      	; 0x22da <MODE_CLICK()+0x92>
    22d8:	70 c3       	rjmp	.+1760   	; 0x29ba <MODE_CLICK()+0x772>
    22da:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <PUMP_FLAG>
Save_Pump_Data():
    22de:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Eeprom.cpp:67
  EEPROM.write(130, SET_MINUTE ); 
}

void Rclass :: Save_Pump_Data()
{
  if(!PUMP_FLAG) 
    22e2:	81 11       	cpse	r24, r1
    22e4:	12 c0       	rjmp	.+36     	; 0x230a <MODE_CLICK()+0xc2>
    22e6:	61 e0       	ldi	r22, 0x01	; 1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Eeprom.cpp:69
    {
      STIR_VALUE_SET = SET_VALUE[5]; 
    22e8:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
    22ec:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
    22f0:	89 2b       	or	r24, r25
    22f2:	09 f4       	brne	.+2      	; 0x22f6 <MODE_CLICK()+0xae>
    22f4:	60 e0       	ldi	r22, 0x00	; 0
    22f6:	60 93 aa 28 	sts	0x28AA, r22	; 0x8028aa <STIR_VALUE_SET>
    22fa:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Eeprom.cpp:70
      EEPROM.write(0, STIR_VALUE_SET);
    22fc:	80 e0       	ldi	r24, 0x00	; 0
    22fe:	14 df       	rcall	.-472    	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
MODE_CLICK():
    2300:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:357
      else            PUMP_FLAG =1;
      Eeprom.Save_Pump_Data(); 
   }
   
   if(ENTER_BUT >= 5 && REP1<1) { Tick.BUZZ_INTERVAL(1000);  REP1++; }  //long pree
    2304:	85 30       	cpi	r24, 0x05	; 5
    2306:	0c f4       	brge	.+2      	; 0x230a <MODE_CLICK()+0xc2>
    2308:	5c c3       	rjmp	.+1720   	; 0x29c2 <MODE_CLICK()+0x77a>
    230a:	00 91 95 28 	lds	r16, 0x2895	; 0x802895 <REP1>
    230e:	10 91 96 28 	lds	r17, 0x2896	; 0x802896 <REP1+0x1>
    2312:	10 16       	cp	r1, r16
    2314:	11 06       	cpc	r1, r17
    2316:	0c f4       	brge	.+2      	; 0x231a <MODE_CLICK()+0xd2>
    2318:	54 c3       	rjmp	.+1704   	; 0x29c2 <MODE_CLICK()+0x77a>
    231a:	88 ee       	ldi	r24, 0xE8	; 232
    231c:	93 e0       	ldi	r25, 0x03	; 3
    231e:	9a d9       	rcall	.-3276   	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    2320:	0f 5f       	subi	r16, 0xFF	; 255
    2322:	1f 4f       	sbci	r17, 0xFF	; 255
    2324:	00 93 95 28 	sts	0x2895, r16	; 0x802895 <REP1>
    2328:	10 93 96 28 	sts	0x2896, r17	; 0x802896 <REP1+0x1>
    232c:	23 96       	adiw	r28, 0x03	; 3
    232e:	cd bf       	out	0x3d, r28	; 61
    2330:	de bf       	out	0x3e, r29	; 62
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:360
   else                           Tick.BUZZ_INTERVAL(50);               //short pree   
}
}
    2332:	df 91       	pop	r29
    2334:	cf 91       	pop	r28
    2336:	1f 91       	pop	r17
    2338:	0f 91       	pop	r16
    233a:	ff 90       	pop	r15
    233c:	ef 90       	pop	r14
    233e:	df 90       	pop	r13
    2340:	cf 90       	pop	r12
    2342:	bf 90       	pop	r11
    2344:	af 90       	pop	r10
    2346:	9f 90       	pop	r9
    2348:	8f 90       	pop	r8
    234a:	7f 90       	pop	r7
    234c:	6f 90       	pop	r6
    234e:	5f 90       	pop	r5
    2350:	4f 90       	pop	r4
    2352:	3f 90       	pop	r3
    2354:	2f 90       	pop	r2
    2356:	08 95       	ret
    2358:	8f 5f       	subi	r24, 0xFF	; 255
    235a:	ac cf       	rjmp	.-168    	; 0x22b4 <MODE_CLICK()+0x6c>
    235c:	00 91 09 28 	lds	r16, 0x2809	; 0x802809 <SELECTION_PARAMETER>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:162
    else if(DEGREE_VALUE_SET && !ENTER_BUT)                             //-----------------------at home page and selection of parameter in fah  
    {
//       MIN_SET_FAH =   TEMP_FAH + 15 ; //12                           //-----------------------Level sensing start minimu limit of temp
       ENTER_BUT = 2;
    }
    else   ENTER_BUT++;                                                 //-----------------------single press increment variable for homepage
    2360:	10 91 0a 28 	lds	r17, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    2364:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    2368:	81 11       	cpse	r24, r1
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:167
       
  }
  else                                                                  //-----------------------in settings         
  {
    if (!Mode_Button_Single_Press_In_Settings)                          //-----------------------not press mode button (while scrolling Parameter Passed to Array)
    236a:	09 c1       	rjmp	.+530    	; 0x257e <MODE_CLICK()+0x336>
    236c:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <STIR_VALUE_SET>
    2370:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:169
    {
      SET_LONG_VALUE[Stir_ON_OFF] = STIR_VALUE_SET; 
    2372:	80 93 21 29 	sts	0x2921, r24	; 0x802921 <SET_LONG_VALUE>
    2376:	90 93 22 29 	sts	0x2922, r25	; 0x802922 <SET_LONG_VALUE+0x1>
    237a:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    237e:	2b 83       	std	Y+3, r18	; 0x03
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:170
      SET_LONG_VALUE[Unit_C_F]    = DEGREE_VALUE_SET;
    2380:	82 2f       	mov	r24, r18
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	80 93 23 29 	sts	0x2923, r24	; 0x802923 <SET_LONG_VALUE+0x2>
    2388:	90 93 24 29 	sts	0x2924, r25	; 0x802924 <SET_LONG_VALUE+0x3>
    238c:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    2390:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:171
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
    2392:	80 93 29 29 	sts	0x2929, r24	; 0x802929 <SET_LONG_VALUE+0x8>
    2396:	90 93 2a 29 	sts	0x292A, r25	; 0x80292a <SET_LONG_VALUE+0x9>
    239a:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <select_heating_type>
    239e:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:172
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; 
    23a0:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
    23a4:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
    23a8:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    23ac:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:173
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; 
    23ae:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0xa>
    23b2:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0xb>
    23b6:	21 11       	cpse	r18, r1
    23b8:	99 c0       	rjmp	.+306    	; 0x24ec <MODE_CLICK()+0x2a4>
    23ba:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:175
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
    23be:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    23c2:	80 93 25 29 	sts	0x2925, r24	; 0x802925 <SET_LONG_VALUE+0x4>
    23c6:	90 93 26 29 	sts	0x2926, r25	; 0x802926 <SET_LONG_VALUE+0x5>
    23ca:	80 91 d8 28 	lds	r24, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
    23ce:	90 91 d9 28 	lds	r25, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:178
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
      
      SET_LONG_VALUE[Calibration_Selection] = CAL_SELECT_VALUE;
    23d2:	80 93 2d 29 	sts	0x292D, r24	; 0x80292d <SET_LONG_VALUE+0xc>
    23d6:	90 93 2e 29 	sts	0x292E, r25	; 0x80292e <SET_LONG_VALUE+0xd>
    23da:	c0 90 f2 28 	lds	r12, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    23de:	d0 90 f3 28 	lds	r13, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    23e2:	e0 90 f4 28 	lds	r14, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    23e6:	f0 90 f5 28 	lds	r15, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    23ea:	c7 01       	movw	r24, r14
    23ec:	b6 01       	movw	r22, r12
    23ee:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    23f2:	4b 01       	movw	r8, r22
    23f4:	20 e0       	ldi	r18, 0x00	; 0
    23f6:	30 e0       	ldi	r19, 0x00	; 0
    23f8:	40 e2       	ldi	r20, 0x20	; 32
    23fa:	51 e4       	ldi	r21, 0x41	; 65
    23fc:	c7 01       	movw	r24, r14
    23fe:	b6 01       	movw	r22, r12
    2400:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    2404:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    2408:	2b 01       	movw	r4, r22
    240a:	cb 01       	movw	r24, r22
    240c:	6a e0       	ldi	r22, 0x0A	; 10
    240e:	70 e0       	ldi	r23, 0x00	; 0
    2410:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
    2414:	1c 01       	movw	r2, r24
    2416:	8b 81       	ldd	r24, Y+3	; 0x03
    2418:	81 11       	cpse	r24, r1
    241a:	7e c0       	rjmp	.+252    	; 0x2518 <MODE_CLICK()+0x2d0>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:179
      if (!DEGREE_VALUE_SET)
    241c:	20 e0       	ldi	r18, 0x00	; 0
    241e:	30 e0       	ldi	r19, 0x00	; 0
    2420:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:181
      {
        if(TEMP_DEG_RAW<100)
    2422:	52 e4       	ldi	r21, 0x42	; 66
    2424:	c7 01       	movw	r24, r14
    2426:	b6 01       	movw	r22, r12
    2428:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    242c:	87 ff       	sbrs	r24, 7
    242e:	67 c0       	rjmp	.+206    	; 0x24fe <MODE_CLICK()+0x2b6>
    2430:	80 92 2f 29 	sts	0x292F, r8	; 0x80292f <SET_LONG_VALUE+0xe>
    2434:	90 92 30 29 	sts	0x2930, r9	; 0x802930 <SET_LONG_VALUE+0xf>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:183
        {
          SET_LONG_VALUE[Cal1_Decimal] = TEMP_DEG_RAW; //TEMP_DEG;       //CAL1_VALUE_SAVED_DEG1;
    2438:	40 92 26 28 	sts	0x2826, r4	; 0x802826 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    243c:	50 92 27 28 	sts	0x2827, r5	; 0x802827 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:184
          TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG =  TEMP_DEG_RAW * 10;
    2440:	20 92 31 29 	sts	0x2931, r2	; 0x802931 <SET_LONG_VALUE+0x10>
    2444:	30 92 32 29 	sts	0x2932, r3	; 0x802932 <SET_LONG_VALUE+0x11>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:186
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;              //CAL1_VALUE_SAVED_DEG2 ;
    2448:	80 91 07 28 	lds	r24, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    244c:	90 91 08 28 	lds	r25, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:199
      else
      {
        SET_LONG_VALUE[Cal1_In_Fah] =  TEMP_FAH_RAW ;  // SET_LONG_VALUE[9]  =CAL1_VALUE_SAVED_FAH;
        TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH = TEMP_FAH_RAW;
      }
      SET_LONG_VALUE[Cal2LowTemp_Set_Display]  = LOW_CAL_VALUE_SET ;
    2450:	80 93 33 29 	sts	0x2933, r24	; 0x802933 <SET_LONG_VALUE+0x12>
    2454:	90 93 34 29 	sts	0x2934, r25	; 0x802934 <SET_LONG_VALUE+0x13>
    2458:	80 92 37 29 	sts	0x2937, r8	; 0x802937 <SET_LONG_VALUE+0x16>
    245c:	90 92 38 29 	sts	0x2938, r9	; 0x802938 <SET_LONG_VALUE+0x17>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:200
      SET_LONG_VALUE[Cal2LowDecimalTemp_Enter_Heat]  =  TEMP_DEG_RAW; //TEMP_DEG ;
    2460:	20 92 39 29 	sts	0x2939, r2	; 0x802939 <SET_LONG_VALUE+0x18>
    2464:	30 92 3a 29 	sts	0x293A, r3	; 0x80293a <SET_LONG_VALUE+0x19>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:203
      
      int CONV = (TEMP_DEG_RAW * 10);
      SET_LONG_VALUE[Cal2LowPointTemp_Enter_Maintain]  =  CONV % 10 ;
    2468:	0c 30       	cpi	r16, 0x0C	; 12
    246a:	11 05       	cpc	r17, r1
    246c:	09 f0       	breq	.+2      	; 0x2470 <MODE_CLICK()+0x228>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:205
      
      if(SELECTION_PARAMETER == Cal2LowPointTemp_Enter_Maintain )      TEMP_CAL2_RAW_LOW_VALUE = TEMP_DEG_RAW;
    246e:	6d c0       	rjmp	.+218    	; 0x254a <MODE_CLICK()+0x302>
    2470:	c0 92 1e 28 	sts	0x281E, r12	; 0x80281e <TEMP_CAL2_RAW_LOW_VALUE>
    2474:	d0 92 1f 28 	sts	0x281F, r13	; 0x80281f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2478:	e0 92 20 28 	sts	0x2820, r14	; 0x802820 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    247c:	f0 92 21 28 	sts	0x2821, r15	; 0x802821 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    2480:	20 e0       	ldi	r18, 0x00	; 0
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	48 ec       	ldi	r20, 0xC8	; 200
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:208
      if(SELECTION_PARAMETER == Cal2HighPointTemp_Enter_Maintain)      TEMP_CAL2_RAW_HIGH_VALUE = TEMP_DEG_RAW;

      if(TEMP_DEG_RAW<100)
    2486:	52 e4       	ldi	r21, 0x42	; 66
    2488:	c7 01       	movw	r24, r14
    248a:	b6 01       	movw	r22, r12
    248c:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    2490:	87 ff       	sbrs	r24, 7
    2492:	68 c0       	rjmp	.+208    	; 0x2564 <MODE_CLICK()+0x31c>
    2494:	80 92 3b 29 	sts	0x293B, r8	; 0x80293b <SET_LONG_VALUE+0x1a>
    2498:	90 92 3c 29 	sts	0x293C, r9	; 0x80293c <SET_LONG_VALUE+0x1b>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:210
      {
        SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat] = TEMP_DEG_RAW;   //TEMP_DEG;
    249c:	20 92 3d 29 	sts	0x293D, r2	; 0x80293d <SET_LONG_VALUE+0x1c>
    24a0:	30 92 3e 29 	sts	0x293E, r3	; 0x80293e <SET_LONG_VALUE+0x1d>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:212
        int CONV2 = (TEMP_DEG_RAW * 10);
        SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain]  = ( CONV2 % 10 ) ;
    24a4:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    24a8:	90 e0       	ldi	r25, 0x00	; 0
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:220
      {
          SET_LONG_VALUE[Cal2HighDecimalTemp_Enter_Heat]  = 99; 
          SET_LONG_VALUE[Cal2HighPointTemp_Enter_Maintain] = 9;
      }            
    
      SET_LONG_VALUE[Time_Mode] = TIME_SOCK_OR_TOTAL; //13
    24aa:	80 93 27 29 	sts	0x2927, r24	; 0x802927 <SET_LONG_VALUE+0x6>
    24ae:	90 93 28 29 	sts	0x2928, r25	; 0x802928 <SET_LONG_VALUE+0x7>
    24b2:	02 31       	cpi	r16, 0x12	; 18
    24b4:	11 05       	cpc	r17, r1
    24b6:	21 f4       	brne	.+8      	; 0x24c0 <MODE_CLICK()+0x278>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:221
      if(SELECTION_PARAMETER == FactoryAndSure_Reset )  currentMillis=0;
    24b8:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <currentMillis>
    24bc:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <currentMillis+0x1>
    24c0:	2b 81       	ldd	r18, Y+3	; 0x03
    24c2:	21 11       	cpse	r18, r1
    24c4:	09 c0       	rjmp	.+18     	; 0x24d8 <MODE_CLICK()+0x290>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:223
      
      if (!DEGREE_VALUE_SET && SELECTION_PARAMETER == Cal1_Point)   SELECTION_PARAMETER--;
    24c6:	08 30       	cpi	r16, 0x08	; 8
    24c8:	11 05       	cpc	r17, r1
    24ca:	31 f4       	brne	.+12     	; 0x24d8 <MODE_CLICK()+0x290>
    24cc:	87 e0       	ldi	r24, 0x07	; 7
    24ce:	90 e0       	ldi	r25, 0x00	; 0
    24d0:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    24d4:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    24d8:	81 e0       	ldi	r24, 0x01	; 1
    24da:	80 93 c3 28 	sts	0x28C3, r24	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:225
      
      Mode_Button_Single_Press_In_Settings = 1;
    24de:	8a e1       	ldi	r24, 0x1A	; 26
    24e0:	90 e0       	ldi	r25, 0x00	; 0
    24e2:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:347
        SELECTION_PARAMETER++;
      }
      else        Mode_Button_Single_Press_In_Settings = 0;

    }
    i =VALUE_FOR_BLINK +1;
    24e6:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    24ea:	e6 ce       	rjmp	.-564    	; 0x22b8 <MODE_CLICK()+0x70>
    24ec:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    24f0:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:176
      SET_LONG_VALUE[Auto_Resume_Enable]    = Proceess_Resume_Enable_Flag;
      SET_LONG_VALUE[Slow_Fast_Heating]    =  select_heating_type; 
      SET_LONG_VALUE[Product_Selection_Parameter]    = select_product_type; 
      
      if (!DEGREE_VALUE_SET)    SET_LONG_VALUE[Safe_Value] = SAFE_VALUE_SET_DEG;
      else                      SET_LONG_VALUE[Safe_In_Fah] = SAFE_VALUE_SET_FAH;
    24f4:	80 93 49 29 	sts	0x2949, r24	; 0x802949 <SET_LONG_VALUE+0x28>
    24f8:	90 93 4a 29 	sts	0x294A, r25	; 0x80294a <SET_LONG_VALUE+0x29>
    24fc:	66 cf       	rjmp	.-308    	; 0x23ca <MODE_CLICK()+0x182>
    24fe:	83 e6       	ldi	r24, 0x63	; 99
    2500:	90 e0       	ldi	r25, 0x00	; 0
    2502:	80 93 2f 29 	sts	0x292F, r24	; 0x80292f <SET_LONG_VALUE+0xe>
I:\Siddhesh Hadawale\PRODUCTION CODE\WLC_WLS_Common_Code\Final_WLC_005_V4.03/Final_WLC_005_V4.03.ino:190
          int CONV_TEMP = (TEMP_DEG_RAW * 10);
          SET_LONG_VALUE[Cal1_Point] = ( CONV_TEMP  % 10) ;              //CAL1_VALUE_SAVED_DEG2 ;
        }
        else
        {
          SET_LONG_VALUE[Cal1_Decimal]=99; 
    2506:	90 93 30 29 	sts	0x2930, r25	; 0x802930 <SET_LONG_VALUE+0xf>
    250a:	89 e0       	ldi	r24, 0x09	; 9
    250c:	90 e0       	ldi	r25, 0x00	; 0
    250e:	80 93 31 29 	sts	0x2931, r24	; 0x802931 <SET_LONG_VALUE+0x10>
    2512:	90 93 32 29 	sts	0x2932, r25	; 0x802932 <SET_LONG_VALUE+0x11>
    2516:	98 cf       	rjmp	.-208    	; 0x2448 <MODE_CLICK()+0x200>
    2518:	40 90 de 28 	lds	r4, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
    251c:	50 90 df 28 	lds	r5, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
    2520:	60 90 e0 28 	lds	r6, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    2524:	70 90 e1 28 	lds	r7, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    2528:	c3 01       	movw	r24, r6
    252a:	b2 01       	movw	r22, r4
    252c:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    2530:	60 93 4b 29 	sts	0x294B, r22	; 0x80294b <SET_LONG_VALUE+0x2a>
    2534:	70 93 4c 29 	sts	0x294C, r23	; 0x80294c <SET_LONG_VALUE+0x2b>
    2538:	40 92 22 28 	sts	0x2822, r4	; 0x802822 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    253c:	50 92 23 28 	sts	0x2823, r5	; 0x802823 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    2540:	60 92 24 28 	sts	0x2824, r6	; 0x802824 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    2544:	70 92 25 28 	sts	0x2825, r7	; 0x802825 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    2548:	7f cf       	rjmp	.-258    	; 0x2448 <MODE_CLICK()+0x200>
    254a:	0e 30       	cpi	r16, 0x0E	; 14
    254c:	11 05       	cpc	r17, r1
    254e:	09 f0       	breq	.+2      	; 0x2552 <MODE_CLICK()+0x30a>
    2550:	97 cf       	rjmp	.-210    	; 0x2480 <MODE_CLICK()+0x238>
    2552:	c0 92 1a 28 	sts	0x281A, r12	; 0x80281a <TEMP_CAL2_RAW_HIGH_VALUE>
    2556:	d0 92 1b 28 	sts	0x281B, r13	; 0x80281b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    255a:	e0 92 1c 28 	sts	0x281C, r14	; 0x80281c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    255e:	f0 92 1d 28 	sts	0x281D, r15	; 0x80281d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2562:	8e cf       	rjmp	.-228    	; 0x2480 <MODE_CLICK()+0x238>
    2564:	83 e6       	ldi	r24, 0x63	; 99
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	80 93 3b 29 	sts	0x293B, r24	; 0x80293b <SET_LONG_VALUE+0x1a>
    256c:	90 93 3c 29 	sts	0x293C, r25	; 0x80293c <SET_LONG_VALUE+0x1b>
    2570:	89 e0       	ldi	r24, 0x09	; 9
    2572:	90 e0       	ldi	r25, 0x00	; 0
    2574:	80 93 3d 29 	sts	0x293D, r24	; 0x80293d <SET_LONG_VALUE+0x1c>
    2578:	90 93 3e 29 	sts	0x293E, r25	; 0x80293e <SET_LONG_VALUE+0x1d>
    257c:	93 cf       	rjmp	.-218    	; 0x24a4 <MODE_CLICK()+0x25c>
    257e:	01 31       	cpi	r16, 0x11	; 17
    2580:	11 05       	cpc	r17, r1
    2582:	18 f5       	brcc	.+70     	; 0x25ca <MODE_CLICK()+0x382>
    2584:	f8 01       	movw	r30, r16
    2586:	e9 53       	subi	r30, 0x39	; 57
    2588:	fd 4e       	sbci	r31, 0xED	; 237
    258a:	0c 94 06 3c 	jmp	0x780c	; 0x780c <__tablejump2__>
    258e:	d8 12       	cpse	r13, r24
    2590:	05 13       	cpse	r16, r21
    2592:	12 13       	cpse	r17, r18
    2594:	be 14       	cp	r11, r14
    2596:	2f 13       	cpse	r18, r31
    2598:	3c 13       	cpse	r19, r28
    259a:	56 13       	cpse	r21, r22
    259c:	e5 12       	cpse	r14, r21
    259e:	61 13       	cpse	r22, r17
    25a0:	11 14       	cp	r1, r1
    25a2:	1f 14       	cp	r1, r15
    25a4:	e5 12       	cpse	r14, r21
    25a6:	38 14       	cp	r3, r8
    25a8:	e5 12       	cpse	r14, r21
    25aa:	49 14       	cp	r4, r9
    25ac:	e5 12       	cpse	r14, r21
    25ae:	49 13       	cpse	r20, r25
    25b0:	61 e0       	ldi	r22, 0x01	; 1
    25b2:	80 91 21 29 	lds	r24, 0x2921	; 0x802921 <SET_LONG_VALUE>
    25b6:	90 91 22 29 	lds	r25, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1>
    25ba:	89 2b       	or	r24, r25
    25bc:	09 f4       	brne	.+2      	; 0x25c0 <MODE_CLICK()+0x378>
    25be:	60 e0       	ldi	r22, 0x00	; 0
    25c0:	60 93 aa 28 	sts	0x28AA, r22	; 0x8028aa <STIR_VALUE_SET>
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	80 e0       	ldi	r24, 0x00	; 0
    25c8:	af dd       	rcall	.-1186   	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    25ca:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    25ce:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    25d2:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    25d6:	21 11       	cpse	r18, r1
    25d8:	03 c0       	rjmp	.+6      	; 0x25e0 <MODE_CLICK()+0x398>
    25da:	87 30       	cpi	r24, 0x07	; 7
    25dc:	91 05       	cpc	r25, r1
    25de:	61 f0       	breq	.+24     	; 0x25f8 <MODE_CLICK()+0x3b0>
    25e0:	9c 01       	movw	r18, r24
    25e2:	2d 7f       	andi	r18, 0xFD	; 253
    25e4:	29 30       	cpi	r18, 0x09	; 9
    25e6:	31 05       	cpc	r19, r1
    25e8:	39 f0       	breq	.+14     	; 0x25f8 <MODE_CLICK()+0x3b0>
    25ea:	8d 30       	cpi	r24, 0x0D	; 13
    25ec:	91 05       	cpc	r25, r1
    25ee:	21 f0       	breq	.+8      	; 0x25f8 <MODE_CLICK()+0x3b0>
    25f0:	82 31       	cpi	r24, 0x12	; 18
    25f2:	91 05       	cpc	r25, r1
    25f4:	09 f0       	breq	.+2      	; 0x25f8 <MODE_CLICK()+0x3b0>
    25f6:	d4 c1       	rjmp	.+936    	; 0x29a0 <MODE_CLICK()+0x758>
    25f8:	21 e0       	ldi	r18, 0x01	; 1
    25fa:	20 93 c3 28 	sts	0x28C3, r18	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    25fe:	01 96       	adiw	r24, 0x01	; 1
    2600:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    2604:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    2608:	6a cf       	rjmp	.-300    	; 0x24de <MODE_CLICK()+0x296>
    260a:	61 e0       	ldi	r22, 0x01	; 1
    260c:	80 91 23 29 	lds	r24, 0x2923	; 0x802923 <SET_LONG_VALUE+0x2>
    2610:	90 91 24 29 	lds	r25, 0x2924	; 0x802924 <SET_LONG_VALUE+0x3>
    2614:	89 2b       	or	r24, r25
    2616:	09 f4       	brne	.+2      	; 0x261a <MODE_CLICK()+0x3d2>
    2618:	60 e0       	ldi	r22, 0x00	; 0
    261a:	60 93 53 29 	sts	0x2953, r22	; 0x802953 <DEGREE_VALUE_SET>
    261e:	81 e0       	ldi	r24, 0x01	; 1
    2620:	90 e0       	ldi	r25, 0x00	; 0
    2622:	d2 cf       	rjmp	.-92     	; 0x25c8 <MODE_CLICK()+0x380>
    2624:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2628:	81 11       	cpse	r24, r1
    262a:	0b c0       	rjmp	.+22     	; 0x2642 <MODE_CLICK()+0x3fa>
    262c:	60 91 25 29 	lds	r22, 0x2925	; 0x802925 <SET_LONG_VALUE+0x4>
    2630:	80 91 26 29 	lds	r24, 0x2926	; 0x802926 <SET_LONG_VALUE+0x5>
    2634:	60 93 12 29 	sts	0x2912, r22	; 0x802912 <SAFE_VALUE_SET_DEG>
    2638:	80 93 13 29 	sts	0x2913, r24	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    263c:	82 e0       	ldi	r24, 0x02	; 2
    263e:	90 e0       	ldi	r25, 0x00	; 0
    2640:	c3 cf       	rjmp	.-122    	; 0x25c8 <MODE_CLICK()+0x380>
    2642:	80 91 49 29 	lds	r24, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    2646:	90 91 4a 29 	lds	r25, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    264a:	80 93 10 29 	sts	0x2910, r24	; 0x802910 <SAFE_VALUE_SET_FAH>
    264e:	90 93 11 29 	sts	0x2911, r25	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    2652:	60 e1       	ldi	r22, 0x10	; 16
    2654:	79 e2       	ldi	r23, 0x29	; 41
    2656:	83 e0       	ldi	r24, 0x03	; 3
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	9f dd       	rcall	.-1218   	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    265c:	b6 cf       	rjmp	.-148    	; 0x25ca <MODE_CLICK()+0x382>
    265e:	61 e0       	ldi	r22, 0x01	; 1
    2660:	80 91 29 29 	lds	r24, 0x2929	; 0x802929 <SET_LONG_VALUE+0x8>
    2664:	90 91 2a 29 	lds	r25, 0x292A	; 0x80292a <SET_LONG_VALUE+0x9>
    2668:	89 2b       	or	r24, r25
    266a:	09 f4       	brne	.+2      	; 0x266e <MODE_CLICK()+0x426>
    266c:	60 e0       	ldi	r22, 0x00	; 0
    266e:	60 93 a4 28 	sts	0x28A4, r22	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    2672:	8f e0       	ldi	r24, 0x0F	; 15
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	58 dd       	rcall	.-1360   	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    2678:	61 e0       	ldi	r22, 0x01	; 1
    267a:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0xa>
    267e:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0xb>
    2682:	89 2b       	or	r24, r25
    2684:	09 f4       	brne	.+2      	; 0x2688 <MODE_CLICK()+0x440>
    2686:	60 e0       	ldi	r22, 0x00	; 0
    2688:	60 93 0e 29 	sts	0x290E, r22	; 0x80290e <select_product_type>
    268c:	86 e9       	ldi	r24, 0x96	; 150
    268e:	90 e0       	ldi	r25, 0x00	; 0
    2690:	9b cf       	rjmp	.-202    	; 0x25c8 <MODE_CLICK()+0x380>
    2692:	61 e0       	ldi	r22, 0x01	; 1
    2694:	80 91 41 29 	lds	r24, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    2698:	90 91 42 29 	lds	r25, 0x2942	; 0x802942 <SET_LONG_VALUE+0x21>
    269c:	89 2b       	or	r24, r25
    269e:	09 f4       	brne	.+2      	; 0x26a2 <MODE_CLICK()+0x45a>
    26a0:	60 e0       	ldi	r22, 0x00	; 0
    26a2:	60 93 f1 28 	sts	0x28F1, r22	; 0x8028f1 <select_heating_type>
    26a6:	84 e8       	ldi	r24, 0x84	; 132
    26a8:	90 e0       	ldi	r25, 0x00	; 0
    26aa:	8e cf       	rjmp	.-228    	; 0x25c8 <MODE_CLICK()+0x380>
    26ac:	60 91 2d 29 	lds	r22, 0x292D	; 0x80292d <SET_LONG_VALUE+0xc>
    26b0:	80 91 2e 29 	lds	r24, 0x292E	; 0x80292e <SET_LONG_VALUE+0xd>
    26b4:	60 93 d8 28 	sts	0x28D8, r22	; 0x8028d8 <CAL_SELECT_VALUE>
    26b8:	80 93 d9 28 	sts	0x28D9, r24	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    26bc:	85 e0       	ldi	r24, 0x05	; 5
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	83 cf       	rjmp	.-250    	; 0x25c8 <MODE_CLICK()+0x380>
    26c2:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    26c6:	81 11       	cpse	r24, r1
    26c8:	87 c0       	rjmp	.+270    	; 0x27d8 <MODE_CLICK()+0x590>
    26ca:	60 91 31 29 	lds	r22, 0x2931	; 0x802931 <SET_LONG_VALUE+0x10>
    26ce:	70 91 32 29 	lds	r23, 0x2932	; 0x802932 <SET_LONG_VALUE+0x11>
    26d2:	07 2e       	mov	r0, r23
    26d4:	00 0c       	add	r0, r0
    26d6:	88 0b       	sbc	r24, r24
    26d8:	99 0b       	sbc	r25, r25
    26da:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    26de:	20 e0       	ldi	r18, 0x00	; 0
    26e0:	30 e0       	ldi	r19, 0x00	; 0
    26e2:	40 e2       	ldi	r20, 0x20	; 32
    26e4:	51 e4       	ldi	r21, 0x41	; 65
    26e6:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    26ea:	6b 01       	movw	r12, r22
    26ec:	7c 01       	movw	r14, r24
    26ee:	60 91 2f 29 	lds	r22, 0x292F	; 0x80292f <SET_LONG_VALUE+0xe>
    26f2:	70 91 30 29 	lds	r23, 0x2930	; 0x802930 <SET_LONG_VALUE+0xf>
    26f6:	07 2e       	mov	r0, r23
    26f8:	00 0c       	add	r0, r0
    26fa:	88 0b       	sbc	r24, r24
    26fc:	99 0b       	sbc	r25, r25
    26fe:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    2702:	9b 01       	movw	r18, r22
    2704:	ac 01       	movw	r20, r24
    2706:	c7 01       	movw	r24, r14
    2708:	b6 01       	movw	r22, r12
    270a:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    270e:	20 e0       	ldi	r18, 0x00	; 0
    2710:	30 e0       	ldi	r19, 0x00	; 0
    2712:	40 e2       	ldi	r20, 0x20	; 32
    2714:	51 e4       	ldi	r21, 0x41	; 65
    2716:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    271a:	6b 01       	movw	r12, r22
    271c:	7c 01       	movw	r14, r24
    271e:	60 91 26 28 	lds	r22, 0x2826	; 0x802826 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG>
    2722:	70 91 27 28 	lds	r23, 0x2827	; 0x802827 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_DEG+0x1>
    2726:	07 2e       	mov	r0, r23
    2728:	00 0c       	add	r0, r0
    272a:	88 0b       	sbc	r24, r24
    272c:	99 0b       	sbc	r25, r25
    272e:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    2732:	9b 01       	movw	r18, r22
    2734:	ac 01       	movw	r20, r24
    2736:	c7 01       	movw	r24, r14
    2738:	b6 01       	movw	r22, r12
    273a:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	40 e2       	ldi	r20, 0x20	; 32
    2744:	51 e4       	ldi	r21, 0x41	; 65
    2746:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    274a:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
    274e:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
    2752:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
    2756:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
    275a:	81 e0       	ldi	r24, 0x01	; 1
    275c:	80 93 e7 28 	sts	0x28E7, r24	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    2760:	10 92 e2 28 	sts	0x28E2, r1	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    2764:	80 90 e8 28 	lds	r8, 0x28E8	; 0x8028e8 <ERROR_CAL>
    2768:	90 90 e9 28 	lds	r9, 0x28E9	; 0x8028e9 <ERROR_CAL+0x1>
    276c:	a0 90 ea 28 	lds	r10, 0x28EA	; 0x8028ea <ERROR_CAL+0x2>
    2770:	b0 90 eb 28 	lds	r11, 0x28EB	; 0x8028eb <ERROR_CAL+0x3>
    2774:	20 e0       	ldi	r18, 0x00	; 0
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	40 e2       	ldi	r20, 0x20	; 32
    277a:	51 e4       	ldi	r21, 0x41	; 65
    277c:	c5 01       	movw	r24, r10
    277e:	b4 01       	movw	r22, r8
    2780:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    2784:	6b 01       	movw	r12, r22
    2786:	7c 01       	movw	r14, r24
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	a9 01       	movw	r20, r18
    278e:	c5 01       	movw	r24, r10
    2790:	b4 01       	movw	r22, r8
    2792:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    2796:	87 ff       	sbrs	r24, 7
    2798:	41 c0       	rjmp	.+130    	; 0x281c <MODE_CLICK()+0x5d4>
    279a:	81 e0       	ldi	r24, 0x01	; 1
    279c:	80 93 ec 28 	sts	0x28EC, r24	; 0x8028ec <SIGN>
    27a0:	f7 fa       	bst	r15, 7
    27a2:	f0 94       	com	r15
    27a4:	f7 f8       	bld	r15, 7
    27a6:	f0 94       	com	r15
    27a8:	c0 92 0a 29 	sts	0x290A, r12	; 0x80290a <ERROR_CAL1>
    27ac:	d0 92 0b 29 	sts	0x290B, r13	; 0x80290b <ERROR_CAL1+0x1>
    27b0:	e0 92 0c 29 	sts	0x290C, r14	; 0x80290c <ERROR_CAL1+0x2>
    27b4:	f0 92 0d 29 	sts	0x290D, r15	; 0x80290d <ERROR_CAL1+0x3>
    27b8:	c9 dc       	rcall	.-1646   	; 0x214c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>
    27ba:	60 91 ec 28 	lds	r22, 0x28EC	; 0x8028ec <SIGN>
    27be:	87 e0       	ldi	r24, 0x07	; 7
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	b2 dc       	rcall	.-1692   	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27c4:	60 91 e7 28 	lds	r22, 0x28E7	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    27c8:	88 e0       	ldi	r24, 0x08	; 8
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	ad dc       	rcall	.-1702   	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    27ce:	60 91 e2 28 	lds	r22, 0x28E2	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    27d2:	89 e0       	ldi	r24, 0x09	; 9
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	f8 ce       	rjmp	.-528    	; 0x25c8 <MODE_CLICK()+0x380>
    27d8:	60 91 49 29 	lds	r22, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    27dc:	70 91 4a 29 	lds	r23, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    27e0:	07 2e       	mov	r0, r23
    27e2:	00 0c       	add	r0, r0
    27e4:	88 0b       	sbc	r24, r24
    27e6:	99 0b       	sbc	r25, r25
    27e8:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    27ec:	20 91 22 28 	lds	r18, 0x2822	; 0x802822 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH>
    27f0:	30 91 23 28 	lds	r19, 0x2823	; 0x802823 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x1>
    27f4:	40 91 24 28 	lds	r20, 0x2824	; 0x802824 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x2>
    27f8:	50 91 25 28 	lds	r21, 0x2825	; 0x802825 <TEMPERARY_SAVED_VARIABLE_FOR_CAL1_FAH+0x3>
    27fc:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    2800:	60 93 e8 28 	sts	0x28E8, r22	; 0x8028e8 <ERROR_CAL>
    2804:	70 93 e9 28 	sts	0x28E9, r23	; 0x8028e9 <ERROR_CAL+0x1>
    2808:	80 93 ea 28 	sts	0x28EA, r24	; 0x8028ea <ERROR_CAL+0x2>
    280c:	90 93 eb 28 	sts	0x28EB, r25	; 0x8028eb <ERROR_CAL+0x3>
    2810:	10 92 e7 28 	sts	0x28E7, r1	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	80 93 e2 28 	sts	0x28E2, r24	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    281a:	a4 cf       	rjmp	.-184    	; 0x2764 <MODE_CLICK()+0x51c>
    281c:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <SIGN>
    2820:	c3 cf       	rjmp	.-122    	; 0x27a8 <MODE_CLICK()+0x560>
    2822:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    2826:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    282a:	80 93 07 28 	sts	0x2807, r24	; 0x802807 <LOW_CAL_VALUE_SET>
    282e:	90 93 08 28 	sts	0x2808, r25	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    2832:	0a 96       	adiw	r24, 0x0a	; 10
    2834:	80 93 35 29 	sts	0x2935, r24	; 0x802935 <SET_LONG_VALUE+0x14>
    2838:	90 93 36 29 	sts	0x2936, r25	; 0x802936 <SET_LONG_VALUE+0x15>
    283c:	c6 ce       	rjmp	.-628    	; 0x25ca <MODE_CLICK()+0x382>
    283e:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    2842:	90 91 36 29 	lds	r25, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    2846:	80 93 b6 28 	sts	0x28B6, r24	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    284a:	90 93 b7 28 	sts	0x28B7, r25	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    284e:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    2852:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    2856:	a0 91 f4 28 	lds	r26, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    285a:	b0 91 f5 28 	lds	r27, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    285e:	80 93 1e 28 	sts	0x281E, r24	; 0x80281e <TEMP_CAL2_RAW_LOW_VALUE>
    2862:	90 93 1f 28 	sts	0x281F, r25	; 0x80281f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    2866:	a0 93 20 28 	sts	0x2820, r26	; 0x802820 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    286a:	b0 93 21 28 	sts	0x2821, r27	; 0x802821 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    286e:	ad ce       	rjmp	.-678    	; 0x25ca <MODE_CLICK()+0x382>
    2870:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    2874:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    2878:	a0 91 f4 28 	lds	r26, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    287c:	b0 91 f5 28 	lds	r27, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    2880:	80 93 1a 28 	sts	0x281A, r24	; 0x80281a <TEMP_CAL2_RAW_HIGH_VALUE>
    2884:	90 93 1b 28 	sts	0x281B, r25	; 0x80281b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    2888:	a0 93 1c 28 	sts	0x281C, r26	; 0x80281c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    288c:	b0 93 1d 28 	sts	0x281D, r27	; 0x80281d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    2890:	9c ce       	rjmp	.-712    	; 0x25ca <MODE_CLICK()+0x382>
    2892:	20 e0       	ldi	r18, 0x00	; 0
    2894:	30 e0       	ldi	r19, 0x00	; 0
    2896:	40 e2       	ldi	r20, 0x20	; 32
    2898:	51 e4       	ldi	r21, 0x41	; 65
    289a:	60 91 1e 28 	lds	r22, 0x281E	; 0x80281e <TEMP_CAL2_RAW_LOW_VALUE>
    289e:	70 91 1f 28 	lds	r23, 0x281F	; 0x80281f <TEMP_CAL2_RAW_LOW_VALUE+0x1>
    28a2:	80 91 20 28 	lds	r24, 0x2820	; 0x802820 <TEMP_CAL2_RAW_LOW_VALUE+0x2>
    28a6:	90 91 21 28 	lds	r25, 0x2821	; 0x802821 <TEMP_CAL2_RAW_LOW_VALUE+0x3>
    28aa:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    28ae:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    28b2:	60 93 d0 28 	sts	0x28D0, r22	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
    28b6:	70 93 d1 28 	sts	0x28D1, r23	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    28ba:	80 93 d2 28 	sts	0x28D2, r24	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    28be:	90 93 d3 28 	sts	0x28D3, r25	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	40 e2       	ldi	r20, 0x20	; 32
    28c8:	51 e4       	ldi	r21, 0x41	; 65
    28ca:	60 91 1a 28 	lds	r22, 0x281A	; 0x80281a <TEMP_CAL2_RAW_HIGH_VALUE>
    28ce:	70 91 1b 28 	lds	r23, 0x281B	; 0x80281b <TEMP_CAL2_RAW_HIGH_VALUE+0x1>
    28d2:	80 91 1c 28 	lds	r24, 0x281C	; 0x80281c <TEMP_CAL2_RAW_HIGH_VALUE+0x2>
    28d6:	90 91 1d 28 	lds	r25, 0x281D	; 0x80281d <TEMP_CAL2_RAW_HIGH_VALUE+0x3>
    28da:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    28de:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    28e2:	60 93 cc 28 	sts	0x28CC, r22	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
    28e6:	70 93 cd 28 	sts	0x28CD, r23	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    28ea:	80 93 ce 28 	sts	0x28CE, r24	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    28ee:	90 93 cf 28 	sts	0x28CF, r25	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    28f2:	60 ed       	ldi	r22, 0xD0	; 208
    28f4:	78 e2       	ldi	r23, 0x28	; 40
    28f6:	80 e5       	ldi	r24, 0x50	; 80
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	74 dc       	rcall	.-1816   	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    28fc:	6c ec       	ldi	r22, 0xCC	; 204
    28fe:	78 e2       	ldi	r23, 0x28	; 40
    2900:	8a e5       	ldi	r24, 0x5A	; 90
    2902:	90 e0       	ldi	r25, 0x00	; 0
    2904:	6f dc       	rcall	.-1826   	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	40 e2       	ldi	r20, 0x20	; 32
    290c:	51 e4       	ldi	r21, 0x41	; 65
    290e:	60 91 b8 28 	lds	r22, 0x28B8	; 0x8028b8 <CAL2_CALCULATED_LOW_CAL_VALUE>
    2912:	70 91 b9 28 	lds	r23, 0x28B9	; 0x8028b9 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    2916:	80 91 ba 28 	lds	r24, 0x28BA	; 0x8028ba <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    291a:	90 91 bb 28 	lds	r25, 0x28BB	; 0x8028bb <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    291e:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    2922:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    2926:	60 93 c8 28 	sts	0x28C8, r22	; 0x8028c8 <MASTER_LOW_CONV>
    292a:	70 93 c9 28 	sts	0x28C9, r23	; 0x8028c9 <MASTER_LOW_CONV+0x1>
    292e:	80 93 ca 28 	sts	0x28CA, r24	; 0x8028ca <MASTER_LOW_CONV+0x2>
    2932:	90 93 cb 28 	sts	0x28CB, r25	; 0x8028cb <MASTER_LOW_CONV+0x3>
    2936:	20 e0       	ldi	r18, 0x00	; 0
    2938:	30 e0       	ldi	r19, 0x00	; 0
    293a:	40 e2       	ldi	r20, 0x20	; 32
    293c:	51 e4       	ldi	r21, 0x41	; 65
    293e:	60 91 b2 28 	lds	r22, 0x28B2	; 0x8028b2 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    2942:	70 91 b3 28 	lds	r23, 0x28B3	; 0x8028b3 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    2946:	80 91 b4 28 	lds	r24, 0x28B4	; 0x8028b4 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    294a:	90 91 b5 28 	lds	r25, 0x28B5	; 0x8028b5 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    294e:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    2952:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    2956:	60 93 c4 28 	sts	0x28C4, r22	; 0x8028c4 <MASTER_HIGH_CONV>
    295a:	70 93 c5 28 	sts	0x28C5, r23	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
    295e:	80 93 c6 28 	sts	0x28C6, r24	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
    2962:	90 93 c7 28 	sts	0x28C7, r25	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
    2966:	68 ec       	ldi	r22, 0xC8	; 200
    2968:	78 e2       	ldi	r23, 0x28	; 40
    296a:	84 e6       	ldi	r24, 0x64	; 100
    296c:	90 e0       	ldi	r25, 0x00	; 0
    296e:	3a dc       	rcall	.-1932   	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    2970:	64 ec       	ldi	r22, 0xC4	; 196
    2972:	78 e2       	ldi	r23, 0x28	; 40
    2974:	8e e6       	ldi	r24, 0x6E	; 110
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	35 dc       	rcall	.-1942   	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    297a:	27 ce       	rjmp	.-946    	; 0x25ca <MODE_CLICK()+0x382>
    297c:	61 e0       	ldi	r22, 0x01	; 1
    297e:	80 91 27 29 	lds	r24, 0x2927	; 0x802927 <SET_LONG_VALUE+0x6>
    2982:	90 91 28 29 	lds	r25, 0x2928	; 0x802928 <SET_LONG_VALUE+0x7>
    2986:	89 2b       	or	r24, r25
    2988:	09 f4       	brne	.+2      	; 0x298c <MODE_CLICK()+0x744>
    298a:	60 e0       	ldi	r22, 0x00	; 0
    298c:	60 93 a9 28 	sts	0x28A9, r22	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    2990:	81 e4       	ldi	r24, 0x41	; 65
    2992:	90 e0       	ldi	r25, 0x00	; 0
    2994:	89 83       	std	Y+1, r24	; 0x01
    2996:	9a 83       	std	Y+2, r25	; 0x02
    2998:	ce 01       	movw	r24, r28
    299a:	01 96       	adiw	r24, 0x01	; 1
    299c:	c6 db       	rcall	.-2164   	; 0x212a <EERef::update(unsigned char)>
    299e:	15 ce       	rjmp	.-982    	; 0x25ca <MODE_CLICK()+0x382>
MODE_CLICK():
    29a0:	9c 01       	movw	r18, r24
    29a2:	2b 7f       	andi	r18, 0xFB	; 251
    29a4:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    29a8:	2a 30       	cpi	r18, 0x0A	; 10
    29aa:	31 05       	cpc	r19, r1
    29ac:	09 f4       	brne	.+2      	; 0x29b0 <MODE_CLICK()+0x768>
    29ae:	27 ce       	rjmp	.-946    	; 0x25fe <MODE_CLICK()+0x3b6>
    29b0:	8c 30       	cpi	r24, 0x0C	; 12
    29b2:	91 05       	cpc	r25, r1
    29b4:	09 f0       	breq	.+2      	; 0x29b8 <MODE_CLICK()+0x770>
    29b6:	93 cd       	rjmp	.-1242   	; 0x24de <MODE_CLICK()+0x296>
    29b8:	22 ce       	rjmp	.-956    	; 0x25fe <MODE_CLICK()+0x3b6>
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <PUMP_FLAG>
    29c0:	8e cc       	rjmp	.-1764   	; 0x22de <MODE_CLICK()+0x96>
    29c2:	82 e3       	ldi	r24, 0x32	; 50
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	0e 94 2a 0b 	call	0x1654	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    29ca:	b0 cc       	rjmp	.-1696   	; 0x232c <MODE_CLICK()+0xe4>

000029cc <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]>:
SET_LONG_PRESS_FUNCTION():
    29cc:	4f 92       	push	r4
    29ce:	5f 92       	push	r5
    29d0:	6f 92       	push	r6
    29d2:	7f 92       	push	r7
    29d4:	8f 92       	push	r8
    29d6:	9f 92       	push	r9
    29d8:	af 92       	push	r10
    29da:	bf 92       	push	r11
    29dc:	cf 92       	push	r12
    29de:	df 92       	push	r13
    29e0:	ef 92       	push	r14
    29e2:	ff 92       	push	r15
    29e4:	0f 93       	push	r16
    29e6:	1f 93       	push	r17
    29e8:	cf 93       	push	r28
    29ea:	df 93       	push	r29
    29ec:	00 d0       	rcall	.+0      	; 0x29ee <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x22>
    29ee:	cd b7       	in	r28, 0x3d	; 61
    29f0:	de b7       	in	r29, 0x3e	; 62
digitalWrite():
    29f2:	60 e0       	ldi	r22, 0x00	; 0
    29f4:	8c e0       	ldi	r24, 0x0C	; 12
    29f6:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    29fa:	e0 91 09 28 	lds	r30, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    29fe:	f0 91 0a 28 	lds	r31, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
SET_LONG_PRESS_FUNCTION():
    2a02:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    2a06:	88 23       	and	r24, r24
    2a08:	09 f4       	brne	.+2      	; 0x2a0c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x40>
    2a0a:	73 c7       	rjmp	.+3814   	; 0x38f2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xf26>
    2a0c:	e4 31       	cpi	r30, 0x14	; 20
    2a0e:	f1 05       	cpc	r31, r1
    2a10:	08 f0       	brcs	.+2      	; 0x2a14 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x48>
    2a12:	6e c0       	rjmp	.+220    	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    2a14:	e2 5f       	subi	r30, 0xF2	; 242
    2a16:	fa 4e       	sbci	r31, 0xEA	; 234
    2a18:	0c 94 06 3c 	jmp	0x780c	; 0x780c <__tablejump2__>
    2a1c:	22 15       	cp	r18, r2
    2a1e:	98 15       	cp	r25, r8
    2a20:	d6 15       	cp	r29, r6
    2a22:	42 16       	cp	r4, r18
    2a24:	b3 16       	cp	r11, r19
    2a26:	0e 17       	cp	r16, r30
    2a28:	5d 17       	cp	r21, r29
    2a2a:	a0 17       	cp	r26, r16
    2a2c:	d1 17       	cp	r29, r17
    2a2e:	29 18       	sub	r2, r9
    2a30:	79 18       	sub	r7, r9
    2a32:	c2 18       	sub	r12, r2
    2a34:	01 19       	sub	r16, r1
    2a36:	81 19       	sub	r24, r1
    2a38:	b7 19       	sub	r27, r7
    2a3a:	39 1a       	sub	r3, r25
    2a3c:	3e 1a       	sub	r3, r30
    2a3e:	90 1a       	sub	r9, r16
    2a40:	bf 1a       	sub	r11, r31
    2a42:	f2 1a       	sub	r15, r18
    2a44:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    2a48:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    2a4c:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    2a50:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2a54:	8c e0       	ldi	r24, 0x0C	; 12
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2a5c:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2a60:	80 e1       	ldi	r24, 0x10	; 16
    2a62:	90 e0       	ldi	r25, 0x00	; 0
    2a64:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2a68:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2a6c:	89 e1       	ldi	r24, 0x19	; 25
    2a6e:	90 e0       	ldi	r25, 0x00	; 0
    2a70:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2a74:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2a78:	81 e1       	ldi	r24, 0x11	; 17
    2a7a:	90 e0       	ldi	r25, 0x00	; 0
    2a7c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2a80:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2a84:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2a88:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2a8c:	89 31       	cpi	r24, 0x19	; 25
    2a8e:	91 05       	cpc	r25, r1
    2a90:	7c f4       	brge	.+30     	; 0x2ab0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xe4>
DISPLAY_DIGIT1():
    2a92:	88 e1       	ldi	r24, 0x18	; 24
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2a9a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2a9e:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2aa2:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2aa6:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2aaa:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2aae:	70 c7       	rjmp	.+3808   	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
SET_LONG_PRESS_FUNCTION():
    2ab0:	20 91 21 29 	lds	r18, 0x2921	; 0x802921 <SET_LONG_VALUE>
    2ab4:	30 91 22 29 	lds	r19, 0x2922	; 0x802922 <SET_LONG_VALUE+0x1>
DISPLAY_DIGIT1():
    2ab8:	10 92 fa 28 	sts	0x28FA, r1	; 0x8028fa <digits1>
    2abc:	10 92 fb 28 	sts	0x28FB, r1	; 0x8028fb <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    2ac0:	23 2b       	or	r18, r19
    2ac2:	49 f5       	brne	.+82     	; 0x2b16 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x14a>
DISPLAY_DIGIT1():
    2ac4:	25 e1       	ldi	r18, 0x15	; 21
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    2acc:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    2ad0:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    2ad4:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    2ad8:	28 e1       	ldi	r18, 0x18	; 24
    2ada:	30 e0       	ldi	r19, 0x00	; 0
    2adc:	20 93 00 29 	sts	0x2900, r18	; 0x802900 <digits1+0x6>
    2ae0:	30 93 01 29 	sts	0x2901, r19	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    2ae4:	c3 97       	sbiw	r24, 0x33	; 51
    2ae6:	24 f0       	brlt	.+8      	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    2ae8:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    2aec:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    2af0:	0f 90       	pop	r0
    2af2:	0f 90       	pop	r0
    2af4:	df 91       	pop	r29
    2af6:	cf 91       	pop	r28
    2af8:	1f 91       	pop	r17
    2afa:	0f 91       	pop	r16
    2afc:	ff 90       	pop	r15
    2afe:	ef 90       	pop	r14
    2b00:	df 90       	pop	r13
    2b02:	cf 90       	pop	r12
    2b04:	bf 90       	pop	r11
    2b06:	af 90       	pop	r10
    2b08:	9f 90       	pop	r9
    2b0a:	8f 90       	pop	r8
    2b0c:	7f 90       	pop	r7
    2b0e:	6f 90       	pop	r6
    2b10:	5f 90       	pop	r5
    2b12:	4f 90       	pop	r4
    2b14:	08 95       	ret
DISPLAY_DIGIT1():
    2b16:	24 e1       	ldi	r18, 0x14	; 20
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    2b1e:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    2b22:	28 e1       	ldi	r18, 0x18	; 24
    2b24:	30 e0       	ldi	r19, 0x00	; 0
    2b26:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    2b2a:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    2b2e:	d6 cf       	rjmp	.-84     	; 0x2adc <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x110>
SET_LONG_PRESS_FUNCTION():
    2b30:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    2b34:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    2b38:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
DISPLAY_DIGIT2():
    2b3c:	8c e1       	ldi	r24, 0x1C	; 28
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2b44:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2b48:	84 e1       	ldi	r24, 0x14	; 20
    2b4a:	90 e0       	ldi	r25, 0x00	; 0
    2b4c:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2b50:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2b54:	89 e1       	ldi	r24, 0x19	; 25
    2b56:	90 e0       	ldi	r25, 0x00	; 0
    2b58:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2b5c:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2b60:	80 e1       	ldi	r24, 0x10	; 16
    2b62:	90 e0       	ldi	r25, 0x00	; 0
    2b64:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2b68:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2b6c:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2b70:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2b74:	89 31       	cpi	r24, 0x19	; 25
    2b76:	91 05       	cpc	r25, r1
    2b78:	0c f4       	brge	.+2      	; 0x2b7c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1b0>
    2b7a:	8b cf       	rjmp	.-234    	; 0x2a92 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xc6>
    2b7c:	20 91 23 29 	lds	r18, 0x2923	; 0x802923 <SET_LONG_VALUE+0x2>
    2b80:	30 91 24 29 	lds	r19, 0x2924	; 0x802924 <SET_LONG_VALUE+0x3>
    2b84:	23 2b       	or	r18, r19
    2b86:	49 f4       	brne	.+18     	; 0x2b9a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1ce>
DISPLAY_DIGIT1():
    2b88:	2d e1       	ldi	r18, 0x1D	; 29
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    2b90:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    2b94:	2a e0       	ldi	r18, 0x0A	; 10
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	c0 cf       	rjmp	.-128    	; 0x2b1a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x14e>
    2b9a:	2d e1       	ldi	r18, 0x1D	; 29
    2b9c:	30 e0       	ldi	r19, 0x00	; 0
    2b9e:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    2ba2:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    2ba6:	25 e1       	ldi	r18, 0x15	; 21
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	b7 cf       	rjmp	.-146    	; 0x2b1a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x14e>
SET_LONG_PRESS_FUNCTION():
    2bac:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    2bb0:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
DISPLAY_DIGIT2():
    2bb4:	8c e0       	ldi	r24, 0x0C	; 12
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2bbc:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2bc0:	8d e0       	ldi	r24, 0x0D	; 13
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2bc8:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2bcc:	85 e1       	ldi	r24, 0x15	; 21
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2bd4:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2bd8:	8f e0       	ldi	r24, 0x0F	; 15
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2be0:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    2be4:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
SET_LONG_PRESS_FUNCTION():
    2be8:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2bec:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2bf0:	49 97       	sbiw	r24, 0x19	; 25
    2bf2:	f4 f4       	brge	.+60     	; 0x2c30 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x264>
    2bf4:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    2bf8:	81 11       	cpse	r24, r1
    2bfa:	13 c0       	rjmp	.+38     	; 0x2c22 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x256>
DISPLAY_DIGIT1():
    2bfc:	88 e1       	ldi	r24, 0x18	; 24
    2bfe:	90 e0       	ldi	r25, 0x00	; 0
    2c00:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2c04:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2c08:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2c0c:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2c10:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2c14:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    2c18:	21 11       	cpse	r18, r1
    2c1a:	0c c2       	rjmp	.+1048   	; 0x3034 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x668>
    2c1c:	8a e0       	ldi	r24, 0x0A	; 10
    2c1e:	90 e0       	ldi	r25, 0x00	; 0
    2c20:	8a c0       	rjmp	.+276    	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
    2c22:	89 e1       	ldi	r24, 0x19	; 25
    2c24:	90 e0       	ldi	r25, 0x00	; 0
    2c26:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    2c2a:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    2c2e:	f4 cf       	rjmp	.-24     	; 0x2c18 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x24c>
    2c30:	21 11       	cpse	r18, r1
    2c32:	17 c0       	rjmp	.+46     	; 0x2c62 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x296>
    2c34:	80 91 25 29 	lds	r24, 0x2925	; 0x802925 <SET_LONG_VALUE+0x4>
    2c38:	90 91 26 29 	lds	r25, 0x2926	; 0x802926 <SET_LONG_VALUE+0x5>
    2c3c:	2a e0       	ldi	r18, 0x0A	; 10
    2c3e:	28 9f       	mul	r18, r24
    2c40:	b0 01       	movw	r22, r0
    2c42:	29 9f       	mul	r18, r25
    2c44:	70 0d       	add	r23, r0
    2c46:	11 24       	eor	r1, r1
    2c48:	07 2e       	mov	r0, r23
    2c4a:	00 0c       	add	r0, r0
    2c4c:	88 0b       	sbc	r24, r24
    2c4e:	99 0b       	sbc	r25, r25
    2c50:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    2c54:	88 e1       	ldi	r24, 0x18	; 24
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2c5c:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2c60:	dd cf       	rjmp	.-70     	; 0x2c1c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x250>
    2c62:	80 91 49 29 	lds	r24, 0x2949	; 0x802949 <SET_LONG_VALUE+0x28>
    2c66:	90 91 4a 29 	lds	r25, 0x294A	; 0x80294a <SET_LONG_VALUE+0x29>
    2c6a:	2a e0       	ldi	r18, 0x0A	; 10
    2c6c:	28 9f       	mul	r18, r24
    2c6e:	b0 01       	movw	r22, r0
    2c70:	29 9f       	mul	r18, r25
    2c72:	70 0d       	add	r23, r0
    2c74:	11 24       	eor	r1, r1
    2c76:	07 2e       	mov	r0, r23
    2c78:	00 0c       	add	r0, r0
    2c7a:	88 0b       	sbc	r24, r24
    2c7c:	99 0b       	sbc	r25, r25
    2c7e:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    2c82:	d8 c1       	rjmp	.+944    	; 0x3034 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x668>
    2c84:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    2c88:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    2c8c:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    2c90:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2c94:	80 e1       	ldi	r24, 0x10	; 16
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2c9c:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2ca0:	29 e1       	ldi	r18, 0x19	; 25
    2ca2:	30 e0       	ldi	r19, 0x00	; 0
    2ca4:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    2ca8:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    2cac:	42 e1       	ldi	r20, 0x12	; 18
    2cae:	50 e0       	ldi	r21, 0x00	; 0
    2cb0:	40 93 06 29 	sts	0x2906, r20	; 0x802906 <digits2+0x4>
    2cb4:	50 93 07 29 	sts	0x2907, r21	; 0x802907 <digits2+0x5>
    2cb8:	4f e0       	ldi	r20, 0x0F	; 15
    2cba:	50 e0       	ldi	r21, 0x00	; 0
    2cbc:	40 93 08 29 	sts	0x2908, r20	; 0x802908 <digits2+0x6>
    2cc0:	50 93 09 29 	sts	0x2909, r21	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2cc4:	40 91 be 28 	lds	r20, 0x28BE	; 0x8028be <i>
    2cc8:	50 91 bf 28 	lds	r21, 0x28BF	; 0x8028bf <i+0x1>
    2ccc:	49 31       	cpi	r20, 0x19	; 25
    2cce:	51 05       	cpc	r21, r1
    2cd0:	e4 f4       	brge	.+56     	; 0x2d0a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x33e>
    2cd2:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    2cd6:	81 11       	cpse	r24, r1
    2cd8:	0f c0       	rjmp	.+30     	; 0x2cf8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x32c>
DISPLAY_DIGIT1():
    2cda:	88 e1       	ldi	r24, 0x18	; 24
    2cdc:	90 e0       	ldi	r25, 0x00	; 0
    2cde:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2ce2:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2ce6:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2cea:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2cee:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2cf2:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2cf6:	1f c0       	rjmp	.+62     	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
SET_LONG_PRESS_FUNCTION():
    2cf8:	20 93 be 28 	sts	0x28BE, r18	; 0x8028be <i>
    2cfc:	30 93 bf 28 	sts	0x28BF, r19	; 0x8028bf <i+0x1>
    2d00:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2d04:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2d08:	ed ce       	rjmp	.-550    	; 0x2ae4 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x118>
    2d0a:	20 91 27 29 	lds	r18, 0x2927	; 0x802927 <SET_LONG_VALUE+0x6>
    2d0e:	30 91 28 29 	lds	r19, 0x2928	; 0x802928 <SET_LONG_VALUE+0x7>
    2d12:	23 2b       	or	r18, r19
    2d14:	a9 f4       	brne	.+42     	; 0x2d40 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x374>
DISPLAY_DIGIT1():
    2d16:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2d1a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2d1e:	27 e1       	ldi	r18, 0x17	; 23
    2d20:	30 e0       	ldi	r19, 0x00	; 0
    2d22:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    2d26:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    2d2a:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2d2e:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2d32:	8f e1       	ldi	r24, 0x1F	; 31
    2d34:	90 e0       	ldi	r25, 0x00	; 0
    2d36:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    2d3a:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    2d3e:	e0 cf       	rjmp	.-64     	; 0x2d00 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x334>
    2d40:	8c e0       	ldi	r24, 0x0C	; 12
    2d42:	90 e0       	ldi	r25, 0x00	; 0
    2d44:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2d48:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2d4c:	87 e1       	ldi	r24, 0x17	; 23
    2d4e:	90 e0       	ldi	r25, 0x00	; 0
    2d50:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2d54:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2d58:	8d e0       	ldi	r24, 0x0D	; 13
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    2d5c:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2d60:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2d64:	5b cf       	rjmp	.-330    	; 0x2c1c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x250>
    2d66:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2d6a:	8b e0       	ldi	r24, 0x0B	; 11
    2d6c:	90 e0       	ldi	r25, 0x00	; 0
    2d6e:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2d72:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2d76:	81 e1       	ldi	r24, 0x11	; 17
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2d7e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2d82:	87 e1       	ldi	r24, 0x17	; 23
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2d8a:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2d8e:	8c e0       	ldi	r24, 0x0C	; 12
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2d96:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2d9a:	20 91 be 28 	lds	r18, 0x28BE	; 0x8028be <i>
    2d9e:	30 91 bf 28 	lds	r19, 0x28BF	; 0x8028bf <i+0x1>
    2da2:	29 31       	cpi	r18, 0x19	; 25
    2da4:	31 05       	cpc	r19, r1
    2da6:	64 f4       	brge	.+24     	; 0x2dc0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x3f4>
    2da8:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    2dac:	88 23       	and	r24, r24
    2dae:	09 f4       	brne	.+2      	; 0x2db2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x3e6>
    2db0:	94 cf       	rjmp	.-216    	; 0x2cda <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x30e>
    2db2:	89 e1       	ldi	r24, 0x19	; 25
    2db4:	90 e0       	ldi	r25, 0x00	; 0
    2db6:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    2dba:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    2dbe:	a0 cf       	rjmp	.-192    	; 0x2d00 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x334>
    2dc0:	20 91 29 29 	lds	r18, 0x2929	; 0x802929 <SET_LONG_VALUE+0x8>
    2dc4:	30 91 2a 29 	lds	r19, 0x292A	; 0x80292a <SET_LONG_VALUE+0x9>
    2dc8:	23 2b       	or	r18, r19
    2dca:	99 f4       	brne	.+38     	; 0x2df2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x426>
DISPLAY_DIGIT1():
    2dcc:	20 e2       	ldi	r18, 0x20	; 32
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    2dd4:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    2dd8:	29 e1       	ldi	r18, 0x19	; 25
    2dda:	30 e0       	ldi	r19, 0x00	; 0
    2ddc:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    2de0:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    2de4:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2de8:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2dec:	8e e0       	ldi	r24, 0x0E	; 14
    2dee:	90 e0       	ldi	r25, 0x00	; 0
    2df0:	a2 cf       	rjmp	.-188    	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
    2df2:	8f e0       	ldi	r24, 0x0F	; 15
    2df4:	90 e0       	ldi	r25, 0x00	; 0
    2df6:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2dfa:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2dfe:	84 e1       	ldi	r24, 0x14	; 20
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2e06:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2e0a:	8e e0       	ldi	r24, 0x0E	; 14
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2e12:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2e16:	8a e1       	ldi	r24, 0x1A	; 26
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	8d cf       	rjmp	.-230    	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
SET_LONG_PRESS_FUNCTION():
    2e1c:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    2e20:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    2e24:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2e28:	8b e0       	ldi	r24, 0x0B	; 11
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2e30:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2e34:	81 e1       	ldi	r24, 0x11	; 17
    2e36:	90 e0       	ldi	r25, 0x00	; 0
    2e38:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2e3c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2e40:	80 e2       	ldi	r24, 0x20	; 32
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2e48:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2e4c:	80 e1       	ldi	r24, 0x10	; 16
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2e54:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2e58:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2e5c:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2e60:	49 97       	sbiw	r24, 0x19	; 25
    2e62:	0c f4       	brge	.+2      	; 0x2e66 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x49a>
    2e64:	a1 cf       	rjmp	.-190    	; 0x2da8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x3dc>
    2e66:	80 91 2b 29 	lds	r24, 0x292B	; 0x80292b <SET_LONG_VALUE+0xa>
    2e6a:	90 91 2c 29 	lds	r25, 0x292C	; 0x80292c <SET_LONG_VALUE+0xb>
    2e6e:	89 2b       	or	r24, r25
    2e70:	a9 f0       	breq	.+42     	; 0x2e9c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x4d0>
DISPLAY_DIGIT1():
    2e72:	84 e2       	ldi	r24, 0x24	; 36
    2e74:	90 e0       	ldi	r25, 0x00	; 0
    2e76:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2e7a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2e7e:	8a e1       	ldi	r24, 0x1A	; 26
    2e80:	90 e0       	ldi	r25, 0x00	; 0
    2e82:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2e86:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2e8a:	8c e0       	ldi	r24, 0x0C	; 12
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2e92:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2e96:	88 e1       	ldi	r24, 0x18	; 24
    2e98:	90 e0       	ldi	r25, 0x00	; 0
    2e9a:	4d cf       	rjmp	.-358    	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
    2e9c:	84 e2       	ldi	r24, 0x24	; 36
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2ea4:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2ea8:	8a e1       	ldi	r24, 0x1A	; 26
    2eaa:	90 e0       	ldi	r25, 0x00	; 0
    2eac:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2eb0:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2eb4:	8a e0       	ldi	r24, 0x0A	; 10
    2eb6:	90 e0       	ldi	r25, 0x00	; 0
    2eb8:	ea cf       	rjmp	.-44     	; 0x2e8e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x4c2>
SET_LONG_PRESS_FUNCTION():
    2eba:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    2ebe:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2ec2:	4a e0       	ldi	r20, 0x0A	; 10
    2ec4:	50 e0       	ldi	r21, 0x00	; 0
    2ec6:	40 93 02 29 	sts	0x2902, r20	; 0x802902 <digits2>
    2eca:	50 93 03 29 	sts	0x2903, r21	; 0x802903 <digits2+0x1>
    2ece:	2d e0       	ldi	r18, 0x0D	; 13
    2ed0:	30 e0       	ldi	r19, 0x00	; 0
    2ed2:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    2ed6:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    2eda:	8a e1       	ldi	r24, 0x1A	; 26
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2ee2:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2ee6:	6e e0       	ldi	r22, 0x0E	; 14
    2ee8:	70 e0       	ldi	r23, 0x00	; 0
    2eea:	60 93 08 29 	sts	0x2908, r22	; 0x802908 <digits2+0x6>
    2eee:	70 93 09 29 	sts	0x2909, r23	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2ef2:	60 91 be 28 	lds	r22, 0x28BE	; 0x8028be <i>
    2ef6:	70 91 bf 28 	lds	r23, 0x28BF	; 0x8028bf <i+0x1>
    2efa:	69 31       	cpi	r22, 0x19	; 25
    2efc:	71 05       	cpc	r23, r1
    2efe:	0c f4       	brge	.+2      	; 0x2f02 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x536>
    2f00:	c8 cd       	rjmp	.-1136   	; 0x2a92 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xc6>
    2f02:	e0 91 2d 29 	lds	r30, 0x292D	; 0x80292d <SET_LONG_VALUE+0xc>
    2f06:	f0 91 2e 29 	lds	r31, 0x292E	; 0x80292e <SET_LONG_VALUE+0xd>
DISPLAY_DIGIT1():
    2f0a:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    2f0e:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    2f12:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    2f16:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    2f1a:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    2f1e:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    2f22:	82 e0       	ldi	r24, 0x02	; 2
    2f24:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    2f26:	ef 2b       	or	r30, r31
    2f28:	11 f4       	brne	.+4      	; 0x2f2e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x562>
DISPLAY_DIGIT1():
    2f2a:	81 e0       	ldi	r24, 0x01	; 1
    2f2c:	90 e0       	ldi	r25, 0x00	; 0
    2f2e:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    2f32:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    2f36:	63 33       	cpi	r22, 0x33	; 51
    2f38:	71 05       	cpc	r23, r1
    2f3a:	0c f0       	brlt	.+2      	; 0x2f3e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x572>
    2f3c:	d5 cd       	rjmp	.-1110   	; 0x2ae8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x11c>
    2f3e:	d8 cd       	rjmp	.-1104   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    2f40:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    2f44:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    2f48:	8a e0       	ldi	r24, 0x0A	; 10
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    2f50:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    2f54:	8d e0       	ldi	r24, 0x0D	; 13
    2f56:	90 e0       	ldi	r25, 0x00	; 0
    2f58:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    2f5c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    2f60:	8a e1       	ldi	r24, 0x1A	; 26
    2f62:	90 e0       	ldi	r25, 0x00	; 0
    2f64:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    2f68:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    2f6c:	81 e0       	ldi	r24, 0x01	; 1
    2f6e:	90 e0       	ldi	r25, 0x00	; 0
    2f70:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    2f74:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    2f78:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2f7c:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2f80:	49 97       	sbiw	r24, 0x19	; 25
    2f82:	3c f5       	brge	.+78     	; 0x2fd2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x606>
    2f84:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    2f88:	81 11       	cpse	r24, r1
    2f8a:	1c c0       	rjmp	.+56     	; 0x2fc4 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x5f8>
    2f8c:	88 e1       	ldi	r24, 0x18	; 24
    2f8e:	90 e0       	ldi	r25, 0x00	; 0
    2f90:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    2f94:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    2f98:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    2f9c:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    2fa0:	3d ce       	rjmp	.-902    	; 0x2c1c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x250>
    2fa2:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    2fa6:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    2faa:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    2fae:	21 11       	cpse	r18, r1
    2fb0:	2d c0       	rjmp	.+90     	; 0x300c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x640>
    2fb2:	49 97       	sbiw	r24, 0x19	; 25
    2fb4:	74 f4       	brge	.+28     	; 0x2fd2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x606>
    2fb6:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    2fba:	81 11       	cpse	r24, r1
    2fbc:	03 c0       	rjmp	.+6      	; 0x2fc4 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x5f8>
    2fbe:	88 e1       	ldi	r24, 0x18	; 24
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	cc ce       	rjmp	.-616    	; 0x2d5c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x390>
    2fc4:	89 e1       	ldi	r24, 0x19	; 25
    2fc6:	90 e0       	ldi	r25, 0x00	; 0
    2fc8:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    2fcc:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    2fd0:	25 ce       	rjmp	.-950    	; 0x2c1c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x250>
    2fd2:	80 91 2f 29 	lds	r24, 0x292F	; 0x80292f <SET_LONG_VALUE+0xe>
    2fd6:	90 91 30 29 	lds	r25, 0x2930	; 0x802930 <SET_LONG_VALUE+0xf>
    2fda:	24 e6       	ldi	r18, 0x64	; 100
    2fdc:	28 9f       	mul	r18, r24
    2fde:	b0 01       	movw	r22, r0
    2fe0:	29 9f       	mul	r18, r25
    2fe2:	70 0d       	add	r23, r0
    2fe4:	11 24       	eor	r1, r1
    2fe6:	20 91 31 29 	lds	r18, 0x2931	; 0x802931 <SET_LONG_VALUE+0x10>
    2fea:	30 91 32 29 	lds	r19, 0x2932	; 0x802932 <SET_LONG_VALUE+0x11>
    2fee:	4a e0       	ldi	r20, 0x0A	; 10
    2ff0:	42 9f       	mul	r20, r18
    2ff2:	c0 01       	movw	r24, r0
    2ff4:	43 9f       	mul	r20, r19
    2ff6:	90 0d       	add	r25, r0
    2ff8:	11 24       	eor	r1, r1
    2ffa:	68 0f       	add	r22, r24
    2ffc:	79 1f       	adc	r23, r25
    2ffe:	07 2e       	mov	r0, r23
    3000:	00 0c       	add	r0, r0
    3002:	88 0b       	sbc	r24, r24
    3004:	99 0b       	sbc	r25, r25
    3006:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    300a:	08 ce       	rjmp	.-1008   	; 0x2c1c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x250>
    300c:	49 97       	sbiw	r24, 0x19	; 25
    300e:	e4 f4       	brge	.+56     	; 0x3048 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x67c>
    3010:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    3014:	81 11       	cpse	r24, r1
    3016:	11 c0       	rjmp	.+34     	; 0x303a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x66e>
DISPLAY_DIGIT1():
    3018:	88 e1       	ldi	r24, 0x18	; 24
    301a:	90 e0       	ldi	r25, 0x00	; 0
    301c:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3020:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3024:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    3028:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    302c:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3030:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    3034:	85 e1       	ldi	r24, 0x15	; 21
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	7e ce       	rjmp	.-772    	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
    303a:	89 e1       	ldi	r24, 0x19	; 25
    303c:	90 e0       	ldi	r25, 0x00	; 0
    303e:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    3042:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    3046:	f6 cf       	rjmp	.-20     	; 0x3034 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x668>
    3048:	80 91 4b 29 	lds	r24, 0x294B	; 0x80294b <SET_LONG_VALUE+0x2a>
    304c:	90 91 4c 29 	lds	r25, 0x294C	; 0x80294c <SET_LONG_VALUE+0x2b>
    3050:	0c ce       	rjmp	.-1000   	; 0x2c6a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x29e>
    3052:	11 e0       	ldi	r17, 0x01	; 1
    3054:	10 93 c0 28 	sts	0x28C0, r17	; 0x8028c0 <DOT1_0>
    3058:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    305c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3060:	10 93 bc 28 	sts	0x28BC, r17	; 0x8028bc <CAL2_START>
DISPLAY_DIGIT2():
    3064:	8a e0       	ldi	r24, 0x0A	; 10
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    306c:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3070:	8d e0       	ldi	r24, 0x0D	; 13
    3072:	90 e0       	ldi	r25, 0x00	; 0
    3074:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3078:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    307c:	8a e1       	ldi	r24, 0x1A	; 26
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3084:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3088:	82 e0       	ldi	r24, 0x02	; 2
    308a:	90 e0       	ldi	r25, 0x00	; 0
    308c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3090:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3094:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    3098:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    309c:	49 97       	sbiw	r24, 0x19	; 25
    309e:	c4 f4       	brge	.+48     	; 0x30d0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x704>
    30a0:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    30a4:	81 11       	cpse	r24, r1
    30a6:	0d c0       	rjmp	.+26     	; 0x30c2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x6f6>
DISPLAY_DIGIT1():
    30a8:	88 e1       	ldi	r24, 0x18	; 24
    30aa:	90 e0       	ldi	r25, 0x00	; 0
    30ac:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    30b0:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    30b4:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    30b8:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    30bc:	8a e1       	ldi	r24, 0x1A	; 26
    30be:	90 e0       	ldi	r25, 0x00	; 0
    30c0:	cb cd       	rjmp	.-1130   	; 0x2c58 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x28c>
    30c2:	89 e1       	ldi	r24, 0x19	; 25
    30c4:	90 e0       	ldi	r25, 0x00	; 0
    30c6:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    30ca:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    30ce:	f6 cf       	rjmp	.-20     	; 0x30bc <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x6f0>
    30d0:	80 91 33 29 	lds	r24, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    30d4:	90 91 34 29 	lds	r25, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    30d8:	2a e0       	ldi	r18, 0x0A	; 10
    30da:	28 9f       	mul	r18, r24
    30dc:	b0 01       	movw	r22, r0
    30de:	29 9f       	mul	r18, r25
    30e0:	70 0d       	add	r23, r0
    30e2:	11 24       	eor	r1, r1
    30e4:	07 2e       	mov	r0, r23
    30e6:	00 0c       	add	r0, r0
    30e8:	88 0b       	sbc	r24, r24
    30ea:	99 0b       	sbc	r25, r25
    30ec:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    30f0:	e5 cf       	rjmp	.-54     	; 0x30bc <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x6f0>
    30f2:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    30f6:	8a e0       	ldi	r24, 0x0A	; 10
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    30fe:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3102:	8d e0       	ldi	r24, 0x0D	; 13
    3104:	90 e0       	ldi	r25, 0x00	; 0
    3106:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    310a:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    310e:	8a e1       	ldi	r24, 0x1A	; 26
    3110:	90 e0       	ldi	r25, 0x00	; 0
    3112:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3116:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    311a:	82 e0       	ldi	r24, 0x02	; 2
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3122:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3126:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    312a:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    312e:	49 97       	sbiw	r24, 0x19	; 25
    3130:	c4 f4       	brge	.+48     	; 0x3162 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x796>
    3132:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    3136:	81 11       	cpse	r24, r1
    3138:	0d c0       	rjmp	.+26     	; 0x3154 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x788>
DISPLAY_DIGIT1():
    313a:	88 e1       	ldi	r24, 0x18	; 24
    313c:	90 e0       	ldi	r25, 0x00	; 0
    313e:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    3142:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    3146:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    314a:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    314e:	8e e1       	ldi	r24, 0x1E	; 30
    3150:	90 e0       	ldi	r25, 0x00	; 0
    3152:	82 cd       	rjmp	.-1276   	; 0x2c58 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x28c>
    3154:	89 e1       	ldi	r24, 0x19	; 25
    3156:	90 e0       	ldi	r25, 0x00	; 0
    3158:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    315c:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    3160:	f6 cf       	rjmp	.-20     	; 0x314e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x782>
    3162:	80 91 35 29 	lds	r24, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    3166:	90 91 36 29 	lds	r25, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    316a:	2a e0       	ldi	r18, 0x0A	; 10
    316c:	28 9f       	mul	r18, r24
    316e:	b0 01       	movw	r22, r0
    3170:	29 9f       	mul	r18, r25
    3172:	70 0d       	add	r23, r0
    3174:	11 24       	eor	r1, r1
    3176:	07 2e       	mov	r0, r23
    3178:	00 0c       	add	r0, r0
    317a:	88 0b       	sbc	r24, r24
    317c:	99 0b       	sbc	r25, r25
    317e:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3182:	e5 cf       	rjmp	.-54     	; 0x314e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x782>
    3184:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3188:	81 e0       	ldi	r24, 0x01	; 1
    318a:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <DOT1_1>
    318e:	60 91 07 28 	lds	r22, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    3192:	70 91 08 28 	lds	r23, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    3196:	07 2e       	mov	r0, r23
    3198:	00 0c       	add	r0, r0
    319a:	88 0b       	sbc	r24, r24
    319c:	99 0b       	sbc	r25, r25
    319e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    31a2:	8a e1       	ldi	r24, 0x1A	; 26
    31a4:	90 e0       	ldi	r25, 0x00	; 0
    31a6:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    31aa:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    31ae:	87 e1       	ldi	r24, 0x17	; 23
    31b0:	90 e0       	ldi	r25, 0x00	; 0
    31b2:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    31b6:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    31ba:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    31be:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    31c2:	49 97       	sbiw	r24, 0x19	; 25
    31c4:	7c f4       	brge	.+30     	; 0x31e4 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x818>
    31c6:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    31ca:	81 11       	cpse	r24, r1
    31cc:	f2 cd       	rjmp	.-1052   	; 0x2db2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x3e6>
    31ce:	88 e1       	ldi	r24, 0x18	; 24
    31d0:	90 e0       	ldi	r25, 0x00	; 0
    31d2:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    31d6:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    31da:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    31de:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    31e2:	8e cd       	rjmp	.-1252   	; 0x2d00 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x334>
    31e4:	80 91 37 29 	lds	r24, 0x2937	; 0x802937 <SET_LONG_VALUE+0x16>
    31e8:	90 91 38 29 	lds	r25, 0x2938	; 0x802938 <SET_LONG_VALUE+0x17>
    31ec:	24 e6       	ldi	r18, 0x64	; 100
    31ee:	28 9f       	mul	r18, r24
    31f0:	b0 01       	movw	r22, r0
    31f2:	29 9f       	mul	r18, r25
    31f4:	70 0d       	add	r23, r0
    31f6:	11 24       	eor	r1, r1
    31f8:	20 91 39 29 	lds	r18, 0x2939	; 0x802939 <SET_LONG_VALUE+0x18>
    31fc:	30 91 3a 29 	lds	r19, 0x293A	; 0x80293a <SET_LONG_VALUE+0x19>
    3200:	f6 ce       	rjmp	.-532    	; 0x2fee <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x622>
    3202:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3206:	60 91 07 28 	lds	r22, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    320a:	70 91 08 28 	lds	r23, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    320e:	07 2e       	mov	r0, r23
    3210:	00 0c       	add	r0, r0
    3212:	88 0b       	sbc	r24, r24
    3214:	99 0b       	sbc	r25, r25
    3216:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    321a:	8a e1       	ldi	r24, 0x1A	; 26
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3222:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3226:	87 e1       	ldi	r24, 0x17	; 23
    3228:	90 e0       	ldi	r25, 0x00	; 0
    322a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    322e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3232:	00 91 37 29 	lds	r16, 0x2937	; 0x802937 <SET_LONG_VALUE+0x16>
    3236:	10 91 38 29 	lds	r17, 0x2938	; 0x802938 <SET_LONG_VALUE+0x17>
    323a:	e0 90 39 29 	lds	r14, 0x2939	; 0x802939 <SET_LONG_VALUE+0x18>
    323e:	f0 90 3a 29 	lds	r15, 0x293A	; 0x80293a <SET_LONG_VALUE+0x19>
    3242:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    3246:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    324a:	49 97       	sbiw	r24, 0x19	; 25
    324c:	0c f0       	brlt	.+2      	; 0x3250 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x884>
    324e:	44 c0       	rjmp	.+136    	; 0x32d8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x90c>
    3250:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    3254:	81 11       	cpse	r24, r1
    3256:	39 c0       	rjmp	.+114    	; 0x32ca <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x8fe>
    3258:	88 e1       	ldi	r24, 0x18	; 24
    325a:	90 e0       	ldi	r25, 0x00	; 0
    325c:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3260:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    3264:	8a e0       	ldi	r24, 0x0A	; 10
    3266:	90 e0       	ldi	r25, 0x00	; 0
    3268:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    326c:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    3270:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    3274:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    3278:	c3 97       	sbiw	r24, 0x33	; 51
    327a:	24 f0       	brlt	.+8      	; 0x3284 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x8b8>
    327c:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    3280:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    3284:	b7 01       	movw	r22, r14
    3286:	ff 0c       	add	r15, r15
    3288:	88 0b       	sbc	r24, r24
    328a:	99 0b       	sbc	r25, r25
    328c:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    3290:	20 e0       	ldi	r18, 0x00	; 0
    3292:	30 e0       	ldi	r19, 0x00	; 0
    3294:	40 e2       	ldi	r20, 0x20	; 32
    3296:	51 e4       	ldi	r21, 0x41	; 65
    3298:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    329c:	6b 01       	movw	r12, r22
    329e:	7c 01       	movw	r14, r24
    32a0:	b8 01       	movw	r22, r16
    32a2:	11 0f       	add	r17, r17
    32a4:	88 0b       	sbc	r24, r24
    32a6:	99 0b       	sbc	r25, r25
    32a8:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    32ac:	9b 01       	movw	r18, r22
    32ae:	ac 01       	movw	r20, r24
    32b0:	c7 01       	movw	r24, r14
    32b2:	b6 01       	movw	r22, r12
    32b4:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    32b8:	60 93 b8 28 	sts	0x28B8, r22	; 0x8028b8 <CAL2_CALCULATED_LOW_CAL_VALUE>
    32bc:	70 93 b9 28 	sts	0x28B9, r23	; 0x8028b9 <CAL2_CALCULATED_LOW_CAL_VALUE+0x1>
    32c0:	80 93 ba 28 	sts	0x28BA, r24	; 0x8028ba <CAL2_CALCULATED_LOW_CAL_VALUE+0x2>
    32c4:	90 93 bb 28 	sts	0x28BB, r25	; 0x8028bb <CAL2_CALCULATED_LOW_CAL_VALUE+0x3>
    32c8:	13 cc       	rjmp	.-2010   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    32ca:	89 e1       	ldi	r24, 0x19	; 25
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    32d2:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    32d6:	c6 cf       	rjmp	.-116    	; 0x3264 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x898>
    32d8:	84 e6       	ldi	r24, 0x64	; 100
    32da:	80 9f       	mul	r24, r16
    32dc:	b0 01       	movw	r22, r0
    32de:	81 9f       	mul	r24, r17
    32e0:	70 0d       	add	r23, r0
    32e2:	11 24       	eor	r1, r1
    32e4:	2a e0       	ldi	r18, 0x0A	; 10
    32e6:	2e 9d       	mul	r18, r14
    32e8:	c0 01       	movw	r24, r0
    32ea:	2f 9d       	mul	r18, r15
    32ec:	90 0d       	add	r25, r0
    32ee:	11 24       	eor	r1, r1
    32f0:	68 0f       	add	r22, r24
    32f2:	79 1f       	adc	r23, r25
    32f4:	07 2e       	mov	r0, r23
    32f6:	00 0c       	add	r0, r0
    32f8:	88 0b       	sbc	r24, r24
    32fa:	99 0b       	sbc	r25, r25
    32fc:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3300:	b1 cf       	rjmp	.-158    	; 0x3264 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x898>
    3302:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3306:	60 91 b6 28 	lds	r22, 0x28B6	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    330a:	70 91 b7 28 	lds	r23, 0x28B7	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    330e:	07 2e       	mov	r0, r23
    3310:	00 0c       	add	r0, r0
    3312:	88 0b       	sbc	r24, r24
    3314:	99 0b       	sbc	r25, r25
    3316:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    331a:	8e e1       	ldi	r24, 0x1E	; 30
    331c:	90 e0       	ldi	r25, 0x00	; 0
    331e:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3322:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3326:	89 e1       	ldi	r24, 0x19	; 25
    3328:	90 e0       	ldi	r25, 0x00	; 0
    332a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    332e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3332:	21 e0       	ldi	r18, 0x01	; 1
    3334:	20 93 c2 28 	sts	0x28C2, r18	; 0x8028c2 <DOT1_1>
    3338:	20 91 be 28 	lds	r18, 0x28BE	; 0x8028be <i>
    333c:	30 91 bf 28 	lds	r19, 0x28BF	; 0x8028bf <i+0x1>
    3340:	29 31       	cpi	r18, 0x19	; 25
    3342:	31 05       	cpc	r19, r1
    3344:	2c f4       	brge	.+10     	; 0x3350 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x984>
    3346:	20 91 bd 28 	lds	r18, 0x28BD	; 0x8028bd <BLINK_STATS>
    334a:	21 11       	cpse	r18, r1
    334c:	3d ce       	rjmp	.-902    	; 0x2fc8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x5fc>
    334e:	1e ce       	rjmp	.-964    	; 0x2f8c <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x5c0>
    3350:	80 91 3b 29 	lds	r24, 0x293B	; 0x80293b <SET_LONG_VALUE+0x1a>
    3354:	90 91 3c 29 	lds	r25, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1b>
    3358:	24 e6       	ldi	r18, 0x64	; 100
    335a:	28 9f       	mul	r18, r24
    335c:	b0 01       	movw	r22, r0
    335e:	29 9f       	mul	r18, r25
    3360:	70 0d       	add	r23, r0
    3362:	11 24       	eor	r1, r1
    3364:	20 91 3d 29 	lds	r18, 0x293D	; 0x80293d <SET_LONG_VALUE+0x1c>
    3368:	30 91 3e 29 	lds	r19, 0x293E	; 0x80293e <SET_LONG_VALUE+0x1d>
    336c:	40 ce       	rjmp	.-896    	; 0x2fee <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x622>
    336e:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3372:	60 91 b6 28 	lds	r22, 0x28B6	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    3376:	70 91 b7 28 	lds	r23, 0x28B7	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    337a:	07 2e       	mov	r0, r23
    337c:	00 0c       	add	r0, r0
    337e:	88 0b       	sbc	r24, r24
    3380:	99 0b       	sbc	r25, r25
    3382:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    3386:	8e e1       	ldi	r24, 0x1E	; 30
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    338e:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3392:	89 e1       	ldi	r24, 0x19	; 25
    3394:	90 e0       	ldi	r25, 0x00	; 0
    3396:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    339a:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    339e:	21 e0       	ldi	r18, 0x01	; 1
    33a0:	20 93 c2 28 	sts	0x28C2, r18	; 0x8028c2 <DOT1_1>
    33a4:	00 91 3b 29 	lds	r16, 0x293B	; 0x80293b <SET_LONG_VALUE+0x1a>
    33a8:	10 91 3c 29 	lds	r17, 0x293C	; 0x80293c <SET_LONG_VALUE+0x1b>
    33ac:	e0 90 3d 29 	lds	r14, 0x293D	; 0x80293d <SET_LONG_VALUE+0x1c>
    33b0:	f0 90 3e 29 	lds	r15, 0x293E	; 0x80293e <SET_LONG_VALUE+0x1d>
    33b4:	20 91 be 28 	lds	r18, 0x28BE	; 0x8028be <i>
    33b8:	30 91 bf 28 	lds	r19, 0x28BF	; 0x8028bf <i+0x1>
    33bc:	29 31       	cpi	r18, 0x19	; 25
    33be:	31 05       	cpc	r19, r1
    33c0:	0c f0       	brlt	.+2      	; 0x33c4 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x9f8>
    33c2:	42 c0       	rjmp	.+132    	; 0x3448 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xa7c>
    33c4:	20 91 bd 28 	lds	r18, 0x28BD	; 0x8028bd <BLINK_STATS>
    33c8:	21 11       	cpse	r18, r1
    33ca:	39 c0       	rjmp	.+114    	; 0x343e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xa72>
    33cc:	88 e1       	ldi	r24, 0x18	; 24
    33ce:	90 e0       	ldi	r25, 0x00	; 0
    33d0:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    33d4:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    33d8:	8a e0       	ldi	r24, 0x0A	; 10
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    33e0:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    33e4:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    33e8:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    33ec:	c3 97       	sbiw	r24, 0x33	; 51
    33ee:	24 f0       	brlt	.+8      	; 0x33f8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xa2c>
    33f0:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    33f4:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    33f8:	b7 01       	movw	r22, r14
    33fa:	ff 0c       	add	r15, r15
    33fc:	88 0b       	sbc	r24, r24
    33fe:	99 0b       	sbc	r25, r25
    3400:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	40 e2       	ldi	r20, 0x20	; 32
    340a:	51 e4       	ldi	r21, 0x41	; 65
    340c:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    3410:	6b 01       	movw	r12, r22
    3412:	7c 01       	movw	r14, r24
    3414:	b8 01       	movw	r22, r16
    3416:	11 0f       	add	r17, r17
    3418:	88 0b       	sbc	r24, r24
    341a:	99 0b       	sbc	r25, r25
    341c:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    3420:	9b 01       	movw	r18, r22
    3422:	ac 01       	movw	r20, r24
    3424:	c7 01       	movw	r24, r14
    3426:	b6 01       	movw	r22, r12
    3428:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    342c:	60 93 b2 28 	sts	0x28B2, r22	; 0x8028b2 <CAL2_CALCULATED_HIGH_CAL_VALUE>
    3430:	70 93 b3 28 	sts	0x28B3, r23	; 0x8028b3 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x1>
    3434:	80 93 b4 28 	sts	0x28B4, r24	; 0x8028b4 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x2>
    3438:	90 93 b5 28 	sts	0x28B5, r25	; 0x8028b5 <CAL2_CALCULATED_HIGH_CAL_VALUE+0x3>
    343c:	59 cb       	rjmp	.-2382   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    343e:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    3442:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    3446:	c8 cf       	rjmp	.-112    	; 0x33d8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xa0c>
    3448:	84 e6       	ldi	r24, 0x64	; 100
    344a:	80 9f       	mul	r24, r16
    344c:	b0 01       	movw	r22, r0
    344e:	81 9f       	mul	r24, r17
    3450:	70 0d       	add	r23, r0
    3452:	11 24       	eor	r1, r1
    3454:	2a e0       	ldi	r18, 0x0A	; 10
    3456:	2e 9d       	mul	r18, r14
    3458:	c0 01       	movw	r24, r0
    345a:	2f 9d       	mul	r18, r15
    345c:	90 0d       	add	r25, r0
    345e:	11 24       	eor	r1, r1
    3460:	68 0f       	add	r22, r24
    3462:	79 1f       	adc	r23, r25
    3464:	07 2e       	mov	r0, r23
    3466:	00 0c       	add	r0, r0
    3468:	88 0b       	sbc	r24, r24
    346a:	99 0b       	sbc	r25, r25
    346c:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3470:	b3 cf       	rjmp	.-154    	; 0x33d8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xa0c>
    3472:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <Service_Menu>
    3476:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    347a:	3a cb       	rjmp	.-2444   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    347c:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3480:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    3484:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3488:	8e e1       	ldi	r24, 0x1E	; 30
    348a:	90 e0       	ldi	r25, 0x00	; 0
    348c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3490:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3494:	8f e0       	ldi	r24, 0x0F	; 15
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    349c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    34a0:	2d e0       	ldi	r18, 0x0D	; 13
    34a2:	30 e0       	ldi	r19, 0x00	; 0
    34a4:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    34a8:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    34ac:	80 e1       	ldi	r24, 0x10	; 16
    34ae:	90 e0       	ldi	r25, 0x00	; 0
    34b0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    34b4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    34b8:	40 91 be 28 	lds	r20, 0x28BE	; 0x8028be <i>
    34bc:	50 91 bf 28 	lds	r21, 0x28BF	; 0x8028bf <i+0x1>
    34c0:	49 31       	cpi	r20, 0x19	; 25
    34c2:	51 05       	cpc	r21, r1
    34c4:	0c f4       	brge	.+2      	; 0x34c8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xafc>
    34c6:	70 cc       	rjmp	.-1824   	; 0x2da8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x3dc>
    34c8:	40 91 41 29 	lds	r20, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    34cc:	50 91 42 29 	lds	r21, 0x2942	; 0x802942 <SET_LONG_VALUE+0x21>
    34d0:	45 2b       	or	r20, r21
    34d2:	a9 f4       	brne	.+42     	; 0x34fe <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xb32>
DISPLAY_DIGIT1():
    34d4:	8c e0       	ldi	r24, 0x0C	; 12
    34d6:	90 e0       	ldi	r25, 0x00	; 0
    34d8:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    34dc:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    34e0:	8a e1       	ldi	r24, 0x1A	; 26
    34e2:	90 e0       	ldi	r25, 0x00	; 0
    34e4:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    34e8:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    34ec:	87 e1       	ldi	r24, 0x17	; 23
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    34f4:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    34f8:	84 e2       	ldi	r24, 0x24	; 36
    34fa:	90 e0       	ldi	r25, 0x00	; 0
    34fc:	1c cc       	rjmp	.-1992   	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
    34fe:	45 e1       	ldi	r20, 0x15	; 21
    3500:	50 e0       	ldi	r21, 0x00	; 0
    3502:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    3506:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    350a:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    350e:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    3512:	2c e0       	ldi	r18, 0x0C	; 12
    3514:	30 e0       	ldi	r19, 0x00	; 0
    3516:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    351a:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    351e:	0b cc       	rjmp	.-2026   	; 0x2d36 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x36a>
SET_LONG_PRESS_FUNCTION():
    3520:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3524:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3528:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    352c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    3530:	80 91 af 28 	lds	r24, 0x28AF	; 0x8028af <processLog>
    3534:	90 91 b0 28 	lds	r25, 0x28B0	; 0x8028b0 <processLog+0x1>
    3538:	2a e0       	ldi	r18, 0x0A	; 10
    353a:	28 9f       	mul	r18, r24
    353c:	b0 01       	movw	r22, r0
    353e:	29 9f       	mul	r18, r25
    3540:	70 0d       	add	r23, r0
    3542:	11 24       	eor	r1, r1
    3544:	90 e0       	ldi	r25, 0x00	; 0
    3546:	80 e0       	ldi	r24, 0x00	; 0
    3548:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    354c:	8e e1       	ldi	r24, 0x1E	; 30
    354e:	90 e0       	ldi	r25, 0x00	; 0
    3550:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3554:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    3558:	60 91 ad 28 	lds	r22, 0x28AD	; 0x8028ad <processLogNumberOfTimes>
    355c:	70 91 ae 28 	lds	r23, 0x28AE	; 0x8028ae <processLogNumberOfTimes+0x1>
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	80 e0       	ldi	r24, 0x00	; 0
    3564:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3568:	8d e0       	ldi	r24, 0x0D	; 13
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3570:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3574:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <currentMillis>
    3578:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <currentMillis+0x1>
    357c:	b9 ca       	rjmp	.-2702   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    357e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3582:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3586:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    358a:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    358e:	8c e0       	ldi	r24, 0x0C	; 12
    3590:	90 e0       	ldi	r25, 0x00	; 0
    3592:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3596:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    359a:	2c e1       	ldi	r18, 0x1C	; 28
    359c:	30 e0       	ldi	r19, 0x00	; 0
    359e:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    35a2:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    35a6:	41 e1       	ldi	r20, 0x11	; 17
    35a8:	50 e0       	ldi	r21, 0x00	; 0
    35aa:	40 93 06 29 	sts	0x2906, r20	; 0x802906 <digits2+0x4>
    35ae:	50 93 07 29 	sts	0x2907, r21	; 0x802907 <digits2+0x5>
    35b2:	2f e0       	ldi	r18, 0x0F	; 15
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <digits2+0x6>
    35ba:	30 93 09 29 	sts	0x2909, r19	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    35be:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    35c2:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    35c6:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    35ca:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    35ce:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    35d2:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    35d6:	80 e1       	ldi	r24, 0x10	; 16
    35d8:	90 e0       	ldi	r25, 0x00	; 0
    35da:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    35de:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    35e2:	c8 cf       	rjmp	.-112    	; 0x3574 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xba8>
SET_LONG_PRESS_FUNCTION():
    35e4:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    35e8:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    35ec:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    35f0:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    35f4:	80 91 ab 28 	lds	r24, 0x28AB	; 0x8028ab <currentMillis>
    35f8:	90 91 ac 28 	lds	r25, 0x28AC	; 0x8028ac <currentMillis+0x1>
    35fc:	8f 31       	cpi	r24, 0x1F	; 31
    35fe:	91 05       	cpc	r25, r1
    3600:	b8 f4       	brcc	.+46     	; 0x3630 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xc64>
digitalWrite():
    3602:	61 e0       	ldi	r22, 0x01	; 1
    3604:	85 e1       	ldi	r24, 0x15	; 21
    3606:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    360a:	86 e1       	ldi	r24, 0x16	; 22
    360c:	90 e0       	ldi	r25, 0x00	; 0
    360e:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3612:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3616:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    361a:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    361e:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3622:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3626:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    362a:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    362e:	33 ca       	rjmp	.-2970   	; 0x2a96 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xca>
SET_LONG_PRESS_FUNCTION():
    3630:	9c 01       	movw	r18, r24
    3632:	29 52       	subi	r18, 0x29	; 41
    3634:	31 09       	sbc	r19, r1
    3636:	22 38       	cpi	r18, 0x82	; 130
    3638:	31 05       	cpc	r19, r1
    363a:	78 f5       	brcc	.+94     	; 0x369a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xcce>
digitalWrite():
    363c:	60 e0       	ldi	r22, 0x00	; 0
    363e:	85 e1       	ldi	r24, 0x15	; 21
    3640:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    3644:	81 e1       	ldi	r24, 0x11	; 17
    3646:	90 e0       	ldi	r25, 0x00	; 0
    3648:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    364c:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3650:	8f e0       	ldi	r24, 0x0F	; 15
    3652:	90 e0       	ldi	r25, 0x00	; 0
    3654:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3658:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    365c:	2c e0       	ldi	r18, 0x0C	; 12
    365e:	30 e0       	ldi	r19, 0x00	; 0
    3660:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    3664:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    3668:	20 e1       	ldi	r18, 0x10	; 16
    366a:	30 e0       	ldi	r19, 0x00	; 0
    366c:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <digits2+0x6>
    3670:	30 93 09 29 	sts	0x2909, r19	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    3674:	20 e2       	ldi	r18, 0x20	; 32
    3676:	30 e0       	ldi	r19, 0x00	; 0
    3678:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    367c:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    3680:	27 e1       	ldi	r18, 0x17	; 23
    3682:	30 e0       	ldi	r19, 0x00	; 0
    3684:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    3688:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    368c:	24 e1       	ldi	r18, 0x14	; 20
    368e:	30 e0       	ldi	r19, 0x00	; 0
    3690:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    3694:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    3698:	7b c1       	rjmp	.+758    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
SET_LONG_PRESS_FUNCTION():
    369a:	8b 3a       	cpi	r24, 0xAB	; 171
    369c:	91 05       	cpc	r25, r1
    369e:	0c f4       	brge	.+2      	; 0x36a2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xcd6>
    36a0:	27 ca       	rjmp	.-2994   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
EEPROM_CLEAR():
    36a2:	10 92 aa 28 	sts	0x28AA, r1	; 0x8028aa <STIR_VALUE_SET>
    36a6:	10 92 53 29 	sts	0x2953, r1	; 0x802953 <DEGREE_VALUE_SET>
    36aa:	23 e6       	ldi	r18, 0x63	; 99
    36ac:	30 e0       	ldi	r19, 0x00	; 0
    36ae:	20 93 12 29 	sts	0x2912, r18	; 0x802912 <SAFE_VALUE_SET_DEG>
    36b2:	30 93 13 29 	sts	0x2913, r19	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    36b6:	84 ed       	ldi	r24, 0xD4	; 212
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	80 93 10 29 	sts	0x2910, r24	; 0x802910 <SAFE_VALUE_SET_FAH>
    36be:	90 93 11 29 	sts	0x2911, r25	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    36c2:	10 92 d8 28 	sts	0x28D8, r1	; 0x8028d8 <CAL_SELECT_VALUE>
    36c6:	10 92 d9 28 	sts	0x28D9, r1	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    36ca:	10 92 0a 29 	sts	0x290A, r1	; 0x80290a <ERROR_CAL1>
    36ce:	10 92 0b 29 	sts	0x290B, r1	; 0x80290b <ERROR_CAL1+0x1>
    36d2:	10 92 0c 29 	sts	0x290C, r1	; 0x80290c <ERROR_CAL1+0x2>
    36d6:	10 92 0d 29 	sts	0x290D, r1	; 0x80290d <ERROR_CAL1+0x3>
    36da:	10 92 ec 28 	sts	0x28EC, r1	; 0x8028ec <SIGN>
    36de:	41 e0       	ldi	r20, 0x01	; 1
    36e0:	40 93 e7 28 	sts	0x28E7, r20	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    36e4:	10 92 e2 28 	sts	0x28E2, r1	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    36e8:	4e e1       	ldi	r20, 0x1E	; 30
    36ea:	50 e0       	ldi	r21, 0x00	; 0
    36ec:	60 e0       	ldi	r22, 0x00	; 0
    36ee:	70 e0       	ldi	r23, 0x00	; 0
    36f0:	40 93 d0 28 	sts	0x28D0, r20	; 0x8028d0 <CAL2_RAW_LOW_VALUE_CONV>
    36f4:	50 93 d1 28 	sts	0x28D1, r21	; 0x8028d1 <CAL2_RAW_LOW_VALUE_CONV+0x1>
    36f8:	60 93 d2 28 	sts	0x28D2, r22	; 0x8028d2 <CAL2_RAW_LOW_VALUE_CONV+0x2>
    36fc:	70 93 d3 28 	sts	0x28D3, r23	; 0x8028d3 <CAL2_RAW_LOW_VALUE_CONV+0x3>
    3700:	44 e5       	ldi	r20, 0x54	; 84
    3702:	50 e0       	ldi	r21, 0x00	; 0
    3704:	60 e0       	ldi	r22, 0x00	; 0
    3706:	70 e0       	ldi	r23, 0x00	; 0
    3708:	40 93 cc 28 	sts	0x28CC, r20	; 0x8028cc <CAL2_RAW_HIGH_VALUE_CONV>
    370c:	50 93 cd 28 	sts	0x28CD, r21	; 0x8028cd <CAL2_RAW_HIGH_VALUE_CONV+0x1>
    3710:	60 93 ce 28 	sts	0x28CE, r22	; 0x8028ce <CAL2_RAW_HIGH_VALUE_CONV+0x2>
    3714:	70 93 cf 28 	sts	0x28CF, r23	; 0x8028cf <CAL2_RAW_HIGH_VALUE_CONV+0x3>
    3718:	4c e1       	ldi	r20, 0x1C	; 28
    371a:	50 e0       	ldi	r21, 0x00	; 0
    371c:	60 e0       	ldi	r22, 0x00	; 0
    371e:	70 e0       	ldi	r23, 0x00	; 0
    3720:	40 93 c8 28 	sts	0x28C8, r20	; 0x8028c8 <MASTER_LOW_CONV>
    3724:	50 93 c9 28 	sts	0x28C9, r21	; 0x8028c9 <MASTER_LOW_CONV+0x1>
    3728:	60 93 ca 28 	sts	0x28CA, r22	; 0x8028ca <MASTER_LOW_CONV+0x2>
    372c:	70 93 cb 28 	sts	0x28CB, r23	; 0x8028cb <MASTER_LOW_CONV+0x3>
    3730:	42 e5       	ldi	r20, 0x52	; 82
    3732:	50 e0       	ldi	r21, 0x00	; 0
    3734:	60 e0       	ldi	r22, 0x00	; 0
    3736:	70 e0       	ldi	r23, 0x00	; 0
    3738:	40 93 c4 28 	sts	0x28C4, r20	; 0x8028c4 <MASTER_HIGH_CONV>
    373c:	50 93 c5 28 	sts	0x28C5, r21	; 0x8028c5 <MASTER_HIGH_CONV+0x1>
    3740:	60 93 c6 28 	sts	0x28C6, r22	; 0x8028c6 <MASTER_HIGH_CONV+0x2>
    3744:	70 93 c7 28 	sts	0x28C7, r23	; 0x8028c7 <MASTER_HIGH_CONV+0x3>
    3748:	10 92 a9 28 	sts	0x28A9, r1	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    374c:	10 92 a4 28 	sts	0x28A4, r1	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    3750:	10 92 0e 29 	sts	0x290E, r1	; 0x80290e <select_product_type>
    3754:	10 92 f1 28 	sts	0x28F1, r1	; 0x8028f1 <select_heating_type>
    3758:	10 92 21 29 	sts	0x2921, r1	; 0x802921 <SET_LONG_VALUE>
    375c:	10 92 22 29 	sts	0x2922, r1	; 0x802922 <SET_LONG_VALUE+0x1>
    3760:	10 92 23 29 	sts	0x2923, r1	; 0x802923 <SET_LONG_VALUE+0x2>
    3764:	10 92 24 29 	sts	0x2924, r1	; 0x802924 <SET_LONG_VALUE+0x3>
    3768:	20 93 25 29 	sts	0x2925, r18	; 0x802925 <SET_LONG_VALUE+0x4>
    376c:	30 93 26 29 	sts	0x2926, r19	; 0x802926 <SET_LONG_VALUE+0x5>
    3770:	80 93 49 29 	sts	0x2949, r24	; 0x802949 <SET_LONG_VALUE+0x28>
    3774:	90 93 4a 29 	sts	0x294A, r25	; 0x80294a <SET_LONG_VALUE+0x29>
    3778:	10 92 2d 29 	sts	0x292D, r1	; 0x80292d <SET_LONG_VALUE+0xc>
    377c:	10 92 2e 29 	sts	0x292E, r1	; 0x80292e <SET_LONG_VALUE+0xd>
    3780:	10 92 27 29 	sts	0x2927, r1	; 0x802927 <SET_LONG_VALUE+0x6>
    3784:	10 92 28 29 	sts	0x2928, r1	; 0x802928 <SET_LONG_VALUE+0x7>
    3788:	10 92 29 29 	sts	0x2929, r1	; 0x802929 <SET_LONG_VALUE+0x8>
    378c:	10 92 2a 29 	sts	0x292A, r1	; 0x80292a <SET_LONG_VALUE+0x9>
    3790:	10 92 41 29 	sts	0x2941, r1	; 0x802941 <SET_LONG_VALUE+0x20>
    3794:	10 92 42 29 	sts	0x2942, r1	; 0x802942 <SET_LONG_VALUE+0x21>
    3798:	10 92 2b 29 	sts	0x292B, r1	; 0x80292b <SET_LONG_VALUE+0xa>
    379c:	10 92 2c 29 	sts	0x292C, r1	; 0x80292c <SET_LONG_VALUE+0xb>
    37a0:	10 92 a2 28 	sts	0x28A2, r1	; 0x8028a2 <SET_HOUR>
    37a4:	10 92 a3 28 	sts	0x28A3, r1	; 0x8028a3 <SET_HOUR+0x1>
    37a8:	10 92 a0 28 	sts	0x28A0, r1	; 0x8028a0 <SET_MINUTE>
    37ac:	10 92 a1 28 	sts	0x28A1, r1	; 0x8028a1 <SET_MINUTE+0x1>
    37b0:	85 e2       	ldi	r24, 0x25	; 37
    37b2:	90 e0       	ldi	r25, 0x00	; 0
    37b4:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
    37b8:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
    37bc:	10 92 18 29 	sts	0x2918, r1	; 0x802918 <SET_VALUE+0x4>
    37c0:	10 92 19 29 	sts	0x2919, r1	; 0x802919 <SET_VALUE+0x5>
    37c4:	80 e2       	ldi	r24, 0x20	; 32
    37c6:	90 e0       	ldi	r25, 0x00	; 0
    37c8:	80 93 40 29 	sts	0x2940, r24	; 0x802940 <SET_LONG_VALUE+0x1f>
    37cc:	90 93 41 29 	sts	0x2941, r25	; 0x802941 <SET_LONG_VALUE+0x20>
    37d0:	10 92 1a 29 	sts	0x291A, r1	; 0x80291a <SET_VALUE+0x6>
    37d4:	10 92 1b 29 	sts	0x291B, r1	; 0x80291b <SET_VALUE+0x7>
    37d8:	10 92 1c 29 	sts	0x291C, r1	; 0x80291c <SET_VALUE+0x8>
    37dc:	10 92 1d 29 	sts	0x291D, r1	; 0x80291d <SET_VALUE+0x9>
    37e0:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <Process_Interrupt_flag>
    37e4:	60 e0       	ldi	r22, 0x00	; 0
    37e6:	81 e0       	ldi	r24, 0x01	; 1
    37e8:	90 e0       	ldi	r25, 0x00	; 0
    37ea:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    37ee:	63 e6       	ldi	r22, 0x63	; 99
    37f0:	82 e0       	ldi	r24, 0x02	; 2
    37f2:	90 e0       	ldi	r25, 0x00	; 0
    37f4:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    37f8:	60 e1       	ldi	r22, 0x10	; 16
    37fa:	79 e2       	ldi	r23, 0x29	; 41
    37fc:	83 e0       	ldi	r24, 0x03	; 3
    37fe:	90 e0       	ldi	r25, 0x00	; 0
    3800:	0e 94 cd 10 	call	0x219a	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    3804:	60 e0       	ldi	r22, 0x00	; 0
    3806:	85 e0       	ldi	r24, 0x05	; 5
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    380e:	60 e0       	ldi	r22, 0x00	; 0
    3810:	8f e0       	ldi	r24, 0x0F	; 15
    3812:	90 e0       	ldi	r25, 0x00	; 0
    3814:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3818:	0e 94 a6 10 	call	0x214c	; 0x214c <double const& EEPROMClass::put<double>(int, double const&) [clone .isra.10] [clone .constprop.78]>
    381c:	60 e0       	ldi	r22, 0x00	; 0
    381e:	87 e0       	ldi	r24, 0x07	; 7
    3820:	90 e0       	ldi	r25, 0x00	; 0
    3822:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3826:	61 e0       	ldi	r22, 0x01	; 1
    3828:	88 e0       	ldi	r24, 0x08	; 8
    382a:	90 e0       	ldi	r25, 0x00	; 0
    382c:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3830:	60 e0       	ldi	r22, 0x00	; 0
    3832:	89 e0       	ldi	r24, 0x09	; 9
    3834:	90 e0       	ldi	r25, 0x00	; 0
    3836:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    383a:	60 ed       	ldi	r22, 0xD0	; 208
    383c:	78 e2       	ldi	r23, 0x28	; 40
    383e:	80 e5       	ldi	r24, 0x50	; 80
    3840:	90 e0       	ldi	r25, 0x00	; 0
    3842:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    3846:	6c ec       	ldi	r22, 0xCC	; 204
    3848:	78 e2       	ldi	r23, 0x28	; 40
    384a:	8a e5       	ldi	r24, 0x5A	; 90
    384c:	90 e0       	ldi	r25, 0x00	; 0
    384e:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    3852:	68 ec       	ldi	r22, 0xC8	; 200
    3854:	78 e2       	ldi	r23, 0x28	; 40
    3856:	84 e6       	ldi	r24, 0x64	; 100
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
    385e:	64 ec       	ldi	r22, 0xC4	; 196
    3860:	78 e2       	ldi	r23, 0x28	; 40
    3862:	8e e6       	ldi	r24, 0x6E	; 110
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <long const& EEPROMClass::put<long>(int, long const&) [clone .isra.11] [clone .lto_priv.103]>
_ZN11EEPROMClass3putIbEERKT_iS3_.isra.12():
    386a:	81 e4       	ldi	r24, 0x41	; 65
    386c:	90 e0       	ldi	r25, 0x00	; 0
    386e:	89 83       	std	Y+1, r24	; 0x01
    3870:	9a 83       	std	Y+2, r25	; 0x02
    3872:	60 91 a9 28 	lds	r22, 0x28A9	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    3876:	ce 01       	movw	r24, r28
    3878:	01 96       	adiw	r24, 0x01	; 1
    387a:	0e 94 95 10 	call	0x212a	; 0x212a <EERef::update(unsigned char)>
EEPROM_CLEAR():
    387e:	60 91 16 29 	lds	r22, 0x2916	; 0x802916 <SET_VALUE+0x2>
    3882:	83 e7       	ldi	r24, 0x73	; 115
    3884:	90 e0       	ldi	r25, 0x00	; 0
    3886:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    388a:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    388e:	85 e7       	ldi	r24, 0x75	; 117
    3890:	90 e0       	ldi	r25, 0x00	; 0
    3892:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    3896:	60 e4       	ldi	r22, 0x40	; 64
    3898:	79 e2       	ldi	r23, 0x29	; 41
    389a:	88 e7       	ldi	r24, 0x78	; 120
    389c:	90 e0       	ldi	r25, 0x00	; 0
    389e:	0e 94 cd 10 	call	0x219a	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    38a2:	60 e0       	ldi	r22, 0x00	; 0
    38a4:	8d e7       	ldi	r24, 0x7D	; 125
    38a6:	90 e0       	ldi	r25, 0x00	; 0
    38a8:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    38ac:	60 e0       	ldi	r22, 0x00	; 0
    38ae:	82 e8       	ldi	r24, 0x82	; 130
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    38b6:	60 e0       	ldi	r22, 0x00	; 0
    38b8:	87 e8       	ldi	r24, 0x87	; 135
    38ba:	90 e0       	ldi	r25, 0x00	; 0
    38bc:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    38c0:	60 e0       	ldi	r22, 0x00	; 0
    38c2:	86 e9       	ldi	r24, 0x96	; 150
    38c4:	90 e0       	ldi	r25, 0x00	; 0
    38c6:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    38ca:	60 e0       	ldi	r22, 0x00	; 0
    38cc:	84 e8       	ldi	r24, 0x84	; 132
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    38d4:	81 e0       	ldi	r24, 0x01	; 1
    38d6:	90 e0       	ldi	r25, 0x00	; 0
    38d8:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    38dc:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    38e0:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <Service_Menu>
    38e4:	10 92 ab 28 	sts	0x28AB, r1	; 0x8028ab <currentMillis>
    38e8:	10 92 ac 28 	sts	0x28AC, r1	; 0x8028ac <currentMillis+0x1>
SET_LONG_PRESS_FUNCTION():
    38ec:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    38f0:	c2 cd       	rjmp	.-1148   	; 0x3476 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xaaa>
    38f2:	e3 31       	cpi	r30, 0x13	; 19
    38f4:	f1 05       	cpc	r31, r1
    38f6:	08 f0       	brcs	.+2      	; 0x38fa <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xf2e>
    38f8:	fb c8       	rjmp	.-3594   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    38fa:	ef 57       	subi	r30, 0x7F	; 127
    38fc:	f3 4e       	sbci	r31, 0xE3	; 227
    38fe:	0c 94 06 3c 	jmp	0x780c	; 0x780c <__tablejump2__>
    3902:	94 1c       	adc	r9, r4
    3904:	d6 1c       	adc	r13, r6
    3906:	0a 1d       	adc	r16, r10
    3908:	5c 1d       	adc	r21, r12
    390a:	a6 1d       	adc	r26, r6
    390c:	d3 1d       	adc	r29, r3
    390e:	02 1e       	adc	r0, r18
    3910:	38 1e       	adc	r3, r24
    3912:	8f 1e       	adc	r8, r31
    3914:	f6 1e       	adc	r15, r22
    3916:	2b 1f       	adc	r18, r27
    3918:	5c 1f       	adc	r21, r28
    391a:	0b 20       	and	r0, r11
    391c:	cd 20       	and	r12, r13
    391e:	8b 21       	and	r24, r11
    3920:	58 22       	and	r5, r24
    3922:	8b 22       	and	r8, r27
    3924:	bf 22       	and	r11, r31
    3926:	dc 22       	and	r13, r28
    3928:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    392c:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    3930:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3934:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3938:	8c e0       	ldi	r24, 0x0C	; 12
    393a:	90 e0       	ldi	r25, 0x00	; 0
    393c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3940:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3944:	80 e1       	ldi	r24, 0x10	; 16
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    394c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3950:	89 e1       	ldi	r24, 0x19	; 25
    3952:	90 e0       	ldi	r25, 0x00	; 0
    3954:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3958:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    395c:	81 e1       	ldi	r24, 0x11	; 17
    395e:	90 e0       	ldi	r25, 0x00	; 0
    3960:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3964:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3968:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <STIR_VALUE_SET>
DISPLAY_DIGIT1():
    396c:	10 92 fa 28 	sts	0x28FA, r1	; 0x8028fa <digits1>
    3970:	10 92 fb 28 	sts	0x28FB, r1	; 0x8028fb <digits1+0x1>
SET_LONG_PRESS_FUNCTION():
    3974:	81 11       	cpse	r24, r1
    3976:	11 c0       	rjmp	.+34     	; 0x399a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfce>
DISPLAY_DIGIT1():
    3978:	85 e1       	ldi	r24, 0x15	; 21
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    3980:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    3984:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3988:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    398c:	88 e1       	ldi	r24, 0x18	; 24
    398e:	90 e0       	ldi	r25, 0x00	; 0
    3990:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    3994:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    3998:	ab c8       	rjmp	.-3754   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    399a:	84 e1       	ldi	r24, 0x14	; 20
    399c:	90 e0       	ldi	r25, 0x00	; 0
    399e:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    39a2:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    39a6:	88 e1       	ldi	r24, 0x18	; 24
    39a8:	90 e0       	ldi	r25, 0x00	; 0
    39aa:	7d c8       	rjmp	.-3846   	; 0x2aa6 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xda>
SET_LONG_PRESS_FUNCTION():
    39ac:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    39b0:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    39b4:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
DISPLAY_DIGIT2():
    39b8:	8c e1       	ldi	r24, 0x1C	; 28
    39ba:	90 e0       	ldi	r25, 0x00	; 0
    39bc:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    39c0:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    39c4:	84 e1       	ldi	r24, 0x14	; 20
    39c6:	90 e0       	ldi	r25, 0x00	; 0
    39c8:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    39cc:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    39d0:	89 e1       	ldi	r24, 0x19	; 25
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    39d8:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    39dc:	80 e1       	ldi	r24, 0x10	; 16
    39de:	90 e0       	ldi	r25, 0x00	; 0
    39e0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    39e4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    39e8:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    39ec:	81 11       	cpse	r24, r1
    39ee:	09 c0       	rjmp	.+18     	; 0x3a02 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1036>
DISPLAY_DIGIT1():
    39f0:	8d e1       	ldi	r24, 0x1D	; 29
    39f2:	90 e0       	ldi	r25, 0x00	; 0
    39f4:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    39f8:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    39fc:	8a e0       	ldi	r24, 0x0A	; 10
    39fe:	90 e0       	ldi	r25, 0x00	; 0
    3a00:	ce cf       	rjmp	.-100    	; 0x399e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfd2>
    3a02:	8d e1       	ldi	r24, 0x1D	; 29
    3a04:	90 e0       	ldi	r25, 0x00	; 0
    3a06:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3a0a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3a0e:	85 e1       	ldi	r24, 0x15	; 21
    3a10:	90 e0       	ldi	r25, 0x00	; 0
    3a12:	c5 cf       	rjmp	.-118    	; 0x399e <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfd2>
SET_LONG_PRESS_FUNCTION():
    3a14:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3a18:	8c e0       	ldi	r24, 0x0C	; 12
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3a20:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3a24:	8d e0       	ldi	r24, 0x0D	; 13
    3a26:	90 e0       	ldi	r25, 0x00	; 0
    3a28:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3a2c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3a30:	05 e1       	ldi	r16, 0x15	; 21
    3a32:	10 e0       	ldi	r17, 0x00	; 0
    3a34:	00 93 06 29 	sts	0x2906, r16	; 0x802906 <digits2+0x4>
    3a38:	10 93 07 29 	sts	0x2907, r17	; 0x802907 <digits2+0x5>
    3a3c:	8f e0       	ldi	r24, 0x0F	; 15
    3a3e:	90 e0       	ldi	r25, 0x00	; 0
    3a40:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3a44:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3a48:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3a4c:	81 11       	cpse	r24, r1
    3a4e:	1d c0       	rjmp	.+58     	; 0x3a8a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x10be>
    3a50:	80 91 12 29 	lds	r24, 0x2912	; 0x802912 <SAFE_VALUE_SET_DEG>
    3a54:	90 91 13 29 	lds	r25, 0x2913	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    3a58:	2a e0       	ldi	r18, 0x0A	; 10
    3a5a:	28 9f       	mul	r18, r24
    3a5c:	b0 01       	movw	r22, r0
    3a5e:	29 9f       	mul	r18, r25
    3a60:	70 0d       	add	r23, r0
    3a62:	11 24       	eor	r1, r1
    3a64:	07 2e       	mov	r0, r23
    3a66:	00 0c       	add	r0, r0
    3a68:	88 0b       	sbc	r24, r24
    3a6a:	99 0b       	sbc	r25, r25
    3a6c:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3a70:	8a e0       	ldi	r24, 0x0A	; 10
    3a72:	90 e0       	ldi	r25, 0x00	; 0
    3a74:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    3a78:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    3a7c:	88 e1       	ldi	r24, 0x18	; 24
    3a7e:	90 e0       	ldi	r25, 0x00	; 0
    3a80:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3a84:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3a88:	33 c8       	rjmp	.-3994   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    3a8a:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3a8e:	80 91 10 29 	lds	r24, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    3a92:	90 91 11 29 	lds	r25, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    3a96:	2a e0       	ldi	r18, 0x0A	; 10
    3a98:	28 9f       	mul	r18, r24
    3a9a:	b0 01       	movw	r22, r0
    3a9c:	29 9f       	mul	r18, r25
    3a9e:	70 0d       	add	r23, r0
    3aa0:	11 24       	eor	r1, r1
    3aa2:	07 2e       	mov	r0, r23
    3aa4:	00 0c       	add	r0, r0
    3aa6:	88 0b       	sbc	r24, r24
    3aa8:	99 0b       	sbc	r25, r25
    3aaa:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3aae:	00 93 00 29 	sts	0x2900, r16	; 0x802900 <digits1+0x6>
    3ab2:	10 93 01 29 	sts	0x2901, r17	; 0x802901 <digits1+0x7>
    3ab6:	1c c8       	rjmp	.-4040   	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    3ab8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3abc:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3ac0:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    3ac4:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3ac8:	80 e1       	ldi	r24, 0x10	; 16
    3aca:	90 e0       	ldi	r25, 0x00	; 0
    3acc:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3ad0:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3ad4:	29 e1       	ldi	r18, 0x19	; 25
    3ad6:	30 e0       	ldi	r19, 0x00	; 0
    3ad8:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    3adc:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    3ae0:	22 e1       	ldi	r18, 0x12	; 18
    3ae2:	30 e0       	ldi	r19, 0x00	; 0
    3ae4:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    3ae8:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    3aec:	2f e0       	ldi	r18, 0x0F	; 15
    3aee:	30 e0       	ldi	r19, 0x00	; 0
    3af0:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <digits2+0x6>
    3af4:	30 93 09 29 	sts	0x2909, r19	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3af8:	20 91 a9 28 	lds	r18, 0x28A9	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    3afc:	21 11       	cpse	r18, r1
    3afe:	11 c0       	rjmp	.+34     	; 0x3b22 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1156>
DISPLAY_DIGIT1():
    3b00:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3b04:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3b08:	27 e1       	ldi	r18, 0x17	; 23
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    3b10:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    3b14:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3b18:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    3b1c:	8f e1       	ldi	r24, 0x1F	; 31
    3b1e:	90 e0       	ldi	r25, 0x00	; 0
    3b20:	37 cf       	rjmp	.-402    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
    3b22:	8c e0       	ldi	r24, 0x0C	; 12
    3b24:	90 e0       	ldi	r25, 0x00	; 0
    3b26:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3b2a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3b2e:	87 e1       	ldi	r24, 0x17	; 23
    3b30:	90 e0       	ldi	r25, 0x00	; 0
    3b32:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    3b36:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    3b3a:	8d e0       	ldi	r24, 0x0D	; 13
    3b3c:	90 e0       	ldi	r25, 0x00	; 0
    3b3e:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3b42:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
SET_LONG_PRESS_FUNCTION():
    3b46:	8a e0       	ldi	r24, 0x0A	; 10
    3b48:	90 e0       	ldi	r25, 0x00	; 0
    3b4a:	22 cf       	rjmp	.-444    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
    3b4c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3b50:	8d e0       	ldi	r24, 0x0D	; 13
    3b52:	90 e0       	ldi	r25, 0x00	; 0
    3b54:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3b58:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3b5c:	82 e2       	ldi	r24, 0x22	; 34
    3b5e:	90 e0       	ldi	r25, 0x00	; 0
    3b60:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3b64:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3b68:	80 e1       	ldi	r24, 0x10	; 16
    3b6a:	90 e0       	ldi	r25, 0x00	; 0
    3b6c:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3b70:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3b74:	87 e1       	ldi	r24, 0x17	; 23
    3b76:	90 e0       	ldi	r25, 0x00	; 0
    3b78:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3b7c:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    3b80:	2b e0       	ldi	r18, 0x0B	; 11
    3b82:	30 e0       	ldi	r19, 0x00	; 0
    3b84:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    3b88:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    3b8c:	21 e1       	ldi	r18, 0x11	; 17
    3b8e:	30 e0       	ldi	r19, 0x00	; 0
    3b90:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    3b94:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    3b98:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3b9c:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    3ba0:	8c e0       	ldi	r24, 0x0C	; 12
    3ba2:	90 e0       	ldi	r25, 0x00	; 0
    3ba4:	f5 ce       	rjmp	.-534    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
SET_LONG_PRESS_FUNCTION():
    3ba6:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3baa:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    3bae:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3bb2:	8b e0       	ldi	r24, 0x0B	; 11
    3bb4:	90 e0       	ldi	r25, 0x00	; 0
    3bb6:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3bba:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3bbe:	21 e1       	ldi	r18, 0x11	; 17
    3bc0:	30 e0       	ldi	r19, 0x00	; 0
    3bc2:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    3bc6:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    3bca:	20 e2       	ldi	r18, 0x20	; 32
    3bcc:	30 e0       	ldi	r19, 0x00	; 0
    3bce:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    3bd2:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    3bd6:	20 e1       	ldi	r18, 0x10	; 16
    3bd8:	30 e0       	ldi	r19, 0x00	; 0
    3bda:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <digits2+0x6>
    3bde:	30 93 09 29 	sts	0x2909, r19	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    3be2:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    3be6:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    3bea:	23 e2       	ldi	r18, 0x23	; 35
    3bec:	30 e0       	ldi	r19, 0x00	; 0
    3bee:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    3bf2:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    3bf6:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3bfa:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    3bfe:	8f e0       	ldi	r24, 0x0F	; 15
    3c00:	90 e0       	ldi	r25, 0x00	; 0
    3c02:	c6 ce       	rjmp	.-628    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
SET_LONG_PRESS_FUNCTION():
    3c04:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3c08:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    3c0c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3c10:	4a e0       	ldi	r20, 0x0A	; 10
    3c12:	50 e0       	ldi	r21, 0x00	; 0
    3c14:	40 93 02 29 	sts	0x2902, r20	; 0x802902 <digits2>
    3c18:	50 93 03 29 	sts	0x2903, r21	; 0x802903 <digits2+0x1>
    3c1c:	2d e0       	ldi	r18, 0x0D	; 13
    3c1e:	30 e0       	ldi	r19, 0x00	; 0
    3c20:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    3c24:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    3c28:	8a e1       	ldi	r24, 0x1A	; 26
    3c2a:	90 e0       	ldi	r25, 0x00	; 0
    3c2c:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3c30:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3c34:	6e e0       	ldi	r22, 0x0E	; 14
    3c36:	70 e0       	ldi	r23, 0x00	; 0
    3c38:	60 93 08 29 	sts	0x2908, r22	; 0x802908 <digits2+0x6>
    3c3c:	70 93 09 29 	sts	0x2909, r23	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3c40:	60 91 d8 28 	lds	r22, 0x28D8	; 0x8028d8 <CAL_SELECT_VALUE>
    3c44:	70 91 d9 28 	lds	r23, 0x28D9	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
DISPLAY_DIGIT1():
    3c48:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    3c4c:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    3c50:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    3c54:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    3c58:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    3c5c:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    3c60:	82 e0       	ldi	r24, 0x02	; 2
    3c62:	90 e0       	ldi	r25, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    3c64:	67 2b       	or	r22, r23
    3c66:	09 f0       	breq	.+2      	; 0x3c6a <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x129e>
    3c68:	93 ce       	rjmp	.-730    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
DISPLAY_DIGIT1():
    3c6a:	81 e0       	ldi	r24, 0x01	; 1
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	90 ce       	rjmp	.-736    	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
SET_LONG_PRESS_FUNCTION():
    3c70:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3c74:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3c78:	8a e0       	ldi	r24, 0x0A	; 10
    3c7a:	90 e0       	ldi	r25, 0x00	; 0
    3c7c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3c80:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3c84:	8d e0       	ldi	r24, 0x0D	; 13
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3c8c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3c90:	8a e1       	ldi	r24, 0x1A	; 26
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3c98:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3c9c:	81 e0       	ldi	r24, 0x01	; 1
    3c9e:	90 e0       	ldi	r25, 0x00	; 0
    3ca0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3ca4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3ca8:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3cac:	81 11       	cpse	r24, r1
    3cae:	87 c0       	rjmp	.+270    	; 0x3dbe <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x13f2>
    3cb0:	c0 90 f2 28 	lds	r12, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    3cb4:	d0 90 f3 28 	lds	r13, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    3cb8:	e0 90 f4 28 	lds	r14, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    3cbc:	f0 90 f5 28 	lds	r15, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    3cc0:	2d ec       	ldi	r18, 0xCD	; 205
    3cc2:	3c ec       	ldi	r19, 0xCC	; 204
    3cc4:	47 ec       	ldi	r20, 0xC7	; 199
    3cc6:	52 e4       	ldi	r21, 0x42	; 66
    3cc8:	60 91 f6 28 	lds	r22, 0x28F6	; 0x8028f6 <TEMP_DEG>
    3ccc:	70 91 f7 28 	lds	r23, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    3cd0:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    3cd4:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    3cd8:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    3cdc:	18 16       	cp	r1, r24
    3cde:	7c f4       	brge	.+30     	; 0x3cfe <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1332>
    3ce0:	20 e0       	ldi	r18, 0x00	; 0
    3ce2:	30 e0       	ldi	r19, 0x00	; 0
    3ce4:	40 e2       	ldi	r20, 0x20	; 32
    3ce6:	51 e4       	ldi	r21, 0x41	; 65
    3ce8:	c7 01       	movw	r24, r14
    3cea:	b6 01       	movw	r22, r12
    3cec:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    3cf0:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    3cf4:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3cf8:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3cfc:	24 cf       	rjmp	.-440    	; 0x3b46 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x117a>
    3cfe:	20 e0       	ldi	r18, 0x00	; 0
    3d00:	30 e0       	ldi	r19, 0x00	; 0
    3d02:	48 ec       	ldi	r20, 0xC8	; 200
    3d04:	52 e4       	ldi	r21, 0x42	; 66
    3d06:	c7 01       	movw	r24, r14
    3d08:	b6 01       	movw	r22, r12
    3d0a:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    3d0e:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    3d12:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3d16:	81 e0       	ldi	r24, 0x01	; 1
    3d18:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <DOT1_1>
    3d1c:	14 cf       	rjmp	.-472    	; 0x3b46 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x117a>
    3d1e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3d22:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3d26:	8a e0       	ldi	r24, 0x0A	; 10
    3d28:	90 e0       	ldi	r25, 0x00	; 0
    3d2a:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    3d2e:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    3d32:	8d e0       	ldi	r24, 0x0D	; 13
    3d34:	90 e0       	ldi	r25, 0x00	; 0
    3d36:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3d3a:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3d3e:	8a e1       	ldi	r24, 0x1A	; 26
    3d40:	90 e0       	ldi	r25, 0x00	; 0
    3d42:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3d46:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3d4a:	81 e0       	ldi	r24, 0x01	; 1
    3d4c:	90 e0       	ldi	r25, 0x00	; 0
    3d4e:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3d52:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3d56:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    3d5a:	81 11       	cpse	r24, r1
    3d5c:	30 c0       	rjmp	.+96     	; 0x3dbe <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x13f2>
    3d5e:	80 90 f2 28 	lds	r8, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    3d62:	90 90 f3 28 	lds	r9, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    3d66:	a0 90 f4 28 	lds	r10, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    3d6a:	b0 90 f5 28 	lds	r11, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    3d6e:	20 e0       	ldi	r18, 0x00	; 0
    3d70:	30 e0       	ldi	r19, 0x00	; 0
    3d72:	48 ec       	ldi	r20, 0xC8	; 200
    3d74:	52 e4       	ldi	r21, 0x42	; 66
    3d76:	c5 01       	movw	r24, r10
    3d78:	b4 01       	movw	r22, r8
    3d7a:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    3d7e:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    3d82:	6b 01       	movw	r12, r22
    3d84:	7c 01       	movw	r14, r24
    3d86:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3d8a:	2d ec       	ldi	r18, 0xCD	; 205
    3d8c:	3c ec       	ldi	r19, 0xCC	; 204
    3d8e:	47 ec       	ldi	r20, 0xC7	; 199
    3d90:	52 e4       	ldi	r21, 0x42	; 66
    3d92:	60 91 f6 28 	lds	r22, 0x28F6	; 0x8028f6 <TEMP_DEG>
    3d96:	70 91 f7 28 	lds	r23, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    3d9a:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    3d9e:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    3da2:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    3da6:	18 16       	cp	r1, r24
    3da8:	3c f4       	brge	.+14     	; 0x3db8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x13ec>
    3daa:	20 e0       	ldi	r18, 0x00	; 0
    3dac:	30 e0       	ldi	r19, 0x00	; 0
    3dae:	40 e2       	ldi	r20, 0x20	; 32
    3db0:	51 e4       	ldi	r21, 0x41	; 65
    3db2:	c5 01       	movw	r24, r10
    3db4:	b4 01       	movw	r22, r8
    3db6:	9a cf       	rjmp	.-204    	; 0x3cec <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1320>
    3db8:	c7 01       	movw	r24, r14
    3dba:	b6 01       	movw	r22, r12
    3dbc:	aa cf       	rjmp	.-172    	; 0x3d12 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x1346>
    3dbe:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3dc2:	20 e0       	ldi	r18, 0x00	; 0
    3dc4:	30 e0       	ldi	r19, 0x00	; 0
    3dc6:	40 e2       	ldi	r20, 0x20	; 32
    3dc8:	51 e4       	ldi	r21, 0x41	; 65
    3dca:	60 91 de 28 	lds	r22, 0x28DE	; 0x8028de <TEMP_FAH_RAW>
    3dce:	70 91 df 28 	lds	r23, 0x28DF	; 0x8028df <TEMP_FAH_RAW+0x1>
    3dd2:	80 91 e0 28 	lds	r24, 0x28E0	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    3dd6:	90 91 e1 28 	lds	r25, 0x28E1	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    3dda:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    3dde:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    3de2:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3de6:	85 e1       	ldi	r24, 0x15	; 21
    3de8:	90 e0       	ldi	r25, 0x00	; 0
    3dea:	d2 cd       	rjmp	.-1116   	; 0x3990 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xfc4>
    3dec:	81 e0       	ldi	r24, 0x01	; 1
    3dee:	80 93 c0 28 	sts	0x28C0, r24	; 0x8028c0 <DOT1_0>
    3df2:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3df6:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3dfa:	0a e0       	ldi	r16, 0x0A	; 10
    3dfc:	10 e0       	ldi	r17, 0x00	; 0
    3dfe:	00 93 02 29 	sts	0x2902, r16	; 0x802902 <digits2>
    3e02:	10 93 03 29 	sts	0x2903, r17	; 0x802903 <digits2+0x1>
    3e06:	8d e0       	ldi	r24, 0x0D	; 13
    3e08:	90 e0       	ldi	r25, 0x00	; 0
    3e0a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3e0e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3e12:	3a e1       	ldi	r19, 0x1A	; 26
    3e14:	e3 2e       	mov	r14, r19
    3e16:	f1 2c       	mov	r15, r1
    3e18:	e0 92 06 29 	sts	0x2906, r14	; 0x802906 <digits2+0x4>
    3e1c:	f0 92 07 29 	sts	0x2907, r15	; 0x802907 <digits2+0x5>
    3e20:	82 e0       	ldi	r24, 0x02	; 2
    3e22:	90 e0       	ldi	r25, 0x00	; 0
    3e24:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3e28:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3e2c:	80 91 07 28 	lds	r24, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    3e30:	90 91 08 28 	lds	r25, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    3e34:	2a e0       	ldi	r18, 0x0A	; 10
    3e36:	28 9f       	mul	r18, r24
    3e38:	b0 01       	movw	r22, r0
    3e3a:	29 9f       	mul	r18, r25
    3e3c:	70 0d       	add	r23, r0
    3e3e:	11 24       	eor	r1, r1
    3e40:	07 2e       	mov	r0, r23
    3e42:	00 0c       	add	r0, r0
    3e44:	88 0b       	sbc	r24, r24
    3e46:	99 0b       	sbc	r25, r25
    3e48:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3e4c:	e0 92 fa 28 	sts	0x28FA, r14	; 0x8028fa <digits1>
    3e50:	f0 92 fb 28 	sts	0x28FB, r15	; 0x8028fb <digits1+0x1>
    3e54:	2c ce       	rjmp	.-936    	; 0x3aae <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x10e2>
    3e56:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    3e5a:	0a e0       	ldi	r16, 0x0A	; 10
    3e5c:	10 e0       	ldi	r17, 0x00	; 0
    3e5e:	00 93 02 29 	sts	0x2902, r16	; 0x802902 <digits2>
    3e62:	10 93 03 29 	sts	0x2903, r17	; 0x802903 <digits2+0x1>
    3e66:	8d e0       	ldi	r24, 0x0D	; 13
    3e68:	90 e0       	ldi	r25, 0x00	; 0
    3e6a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    3e6e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    3e72:	8a e1       	ldi	r24, 0x1A	; 26
    3e74:	90 e0       	ldi	r25, 0x00	; 0
    3e76:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    3e7a:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    3e7e:	82 e0       	ldi	r24, 0x02	; 2
    3e80:	90 e0       	ldi	r25, 0x00	; 0
    3e82:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    3e86:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_LONG_PRESS_FUNCTION():
    3e8a:	80 91 b6 28 	lds	r24, 0x28B6	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    3e8e:	90 91 b7 28 	lds	r25, 0x28B7	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    3e92:	2a e0       	ldi	r18, 0x0A	; 10
    3e94:	28 9f       	mul	r18, r24
    3e96:	b0 01       	movw	r22, r0
    3e98:	29 9f       	mul	r18, r25
    3e9a:	70 0d       	add	r23, r0
    3e9c:	11 24       	eor	r1, r1
    3e9e:	07 2e       	mov	r0, r23
    3ea0:	00 0c       	add	r0, r0
    3ea2:	88 0b       	sbc	r24, r24
    3ea4:	99 0b       	sbc	r25, r25
    3ea6:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    3eaa:	8e e1       	ldi	r24, 0x1E	; 30
    3eac:	90 e0       	ldi	r25, 0x00	; 0
    3eae:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    3eb2:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    3eb6:	fb cd       	rjmp	.-1034   	; 0x3aae <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x10e2>
    3eb8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    3ebc:	81 e0       	ldi	r24, 0x01	; 1
    3ebe:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    3ec2:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    3ec6:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
PID_Start():
    3eca:	8c ee       	ldi	r24, 0xEC	; 236
    3ecc:	9a e2       	ldi	r25, 0x2A	; 42
    3ece:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SET_LONG_PRESS_FUNCTION():
    3ed2:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    3ed6:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    3eda:	07 2e       	mov	r0, r23
    3edc:	00 0c       	add	r0, r0
    3ede:	88 0b       	sbc	r24, r24
    3ee0:	99 0b       	sbc	r25, r25
    3ee2:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    3ee6:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    3eea:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    3eee:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    3ef2:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
digitalWrite():
    3ef6:	61 e0       	ldi	r22, 0x01	; 1
    3ef8:	81 e2       	ldi	r24, 0x21	; 33
    3efa:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT1():
    3efe:	be e1       	ldi	r27, 0x1E	; 30
    3f00:	eb 2e       	mov	r14, r27
    3f02:	f1 2c       	mov	r15, r1
    3f04:	1f e0       	ldi	r17, 0x0F	; 15
    3f06:	c1 2e       	mov	r12, r17
    3f08:	d1 2c       	mov	r13, r1
    3f0a:	0d e0       	ldi	r16, 0x0D	; 13
    3f0c:	a0 2e       	mov	r10, r16
    3f0e:	b1 2c       	mov	r11, r1
    3f10:	80 e1       	ldi	r24, 0x10	; 16
    3f12:	88 2e       	mov	r8, r24
    3f14:	91 2c       	mov	r9, r1
    3f16:	08 e1       	ldi	r16, 0x18	; 24
    3f18:	10 e0       	ldi	r17, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    3f1a:	9a e1       	ldi	r25, 0x1A	; 26
    3f1c:	69 2e       	mov	r6, r25
    3f1e:	71 2c       	mov	r7, r1
    3f20:	27 e1       	ldi	r18, 0x17	; 23
    3f22:	42 2e       	mov	r4, r18
    3f24:	51 2c       	mov	r5, r1
    3f26:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
    3f2a:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    3f2e:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    3f32:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    3f36:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    3f3a:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    3f3e:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    3f42:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    3f46:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    3f4a:	87 ff       	sbrs	r24, 7
    3f4c:	cc c1       	rjmp	.+920    	; 0x42e6 <__RODATA_PM_OFFSET__+0x2e6>
    3f4e:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <RST_BUTT>
    3f52:	88 23       	and	r24, r24
    3f54:	09 f4       	brne	.+2      	; 0x3f58 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x158c>
    3f56:	c7 c1       	rjmp	.+910    	; 0x42e6 <__RODATA_PM_OFFSET__+0x2e6>
    3f58:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
    3f5c:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    3f60:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    3f64:	07 2e       	mov	r0, r23
    3f66:	00 0c       	add	r0, r0
    3f68:	88 0b       	sbc	r24, r24
    3f6a:	99 0b       	sbc	r25, r25
    3f6c:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    3f70:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    3f74:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    3f78:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    3f7c:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    3f80:	0e 94 86 09 	call	0x130c	; 0x130c <Lclass::PID_callingg() [clone .constprop.51]>
digitalWrite():
    3f84:	60 e0       	ldi	r22, 0x00	; 0
    3f86:	8b e1       	ldi	r24, 0x1B	; 27
    3f88:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISP_UPDATE():
    3f8c:	8f ed       	ldi	r24, 0xDF	; 223
    3f8e:	9b e2       	ldi	r25, 0x2B	; 43
    3f90:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    3f94:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    3f98:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    3f9c:	89 31       	cpi	r24, 0x19	; 25
    3f9e:	91 05       	cpc	r25, r1
    3fa0:	1c f5       	brge	.+70     	; 0x3fe8 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x161c>
DISPLAY_DIGIT1():
    3fa2:	00 93 fa 28 	sts	0x28FA, r16	; 0x8028fa <digits1>
    3fa6:	10 93 fb 28 	sts	0x28FB, r17	; 0x8028fb <digits1+0x1>
    3faa:	00 93 fc 28 	sts	0x28FC, r16	; 0x8028fc <digits1+0x2>
    3fae:	10 93 fd 28 	sts	0x28FD, r17	; 0x8028fd <digits1+0x3>
    3fb2:	00 93 fe 28 	sts	0x28FE, r16	; 0x8028fe <digits1+0x4>
    3fb6:	10 93 ff 28 	sts	0x28FF, r17	; 0x8028ff <digits1+0x5>
    3fba:	00 93 00 29 	sts	0x2900, r16	; 0x802900 <digits1+0x6>
    3fbe:	10 93 01 29 	sts	0x2901, r17	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    3fc2:	60 91 07 28 	lds	r22, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    3fc6:	70 91 08 28 	lds	r23, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    3fca:	07 2e       	mov	r0, r23
    3fcc:	00 0c       	add	r0, r0
    3fce:	88 0b       	sbc	r24, r24
    3fd0:	99 0b       	sbc	r25, r25
    3fd2:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    3fd6:	60 92 02 29 	sts	0x2902, r6	; 0x802902 <digits2>
    3fda:	70 92 03 29 	sts	0x2903, r7	; 0x802903 <digits2+0x1>
    3fde:	40 92 04 29 	sts	0x2904, r4	; 0x802904 <digits2+0x2>
    3fe2:	50 92 05 29 	sts	0x2905, r5	; 0x802905 <digits2+0x3>
    3fe6:	9f cf       	rjmp	.-194    	; 0x3f26 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x155a>
DISPLAY_DIGIT1():
    3fe8:	e0 92 fa 28 	sts	0x28FA, r14	; 0x8028fa <digits1>
    3fec:	f0 92 fb 28 	sts	0x28FB, r15	; 0x8028fb <digits1+0x1>
    3ff0:	c0 92 fc 28 	sts	0x28FC, r12	; 0x8028fc <digits1+0x2>
    3ff4:	d0 92 fd 28 	sts	0x28FD, r13	; 0x8028fd <digits1+0x3>
    3ff8:	a0 92 fe 28 	sts	0x28FE, r10	; 0x8028fe <digits1+0x4>
    3ffc:	b0 92 ff 28 	sts	0x28FF, r11	; 0x8028ff <digits1+0x5>
    4000:	80 92 00 29 	sts	0x2900, r8	; 0x802900 <digits1+0x6>
    4004:	90 92 01 29 	sts	0x2901, r9	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    4008:	c3 97       	sbiw	r24, 0x33	; 51
    400a:	dc f2       	brlt	.-74     	; 0x3fc2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x15f6>
    400c:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    4010:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    4014:	d6 cf       	rjmp	.-84     	; 0x3fc2 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x15f6>
digitalWrite():
    4016:	61 e0       	ldi	r22, 0x01	; 1
    4018:	81 e2       	ldi	r24, 0x21	; 33
    401a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    401e:	ea e1       	ldi	r30, 0x1A	; 26
    4020:	ee 2e       	mov	r14, r30
    4022:	f1 2c       	mov	r15, r1
    4024:	f7 e1       	ldi	r31, 0x17	; 23
    4026:	cf 2e       	mov	r12, r31
    4028:	d1 2c       	mov	r13, r1
DISPLAY_DIGIT1():
    402a:	08 e1       	ldi	r16, 0x18	; 24
    402c:	10 e0       	ldi	r17, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    402e:	aa e0       	ldi	r26, 0x0A	; 10
    4030:	aa 2e       	mov	r10, r26
    4032:	b1 2c       	mov	r11, r1
    4034:	90 90 a5 28 	lds	r9, 0x28A5	; 0x8028a5 <COUNTDOWN_START>
    4038:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    403c:	81 11       	cpse	r24, r1
    403e:	9b c0       	rjmp	.+310    	; 0x4176 <__RODATA_PM_OFFSET__+0x176>
    4040:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <RST_BUTT>
    4044:	88 23       	and	r24, r24
    4046:	09 f4       	brne	.+2      	; 0x404a <__RODATA_PM_OFFSET__+0x4a>
    4048:	96 c0       	rjmp	.+300    	; 0x4176 <__RODATA_PM_OFFSET__+0x176>
    404a:	99 20       	and	r9, r9
    404c:	09 f4       	brne	.+2      	; 0x4050 <__RODATA_PM_OFFSET__+0x50>
    404e:	93 c0       	rjmp	.+294    	; 0x4176 <__RODATA_PM_OFFSET__+0x176>
    4050:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
    4054:	60 91 33 29 	lds	r22, 0x2933	; 0x802933 <SET_LONG_VALUE+0x12>
    4058:	70 91 34 29 	lds	r23, 0x2934	; 0x802934 <SET_LONG_VALUE+0x13>
    405c:	07 2e       	mov	r0, r23
    405e:	00 0c       	add	r0, r0
    4060:	88 0b       	sbc	r24, r24
    4062:	99 0b       	sbc	r25, r25
    4064:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    4068:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    406c:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    4070:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    4074:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
DISP_UPDATE():
    4078:	8f ed       	ldi	r24, 0xDF	; 223
    407a:	9b e2       	ldi	r25, 0x2B	; 43
    407c:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
SET_LONG_PRESS_FUNCTION():
    4080:	0e 94 86 09 	call	0x130c	; 0x130c <Lclass::PID_callingg() [clone .constprop.51]>
digitalWrite():
    4084:	60 e0       	ldi	r22, 0x00	; 0
    4086:	8a e1       	ldi	r24, 0x1A	; 26
    4088:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    408c:	61 e0       	ldi	r22, 0x01	; 1
    408e:	8b e1       	ldi	r24, 0x1B	; 27
    4090:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    4094:	60 91 07 28 	lds	r22, 0x2807	; 0x802807 <LOW_CAL_VALUE_SET>
    4098:	70 91 08 28 	lds	r23, 0x2808	; 0x802808 <LOW_CAL_VALUE_SET+0x1>
    409c:	07 2e       	mov	r0, r23
    409e:	00 0c       	add	r0, r0
    40a0:	88 0b       	sbc	r24, r24
    40a2:	99 0b       	sbc	r25, r25
    40a4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    40a8:	e0 92 02 29 	sts	0x2902, r14	; 0x802902 <digits2>
    40ac:	f0 92 03 29 	sts	0x2903, r15	; 0x802903 <digits2+0x1>
    40b0:	c0 92 04 29 	sts	0x2904, r12	; 0x802904 <digits2+0x2>
    40b4:	d0 92 05 29 	sts	0x2905, r13	; 0x802905 <digits2+0x3>
    40b8:	81 e0       	ldi	r24, 0x01	; 1
    40ba:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    40be:	80 90 be 28 	lds	r8, 0x28BE	; 0x8028be <i>
    40c2:	90 90 bf 28 	lds	r9, 0x28BF	; 0x8028bf <i+0x1>
    40c6:	89 e1       	ldi	r24, 0x19	; 25
    40c8:	88 16       	cp	r8, r24
    40ca:	91 04       	cpc	r9, r1
    40cc:	bc f4       	brge	.+46     	; 0x40fc <__RODATA_PM_OFFSET__+0xfc>
DISPLAY_DIGIT1():
    40ce:	00 93 fa 28 	sts	0x28FA, r16	; 0x8028fa <digits1>
    40d2:	10 93 fb 28 	sts	0x28FB, r17	; 0x8028fb <digits1+0x1>
    40d6:	00 93 fc 28 	sts	0x28FC, r16	; 0x8028fc <digits1+0x2>
    40da:	10 93 fd 28 	sts	0x28FD, r17	; 0x8028fd <digits1+0x3>
    40de:	00 93 fe 28 	sts	0x28FE, r16	; 0x8028fe <digits1+0x4>
    40e2:	10 93 ff 28 	sts	0x28FF, r17	; 0x8028ff <digits1+0x5>
    40e6:	00 93 00 29 	sts	0x2900, r16	; 0x802900 <digits1+0x6>
    40ea:	10 93 01 29 	sts	0x2901, r17	; 0x802901 <digits1+0x7>
digitalWrite():
    40ee:	60 e0       	ldi	r22, 0x00	; 0
    40f0:	85 e1       	ldi	r24, 0x15	; 21
    40f2:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    40f6:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    40fa:	9c cf       	rjmp	.-200    	; 0x4034 <__RODATA_PM_OFFSET__+0x34>
digitalWrite():
    40fc:	61 e0       	ldi	r22, 0x01	; 1
    40fe:	85 e1       	ldi	r24, 0x15	; 21
    4100:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    4104:	40 90 f2 28 	lds	r4, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    4108:	50 90 f3 28 	lds	r5, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    410c:	60 90 f4 28 	lds	r6, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    4110:	70 90 f5 28 	lds	r7, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    4114:	2d ec       	ldi	r18, 0xCD	; 205
    4116:	3c ec       	ldi	r19, 0xCC	; 204
    4118:	47 ec       	ldi	r20, 0xC7	; 199
    411a:	52 e4       	ldi	r21, 0x42	; 66
    411c:	60 91 f6 28 	lds	r22, 0x28F6	; 0x8028f6 <TEMP_DEG>
    4120:	70 91 f7 28 	lds	r23, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    4124:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    4128:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    412c:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    4130:	20 e0       	ldi	r18, 0x00	; 0
    4132:	30 e0       	ldi	r19, 0x00	; 0
    4134:	40 e2       	ldi	r20, 0x20	; 32
    4136:	51 e4       	ldi	r21, 0x41	; 65
    4138:	18 16       	cp	r1, r24
    413a:	24 f0       	brlt	.+8      	; 0x4144 <__RODATA_PM_OFFSET__+0x144>
    413c:	20 e0       	ldi	r18, 0x00	; 0
    413e:	30 e0       	ldi	r19, 0x00	; 0
    4140:	48 ec       	ldi	r20, 0xC8	; 200
    4142:	52 e4       	ldi	r21, 0x42	; 66
    4144:	c3 01       	movw	r24, r6
    4146:	b2 01       	movw	r22, r4
    4148:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    414c:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    4150:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    4154:	81 e0       	ldi	r24, 0x01	; 1
    4156:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <DOT1_1>
    415a:	a0 92 00 29 	sts	0x2900, r10	; 0x802900 <digits1+0x6>
    415e:	b0 92 01 29 	sts	0x2901, r11	; 0x802901 <digits1+0x7>
    4162:	83 e3       	ldi	r24, 0x33	; 51
    4164:	88 16       	cp	r8, r24
    4166:	91 04       	cpc	r9, r1
    4168:	0c f4       	brge	.+2      	; 0x416c <__RODATA_PM_OFFSET__+0x16c>
    416a:	64 cf       	rjmp	.-312    	; 0x4034 <__RODATA_PM_OFFSET__+0x34>
    416c:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    4170:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    4174:	5f cf       	rjmp	.-322    	; 0x4034 <__RODATA_PM_OFFSET__+0x34>
digitalWrite():
    4176:	60 e0       	ldi	r22, 0x00	; 0
    4178:	81 e2       	ldi	r24, 0x21	; 33
    417a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    417e:	8b e0       	ldi	r24, 0x0B	; 11
    4180:	90 e0       	ldi	r25, 0x00	; 0
    4182:	91 10       	cpse	r9, r1
    4184:	c2 c0       	rjmp	.+388    	; 0x430a <__RODATA_PM_OFFSET__+0x30a>
    4186:	8d e0       	ldi	r24, 0x0D	; 13
    4188:	90 e0       	ldi	r25, 0x00	; 0
    418a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    418e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    4192:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    4196:	0c 94 78 15 	jmp	0x2af0	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
    419a:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    419e:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    41a2:	81 e0       	ldi	r24, 0x01	; 1
    41a4:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    41a8:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    41ac:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    41b0:	07 2e       	mov	r0, r23
    41b2:	00 0c       	add	r0, r0
    41b4:	88 0b       	sbc	r24, r24
    41b6:	99 0b       	sbc	r25, r25
    41b8:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    41bc:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    41c0:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    41c4:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    41c8:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
digitalWrite():
    41cc:	61 e0       	ldi	r22, 0x01	; 1
    41ce:	81 e2       	ldi	r24, 0x21	; 33
    41d0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT1():
    41d4:	3e e1       	ldi	r19, 0x1E	; 30
    41d6:	e3 2e       	mov	r14, r19
    41d8:	f1 2c       	mov	r15, r1
    41da:	4f e0       	ldi	r20, 0x0F	; 15
    41dc:	c4 2e       	mov	r12, r20
    41de:	d1 2c       	mov	r13, r1
    41e0:	5d e0       	ldi	r21, 0x0D	; 13
    41e2:	a5 2e       	mov	r10, r21
    41e4:	b1 2c       	mov	r11, r1
    41e6:	60 e1       	ldi	r22, 0x10	; 16
    41e8:	86 2e       	mov	r8, r22
    41ea:	91 2c       	mov	r9, r1
    41ec:	08 e1       	ldi	r16, 0x18	; 24
    41ee:	10 e0       	ldi	r17, 0x00	; 0
SET_LONG_PRESS_FUNCTION():
    41f0:	79 e1       	ldi	r23, 0x19	; 25
    41f2:	67 2e       	mov	r6, r23
    41f4:	71 2c       	mov	r7, r1
    41f6:	20 91 f2 29 	lds	r18, 0x29F2	; 0x8029f2 <PID_SETPOINT>
    41fa:	30 91 f3 29 	lds	r19, 0x29F3	; 0x8029f3 <PID_SETPOINT+0x1>
    41fe:	40 91 f4 29 	lds	r20, 0x29F4	; 0x8029f4 <PID_SETPOINT+0x2>
    4202:	50 91 f5 29 	lds	r21, 0x29F5	; 0x8029f5 <PID_SETPOINT+0x3>
    4206:	60 91 fa 29 	lds	r22, 0x29FA	; 0x8029fa <PID_INPUT>
    420a:	70 91 fb 29 	lds	r23, 0x29FB	; 0x8029fb <PID_INPUT+0x1>
    420e:	80 91 fc 29 	lds	r24, 0x29FC	; 0x8029fc <PID_INPUT+0x2>
    4212:	90 91 fd 29 	lds	r25, 0x29FD	; 0x8029fd <PID_INPUT+0x3>
    4216:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    421a:	87 ff       	sbrs	r24, 7
    421c:	64 c0       	rjmp	.+200    	; 0x42e6 <__RODATA_PM_OFFSET__+0x2e6>
    421e:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <RST_BUTT>
    4222:	88 23       	and	r24, r24
    4224:	09 f4       	brne	.+2      	; 0x4228 <__RODATA_PM_OFFSET__+0x228>
    4226:	5f c0       	rjmp	.+190    	; 0x42e6 <__RODATA_PM_OFFSET__+0x2e6>
    4228:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
    422c:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    4230:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    4234:	07 2e       	mov	r0, r23
    4236:	00 0c       	add	r0, r0
    4238:	88 0b       	sbc	r24, r24
    423a:	99 0b       	sbc	r25, r25
    423c:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    4240:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    4244:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    4248:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    424c:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    4250:	0e 94 86 09 	call	0x130c	; 0x130c <Lclass::PID_callingg() [clone .constprop.51]>
DISP_UPDATE():
    4254:	8f ed       	ldi	r24, 0xDF	; 223
    4256:	9b e2       	ldi	r25, 0x2B	; 43
    4258:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
digitalWrite():
    425c:	60 e0       	ldi	r22, 0x00	; 0
    425e:	8b e1       	ldi	r24, 0x1B	; 27
    4260:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    4264:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    4268:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    426c:	89 31       	cpi	r24, 0x19	; 25
    426e:	91 05       	cpc	r25, r1
    4270:	1c f5       	brge	.+70     	; 0x42b8 <__RODATA_PM_OFFSET__+0x2b8>
DISPLAY_DIGIT1():
    4272:	00 93 fa 28 	sts	0x28FA, r16	; 0x8028fa <digits1>
    4276:	10 93 fb 28 	sts	0x28FB, r17	; 0x8028fb <digits1+0x1>
    427a:	00 93 fc 28 	sts	0x28FC, r16	; 0x8028fc <digits1+0x2>
    427e:	10 93 fd 28 	sts	0x28FD, r17	; 0x8028fd <digits1+0x3>
    4282:	00 93 fe 28 	sts	0x28FE, r16	; 0x8028fe <digits1+0x4>
    4286:	10 93 ff 28 	sts	0x28FF, r17	; 0x8028ff <digits1+0x5>
    428a:	00 93 00 29 	sts	0x2900, r16	; 0x802900 <digits1+0x6>
    428e:	10 93 01 29 	sts	0x2901, r17	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    4292:	60 91 b6 28 	lds	r22, 0x28B6	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    4296:	70 91 b7 28 	lds	r23, 0x28B7	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    429a:	07 2e       	mov	r0, r23
    429c:	00 0c       	add	r0, r0
    429e:	88 0b       	sbc	r24, r24
    42a0:	99 0b       	sbc	r25, r25
    42a2:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    42a6:	e0 92 02 29 	sts	0x2902, r14	; 0x802902 <digits2>
    42aa:	f0 92 03 29 	sts	0x2903, r15	; 0x802903 <digits2+0x1>
    42ae:	60 92 04 29 	sts	0x2904, r6	; 0x802904 <digits2+0x2>
    42b2:	70 92 05 29 	sts	0x2905, r7	; 0x802905 <digits2+0x3>
    42b6:	9f cf       	rjmp	.-194    	; 0x41f6 <__RODATA_PM_OFFSET__+0x1f6>
DISPLAY_DIGIT1():
    42b8:	e0 92 fa 28 	sts	0x28FA, r14	; 0x8028fa <digits1>
    42bc:	f0 92 fb 28 	sts	0x28FB, r15	; 0x8028fb <digits1+0x1>
    42c0:	c0 92 fc 28 	sts	0x28FC, r12	; 0x8028fc <digits1+0x2>
    42c4:	d0 92 fd 28 	sts	0x28FD, r13	; 0x8028fd <digits1+0x3>
    42c8:	a0 92 fe 28 	sts	0x28FE, r10	; 0x8028fe <digits1+0x4>
    42cc:	b0 92 ff 28 	sts	0x28FF, r11	; 0x8028ff <digits1+0x5>
    42d0:	80 92 00 29 	sts	0x2900, r8	; 0x802900 <digits1+0x6>
    42d4:	90 92 01 29 	sts	0x2901, r9	; 0x802901 <digits1+0x7>
SET_LONG_PRESS_FUNCTION():
    42d8:	c3 97       	sbiw	r24, 0x33	; 51
    42da:	dc f2       	brlt	.-74     	; 0x4292 <__RODATA_PM_OFFSET__+0x292>
    42dc:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    42e0:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    42e4:	d6 cf       	rjmp	.-84     	; 0x4292 <__RODATA_PM_OFFSET__+0x292>
digitalWrite():
    42e6:	60 e0       	ldi	r22, 0x00	; 0
    42e8:	81 e2       	ldi	r24, 0x21	; 33
    42ea:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    42ee:	8e e1       	ldi	r24, 0x1E	; 30
    42f0:	90 e0       	ldi	r25, 0x00	; 0
    42f2:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <SET_MIN>
    42f6:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <SET_MIN+0x1>
    42fa:	81 e0       	ldi	r24, 0x01	; 1
    42fc:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <COUNTDOWN_START>
    4300:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4304:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    4308:	01 96       	adiw	r24, 0x01	; 1
    430a:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    430e:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    4312:	0c 94 78 15 	jmp	0x2af0	; 0x2af0 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x124>
digitalWrite():
    4316:	61 e0       	ldi	r22, 0x01	; 1
    4318:	81 e2       	ldi	r24, 0x21	; 33
    431a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    431e:	8e e1       	ldi	r24, 0x1E	; 30
    4320:	e8 2e       	mov	r14, r24
    4322:	f1 2c       	mov	r15, r1
    4324:	99 e1       	ldi	r25, 0x19	; 25
    4326:	c9 2e       	mov	r12, r25
    4328:	d1 2c       	mov	r13, r1
    432a:	2a e0       	ldi	r18, 0x0A	; 10
    432c:	a2 2e       	mov	r10, r18
    432e:	b1 2c       	mov	r11, r1
DISPLAY_DIGIT1():
    4330:	08 e1       	ldi	r16, 0x18	; 24
    4332:	10 e0       	ldi	r17, 0x00	; 0
    4334:	90 90 a5 28 	lds	r9, 0x28A5	; 0x8028a5 <COUNTDOWN_START>
SET_LONG_PRESS_FUNCTION():
    4338:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    433c:	81 11       	cpse	r24, r1
    433e:	a4 c0       	rjmp	.+328    	; 0x4488 <__RODATA_PM_OFFSET__+0x488>
    4340:	80 91 a8 28 	lds	r24, 0x28A8	; 0x8028a8 <RST_BUTT>
    4344:	88 23       	and	r24, r24
    4346:	09 f4       	brne	.+2      	; 0x434a <__RODATA_PM_OFFSET__+0x34a>
    4348:	9f c0       	rjmp	.+318    	; 0x4488 <__RODATA_PM_OFFSET__+0x488>
    434a:	99 20       	and	r9, r9
    434c:	09 f4       	brne	.+2      	; 0x4350 <__RODATA_PM_OFFSET__+0x350>
    434e:	9c c0       	rjmp	.+312    	; 0x4488 <__RODATA_PM_OFFSET__+0x488>
    4350:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
    4354:	60 91 35 29 	lds	r22, 0x2935	; 0x802935 <SET_LONG_VALUE+0x14>
    4358:	70 91 36 29 	lds	r23, 0x2936	; 0x802936 <SET_LONG_VALUE+0x15>
    435c:	07 2e       	mov	r0, r23
    435e:	00 0c       	add	r0, r0
    4360:	88 0b       	sbc	r24, r24
    4362:	99 0b       	sbc	r25, r25
    4364:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    4368:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    436c:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    4370:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    4374:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    4378:	0e 94 86 09 	call	0x130c	; 0x130c <Lclass::PID_callingg() [clone .constprop.51]>
DISP_UPDATE():
    437c:	8f ed       	ldi	r24, 0xDF	; 223
    437e:	9b e2       	ldi	r25, 0x2B	; 43
    4380:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
digitalWrite():
    4384:	60 e0       	ldi	r22, 0x00	; 0
    4386:	8a e1       	ldi	r24, 0x1A	; 26
    4388:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    438c:	61 e0       	ldi	r22, 0x01	; 1
    438e:	8b e1       	ldi	r24, 0x1B	; 27
    4390:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    4394:	60 91 b6 28 	lds	r22, 0x28B6	; 0x8028b6 <HIGH_CAL_VALUE_SET>
    4398:	70 91 b7 28 	lds	r23, 0x28B7	; 0x8028b7 <HIGH_CAL_VALUE_SET+0x1>
    439c:	07 2e       	mov	r0, r23
    439e:	00 0c       	add	r0, r0
    43a0:	88 0b       	sbc	r24, r24
    43a2:	99 0b       	sbc	r25, r25
    43a4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    43a8:	e0 92 02 29 	sts	0x2902, r14	; 0x802902 <digits2>
    43ac:	f0 92 03 29 	sts	0x2903, r15	; 0x802903 <digits2+0x1>
    43b0:	c0 92 04 29 	sts	0x2904, r12	; 0x802904 <digits2+0x2>
    43b4:	d0 92 05 29 	sts	0x2905, r13	; 0x802905 <digits2+0x3>
    43b8:	99 24       	eor	r9, r9
    43ba:	93 94       	inc	r9
    43bc:	90 92 c1 28 	sts	0x28C1, r9	; 0x8028c1 <DOT2_1>
    43c0:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    43c4:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    43c8:	49 97       	sbiw	r24, 0x19	; 25
    43ca:	04 f5       	brge	.+64     	; 0x440c <__RODATA_PM_OFFSET__+0x40c>
DISPLAY_DIGIT1():
    43cc:	00 93 fa 28 	sts	0x28FA, r16	; 0x8028fa <digits1>
    43d0:	10 93 fb 28 	sts	0x28FB, r17	; 0x8028fb <digits1+0x1>
    43d4:	00 93 fc 28 	sts	0x28FC, r16	; 0x8028fc <digits1+0x2>
    43d8:	10 93 fd 28 	sts	0x28FD, r17	; 0x8028fd <digits1+0x3>
    43dc:	00 93 fe 28 	sts	0x28FE, r16	; 0x8028fe <digits1+0x4>
    43e0:	10 93 ff 28 	sts	0x28FF, r17	; 0x8028ff <digits1+0x5>
    43e4:	00 93 00 29 	sts	0x2900, r16	; 0x802900 <digits1+0x6>
    43e8:	10 93 01 29 	sts	0x2901, r17	; 0x802901 <digits1+0x7>
digitalWrite():
    43ec:	60 e0       	ldi	r22, 0x00	; 0
    43ee:	85 e1       	ldi	r24, 0x15	; 21
    43f0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    43f4:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    43f8:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    43fc:	c3 97       	sbiw	r24, 0x33	; 51
    43fe:	0c f4       	brge	.+2      	; 0x4402 <__RODATA_PM_OFFSET__+0x402>
    4400:	99 cf       	rjmp	.-206    	; 0x4334 <__RODATA_PM_OFFSET__+0x334>
    4402:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    4406:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    440a:	94 cf       	rjmp	.-216    	; 0x4334 <__RODATA_PM_OFFSET__+0x334>
digitalWrite():
    440c:	61 e0       	ldi	r22, 0x01	; 1
    440e:	85 e1       	ldi	r24, 0x15	; 21
    4410:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    4414:	40 90 f2 28 	lds	r4, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    4418:	50 90 f3 28 	lds	r5, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    441c:	60 90 f4 28 	lds	r6, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    4420:	70 90 f5 28 	lds	r7, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
SET_LONG_PRESS_FUNCTION():
    4424:	2d ec       	ldi	r18, 0xCD	; 205
    4426:	3c ec       	ldi	r19, 0xCC	; 204
    4428:	47 ec       	ldi	r20, 0xC7	; 199
    442a:	52 e4       	ldi	r21, 0x42	; 66
    442c:	60 91 f6 28 	lds	r22, 0x28F6	; 0x8028f6 <TEMP_DEG>
    4430:	70 91 f7 28 	lds	r23, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    4434:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    4438:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    443c:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    4440:	18 16       	cp	r1, r24
    4442:	9c f4       	brge	.+38     	; 0x446a <__RODATA_PM_OFFSET__+0x46a>
    4444:	20 e0       	ldi	r18, 0x00	; 0
    4446:	30 e0       	ldi	r19, 0x00	; 0
    4448:	40 e2       	ldi	r20, 0x20	; 32
    444a:	51 e4       	ldi	r21, 0x41	; 65
    444c:	c3 01       	movw	r24, r6
    444e:	b2 01       	movw	r22, r4
    4450:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    4454:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    4458:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    445c:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    4460:	a0 92 00 29 	sts	0x2900, r10	; 0x802900 <digits1+0x6>
    4464:	b0 92 01 29 	sts	0x2901, r11	; 0x802901 <digits1+0x7>
    4468:	c5 cf       	rjmp	.-118    	; 0x43f4 <__RODATA_PM_OFFSET__+0x3f4>
    446a:	20 e0       	ldi	r18, 0x00	; 0
    446c:	30 e0       	ldi	r19, 0x00	; 0
    446e:	48 ec       	ldi	r20, 0xC8	; 200
    4470:	52 e4       	ldi	r21, 0x42	; 66
    4472:	c3 01       	movw	r24, r6
    4474:	b2 01       	movw	r22, r4
    4476:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    447a:	0e 94 67 3a 	call	0x74ce	; 0x74ce <__fixsfsi>
    447e:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    4482:	90 92 c2 28 	sts	0x28C2, r9	; 0x8028c2 <DOT1_1>
    4486:	ec cf       	rjmp	.-40     	; 0x4460 <__RODATA_PM_OFFSET__+0x460>
digitalWrite():
    4488:	60 e0       	ldi	r22, 0x00	; 0
    448a:	81 e2       	ldi	r24, 0x21	; 33
    448c:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_LONG_PRESS_FUNCTION():
    4490:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    4494:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    4498:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    449c:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    44a0:	99 20       	and	r9, r9
    44a2:	19 f0       	breq	.+6      	; 0x44aa <__RODATA_PM_OFFSET__+0x4aa>
    44a4:	8d e0       	ldi	r24, 0x0D	; 13
    44a6:	90 e0       	ldi	r25, 0x00	; 0
    44a8:	30 cf       	rjmp	.-416    	; 0x430a <__RODATA_PM_OFFSET__+0x30a>
    44aa:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    44ae:	71 ce       	rjmp	.-798    	; 0x4192 <__RODATA_PM_OFFSET__+0x192>
    44b0:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    44b4:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    44b8:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    44bc:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    44c0:	88 3c       	cpi	r24, 0xC8	; 200
    44c2:	91 05       	cpc	r25, r1
    44c4:	2c f5       	brge	.+74     	; 0x4510 <__RODATA_PM_OFFSET__+0x510>
DISPLAY_DIGIT2():
    44c6:	8a e0       	ldi	r24, 0x0A	; 10
    44c8:	90 e0       	ldi	r25, 0x00	; 0
    44ca:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    44ce:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    44d2:	8d e0       	ldi	r24, 0x0D	; 13
    44d4:	90 e0       	ldi	r25, 0x00	; 0
    44d6:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    44da:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    44de:	2a e1       	ldi	r18, 0x1A	; 26
    44e0:	30 e0       	ldi	r19, 0x00	; 0
    44e2:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    44e6:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    44ea:	2e e0       	ldi	r18, 0x0E	; 14
    44ec:	30 e0       	ldi	r19, 0x00	; 0
    44ee:	20 93 08 29 	sts	0x2908, r18	; 0x802908 <digits2+0x6>
    44f2:	30 93 09 29 	sts	0x2909, r19	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    44f6:	2c e0       	ldi	r18, 0x0C	; 12
    44f8:	30 e0       	ldi	r19, 0x00	; 0
    44fa:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    44fe:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    4502:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    4506:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    450a:	8c e1       	ldi	r24, 0x1C	; 28
    450c:	90 e0       	ldi	r25, 0x00	; 0
    450e:	73 cb       	rjmp	.-2330   	; 0x3bf6 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0x122a>
SET_LONG_PRESS_FUNCTION():
    4510:	10 92 b1 28 	sts	0x28B1, r1	; 0x8028b1 <Service_Menu>
    4514:	eb c9       	rjmp	.-3114   	; 0x38ec <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xf20>
    4516:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    451a:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    451e:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    4522:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    4526:	80 91 f1 28 	lds	r24, 0x28F1	; 0x8028f1 <select_heating_type>
    452a:	90 e0       	ldi	r25, 0x00	; 0
    452c:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
    4530:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
DISPLAY_DIGIT2():
    4534:	8e e1       	ldi	r24, 0x1E	; 30
    4536:	90 e0       	ldi	r25, 0x00	; 0
    4538:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    453c:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    4540:	2f e0       	ldi	r18, 0x0F	; 15
    4542:	30 e0       	ldi	r19, 0x00	; 0
    4544:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    4548:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    454c:	8d e0       	ldi	r24, 0x0D	; 13
    454e:	90 e0       	ldi	r25, 0x00	; 0
    4550:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    4554:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    4558:	80 e1       	ldi	r24, 0x10	; 16
    455a:	90 e0       	ldi	r25, 0x00	; 0
    455c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    4560:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    4564:	4c e0       	ldi	r20, 0x0C	; 12
    4566:	50 e0       	ldi	r21, 0x00	; 0
    4568:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    456c:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    4570:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    4574:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    4578:	2a e1       	ldi	r18, 0x1A	; 26
    457a:	30 e0       	ldi	r19, 0x00	; 0
    457c:	89 c8       	rjmp	.-3822   	; 0x3690 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xcc4>
SET_LONG_PRESS_FUNCTION():
    457e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    4582:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    4586:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    458a:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    458e:	8a e1       	ldi	r24, 0x1A	; 26
    4590:	90 e0       	ldi	r25, 0x00	; 0
    4592:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    4596:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    459a:	87 e1       	ldi	r24, 0x17	; 23
    459c:	90 e0       	ldi	r25, 0x00	; 0
    459e:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    45a2:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    45a6:	8b e1       	ldi	r24, 0x1B	; 27
    45a8:	90 e0       	ldi	r25, 0x00	; 0
    45aa:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    45ae:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    45b2:	88 e1       	ldi	r24, 0x18	; 24
    45b4:	90 e0       	ldi	r25, 0x00	; 0
    45b6:	37 c8       	rjmp	.-3986   	; 0x3626 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xc5a>
SET_LONG_PRESS_FUNCTION():
    45b8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    45bc:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    45c0:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    45c4:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
DISPLAY_DIGIT2():
    45c8:	85 e1       	ldi	r24, 0x15	; 21
    45ca:	90 e0       	ldi	r25, 0x00	; 0
    45cc:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    45d0:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    45d4:	8d e0       	ldi	r24, 0x0D	; 13
    45d6:	90 e0       	ldi	r25, 0x00	; 0
    45d8:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    45dc:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    45e0:	8a e0       	ldi	r24, 0x0A	; 10
    45e2:	90 e0       	ldi	r25, 0x00	; 0
    45e4:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    45e8:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    45ec:	80 e1       	ldi	r24, 0x10	; 16
    45ee:	90 e0       	ldi	r25, 0x00	; 0
    45f0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    45f4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    45f8:	21 e1       	ldi	r18, 0x11	; 17
    45fa:	30 e0       	ldi	r19, 0x00	; 0
    45fc:	20 93 fa 28 	sts	0x28FA, r18	; 0x8028fa <digits1>
    4600:	30 93 fb 28 	sts	0x28FB, r19	; 0x8028fb <digits1+0x1>
    4604:	2f e0       	ldi	r18, 0x0F	; 15
    4606:	30 e0       	ldi	r19, 0x00	; 0
    4608:	20 93 fc 28 	sts	0x28FC, r18	; 0x8028fc <digits1+0x2>
    460c:	30 93 fd 28 	sts	0x28FD, r19	; 0x8028fd <digits1+0x3>
    4610:	2c e0       	ldi	r18, 0x0C	; 12
    4612:	30 e0       	ldi	r19, 0x00	; 0
    4614:	3d c8       	rjmp	.-3974   	; 0x3690 <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]+0xcc4>

00004616 <shiftOut.constprop.7>:
shiftOut():
    4616:	ef 92       	push	r14
    4618:	ff 92       	push	r15
    461a:	0f 93       	push	r16
    461c:	1f 93       	push	r17
    461e:	cf 93       	push	r28
    4620:	df 93       	push	r29
    4622:	e8 2e       	mov	r14, r24
    4624:	f6 2e       	mov	r15, r22
    4626:	d0 e0       	ldi	r29, 0x00	; 0
    4628:	c0 e0       	ldi	r28, 0x00	; 0
    462a:	04 2f       	mov	r16, r20
    462c:	10 e0       	ldi	r17, 0x00	; 0
    462e:	b8 01       	movw	r22, r16
    4630:	0c 2e       	mov	r0, r28
    4632:	02 c0       	rjmp	.+4      	; 0x4638 <shiftOut.constprop.7+0x22>
    4634:	75 95       	asr	r23
    4636:	67 95       	ror	r22
    4638:	0a 94       	dec	r0
    463a:	e2 f7       	brpl	.-8      	; 0x4634 <shiftOut.constprop.7+0x1e>
    463c:	61 70       	andi	r22, 0x01	; 1
    463e:	8e 2d       	mov	r24, r14
    4640:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    4644:	61 e0       	ldi	r22, 0x01	; 1
    4646:	8f 2d       	mov	r24, r15
    4648:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    464c:	60 e0       	ldi	r22, 0x00	; 0
    464e:	8f 2d       	mov	r24, r15
    4650:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    4654:	21 96       	adiw	r28, 0x01	; 1
    4656:	c8 30       	cpi	r28, 0x08	; 8
    4658:	d1 05       	cpc	r29, r1
    465a:	49 f7       	brne	.-46     	; 0x462e <shiftOut.constprop.7+0x18>
    465c:	df 91       	pop	r29
    465e:	cf 91       	pop	r28
    4660:	1f 91       	pop	r17
    4662:	0f 91       	pop	r16
    4664:	ff 90       	pop	r15
    4666:	ef 90       	pop	r14
    4668:	08 95       	ret

0000466a <DISP_REFRESH()>:
DISP_REFRESH():
    466a:	0f 93       	push	r16
    466c:	1f 93       	push	r17
    466e:	cf 93       	push	r28
    4670:	df 93       	push	r29
    4672:	0e 94 8b 08 	call	0x1116	; 0x1116 <Eclass::cathode_high1() [clone .constprop.6]>
    4676:	0e 94 97 08 	call	0x112e	; 0x112e <Eclass::cathode_high2() [clone .constprop.4]>
DISPLAY_NUMBER2():
    467a:	0e 94 97 08 	call	0x112e	; 0x112e <Eclass::cathode_high2() [clone .constprop.4]>
    467e:	60 e0       	ldi	r22, 0x00	; 0
    4680:	80 e2       	ldi	r24, 0x20	; 32
    4682:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    4686:	c0 91 39 28 	lds	r28, 0x2839	; 0x802839 <count2>
    468a:	d0 91 3a 28 	lds	r29, 0x283A	; 0x80283a <count2+0x1>
    468e:	80 91 9e 28 	lds	r24, 0x289E	; 0x80289e <DOT2_0>
    4692:	8e 01       	movw	r16, r28
    4694:	00 0f       	add	r16, r16
    4696:	11 1f       	adc	r17, r17
    4698:	88 23       	and	r24, r24
    469a:	31 f0       	breq	.+12     	; 0x46a8 <DISP_REFRESH()+0x3e>
    469c:	e0 91 02 29 	lds	r30, 0x2902	; 0x802902 <digits2>
    46a0:	f0 91 03 29 	lds	r31, 0x2903	; 0x802903 <digits2+0x1>
    46a4:	20 97       	sbiw	r28, 0x00	; 0
    46a6:	c1 f0       	breq	.+48     	; 0x46d8 <DISP_REFRESH()+0x6e>
    46a8:	80 91 c1 28 	lds	r24, 0x28C1	; 0x8028c1 <DOT2_1>
    46ac:	88 23       	and	r24, r24
    46ae:	39 f0       	breq	.+14     	; 0x46be <DISP_REFRESH()+0x54>
    46b0:	e0 91 04 29 	lds	r30, 0x2904	; 0x802904 <digits2+0x2>
    46b4:	f0 91 05 29 	lds	r31, 0x2905	; 0x802905 <digits2+0x3>
    46b8:	c1 30       	cpi	r28, 0x01	; 1
    46ba:	d1 05       	cpc	r29, r1
    46bc:	69 f0       	breq	.+26     	; 0x46d8 <DISP_REFRESH()+0x6e>
    46be:	80 91 9d 28 	lds	r24, 0x289D	; 0x80289d <DOT2_2>
    46c2:	88 23       	and	r24, r24
    46c4:	09 f4       	brne	.+2      	; 0x46c8 <DISP_REFRESH()+0x5e>
    46c6:	80 c0       	rjmp	.+256    	; 0x47c8 <DISP_REFRESH()+0x15e>
    46c8:	c2 30       	cpi	r28, 0x02	; 2
    46ca:	d1 05       	cpc	r29, r1
    46cc:	09 f0       	breq	.+2      	; 0x46d0 <DISP_REFRESH()+0x66>
    46ce:	7c c0       	rjmp	.+248    	; 0x47c8 <DISP_REFRESH()+0x15e>
    46d0:	e0 91 06 29 	lds	r30, 0x2906	; 0x802906 <digits2+0x4>
    46d4:	f0 91 07 29 	lds	r31, 0x2907	; 0x802907 <digits2+0x5>
    46d8:	ee 55       	subi	r30, 0x5E	; 94
    46da:	f7 44       	sbci	r31, 0x47	; 71
    46dc:	40 81       	ld	r20, Z
    46de:	41 60       	ori	r20, 0x01	; 1
    46e0:	6e e1       	ldi	r22, 0x1E	; 30
    46e2:	8f e1       	ldi	r24, 0x1F	; 31
    46e4:	98 df       	rcall	.-208    	; 0x4616 <shiftOut.constprop.7>
    46e6:	f8 01       	movw	r30, r16
    46e8:	e2 57       	subi	r30, 0x72	; 114
    46ea:	f7 44       	sbci	r31, 0x47	; 71
    46ec:	60 e0       	ldi	r22, 0x00	; 0
    46ee:	80 81       	ld	r24, Z
    46f0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    46f4:	61 e0       	ldi	r22, 0x01	; 1
    46f6:	80 e2       	ldi	r24, 0x20	; 32
    46f8:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    46fc:	21 96       	adiw	r28, 0x01	; 1
    46fe:	c4 30       	cpi	r28, 0x04	; 4
    4700:	d1 05       	cpc	r29, r1
    4702:	0c f0       	brlt	.+2      	; 0x4706 <DISP_REFRESH()+0x9c>
    4704:	6b c0       	rjmp	.+214    	; 0x47dc <DISP_REFRESH()+0x172>
    4706:	c0 93 39 28 	sts	0x2839, r28	; 0x802839 <count2>
    470a:	d0 93 3a 28 	sts	0x283A, r29	; 0x80283a <count2+0x1>
DISPLAY_NUMBER1():
    470e:	0e 94 8b 08 	call	0x1116	; 0x1116 <Eclass::cathode_high1() [clone .constprop.6]>
    4712:	60 e0       	ldi	r22, 0x00	; 0
    4714:	83 e1       	ldi	r24, 0x13	; 19
    4716:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    471a:	c0 91 3b 28 	lds	r28, 0x283B	; 0x80283b <count1>
    471e:	d0 91 3c 28 	lds	r29, 0x283C	; 0x80283c <count1+0x1>
    4722:	80 91 c0 28 	lds	r24, 0x28C0	; 0x8028c0 <DOT1_0>
    4726:	8e 01       	movw	r16, r28
    4728:	00 0f       	add	r16, r16
    472a:	11 1f       	adc	r17, r17
    472c:	88 23       	and	r24, r24
    472e:	31 f0       	breq	.+12     	; 0x473c <DISP_REFRESH()+0xd2>
    4730:	e0 91 fa 28 	lds	r30, 0x28FA	; 0x8028fa <digits1>
    4734:	f0 91 fb 28 	lds	r31, 0x28FB	; 0x8028fb <digits1+0x1>
    4738:	20 97       	sbiw	r28, 0x00	; 0
    473a:	c1 f0       	breq	.+48     	; 0x476c <DISP_REFRESH()+0x102>
    473c:	80 91 c2 28 	lds	r24, 0x28C2	; 0x8028c2 <DOT1_1>
    4740:	88 23       	and	r24, r24
    4742:	39 f0       	breq	.+14     	; 0x4752 <DISP_REFRESH()+0xe8>
    4744:	e0 91 fc 28 	lds	r30, 0x28FC	; 0x8028fc <digits1+0x2>
    4748:	f0 91 fd 28 	lds	r31, 0x28FD	; 0x8028fd <digits1+0x3>
    474c:	c1 30       	cpi	r28, 0x01	; 1
    474e:	d1 05       	cpc	r29, r1
    4750:	69 f0       	breq	.+26     	; 0x476c <DISP_REFRESH()+0x102>
    4752:	80 91 9c 28 	lds	r24, 0x289C	; 0x80289c <DOT1_2>
    4756:	88 23       	and	r24, r24
    4758:	09 f4       	brne	.+2      	; 0x475c <DISP_REFRESH()+0xf2>
    475a:	45 c0       	rjmp	.+138    	; 0x47e6 <DISP_REFRESH()+0x17c>
    475c:	c2 30       	cpi	r28, 0x02	; 2
    475e:	d1 05       	cpc	r29, r1
    4760:	09 f0       	breq	.+2      	; 0x4764 <DISP_REFRESH()+0xfa>
    4762:	41 c0       	rjmp	.+130    	; 0x47e6 <DISP_REFRESH()+0x17c>
    4764:	e0 91 fe 28 	lds	r30, 0x28FE	; 0x8028fe <digits1+0x4>
    4768:	f0 91 ff 28 	lds	r31, 0x28FF	; 0x8028ff <digits1+0x5>
    476c:	ee 55       	subi	r30, 0x5E	; 94
    476e:	f7 44       	sbci	r31, 0x47	; 71
    4770:	40 81       	ld	r20, Z
    4772:	41 60       	ori	r20, 0x01	; 1
    4774:	64 e1       	ldi	r22, 0x14	; 20
    4776:	82 e1       	ldi	r24, 0x12	; 18
    4778:	4e df       	rcall	.-356    	; 0x4616 <shiftOut.constprop.7>
    477a:	f8 01       	movw	r30, r16
    477c:	e8 56       	subi	r30, 0x68	; 104
    477e:	f7 44       	sbci	r31, 0x47	; 71
    4780:	60 e0       	ldi	r22, 0x00	; 0
    4782:	80 81       	ld	r24, Z
    4784:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    4788:	61 e0       	ldi	r22, 0x01	; 1
    478a:	83 e1       	ldi	r24, 0x13	; 19
    478c:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    4790:	21 96       	adiw	r28, 0x01	; 1
    4792:	c4 30       	cpi	r28, 0x04	; 4
    4794:	d1 05       	cpc	r29, r1
    4796:	8c f5       	brge	.+98     	; 0x47fa <DISP_REFRESH()+0x190>
    4798:	c0 93 3b 28 	sts	0x283B, r28	; 0x80283b <count1>
    479c:	d0 93 3c 28 	sts	0x283C, r29	; 0x80283c <count1+0x1>
Button_Tick_Update():
    47a0:	82 eb       	ldi	r24, 0xB2	; 178
    47a2:	9a e2       	ldi	r25, 0x2A	; 42
    47a4:	0e 94 47 0b 	call	0x168e	; 0x168e <OneButton::tick()>
    47a8:	83 e9       	ldi	r24, 0x93	; 147
    47aa:	9a e2       	ldi	r25, 0x2A	; 42
    47ac:	0e 94 47 0b 	call	0x168e	; 0x168e <OneButton::tick()>
    47b0:	84 e7       	ldi	r24, 0x74	; 116
    47b2:	9a e2       	ldi	r25, 0x2A	; 42
    47b4:	0e 94 47 0b 	call	0x168e	; 0x168e <OneButton::tick()>
    47b8:	85 e5       	ldi	r24, 0x55	; 85
    47ba:	9a e2       	ldi	r25, 0x2A	; 42
DISP_REFRESH():
    47bc:	df 91       	pop	r29
    47be:	cf 91       	pop	r28
    47c0:	1f 91       	pop	r17
    47c2:	0f 91       	pop	r16
Button_Tick_Update():
    47c4:	0c 94 47 0b 	jmp	0x168e	; 0x168e <OneButton::tick()>
DISPLAY_NUMBER2():
    47c8:	f8 01       	movw	r30, r16
    47ca:	ee 5f       	subi	r30, 0xFE	; 254
    47cc:	f6 4d       	sbci	r31, 0xD6	; 214
    47ce:	01 90       	ld	r0, Z+
    47d0:	f0 81       	ld	r31, Z
    47d2:	e0 2d       	mov	r30, r0
    47d4:	ee 55       	subi	r30, 0x5E	; 94
    47d6:	f7 44       	sbci	r31, 0x47	; 71
    47d8:	40 81       	ld	r20, Z
    47da:	82 cf       	rjmp	.-252    	; 0x46e0 <DISP_REFRESH()+0x76>
    47dc:	10 92 39 28 	sts	0x2839, r1	; 0x802839 <count2>
    47e0:	10 92 3a 28 	sts	0x283A, r1	; 0x80283a <count2+0x1>
    47e4:	94 cf       	rjmp	.-216    	; 0x470e <DISP_REFRESH()+0xa4>
DISPLAY_NUMBER1():
    47e6:	f8 01       	movw	r30, r16
    47e8:	e6 50       	subi	r30, 0x06	; 6
    47ea:	f7 4d       	sbci	r31, 0xD7	; 215
    47ec:	01 90       	ld	r0, Z+
    47ee:	f0 81       	ld	r31, Z
    47f0:	e0 2d       	mov	r30, r0
    47f2:	ee 55       	subi	r30, 0x5E	; 94
    47f4:	f7 44       	sbci	r31, 0x47	; 71
    47f6:	40 81       	ld	r20, Z
    47f8:	bd cf       	rjmp	.-134    	; 0x4774 <DISP_REFRESH()+0x10a>
    47fa:	10 92 3b 28 	sts	0x283B, r1	; 0x80283b <count1>
    47fe:	10 92 3c 28 	sts	0x283C, r1	; 0x80283c <count1+0x1>
    4802:	ce cf       	rjmp	.-100    	; 0x47a0 <DISP_REFRESH()+0x136>

00004804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>:
_ZN5Print5writeEPKc.part.2():
    4804:	fc 01       	movw	r30, r24
    4806:	01 90       	ld	r0, Z+
    4808:	00 20       	and	r0, r0
    480a:	e9 f7       	brne	.-6      	; 0x4806 <Print::write(char const*) [clone .part.2] [clone .constprop.25]+0x2>
    480c:	31 97       	sbiw	r30, 0x01	; 1
    480e:	af 01       	movw	r20, r30
    4810:	48 1b       	sub	r20, r24
    4812:	59 0b       	sbc	r21, r25
    4814:	bc 01       	movw	r22, r24
    4816:	85 e5       	ldi	r24, 0x55	; 85
    4818:	99 e2       	ldi	r25, 0x29	; 41
    481a:	0c 94 12 06 	jmp	0xc24	; 0xc24 <Print::write(unsigned char const*, unsigned int)>

0000481e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]>:
printNumber():
    481e:	8f 92       	push	r8
    4820:	9f 92       	push	r9
    4822:	af 92       	push	r10
    4824:	bf 92       	push	r11
    4826:	0f 93       	push	r16
    4828:	1f 93       	push	r17
    482a:	cf 93       	push	r28
    482c:	df 93       	push	r29
    482e:	cd b7       	in	r28, 0x3d	; 61
    4830:	de b7       	in	r29, 0x3e	; 62
    4832:	a1 97       	sbiw	r28, 0x21	; 33
    4834:	cd bf       	out	0x3d, r28	; 61
    4836:	de bf       	out	0x3e, r29	; 62
    4838:	19 a2       	std	Y+33, r1	; 0x21
    483a:	42 30       	cpi	r20, 0x02	; 2
    483c:	08 f4       	brcc	.+2      	; 0x4840 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]+0x22>
    483e:	4a e0       	ldi	r20, 0x0A	; 10
    4840:	8e 01       	movw	r16, r28
    4842:	0f 5d       	subi	r16, 0xDF	; 223
    4844:	1f 4f       	sbci	r17, 0xFF	; 255
    4846:	84 2e       	mov	r8, r20
    4848:	91 2c       	mov	r9, r1
    484a:	b1 2c       	mov	r11, r1
    484c:	a1 2c       	mov	r10, r1
    484e:	a5 01       	movw	r20, r10
    4850:	94 01       	movw	r18, r8
    4852:	0e 94 c8 3b 	call	0x7790	; 0x7790 <__udivmodsi4>
    4856:	e6 2f       	mov	r30, r22
    4858:	b9 01       	movw	r22, r18
    485a:	ca 01       	movw	r24, r20
    485c:	ea 30       	cpi	r30, 0x0A	; 10
    485e:	d4 f4       	brge	.+52     	; 0x4894 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]+0x76>
    4860:	e0 5d       	subi	r30, 0xD0	; 208
    4862:	d8 01       	movw	r26, r16
    4864:	ee 93       	st	-X, r30
    4866:	8d 01       	movw	r16, r26
    4868:	23 2b       	or	r18, r19
    486a:	24 2b       	or	r18, r20
    486c:	25 2b       	or	r18, r21
    486e:	79 f7       	brne	.-34     	; 0x484e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]+0x30>
    4870:	90 e0       	ldi	r25, 0x00	; 0
    4872:	80 e0       	ldi	r24, 0x00	; 0
write():
    4874:	10 97       	sbiw	r26, 0x00	; 0
    4876:	11 f0       	breq	.+4      	; 0x487c <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]+0x5e>
    4878:	cd 01       	movw	r24, r26
    487a:	c4 df       	rcall	.-120    	; 0x4804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>
printNumber():
    487c:	a1 96       	adiw	r28, 0x21	; 33
    487e:	cd bf       	out	0x3d, r28	; 61
    4880:	de bf       	out	0x3e, r29	; 62
    4882:	df 91       	pop	r29
    4884:	cf 91       	pop	r28
    4886:	1f 91       	pop	r17
    4888:	0f 91       	pop	r16
    488a:	bf 90       	pop	r11
    488c:	af 90       	pop	r10
    488e:	9f 90       	pop	r9
    4890:	8f 90       	pop	r8
    4892:	08 95       	ret
    4894:	e9 5c       	subi	r30, 0xC9	; 201
    4896:	e5 cf       	rjmp	.-54     	; 0x4862 <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]+0x44>

00004898 <Print::printFloat(double, unsigned char) [clone .constprop.16]>:
printFloat():
    4898:	4f 92       	push	r4
    489a:	5f 92       	push	r5
    489c:	6f 92       	push	r6
    489e:	7f 92       	push	r7
    48a0:	8f 92       	push	r8
    48a2:	9f 92       	push	r9
    48a4:	af 92       	push	r10
    48a6:	bf 92       	push	r11
    48a8:	cf 92       	push	r12
    48aa:	df 92       	push	r13
    48ac:	ef 92       	push	r14
    48ae:	ff 92       	push	r15
    48b0:	0f 93       	push	r16
    48b2:	1f 93       	push	r17
    48b4:	cf 93       	push	r28
    48b6:	6b 01       	movw	r12, r22
    48b8:	7c 01       	movw	r14, r24
    48ba:	74 2e       	mov	r7, r20
    48bc:	ac 01       	movw	r20, r24
    48be:	9b 01       	movw	r18, r22
    48c0:	0e 94 b1 3b 	call	0x7762	; 0x7762 <__unordsf2>
    48c4:	88 23       	and	r24, r24
    48c6:	91 f0       	breq	.+36     	; 0x48ec <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x54>
write():
    48c8:	86 e0       	ldi	r24, 0x06	; 6
    48ca:	9a eb       	ldi	r25, 0xBA	; 186
printFloat():
    48cc:	cf 91       	pop	r28
    48ce:	1f 91       	pop	r17
    48d0:	0f 91       	pop	r16
    48d2:	ff 90       	pop	r15
    48d4:	ef 90       	pop	r14
    48d6:	df 90       	pop	r13
    48d8:	cf 90       	pop	r12
    48da:	bf 90       	pop	r11
    48dc:	af 90       	pop	r10
    48de:	9f 90       	pop	r9
    48e0:	8f 90       	pop	r8
    48e2:	7f 90       	pop	r7
    48e4:	6f 90       	pop	r6
    48e6:	5f 90       	pop	r5
    48e8:	4f 90       	pop	r4
write():
    48ea:	8c cf       	rjmp	.-232    	; 0x4804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>
printFloat():
    48ec:	46 01       	movw	r8, r12
    48ee:	57 01       	movw	r10, r14
    48f0:	e8 94       	clt
    48f2:	b7 f8       	bld	r11, 7
    48f4:	2f ef       	ldi	r18, 0xFF	; 255
    48f6:	3f ef       	ldi	r19, 0xFF	; 255
    48f8:	4f e7       	ldi	r20, 0x7F	; 127
    48fa:	5f e7       	ldi	r21, 0x7F	; 127
    48fc:	c5 01       	movw	r24, r10
    48fe:	b4 01       	movw	r22, r8
    4900:	0e 94 b1 3b 	call	0x7762	; 0x7762 <__unordsf2>
    4904:	81 11       	cpse	r24, r1
    4906:	0d c0       	rjmp	.+26     	; 0x4922 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x8a>
    4908:	2f ef       	ldi	r18, 0xFF	; 255
    490a:	3f ef       	ldi	r19, 0xFF	; 255
    490c:	4f e7       	ldi	r20, 0x7F	; 127
    490e:	5f e7       	ldi	r21, 0x7F	; 127
    4910:	c5 01       	movw	r24, r10
    4912:	b4 01       	movw	r22, r8
    4914:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    4918:	18 16       	cp	r1, r24
    491a:	1c f4       	brge	.+6      	; 0x4922 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x8a>
write():
    491c:	8a e0       	ldi	r24, 0x0A	; 10
    491e:	9a eb       	ldi	r25, 0xBA	; 186
    4920:	d5 cf       	rjmp	.-86     	; 0x48cc <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x34>
printFloat():
    4922:	2f ef       	ldi	r18, 0xFF	; 255
    4924:	3f ef       	ldi	r19, 0xFF	; 255
    4926:	4f e7       	ldi	r20, 0x7F	; 127
    4928:	5f e4       	ldi	r21, 0x4F	; 79
    492a:	c7 01       	movw	r24, r14
    492c:	b6 01       	movw	r22, r12
    492e:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    4932:	18 16       	cp	r1, r24
    4934:	1c f4       	brge	.+6      	; 0x493c <Print::printFloat(double, unsigned char) [clone .constprop.16]+0xa4>
write():
    4936:	8e e0       	ldi	r24, 0x0E	; 14
    4938:	9a eb       	ldi	r25, 0xBA	; 186
    493a:	c8 cf       	rjmp	.-112    	; 0x48cc <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x34>
printFloat():
    493c:	2f ef       	ldi	r18, 0xFF	; 255
    493e:	3f ef       	ldi	r19, 0xFF	; 255
    4940:	4f e7       	ldi	r20, 0x7F	; 127
    4942:	5f ec       	ldi	r21, 0xCF	; 207
    4944:	c7 01       	movw	r24, r14
    4946:	b6 01       	movw	r22, r12
    4948:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    494c:	87 fd       	sbrc	r24, 7
    494e:	f3 cf       	rjmp	.-26     	; 0x4936 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x9e>
    4950:	20 e0       	ldi	r18, 0x00	; 0
    4952:	30 e0       	ldi	r19, 0x00	; 0
    4954:	a9 01       	movw	r20, r18
    4956:	c7 01       	movw	r24, r14
    4958:	b6 01       	movw	r22, r12
    495a:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    495e:	10 e0       	ldi	r17, 0x00	; 0
    4960:	00 e0       	ldi	r16, 0x00	; 0
    4962:	87 ff       	sbrs	r24, 7
    4964:	0a c0       	rjmp	.+20     	; 0x497a <Print::printFloat(double, unsigned char) [clone .constprop.16]+0xe2>
print():
    4966:	6d e2       	ldi	r22, 0x2D	; 45
    4968:	85 e5       	ldi	r24, 0x55	; 85
    496a:	99 e2       	ldi	r25, 0x29	; 41
    496c:	0e 94 10 07 	call	0xe20	; 0xe20 <UartClass::write(unsigned char)>
    4970:	8c 01       	movw	r16, r24
printFloat():
    4972:	f7 fa       	bst	r15, 7
    4974:	f0 94       	com	r15
    4976:	f7 f8       	bld	r15, 7
    4978:	f0 94       	com	r15
    497a:	c0 e0       	ldi	r28, 0x00	; 0
    497c:	60 e0       	ldi	r22, 0x00	; 0
    497e:	70 e0       	ldi	r23, 0x00	; 0
    4980:	80 e0       	ldi	r24, 0x00	; 0
    4982:	9f e3       	ldi	r25, 0x3F	; 63
    4984:	7c 16       	cp	r7, r28
    4986:	41 f0       	breq	.+16     	; 0x4998 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x100>
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	30 e0       	ldi	r19, 0x00	; 0
    498c:	40 e2       	ldi	r20, 0x20	; 32
    498e:	51 e4       	ldi	r21, 0x41	; 65
    4990:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4994:	cf 5f       	subi	r28, 0xFF	; 255
    4996:	f6 cf       	rjmp	.-20     	; 0x4984 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0xec>
    4998:	a7 01       	movw	r20, r14
    499a:	96 01       	movw	r18, r12
    499c:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    49a0:	2b 01       	movw	r4, r22
    49a2:	3c 01       	movw	r6, r24
    49a4:	0e 94 6c 3a 	call	0x74d8	; 0x74d8 <__fixunssfsi>
    49a8:	4b 01       	movw	r8, r22
    49aa:	5c 01       	movw	r10, r24
print():
    49ac:	4a e0       	ldi	r20, 0x0A	; 10
    49ae:	37 df       	rcall	.-402    	; 0x481e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]>
printFloat():
    49b0:	7c 01       	movw	r14, r24
    49b2:	e0 0e       	add	r14, r16
    49b4:	f1 1e       	adc	r15, r17
    49b6:	cc 23       	and	r28, r28
    49b8:	a9 f1       	breq	.+106    	; 0x4a24 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x18c>
    49ba:	c5 01       	movw	r24, r10
    49bc:	b4 01       	movw	r22, r8
    49be:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
    49c2:	9b 01       	movw	r18, r22
    49c4:	ac 01       	movw	r20, r24
    49c6:	c3 01       	movw	r24, r6
    49c8:	b2 01       	movw	r22, r4
    49ca:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    49ce:	4b 01       	movw	r8, r22
    49d0:	5c 01       	movw	r10, r24
write():
    49d2:	82 e1       	ldi	r24, 0x12	; 18
    49d4:	9a eb       	ldi	r25, 0xBA	; 186
    49d6:	16 df       	rcall	.-468    	; 0x4804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>
printFloat():
    49d8:	e8 0e       	add	r14, r24
    49da:	f9 1e       	adc	r15, r25
    49dc:	c1 50       	subi	r28, 0x01	; 1
    49de:	10 f1       	brcs	.+68     	; 0x4a24 <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x18c>
    49e0:	20 e0       	ldi	r18, 0x00	; 0
    49e2:	30 e0       	ldi	r19, 0x00	; 0
    49e4:	40 e2       	ldi	r20, 0x20	; 32
    49e6:	51 e4       	ldi	r21, 0x41	; 65
    49e8:	c5 01       	movw	r24, r10
    49ea:	b4 01       	movw	r22, r8
    49ec:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    49f0:	2b 01       	movw	r4, r22
    49f2:	3c 01       	movw	r6, r24
    49f4:	0e 94 6c 3a 	call	0x74d8	; 0x74d8 <__fixunssfsi>
print():
    49f8:	4b 01       	movw	r8, r22
    49fa:	b1 2c       	mov	r11, r1
    49fc:	a1 2c       	mov	r10, r1
    49fe:	4a e0       	ldi	r20, 0x0A	; 10
    4a00:	c5 01       	movw	r24, r10
    4a02:	b4 01       	movw	r22, r8
    4a04:	0c df       	rcall	.-488    	; 0x481e <Print::printNumber(unsigned long, unsigned char) [clone .constprop.21]>
printFloat():
    4a06:	e8 0e       	add	r14, r24
    4a08:	f9 1e       	adc	r15, r25
    4a0a:	c5 01       	movw	r24, r10
    4a0c:	b4 01       	movw	r22, r8
    4a0e:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
    4a12:	9b 01       	movw	r18, r22
    4a14:	ac 01       	movw	r20, r24
    4a16:	c3 01       	movw	r24, r6
    4a18:	b2 01       	movw	r22, r4
    4a1a:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    4a1e:	4b 01       	movw	r8, r22
    4a20:	5c 01       	movw	r10, r24
    4a22:	dc cf       	rjmp	.-72     	; 0x49dc <Print::printFloat(double, unsigned char) [clone .constprop.16]+0x144>
    4a24:	c7 01       	movw	r24, r14
    4a26:	cf 91       	pop	r28
    4a28:	1f 91       	pop	r17
    4a2a:	0f 91       	pop	r16
    4a2c:	ff 90       	pop	r15
    4a2e:	ef 90       	pop	r14
    4a30:	df 90       	pop	r13
    4a32:	cf 90       	pop	r12
    4a34:	bf 90       	pop	r11
    4a36:	af 90       	pop	r10
    4a38:	9f 90       	pop	r9
    4a3a:	8f 90       	pop	r8
    4a3c:	7f 90       	pop	r7
    4a3e:	6f 90       	pop	r6
    4a40:	5f 90       	pop	r5
    4a42:	4f 90       	pop	r4
    4a44:	08 95       	ret

00004a46 <RTD_TEMP_CAL()>:
RTD_TEMP_CAL():
    4a46:	8f 92       	push	r8
    4a48:	9f 92       	push	r9
    4a4a:	af 92       	push	r10
    4a4c:	bf 92       	push	r11
    4a4e:	cf 92       	push	r12
    4a50:	df 92       	push	r13
    4a52:	ef 92       	push	r14
    4a54:	ff 92       	push	r15
    4a56:	cf 93       	push	r28
    4a58:	df 93       	push	r29
    4a5a:	c0 91 37 28 	lds	r28, 0x2837	; 0x802837 <sample>
    4a5e:	d0 91 38 28 	lds	r29, 0x2838	; 0x802838 <sample+0x1>
    4a62:	21 96       	adiw	r28, 0x01	; 1
    4a64:	c0 93 37 28 	sts	0x2837, r28	; 0x802837 <sample>
    4a68:	d0 93 38 28 	sts	0x2838, r29	; 0x802838 <sample+0x1>
analogRead():
    4a6c:	81 e0       	ldi	r24, 0x01	; 1
    4a6e:	80 93 06 06 	sts	0x0606, r24	; 0x800606 <__TEXT_REGION_LENGTH__+0x7f4606>
    4a72:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>
    4a76:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
    4a7a:	80 ff       	sbrs	r24, 0
    4a7c:	fc cf       	rjmp	.-8      	; 0x4a76 <RTD_TEMP_CAL()+0x30>
    4a7e:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
    4a82:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
RTD_TEMP_CAL():
    4a86:	07 2e       	mov	r0, r23
    4a88:	00 0c       	add	r0, r0
    4a8a:	88 0b       	sbc	r24, r24
    4a8c:	99 0b       	sbc	r25, r25
    4a8e:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    4a92:	20 91 33 28 	lds	r18, 0x2833	; 0x802833 <TotalVout>
    4a96:	30 91 34 28 	lds	r19, 0x2834	; 0x802834 <TotalVout+0x1>
    4a9a:	40 91 35 28 	lds	r20, 0x2835	; 0x802835 <TotalVout+0x2>
    4a9e:	50 91 36 28 	lds	r21, 0x2836	; 0x802836 <TotalVout+0x3>
    4aa2:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    4aa6:	6b 01       	movw	r12, r22
    4aa8:	7c 01       	movw	r14, r24
    4aaa:	c0 92 33 28 	sts	0x2833, r12	; 0x802833 <TotalVout>
    4aae:	d0 92 34 28 	sts	0x2834, r13	; 0x802834 <TotalVout+0x1>
    4ab2:	e0 92 35 28 	sts	0x2835, r14	; 0x802835 <TotalVout+0x2>
    4ab6:	f0 92 36 28 	sts	0x2836, r15	; 0x802836 <TotalVout+0x3>
    4aba:	60 91 00 28 	lds	r22, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
    4abe:	70 91 01 28 	lds	r23, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    4ac2:	c6 17       	cp	r28, r22
    4ac4:	d7 07       	cpc	r29, r23
    4ac6:	0c f4       	brge	.+2      	; 0x4aca <RTD_TEMP_CAL()+0x84>
    4ac8:	90 c0       	rjmp	.+288    	; 0x4bea <RTD_TEMP_CAL()+0x1a4>
    4aca:	07 2e       	mov	r0, r23
    4acc:	00 0c       	add	r0, r0
    4ace:	88 0b       	sbc	r24, r24
    4ad0:	99 0b       	sbc	r25, r25
    4ad2:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    4ad6:	9b 01       	movw	r18, r22
    4ad8:	ac 01       	movw	r20, r24
    4ada:	c7 01       	movw	r24, r14
    4adc:	b6 01       	movw	r22, r12
    4ade:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4ae2:	60 93 33 28 	sts	0x2833, r22	; 0x802833 <TotalVout>
    4ae6:	70 93 34 28 	sts	0x2834, r23	; 0x802834 <TotalVout+0x1>
    4aea:	80 93 35 28 	sts	0x2835, r24	; 0x802835 <TotalVout+0x2>
    4aee:	90 93 36 28 	sts	0x2836, r25	; 0x802836 <TotalVout+0x3>
    4af2:	20 e0       	ldi	r18, 0x00	; 0
    4af4:	30 e0       	ldi	r19, 0x00	; 0
    4af6:	40 ea       	ldi	r20, 0xA0	; 160
    4af8:	50 e4       	ldi	r21, 0x40	; 64
    4afa:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    4afe:	20 e0       	ldi	r18, 0x00	; 0
    4b00:	30 ec       	ldi	r19, 0xC0	; 192
    4b02:	4f e7       	ldi	r20, 0x7F	; 127
    4b04:	54 e4       	ldi	r21, 0x44	; 68
    4b06:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4b0a:	20 e0       	ldi	r18, 0x00	; 0
    4b0c:	30 e0       	ldi	r19, 0x00	; 0
    4b0e:	40 e2       	ldi	r20, 0x20	; 32
    4b10:	51 e4       	ldi	r21, 0x41	; 65
    4b12:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4b16:	28 eb       	ldi	r18, 0xB8	; 184
    4b18:	3f e8       	ldi	r19, 0x8F	; 143
    4b1a:	40 e6       	ldi	r20, 0x60	; 96
    4b1c:	5f e3       	ldi	r21, 0x3F	; 63
    4b1e:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    4b22:	6b 01       	movw	r12, r22
    4b24:	7c 01       	movw	r14, r24
    4b26:	20 e0       	ldi	r18, 0x00	; 0
    4b28:	30 e0       	ldi	r19, 0x00	; 0
    4b2a:	4b ee       	ldi	r20, 0xEB	; 235
    4b2c:	53 e4       	ldi	r21, 0x43	; 67
    4b2e:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    4b32:	4b 01       	movw	r8, r22
    4b34:	5c 01       	movw	r10, r24
    4b36:	a7 01       	movw	r20, r14
    4b38:	96 01       	movw	r18, r12
    4b3a:	60 e0       	ldi	r22, 0x00	; 0
    4b3c:	70 e0       	ldi	r23, 0x00	; 0
    4b3e:	80 ea       	ldi	r24, 0xA0	; 160
    4b40:	90 e4       	ldi	r25, 0x40	; 64
    4b42:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    4b46:	9b 01       	movw	r18, r22
    4b48:	ac 01       	movw	r20, r24
    4b4a:	c5 01       	movw	r24, r10
    4b4c:	b4 01       	movw	r22, r8
    4b4e:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4b52:	20 e0       	ldi	r18, 0x00	; 0
    4b54:	30 e0       	ldi	r19, 0x00	; 0
    4b56:	48 ec       	ldi	r20, 0xC8	; 200
    4b58:	52 e4       	ldi	r21, 0x42	; 66
    4b5a:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4b5e:	20 e0       	ldi	r18, 0x00	; 0
    4b60:	30 e0       	ldi	r19, 0x00	; 0
    4b62:	40 e8       	ldi	r20, 0x80	; 128
    4b64:	5f e3       	ldi	r21, 0x3F	; 63
    4b66:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    4b6a:	28 e4       	ldi	r18, 0x48	; 72
    4b6c:	30 e5       	ldi	r19, 0x50	; 80
    4b6e:	4c e7       	ldi	r20, 0x7C	; 124
    4b70:	5b e3       	ldi	r21, 0x3B	; 59
    4b72:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    4b76:	60 93 f2 28 	sts	0x28F2, r22	; 0x8028f2 <TEMP_DEG_RAW>
    4b7a:	70 93 f3 28 	sts	0x28F3, r23	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    4b7e:	80 93 f4 28 	sts	0x28F4, r24	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    4b82:	90 93 f5 28 	sts	0x28F5, r25	; 0x8028f5 <TEMP_DEG_RAW+0x3>
print():
    4b86:	42 e0       	ldi	r20, 0x02	; 2
    4b88:	87 de       	rcall	.-754    	; 0x4898 <Print::printFloat(double, unsigned char) [clone .constprop.16]>
write():
    4b8a:	84 e1       	ldi	r24, 0x14	; 20
    4b8c:	9a eb       	ldi	r25, 0xBA	; 186
    4b8e:	3a de       	rcall	.-908    	; 0x4804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>
print():
    4b90:	60 91 2f 28 	lds	r22, 0x282F	; 0x80282f <TEMP_DEG_RAW_1>
    4b94:	70 91 30 28 	lds	r23, 0x2830	; 0x802830 <TEMP_DEG_RAW_1+0x1>
    4b98:	80 91 31 28 	lds	r24, 0x2831	; 0x802831 <TEMP_DEG_RAW_1+0x2>
    4b9c:	90 91 32 28 	lds	r25, 0x2832	; 0x802832 <TEMP_DEG_RAW_1+0x3>
    4ba0:	42 e0       	ldi	r20, 0x02	; 2
    4ba2:	7a de       	rcall	.-780    	; 0x4898 <Print::printFloat(double, unsigned char) [clone .constprop.16]>
write():
    4ba4:	86 e1       	ldi	r24, 0x16	; 22
    4ba6:	9a eb       	ldi	r25, 0xBA	; 186
    4ba8:	2d de       	rcall	.-934    	; 0x4804 <Print::write(char const*) [clone .part.2] [clone .constprop.25]>
RTD_TEMP_CAL():
    4baa:	26 e6       	ldi	r18, 0x66	; 102
    4bac:	36 e6       	ldi	r19, 0x66	; 102
    4bae:	46 ee       	ldi	r20, 0xE6	; 230
    4bb0:	5f e3       	ldi	r21, 0x3F	; 63
    4bb2:	60 91 f2 28 	lds	r22, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    4bb6:	70 91 f3 28 	lds	r23, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    4bba:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    4bbe:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    4bc2:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    4bc6:	20 e0       	ldi	r18, 0x00	; 0
    4bc8:	30 e0       	ldi	r19, 0x00	; 0
    4bca:	40 e0       	ldi	r20, 0x00	; 0
    4bcc:	52 e4       	ldi	r21, 0x42	; 66
    4bce:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    4bd2:	60 93 de 28 	sts	0x28DE, r22	; 0x8028de <TEMP_FAH_RAW>
    4bd6:	70 93 df 28 	sts	0x28DF, r23	; 0x8028df <TEMP_FAH_RAW+0x1>
    4bda:	80 93 e0 28 	sts	0x28E0, r24	; 0x8028e0 <TEMP_FAH_RAW+0x2>
    4bde:	90 93 e1 28 	sts	0x28E1, r25	; 0x8028e1 <TEMP_FAH_RAW+0x3>
    4be2:	10 92 37 28 	sts	0x2837, r1	; 0x802837 <sample>
    4be6:	10 92 38 28 	sts	0x2838, r1	; 0x802838 <sample+0x1>
    4bea:	82 e3       	ldi	r24, 0x32	; 50
    4bec:	90 e0       	ldi	r25, 0x00	; 0
    4bee:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
    4bf2:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
    4bf6:	df 91       	pop	r29
    4bf8:	cf 91       	pop	r28
    4bfa:	ff 90       	pop	r15
    4bfc:	ef 90       	pop	r14
    4bfe:	df 90       	pop	r13
    4c00:	cf 90       	pop	r12
    4c02:	bf 90       	pop	r11
    4c04:	af 90       	pop	r10
    4c06:	9f 90       	pop	r9
    4c08:	8f 90       	pop	r8
    4c0a:	08 95       	ret

00004c0c <__vector_32>:
__vector_32():
    4c0c:	1f 92       	push	r1
    4c0e:	0f 92       	push	r0
    4c10:	0f b6       	in	r0, 0x3f	; 63
    4c12:	0f 92       	push	r0
    4c14:	11 24       	eor	r1, r1
    4c16:	2f 93       	push	r18
    4c18:	3f 93       	push	r19
    4c1a:	4f 93       	push	r20
    4c1c:	5f 93       	push	r21
    4c1e:	6f 93       	push	r22
    4c20:	7f 93       	push	r23
    4c22:	8f 93       	push	r24
    4c24:	9f 93       	push	r25
    4c26:	af 93       	push	r26
    4c28:	bf 93       	push	r27
    4c2a:	ef 93       	push	r30
    4c2c:	ff 93       	push	r31
    4c2e:	85 e5       	ldi	r24, 0x55	; 85
    4c30:	99 e2       	ldi	r25, 0x29	; 41
    4c32:	0e 94 cc 06 	call	0xd98	; 0xd98 <UartClass::_tx_data_empty_irq()>
    4c36:	ff 91       	pop	r31
    4c38:	ef 91       	pop	r30
    4c3a:	bf 91       	pop	r27
    4c3c:	af 91       	pop	r26
    4c3e:	9f 91       	pop	r25
    4c40:	8f 91       	pop	r24
    4c42:	7f 91       	pop	r23
    4c44:	6f 91       	pop	r22
    4c46:	5f 91       	pop	r21
    4c48:	4f 91       	pop	r20
    4c4a:	3f 91       	pop	r19
    4c4c:	2f 91       	pop	r18
    4c4e:	0f 90       	pop	r0
    4c50:	0f be       	out	0x3f, r0	; 63
    4c52:	0f 90       	pop	r0
    4c54:	1f 90       	pop	r1
    4c56:	18 95       	reti

00004c58 <__vector_31>:
__vector_31():
    4c58:	1f 92       	push	r1
    4c5a:	0f 92       	push	r0
    4c5c:	0f b6       	in	r0, 0x3f	; 63
    4c5e:	0f 92       	push	r0
    4c60:	11 24       	eor	r1, r1
    4c62:	2f 93       	push	r18
    4c64:	8f 93       	push	r24
    4c66:	9f 93       	push	r25
    4c68:	ef 93       	push	r30
    4c6a:	ff 93       	push	r31
_rx_complete_irq():
    4c6c:	e0 91 61 29 	lds	r30, 0x2961	; 0x802961 <Serial2+0xc>
    4c70:	f0 91 62 29 	lds	r31, 0x2962	; 0x802962 <Serial2+0xd>
    4c74:	81 81       	ldd	r24, Z+1	; 0x01
    4c76:	81 fd       	sbrc	r24, 1
    4c78:	1b c0       	rjmp	.+54     	; 0x4cb0 <__vector_31+0x58>
    4c7a:	90 81       	ld	r25, Z
    4c7c:	80 91 6b 29 	lds	r24, 0x296B	; 0x80296b <Serial2+0x16>
    4c80:	8f 5f       	subi	r24, 0xFF	; 255
    4c82:	8f 73       	andi	r24, 0x3F	; 63
    4c84:	20 91 6c 29 	lds	r18, 0x296C	; 0x80296c <Serial2+0x17>
    4c88:	82 17       	cp	r24, r18
    4c8a:	41 f0       	breq	.+16     	; 0x4c9c <__vector_31+0x44>
    4c8c:	e0 91 6b 29 	lds	r30, 0x296B	; 0x80296b <Serial2+0x16>
    4c90:	f0 e0       	ldi	r31, 0x00	; 0
    4c92:	eb 5a       	subi	r30, 0xAB	; 171
    4c94:	f6 4d       	sbci	r31, 0xD6	; 214
    4c96:	95 8f       	std	Z+29, r25	; 0x1d
    4c98:	80 93 6b 29 	sts	0x296B, r24	; 0x80296b <Serial2+0x16>
__vector_31():
    4c9c:	ff 91       	pop	r31
    4c9e:	ef 91       	pop	r30
    4ca0:	9f 91       	pop	r25
    4ca2:	8f 91       	pop	r24
    4ca4:	2f 91       	pop	r18
    4ca6:	0f 90       	pop	r0
    4ca8:	0f be       	out	0x3f, r0	; 63
    4caa:	0f 90       	pop	r0
    4cac:	1f 90       	pop	r1
    4cae:	18 95       	reti
_rx_complete_irq():
    4cb0:	80 81       	ld	r24, Z
    4cb2:	f4 cf       	rjmp	.-24     	; 0x4c9c <__vector_31+0x44>

00004cb4 <__vector_25>:
__vector_25():
    4cb4:	1f 92       	push	r1
    4cb6:	0f 92       	push	r0
    4cb8:	0f b6       	in	r0, 0x3f	; 63
    4cba:	0f 92       	push	r0
    4cbc:	11 24       	eor	r1, r1
    4cbe:	8f 93       	push	r24
    4cc0:	9f 93       	push	r25
    4cc2:	af 93       	push	r26
    4cc4:	bf 93       	push	r27
    4cc6:	80 91 3d 28 	lds	r24, 0x283D	; 0x80283d <timer_millis>
    4cca:	90 91 3e 28 	lds	r25, 0x283E	; 0x80283e <timer_millis+0x1>
    4cce:	a0 91 3f 28 	lds	r26, 0x283F	; 0x80283f <timer_millis+0x2>
    4cd2:	b0 91 40 28 	lds	r27, 0x2840	; 0x802840 <timer_millis+0x3>
    4cd6:	01 96       	adiw	r24, 0x01	; 1
    4cd8:	a1 1d       	adc	r26, r1
    4cda:	b1 1d       	adc	r27, r1
    4cdc:	80 93 3d 28 	sts	0x283D, r24	; 0x80283d <timer_millis>
    4ce0:	90 93 3e 28 	sts	0x283E, r25	; 0x80283e <timer_millis+0x1>
    4ce4:	a0 93 3f 28 	sts	0x283F, r26	; 0x80283f <timer_millis+0x2>
    4ce8:	b0 93 40 28 	sts	0x2840, r27	; 0x802840 <timer_millis+0x3>
    4cec:	81 e0       	ldi	r24, 0x01	; 1
    4cee:	80 93 a6 0a 	sts	0x0AA6, r24	; 0x800aa6 <__TEXT_REGION_LENGTH__+0x7f4aa6>
    4cf2:	bf 91       	pop	r27
    4cf4:	af 91       	pop	r26
    4cf6:	9f 91       	pop	r25
    4cf8:	8f 91       	pop	r24
    4cfa:	0f 90       	pop	r0
    4cfc:	0f be       	out	0x3f, r0	; 63
    4cfe:	0f 90       	pop	r0
    4d00:	1f 90       	pop	r1
    4d02:	18 95       	reti

00004d04 <__vector_7>:
__vector_7():
    4d04:	1f 92       	push	r1
    4d06:	0f 92       	push	r0
    4d08:	0f b6       	in	r0, 0x3f	; 63
    4d0a:	0f 92       	push	r0
    4d0c:	11 24       	eor	r1, r1
    4d0e:	2f 93       	push	r18
    4d10:	3f 93       	push	r19
    4d12:	4f 93       	push	r20
    4d14:	5f 93       	push	r21
    4d16:	6f 93       	push	r22
    4d18:	7f 93       	push	r23
    4d1a:	8f 93       	push	r24
    4d1c:	9f 93       	push	r25
    4d1e:	af 93       	push	r26
    4d20:	bf 93       	push	r27
    4d22:	ef 93       	push	r30
    4d24:	ff 93       	push	r31
TICKER_UPDATE():
    4d26:	84 ec       	ldi	r24, 0xC4	; 196
    4d28:	9b e2       	ldi	r25, 0x2B	; 43
    4d2a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
PID_Tick_Update():
    4d2e:	8c ee       	ldi	r24, 0xEC	; 236
    4d30:	9a e2       	ldi	r25, 0x2A	; 42
    4d32:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
Rtd_Temp_Update():
    4d36:	8d e3       	ldi	r24, 0x3D	; 61
    4d38:	9b e2       	ldi	r25, 0x2B	; 43
    4d3a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
Rtd_Temp_Update_1():
    4d3e:	82 e2       	ldi	r24, 0x22	; 34
    4d40:	9b e2       	ldi	r25, 0x2B	; 43
    4d42:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
TICKER_UPDATE():
    4d46:	89 ea       	ldi	r24, 0xA9	; 169
    4d48:	9b e2       	ldi	r25, 0x2B	; 43
    4d4a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    4d4e:	8e e8       	ldi	r24, 0x8E	; 142
    4d50:	9b e2       	ldi	r25, 0x2B	; 43
    4d52:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    4d56:	83 e7       	ldi	r24, 0x73	; 115
    4d58:	9b e2       	ldi	r25, 0x2B	; 43
    4d5a:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    4d5e:	88 e5       	ldi	r24, 0x58	; 88
    4d60:	9b e2       	ldi	r25, 0x2B	; 43
    4d62:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
__vector_7():
    4d66:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    4d6a:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    4d6e:	01 96       	adiw	r24, 0x01	; 1
    4d70:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    4d74:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
TIME_CAL():
    4d78:	80 91 a5 28 	lds	r24, 0x28A5	; 0x8028a5 <COUNTDOWN_START>
    4d7c:	88 23       	and	r24, r24
    4d7e:	81 f1       	breq	.+96     	; 0x4de0 <__vector_7+0xdc>
    4d80:	80 91 18 28 	lds	r24, 0x2818	; 0x802818 <__data_end>
    4d84:	90 91 19 28 	lds	r25, 0x2819	; 0x802819 <__data_end+0x1>
    4d88:	01 96       	adiw	r24, 0x01	; 1
    4d8a:	80 93 18 28 	sts	0x2818, r24	; 0x802818 <__data_end>
    4d8e:	90 93 19 28 	sts	0x2819, r25	; 0x802819 <__data_end+0x1>
    4d92:	80 3b       	cpi	r24, 0xB0	; 176
    4d94:	9e 40       	sbci	r25, 0x0E	; 14
    4d96:	21 f5       	brne	.+72     	; 0x4de0 <__vector_7+0xdc>
    4d98:	80 91 49 28 	lds	r24, 0x2849	; 0x802849 <actualRunMin>
    4d9c:	90 91 4a 28 	lds	r25, 0x284A	; 0x80284a <actualRunMin+0x1>
    4da0:	a0 91 4b 28 	lds	r26, 0x284B	; 0x80284b <actualRunMin+0x2>
    4da4:	b0 91 4c 28 	lds	r27, 0x284C	; 0x80284c <actualRunMin+0x3>
    4da8:	01 96       	adiw	r24, 0x01	; 1
    4daa:	a1 1d       	adc	r26, r1
    4dac:	b1 1d       	adc	r27, r1
    4dae:	80 93 49 28 	sts	0x2849, r24	; 0x802849 <actualRunMin>
    4db2:	90 93 4a 28 	sts	0x284A, r25	; 0x80284a <actualRunMin+0x1>
    4db6:	a0 93 4b 28 	sts	0x284B, r26	; 0x80284b <actualRunMin+0x2>
    4dba:	b0 93 4c 28 	sts	0x284C, r27	; 0x80284c <actualRunMin+0x3>
    4dbe:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <SET_MIN>
    4dc2:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <SET_MIN+0x1>
    4dc6:	01 97       	sbiw	r24, 0x01	; 1
    4dc8:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <SET_MIN>
    4dcc:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <SET_MIN+0x1>
    4dd0:	10 92 18 28 	sts	0x2818, r1	; 0x802818 <__data_end>
    4dd4:	10 92 19 28 	sts	0x2819, r1	; 0x802819 <__data_end+0x1>
    4dd8:	89 2b       	or	r24, r25
    4dda:	11 f4       	brne	.+4      	; 0x4de0 <__vector_7+0xdc>
    4ddc:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <COUNTDOWN_START>
__vector_7():
    4de0:	80 91 c3 28 	lds	r24, 0x28C3	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    4de4:	88 23       	and	r24, r24
    4de6:	79 f0       	breq	.+30     	; 0x4e06 <__vector_7+0x102>
    4de8:	80 91 09 28 	lds	r24, 0x2809	; 0x802809 <SELECTION_PARAMETER>
    4dec:	90 91 0a 28 	lds	r25, 0x280A	; 0x80280a <SELECTION_PARAMETER+0x1>
    4df0:	43 97       	sbiw	r24, 0x13	; 19
    4df2:	49 f4       	brne	.+18     	; 0x4e06 <__vector_7+0x102>
    4df4:	80 91 ab 28 	lds	r24, 0x28AB	; 0x8028ab <currentMillis>
    4df8:	90 91 ac 28 	lds	r25, 0x28AC	; 0x8028ac <currentMillis+0x1>
    4dfc:	01 96       	adiw	r24, 0x01	; 1
    4dfe:	80 93 ab 28 	sts	0x28AB, r24	; 0x8028ab <currentMillis>
    4e02:	90 93 ac 28 	sts	0x28AC, r25	; 0x8028ac <currentMillis+0x1>
    4e06:	81 e0       	ldi	r24, 0x01	; 1
    4e08:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
    4e0c:	ff 91       	pop	r31
    4e0e:	ef 91       	pop	r30
    4e10:	bf 91       	pop	r27
    4e12:	af 91       	pop	r26
    4e14:	9f 91       	pop	r25
    4e16:	8f 91       	pop	r24
    4e18:	7f 91       	pop	r23
    4e1a:	6f 91       	pop	r22
    4e1c:	5f 91       	pop	r21
    4e1e:	4f 91       	pop	r20
    4e20:	3f 91       	pop	r19
    4e22:	2f 91       	pop	r18
    4e24:	0f 90       	pop	r0
    4e26:	0f be       	out	0x3f, r0	; 63
    4e28:	0f 90       	pop	r0
    4e2a:	1f 90       	pop	r1
    4e2c:	18 95       	reti

00004e2e <global constructors keyed to 65535_0_Butn.cpp.o.4275>:
_GLOBAL__I_65535_0_Butn.cpp.o.4275():
    4e2e:	4f 92       	push	r4
    4e30:	5f 92       	push	r5
    4e32:	6f 92       	push	r6
    4e34:	7f 92       	push	r7
    4e36:	8f 92       	push	r8
    4e38:	9f 92       	push	r9
    4e3a:	af 92       	push	r10
    4e3c:	bf 92       	push	r11
    4e3e:	cf 92       	push	r12
    4e40:	df 92       	push	r13
    4e42:	ef 92       	push	r14
    4e44:	ff 92       	push	r15
    4e46:	10 92 57 29 	sts	0x2957, r1	; 0x802957 <Serial2+0x2>
    4e4a:	10 92 58 29 	sts	0x2958, r1	; 0x802958 <Serial2+0x3>
    4e4e:	88 ee       	ldi	r24, 0xE8	; 232
    4e50:	93 e0       	ldi	r25, 0x03	; 3
    4e52:	a0 e0       	ldi	r26, 0x00	; 0
    4e54:	b0 e0       	ldi	r27, 0x00	; 0
    4e56:	80 93 59 29 	sts	0x2959, r24	; 0x802959 <Serial2+0x4>
    4e5a:	90 93 5a 29 	sts	0x295A, r25	; 0x80295a <Serial2+0x5>
    4e5e:	a0 93 5b 29 	sts	0x295B, r26	; 0x80295b <Serial2+0x6>
    4e62:	b0 93 5c 29 	sts	0x295C, r27	; 0x80295c <Serial2+0x7>
    4e66:	8c ee       	ldi	r24, 0xEC	; 236
    4e68:	99 eb       	ldi	r25, 0xB9	; 185
    4e6a:	80 93 55 29 	sts	0x2955, r24	; 0x802955 <Serial2>
    4e6e:	90 93 56 29 	sts	0x2956, r25	; 0x802956 <Serial2+0x1>
    4e72:	80 e4       	ldi	r24, 0x40	; 64
    4e74:	98 e0       	ldi	r25, 0x08	; 8
    4e76:	80 93 61 29 	sts	0x2961, r24	; 0x802961 <Serial2+0xc>
    4e7a:	90 93 62 29 	sts	0x2962, r25	; 0x802962 <Serial2+0xd>
    4e7e:	83 e2       	ldi	r24, 0x23	; 35
    4e80:	80 93 63 29 	sts	0x2963, r24	; 0x802963 <Serial2+0xe>
    4e84:	82 e2       	ldi	r24, 0x22	; 34
    4e86:	80 93 64 29 	sts	0x2964, r24	; 0x802964 <Serial2+0xf>
    4e8a:	10 92 65 29 	sts	0x2965, r1	; 0x802965 <Serial2+0x10>
    4e8e:	87 e2       	ldi	r24, 0x27	; 39
    4e90:	80 93 66 29 	sts	0x2966, r24	; 0x802966 <Serial2+0x11>
    4e94:	86 e2       	ldi	r24, 0x26	; 38
    4e96:	80 93 67 29 	sts	0x2967, r24	; 0x802967 <Serial2+0x12>
    4e9a:	80 e1       	ldi	r24, 0x10	; 16
    4e9c:	80 93 68 29 	sts	0x2968, r24	; 0x802968 <Serial2+0x13>
    4ea0:	10 92 69 29 	sts	0x2969, r1	; 0x802969 <Serial2+0x14>
    4ea4:	10 92 6a 29 	sts	0x296A, r1	; 0x80296a <Serial2+0x15>
    4ea8:	10 92 6b 29 	sts	0x296B, r1	; 0x80296b <Serial2+0x16>
    4eac:	10 92 6c 29 	sts	0x296C, r1	; 0x80296c <Serial2+0x17>
    4eb0:	10 92 6d 29 	sts	0x296D, r1	; 0x80296d <Serial2+0x18>
    4eb4:	10 92 6e 29 	sts	0x296E, r1	; 0x80296e <Serial2+0x19>
    4eb8:	80 e2       	ldi	r24, 0x20	; 32
    4eba:	80 93 6f 29 	sts	0x296F, r24	; 0x80296f <Serial2+0x1a>
    4ebe:	10 92 70 29 	sts	0x2970, r1	; 0x802970 <Serial2+0x1b>
    4ec2:	10 92 71 29 	sts	0x2971, r1	; 0x802971 <Serial2+0x1c>
    4ec6:	82 e0       	ldi	r24, 0x02	; 2
    4ec8:	90 e0       	ldi	r25, 0x00	; 0
    4eca:	80 93 e8 2b 	sts	0x2BE8, r24	; 0x802be8 <DISP+0x9>
    4ece:	90 93 e9 2b 	sts	0x2BE9, r25	; 0x802be9 <DISP+0xa>
    4ed2:	80 e8       	ldi	r24, 0x80	; 128
    4ed4:	9c e0       	ldi	r25, 0x0C	; 12
    4ed6:	a0 e0       	ldi	r26, 0x00	; 0
    4ed8:	b0 e0       	ldi	r27, 0x00	; 0
    4eda:	80 93 e0 2b 	sts	0x2BE0, r24	; 0x802be0 <DISP+0x1>
    4ede:	90 93 e1 2b 	sts	0x2BE1, r25	; 0x802be1 <DISP+0x2>
    4ee2:	a0 93 e2 2b 	sts	0x2BE2, r26	; 0x802be2 <DISP+0x3>
    4ee6:	b0 93 e3 2b 	sts	0x2BE3, r27	; 0x802be3 <DISP+0x4>
    4eea:	10 92 e4 2b 	sts	0x2BE4, r1	; 0x802be4 <DISP+0x5>
    4eee:	10 92 e5 2b 	sts	0x2BE5, r1	; 0x802be5 <DISP+0x6>
    4ef2:	10 92 e6 2b 	sts	0x2BE6, r1	; 0x802be6 <DISP+0x7>
    4ef6:	10 92 e7 2b 	sts	0x2BE7, r1	; 0x802be7 <DISP+0x8>
    4efa:	85 e3       	ldi	r24, 0x35	; 53
    4efc:	93 e2       	ldi	r25, 0x23	; 35
    4efe:	80 93 f0 2b 	sts	0x2BF0, r24	; 0x802bf0 <DISP+0x11>
    4f02:	90 93 f1 2b 	sts	0x2BF1, r25	; 0x802bf1 <DISP+0x12>
    4f06:	10 92 df 2b 	sts	0x2BDF, r1	; 0x802bdf <DISP>
    4f0a:	10 92 f2 2b 	sts	0x2BF2, r1	; 0x802bf2 <DISP+0x13>
    4f0e:	10 92 f3 2b 	sts	0x2BF3, r1	; 0x802bf3 <DISP+0x14>
    4f12:	10 92 f4 2b 	sts	0x2BF4, r1	; 0x802bf4 <DISP+0x15>
    4f16:	10 92 f5 2b 	sts	0x2BF5, r1	; 0x802bf5 <DISP+0x16>
    4f1a:	10 92 ea 2b 	sts	0x2BEA, r1	; 0x802bea <DISP+0xb>
    4f1e:	10 92 eb 2b 	sts	0x2BEB, r1	; 0x802beb <DISP+0xc>
    4f22:	10 92 ec 2b 	sts	0x2BEC, r1	; 0x802bec <DISP+0xd>
    4f26:	10 92 ed 2b 	sts	0x2BED, r1	; 0x802bed <DISP+0xe>
    4f2a:	10 92 cd 2b 	sts	0x2BCD, r1	; 0x802bcd <BUZZ+0x9>
    4f2e:	10 92 ce 2b 	sts	0x2BCE, r1	; 0x802bce <BUZZ+0xa>
    4f32:	80 ea       	ldi	r24, 0xA0	; 160
    4f34:	96 e8       	ldi	r25, 0x86	; 134
    4f36:	a1 e0       	ldi	r26, 0x01	; 1
    4f38:	b0 e0       	ldi	r27, 0x00	; 0
    4f3a:	80 93 c5 2b 	sts	0x2BC5, r24	; 0x802bc5 <BUZZ+0x1>
    4f3e:	90 93 c6 2b 	sts	0x2BC6, r25	; 0x802bc6 <BUZZ+0x2>
    4f42:	a0 93 c7 2b 	sts	0x2BC7, r26	; 0x802bc7 <BUZZ+0x3>
    4f46:	b0 93 c8 2b 	sts	0x2BC8, r27	; 0x802bc8 <BUZZ+0x4>
    4f4a:	41 e0       	ldi	r20, 0x01	; 1
    4f4c:	50 e0       	ldi	r21, 0x00	; 0
    4f4e:	60 e0       	ldi	r22, 0x00	; 0
    4f50:	70 e0       	ldi	r23, 0x00	; 0
    4f52:	40 93 c9 2b 	sts	0x2BC9, r20	; 0x802bc9 <BUZZ+0x5>
    4f56:	50 93 ca 2b 	sts	0x2BCA, r21	; 0x802bca <BUZZ+0x6>
    4f5a:	60 93 cb 2b 	sts	0x2BCB, r22	; 0x802bcb <BUZZ+0x7>
    4f5e:	70 93 cc 2b 	sts	0x2BCC, r23	; 0x802bcc <BUZZ+0x8>
    4f62:	88 e1       	ldi	r24, 0x18	; 24
    4f64:	9c e0       	ldi	r25, 0x0C	; 12
    4f66:	80 93 d5 2b 	sts	0x2BD5, r24	; 0x802bd5 <BUZZ+0x11>
    4f6a:	90 93 d6 2b 	sts	0x2BD6, r25	; 0x802bd6 <BUZZ+0x12>
    4f6e:	10 92 c4 2b 	sts	0x2BC4, r1	; 0x802bc4 <BUZZ>
    4f72:	10 92 d7 2b 	sts	0x2BD7, r1	; 0x802bd7 <BUZZ+0x13>
    4f76:	10 92 d8 2b 	sts	0x2BD8, r1	; 0x802bd8 <BUZZ+0x14>
    4f7a:	10 92 d9 2b 	sts	0x2BD9, r1	; 0x802bd9 <BUZZ+0x15>
    4f7e:	10 92 da 2b 	sts	0x2BDA, r1	; 0x802bda <BUZZ+0x16>
    4f82:	10 92 cf 2b 	sts	0x2BCF, r1	; 0x802bcf <BUZZ+0xb>
    4f86:	10 92 d0 2b 	sts	0x2BD0, r1	; 0x802bd0 <BUZZ+0xc>
    4f8a:	10 92 d1 2b 	sts	0x2BD1, r1	; 0x802bd1 <BUZZ+0xd>
    4f8e:	10 92 d2 2b 	sts	0x2BD2, r1	; 0x802bd2 <BUZZ+0xe>
    4f92:	10 92 b2 2b 	sts	0x2BB2, r1	; 0x802bb2 <BUZZ_TICK1+0x9>
    4f96:	10 92 b3 2b 	sts	0x2BB3, r1	; 0x802bb3 <BUZZ_TICK1+0xa>
    4f9a:	80 e8       	ldi	r24, 0x80	; 128
    4f9c:	94 e8       	ldi	r25, 0x84	; 132
    4f9e:	ae e1       	ldi	r26, 0x1E	; 30
    4fa0:	b0 e0       	ldi	r27, 0x00	; 0
    4fa2:	80 93 aa 2b 	sts	0x2BAA, r24	; 0x802baa <BUZZ_TICK1+0x1>
    4fa6:	90 93 ab 2b 	sts	0x2BAB, r25	; 0x802bab <BUZZ_TICK1+0x2>
    4faa:	a0 93 ac 2b 	sts	0x2BAC, r26	; 0x802bac <BUZZ_TICK1+0x3>
    4fae:	b0 93 ad 2b 	sts	0x2BAD, r27	; 0x802bad <BUZZ_TICK1+0x4>
    4fb2:	10 92 ae 2b 	sts	0x2BAE, r1	; 0x802bae <BUZZ_TICK1+0x5>
    4fb6:	10 92 af 2b 	sts	0x2BAF, r1	; 0x802baf <BUZZ_TICK1+0x6>
    4fba:	10 92 b0 2b 	sts	0x2BB0, r1	; 0x802bb0 <BUZZ_TICK1+0x7>
    4fbe:	10 92 b1 2b 	sts	0x2BB1, r1	; 0x802bb1 <BUZZ_TICK1+0x8>
    4fc2:	24 e2       	ldi	r18, 0x24	; 36
    4fc4:	3c e0       	ldi	r19, 0x0C	; 12
    4fc6:	20 93 ba 2b 	sts	0x2BBA, r18	; 0x802bba <BUZZ_TICK1+0x11>
    4fca:	30 93 bb 2b 	sts	0x2BBB, r19	; 0x802bbb <BUZZ_TICK1+0x12>
    4fce:	10 92 a9 2b 	sts	0x2BA9, r1	; 0x802ba9 <BUZZ_TICK1>
    4fd2:	10 92 bc 2b 	sts	0x2BBC, r1	; 0x802bbc <BUZZ_TICK1+0x13>
    4fd6:	10 92 bd 2b 	sts	0x2BBD, r1	; 0x802bbd <BUZZ_TICK1+0x14>
    4fda:	10 92 be 2b 	sts	0x2BBE, r1	; 0x802bbe <BUZZ_TICK1+0x15>
    4fde:	10 92 bf 2b 	sts	0x2BBF, r1	; 0x802bbf <BUZZ_TICK1+0x16>
    4fe2:	10 92 b4 2b 	sts	0x2BB4, r1	; 0x802bb4 <BUZZ_TICK1+0xb>
    4fe6:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <BUZZ_TICK1+0xc>
    4fea:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <BUZZ_TICK1+0xd>
    4fee:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <BUZZ_TICK1+0xe>
    4ff2:	10 92 97 2b 	sts	0x2B97, r1	; 0x802b97 <BUZZ_TICK2+0x9>
    4ff6:	10 92 98 2b 	sts	0x2B98, r1	; 0x802b98 <BUZZ_TICK2+0xa>
    4ffa:	20 e4       	ldi	r18, 0x40	; 64
    4ffc:	c2 2e       	mov	r12, r18
    4ffe:	22 e4       	ldi	r18, 0x42	; 66
    5000:	d2 2e       	mov	r13, r18
    5002:	2f e0       	ldi	r18, 0x0F	; 15
    5004:	e2 2e       	mov	r14, r18
    5006:	f1 2c       	mov	r15, r1
    5008:	c0 92 8f 2b 	sts	0x2B8F, r12	; 0x802b8f <BUZZ_TICK2+0x1>
    500c:	d0 92 90 2b 	sts	0x2B90, r13	; 0x802b90 <BUZZ_TICK2+0x2>
    5010:	e0 92 91 2b 	sts	0x2B91, r14	; 0x802b91 <BUZZ_TICK2+0x3>
    5014:	f0 92 92 2b 	sts	0x2B92, r15	; 0x802b92 <BUZZ_TICK2+0x4>
    5018:	40 93 93 2b 	sts	0x2B93, r20	; 0x802b93 <BUZZ_TICK2+0x5>
    501c:	50 93 94 2b 	sts	0x2B94, r21	; 0x802b94 <BUZZ_TICK2+0x6>
    5020:	60 93 95 2b 	sts	0x2B95, r22	; 0x802b95 <BUZZ_TICK2+0x7>
    5024:	70 93 96 2b 	sts	0x2B96, r23	; 0x802b96 <BUZZ_TICK2+0x8>
    5028:	2a e2       	ldi	r18, 0x2A	; 42
    502a:	3c e0       	ldi	r19, 0x0C	; 12
    502c:	20 93 9f 2b 	sts	0x2B9F, r18	; 0x802b9f <BUZZ_TICK2+0x11>
    5030:	30 93 a0 2b 	sts	0x2BA0, r19	; 0x802ba0 <BUZZ_TICK2+0x12>
    5034:	10 92 8e 2b 	sts	0x2B8E, r1	; 0x802b8e <BUZZ_TICK2>
    5038:	10 92 a1 2b 	sts	0x2BA1, r1	; 0x802ba1 <BUZZ_TICK2+0x13>
    503c:	10 92 a2 2b 	sts	0x2BA2, r1	; 0x802ba2 <BUZZ_TICK2+0x14>
    5040:	10 92 a3 2b 	sts	0x2BA3, r1	; 0x802ba3 <BUZZ_TICK2+0x15>
    5044:	10 92 a4 2b 	sts	0x2BA4, r1	; 0x802ba4 <BUZZ_TICK2+0x16>
    5048:	10 92 99 2b 	sts	0x2B99, r1	; 0x802b99 <BUZZ_TICK2+0xb>
    504c:	10 92 9a 2b 	sts	0x2B9A, r1	; 0x802b9a <BUZZ_TICK2+0xc>
    5050:	10 92 9b 2b 	sts	0x2B9B, r1	; 0x802b9b <BUZZ_TICK2+0xd>
    5054:	10 92 9c 2b 	sts	0x2B9C, r1	; 0x802b9c <BUZZ_TICK2+0xe>
    5058:	10 92 7c 2b 	sts	0x2B7C, r1	; 0x802b7c <Blink_LED_ON+0x9>
    505c:	10 92 7d 2b 	sts	0x2B7D, r1	; 0x802b7d <Blink_LED_ON+0xa>
    5060:	40 ee       	ldi	r20, 0xE0	; 224
    5062:	53 e9       	ldi	r21, 0x93	; 147
    5064:	64 e0       	ldi	r22, 0x04	; 4
    5066:	70 e0       	ldi	r23, 0x00	; 0
    5068:	40 93 74 2b 	sts	0x2B74, r20	; 0x802b74 <Blink_LED_ON+0x1>
    506c:	50 93 75 2b 	sts	0x2B75, r21	; 0x802b75 <Blink_LED_ON+0x2>
    5070:	60 93 76 2b 	sts	0x2B76, r22	; 0x802b76 <Blink_LED_ON+0x3>
    5074:	70 93 77 2b 	sts	0x2B77, r23	; 0x802b77 <Blink_LED_ON+0x4>
    5078:	10 92 78 2b 	sts	0x2B78, r1	; 0x802b78 <Blink_LED_ON+0x5>
    507c:	10 92 79 2b 	sts	0x2B79, r1	; 0x802b79 <Blink_LED_ON+0x6>
    5080:	10 92 7a 2b 	sts	0x2B7A, r1	; 0x802b7a <Blink_LED_ON+0x7>
    5084:	10 92 7b 2b 	sts	0x2B7B, r1	; 0x802b7b <Blink_LED_ON+0x8>
    5088:	2a e4       	ldi	r18, 0x4A	; 74
    508a:	3c e0       	ldi	r19, 0x0C	; 12
    508c:	20 93 84 2b 	sts	0x2B84, r18	; 0x802b84 <Blink_LED_ON+0x11>
    5090:	30 93 85 2b 	sts	0x2B85, r19	; 0x802b85 <Blink_LED_ON+0x12>
    5094:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <Blink_LED_ON>
    5098:	10 92 86 2b 	sts	0x2B86, r1	; 0x802b86 <Blink_LED_ON+0x13>
    509c:	10 92 87 2b 	sts	0x2B87, r1	; 0x802b87 <Blink_LED_ON+0x14>
    50a0:	10 92 88 2b 	sts	0x2B88, r1	; 0x802b88 <Blink_LED_ON+0x15>
    50a4:	10 92 89 2b 	sts	0x2B89, r1	; 0x802b89 <Blink_LED_ON+0x16>
    50a8:	10 92 7e 2b 	sts	0x2B7E, r1	; 0x802b7e <Blink_LED_ON+0xb>
    50ac:	10 92 7f 2b 	sts	0x2B7F, r1	; 0x802b7f <Blink_LED_ON+0xc>
    50b0:	10 92 80 2b 	sts	0x2B80, r1	; 0x802b80 <Blink_LED_ON+0xd>
    50b4:	10 92 81 2b 	sts	0x2B81, r1	; 0x802b81 <Blink_LED_ON+0xe>
    50b8:	10 92 61 2b 	sts	0x2B61, r1	; 0x802b61 <Blink_LED_OFF+0x9>
    50bc:	10 92 62 2b 	sts	0x2B62, r1	; 0x802b62 <Blink_LED_OFF+0xa>
    50c0:	40 ec       	ldi	r20, 0xC0	; 192
    50c2:	57 e2       	ldi	r21, 0x27	; 39
    50c4:	69 e0       	ldi	r22, 0x09	; 9
    50c6:	70 e0       	ldi	r23, 0x00	; 0
    50c8:	40 93 59 2b 	sts	0x2B59, r20	; 0x802b59 <Blink_LED_OFF+0x1>
    50cc:	50 93 5a 2b 	sts	0x2B5A, r21	; 0x802b5a <Blink_LED_OFF+0x2>
    50d0:	60 93 5b 2b 	sts	0x2B5B, r22	; 0x802b5b <Blink_LED_OFF+0x3>
    50d4:	70 93 5c 2b 	sts	0x2B5C, r23	; 0x802b5c <Blink_LED_OFF+0x4>
    50d8:	10 92 5d 2b 	sts	0x2B5D, r1	; 0x802b5d <Blink_LED_OFF+0x5>
    50dc:	10 92 5e 2b 	sts	0x2B5E, r1	; 0x802b5e <Blink_LED_OFF+0x6>
    50e0:	10 92 5f 2b 	sts	0x2B5F, r1	; 0x802b5f <Blink_LED_OFF+0x7>
    50e4:	10 92 60 2b 	sts	0x2B60, r1	; 0x802b60 <Blink_LED_OFF+0x8>
    50e8:	24 e4       	ldi	r18, 0x44	; 68
    50ea:	3c e0       	ldi	r19, 0x0C	; 12
    50ec:	20 93 69 2b 	sts	0x2B69, r18	; 0x802b69 <Blink_LED_OFF+0x11>
    50f0:	30 93 6a 2b 	sts	0x2B6A, r19	; 0x802b6a <Blink_LED_OFF+0x12>
    50f4:	10 92 58 2b 	sts	0x2B58, r1	; 0x802b58 <Blink_LED_OFF>
    50f8:	10 92 6b 2b 	sts	0x2B6B, r1	; 0x802b6b <Blink_LED_OFF+0x13>
    50fc:	10 92 6c 2b 	sts	0x2B6C, r1	; 0x802b6c <Blink_LED_OFF+0x14>
    5100:	10 92 6d 2b 	sts	0x2B6D, r1	; 0x802b6d <Blink_LED_OFF+0x15>
    5104:	10 92 6e 2b 	sts	0x2B6E, r1	; 0x802b6e <Blink_LED_OFF+0x16>
    5108:	10 92 63 2b 	sts	0x2B63, r1	; 0x802b63 <Blink_LED_OFF+0xb>
    510c:	10 92 64 2b 	sts	0x2B64, r1	; 0x802b64 <Blink_LED_OFF+0xc>
    5110:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <Blink_LED_OFF+0xd>
    5114:	10 92 66 2b 	sts	0x2B66, r1	; 0x802b66 <Blink_LED_OFF+0xe>
    5118:	10 92 46 2b 	sts	0x2B46, r1	; 0x802b46 <TEMP_UPDATE+0x9>
    511c:	10 92 47 2b 	sts	0x2B47, r1	; 0x802b47 <TEMP_UPDATE+0xa>
    5120:	48 e4       	ldi	r20, 0x48	; 72
    5122:	58 ee       	ldi	r21, 0xE8	; 232
    5124:	61 e0       	ldi	r22, 0x01	; 1
    5126:	70 e0       	ldi	r23, 0x00	; 0
    5128:	40 93 3e 2b 	sts	0x2B3E, r20	; 0x802b3e <TEMP_UPDATE+0x1>
    512c:	50 93 3f 2b 	sts	0x2B3F, r21	; 0x802b3f <TEMP_UPDATE+0x2>
    5130:	60 93 40 2b 	sts	0x2B40, r22	; 0x802b40 <TEMP_UPDATE+0x3>
    5134:	70 93 41 2b 	sts	0x2B41, r23	; 0x802b41 <TEMP_UPDATE+0x4>
    5138:	10 92 42 2b 	sts	0x2B42, r1	; 0x802b42 <TEMP_UPDATE+0x5>
    513c:	10 92 43 2b 	sts	0x2B43, r1	; 0x802b43 <TEMP_UPDATE+0x6>
    5140:	10 92 44 2b 	sts	0x2B44, r1	; 0x802b44 <TEMP_UPDATE+0x7>
    5144:	10 92 45 2b 	sts	0x2B45, r1	; 0x802b45 <TEMP_UPDATE+0x8>
    5148:	23 e2       	ldi	r18, 0x23	; 35
    514a:	35 e2       	ldi	r19, 0x25	; 37
    514c:	20 93 4e 2b 	sts	0x2B4E, r18	; 0x802b4e <TEMP_UPDATE+0x11>
    5150:	30 93 4f 2b 	sts	0x2B4F, r19	; 0x802b4f <TEMP_UPDATE+0x12>
    5154:	10 92 3d 2b 	sts	0x2B3D, r1	; 0x802b3d <TEMP_UPDATE>
    5158:	10 92 50 2b 	sts	0x2B50, r1	; 0x802b50 <TEMP_UPDATE+0x13>
    515c:	10 92 51 2b 	sts	0x2B51, r1	; 0x802b51 <TEMP_UPDATE+0x14>
    5160:	10 92 52 2b 	sts	0x2B52, r1	; 0x802b52 <TEMP_UPDATE+0x15>
    5164:	10 92 53 2b 	sts	0x2B53, r1	; 0x802b53 <TEMP_UPDATE+0x16>
    5168:	10 92 48 2b 	sts	0x2B48, r1	; 0x802b48 <TEMP_UPDATE+0xb>
    516c:	10 92 49 2b 	sts	0x2B49, r1	; 0x802b49 <TEMP_UPDATE+0xc>
    5170:	10 92 4a 2b 	sts	0x2B4A, r1	; 0x802b4a <TEMP_UPDATE+0xd>
    5174:	10 92 4b 2b 	sts	0x2B4B, r1	; 0x802b4b <TEMP_UPDATE+0xe>
    5178:	10 92 2b 2b 	sts	0x2B2B, r1	; 0x802b2b <TEMP_UPDATE_1+0x9>
    517c:	10 92 2c 2b 	sts	0x2B2C, r1	; 0x802b2c <TEMP_UPDATE_1+0xa>
    5180:	48 eb       	ldi	r20, 0xB8	; 184
    5182:	5f ef       	ldi	r21, 0xFF	; 255
    5184:	61 e0       	ldi	r22, 0x01	; 1
    5186:	70 e0       	ldi	r23, 0x00	; 0
    5188:	40 93 23 2b 	sts	0x2B23, r20	; 0x802b23 <TEMP_UPDATE_1+0x1>
    518c:	50 93 24 2b 	sts	0x2B24, r21	; 0x802b24 <TEMP_UPDATE_1+0x2>
    5190:	60 93 25 2b 	sts	0x2B25, r22	; 0x802b25 <TEMP_UPDATE_1+0x3>
    5194:	70 93 26 2b 	sts	0x2B26, r23	; 0x802b26 <TEMP_UPDATE_1+0x4>
    5198:	10 92 27 2b 	sts	0x2B27, r1	; 0x802b27 <TEMP_UPDATE_1+0x5>
    519c:	10 92 28 2b 	sts	0x2B28, r1	; 0x802b28 <TEMP_UPDATE_1+0x6>
    51a0:	10 92 29 2b 	sts	0x2B29, r1	; 0x802b29 <TEMP_UPDATE_1+0x7>
    51a4:	10 92 2a 2b 	sts	0x2B2A, r1	; 0x802b2a <TEMP_UPDATE_1+0x8>
    51a8:	23 e5       	ldi	r18, 0x53	; 83
    51aa:	3c e0       	ldi	r19, 0x0C	; 12
    51ac:	20 93 33 2b 	sts	0x2B33, r18	; 0x802b33 <TEMP_UPDATE_1+0x11>
    51b0:	30 93 34 2b 	sts	0x2B34, r19	; 0x802b34 <TEMP_UPDATE_1+0x12>
    51b4:	10 92 22 2b 	sts	0x2B22, r1	; 0x802b22 <TEMP_UPDATE_1>
    51b8:	10 92 35 2b 	sts	0x2B35, r1	; 0x802b35 <TEMP_UPDATE_1+0x13>
    51bc:	10 92 36 2b 	sts	0x2B36, r1	; 0x802b36 <TEMP_UPDATE_1+0x14>
    51c0:	10 92 37 2b 	sts	0x2B37, r1	; 0x802b37 <TEMP_UPDATE_1+0x15>
    51c4:	10 92 38 2b 	sts	0x2B38, r1	; 0x802b38 <TEMP_UPDATE_1+0x16>
    51c8:	10 92 2d 2b 	sts	0x2B2D, r1	; 0x802b2d <TEMP_UPDATE_1+0xb>
    51cc:	10 92 2e 2b 	sts	0x2B2E, r1	; 0x802b2e <TEMP_UPDATE_1+0xc>
    51d0:	10 92 2f 2b 	sts	0x2B2F, r1	; 0x802b2f <TEMP_UPDATE_1+0xd>
    51d4:	10 92 30 2b 	sts	0x2B30, r1	; 0x802b30 <TEMP_UPDATE_1+0xe>
    51d8:	10 92 10 2b 	sts	0x2B10, r1	; 0x802b10 <Alter_Disp+0x9>
    51dc:	10 92 11 2b 	sts	0x2B11, r1	; 0x802b11 <Alter_Disp+0xa>
    51e0:	80 93 08 2b 	sts	0x2B08, r24	; 0x802b08 <Alter_Disp+0x1>
    51e4:	90 93 09 2b 	sts	0x2B09, r25	; 0x802b09 <Alter_Disp+0x2>
    51e8:	a0 93 0a 2b 	sts	0x2B0A, r26	; 0x802b0a <Alter_Disp+0x3>
    51ec:	b0 93 0b 2b 	sts	0x2B0B, r27	; 0x802b0b <Alter_Disp+0x4>
    51f0:	10 92 0c 2b 	sts	0x2B0C, r1	; 0x802b0c <Alter_Disp+0x5>
    51f4:	10 92 0d 2b 	sts	0x2B0D, r1	; 0x802b0d <Alter_Disp+0x6>
    51f8:	10 92 0e 2b 	sts	0x2B0E, r1	; 0x802b0e <Alter_Disp+0x7>
    51fc:	10 92 0f 2b 	sts	0x2B0F, r1	; 0x802b0f <Alter_Disp+0x8>
    5200:	88 e8       	ldi	r24, 0x88	; 136
    5202:	91 e0       	ldi	r25, 0x01	; 1
    5204:	80 93 18 2b 	sts	0x2B18, r24	; 0x802b18 <Alter_Disp+0x11>
    5208:	90 93 19 2b 	sts	0x2B19, r25	; 0x802b19 <Alter_Disp+0x12>
    520c:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <Alter_Disp>
    5210:	10 92 1a 2b 	sts	0x2B1A, r1	; 0x802b1a <Alter_Disp+0x13>
    5214:	10 92 1b 2b 	sts	0x2B1B, r1	; 0x802b1b <Alter_Disp+0x14>
    5218:	10 92 1c 2b 	sts	0x2B1C, r1	; 0x802b1c <Alter_Disp+0x15>
    521c:	10 92 1d 2b 	sts	0x2B1D, r1	; 0x802b1d <Alter_Disp+0x16>
    5220:	10 92 12 2b 	sts	0x2B12, r1	; 0x802b12 <Alter_Disp+0xb>
    5224:	10 92 13 2b 	sts	0x2B13, r1	; 0x802b13 <Alter_Disp+0xc>
    5228:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <Alter_Disp+0xd>
    522c:	10 92 15 2b 	sts	0x2B15, r1	; 0x802b15 <Alter_Disp+0xe>
    5230:	10 92 f5 2a 	sts	0x2AF5, r1	; 0x802af5 <PID_EXE+0x9>
    5234:	10 92 f6 2a 	sts	0x2AF6, r1	; 0x802af6 <PID_EXE+0xa>
    5238:	80 e8       	ldi	r24, 0x80	; 128
    523a:	9a e1       	ldi	r25, 0x1A	; 26
    523c:	a6 e0       	ldi	r26, 0x06	; 6
    523e:	b0 e0       	ldi	r27, 0x00	; 0
    5240:	80 93 ed 2a 	sts	0x2AED, r24	; 0x802aed <PID_EXE+0x1>
    5244:	90 93 ee 2a 	sts	0x2AEE, r25	; 0x802aee <PID_EXE+0x2>
    5248:	a0 93 ef 2a 	sts	0x2AEF, r26	; 0x802aef <PID_EXE+0x3>
    524c:	b0 93 f0 2a 	sts	0x2AF0, r27	; 0x802af0 <PID_EXE+0x4>
    5250:	10 92 f1 2a 	sts	0x2AF1, r1	; 0x802af1 <PID_EXE+0x5>
    5254:	10 92 f2 2a 	sts	0x2AF2, r1	; 0x802af2 <PID_EXE+0x6>
    5258:	10 92 f3 2a 	sts	0x2AF3, r1	; 0x802af3 <PID_EXE+0x7>
    525c:	10 92 f4 2a 	sts	0x2AF4, r1	; 0x802af4 <PID_EXE+0x8>
    5260:	85 ef       	ldi	r24, 0xF5	; 245
    5262:	9c e0       	ldi	r25, 0x0C	; 12
    5264:	80 93 fd 2a 	sts	0x2AFD, r24	; 0x802afd <PID_EXE+0x11>
    5268:	90 93 fe 2a 	sts	0x2AFE, r25	; 0x802afe <PID_EXE+0x12>
    526c:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <PID_EXE>
    5270:	10 92 ff 2a 	sts	0x2AFF, r1	; 0x802aff <PID_EXE+0x13>
    5274:	10 92 00 2b 	sts	0x2B00, r1	; 0x802b00 <PID_EXE+0x14>
    5278:	10 92 01 2b 	sts	0x2B01, r1	; 0x802b01 <PID_EXE+0x15>
    527c:	10 92 02 2b 	sts	0x2B02, r1	; 0x802b02 <PID_EXE+0x16>
    5280:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <PID_EXE+0xb>
    5284:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <PID_EXE+0xc>
    5288:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <PID_EXE+0xd>
    528c:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <PID_EXE+0xe>
    5290:	c0 90 13 28 	lds	r12, 0x2813	; 0x802813 <Kd>
    5294:	d0 90 14 28 	lds	r13, 0x2814	; 0x802814 <Kd+0x1>
    5298:	e0 90 15 28 	lds	r14, 0x2815	; 0x802815 <Kd+0x2>
    529c:	f0 90 16 28 	lds	r15, 0x2816	; 0x802816 <Kd+0x3>
    52a0:	80 90 0f 28 	lds	r8, 0x280F	; 0x80280f <Ki>
    52a4:	90 90 10 28 	lds	r9, 0x2810	; 0x802810 <Ki+0x1>
    52a8:	a0 90 11 28 	lds	r10, 0x2811	; 0x802811 <Ki+0x2>
    52ac:	b0 90 12 28 	lds	r11, 0x2812	; 0x802812 <Ki+0x3>
    52b0:	40 90 0b 28 	lds	r4, 0x280B	; 0x80280b <Kp>
    52b4:	50 90 0c 28 	lds	r5, 0x280C	; 0x80280c <Kp+0x1>
    52b8:	60 90 0d 28 	lds	r6, 0x280D	; 0x80280d <Kp+0x2>
    52bc:	70 90 0e 28 	lds	r7, 0x280E	; 0x80280e <Kp+0x3>
    52c0:	86 ef       	ldi	r24, 0xF6	; 246
    52c2:	99 e2       	ldi	r25, 0x29	; 41
    52c4:	80 93 1c 2a 	sts	0x2A1C, r24	; 0x802a1c <myPID+0x1e>
    52c8:	90 93 1d 2a 	sts	0x2A1D, r25	; 0x802a1d <myPID+0x1f>
    52cc:	8a ef       	ldi	r24, 0xFA	; 250
    52ce:	99 e2       	ldi	r25, 0x29	; 41
    52d0:	80 93 1a 2a 	sts	0x2A1A, r24	; 0x802a1a <myPID+0x1c>
    52d4:	90 93 1b 2a 	sts	0x2A1B, r25	; 0x802a1b <myPID+0x1d>
    52d8:	82 ef       	ldi	r24, 0xF2	; 242
    52da:	99 e2       	ldi	r25, 0x29	; 41
    52dc:	80 93 1e 2a 	sts	0x2A1E, r24	; 0x802a1e <myPID+0x20>
    52e0:	90 93 1f 2a 	sts	0x2A1F, r25	; 0x802a1f <myPID+0x21>
    52e4:	10 92 38 2a 	sts	0x2A38, r1	; 0x802a38 <myPID+0x3a>
    52e8:	10 92 30 2a 	sts	0x2A30, r1	; 0x802a30 <myPID+0x32>
    52ec:	10 92 31 2a 	sts	0x2A31, r1	; 0x802a31 <myPID+0x33>
    52f0:	10 92 32 2a 	sts	0x2A32, r1	; 0x802a32 <myPID+0x34>
    52f4:	10 92 33 2a 	sts	0x2A33, r1	; 0x802a33 <myPID+0x35>
    52f8:	80 e0       	ldi	r24, 0x00	; 0
    52fa:	90 e0       	ldi	r25, 0x00	; 0
    52fc:	af e7       	ldi	r26, 0x7F	; 127
    52fe:	b3 e4       	ldi	r27, 0x43	; 67
    5300:	80 93 34 2a 	sts	0x2A34, r24	; 0x802a34 <myPID+0x36>
    5304:	90 93 35 2a 	sts	0x2A35, r25	; 0x802a35 <myPID+0x37>
    5308:	a0 93 36 2a 	sts	0x2A36, r26	; 0x802a36 <myPID+0x38>
    530c:	b0 93 37 2a 	sts	0x2A37, r27	; 0x802a37 <myPID+0x39>
    5310:	84 e6       	ldi	r24, 0x64	; 100
    5312:	90 e0       	ldi	r25, 0x00	; 0
    5314:	a0 e0       	ldi	r26, 0x00	; 0
    5316:	b0 e0       	ldi	r27, 0x00	; 0
    5318:	80 93 2c 2a 	sts	0x2A2C, r24	; 0x802a2c <myPID+0x2e>
    531c:	90 93 2d 2a 	sts	0x2A2D, r25	; 0x802a2d <myPID+0x2f>
    5320:	a0 93 2e 2a 	sts	0x2A2E, r26	; 0x802a2e <myPID+0x30>
    5324:	b0 93 2f 2a 	sts	0x2A2F, r27	; 0x802a2f <myPID+0x31>
    5328:	10 92 16 2a 	sts	0x2A16, r1	; 0x802a16 <myPID+0x18>
    532c:	10 92 17 2a 	sts	0x2A17, r1	; 0x802a17 <myPID+0x19>
    5330:	20 e0       	ldi	r18, 0x00	; 0
    5332:	30 e0       	ldi	r19, 0x00	; 0
    5334:	a9 01       	movw	r20, r18
    5336:	c3 01       	movw	r24, r6
    5338:	b2 01       	movw	r22, r4
    533a:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    533e:	87 fd       	sbrc	r24, 7
    5340:	5a c0       	rjmp	.+180    	; 0x53f6 <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x5c8>
    5342:	20 e0       	ldi	r18, 0x00	; 0
    5344:	30 e0       	ldi	r19, 0x00	; 0
    5346:	a9 01       	movw	r20, r18
    5348:	c5 01       	movw	r24, r10
    534a:	b4 01       	movw	r22, r8
    534c:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    5350:	87 fd       	sbrc	r24, 7
    5352:	51 c0       	rjmp	.+162    	; 0x53f6 <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x5c8>
    5354:	20 e0       	ldi	r18, 0x00	; 0
    5356:	30 e0       	ldi	r19, 0x00	; 0
    5358:	a9 01       	movw	r20, r18
    535a:	c7 01       	movw	r24, r14
    535c:	b6 01       	movw	r22, r12
    535e:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    5362:	87 fd       	sbrc	r24, 7
    5364:	48 c0       	rjmp	.+144    	; 0x53f6 <global constructors keyed to 65535_0_Butn.cpp.o.4275+0x5c8>
    5366:	81 e0       	ldi	r24, 0x01	; 1
    5368:	90 e0       	ldi	r25, 0x00	; 0
    536a:	80 93 18 2a 	sts	0x2A18, r24	; 0x802a18 <myPID+0x1a>
    536e:	90 93 19 2a 	sts	0x2A19, r25	; 0x802a19 <myPID+0x1b>
    5372:	80 93 39 2a 	sts	0x2A39, r24	; 0x802a39 <myPID+0x3b>
    5376:	40 92 fe 29 	sts	0x29FE, r4	; 0x8029fe <myPID>
    537a:	50 92 ff 29 	sts	0x29FF, r5	; 0x8029ff <myPID+0x1>
    537e:	60 92 00 2a 	sts	0x2A00, r6	; 0x802a00 <myPID+0x2>
    5382:	70 92 01 2a 	sts	0x2A01, r7	; 0x802a01 <myPID+0x3>
    5386:	80 92 02 2a 	sts	0x2A02, r8	; 0x802a02 <myPID+0x4>
    538a:	90 92 03 2a 	sts	0x2A03, r9	; 0x802a03 <myPID+0x5>
    538e:	a0 92 04 2a 	sts	0x2A04, r10	; 0x802a04 <myPID+0x6>
    5392:	b0 92 05 2a 	sts	0x2A05, r11	; 0x802a05 <myPID+0x7>
    5396:	c0 92 06 2a 	sts	0x2A06, r12	; 0x802a06 <myPID+0x8>
    539a:	d0 92 07 2a 	sts	0x2A07, r13	; 0x802a07 <myPID+0x9>
    539e:	e0 92 08 2a 	sts	0x2A08, r14	; 0x802a08 <myPID+0xa>
    53a2:	f0 92 09 2a 	sts	0x2A09, r15	; 0x802a09 <myPID+0xb>
    53a6:	40 92 0a 2a 	sts	0x2A0A, r4	; 0x802a0a <myPID+0xc>
    53aa:	50 92 0b 2a 	sts	0x2A0B, r5	; 0x802a0b <myPID+0xd>
    53ae:	60 92 0c 2a 	sts	0x2A0C, r6	; 0x802a0c <myPID+0xe>
    53b2:	70 92 0d 2a 	sts	0x2A0D, r7	; 0x802a0d <myPID+0xf>
    53b6:	2d ec       	ldi	r18, 0xCD	; 205
    53b8:	3c ec       	ldi	r19, 0xCC	; 204
    53ba:	4c ec       	ldi	r20, 0xCC	; 204
    53bc:	5d e3       	ldi	r21, 0x3D	; 61
    53be:	c5 01       	movw	r24, r10
    53c0:	b4 01       	movw	r22, r8
    53c2:	0e 94 4e 3b 	call	0x769c	; 0x769c <__mulsf3>
    53c6:	60 93 0e 2a 	sts	0x2A0E, r22	; 0x802a0e <myPID+0x10>
    53ca:	70 93 0f 2a 	sts	0x2A0F, r23	; 0x802a0f <myPID+0x11>
    53ce:	80 93 10 2a 	sts	0x2A10, r24	; 0x802a10 <myPID+0x12>
    53d2:	90 93 11 2a 	sts	0x2A11, r25	; 0x802a11 <myPID+0x13>
    53d6:	2d ec       	ldi	r18, 0xCD	; 205
    53d8:	3c ec       	ldi	r19, 0xCC	; 204
    53da:	4c ec       	ldi	r20, 0xCC	; 204
    53dc:	5d e3       	ldi	r21, 0x3D	; 61
    53de:	c7 01       	movw	r24, r14
    53e0:	b6 01       	movw	r22, r12
    53e2:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    53e6:	60 93 12 2a 	sts	0x2A12, r22	; 0x802a12 <myPID+0x14>
    53ea:	70 93 13 2a 	sts	0x2A13, r23	; 0x802a13 <myPID+0x15>
    53ee:	80 93 14 2a 	sts	0x2A14, r24	; 0x802a14 <myPID+0x16>
    53f2:	90 93 15 2a 	sts	0x2A15, r25	; 0x802a15 <myPID+0x17>
    53f6:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    53fa:	c0 90 2c 2a 	lds	r12, 0x2A2C	; 0x802a2c <myPID+0x2e>
    53fe:	d0 90 2d 2a 	lds	r13, 0x2A2D	; 0x802a2d <myPID+0x2f>
    5402:	e0 90 2e 2a 	lds	r14, 0x2A2E	; 0x802a2e <myPID+0x30>
    5406:	f0 90 2f 2a 	lds	r15, 0x2A2F	; 0x802a2f <myPID+0x31>
    540a:	6c 19       	sub	r22, r12
    540c:	7d 09       	sbc	r23, r13
    540e:	8e 09       	sbc	r24, r14
    5410:	9f 09       	sbc	r25, r15
    5412:	60 93 20 2a 	sts	0x2A20, r22	; 0x802a20 <myPID+0x22>
    5416:	70 93 21 2a 	sts	0x2A21, r23	; 0x802a21 <myPID+0x23>
    541a:	80 93 22 2a 	sts	0x2A22, r24	; 0x802a22 <myPID+0x24>
    541e:	90 93 23 2a 	sts	0x2A23, r25	; 0x802a23 <myPID+0x25>
    5422:	10 92 da 2a 	sts	0x2ADA, r1	; 0x802ada <VersionDisplay+0x9>
    5426:	10 92 db 2a 	sts	0x2ADB, r1	; 0x802adb <VersionDisplay+0xa>
    542a:	80 e4       	ldi	r24, 0x40	; 64
    542c:	92 e4       	ldi	r25, 0x42	; 66
    542e:	af e0       	ldi	r26, 0x0F	; 15
    5430:	b0 e0       	ldi	r27, 0x00	; 0
    5432:	80 93 d2 2a 	sts	0x2AD2, r24	; 0x802ad2 <VersionDisplay+0x1>
    5436:	90 93 d3 2a 	sts	0x2AD3, r25	; 0x802ad3 <VersionDisplay+0x2>
    543a:	a0 93 d4 2a 	sts	0x2AD4, r26	; 0x802ad4 <VersionDisplay+0x3>
    543e:	b0 93 d5 2a 	sts	0x2AD5, r27	; 0x802ad5 <VersionDisplay+0x4>
    5442:	81 e0       	ldi	r24, 0x01	; 1
    5444:	90 e0       	ldi	r25, 0x00	; 0
    5446:	a0 e0       	ldi	r26, 0x00	; 0
    5448:	b0 e0       	ldi	r27, 0x00	; 0
    544a:	80 93 d6 2a 	sts	0x2AD6, r24	; 0x802ad6 <VersionDisplay+0x5>
    544e:	90 93 d7 2a 	sts	0x2AD7, r25	; 0x802ad7 <VersionDisplay+0x6>
    5452:	a0 93 d8 2a 	sts	0x2AD8, r26	; 0x802ad8 <VersionDisplay+0x7>
    5456:	b0 93 d9 2a 	sts	0x2AD9, r27	; 0x802ad9 <VersionDisplay+0x8>
    545a:	8a e7       	ldi	r24, 0x7A	; 122
    545c:	91 e0       	ldi	r25, 0x01	; 1
    545e:	80 93 e2 2a 	sts	0x2AE2, r24	; 0x802ae2 <VersionDisplay+0x11>
    5462:	90 93 e3 2a 	sts	0x2AE3, r25	; 0x802ae3 <VersionDisplay+0x12>
    5466:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <VersionDisplay>
    546a:	10 92 e4 2a 	sts	0x2AE4, r1	; 0x802ae4 <VersionDisplay+0x13>
    546e:	10 92 e5 2a 	sts	0x2AE5, r1	; 0x802ae5 <VersionDisplay+0x14>
    5472:	10 92 e6 2a 	sts	0x2AE6, r1	; 0x802ae6 <VersionDisplay+0x15>
    5476:	10 92 e7 2a 	sts	0x2AE7, r1	; 0x802ae7 <VersionDisplay+0x16>
    547a:	10 92 dc 2a 	sts	0x2ADC, r1	; 0x802adc <VersionDisplay+0xb>
    547e:	10 92 dd 2a 	sts	0x2ADD, r1	; 0x802add <VersionDisplay+0xc>
    5482:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <VersionDisplay+0xd>
    5486:	10 92 df 2a 	sts	0x2ADF, r1	; 0x802adf <VersionDisplay+0xe>
    548a:	63 e2       	ldi	r22, 0x23	; 35
    548c:	70 e0       	ldi	r23, 0x00	; 0
    548e:	82 eb       	ldi	r24, 0xB2	; 178
    5490:	9a e2       	ldi	r25, 0x2A	; 42
    5492:	0e 94 58 08 	call	0x10b0	; 0x10b0 <OneButton::OneButton(int, int) [clone .constprop.71]>
    5496:	65 e2       	ldi	r22, 0x25	; 37
    5498:	70 e0       	ldi	r23, 0x00	; 0
    549a:	83 e9       	ldi	r24, 0x93	; 147
    549c:	9a e2       	ldi	r25, 0x2A	; 42
    549e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <OneButton::OneButton(int, int) [clone .constprop.71]>
    54a2:	64 e2       	ldi	r22, 0x24	; 36
    54a4:	70 e0       	ldi	r23, 0x00	; 0
    54a6:	84 e7       	ldi	r24, 0x74	; 116
    54a8:	9a e2       	ldi	r25, 0x2A	; 42
    54aa:	0e 94 58 08 	call	0x10b0	; 0x10b0 <OneButton::OneButton(int, int) [clone .constprop.71]>
    54ae:	62 e2       	ldi	r22, 0x22	; 34
    54b0:	70 e0       	ldi	r23, 0x00	; 0
    54b2:	85 e5       	ldi	r24, 0x55	; 85
    54b4:	9a e2       	ldi	r25, 0x2A	; 42
    54b6:	0e 94 58 08 	call	0x10b0	; 0x10b0 <OneButton::OneButton(int, int) [clone .constprop.71]>
    54ba:	81 e0       	ldi	r24, 0x01	; 1
    54bc:	90 e0       	ldi	r25, 0x00	; 0
    54be:	80 93 43 2a 	sts	0x2A43, r24	; 0x802a43 <toggle_ticker+0x9>
    54c2:	90 93 44 2a 	sts	0x2A44, r25	; 0x802a44 <toggle_ticker+0xa>
    54c6:	88 ee       	ldi	r24, 0xE8	; 232
    54c8:	93 e0       	ldi	r25, 0x03	; 3
    54ca:	a0 e0       	ldi	r26, 0x00	; 0
    54cc:	b0 e0       	ldi	r27, 0x00	; 0
    54ce:	80 93 3b 2a 	sts	0x2A3B, r24	; 0x802a3b <toggle_ticker+0x1>
    54d2:	90 93 3c 2a 	sts	0x2A3C, r25	; 0x802a3c <toggle_ticker+0x2>
    54d6:	a0 93 3d 2a 	sts	0x2A3D, r26	; 0x802a3d <toggle_ticker+0x3>
    54da:	b0 93 3e 2a 	sts	0x2A3E, r27	; 0x802a3e <toggle_ticker+0x4>
    54de:	10 92 3f 2a 	sts	0x2A3F, r1	; 0x802a3f <toggle_ticker+0x5>
    54e2:	10 92 40 2a 	sts	0x2A40, r1	; 0x802a40 <toggle_ticker+0x6>
    54e6:	10 92 41 2a 	sts	0x2A41, r1	; 0x802a41 <toggle_ticker+0x7>
    54ea:	10 92 42 2a 	sts	0x2A42, r1	; 0x802a42 <toggle_ticker+0x8>
    54ee:	8d e7       	ldi	r24, 0x7D	; 125
    54f0:	91 e0       	ldi	r25, 0x01	; 1
    54f2:	80 93 4b 2a 	sts	0x2A4B, r24	; 0x802a4b <toggle_ticker+0x11>
    54f6:	90 93 4c 2a 	sts	0x2A4C, r25	; 0x802a4c <toggle_ticker+0x12>
    54fa:	10 92 3a 2a 	sts	0x2A3A, r1	; 0x802a3a <toggle_ticker>
    54fe:	10 92 4d 2a 	sts	0x2A4D, r1	; 0x802a4d <toggle_ticker+0x13>
    5502:	10 92 4e 2a 	sts	0x2A4E, r1	; 0x802a4e <toggle_ticker+0x14>
    5506:	10 92 4f 2a 	sts	0x2A4F, r1	; 0x802a4f <toggle_ticker+0x15>
    550a:	10 92 50 2a 	sts	0x2A50, r1	; 0x802a50 <toggle_ticker+0x16>
    550e:	10 92 45 2a 	sts	0x2A45, r1	; 0x802a45 <toggle_ticker+0xb>
    5512:	10 92 46 2a 	sts	0x2A46, r1	; 0x802a46 <toggle_ticker+0xc>
    5516:	10 92 47 2a 	sts	0x2A47, r1	; 0x802a47 <toggle_ticker+0xd>
    551a:	10 92 48 2a 	sts	0x2A48, r1	; 0x802a48 <toggle_ticker+0xe>
    551e:	ff 90       	pop	r15
    5520:	ef 90       	pop	r14
    5522:	df 90       	pop	r13
    5524:	cf 90       	pop	r12
    5526:	bf 90       	pop	r11
    5528:	af 90       	pop	r10
    552a:	9f 90       	pop	r9
    552c:	8f 90       	pop	r8
    552e:	7f 90       	pop	r7
    5530:	6f 90       	pop	r6
    5532:	5f 90       	pop	r5
    5534:	4f 90       	pop	r4
    5536:	08 95       	ret

00005538 <main>:
main():
    5538:	cf 93       	push	r28
    553a:	df 93       	push	r29
    553c:	00 d0       	rcall	.+0      	; 0x553e <main+0x6>
    553e:	cd b7       	in	r28, 0x3d	; 61
    5540:	de b7       	in	r29, 0x3e	; 62
init():
    5542:	88 ed       	ldi	r24, 0xD8	; 216
    5544:	90 e0       	ldi	r25, 0x00	; 0
    5546:	84 bf       	out	0x34, r24	; 52
    5548:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f4061>
    554c:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    5550:	86 60       	ori	r24, 0x06	; 6
    5552:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    5556:	80 91 00 06 	lds	r24, 0x0600	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
    555a:	81 60       	ori	r24, 0x01	; 1
    555c:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f4600>
analogReference():
    5560:	80 91 02 06 	lds	r24, 0x0602	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
    5564:	8f 7c       	andi	r24, 0xCF	; 207
    5566:	80 65       	ori	r24, 0x50	; 80
    5568:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f4602>
init():
    556c:	10 92 e2 05 	sts	0x05E2, r1	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f45e2>
setup_timers():
    5570:	82 e0       	ldi	r24, 0x02	; 2
    5572:	80 93 e4 05 	sts	0x05E4, r24	; 0x8005e4 <__TEXT_REGION_LENGTH__+0x7f45e4>
    5576:	81 e0       	ldi	r24, 0x01	; 1
    5578:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f4a03>
    557c:	8e ef       	ldi	r24, 0xFE	; 254
    557e:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    5582:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    5586:	80 e8       	ldi	r24, 0x80	; 128
    5588:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f4a2d>
    558c:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f4a2b>
    5590:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
    5594:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7f4a2c>
    5598:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__TEXT_REGION_LENGTH__+0x7f4a2a>
    559c:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f4a28>
    55a0:	8b e0       	ldi	r24, 0x0B	; 11
    55a2:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    55a6:	87 e0       	ldi	r24, 0x07	; 7
    55a8:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7f45e5>
main():
    55ac:	e0 e8       	ldi	r30, 0x80	; 128
    55ae:	fa e0       	ldi	r31, 0x0A	; 10
setup_timers():
    55b0:	37 e0       	ldi	r19, 0x07	; 7
    55b2:	2e ef       	ldi	r18, 0xFE	; 254
    55b4:	90 e8       	ldi	r25, 0x80	; 128
    55b6:	85 e0       	ldi	r24, 0x05	; 5
    55b8:	31 83       	std	Z+1, r19	; 0x01
    55ba:	24 87       	std	Z+12, r18	; 0x0c
    55bc:	95 87       	std	Z+13, r25	; 0x0d
    55be:	80 83       	st	Z, r24
    55c0:	70 96       	adiw	r30, 0x10	; 16
    55c2:	e0 3c       	cpi	r30, 0xC0	; 192
    55c4:	4a e0       	ldi	r20, 0x0A	; 10
    55c6:	f4 07       	cpc	r31, r20
    55c8:	b9 f7       	brne	.-18     	; 0x55b8 <main+0x80>
init():
    55ca:	10 92 a1 0a 	sts	0x0AA1, r1	; 0x800aa1 <__TEXT_REGION_LENGTH__+0x7f4aa1>
    55ce:	8f e7       	ldi	r24, 0x7F	; 127
    55d0:	9e e3       	ldi	r25, 0x3E	; 62
    55d2:	80 93 ac 0a 	sts	0x0AAC, r24	; 0x800aac <__TEXT_REGION_LENGTH__+0x7f4aac>
    55d6:	90 93 ad 0a 	sts	0x0AAD, r25	; 0x800aad <__TEXT_REGION_LENGTH__+0x7f4aad>
    55da:	80 91 a5 0a 	lds	r24, 0x0AA5	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    55de:	81 60       	ori	r24, 0x01	; 1
    55e0:	80 93 a5 0a 	sts	0x0AA5, r24	; 0x800aa5 <__TEXT_REGION_LENGTH__+0x7f4aa5>
    55e4:	10 92 a0 0a 	sts	0x0AA0, r1	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    55e8:	80 91 a0 0a 	lds	r24, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    55ec:	81 60       	ori	r24, 0x01	; 1
    55ee:	80 93 a0 0a 	sts	0x0AA0, r24	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x7f4aa0>
    55f2:	78 94       	sei
setup():
    55f4:	47 e2       	ldi	r20, 0x27	; 39
    55f6:	66 e2       	ldi	r22, 0x26	; 38
    55f8:	85 e5       	ldi	r24, 0x55	; 85
    55fa:	99 e2       	ldi	r25, 0x29	; 41
    55fc:	0e 94 a9 06 	call	0xd52	; 0xd52 <UartClass::pins(unsigned char, unsigned char)>
    5600:	40 e8       	ldi	r20, 0x80	; 128
    5602:	55 e2       	ldi	r21, 0x25	; 37
    5604:	60 e0       	ldi	r22, 0x00	; 0
    5606:	70 e0       	ldi	r23, 0x00	; 0
    5608:	85 e5       	ldi	r24, 0x55	; 85
    560a:	99 e2       	ldi	r25, 0x29	; 41
    560c:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <UartClass::begin(unsigned long)>
SETUP():
    5610:	f8 94       	cli
    5612:	81 e0       	ldi	r24, 0x01	; 1
    5614:	80 93 0a 0a 	sts	0x0A0A, r24	; 0x800a0a <__TEXT_REGION_LENGTH__+0x7f4a0a>
    5618:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f4a01>
    561c:	80 91 09 0a 	lds	r24, 0x0A09	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    5620:	8e 7f       	andi	r24, 0xFE	; 254
    5622:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <__TEXT_REGION_LENGTH__+0x7f4a09>
    5626:	8a ef       	ldi	r24, 0xFA	; 250
    5628:	90 e0       	ldi	r25, 0x00	; 0
    562a:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f4a26>
    562e:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f4a27>
    5632:	8f e0       	ldi	r24, 0x0F	; 15
    5634:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f4a00>
    5638:	78 94       	sei
    563a:	61 e0       	ldi	r22, 0x01	; 1
    563c:	8b e0       	ldi	r24, 0x0B	; 11
    563e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5642:	61 e0       	ldi	r22, 0x01	; 1
    5644:	8a e0       	ldi	r24, 0x0A	; 10
    5646:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    564a:	61 e0       	ldi	r22, 0x01	; 1
    564c:	89 e0       	ldi	r24, 0x09	; 9
    564e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5652:	61 e0       	ldi	r22, 0x01	; 1
    5654:	88 e0       	ldi	r24, 0x08	; 8
    5656:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    565a:	61 e0       	ldi	r22, 0x01	; 1
    565c:	84 e0       	ldi	r24, 0x04	; 4
    565e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5662:	61 e0       	ldi	r22, 0x01	; 1
    5664:	85 e0       	ldi	r24, 0x05	; 5
    5666:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    566a:	61 e0       	ldi	r22, 0x01	; 1
    566c:	86 e0       	ldi	r24, 0x06	; 6
    566e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5672:	61 e0       	ldi	r22, 0x01	; 1
    5674:	87 e0       	ldi	r24, 0x07	; 7
    5676:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    567a:	61 e0       	ldi	r22, 0x01	; 1
    567c:	84 e1       	ldi	r24, 0x14	; 20
    567e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5682:	61 e0       	ldi	r22, 0x01	; 1
    5684:	83 e1       	ldi	r24, 0x13	; 19
    5686:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    568a:	61 e0       	ldi	r22, 0x01	; 1
    568c:	82 e1       	ldi	r24, 0x12	; 18
    568e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    5692:	61 e0       	ldi	r22, 0x01	; 1
    5694:	8e e1       	ldi	r24, 0x1E	; 30
    5696:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    569a:	61 e0       	ldi	r22, 0x01	; 1
    569c:	80 e2       	ldi	r24, 0x20	; 32
    569e:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    56a2:	61 e0       	ldi	r22, 0x01	; 1
    56a4:	8f e1       	ldi	r24, 0x1F	; 31
    56a6:	0e 94 e7 07 	call	0xfce	; 0xfce <pinMode>
    56aa:	61 e0       	ldi	r22, 0x01	; 1
    56ac:	88 e0       	ldi	r24, 0x08	; 8
    56ae:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56b2:	61 e0       	ldi	r22, 0x01	; 1
    56b4:	89 e0       	ldi	r24, 0x09	; 9
    56b6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56ba:	61 e0       	ldi	r22, 0x01	; 1
    56bc:	8a e0       	ldi	r24, 0x0A	; 10
    56be:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56c2:	61 e0       	ldi	r22, 0x01	; 1
    56c4:	8b e0       	ldi	r24, 0x0B	; 11
    56c6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56ca:	61 e0       	ldi	r22, 0x01	; 1
    56cc:	87 e0       	ldi	r24, 0x07	; 7
    56ce:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56d2:	61 e0       	ldi	r22, 0x01	; 1
    56d4:	86 e0       	ldi	r24, 0x06	; 6
    56d6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56da:	61 e0       	ldi	r22, 0x01	; 1
    56dc:	85 e0       	ldi	r24, 0x05	; 5
    56de:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
    56e2:	61 e0       	ldi	r22, 0x01	; 1
    56e4:	84 e0       	ldi	r24, 0x04	; 4
    56e6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <digitalWrite>
pinMode():
    56ea:	61 e0       	ldi	r22, 0x01	; 1
    56ec:	8c e0       	ldi	r24, 0x0C	; 12
    56ee:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    56f2:	61 e0       	ldi	r22, 0x01	; 1
    56f4:	8d e0       	ldi	r24, 0x0D	; 13
    56f6:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
digitalWrite():
    56fa:	60 e0       	ldi	r22, 0x00	; 0
    56fc:	8c e0       	ldi	r24, 0x0C	; 12
    56fe:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    5702:	60 e0       	ldi	r22, 0x00	; 0
    5704:	8d e0       	ldi	r24, 0x0D	; 13
    5706:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SETUP():
    570a:	8f ed       	ldi	r24, 0xDF	; 223
    570c:	9b e2       	ldi	r25, 0x2B	; 43
    570e:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SetOutputLimits():
    5712:	10 92 30 2a 	sts	0x2A30, r1	; 0x802a30 <myPID+0x32>
    5716:	10 92 31 2a 	sts	0x2A31, r1	; 0x802a31 <myPID+0x33>
    571a:	10 92 32 2a 	sts	0x2A32, r1	; 0x802a32 <myPID+0x34>
    571e:	10 92 33 2a 	sts	0x2A33, r1	; 0x802a33 <myPID+0x35>
    5722:	81 2c       	mov	r8, r1
    5724:	60 e8       	ldi	r22, 0x80	; 128
    5726:	96 2e       	mov	r9, r22
    5728:	69 e8       	ldi	r22, 0x89	; 137
    572a:	a6 2e       	mov	r10, r22
    572c:	64 e4       	ldi	r22, 0x44	; 68
    572e:	b6 2e       	mov	r11, r22
    5730:	80 92 34 2a 	sts	0x2A34, r8	; 0x802a34 <myPID+0x36>
    5734:	90 92 35 2a 	sts	0x2A35, r9	; 0x802a35 <myPID+0x37>
    5738:	a0 92 36 2a 	sts	0x2A36, r10	; 0x802a36 <myPID+0x38>
    573c:	b0 92 37 2a 	sts	0x2A37, r11	; 0x802a37 <myPID+0x39>
    5740:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
    5744:	88 23       	and	r24, r24
    5746:	09 f4       	brne	.+2      	; 0x574a <main+0x212>
    5748:	57 c0       	rjmp	.+174    	; 0x57f8 <main+0x2c0>
    574a:	00 91 1c 2a 	lds	r16, 0x2A1C	; 0x802a1c <myPID+0x1e>
    574e:	10 91 1d 2a 	lds	r17, 0x2A1D	; 0x802a1d <myPID+0x1f>
    5752:	d8 01       	movw	r26, r16
    5754:	cd 90       	ld	r12, X+
    5756:	dd 90       	ld	r13, X+
    5758:	ed 90       	ld	r14, X+
    575a:	fc 90       	ld	r15, X
    575c:	a5 01       	movw	r20, r10
    575e:	94 01       	movw	r18, r8
    5760:	c7 01       	movw	r24, r14
    5762:	b6 01       	movw	r22, r12
    5764:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    5768:	18 16       	cp	r1, r24
    576a:	34 f5       	brge	.+76     	; 0x57b8 <main+0x280>
    576c:	f8 01       	movw	r30, r16
    576e:	80 82       	st	Z, r8
    5770:	91 82       	std	Z+1, r9	; 0x01
    5772:	a2 82       	std	Z+2, r10	; 0x02
    5774:	b3 82       	std	Z+3, r11	; 0x03
    5776:	80 90 24 2a 	lds	r8, 0x2A24	; 0x802a24 <myPID+0x26>
    577a:	90 90 25 2a 	lds	r9, 0x2A25	; 0x802a25 <myPID+0x27>
    577e:	a0 90 26 2a 	lds	r10, 0x2A26	; 0x802a26 <myPID+0x28>
    5782:	b0 90 27 2a 	lds	r11, 0x2A27	; 0x802a27 <myPID+0x29>
    5786:	c0 90 34 2a 	lds	r12, 0x2A34	; 0x802a34 <myPID+0x36>
    578a:	d0 90 35 2a 	lds	r13, 0x2A35	; 0x802a35 <myPID+0x37>
    578e:	e0 90 36 2a 	lds	r14, 0x2A36	; 0x802a36 <myPID+0x38>
    5792:	f0 90 37 2a 	lds	r15, 0x2A37	; 0x802a37 <myPID+0x39>
    5796:	a7 01       	movw	r20, r14
    5798:	96 01       	movw	r18, r12
    579a:	c5 01       	movw	r24, r10
    579c:	b4 01       	movw	r22, r8
    579e:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    57a2:	18 16       	cp	r1, r24
    57a4:	cc f4       	brge	.+50     	; 0x57d8 <main+0x2a0>
    57a6:	c0 92 24 2a 	sts	0x2A24, r12	; 0x802a24 <myPID+0x26>
    57aa:	d0 92 25 2a 	sts	0x2A25, r13	; 0x802a25 <myPID+0x27>
    57ae:	e0 92 26 2a 	sts	0x2A26, r14	; 0x802a26 <myPID+0x28>
    57b2:	f0 92 27 2a 	sts	0x2A27, r15	; 0x802a27 <myPID+0x29>
    57b6:	20 c0       	rjmp	.+64     	; 0x57f8 <main+0x2c0>
    57b8:	20 e0       	ldi	r18, 0x00	; 0
    57ba:	30 e0       	ldi	r19, 0x00	; 0
    57bc:	a9 01       	movw	r20, r18
    57be:	c7 01       	movw	r24, r14
    57c0:	b6 01       	movw	r22, r12
    57c2:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    57c6:	87 ff       	sbrs	r24, 7
    57c8:	d6 cf       	rjmp	.-84     	; 0x5776 <main+0x23e>
    57ca:	d8 01       	movw	r26, r16
    57cc:	1d 92       	st	X+, r1
    57ce:	1d 92       	st	X+, r1
    57d0:	1d 92       	st	X+, r1
    57d2:	1c 92       	st	X, r1
    57d4:	13 97       	sbiw	r26, 0x03	; 3
    57d6:	cf cf       	rjmp	.-98     	; 0x5776 <main+0x23e>
    57d8:	c0 90 30 2a 	lds	r12, 0x2A30	; 0x802a30 <myPID+0x32>
    57dc:	d0 90 31 2a 	lds	r13, 0x2A31	; 0x802a31 <myPID+0x33>
    57e0:	e0 90 32 2a 	lds	r14, 0x2A32	; 0x802a32 <myPID+0x34>
    57e4:	f0 90 33 2a 	lds	r15, 0x2A33	; 0x802a33 <myPID+0x35>
    57e8:	a7 01       	movw	r20, r14
    57ea:	96 01       	movw	r18, r12
    57ec:	c5 01       	movw	r24, r10
    57ee:	b4 01       	movw	r22, r8
    57f0:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    57f4:	87 fd       	sbrc	r24, 7
    57f6:	d7 cf       	rjmp	.-82     	; 0x57a6 <main+0x26e>
Setup():
    57f8:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    57fc:	60 93 ed 28 	sts	0x28ED, r22	; 0x8028ed <WINDOW_START_TIME>
    5800:	70 93 ee 28 	sts	0x28EE, r23	; 0x8028ee <WINDOW_START_TIME+0x1>
    5804:	80 93 ef 28 	sts	0x28EF, r24	; 0x8028ef <WINDOW_START_TIME+0x2>
    5808:	90 93 f0 28 	sts	0x28F0, r25	; 0x8028f0 <WINDOW_START_TIME+0x3>
SetMode():
    580c:	80 91 38 2a 	lds	r24, 0x2A38	; 0x802a38 <myPID+0x3a>
    5810:	81 11       	cpse	r24, r1
    5812:	49 c0       	rjmp	.+146    	; 0x58a6 <main+0x36e>
Initialize():
    5814:	e0 91 1c 2a 	lds	r30, 0x2A1C	; 0x802a1c <myPID+0x1e>
    5818:	f0 91 1d 2a 	lds	r31, 0x2A1D	; 0x802a1d <myPID+0x1f>
    581c:	c0 80       	ld	r12, Z
    581e:	d1 80       	ldd	r13, Z+1	; 0x01
    5820:	e2 80       	ldd	r14, Z+2	; 0x02
    5822:	f3 80       	ldd	r15, Z+3	; 0x03
    5824:	c0 92 24 2a 	sts	0x2A24, r12	; 0x802a24 <myPID+0x26>
    5828:	d0 92 25 2a 	sts	0x2A25, r13	; 0x802a25 <myPID+0x27>
    582c:	e0 92 26 2a 	sts	0x2A26, r14	; 0x802a26 <myPID+0x28>
    5830:	f0 92 27 2a 	sts	0x2A27, r15	; 0x802a27 <myPID+0x29>
    5834:	e0 91 1a 2a 	lds	r30, 0x2A1A	; 0x802a1a <myPID+0x1c>
    5838:	f0 91 1b 2a 	lds	r31, 0x2A1B	; 0x802a1b <myPID+0x1d>
    583c:	80 81       	ld	r24, Z
    583e:	91 81       	ldd	r25, Z+1	; 0x01
    5840:	a2 81       	ldd	r26, Z+2	; 0x02
    5842:	b3 81       	ldd	r27, Z+3	; 0x03
    5844:	80 93 28 2a 	sts	0x2A28, r24	; 0x802a28 <myPID+0x2a>
    5848:	90 93 29 2a 	sts	0x2A29, r25	; 0x802a29 <myPID+0x2b>
    584c:	a0 93 2a 2a 	sts	0x2A2A, r26	; 0x802a2a <myPID+0x2c>
    5850:	b0 93 2b 2a 	sts	0x2A2B, r27	; 0x802a2b <myPID+0x2d>
    5854:	80 90 34 2a 	lds	r8, 0x2A34	; 0x802a34 <myPID+0x36>
    5858:	90 90 35 2a 	lds	r9, 0x2A35	; 0x802a35 <myPID+0x37>
    585c:	a0 90 36 2a 	lds	r10, 0x2A36	; 0x802a36 <myPID+0x38>
    5860:	b0 90 37 2a 	lds	r11, 0x2A37	; 0x802a37 <myPID+0x39>
    5864:	a5 01       	movw	r20, r10
    5866:	94 01       	movw	r18, r8
    5868:	c7 01       	movw	r24, r14
    586a:	b6 01       	movw	r22, r12
    586c:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    5870:	18 16       	cp	r1, r24
    5872:	4c f4       	brge	.+18     	; 0x5886 <main+0x34e>
    5874:	80 92 24 2a 	sts	0x2A24, r8	; 0x802a24 <myPID+0x26>
    5878:	90 92 25 2a 	sts	0x2A25, r9	; 0x802a25 <myPID+0x27>
    587c:	a0 92 26 2a 	sts	0x2A26, r10	; 0x802a26 <myPID+0x28>
    5880:	b0 92 27 2a 	sts	0x2A27, r11	; 0x802a27 <myPID+0x29>
    5884:	10 c0       	rjmp	.+32     	; 0x58a6 <main+0x36e>
    5886:	80 90 30 2a 	lds	r8, 0x2A30	; 0x802a30 <myPID+0x32>
    588a:	90 90 31 2a 	lds	r9, 0x2A31	; 0x802a31 <myPID+0x33>
    588e:	a0 90 32 2a 	lds	r10, 0x2A32	; 0x802a32 <myPID+0x34>
    5892:	b0 90 33 2a 	lds	r11, 0x2A33	; 0x802a33 <myPID+0x35>
    5896:	a5 01       	movw	r20, r10
    5898:	94 01       	movw	r18, r8
    589a:	c7 01       	movw	r24, r14
    589c:	b6 01       	movw	r22, r12
    589e:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    58a2:	87 fd       	sbrc	r24, 7
    58a4:	e7 cf       	rjmp	.-50     	; 0x5874 <main+0x33c>
SetMode():
    58a6:	81 e0       	ldi	r24, 0x01	; 1
    58a8:	80 93 38 2a 	sts	0x2A38, r24	; 0x802a38 <myPID+0x3a>
pinMode():
    58ac:	61 e0       	ldi	r22, 0x01	; 1
    58ae:	85 e1       	ldi	r24, 0x15	; 21
    58b0:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    58b4:	61 e0       	ldi	r22, 0x01	; 1
    58b6:	88 e1       	ldi	r24, 0x18	; 24
    58b8:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    58bc:	61 e0       	ldi	r22, 0x01	; 1
    58be:	89 e1       	ldi	r24, 0x19	; 25
    58c0:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    58c4:	61 e0       	ldi	r22, 0x01	; 1
    58c6:	81 e2       	ldi	r24, 0x21	; 33
    58c8:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
digitalWrite():
    58cc:	60 e0       	ldi	r22, 0x00	; 0
    58ce:	89 e1       	ldi	r24, 0x19	; 25
    58d0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    58d4:	60 e0       	ldi	r22, 0x00	; 0
    58d6:	85 e1       	ldi	r24, 0x15	; 21
    58d8:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    58dc:	60 e0       	ldi	r22, 0x00	; 0
    58de:	88 e1       	ldi	r24, 0x18	; 24
    58e0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    58e4:	60 e0       	ldi	r22, 0x00	; 0
    58e6:	81 e2       	ldi	r24, 0x21	; 33
    58e8:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
pinMode():
    58ec:	61 e0       	ldi	r22, 0x01	; 1
    58ee:	8b e1       	ldi	r24, 0x1B	; 27
    58f0:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    58f4:	61 e0       	ldi	r22, 0x01	; 1
    58f6:	8c e1       	ldi	r24, 0x1C	; 28
    58f8:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    58fc:	61 e0       	ldi	r22, 0x01	; 1
    58fe:	8d e1       	ldi	r24, 0x1D	; 29
    5900:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    5904:	61 e0       	ldi	r22, 0x01	; 1
    5906:	8a e1       	ldi	r24, 0x1A	; 26
    5908:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
Setup():
    590c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    5910:	8d e3       	ldi	r24, 0x3D	; 61
    5912:	9b e2       	ldi	r25, 0x2B	; 43
    5914:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
    5918:	82 e2       	ldi	r24, 0x22	; 34
    591a:	9b e2       	ldi	r25, 0x2B	; 43
    591c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
    5920:	90 e0       	ldi	r25, 0x00	; 0
    5922:	80 e0       	ldi	r24, 0x00	; 0
    5924:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5928:	aa 24       	eor	r10, r10
    592a:	a3 94       	inc	r10
    592c:	81 11       	cpse	r24, r1
    592e:	01 c0       	rjmp	.+2      	; 0x5932 <main+0x3fa>
    5930:	a1 2c       	mov	r10, r1
    5932:	a0 92 aa 28 	sts	0x28AA, r10	; 0x8028aa <STIR_VALUE_SET>
    5936:	81 e0       	ldi	r24, 0x01	; 1
    5938:	90 e0       	ldi	r25, 0x00	; 0
    593a:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    593e:	bb 24       	eor	r11, r11
    5940:	b3 94       	inc	r11
    5942:	81 11       	cpse	r24, r1
    5944:	01 c0       	rjmp	.+2      	; 0x5948 <main+0x410>
    5946:	b1 2c       	mov	r11, r1
    5948:	b0 92 53 29 	sts	0x2953, r11	; 0x802953 <DEGREE_VALUE_SET>
    594c:	82 e0       	ldi	r24, 0x02	; 2
    594e:	90 e0       	ldi	r25, 0x00	; 0
    5950:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5954:	c8 2e       	mov	r12, r24
    5956:	d1 2c       	mov	r13, r1
    5958:	c0 92 12 29 	sts	0x2912, r12	; 0x802912 <SAFE_VALUE_SET_DEG>
    595c:	d0 92 13 29 	sts	0x2913, r13	; 0x802913 <SAFE_VALUE_SET_DEG+0x1>
    5960:	60 e1       	ldi	r22, 0x10	; 16
    5962:	79 e2       	ldi	r23, 0x29	; 41
    5964:	83 e0       	ldi	r24, 0x03	; 3
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	0e 94 15 10 	call	0x202a	; 0x202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    596c:	85 e0       	ldi	r24, 0x05	; 5
    596e:	90 e0       	ldi	r25, 0x00	; 0
    5970:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5974:	e8 2e       	mov	r14, r24
    5976:	f1 2c       	mov	r15, r1
    5978:	e0 92 d8 28 	sts	0x28D8, r14	; 0x8028d8 <CAL_SELECT_VALUE>
    597c:	f0 92 d9 28 	sts	0x28D9, r15	; 0x8028d9 <CAL_SELECT_VALUE+0x1>
    5980:	5a e0       	ldi	r21, 0x0A	; 10
    5982:	85 2e       	mov	r8, r21
    5984:	59 e2       	ldi	r21, 0x29	; 41
    5986:	95 2e       	mov	r9, r21
main():
    5988:	06 e4       	ldi	r16, 0x46	; 70
    598a:	10 e0       	ldi	r17, 0x00	; 0
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    598c:	09 83       	std	Y+1, r16	; 0x01
    598e:	1a 83       	std	Y+2, r17	; 0x02
_ZNK5EERefcvhEv():
    5990:	ce 01       	movw	r24, r28
    5992:	01 96       	adiw	r24, 0x01	; 1
    5994:	0e 94 05 10 	call	0x200a	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    5998:	f4 01       	movw	r30, r8
    599a:	81 93       	st	Z+, r24
    599c:	4f 01       	movw	r8, r30
_ZN5EEPtrppEv():
    599e:	0f 5f       	subi	r16, 0xFF	; 255
    59a0:	1f 4f       	sbci	r17, 0xFF	; 255
_ZN11EEPROMClass3getIdEERT_iS2_.isra.5():
    59a2:	0a 34       	cpi	r16, 0x4A	; 74
    59a4:	11 05       	cpc	r17, r1
    59a6:	91 f7       	brne	.-28     	; 0x598c <main+0x454>
Setup():
    59a8:	87 e0       	ldi	r24, 0x07	; 7
    59aa:	90 e0       	ldi	r25, 0x00	; 0
    59ac:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    59b0:	91 e0       	ldi	r25, 0x01	; 1
    59b2:	81 11       	cpse	r24, r1
    59b4:	01 c0       	rjmp	.+2      	; 0x59b8 <main+0x480>
    59b6:	90 e0       	ldi	r25, 0x00	; 0
    59b8:	90 93 ec 28 	sts	0x28EC, r25	; 0x8028ec <SIGN>
    59bc:	88 e0       	ldi	r24, 0x08	; 8
    59be:	90 e0       	ldi	r25, 0x00	; 0
    59c0:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    59c4:	91 e0       	ldi	r25, 0x01	; 1
    59c6:	81 11       	cpse	r24, r1
    59c8:	01 c0       	rjmp	.+2      	; 0x59cc <main+0x494>
    59ca:	90 e0       	ldi	r25, 0x00	; 0
    59cc:	90 93 e7 28 	sts	0x28E7, r25	; 0x8028e7 <ERROR_SET_IN_DEG_FLAG>
    59d0:	89 e0       	ldi	r24, 0x09	; 9
    59d2:	90 e0       	ldi	r25, 0x00	; 0
    59d4:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    59d8:	91 e0       	ldi	r25, 0x01	; 1
    59da:	81 11       	cpse	r24, r1
    59dc:	01 c0       	rjmp	.+2      	; 0x59e0 <main+0x4a8>
    59de:	90 e0       	ldi	r25, 0x00	; 0
    59e0:	90 93 e2 28 	sts	0x28E2, r25	; 0x8028e2 <ERROR_SET_IN_FAH_FLAG>
    59e4:	60 ed       	ldi	r22, 0xD0	; 208
    59e6:	78 e2       	ldi	r23, 0x28	; 40
    59e8:	80 e5       	ldi	r24, 0x50	; 80
    59ea:	90 e0       	ldi	r25, 0x00	; 0
    59ec:	0e 94 3a 10 	call	0x2074	; 0x2074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    59f0:	6c ec       	ldi	r22, 0xCC	; 204
    59f2:	78 e2       	ldi	r23, 0x28	; 40
    59f4:	8a e5       	ldi	r24, 0x5A	; 90
    59f6:	90 e0       	ldi	r25, 0x00	; 0
    59f8:	0e 94 3a 10 	call	0x2074	; 0x2074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    59fc:	68 ec       	ldi	r22, 0xC8	; 200
    59fe:	78 e2       	ldi	r23, 0x28	; 40
    5a00:	84 e6       	ldi	r24, 0x64	; 100
    5a02:	90 e0       	ldi	r25, 0x00	; 0
    5a04:	0e 94 3a 10 	call	0x2074	; 0x2074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
    5a08:	64 ec       	ldi	r22, 0xC4	; 196
    5a0a:	78 e2       	ldi	r23, 0x28	; 40
    5a0c:	8e e6       	ldi	r24, 0x6E	; 110
    5a0e:	90 e0       	ldi	r25, 0x00	; 0
    5a10:	0e 94 3a 10 	call	0x2074	; 0x2074 <long& EEPROMClass::get<long>(int, long&) [clone .isra.6]>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5a14:	81 e4       	ldi	r24, 0x41	; 65
    5a16:	90 e0       	ldi	r25, 0x00	; 0
    5a18:	89 83       	std	Y+1, r24	; 0x01
    5a1a:	9a 83       	std	Y+2, r25	; 0x02
_ZNK5EERefcvhEv():
    5a1c:	ce 01       	movw	r24, r28
    5a1e:	01 96       	adiw	r24, 0x01	; 1
    5a20:	0e 94 05 10 	call	0x200a	; 0x200a <EERef::operator*() const>
_ZN11EEPROMClass3getIbEERT_iS2_.isra.7():
    5a24:	80 93 a9 28 	sts	0x28A9, r24	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
Setup():
    5a28:	6f ea       	ldi	r22, 0xAF	; 175
    5a2a:	78 e2       	ldi	r23, 0x28	; 40
    5a2c:	88 e9       	ldi	r24, 0x98	; 152
    5a2e:	90 e0       	ldi	r25, 0x00	; 0
    5a30:	0e 94 15 10 	call	0x202a	; 0x202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    5a34:	6d ea       	ldi	r22, 0xAD	; 173
    5a36:	78 e2       	ldi	r23, 0x28	; 40
    5a38:	8a e9       	ldi	r24, 0x9A	; 154
    5a3a:	90 e0       	ldi	r25, 0x00	; 0
    5a3c:	0e 94 15 10 	call	0x202a	; 0x202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    5a40:	8f e0       	ldi	r24, 0x0F	; 15
    5a42:	90 e0       	ldi	r25, 0x00	; 0
    5a44:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5a48:	01 e0       	ldi	r16, 0x01	; 1
    5a4a:	81 11       	cpse	r24, r1
    5a4c:	01 c0       	rjmp	.+2      	; 0x5a50 <main+0x518>
    5a4e:	00 e0       	ldi	r16, 0x00	; 0
    5a50:	00 93 a4 28 	sts	0x28A4, r16	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    5a54:	86 e9       	ldi	r24, 0x96	; 150
    5a56:	90 e0       	ldi	r25, 0x00	; 0
    5a58:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5a5c:	11 e0       	ldi	r17, 0x01	; 1
    5a5e:	81 11       	cpse	r24, r1
    5a60:	01 c0       	rjmp	.+2      	; 0x5a64 <main+0x52c>
    5a62:	10 e0       	ldi	r17, 0x00	; 0
    5a64:	10 93 0e 29 	sts	0x290E, r17	; 0x80290e <select_product_type>
    5a68:	84 e8       	ldi	r24, 0x84	; 132
    5a6a:	90 e0       	ldi	r25, 0x00	; 0
    5a6c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5a70:	91 e0       	ldi	r25, 0x01	; 1
    5a72:	81 11       	cpse	r24, r1
    5a74:	01 c0       	rjmp	.+2      	; 0x5a78 <main+0x540>
    5a76:	90 e0       	ldi	r25, 0x00	; 0
    5a78:	90 93 f1 28 	sts	0x28F1, r25	; 0x8028f1 <select_heating_type>
    5a7c:	2a 2d       	mov	r18, r10
    5a7e:	30 e0       	ldi	r19, 0x00	; 0
    5a80:	20 93 21 29 	sts	0x2921, r18	; 0x802921 <SET_LONG_VALUE>
    5a84:	30 93 22 29 	sts	0x2922, r19	; 0x802922 <SET_LONG_VALUE+0x1>
    5a88:	2b 2d       	mov	r18, r11
    5a8a:	30 e0       	ldi	r19, 0x00	; 0
    5a8c:	20 93 23 29 	sts	0x2923, r18	; 0x802923 <SET_LONG_VALUE+0x2>
    5a90:	30 93 24 29 	sts	0x2924, r19	; 0x802924 <SET_LONG_VALUE+0x3>
    5a94:	c0 92 25 29 	sts	0x2925, r12	; 0x802925 <SET_LONG_VALUE+0x4>
    5a98:	d0 92 26 29 	sts	0x2926, r13	; 0x802926 <SET_LONG_VALUE+0x5>
    5a9c:	20 91 10 29 	lds	r18, 0x2910	; 0x802910 <SAFE_VALUE_SET_FAH>
    5aa0:	30 91 11 29 	lds	r19, 0x2911	; 0x802911 <SAFE_VALUE_SET_FAH+0x1>
    5aa4:	20 93 49 29 	sts	0x2949, r18	; 0x802949 <SET_LONG_VALUE+0x28>
    5aa8:	30 93 4a 29 	sts	0x294A, r19	; 0x80294a <SET_LONG_VALUE+0x29>
    5aac:	e0 92 2d 29 	sts	0x292D, r14	; 0x80292d <SET_LONG_VALUE+0xc>
    5ab0:	f0 92 2e 29 	sts	0x292E, r15	; 0x80292e <SET_LONG_VALUE+0xd>
    5ab4:	20 91 a9 28 	lds	r18, 0x28A9	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    5ab8:	30 e0       	ldi	r19, 0x00	; 0
    5aba:	20 93 27 29 	sts	0x2927, r18	; 0x802927 <SET_LONG_VALUE+0x6>
    5abe:	30 93 28 29 	sts	0x2928, r19	; 0x802928 <SET_LONG_VALUE+0x7>
    5ac2:	20 2f       	mov	r18, r16
    5ac4:	30 e0       	ldi	r19, 0x00	; 0
    5ac6:	20 93 29 29 	sts	0x2929, r18	; 0x802929 <SET_LONG_VALUE+0x8>
    5aca:	30 93 2a 29 	sts	0x292A, r19	; 0x80292a <SET_LONG_VALUE+0x9>
    5ace:	89 2f       	mov	r24, r25
    5ad0:	90 e0       	ldi	r25, 0x00	; 0
    5ad2:	80 93 41 29 	sts	0x2941, r24	; 0x802941 <SET_LONG_VALUE+0x20>
    5ad6:	90 93 42 29 	sts	0x2942, r25	; 0x802942 <SET_LONG_VALUE+0x21>
    5ada:	81 2f       	mov	r24, r17
    5adc:	90 e0       	ldi	r25, 0x00	; 0
    5ade:	80 93 2b 29 	sts	0x292B, r24	; 0x80292b <SET_LONG_VALUE+0xa>
    5ae2:	90 93 2c 29 	sts	0x292C, r25	; 0x80292c <SET_LONG_VALUE+0xb>
    5ae6:	60 e4       	ldi	r22, 0x40	; 64
    5ae8:	79 e2       	ldi	r23, 0x29	; 41
    5aea:	88 e7       	ldi	r24, 0x78	; 120
    5aec:	90 e0       	ldi	r25, 0x00	; 0
    5aee:	0e 94 15 10 	call	0x202a	; 0x202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    5af2:	83 e7       	ldi	r24, 0x73	; 115
    5af4:	90 e0       	ldi	r25, 0x00	; 0
    5af6:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5afa:	90 e0       	ldi	r25, 0x00	; 0
    5afc:	80 93 16 29 	sts	0x2916, r24	; 0x802916 <SET_VALUE+0x2>
    5b00:	90 93 17 29 	sts	0x2917, r25	; 0x802917 <SET_VALUE+0x3>
    5b04:	85 e7       	ldi	r24, 0x75	; 117
    5b06:	90 e0       	ldi	r25, 0x00	; 0
    5b08:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5b0c:	90 e0       	ldi	r25, 0x00	; 0
    5b0e:	80 93 18 29 	sts	0x2918, r24	; 0x802918 <SET_VALUE+0x4>
    5b12:	90 93 19 29 	sts	0x2919, r25	; 0x802919 <SET_VALUE+0x5>
    5b16:	8d e7       	ldi	r24, 0x7D	; 125
    5b18:	90 e0       	ldi	r25, 0x00	; 0
    5b1a:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5b1e:	90 e0       	ldi	r25, 0x00	; 0
    5b20:	80 93 1a 29 	sts	0x291A, r24	; 0x80291a <SET_VALUE+0x6>
    5b24:	90 93 1b 29 	sts	0x291B, r25	; 0x80291b <SET_VALUE+0x7>
    5b28:	82 e8       	ldi	r24, 0x82	; 130
    5b2a:	90 e0       	ldi	r25, 0x00	; 0
    5b2c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5b30:	90 e0       	ldi	r25, 0x00	; 0
    5b32:	80 93 1c 29 	sts	0x291C, r24	; 0x80291c <SET_VALUE+0x8>
    5b36:	90 93 1d 29 	sts	0x291D, r25	; 0x80291d <SET_VALUE+0x9>
    5b3a:	87 e8       	ldi	r24, 0x87	; 135
    5b3c:	90 e0       	ldi	r25, 0x00	; 0
    5b3e:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <EEPROMClass::read(int) [clone .isra.0]>
    5b42:	91 e0       	ldi	r25, 0x01	; 1
    5b44:	81 11       	cpse	r24, r1
    5b46:	01 c0       	rjmp	.+2      	; 0x5b4a <main+0x612>
    5b48:	90 e0       	ldi	r25, 0x00	; 0
    5b4a:	90 93 9f 28 	sts	0x289F, r25	; 0x80289f <Process_Interrupt_flag>
setup():
    5b4e:	8a e3       	ldi	r24, 0x3A	; 58
    5b50:	9a e2       	ldi	r25, 0x2A	; 42
    5b52:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
pinMode():
    5b56:	62 e0       	ldi	r22, 0x02	; 2
    5b58:	83 e2       	ldi	r24, 0x23	; 35
    5b5a:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    5b5e:	62 e0       	ldi	r22, 0x02	; 2
    5b60:	85 e2       	ldi	r24, 0x25	; 37
    5b62:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    5b66:	62 e0       	ldi	r22, 0x02	; 2
    5b68:	84 e2       	ldi	r24, 0x24	; 36
    5b6a:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
    5b6e:	62 e0       	ldi	r22, 0x02	; 2
    5b70:	82 e2       	ldi	r24, 0x22	; 34
    5b72:	0e 94 b3 07 	call	0xf66	; 0xf66 <pinMode.part.1>
attachClick():
    5b76:	84 e2       	ldi	r24, 0x24	; 36
    5b78:	91 e1       	ldi	r25, 0x11	; 17
    5b7a:	80 93 bf 2a 	sts	0x2ABF, r24	; 0x802abf <button1+0xd>
    5b7e:	90 93 c0 2a 	sts	0x2AC0, r25	; 0x802ac0 <button1+0xe>
attachLongPressStart():
    5b82:	82 ed       	ldi	r24, 0xD2	; 210
    5b84:	9f e0       	ldi	r25, 0x0F	; 15
    5b86:	80 93 c5 2a 	sts	0x2AC5, r24	; 0x802ac5 <button1+0x13>
    5b8a:	90 93 c6 2a 	sts	0x2AC6, r25	; 0x802ac6 <button1+0x14>
attachClick():
    5b8e:	82 e8       	ldi	r24, 0x82	; 130
    5b90:	9f e0       	ldi	r25, 0x0F	; 15
    5b92:	80 93 a0 2a 	sts	0x2AA0, r24	; 0x802aa0 <button2+0xd>
    5b96:	90 93 a1 2a 	sts	0x2AA1, r25	; 0x802aa1 <button2+0xe>
attachDuringLongPress():
    5b9a:	8b e6       	ldi	r24, 0x6B	; 107
    5b9c:	9f e0       	ldi	r25, 0x0F	; 15
    5b9e:	80 93 aa 2a 	sts	0x2AAA, r24	; 0x802aaa <button2+0x17>
    5ba2:	90 93 ab 2a 	sts	0x2AAB, r25	; 0x802aab <button2+0x18>
attachLongPressStop():
    5ba6:	81 e1       	ldi	r24, 0x11	; 17
    5ba8:	96 e0       	ldi	r25, 0x06	; 6
    5baa:	80 93 a8 2a 	sts	0x2AA8, r24	; 0x802aa8 <button2+0x15>
    5bae:	90 93 a9 2a 	sts	0x2AA9, r25	; 0x802aa9 <button2+0x16>
attachClick():
    5bb2:	8c e0       	ldi	r24, 0x0C	; 12
    5bb4:	9f e0       	ldi	r25, 0x0F	; 15
    5bb6:	80 93 81 2a 	sts	0x2A81, r24	; 0x802a81 <button3+0xd>
    5bba:	90 93 82 2a 	sts	0x2A82, r25	; 0x802a82 <button3+0xe>
attachDuringLongPress():
    5bbe:	85 ef       	ldi	r24, 0xF5	; 245
    5bc0:	9e e0       	ldi	r25, 0x0E	; 14
    5bc2:	80 93 8b 2a 	sts	0x2A8B, r24	; 0x802a8b <button3+0x17>
    5bc6:	90 93 8c 2a 	sts	0x2A8C, r25	; 0x802a8c <button3+0x18>
attachLongPressStop():
    5bca:	86 e0       	ldi	r24, 0x06	; 6
    5bcc:	96 e0       	ldi	r25, 0x06	; 6
    5bce:	80 93 89 2a 	sts	0x2A89, r24	; 0x802a89 <button3+0x15>
    5bd2:	90 93 8a 2a 	sts	0x2A8A, r25	; 0x802a8a <button3+0x16>
attachClick():
    5bd6:	82 e9       	ldi	r24, 0x92	; 146
    5bd8:	9e e0       	ldi	r25, 0x0E	; 14
    5bda:	80 93 62 2a 	sts	0x2A62, r24	; 0x802a62 <button4+0xd>
    5bde:	90 93 63 2a 	sts	0x2A63, r25	; 0x802a63 <button4+0xe>
attachLongPressStart():
    5be2:	8b e6       	ldi	r24, 0x6B	; 107
    5be4:	9e e0       	ldi	r25, 0x0E	; 14
    5be6:	80 93 68 2a 	sts	0x2A68, r24	; 0x802a68 <button4+0x13>
    5bea:	90 93 69 2a 	sts	0x2A69, r25	; 0x802a69 <button4+0x14>
setup():
    5bee:	81 ed       	ldi	r24, 0xD1	; 209
    5bf0:	9a e2       	ldi	r25, 0x2A	; 42
    5bf2:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
loop():
    5bf6:	8a e3       	ldi	r24, 0x3A	; 58
    5bf8:	9a e2       	ldi	r25, 0x2A	; 42
    5bfa:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
DISP_UPDATE():
    5bfe:	8f ed       	ldi	r24, 0xDF	; 223
    5c00:	9b e2       	ldi	r25, 0x2B	; 43
    5c02:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
loop():
    5c06:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
    5c0a:	80 91 06 28 	lds	r24, 0x2806	; 0x802806 <StopVersionDisplay>
    5c0e:	88 23       	and	r24, r24
    5c10:	b1 f1       	breq	.+108    	; 0x5c7e <main+0x746>
    5c12:	81 ed       	ldi	r24, 0xD1	; 209
    5c14:	9a e2       	ldi	r25, 0x2A	; 42
    5c16:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    5c1a:	89 e1       	ldi	r24, 0x19	; 25
    5c1c:	90 e0       	ldi	r25, 0x00	; 0
    5c1e:	0e 94 2a 0b 	call	0x1654	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
DISPLAY_DIGIT2():
    5c22:	82 e2       	ldi	r24, 0x22	; 34
    5c24:	90 e0       	ldi	r25, 0x00	; 0
    5c26:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    5c2a:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    5c2e:	88 e1       	ldi	r24, 0x18	; 24
    5c30:	90 e0       	ldi	r25, 0x00	; 0
    5c32:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    5c36:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    5c3a:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    5c3e:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    5c42:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    5c46:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    5c4a:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    5c4e:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    5c52:	84 e0       	ldi	r24, 0x04	; 4
    5c54:	90 e0       	ldi	r25, 0x00	; 0
    5c56:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    5c5a:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    5c5e:	10 92 fe 28 	sts	0x28FE, r1	; 0x8028fe <digits1+0x4>
    5c62:	10 92 ff 28 	sts	0x28FF, r1	; 0x8028ff <digits1+0x5>
    5c66:	83 e0       	ldi	r24, 0x03	; 3
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    5c6e:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
loop():
    5c72:	81 e0       	ldi	r24, 0x01	; 1
    5c74:	80 93 c2 28 	sts	0x28C2, r24	; 0x8028c2 <DOT1_1>
main():
    5c78:	0e 94 81 07 	call	0xf02	; 0xf02 <serialEventRun()>
    5c7c:	bc cf       	rjmp	.-136    	; 0x5bf6 <main+0x6be>
stop():
    5c7e:	10 92 d1 2a 	sts	0x2AD1, r1	; 0x802ad1 <VersionDisplay>
    5c82:	10 92 dc 2a 	sts	0x2ADC, r1	; 0x802adc <VersionDisplay+0xb>
    5c86:	10 92 dd 2a 	sts	0x2ADD, r1	; 0x802add <VersionDisplay+0xc>
    5c8a:	10 92 de 2a 	sts	0x2ADE, r1	; 0x802ade <VersionDisplay+0xd>
    5c8e:	10 92 df 2a 	sts	0x2ADF, r1	; 0x802adf <VersionDisplay+0xe>
    5c92:	10 92 e0 2a 	sts	0x2AE0, r1	; 0x802ae0 <VersionDisplay+0xf>
    5c96:	10 92 e1 2a 	sts	0x2AE1, r1	; 0x802ae1 <VersionDisplay+0x10>
loop():
    5c9a:	20 e0       	ldi	r18, 0x00	; 0
    5c9c:	30 e0       	ldi	r19, 0x00	; 0
    5c9e:	40 ef       	ldi	r20, 0xF0	; 240
    5ca0:	52 e4       	ldi	r21, 0x42	; 66
    5ca2:	60 91 f2 28 	lds	r22, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    5ca6:	70 91 f3 28 	lds	r23, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    5caa:	80 91 f4 28 	lds	r24, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    5cae:	90 91 f5 28 	lds	r25, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    5cb2:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    5cb6:	87 fd       	sbrc	r24, 7
    5cb8:	5a c0       	rjmp	.+180    	; 0x5d6e <main+0x836>
digitalWrite():
    5cba:	60 e0       	ldi	r22, 0x00	; 0
    5cbc:	88 e1       	ldi	r24, 0x18	; 24
    5cbe:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
Probe_Error():
    5cc2:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_0>
    5cc6:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <DOT2_2>
    5cca:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    5cce:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <DOT1_2>
    5cd2:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    5cd6:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    5cda:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    5cde:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    5ce2:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    5ce6:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    5cea:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    5cee:	10 92 54 29 	sts	0x2954, r1	; 0x802954 <LONG_PRESS>
    5cf2:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
digitalWrite():
    5cf6:	60 e0       	ldi	r22, 0x00	; 0
    5cf8:	8c e0       	ldi	r24, 0x0C	; 12
    5cfa:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    5cfe:	60 e0       	ldi	r22, 0x00	; 0
    5d00:	8d e0       	ldi	r24, 0x0D	; 13
    5d02:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
Probe_Error():
    5d06:	80 91 41 28 	lds	r24, 0x2841	; 0x802841 <toggle>
    5d0a:	88 23       	and	r24, r24
    5d0c:	09 f4       	brne	.+2      	; 0x5d10 <main+0x7d8>
    5d0e:	22 c6       	rjmp	.+3140   	; 0x6954 <main+0x141c>
digitalWrite():
    5d10:	61 e0       	ldi	r22, 0x01	; 1
    5d12:	85 e1       	ldi	r24, 0x15	; 21
    5d14:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    5d18:	8b e0       	ldi	r24, 0x0B	; 11
    5d1a:	90 e0       	ldi	r25, 0x00	; 0
    5d1c:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    5d20:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    5d24:	81 e1       	ldi	r24, 0x11	; 17
    5d26:	90 e0       	ldi	r25, 0x00	; 0
    5d28:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    5d2c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    5d30:	27 e1       	ldi	r18, 0x17	; 23
    5d32:	30 e0       	ldi	r19, 0x00	; 0
    5d34:	20 93 06 29 	sts	0x2906, r18	; 0x802906 <digits2+0x4>
    5d38:	30 93 07 29 	sts	0x2907, r19	; 0x802907 <digits2+0x5>
    5d3c:	4e e0       	ldi	r20, 0x0E	; 14
    5d3e:	50 e0       	ldi	r21, 0x00	; 0
    5d40:	40 93 08 29 	sts	0x2908, r20	; 0x802908 <digits2+0x6>
    5d44:	50 93 09 29 	sts	0x2909, r21	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    5d48:	4f e0       	ldi	r20, 0x0F	; 15
    5d4a:	50 e0       	ldi	r21, 0x00	; 0
    5d4c:	40 93 fa 28 	sts	0x28FA, r20	; 0x8028fa <digits1>
    5d50:	50 93 fb 28 	sts	0x28FB, r21	; 0x8028fb <digits1+0x1>
    5d54:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    5d58:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    5d5c:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    5d60:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    5d64:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    5d68:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    5d6c:	85 cf       	rjmp	.-246    	; 0x5c78 <main+0x740>
digitalRead():
    5d6e:	85 e2       	ldi	r24, 0x25	; 37
    5d70:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
    5d74:	10 91 46 28 	lds	r17, 0x2846	; 0x802846 <but1>
but_check():
    5d78:	81 11       	cpse	r24, r1
    5d7a:	1c c0       	rjmp	.+56     	; 0x5db4 <main+0x87c>
digitalRead():
    5d7c:	84 e2       	ldi	r24, 0x24	; 36
    5d7e:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
but_check():
    5d82:	81 11       	cpse	r24, r1
    5d84:	17 c0       	rjmp	.+46     	; 0x5db4 <main+0x87c>
    5d86:	11 11       	cpse	r17, r1
    5d88:	15 c0       	rjmp	.+42     	; 0x5db4 <main+0x87c>
    5d8a:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    5d8e:	60 93 42 28 	sts	0x2842, r22	; 0x802842 <start_tt>
    5d92:	70 93 43 28 	sts	0x2843, r23	; 0x802843 <start_tt+0x1>
    5d96:	80 93 44 28 	sts	0x2844, r24	; 0x802844 <start_tt+0x2>
    5d9a:	90 93 45 28 	sts	0x2845, r25	; 0x802845 <start_tt+0x3>
    5d9e:	81 e0       	ldi	r24, 0x01	; 1
    5da0:	80 93 46 28 	sts	0x2846, r24	; 0x802846 <but1>
loop():
    5da4:	80 91 54 29 	lds	r24, 0x2954	; 0x802954 <LONG_PRESS>
    5da8:	88 23       	and	r24, r24
    5daa:	09 f4       	brne	.+2      	; 0x5dae <main+0x876>
    5dac:	53 c0       	rjmp	.+166    	; 0x5e54 <main+0x91c>
    5dae:	0e 94 e6 14 	call	0x29cc	; 0x29cc <Pclass::SET_LONG_PRESS_FUNCTION() [clone .constprop.46]>
    5db2:	62 cf       	rjmp	.-316    	; 0x5c78 <main+0x740>
digitalRead():
    5db4:	85 e2       	ldi	r24, 0x25	; 37
    5db6:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
but_check():
    5dba:	88 23       	and	r24, r24
    5dbc:	51 f0       	breq	.+20     	; 0x5dd2 <main+0x89a>
    5dbe:	11 23       	and	r17, r17
    5dc0:	89 f3       	breq	.-30     	; 0x5da4 <main+0x86c>
digitalRead():
    5dc2:	85 e2       	ldi	r24, 0x25	; 37
    5dc4:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
but_check():
    5dc8:	81 30       	cpi	r24, 0x01	; 1
    5dca:	e9 f5       	brne	.+122    	; 0x5e46 <main+0x90e>
    5dcc:	10 92 46 28 	sts	0x2846, r1	; 0x802846 <but1>
    5dd0:	e9 cf       	rjmp	.-46     	; 0x5da4 <main+0x86c>
    5dd2:	00 91 54 29 	lds	r16, 0x2954	; 0x802954 <LONG_PRESS>
digitalRead():
    5dd6:	84 e2       	ldi	r24, 0x24	; 36
    5dd8:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
but_check():
    5ddc:	81 11       	cpse	r24, r1
    5dde:	ef cf       	rjmp	.-34     	; 0x5dbe <main+0x886>
    5de0:	11 23       	and	r17, r17
    5de2:	01 f3       	breq	.-64     	; 0x5da4 <main+0x86c>
    5de4:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    5de8:	c0 90 42 28 	lds	r12, 0x2842	; 0x802842 <start_tt>
    5dec:	d0 90 43 28 	lds	r13, 0x2843	; 0x802843 <start_tt+0x1>
    5df0:	e0 90 44 28 	lds	r14, 0x2844	; 0x802844 <start_tt+0x2>
    5df4:	f0 90 45 28 	lds	r15, 0x2845	; 0x802845 <start_tt+0x3>
    5df8:	6c 19       	sub	r22, r12
    5dfa:	7d 09       	sbc	r23, r13
    5dfc:	8e 09       	sbc	r24, r14
    5dfe:	9f 09       	sbc	r25, r15
    5e00:	68 3b       	cpi	r22, 0xB8	; 184
    5e02:	7b 40       	sbci	r23, 0x0B	; 11
    5e04:	81 05       	cpc	r24, r1
    5e06:	91 05       	cpc	r25, r1
    5e08:	68 f2       	brcs	.-102    	; 0x5da4 <main+0x86c>
    5e0a:	84 ef       	ldi	r24, 0xF4	; 244
    5e0c:	91 e0       	ldi	r25, 0x01	; 1
    5e0e:	0e 94 2a 0b 	call	0x1654	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
    5e12:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    5e16:	81 11       	cpse	r24, r1
    5e18:	c5 cf       	rjmp	.-118    	; 0x5da4 <main+0x86c>
    5e1a:	01 11       	cpse	r16, r1
    5e1c:	c8 cf       	rjmp	.-112    	; 0x5dae <main+0x876>
    5e1e:	8e e5       	ldi	r24, 0x5E	; 94
    5e20:	91 e0       	ldi	r25, 0x01	; 1
    5e22:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    5e26:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    5e2a:	81 e0       	ldi	r24, 0x01	; 1
    5e2c:	80 93 54 29 	sts	0x2954, r24	; 0x802954 <LONG_PRESS>
    5e30:	80 93 a8 28 	sts	0x28A8, r24	; 0x8028a8 <RST_BUTT>
    5e34:	80 93 b1 28 	sts	0x28B1, r24	; 0x8028b1 <Service_Menu>
    5e38:	85 e0       	ldi	r24, 0x05	; 5
    5e3a:	90 e0       	ldi	r25, 0x00	; 0
    5e3c:	80 93 09 28 	sts	0x2809, r24	; 0x802809 <SELECTION_PARAMETER>
    5e40:	90 93 0a 28 	sts	0x280A, r25	; 0x80280a <SELECTION_PARAMETER+0x1>
    5e44:	af cf       	rjmp	.-162    	; 0x5da4 <main+0x86c>
digitalRead():
    5e46:	84 e2       	ldi	r24, 0x24	; 36
    5e48:	0e 94 31 09 	call	0x1262	; 0x1262 <digitalRead.part.3>
but_check():
    5e4c:	81 30       	cpi	r24, 0x01	; 1
    5e4e:	09 f0       	breq	.+2      	; 0x5e52 <main+0x91a>
    5e50:	a9 cf       	rjmp	.-174    	; 0x5da4 <main+0x86c>
    5e52:	bc cf       	rjmp	.-136    	; 0x5dcc <main+0x894>
SET_SHORT_PRESS_FUNCTION():
    5e54:	10 91 20 29 	lds	r17, 0x2920	; 0x802920 <ENTER_BUT>
    5e58:	12 30       	cpi	r17, 0x02	; 2
    5e5a:	09 f4       	brne	.+2      	; 0x5e5e <main+0x926>
    5e5c:	01 c6       	rjmp	.+3074   	; 0x6a60 <main+0x1528>
    5e5e:	0c f0       	brlt	.+2      	; 0x5e62 <main+0x92a>
    5e60:	4e c0       	rjmp	.+156    	; 0x5efe <main+0x9c6>
    5e62:	11 23       	and	r17, r17
    5e64:	09 f4       	brne	.+2      	; 0x5e68 <main+0x930>
    5e66:	f5 c3       	rjmp	.+2026   	; 0x6652 <main+0x111a>
    5e68:	11 30       	cpi	r17, 0x01	; 1
    5e6a:	09 f0       	breq	.+2      	; 0x5e6e <main+0x936>
    5e6c:	05 cf       	rjmp	.-502    	; 0x5c78 <main+0x740>
    5e6e:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    5e72:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
digitalWrite():
    5e76:	60 e0       	ldi	r22, 0x00	; 0
    5e78:	8d e1       	ldi	r24, 0x1D	; 29
    5e7a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    5e7e:	61 e0       	ldi	r22, 0x01	; 1
    5e80:	8c e0       	ldi	r24, 0x0C	; 12
    5e82:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    5e86:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    5e8a:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    5e8e:	49 97       	sbiw	r24, 0x19	; 25
    5e90:	0c f0       	brlt	.+2      	; 0x5e94 <main+0x95c>
    5e92:	c7 c5       	rjmp	.+2958   	; 0x6a22 <main+0x14ea>
    5e94:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    5e98:	81 11       	cpse	r24, r1
    5e9a:	bc c5       	rjmp	.+2936   	; 0x6a14 <main+0x14dc>
    5e9c:	88 e1       	ldi	r24, 0x18	; 24
    5e9e:	90 e0       	ldi	r25, 0x00	; 0
    5ea0:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    5ea4:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    5ea8:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    5eac:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    5eb0:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    5eb4:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    5eb8:	c3 97       	sbiw	r24, 0x33	; 51
    5eba:	24 f0       	brlt	.+8      	; 0x5ec4 <main+0x98c>
    5ebc:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    5ec0:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    5ec4:	8a e0       	ldi	r24, 0x0A	; 10
    5ec6:	90 e0       	ldi	r25, 0x00	; 0
    5ec8:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    5ecc:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    5ed0:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    5ed4:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    5ed8:	24 e6       	ldi	r18, 0x64	; 100
    5eda:	28 9f       	mul	r18, r24
    5edc:	b0 01       	movw	r22, r0
    5ede:	29 9f       	mul	r18, r25
    5ee0:	70 0d       	add	r23, r0
    5ee2:	11 24       	eor	r1, r1
    5ee4:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    5ee8:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    5eec:	68 0f       	add	r22, r24
    5eee:	79 1f       	adc	r23, r25
    5ef0:	07 2e       	mov	r0, r23
    5ef2:	00 0c       	add	r0, r0
    5ef4:	88 0b       	sbc	r24, r24
    5ef6:	99 0b       	sbc	r25, r25
    5ef8:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    5efc:	bd ce       	rjmp	.-646    	; 0x5c78 <main+0x740>
    5efe:	14 30       	cpi	r17, 0x04	; 4
    5f00:	09 f4       	brne	.+2      	; 0x5f04 <main+0x9cc>
    5f02:	b8 c6       	rjmp	.+3440   	; 0x6c74 <main+0x173c>
    5f04:	0c f4       	brge	.+2      	; 0x5f08 <main+0x9d0>
    5f06:	32 c6       	rjmp	.+3172   	; 0x6b6c <main+0x1634>
    5f08:	15 30       	cpi	r17, 0x05	; 5
    5f0a:	09 f0       	breq	.+2      	; 0x5f0e <main+0x9d6>
    5f0c:	b5 ce       	rjmp	.-662    	; 0x5c78 <main+0x740>
    5f0e:	a0 90 16 29 	lds	r10, 0x2916	; 0x802916 <SET_VALUE+0x2>
    5f12:	b0 90 17 29 	lds	r11, 0x2917	; 0x802917 <SET_VALUE+0x3>
    5f16:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    5f1a:	70 91 19 29 	lds	r23, 0x2919	; 0x802919 <SET_VALUE+0x5>
    5f1e:	07 2e       	mov	r0, r23
    5f20:	00 0c       	add	r0, r0
    5f22:	88 0b       	sbc	r24, r24
    5f24:	99 0b       	sbc	r25, r25
    5f26:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    5f2a:	20 e0       	ldi	r18, 0x00	; 0
    5f2c:	30 e0       	ldi	r19, 0x00	; 0
    5f2e:	40 e2       	ldi	r20, 0x20	; 32
    5f30:	51 e4       	ldi	r21, 0x41	; 65
    5f32:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    5f36:	6b 01       	movw	r12, r22
    5f38:	7c 01       	movw	r14, r24
    5f3a:	b5 01       	movw	r22, r10
    5f3c:	bb 0c       	add	r11, r11
    5f3e:	88 0b       	sbc	r24, r24
    5f40:	99 0b       	sbc	r25, r25
    5f42:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    5f46:	9b 01       	movw	r18, r22
    5f48:	ac 01       	movw	r20, r24
    5f4a:	c7 01       	movw	r24, r14
    5f4c:	b6 01       	movw	r22, r12
    5f4e:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    5f52:	2b 01       	movw	r4, r22
    5f54:	3c 01       	movw	r6, r24
    5f56:	40 92 83 28 	sts	0x2883, r4	; 0x802883 <SET_TEMP_DEG>
    5f5a:	50 92 84 28 	sts	0x2884, r5	; 0x802884 <SET_TEMP_DEG+0x1>
    5f5e:	60 92 85 28 	sts	0x2885, r6	; 0x802885 <SET_TEMP_DEG+0x2>
    5f62:	70 92 86 28 	sts	0x2886, r7	; 0x802886 <SET_TEMP_DEG+0x3>
    5f66:	00 91 40 29 	lds	r16, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    5f6a:	10 91 41 29 	lds	r17, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    5f6e:	00 93 81 28 	sts	0x2881, r16	; 0x802881 <SET_TEMP_FAH>
    5f72:	10 93 82 28 	sts	0x2882, r17	; 0x802882 <SET_TEMP_FAH+0x1>
    5f76:	c0 90 1a 29 	lds	r12, 0x291A	; 0x80291a <SET_VALUE+0x6>
    5f7a:	d0 90 1b 29 	lds	r13, 0x291B	; 0x80291b <SET_VALUE+0x7>
    5f7e:	c0 92 a2 28 	sts	0x28A2, r12	; 0x8028a2 <SET_HOUR>
    5f82:	d0 92 a3 28 	sts	0x28A3, r13	; 0x8028a3 <SET_HOUR+0x1>
    5f86:	e0 90 1c 29 	lds	r14, 0x291C	; 0x80291c <SET_VALUE+0x8>
    5f8a:	f0 90 1d 29 	lds	r15, 0x291D	; 0x80291d <SET_VALUE+0x9>
    5f8e:	e0 92 a0 28 	sts	0x28A0, r14	; 0x8028a0 <SET_MINUTE>
    5f92:	f0 92 a1 28 	sts	0x28A1, r15	; 0x8028a1 <SET_MINUTE+0x1>
    5f96:	2c e3       	ldi	r18, 0x3C	; 60
    5f98:	2c 9d       	mul	r18, r12
    5f9a:	c0 01       	movw	r24, r0
    5f9c:	2d 9d       	mul	r18, r13
    5f9e:	90 0d       	add	r25, r0
    5fa0:	11 24       	eor	r1, r1
    5fa2:	8e 0d       	add	r24, r14
    5fa4:	9f 1d       	adc	r25, r15
    5fa6:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <SET_MIN>
    5faa:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <SET_MIN+0x1>
    5fae:	81 e0       	ldi	r24, 0x01	; 1
    5fb0:	80 93 9f 28 	sts	0x289F, r24	; 0x80289f <Process_Interrupt_flag>
Process_Set_Values_Store_On_Eeprom():
    5fb4:	6a 2d       	mov	r22, r10
    5fb6:	83 e7       	ldi	r24, 0x73	; 115
    5fb8:	90 e0       	ldi	r25, 0x00	; 0
    5fba:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fbe:	60 91 18 29 	lds	r22, 0x2918	; 0x802918 <SET_VALUE+0x4>
    5fc2:	85 e7       	ldi	r24, 0x75	; 117
    5fc4:	90 e0       	ldi	r25, 0x00	; 0
    5fc6:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fca:	60 e4       	ldi	r22, 0x40	; 64
    5fcc:	79 e2       	ldi	r23, 0x29	; 41
    5fce:	88 e7       	ldi	r24, 0x78	; 120
    5fd0:	90 e0       	ldi	r25, 0x00	; 0
    5fd2:	0e 94 cd 10 	call	0x219a	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    5fd6:	6c 2d       	mov	r22, r12
    5fd8:	8d e7       	ldi	r24, 0x7D	; 125
    5fda:	90 e0       	ldi	r25, 0x00	; 0
    5fdc:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5fe0:	6e 2d       	mov	r22, r14
    5fe2:	82 e8       	ldi	r24, 0x82	; 130
    5fe4:	90 e0       	ldi	r25, 0x00	; 0
    5fe6:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
Process_Time_Set_On_Eeprom():
    5fea:	61 e0       	ldi	r22, 0x01	; 1
    5fec:	87 e8       	ldi	r24, 0x87	; 135
    5fee:	90 e0       	ldi	r25, 0x00	; 0
    5ff0:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    5ff4:	f0 90 53 29 	lds	r15, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
SET_SHORT_PRESS_FUNCTION():
    5ff8:	80 91 80 28 	lds	r24, 0x2880	; 0x802880 <FILL_BATH_ERROR_NOT_CLEAR>
    5ffc:	81 11       	cpse	r24, r1
    5ffe:	1b c0       	rjmp	.+54     	; 0x6036 <main+0xafe>
    6000:	f1 10       	cpse	r15, r1
    6002:	db c6       	rjmp	.+3510   	; 0x6dba <main+0x1882>
    6004:	20 e0       	ldi	r18, 0x00	; 0
    6006:	30 e0       	ldi	r19, 0x00	; 0
    6008:	40 e2       	ldi	r20, 0x20	; 32
    600a:	51 e4       	ldi	r21, 0x41	; 65
    600c:	60 91 f6 28 	lds	r22, 0x28F6	; 0x8028f6 <TEMP_DEG>
    6010:	70 91 f7 28 	lds	r23, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    6014:	80 91 f8 28 	lds	r24, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    6018:	90 91 f9 28 	lds	r25, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    601c:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    6020:	9b 01       	movw	r18, r22
    6022:	ac 01       	movw	r20, r24
    6024:	c3 01       	movw	r24, r6
    6026:	b2 01       	movw	r22, r4
    6028:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    602c:	87 ff       	sbrs	r24, 7
    602e:	03 c0       	rjmp	.+6      	; 0x6036 <main+0xafe>
    6030:	81 e0       	ldi	r24, 0x01	; 1
    6032:	80 93 80 28 	sts	0x2880, r24	; 0x802880 <FILL_BATH_ERROR_NOT_CLEAR>
    6036:	80 91 80 28 	lds	r24, 0x2880	; 0x802880 <FILL_BATH_ERROR_NOT_CLEAR>
    603a:	88 23       	and	r24, r24
    603c:	09 f4       	brne	.+2      	; 0x6040 <main+0xb08>
    603e:	d6 c6       	rjmp	.+3500   	; 0x6dec <main+0x18b4>
    6040:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <RATE_OF_HEATING>
    6044:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <RATE_OF_HEATING+0x1>
    6048:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <RATE_OF_HEATING+0x2>
    604c:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <RATE_OF_HEATING+0x3>
    6050:	81 e0       	ldi	r24, 0x01	; 1
    6052:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <CHECK_RATE_OF_HEATING>
    6056:	10 92 80 28 	sts	0x2880, r1	; 0x802880 <FILL_BATH_ERROR_NOT_CLEAR>
    605a:	f1 10       	cpse	r15, r1
    605c:	e8 c6       	rjmp	.+3536   	; 0x6e2e <main+0x18f6>
    605e:	80 91 83 28 	lds	r24, 0x2883	; 0x802883 <SET_TEMP_DEG>
    6062:	90 91 84 28 	lds	r25, 0x2884	; 0x802884 <SET_TEMP_DEG+0x1>
    6066:	a0 91 85 28 	lds	r26, 0x2885	; 0x802885 <SET_TEMP_DEG+0x2>
    606a:	b0 91 86 28 	lds	r27, 0x2886	; 0x802886 <SET_TEMP_DEG+0x3>
    606e:	80 93 74 28 	sts	0x2874, r24	; 0x802874 <PID_SETPOINT_To_Show>
    6072:	90 93 75 28 	sts	0x2875, r25	; 0x802875 <PID_SETPOINT_To_Show+0x1>
    6076:	a0 93 76 28 	sts	0x2876, r26	; 0x802876 <PID_SETPOINT_To_Show+0x2>
    607a:	b0 93 77 28 	sts	0x2877, r27	; 0x802877 <PID_SETPOINT_To_Show+0x3>
    607e:	80 93 f2 29 	sts	0x29F2, r24	; 0x8029f2 <PID_SETPOINT>
    6082:	90 93 f3 29 	sts	0x29F3, r25	; 0x8029f3 <PID_SETPOINT+0x1>
    6086:	a0 93 f4 29 	sts	0x29F4, r26	; 0x8029f4 <PID_SETPOINT+0x2>
    608a:	b0 93 f5 29 	sts	0x29F5, r27	; 0x8029f5 <PID_SETPOINT+0x3>
    608e:	87 e0       	ldi	r24, 0x07	; 7
    6090:	9b e2       	ldi	r25, 0x2B	; 43
    6092:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
    6096:	81 e0       	ldi	r24, 0x01	; 1
    6098:	80 93 73 28 	sts	0x2873, r24	; 0x802873 <Alternate_Display_Flag>
digitalWrite():
    609c:	61 e0       	ldi	r22, 0x01	; 1
    609e:	81 e2       	ldi	r24, 0x21	; 33
    60a0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    60a4:	22 24       	eor	r2, r2
    60a6:	23 94       	inc	r2
    60a8:	31 2c       	mov	r3, r1
    60aa:	05 e1       	ldi	r16, 0x15	; 21
    60ac:	10 e0       	ldi	r17, 0x00	; 0
    60ae:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <SET_MIN>
    60b2:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <SET_MIN+0x1>
    60b6:	18 16       	cp	r1, r24
    60b8:	19 06       	cpc	r1, r25
    60ba:	14 f0       	brlt	.+4      	; 0x60c0 <main+0xb88>
    60bc:	0c 94 01 39 	jmp	0x7202	; 0x7202 <main+0x1cca>
toggle_ticker_update():
    60c0:	8a e3       	ldi	r24, 0x3A	; 58
    60c2:	9a e2       	ldi	r25, 0x2A	; 42
    60c4:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    60c8:	20 e0       	ldi	r18, 0x00	; 0
    60ca:	30 e0       	ldi	r19, 0x00	; 0
    60cc:	40 e2       	ldi	r20, 0x20	; 32
    60ce:	51 e4       	ldi	r21, 0x41	; 65
    60d0:	60 91 83 28 	lds	r22, 0x2883	; 0x802883 <SET_TEMP_DEG>
    60d4:	70 91 84 28 	lds	r23, 0x2884	; 0x802884 <SET_TEMP_DEG+0x1>
    60d8:	80 91 85 28 	lds	r24, 0x2885	; 0x802885 <SET_TEMP_DEG+0x2>
    60dc:	90 91 86 28 	lds	r25, 0x2886	; 0x802886 <SET_TEMP_DEG+0x3>
    60e0:	0e 94 97 39 	call	0x732e	; 0x732e <__addsf3>
    60e4:	20 91 f6 28 	lds	r18, 0x28F6	; 0x8028f6 <TEMP_DEG>
    60e8:	30 91 f7 28 	lds	r19, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    60ec:	40 91 f8 28 	lds	r20, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    60f0:	50 91 f9 28 	lds	r21, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    60f4:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    60f8:	87 ff       	sbrs	r24, 7
    60fa:	04 c0       	rjmp	.+8      	; 0x6104 <main+0xbcc>
    60fc:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6100:	88 23       	and	r24, r24
    6102:	e9 f0       	breq	.+58     	; 0x613e <main+0xc06>
    6104:	60 91 81 28 	lds	r22, 0x2881	; 0x802881 <SET_TEMP_FAH>
    6108:	70 91 82 28 	lds	r23, 0x2882	; 0x802882 <SET_TEMP_FAH+0x1>
    610c:	66 5f       	subi	r22, 0xF6	; 246
    610e:	7f 4f       	sbci	r23, 0xFF	; 255
    6110:	07 2e       	mov	r0, r23
    6112:	00 0c       	add	r0, r0
    6114:	88 0b       	sbc	r24, r24
    6116:	99 0b       	sbc	r25, r25
    6118:	0e 94 9a 3a 	call	0x7534	; 0x7534 <__floatsisf>
    611c:	20 91 d4 28 	lds	r18, 0x28D4	; 0x8028d4 <TEMP_FAH>
    6120:	30 91 d5 28 	lds	r19, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    6124:	40 91 d6 28 	lds	r20, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    6128:	50 91 d7 28 	lds	r21, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    612c:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    6130:	87 ff       	sbrs	r24, 7
    6132:	a1 c6       	rjmp	.+3394   	; 0x6e76 <main+0x193e>
    6134:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6138:	88 23       	and	r24, r24
    613a:	09 f4       	brne	.+2      	; 0x613e <main+0xc06>
    613c:	9c c6       	rjmp	.+3384   	; 0x6e76 <main+0x193e>
    613e:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    6142:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    6146:	81 e0       	ldi	r24, 0x01	; 1
    6148:	80 93 89 28 	sts	0x2889, r24	; 0x802889 <checkTempRaised>
digitalWrite():
    614c:	60 e0       	ldi	r22, 0x00	; 0
    614e:	81 e2       	ldi	r24, 0x21	; 33
    6150:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6154:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    6158:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <SET_MIN>
    615c:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <SET_MIN+0x1>
digitalWrite():
    6160:	61 e0       	ldi	r22, 0x01	; 1
    6162:	8d e1       	ldi	r24, 0x1D	; 29
    6164:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    6168:	60 e0       	ldi	r22, 0x00	; 0
    616a:	8b e1       	ldi	r24, 0x1B	; 27
    616c:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6170:	0e 94 9b 04 	call	0x936	; 0x936 <Mclass::RTD_TEMP_CONV() [clone .constprop.49]>
DISP_UPDATE():
    6174:	8f ed       	ldi	r24, 0xDF	; 223
    6176:	9b e2       	ldi	r25, 0x2B	; 43
    6178:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
SET_SHORT_PRESS_FUNCTION():
    617c:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <STIR_VALUE_SET>
    6180:	88 23       	and	r24, r24
    6182:	29 f0       	breq	.+10     	; 0x618e <main+0xc56>
    6184:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
digitalWrite():
    6188:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    618a:	81 11       	cpse	r24, r1
    618c:	01 c0       	rjmp	.+2      	; 0x6190 <main+0xc58>
digitalWrite():
    618e:	60 e0       	ldi	r22, 0x00	; 0
    6190:	89 e1       	ldi	r24, 0x19	; 25
    6192:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6196:	b0 90 8b 28 	lds	r11, 0x288B	; 0x80288b <CHECK_RATE_OF_HEATING>
    619a:	b1 10       	cpse	r11, r1
    619c:	0a c0       	rjmp	.+20     	; 0x61b2 <main+0xc7a>
    619e:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    61a2:	60 93 6f 28 	sts	0x286F, r22	; 0x80286f <STOP_COUNT_VALUE>
    61a6:	70 93 70 28 	sts	0x2870, r23	; 0x802870 <STOP_COUNT_VALUE+0x1>
    61aa:	80 93 71 28 	sts	0x2871, r24	; 0x802871 <STOP_COUNT_VALUE+0x2>
    61ae:	90 93 72 28 	sts	0x2872, r25	; 0x802872 <STOP_COUNT_VALUE+0x3>
    61b2:	c0 90 6f 28 	lds	r12, 0x286F	; 0x80286f <STOP_COUNT_VALUE>
    61b6:	d0 90 70 28 	lds	r13, 0x2870	; 0x802870 <STOP_COUNT_VALUE+0x1>
    61ba:	e0 90 71 28 	lds	r14, 0x2871	; 0x802871 <STOP_COUNT_VALUE+0x2>
    61be:	f0 90 72 28 	lds	r15, 0x2872	; 0x802872 <STOP_COUNT_VALUE+0x3>
    61c2:	80 91 78 28 	lds	r24, 0x2878	; 0x802878 <START_COUNT_VALUE>
    61c6:	90 91 79 28 	lds	r25, 0x2879	; 0x802879 <START_COUNT_VALUE+0x1>
    61ca:	a0 91 7a 28 	lds	r26, 0x287A	; 0x80287a <START_COUNT_VALUE+0x2>
    61ce:	b0 91 7b 28 	lds	r27, 0x287B	; 0x80287b <START_COUNT_VALUE+0x3>
    61d2:	c8 1a       	sub	r12, r24
    61d4:	d9 0a       	sbc	r13, r25
    61d6:	ea 0a       	sbc	r14, r26
    61d8:	fb 0a       	sbc	r15, r27
    61da:	20 e2       	ldi	r18, 0x20	; 32
    61dc:	c2 16       	cp	r12, r18
    61de:	2f eb       	ldi	r18, 0xBF	; 191
    61e0:	d2 06       	cpc	r13, r18
    61e2:	22 e0       	ldi	r18, 0x02	; 2
    61e4:	e2 06       	cpc	r14, r18
    61e6:	f1 04       	cpc	r15, r1
    61e8:	08 f4       	brcc	.+2      	; 0x61ec <main+0xcb4>
    61ea:	51 c0       	rjmp	.+162    	; 0x628e <main+0xd56>
    61ec:	b1 10       	cpse	r11, r1
    61ee:	4f c0       	rjmp	.+158    	; 0x628e <main+0xd56>
    61f0:	80 90 f2 28 	lds	r8, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    61f4:	90 90 f3 28 	lds	r9, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    61f8:	a0 90 f4 28 	lds	r10, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    61fc:	b0 90 f5 28 	lds	r11, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    6200:	20 91 7c 28 	lds	r18, 0x287C	; 0x80287c <TEMP_VALUE_INITIAL>
    6204:	30 91 7d 28 	lds	r19, 0x287D	; 0x80287d <TEMP_VALUE_INITIAL+0x1>
    6208:	40 91 7e 28 	lds	r20, 0x287E	; 0x80287e <TEMP_VALUE_INITIAL+0x2>
    620c:	50 91 7f 28 	lds	r21, 0x287F	; 0x80287f <TEMP_VALUE_INITIAL+0x3>
    6210:	c5 01       	movw	r24, r10
    6212:	b4 01       	movw	r22, r8
    6214:	0e 94 96 39 	call	0x732c	; 0x732c <__subsf3>
    6218:	2b 01       	movw	r4, r22
    621a:	3c 01       	movw	r6, r24
    621c:	c7 01       	movw	r24, r14
    621e:	b6 01       	movw	r22, r12
    6220:	20 e6       	ldi	r18, 0x60	; 96
    6222:	3a ee       	ldi	r19, 0xEA	; 234
    6224:	40 e0       	ldi	r20, 0x00	; 0
    6226:	50 e0       	ldi	r21, 0x00	; 0
    6228:	0e 94 c8 3b 	call	0x7790	; 0x7790 <__udivmodsi4>
    622c:	ca 01       	movw	r24, r20
    622e:	b9 01       	movw	r22, r18
    6230:	0e 94 98 3a 	call	0x7530	; 0x7530 <__floatunsisf>
    6234:	9b 01       	movw	r18, r22
    6236:	ac 01       	movw	r20, r24
    6238:	c3 01       	movw	r24, r6
    623a:	b2 01       	movw	r22, r4
    623c:	0e 94 ff 39 	call	0x73fe	; 0x73fe <__divsf3>
    6240:	60 93 8e 28 	sts	0x288E, r22	; 0x80288e <RATE_OF_HEATING>
    6244:	70 93 8f 28 	sts	0x288F, r23	; 0x80288f <RATE_OF_HEATING+0x1>
    6248:	80 93 90 28 	sts	0x2890, r24	; 0x802890 <RATE_OF_HEATING+0x2>
    624c:	90 93 91 28 	sts	0x2891, r25	; 0x802891 <RATE_OF_HEATING+0x3>
    6250:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    6254:	60 93 6b 28 	sts	0x286B, r22	; 0x80286b <PREVIOUS_COOLING_RATE_TIME>
    6258:	70 93 6c 28 	sts	0x286C, r23	; 0x80286c <PREVIOUS_COOLING_RATE_TIME+0x1>
    625c:	80 93 6d 28 	sts	0x286D, r24	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x2>
    6260:	90 93 6e 28 	sts	0x286E, r25	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x3>
    6264:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    6268:	60 93 67 28 	sts	0x2867, r22	; 0x802867 <CAL_OF_10_MIN>
    626c:	70 93 68 28 	sts	0x2868, r23	; 0x802868 <CAL_OF_10_MIN+0x1>
    6270:	80 93 69 28 	sts	0x2869, r24	; 0x802869 <CAL_OF_10_MIN+0x2>
    6274:	90 93 6a 28 	sts	0x286A, r25	; 0x80286a <CAL_OF_10_MIN+0x3>
    6278:	80 92 63 28 	sts	0x2863, r8	; 0x802863 <PREVIOUS_TEMP_COOLING_RATE>
    627c:	90 92 64 28 	sts	0x2864, r9	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    6280:	a0 92 65 28 	sts	0x2865, r10	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    6284:	b0 92 66 28 	sts	0x2866, r11	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    6288:	81 e0       	ldi	r24, 0x01	; 1
    628a:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <CHECK_RATE_OF_HEATING>
    628e:	c0 90 8e 28 	lds	r12, 0x288E	; 0x80288e <RATE_OF_HEATING>
    6292:	d0 90 8f 28 	lds	r13, 0x288F	; 0x80288f <RATE_OF_HEATING+0x1>
    6296:	e0 90 90 28 	lds	r14, 0x2890	; 0x802890 <RATE_OF_HEATING+0x2>
    629a:	f0 90 91 28 	lds	r15, 0x2891	; 0x802891 <RATE_OF_HEATING+0x3>
    629e:	20 e0       	ldi	r18, 0x00	; 0
    62a0:	30 e0       	ldi	r19, 0x00	; 0
    62a2:	40 e8       	ldi	r20, 0x80	; 128
    62a4:	5f e3       	ldi	r21, 0x3F	; 63
    62a6:	c7 01       	movw	r24, r14
    62a8:	b6 01       	movw	r22, r12
    62aa:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    62ae:	87 fd       	sbrc	r24, 7
    62b0:	29 c6       	rjmp	.+3154   	; 0x6f04 <main+0x19cc>
    62b2:	80 91 8b 28 	lds	r24, 0x288B	; 0x80288b <CHECK_RATE_OF_HEATING>
    62b6:	88 23       	and	r24, r24
    62b8:	09 f4       	brne	.+2      	; 0x62bc <main+0xd84>
    62ba:	a0 c0       	rjmp	.+320    	; 0x63fc <main+0xec4>
digitalWrite():
    62bc:	60 e0       	ldi	r22, 0x00	; 0
    62be:	88 e1       	ldi	r24, 0x18	; 24
    62c0:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
stop():
    62c4:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <PID_EXE>
    62c8:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <PID_EXE+0xb>
    62cc:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <PID_EXE+0xc>
    62d0:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <PID_EXE+0xd>
    62d4:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <PID_EXE+0xe>
    62d8:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <PID_EXE+0xf>
    62dc:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    62e0:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    62e4:	6b 01       	movw	r12, r22
    62e6:	7c 01       	movw	r14, r24
    62e8:	c0 92 5f 28 	sts	0x285F, r12	; 0x80285f <CURRENT_COOLING_RATE_TIME>
    62ec:	d0 92 60 28 	sts	0x2860, r13	; 0x802860 <CURRENT_COOLING_RATE_TIME+0x1>
    62f0:	e0 92 61 28 	sts	0x2861, r14	; 0x802861 <CURRENT_COOLING_RATE_TIME+0x2>
    62f4:	f0 92 62 28 	sts	0x2862, r15	; 0x802862 <CURRENT_COOLING_RATE_TIME+0x3>
    62f8:	10 92 8d 28 	sts	0x288D, r1	; 0x80288d <EXECUTE_PID_LOOP>
    62fc:	80 90 f2 28 	lds	r8, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    6300:	90 90 f3 28 	lds	r9, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    6304:	a0 90 f4 28 	lds	r10, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    6308:	b0 90 f5 28 	lds	r11, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    630c:	80 92 5b 28 	sts	0x285B, r8	; 0x80285b <CURRENT_TEMP_COOLING_RATE>
    6310:	90 92 5c 28 	sts	0x285C, r9	; 0x80285c <CURRENT_TEMP_COOLING_RATE+0x1>
    6314:	a0 92 5d 28 	sts	0x285D, r10	; 0x80285d <CURRENT_TEMP_COOLING_RATE+0x2>
    6318:	b0 92 5e 28 	sts	0x285E, r11	; 0x80285e <CURRENT_TEMP_COOLING_RATE+0x3>
    631c:	80 91 6b 28 	lds	r24, 0x286B	; 0x80286b <PREVIOUS_COOLING_RATE_TIME>
    6320:	90 91 6c 28 	lds	r25, 0x286C	; 0x80286c <PREVIOUS_COOLING_RATE_TIME+0x1>
    6324:	a0 91 6d 28 	lds	r26, 0x286D	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x2>
    6328:	b0 91 6e 28 	lds	r27, 0x286E	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x3>
    632c:	26 01       	movw	r4, r12
    632e:	37 01       	movw	r6, r14
    6330:	48 1a       	sub	r4, r24
    6332:	59 0a       	sbc	r5, r25
    6334:	6a 0a       	sbc	r6, r26
    6336:	7b 0a       	sbc	r7, r27
    6338:	d3 01       	movw	r26, r6
    633a:	c2 01       	movw	r24, r4
    633c:	80 36       	cpi	r24, 0x60	; 96
    633e:	9a 4e       	sbci	r25, 0xEA	; 234
    6340:	a1 05       	cpc	r26, r1
    6342:	b1 05       	cpc	r27, r1
    6344:	09 f0       	breq	.+2      	; 0x6348 <main+0xe10>
    6346:	5a c0       	rjmp	.+180    	; 0x63fc <main+0xec4>
    6348:	20 91 63 28 	lds	r18, 0x2863	; 0x802863 <PREVIOUS_TEMP_COOLING_RATE>
    634c:	30 91 64 28 	lds	r19, 0x2864	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    6350:	40 91 65 28 	lds	r20, 0x2865	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    6354:	50 91 66 28 	lds	r21, 0x2866	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    6358:	c5 01       	movw	r24, r10
    635a:	b4 01       	movw	r22, r8
    635c:	e7 d7       	rcall	.+4046   	; 0x732c <__subsf3>
    635e:	20 91 02 28 	lds	r18, 0x2802	; 0x802802 <COOLOING_RATE_COMP_VAL>
    6362:	30 91 03 28 	lds	r19, 0x2803	; 0x802803 <COOLOING_RATE_COMP_VAL+0x1>
    6366:	40 91 04 28 	lds	r20, 0x2804	; 0x802804 <COOLOING_RATE_COMP_VAL+0x2>
    636a:	50 91 05 28 	lds	r21, 0x2805	; 0x802805 <COOLOING_RATE_COMP_VAL+0x3>
    636e:	50 58       	subi	r21, 0x80	; 128
    6370:	0e 94 fb 39 	call	0x73f6	; 0x73f6 <__cmpsf2>
    6374:	18 16       	cp	r1, r24
    6376:	0c f4       	brge	.+2      	; 0x637a <main+0xe42>
    6378:	a1 c5       	rjmp	.+2882   	; 0x6ebc <main+0x1984>
    637a:	80 91 59 28 	lds	r24, 0x2859	; 0x802859 <COOLING_CYCLE_COUNT>
    637e:	90 91 5a 28 	lds	r25, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT+0x1>
    6382:	18 16       	cp	r1, r24
    6384:	19 06       	cpc	r1, r25
    6386:	0c f4       	brge	.+2      	; 0x638a <main+0xe52>
    6388:	79 c5       	rjmp	.+2802   	; 0x6e7c <main+0x1944>
    638a:	01 96       	adiw	r24, 0x01	; 1
    638c:	80 93 59 28 	sts	0x2859, r24	; 0x802859 <COOLING_CYCLE_COUNT>
    6390:	90 93 5a 28 	sts	0x285A, r25	; 0x80285a <COOLING_CYCLE_COUNT+0x1>
    6394:	8a e0       	ldi	r24, 0x0A	; 10
    6396:	97 ed       	ldi	r25, 0xD7	; 215
    6398:	a3 e2       	ldi	r26, 0x23	; 35
    639a:	bc e3       	ldi	r27, 0x3C	; 60
    639c:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <COOLOING_RATE_COMP_VAL>
    63a0:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <COOLOING_RATE_COMP_VAL+0x1>
    63a4:	a0 93 04 28 	sts	0x2804, r26	; 0x802804 <COOLOING_RATE_COMP_VAL+0x2>
    63a8:	b0 93 05 28 	sts	0x2805, r27	; 0x802805 <COOLOING_RATE_COMP_VAL+0x3>
    63ac:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    63b0:	60 93 55 28 	sts	0x2855, r22	; 0x802855 <TO_CHECK_REPETATION_WITHIN_TIME>
    63b4:	70 93 56 28 	sts	0x2856, r23	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    63b8:	80 93 57 28 	sts	0x2857, r24	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    63bc:	90 93 58 28 	sts	0x2858, r25	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    63c0:	80 91 59 28 	lds	r24, 0x2859	; 0x802859 <COOLING_CYCLE_COUNT>
    63c4:	90 91 5a 28 	lds	r25, 0x285A	; 0x80285a <COOLING_CYCLE_COUNT+0x1>
    63c8:	02 97       	sbiw	r24, 0x02	; 2
    63ca:	41 f4       	brne	.+16     	; 0x63dc <main+0xea4>
    63cc:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <RATE_OF_HEATING>
    63d0:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <RATE_OF_HEATING+0x1>
    63d4:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <RATE_OF_HEATING+0x2>
    63d8:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <RATE_OF_HEATING+0x3>
    63dc:	c0 92 6b 28 	sts	0x286B, r12	; 0x80286b <PREVIOUS_COOLING_RATE_TIME>
    63e0:	d0 92 6c 28 	sts	0x286C, r13	; 0x80286c <PREVIOUS_COOLING_RATE_TIME+0x1>
    63e4:	e0 92 6d 28 	sts	0x286D, r14	; 0x80286d <PREVIOUS_COOLING_RATE_TIME+0x2>
    63e8:	f0 92 6e 28 	sts	0x286E, r15	; 0x80286e <PREVIOUS_COOLING_RATE_TIME+0x3>
    63ec:	80 92 63 28 	sts	0x2863, r8	; 0x802863 <PREVIOUS_TEMP_COOLING_RATE>
    63f0:	90 92 64 28 	sts	0x2864, r9	; 0x802864 <PREVIOUS_TEMP_COOLING_RATE+0x1>
    63f4:	a0 92 65 28 	sts	0x2865, r10	; 0x802865 <PREVIOUS_TEMP_COOLING_RATE+0x2>
    63f8:	b0 92 66 28 	sts	0x2866, r11	; 0x802866 <PREVIOUS_TEMP_COOLING_RATE+0x3>
    63fc:	80 90 f6 28 	lds	r8, 0x28F6	; 0x8028f6 <TEMP_DEG>
    6400:	90 90 f7 28 	lds	r9, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    6404:	a0 90 f8 28 	lds	r10, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    6408:	b0 90 f9 28 	lds	r11, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    640c:	c0 90 74 28 	lds	r12, 0x2874	; 0x802874 <PID_SETPOINT_To_Show>
    6410:	d0 90 75 28 	lds	r13, 0x2875	; 0x802875 <PID_SETPOINT_To_Show+0x1>
    6414:	e0 90 76 28 	lds	r14, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x2>
    6418:	f0 90 77 28 	lds	r15, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x3>
    641c:	80 91 a9 28 	lds	r24, 0x28A9	; 0x8028a9 <TIME_SOCK_OR_TOTAL>
    6420:	81 11       	cpse	r24, r1
    6422:	8c c5       	rjmp	.+2840   	; 0x6f3c <main+0x1a04>
    6424:	81 e0       	ldi	r24, 0x01	; 1
    6426:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <COUNTDOWN_START>
    642a:	a7 01       	movw	r20, r14
    642c:	96 01       	movw	r18, r12
    642e:	c5 01       	movw	r24, r10
    6430:	b4 01       	movw	r22, r8
    6432:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    6436:	87 fd       	sbrc	r24, 7
    6438:	04 c0       	rjmp	.+8      	; 0x6442 <main+0xf0a>
    643a:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    643e:	88 23       	and	r24, r24
    6440:	99 f0       	breq	.+38     	; 0x6468 <main+0xf30>
    6442:	20 91 d4 28 	lds	r18, 0x28D4	; 0x8028d4 <TEMP_FAH>
    6446:	30 91 d5 28 	lds	r19, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    644a:	40 91 d6 28 	lds	r20, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    644e:	50 91 d7 28 	lds	r21, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    6452:	c7 01       	movw	r24, r14
    6454:	b6 01       	movw	r22, r12
    6456:	cf d7       	rcall	.+3998   	; 0x73f6 <__cmpsf2>
    6458:	18 16       	cp	r1, r24
    645a:	0c f4       	brge	.+2      	; 0x645e <main+0xf26>
    645c:	52 c0       	rjmp	.+164    	; 0x6502 <main+0xfca>
    645e:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6462:	88 23       	and	r24, r24
    6464:	09 f4       	brne	.+2      	; 0x6468 <main+0xf30>
    6466:	4d c0       	rjmp	.+154    	; 0x6502 <main+0xfca>
interval():
    6468:	80 91 97 2b 	lds	r24, 0x2B97	; 0x802b97 <BUZZ_TICK2+0x9>
    646c:	90 91 98 2b 	lds	r25, 0x2B98	; 0x802b98 <BUZZ_TICK2+0xa>
    6470:	89 2b       	or	r24, r25
    6472:	09 f4       	brne	.+2      	; 0x6476 <main+0xf3e>
    6474:	99 c5       	rjmp	.+2866   	; 0x6fa8 <main+0x1a70>
    6476:	80 e9       	ldi	r24, 0x90	; 144
    6478:	91 e0       	ldi	r25, 0x01	; 1
    647a:	a0 e0       	ldi	r26, 0x00	; 0
    647c:	b0 e0       	ldi	r27, 0x00	; 0
    647e:	80 93 8f 2b 	sts	0x2B8F, r24	; 0x802b8f <BUZZ_TICK2+0x1>
    6482:	90 93 90 2b 	sts	0x2B90, r25	; 0x802b90 <BUZZ_TICK2+0x2>
    6486:	a0 93 91 2b 	sts	0x2B91, r26	; 0x802b91 <BUZZ_TICK2+0x3>
    648a:	b0 93 92 2b 	sts	0x2B92, r27	; 0x802b92 <BUZZ_TICK2+0x4>
    648e:	80 91 b2 2b 	lds	r24, 0x2BB2	; 0x802bb2 <BUZZ_TICK1+0x9>
    6492:	90 91 b3 2b 	lds	r25, 0x2BB3	; 0x802bb3 <BUZZ_TICK1+0xa>
    6496:	89 2b       	or	r24, r25
    6498:	09 f4       	brne	.+2      	; 0x649c <main+0xf64>
    649a:	8b c5       	rjmp	.+2838   	; 0x6fb2 <main+0x1a7a>
    649c:	80 e2       	ldi	r24, 0x20	; 32
    649e:	93 e0       	ldi	r25, 0x03	; 3
    64a0:	a0 e0       	ldi	r26, 0x00	; 0
    64a2:	b0 e0       	ldi	r27, 0x00	; 0
    64a4:	80 93 aa 2b 	sts	0x2BAA, r24	; 0x802baa <BUZZ_TICK1+0x1>
    64a8:	90 93 ab 2b 	sts	0x2BAB, r25	; 0x802bab <BUZZ_TICK1+0x2>
    64ac:	a0 93 ac 2b 	sts	0x2BAC, r26	; 0x802bac <BUZZ_TICK1+0x3>
    64b0:	b0 93 ad 2b 	sts	0x2BAD, r27	; 0x802bad <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    64b4:	80 91 93 28 	lds	r24, 0x2893	; 0x802893 <REP>
    64b8:	90 91 94 28 	lds	r25, 0x2894	; 0x802894 <REP+0x1>
    64bc:	89 2b       	or	r24, r25
    64be:	59 f4       	brne	.+22     	; 0x64d6 <main+0xf9e>
    64c0:	81 e0       	ldi	r24, 0x01	; 1
    64c2:	80 93 8c 28 	sts	0x288C, r24	; 0x80288c <REPETATION_FLAG>
BUZZ_TICK_START():
    64c6:	89 ea       	ldi	r24, 0xA9	; 169
    64c8:	9b e2       	ldi	r25, 0x2B	; 43
    64ca:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    64ce:	20 92 93 28 	sts	0x2893, r2	; 0x802893 <REP>
    64d2:	30 92 94 28 	sts	0x2894, r3	; 0x802894 <REP+0x1>
    64d6:	80 91 98 28 	lds	r24, 0x2898	; 0x802898 <FOR_REP>
    64da:	90 91 99 28 	lds	r25, 0x2899	; 0x802899 <FOR_REP+0x1>
    64de:	02 97       	sbiw	r24, 0x02	; 2
    64e0:	81 f4       	brne	.+32     	; 0x6502 <main+0xfca>
stop():
    64e2:	10 92 a9 2b 	sts	0x2BA9, r1	; 0x802ba9 <BUZZ_TICK1>
    64e6:	10 92 b4 2b 	sts	0x2BB4, r1	; 0x802bb4 <BUZZ_TICK1+0xb>
    64ea:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <BUZZ_TICK1+0xc>
    64ee:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <BUZZ_TICK1+0xd>
    64f2:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <BUZZ_TICK1+0xe>
    64f6:	10 92 b8 2b 	sts	0x2BB8, r1	; 0x802bb8 <BUZZ_TICK1+0xf>
    64fa:	10 92 b9 2b 	sts	0x2BB9, r1	; 0x802bb9 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    64fe:	10 92 8c 28 	sts	0x288C, r1	; 0x80288c <REPETATION_FLAG>
    6502:	80 91 a6 28 	lds	r24, 0x28A6	; 0x8028a6 <SET_MIN>
    6506:	90 91 a7 28 	lds	r25, 0x28A7	; 0x8028a7 <SET_MIN+0x1>
    650a:	6c e3       	ldi	r22, 0x3C	; 60
    650c:	70 e0       	ldi	r23, 0x00	; 0
    650e:	0e 94 b5 3b 	call	0x776a	; 0x776a <__divmodhi4>
    6512:	6b 01       	movw	r12, r22
    6514:	7c 01       	movw	r14, r24
    6516:	60 93 a2 28 	sts	0x28A2, r22	; 0x8028a2 <SET_HOUR>
    651a:	70 93 a3 28 	sts	0x28A3, r23	; 0x8028a3 <SET_HOUR+0x1>
    651e:	80 93 53 28 	sts	0x2853, r24	; 0x802853 <REMAIN_MIN>
    6522:	90 93 54 28 	sts	0x2854, r25	; 0x802854 <REMAIN_MIN+0x1>
    6526:	20 e0       	ldi	r18, 0x00	; 0
    6528:	30 e0       	ldi	r19, 0x00	; 0
    652a:	40 e8       	ldi	r20, 0x80	; 128
    652c:	5f e3       	ldi	r21, 0x3F	; 63
    652e:	60 91 4f 28 	lds	r22, 0x284F	; 0x80284f <DISP_INC>
    6532:	70 91 50 28 	lds	r23, 0x2850	; 0x802850 <DISP_INC+0x1>
    6536:	80 91 51 28 	lds	r24, 0x2851	; 0x802851 <DISP_INC+0x2>
    653a:	90 91 52 28 	lds	r25, 0x2852	; 0x802852 <DISP_INC+0x3>
    653e:	f7 d6       	rcall	.+3566   	; 0x732e <__addsf3>
    6540:	60 93 4f 28 	sts	0x284F, r22	; 0x80284f <DISP_INC>
    6544:	70 93 50 28 	sts	0x2850, r23	; 0x802850 <DISP_INC+0x1>
    6548:	80 93 51 28 	sts	0x2851, r24	; 0x802851 <DISP_INC+0x2>
    654c:	90 93 52 28 	sts	0x2852, r25	; 0x802852 <DISP_INC+0x3>
    6550:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    6554:	20 e0       	ldi	r18, 0x00	; 0
    6556:	30 e0       	ldi	r19, 0x00	; 0
    6558:	40 e8       	ldi	r20, 0x80	; 128
    655a:	5f e3       	ldi	r21, 0x3F	; 63
    655c:	60 91 8e 28 	lds	r22, 0x288E	; 0x80288e <RATE_OF_HEATING>
    6560:	70 91 8f 28 	lds	r23, 0x288F	; 0x80288f <RATE_OF_HEATING+0x1>
    6564:	80 91 90 28 	lds	r24, 0x2890	; 0x802890 <RATE_OF_HEATING+0x2>
    6568:	90 91 91 28 	lds	r25, 0x2891	; 0x802891 <RATE_OF_HEATING+0x3>
    656c:	0e 94 4a 3b 	call	0x7694	; 0x7694 <__gesf2>
    6570:	87 fd       	sbrc	r24, 7
    6572:	2e c5       	rjmp	.+2652   	; 0x6fd0 <main+0x1a98>
    6574:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    6578:	81 e0       	ldi	r24, 0x01	; 1
    657a:	80 93 97 28 	sts	0x2897, r24	; 0x802897 <IN_ERROR>
    657e:	10 92 8c 28 	sts	0x288C, r1	; 0x80288c <REPETATION_FLAG>
    6582:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
digitalWrite():
    6586:	60 e0       	ldi	r22, 0x00	; 0
    6588:	8d e0       	ldi	r24, 0x0D	; 13
    658a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    658e:	00 93 02 29 	sts	0x2902, r16	; 0x802902 <digits2>
    6592:	10 93 03 29 	sts	0x2903, r17	; 0x802903 <digits2+0x1>
    6596:	89 e1       	ldi	r24, 0x19	; 25
    6598:	90 e0       	ldi	r25, 0x00	; 0
    659a:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    659e:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    65a2:	8a e1       	ldi	r24, 0x1A	; 26
    65a4:	90 e0       	ldi	r25, 0x00	; 0
    65a6:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    65aa:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    65ae:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    65b2:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    65b6:	8e e0       	ldi	r24, 0x0E	; 14
    65b8:	90 e0       	ldi	r25, 0x00	; 0
    65ba:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    65be:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    65c2:	8d e0       	ldi	r24, 0x0D	; 13
    65c4:	90 e0       	ldi	r25, 0x00	; 0
    65c6:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    65ca:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    65ce:	80 e1       	ldi	r24, 0x10	; 16
    65d0:	90 e0       	ldi	r25, 0x00	; 0
    65d2:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    65d6:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    65da:	8e e1       	ldi	r24, 0x1E	; 30
    65dc:	90 e0       	ldi	r25, 0x00	; 0
    65de:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    65e2:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
interval():
    65e6:	80 91 97 2b 	lds	r24, 0x2B97	; 0x802b97 <BUZZ_TICK2+0x9>
    65ea:	90 91 98 2b 	lds	r25, 0x2B98	; 0x802b98 <BUZZ_TICK2+0xa>
    65ee:	89 2b       	or	r24, r25
    65f0:	09 f4       	brne	.+2      	; 0x65f4 <main+0x10bc>
    65f2:	e4 c4       	rjmp	.+2504   	; 0x6fbc <main+0x1a84>
    65f4:	88 ee       	ldi	r24, 0xE8	; 232
    65f6:	93 e0       	ldi	r25, 0x03	; 3
    65f8:	a0 e0       	ldi	r26, 0x00	; 0
    65fa:	b0 e0       	ldi	r27, 0x00	; 0
    65fc:	80 93 8f 2b 	sts	0x2B8F, r24	; 0x802b8f <BUZZ_TICK2+0x1>
    6600:	90 93 90 2b 	sts	0x2B90, r25	; 0x802b90 <BUZZ_TICK2+0x2>
    6604:	a0 93 91 2b 	sts	0x2B91, r26	; 0x802b91 <BUZZ_TICK2+0x3>
    6608:	b0 93 92 2b 	sts	0x2B92, r27	; 0x802b92 <BUZZ_TICK2+0x4>
    660c:	80 91 b2 2b 	lds	r24, 0x2BB2	; 0x802bb2 <BUZZ_TICK1+0x9>
    6610:	90 91 b3 2b 	lds	r25, 0x2BB3	; 0x802bb3 <BUZZ_TICK1+0xa>
    6614:	89 2b       	or	r24, r25
    6616:	09 f4       	brne	.+2      	; 0x661a <main+0x10e2>
    6618:	d6 c4       	rjmp	.+2476   	; 0x6fc6 <main+0x1a8e>
    661a:	80 ed       	ldi	r24, 0xD0	; 208
    661c:	97 e0       	ldi	r25, 0x07	; 7
    661e:	a0 e0       	ldi	r26, 0x00	; 0
    6620:	b0 e0       	ldi	r27, 0x00	; 0
    6622:	80 93 aa 2b 	sts	0x2BAA, r24	; 0x802baa <BUZZ_TICK1+0x1>
    6626:	90 93 ab 2b 	sts	0x2BAB, r25	; 0x802bab <BUZZ_TICK1+0x2>
    662a:	a0 93 ac 2b 	sts	0x2BAC, r26	; 0x802bac <BUZZ_TICK1+0x3>
    662e:	b0 93 ad 2b 	sts	0x2BAD, r27	; 0x802bad <BUZZ_TICK1+0x4>
SET_SHORT_PRESS_FUNCTION():
    6632:	80 91 93 28 	lds	r24, 0x2893	; 0x802893 <REP>
    6636:	90 91 94 28 	lds	r25, 0x2894	; 0x802894 <REP+0x1>
    663a:	89 2b       	or	r24, r25
    663c:	09 f0       	breq	.+2      	; 0x6640 <main+0x1108>
    663e:	37 cd       	rjmp	.-1426   	; 0x60ae <main+0xb76>
BUZZ_TICK_START():
    6640:	89 ea       	ldi	r24, 0xA9	; 169
    6642:	9b e2       	ldi	r25, 0x2B	; 43
    6644:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    6648:	20 92 93 28 	sts	0x2893, r2	; 0x802893 <REP>
    664c:	30 92 94 28 	sts	0x2894, r3	; 0x802894 <REP+0x1>
    6650:	2e cd       	rjmp	.-1444   	; 0x60ae <main+0xb76>
    6652:	10 92 9e 28 	sts	0x289E, r1	; 0x80289e <DOT2_0>
    6656:	10 92 9d 28 	sts	0x289D, r1	; 0x80289d <DOT2_2>
    665a:	10 92 9c 28 	sts	0x289C, r1	; 0x80289c <DOT1_2>
    665e:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6662:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    6666:	10 92 9a 28 	sts	0x289A, r1	; 0x80289a <FOR_REP2>
    666a:	10 92 9b 28 	sts	0x289B, r1	; 0x80289b <FOR_REP2+0x1>
    666e:	10 92 98 28 	sts	0x2898, r1	; 0x802898 <FOR_REP>
    6672:	10 92 99 28 	sts	0x2899, r1	; 0x802899 <FOR_REP+0x1>
    6676:	10 92 97 28 	sts	0x2897, r1	; 0x802897 <IN_ERROR>
    667a:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <REP1>
    667e:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <REP1+0x1>
    6682:	10 92 93 28 	sts	0x2893, r1	; 0x802893 <REP>
    6686:	10 92 94 28 	sts	0x2894, r1	; 0x802894 <REP+0x1>
    668a:	10 92 92 28 	sts	0x2892, r1	; 0x802892 <Blinking_Freq>
    668e:	10 92 bc 28 	sts	0x28BC, r1	; 0x8028bc <CAL2_START>
    6692:	10 92 0f 29 	sts	0x290F, r1	; 0x80290f <PUMP_FLAG>
    6696:	10 92 8e 28 	sts	0x288E, r1	; 0x80288e <RATE_OF_HEATING>
    669a:	10 92 8f 28 	sts	0x288F, r1	; 0x80288f <RATE_OF_HEATING+0x1>
    669e:	10 92 90 28 	sts	0x2890, r1	; 0x802890 <RATE_OF_HEATING+0x2>
    66a2:	10 92 91 28 	sts	0x2891, r1	; 0x802891 <RATE_OF_HEATING+0x3>
    66a6:	10 92 8d 28 	sts	0x288D, r1	; 0x80288d <EXECUTE_PID_LOOP>
    66aa:	10 92 f2 29 	sts	0x29F2, r1	; 0x8029f2 <PID_SETPOINT>
    66ae:	10 92 f3 29 	sts	0x29F3, r1	; 0x8029f3 <PID_SETPOINT+0x1>
    66b2:	10 92 f4 29 	sts	0x29F4, r1	; 0x8029f4 <PID_SETPOINT+0x2>
    66b6:	10 92 f5 29 	sts	0x29F5, r1	; 0x8029f5 <PID_SETPOINT+0x3>
    66ba:	10 92 8c 28 	sts	0x288C, r1	; 0x80288c <REPETATION_FLAG>
    66be:	10 92 c3 28 	sts	0x28C3, r1	; 0x8028c3 <Mode_Button_Single_Press_In_Settings>
    66c2:	81 e0       	ldi	r24, 0x01	; 1
    66c4:	80 93 8b 28 	sts	0x288B, r24	; 0x80288b <CHECK_RATE_OF_HEATING>
stop():
    66c8:	10 92 a9 2b 	sts	0x2BA9, r1	; 0x802ba9 <BUZZ_TICK1>
    66cc:	10 92 b4 2b 	sts	0x2BB4, r1	; 0x802bb4 <BUZZ_TICK1+0xb>
    66d0:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <BUZZ_TICK1+0xc>
    66d4:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <BUZZ_TICK1+0xd>
    66d8:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <BUZZ_TICK1+0xe>
    66dc:	10 92 b8 2b 	sts	0x2BB8, r1	; 0x802bb8 <BUZZ_TICK1+0xf>
    66e0:	10 92 b9 2b 	sts	0x2BB9, r1	; 0x802bb9 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    66e4:	10 92 8a 28 	sts	0x288A, r1	; 0x80288a <soak_once_flag>
digitalWrite():
    66e8:	60 e0       	ldi	r22, 0x00	; 0
    66ea:	89 e1       	ldi	r24, 0x19	; 25
    66ec:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
stop():
    66f0:	10 92 73 2b 	sts	0x2B73, r1	; 0x802b73 <Blink_LED_ON>
    66f4:	10 92 7e 2b 	sts	0x2B7E, r1	; 0x802b7e <Blink_LED_ON+0xb>
    66f8:	10 92 7f 2b 	sts	0x2B7F, r1	; 0x802b7f <Blink_LED_ON+0xc>
    66fc:	10 92 80 2b 	sts	0x2B80, r1	; 0x802b80 <Blink_LED_ON+0xd>
    6700:	10 92 81 2b 	sts	0x2B81, r1	; 0x802b81 <Blink_LED_ON+0xe>
    6704:	10 92 82 2b 	sts	0x2B82, r1	; 0x802b82 <Blink_LED_ON+0xf>
    6708:	10 92 83 2b 	sts	0x2B83, r1	; 0x802b83 <Blink_LED_ON+0x10>
    670c:	10 92 58 2b 	sts	0x2B58, r1	; 0x802b58 <Blink_LED_OFF>
    6710:	10 92 63 2b 	sts	0x2B63, r1	; 0x802b63 <Blink_LED_OFF+0xb>
    6714:	10 92 64 2b 	sts	0x2B64, r1	; 0x802b64 <Blink_LED_OFF+0xc>
    6718:	10 92 65 2b 	sts	0x2B65, r1	; 0x802b65 <Blink_LED_OFF+0xd>
    671c:	10 92 66 2b 	sts	0x2B66, r1	; 0x802b66 <Blink_LED_OFF+0xe>
    6720:	10 92 67 2b 	sts	0x2B67, r1	; 0x802b67 <Blink_LED_OFF+0xf>
    6724:	10 92 68 2b 	sts	0x2B68, r1	; 0x802b68 <Blink_LED_OFF+0x10>
digitalWrite():
    6728:	60 e0       	ldi	r22, 0x00	; 0
    672a:	88 e1       	ldi	r24, 0x18	; 24
    672c:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
stop():
    6730:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <PID_EXE>
    6734:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <PID_EXE+0xb>
    6738:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <PID_EXE+0xc>
    673c:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <PID_EXE+0xd>
    6740:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <PID_EXE+0xe>
    6744:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <PID_EXE+0xf>
    6748:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <PID_EXE+0x10>
SET_SHORT_PRESS_FUNCTION():
    674c:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
    6750:	80 91 89 28 	lds	r24, 0x2889	; 0x802889 <checkTempRaised>
    6754:	81 11       	cpse	r24, r1
    6756:	db c0       	rjmp	.+438    	; 0x690e <main+0x13d6>
    6758:	80 91 9f 28 	lds	r24, 0x289F	; 0x80289f <Process_Interrupt_flag>
    675c:	88 23       	and	r24, r24
    675e:	09 f4       	brne	.+2      	; 0x6762 <main+0x122a>
    6760:	81 c0       	rjmp	.+258    	; 0x6864 <main+0x132c>
    6762:	80 91 a4 28 	lds	r24, 0x28A4	; 0x8028a4 <Proceess_Resume_Enable_Flag>
    6766:	88 23       	and	r24, r24
    6768:	09 f4       	brne	.+2      	; 0x676c <main+0x1234>
    676a:	7c c0       	rjmp	.+248    	; 0x6864 <main+0x132c>
    676c:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <z>
    6770:	90 91 88 28 	lds	r25, 0x2888	; 0x802888 <z+0x1>
    6774:	03 97       	sbiw	r24, 0x03	; 3
    6776:	0c f0       	brlt	.+2      	; 0x677a <main+0x1242>
    6778:	71 c0       	rjmp	.+226    	; 0x685c <main+0x1324>
    677a:	00 91 be 28 	lds	r16, 0x28BE	; 0x8028be <i>
    677e:	10 91 bf 28 	lds	r17, 0x28BF	; 0x8028bf <i+0x1>
    6782:	0b 34       	cpi	r16, 0x4B	; 75
    6784:	11 05       	cpc	r17, r1
    6786:	5c f5       	brge	.+86     	; 0x67de <main+0x12a6>
digitalWrite():
    6788:	61 e0       	ldi	r22, 0x01	; 1
    678a:	85 e1       	ldi	r24, 0x15	; 21
    678c:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT1():
    6790:	88 e1       	ldi	r24, 0x18	; 24
    6792:	90 e0       	ldi	r25, 0x00	; 0
    6794:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    6798:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    679c:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    67a0:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    67a4:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    67a8:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    67ac:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    67b0:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
DISPLAY_DIGIT2():
    67b4:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    67b8:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    67bc:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    67c0:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    67c4:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    67c8:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    67cc:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    67d0:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
digitalWrite():
    67d4:	60 e0       	ldi	r22, 0x00	; 0
    67d6:	8c e0       	ldi	r24, 0x0C	; 12
    67d8:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    67dc:	4d ca       	rjmp	.-2918   	; 0x5c78 <main+0x740>
    67de:	60 e0       	ldi	r22, 0x00	; 0
    67e0:	85 e1       	ldi	r24, 0x15	; 21
    67e2:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    67e6:	8b e0       	ldi	r24, 0x0B	; 11
    67e8:	90 e0       	ldi	r25, 0x00	; 0
    67ea:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    67ee:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    67f2:	21 e1       	ldi	r18, 0x11	; 17
    67f4:	30 e0       	ldi	r19, 0x00	; 0
    67f6:	20 93 04 29 	sts	0x2904, r18	; 0x802904 <digits2+0x2>
    67fa:	30 93 05 29 	sts	0x2905, r19	; 0x802905 <digits2+0x3>
    67fe:	87 e1       	ldi	r24, 0x17	; 23
    6800:	90 e0       	ldi	r25, 0x00	; 0
    6802:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    6806:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    680a:	8c e0       	ldi	r24, 0x0C	; 12
    680c:	90 e0       	ldi	r25, 0x00	; 0
    680e:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6812:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    6816:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    681a:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    681e:	80 e1       	ldi	r24, 0x10	; 16
    6820:	90 e0       	ldi	r25, 0x00	; 0
    6822:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    6826:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    682a:	20 93 fe 28 	sts	0x28FE, r18	; 0x8028fe <digits1+0x4>
    682e:	30 93 ff 28 	sts	0x28FF, r19	; 0x8028ff <digits1+0x5>
    6832:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    6836:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    683a:	07 39       	cpi	r16, 0x97	; 151
    683c:	11 05       	cpc	r17, r1
    683e:	54 f2       	brlt	.-108    	; 0x67d4 <main+0x129c>
    6840:	80 91 87 28 	lds	r24, 0x2887	; 0x802887 <z>
    6844:	90 91 88 28 	lds	r25, 0x2888	; 0x802888 <z+0x1>
    6848:	01 96       	adiw	r24, 0x01	; 1
    684a:	80 93 87 28 	sts	0x2887, r24	; 0x802887 <z>
    684e:	90 93 88 28 	sts	0x2888, r25	; 0x802888 <z+0x1>
    6852:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    6856:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    685a:	bc cf       	rjmp	.-136    	; 0x67d4 <main+0x129c>
    685c:	85 e0       	ldi	r24, 0x05	; 5
    685e:	80 93 20 29 	sts	0x2920, r24	; 0x802920 <ENTER_BUT>
    6862:	b8 cf       	rjmp	.-144    	; 0x67d4 <main+0x129c>
    6864:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6868:	81 11       	cpse	r24, r1
    686a:	38 c0       	rjmp	.+112    	; 0x68dc <main+0x13a4>
    686c:	c0 90 f6 28 	lds	r12, 0x28F6	; 0x8028f6 <TEMP_DEG>
    6870:	d0 90 f7 28 	lds	r13, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    6874:	e0 90 f8 28 	lds	r14, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    6878:	f0 90 f9 28 	lds	r15, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    687c:	2d ec       	ldi	r18, 0xCD	; 205
    687e:	3c ec       	ldi	r19, 0xCC	; 204
    6880:	47 ec       	ldi	r20, 0xC7	; 199
    6882:	52 e4       	ldi	r21, 0x42	; 66
    6884:	c7 01       	movw	r24, r14
    6886:	b6 01       	movw	r22, r12
    6888:	05 d7       	rcall	.+3594   	; 0x7694 <__gesf2>
    688a:	18 16       	cp	r1, r24
    688c:	cc f4       	brge	.+50     	; 0x68c0 <main+0x1388>
    688e:	20 e0       	ldi	r18, 0x00	; 0
    6890:	30 e0       	ldi	r19, 0x00	; 0
    6892:	40 e2       	ldi	r20, 0x20	; 32
    6894:	51 e4       	ldi	r21, 0x41	; 65
    6896:	c7 01       	movw	r24, r14
    6898:	b6 01       	movw	r22, r12
    689a:	00 d7       	rcall	.+3584   	; 0x769c <__mulsf3>
    689c:	18 d6       	rcall	.+3120   	; 0x74ce <__fixsfsi>
    689e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    68a2:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    68a6:	8a e0       	ldi	r24, 0x0A	; 10
    68a8:	90 e0       	ldi	r25, 0x00	; 0
    68aa:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    68ae:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    68b2:	60 e0       	ldi	r22, 0x00	; 0
    68b4:	70 e0       	ldi	r23, 0x00	; 0
    68b6:	cb 01       	movw	r24, r22
    68b8:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
digitalWrite():
    68bc:	61 e0       	ldi	r22, 0x01	; 1
    68be:	8b cf       	rjmp	.-234    	; 0x67d6 <main+0x129e>
SET_SHORT_PRESS_FUNCTION():
    68c0:	20 e0       	ldi	r18, 0x00	; 0
    68c2:	30 e0       	ldi	r19, 0x00	; 0
    68c4:	48 ec       	ldi	r20, 0xC8	; 200
    68c6:	52 e4       	ldi	r21, 0x42	; 66
    68c8:	c7 01       	movw	r24, r14
    68ca:	b6 01       	movw	r22, r12
    68cc:	e7 d6       	rcall	.+3534   	; 0x769c <__mulsf3>
    68ce:	ff d5       	rcall	.+3070   	; 0x74ce <__fixsfsi>
    68d0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    68d4:	81 e0       	ldi	r24, 0x01	; 1
    68d6:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    68da:	e5 cf       	rjmp	.-54     	; 0x68a6 <main+0x136e>
    68dc:	20 e0       	ldi	r18, 0x00	; 0
    68de:	30 e0       	ldi	r19, 0x00	; 0
    68e0:	40 e2       	ldi	r20, 0x20	; 32
    68e2:	51 e4       	ldi	r21, 0x41	; 65
    68e4:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    68e8:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    68ec:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    68f0:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    68f4:	d3 d6       	rcall	.+3494   	; 0x769c <__mulsf3>
    68f6:	eb d5       	rcall	.+3030   	; 0x74ce <__fixsfsi>
    68f8:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    68fc:	85 e1       	ldi	r24, 0x15	; 21
    68fe:	90 e0       	ldi	r25, 0x00	; 0
    6900:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6904:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6908:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    690c:	d2 cf       	rjmp	.-92     	; 0x68b2 <main+0x137a>
digitalWrite():
    690e:	60 e0       	ldi	r22, 0x00	; 0
    6910:	81 e2       	ldi	r24, 0x21	; 33
    6912:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    6916:	61 e0       	ldi	r22, 0x01	; 1
    6918:	8d e1       	ldi	r24, 0x1D	; 29
    691a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    691e:	61 e0       	ldi	r22, 0x01	; 1
    6920:	8c e1       	ldi	r24, 0x1C	; 28
    6922:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    6926:	61 e0       	ldi	r22, 0x01	; 1
    6928:	8b e1       	ldi	r24, 0x1B	; 27
    692a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    692e:	60 e0       	ldi	r22, 0x00	; 0
    6930:	8a e1       	ldi	r24, 0x1A	; 26
    6932:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    6936:	60 e0       	ldi	r22, 0x00	; 0
    6938:	8d e0       	ldi	r24, 0x0D	; 13
    693a:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    693e:	60 e0       	ldi	r22, 0x00	; 0
    6940:	8c e0       	ldi	r24, 0x0C	; 12
    6942:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6946:	00 91 be 28 	lds	r16, 0x28BE	; 0x8028be <i>
    694a:	10 91 bf 28 	lds	r17, 0x28BF	; 0x8028bf <i+0x1>
    694e:	09 31       	cpi	r16, 0x19	; 25
    6950:	11 05       	cpc	r17, r1
    6952:	1c f5       	brge	.+70     	; 0x699a <main+0x1462>
digitalWrite():
    6954:	60 e0       	ldi	r22, 0x00	; 0
    6956:	85 e1       	ldi	r24, 0x15	; 21
    6958:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    695c:	88 e1       	ldi	r24, 0x18	; 24
    695e:	90 e0       	ldi	r25, 0x00	; 0
    6960:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    6964:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    6968:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    696c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    6970:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    6974:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    6978:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    697c:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    6980:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    6984:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    6988:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    698c:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    6990:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    6994:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    6998:	e5 c9       	rjmp	.-3126   	; 0x5d64 <main+0x82c>
digitalWrite():
    699a:	61 e0       	ldi	r22, 0x01	; 1
    699c:	85 e1       	ldi	r24, 0x15	; 21
    699e:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    69a2:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
DISPLAY_DIGIT2():
    69a6:	8c e0       	ldi	r24, 0x0C	; 12
    69a8:	90 e0       	ldi	r25, 0x00	; 0
    69aa:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    69ae:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    69b2:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    69b6:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    69ba:	81 e1       	ldi	r24, 0x11	; 17
    69bc:	90 e0       	ldi	r25, 0x00	; 0
    69be:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    69c2:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    69c6:	88 e1       	ldi	r24, 0x18	; 24
    69c8:	90 e0       	ldi	r25, 0x00	; 0
    69ca:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    69ce:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
DISPLAY_DIGIT1():
    69d2:	85 e1       	ldi	r24, 0x15	; 21
    69d4:	90 e0       	ldi	r25, 0x00	; 0
    69d6:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    69da:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    69de:	8d e0       	ldi	r24, 0x0D	; 13
    69e0:	90 e0       	ldi	r25, 0x00	; 0
    69e2:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    69e6:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    69ea:	89 e1       	ldi	r24, 0x19	; 25
    69ec:	90 e0       	ldi	r25, 0x00	; 0
    69ee:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    69f2:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    69f6:	8a e1       	ldi	r24, 0x1A	; 26
    69f8:	90 e0       	ldi	r25, 0x00	; 0
    69fa:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    69fe:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
SET_SHORT_PRESS_FUNCTION():
    6a02:	03 33       	cpi	r16, 0x33	; 51
    6a04:	11 05       	cpc	r17, r1
    6a06:	0c f4       	brge	.+2      	; 0x6a0a <main+0x14d2>
    6a08:	37 c9       	rjmp	.-3474   	; 0x5c78 <main+0x740>
    6a0a:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    6a0e:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    6a12:	32 c9       	rjmp	.-3484   	; 0x5c78 <main+0x740>
    6a14:	89 e1       	ldi	r24, 0x19	; 25
    6a16:	90 e0       	ldi	r25, 0x00	; 0
    6a18:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    6a1c:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    6a20:	47 ca       	rjmp	.-2930   	; 0x5eb0 <main+0x978>
    6a22:	10 93 c1 28 	sts	0x28C1, r17	; 0x8028c1 <DOT2_1>
    6a26:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    6a2a:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    6a2e:	24 e6       	ldi	r18, 0x64	; 100
    6a30:	28 9f       	mul	r18, r24
    6a32:	b0 01       	movw	r22, r0
    6a34:	29 9f       	mul	r18, r25
    6a36:	70 0d       	add	r23, r0
    6a38:	11 24       	eor	r1, r1
    6a3a:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    6a3e:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    6a42:	4a e0       	ldi	r20, 0x0A	; 10
    6a44:	42 9f       	mul	r20, r18
    6a46:	c0 01       	movw	r24, r0
    6a48:	43 9f       	mul	r20, r19
    6a4a:	90 0d       	add	r25, r0
    6a4c:	11 24       	eor	r1, r1
    6a4e:	68 0f       	add	r22, r24
    6a50:	79 1f       	adc	r23, r25
    6a52:	07 2e       	mov	r0, r23
    6a54:	00 0c       	add	r0, r0
    6a56:	88 0b       	sbc	r24, r24
    6a58:	99 0b       	sbc	r25, r25
    6a5a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6a5e:	28 ca       	rjmp	.-2992   	; 0x5eb0 <main+0x978>
    6a60:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    6a64:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    6a68:	44 e6       	ldi	r20, 0x64	; 100
    6a6a:	f4 2e       	mov	r15, r20
    6a6c:	f8 9e       	mul	r15, r24
    6a6e:	b0 01       	movw	r22, r0
    6a70:	f9 9e       	mul	r15, r25
    6a72:	70 0d       	add	r23, r0
    6a74:	11 24       	eor	r1, r1
    6a76:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    6a7a:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    6a7e:	68 0f       	add	r22, r24
    6a80:	79 1f       	adc	r23, r25
    6a82:	07 2e       	mov	r0, r23
    6a84:	00 0c       	add	r0, r0
    6a86:	88 0b       	sbc	r24, r24
    6a88:	99 0b       	sbc	r25, r25
    6a8a:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    6a8e:	00 91 be 28 	lds	r16, 0x28BE	; 0x8028be <i>
    6a92:	10 91 bf 28 	lds	r17, 0x28BF	; 0x8028bf <i+0x1>
    6a96:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6a9a:	81 11       	cpse	r24, r1
    6a9c:	39 c0       	rjmp	.+114    	; 0x6b10 <main+0x15d8>
    6a9e:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    6aa2:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    6aa6:	f8 9e       	mul	r15, r24
    6aa8:	b0 01       	movw	r22, r0
    6aaa:	f9 9e       	mul	r15, r25
    6aac:	70 0d       	add	r23, r0
    6aae:	11 24       	eor	r1, r1
    6ab0:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    6ab4:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    6ab8:	4a e0       	ldi	r20, 0x0A	; 10
    6aba:	42 9f       	mul	r20, r18
    6abc:	c0 01       	movw	r24, r0
    6abe:	43 9f       	mul	r20, r19
    6ac0:	90 0d       	add	r25, r0
    6ac2:	11 24       	eor	r1, r1
    6ac4:	68 0f       	add	r22, r24
    6ac6:	79 1f       	adc	r23, r25
    6ac8:	07 2e       	mov	r0, r23
    6aca:	00 0c       	add	r0, r0
    6acc:	88 0b       	sbc	r24, r24
    6ace:	99 0b       	sbc	r25, r25
    6ad0:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6ad4:	8a e0       	ldi	r24, 0x0A	; 10
    6ad6:	90 e0       	ldi	r25, 0x00	; 0
    6ad8:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6adc:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6ae0:	81 e0       	ldi	r24, 0x01	; 1
    6ae2:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    6ae6:	09 31       	cpi	r16, 0x19	; 25
    6ae8:	11 05       	cpc	r17, r1
    6aea:	54 f4       	brge	.+20     	; 0x6b00 <main+0x15c8>
    6aec:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    6af0:	81 11       	cpse	r24, r1
    6af2:	95 c0       	rjmp	.+298    	; 0x6c1e <main+0x16e6>
    6af4:	88 e1       	ldi	r24, 0x18	; 24
    6af6:	90 e0       	ldi	r25, 0x00	; 0
    6af8:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    6afc:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    6b00:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    6b04:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    6b08:	c3 97       	sbiw	r24, 0x33	; 51
    6b0a:	0c f0       	brlt	.+2      	; 0x6b0e <main+0x15d6>
    6b0c:	7e cf       	rjmp	.-260    	; 0x6a0a <main+0x14d2>
    6b0e:	b4 c8       	rjmp	.-3736   	; 0x5c78 <main+0x740>
digitalWrite():
    6b10:	60 e0       	ldi	r22, 0x00	; 0
    6b12:	8d e1       	ldi	r24, 0x1D	; 29
    6b14:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6b18:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    6b1c:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    6b20:	2a e0       	ldi	r18, 0x0A	; 10
    6b22:	28 9f       	mul	r18, r24
    6b24:	b0 01       	movw	r22, r0
    6b26:	29 9f       	mul	r18, r25
    6b28:	70 0d       	add	r23, r0
    6b2a:	11 24       	eor	r1, r1
    6b2c:	07 2e       	mov	r0, r23
    6b2e:	00 0c       	add	r0, r0
    6b30:	88 0b       	sbc	r24, r24
    6b32:	99 0b       	sbc	r25, r25
    6b34:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6b38:	85 e1       	ldi	r24, 0x15	; 21
    6b3a:	90 e0       	ldi	r25, 0x00	; 0
    6b3c:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6b40:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6b44:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    6b48:	09 31       	cpi	r16, 0x19	; 25
    6b4a:	11 05       	cpc	r17, r1
    6b4c:	cc f6       	brge	.-78     	; 0x6b00 <main+0x15c8>
    6b4e:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    6b52:	81 11       	cpse	r24, r1
    6b54:	64 c0       	rjmp	.+200    	; 0x6c1e <main+0x16e6>
    6b56:	88 e1       	ldi	r24, 0x18	; 24
    6b58:	90 e0       	ldi	r25, 0x00	; 0
    6b5a:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    6b5e:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    6b62:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    6b66:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    6b6a:	c6 cf       	rjmp	.-116    	; 0x6af8 <main+0x15c0>
    6b6c:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6b70:	81 11       	cpse	r24, r1
    6b72:	3c c0       	rjmp	.+120    	; 0x6bec <main+0x16b4>
    6b74:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    6b78:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    6b7c:	24 e6       	ldi	r18, 0x64	; 100
    6b7e:	28 9f       	mul	r18, r24
    6b80:	b0 01       	movw	r22, r0
    6b82:	29 9f       	mul	r18, r25
    6b84:	70 0d       	add	r23, r0
    6b86:	11 24       	eor	r1, r1
    6b88:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    6b8c:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    6b90:	4a e0       	ldi	r20, 0x0A	; 10
    6b92:	42 9f       	mul	r20, r18
    6b94:	c0 01       	movw	r24, r0
    6b96:	43 9f       	mul	r20, r19
    6b98:	90 0d       	add	r25, r0
    6b9a:	11 24       	eor	r1, r1
    6b9c:	68 0f       	add	r22, r24
    6b9e:	79 1f       	adc	r23, r25
    6ba0:	07 2e       	mov	r0, r23
    6ba2:	00 0c       	add	r0, r0
    6ba4:	88 0b       	sbc	r24, r24
    6ba6:	99 0b       	sbc	r25, r25
    6ba8:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6bac:	8a e0       	ldi	r24, 0x0A	; 10
    6bae:	90 e0       	ldi	r25, 0x00	; 0
    6bb0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6bb4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6bb8:	81 e0       	ldi	r24, 0x01	; 1
    6bba:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    6bbe:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    6bc2:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    6bc6:	49 97       	sbiw	r24, 0x19	; 25
    6bc8:	8c f5       	brge	.+98     	; 0x6c2c <main+0x16f4>
    6bca:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    6bce:	81 11       	cpse	r24, r1
    6bd0:	26 c0       	rjmp	.+76     	; 0x6c1e <main+0x16e6>
    6bd2:	88 e1       	ldi	r24, 0x18	; 24
    6bd4:	90 e0       	ldi	r25, 0x00	; 0
    6bd6:	80 93 fa 28 	sts	0x28FA, r24	; 0x8028fa <digits1>
    6bda:	90 93 fb 28 	sts	0x28FB, r25	; 0x8028fb <digits1+0x1>
    6bde:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    6be2:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    6be6:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    6bea:	8a cf       	rjmp	.-236    	; 0x6b00 <main+0x15c8>
    6bec:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    6bf0:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    6bf4:	2a e0       	ldi	r18, 0x0A	; 10
    6bf6:	28 9f       	mul	r18, r24
    6bf8:	b0 01       	movw	r22, r0
    6bfa:	29 9f       	mul	r18, r25
    6bfc:	70 0d       	add	r23, r0
    6bfe:	11 24       	eor	r1, r1
    6c00:	07 2e       	mov	r0, r23
    6c02:	00 0c       	add	r0, r0
    6c04:	88 0b       	sbc	r24, r24
    6c06:	99 0b       	sbc	r25, r25
    6c08:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6c0c:	85 e1       	ldi	r24, 0x15	; 21
    6c0e:	90 e0       	ldi	r25, 0x00	; 0
    6c10:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6c14:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6c18:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    6c1c:	d0 cf       	rjmp	.-96     	; 0x6bbe <main+0x1686>
    6c1e:	89 e1       	ldi	r24, 0x19	; 25
    6c20:	90 e0       	ldi	r25, 0x00	; 0
    6c22:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    6c26:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    6c2a:	6a cf       	rjmp	.-300    	; 0x6b00 <main+0x15c8>
    6c2c:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    6c30:	80 91 20 29 	lds	r24, 0x2920	; 0x802920 <ENTER_BUT>
    6c34:	08 2e       	mov	r0, r24
    6c36:	00 0c       	add	r0, r0
    6c38:	99 0b       	sbc	r25, r25
    6c3a:	fc 01       	movw	r30, r24
    6c3c:	ee 0f       	add	r30, r30
    6c3e:	ff 1f       	adc	r31, r31
    6c40:	ec 5e       	subi	r30, 0xEC	; 236
    6c42:	f6 4d       	sbci	r31, 0xD6	; 214
    6c44:	20 81       	ld	r18, Z
    6c46:	31 81       	ldd	r19, Z+1	; 0x01
    6c48:	44 e6       	ldi	r20, 0x64	; 100
    6c4a:	42 9f       	mul	r20, r18
    6c4c:	b0 01       	movw	r22, r0
    6c4e:	43 9f       	mul	r20, r19
    6c50:	70 0d       	add	r23, r0
    6c52:	11 24       	eor	r1, r1
    6c54:	88 0f       	add	r24, r24
    6c56:	99 1f       	adc	r25, r25
    6c58:	fc 01       	movw	r30, r24
    6c5a:	ea 5e       	subi	r30, 0xEA	; 234
    6c5c:	f6 4d       	sbci	r31, 0xD6	; 214
    6c5e:	80 81       	ld	r24, Z
    6c60:	91 81       	ldd	r25, Z+1	; 0x01
    6c62:	68 0f       	add	r22, r24
    6c64:	79 1f       	adc	r23, r25
    6c66:	07 2e       	mov	r0, r23
    6c68:	00 0c       	add	r0, r0
    6c6a:	88 0b       	sbc	r24, r24
    6c6c:	99 0b       	sbc	r25, r25
    6c6e:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    6c72:	46 cf       	rjmp	.-372    	; 0x6b00 <main+0x15c8>
    6c74:	10 92 c2 28 	sts	0x28C2, r1	; 0x8028c2 <DOT1_1>
    6c78:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6c7c:	81 11       	cpse	r24, r1
    6c7e:	7d c0       	rjmp	.+250    	; 0x6d7a <main+0x1842>
    6c80:	80 91 16 29 	lds	r24, 0x2916	; 0x802916 <SET_VALUE+0x2>
    6c84:	90 91 17 29 	lds	r25, 0x2917	; 0x802917 <SET_VALUE+0x3>
    6c88:	24 e6       	ldi	r18, 0x64	; 100
    6c8a:	28 9f       	mul	r18, r24
    6c8c:	b0 01       	movw	r22, r0
    6c8e:	29 9f       	mul	r18, r25
    6c90:	70 0d       	add	r23, r0
    6c92:	11 24       	eor	r1, r1
    6c94:	20 91 18 29 	lds	r18, 0x2918	; 0x802918 <SET_VALUE+0x4>
    6c98:	30 91 19 29 	lds	r19, 0x2919	; 0x802919 <SET_VALUE+0x5>
    6c9c:	4a e0       	ldi	r20, 0x0A	; 10
    6c9e:	42 9f       	mul	r20, r18
    6ca0:	c0 01       	movw	r24, r0
    6ca2:	43 9f       	mul	r20, r19
    6ca4:	90 0d       	add	r25, r0
    6ca6:	11 24       	eor	r1, r1
    6ca8:	68 0f       	add	r22, r24
    6caa:	79 1f       	adc	r23, r25
    6cac:	07 2e       	mov	r0, r23
    6cae:	00 0c       	add	r0, r0
    6cb0:	88 0b       	sbc	r24, r24
    6cb2:	99 0b       	sbc	r25, r25
    6cb4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6cb8:	8a e0       	ldi	r24, 0x0A	; 10
    6cba:	90 e0       	ldi	r25, 0x00	; 0
    6cbc:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6cc0:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6cc4:	81 e0       	ldi	r24, 0x01	; 1
    6cc6:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    6cca:	80 91 1a 29 	lds	r24, 0x291A	; 0x80291a <SET_VALUE+0x6>
    6cce:	90 91 1b 29 	lds	r25, 0x291B	; 0x80291b <SET_VALUE+0x7>
    6cd2:	24 e6       	ldi	r18, 0x64	; 100
    6cd4:	28 9f       	mul	r18, r24
    6cd6:	b0 01       	movw	r22, r0
    6cd8:	29 9f       	mul	r18, r25
    6cda:	70 0d       	add	r23, r0
    6cdc:	11 24       	eor	r1, r1
    6cde:	80 91 1c 29 	lds	r24, 0x291C	; 0x80291c <SET_VALUE+0x8>
    6ce2:	90 91 1d 29 	lds	r25, 0x291D	; 0x80291d <SET_VALUE+0x9>
    6ce6:	68 0f       	add	r22, r24
    6ce8:	79 1f       	adc	r23, r25
    6cea:	07 2e       	mov	r0, r23
    6cec:	00 0c       	add	r0, r0
    6cee:	88 0b       	sbc	r24, r24
    6cf0:	99 0b       	sbc	r25, r25
    6cf2:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    6cf6:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    6cfa:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    6cfe:	49 97       	sbiw	r24, 0x19	; 25
    6d00:	74 f4       	brge	.+28     	; 0x6d1e <main+0x17e6>
    6d02:	80 91 bd 28 	lds	r24, 0x28BD	; 0x8028bd <BLINK_STATS>
    6d06:	81 11       	cpse	r24, r1
    6d08:	51 c0       	rjmp	.+162    	; 0x6dac <main+0x1874>
    6d0a:	88 e1       	ldi	r24, 0x18	; 24
    6d0c:	90 e0       	ldi	r25, 0x00	; 0
    6d0e:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    6d12:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    6d16:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    6d1a:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    6d1e:	80 91 be 28 	lds	r24, 0x28BE	; 0x8028be <i>
    6d22:	90 91 bf 28 	lds	r25, 0x28BF	; 0x8028bf <i+0x1>
    6d26:	c3 97       	sbiw	r24, 0x33	; 51
    6d28:	24 f0       	brlt	.+8      	; 0x6d32 <main+0x17fa>
    6d2a:	10 92 be 28 	sts	0x28BE, r1	; 0x8028be <i>
    6d2e:	10 92 bf 28 	sts	0x28BF, r1	; 0x8028bf <i+0x1>
    6d32:	10 92 95 28 	sts	0x2895, r1	; 0x802895 <REP1>
    6d36:	10 92 96 28 	sts	0x2896, r1	; 0x802896 <REP1+0x1>
    6d3a:	80 91 aa 28 	lds	r24, 0x28AA	; 0x8028aa <STIR_VALUE_SET>
    6d3e:	90 e0       	ldi	r25, 0x00	; 0
    6d40:	80 93 1e 29 	sts	0x291E, r24	; 0x80291e <SET_VALUE+0xa>
    6d44:	90 93 1f 29 	sts	0x291F, r25	; 0x80291f <SET_VALUE+0xb>
    6d48:	81 e0       	ldi	r24, 0x01	; 1
    6d4a:	80 93 0f 29 	sts	0x290F, r24	; 0x80290f <PUMP_FLAG>
    6d4e:	20 91 1a 29 	lds	r18, 0x291A	; 0x80291a <SET_VALUE+0x6>
    6d52:	30 91 1b 29 	lds	r19, 0x291B	; 0x80291b <SET_VALUE+0x7>
    6d56:	4c e3       	ldi	r20, 0x3C	; 60
    6d58:	42 9f       	mul	r20, r18
    6d5a:	c0 01       	movw	r24, r0
    6d5c:	43 9f       	mul	r20, r19
    6d5e:	90 0d       	add	r25, r0
    6d60:	11 24       	eor	r1, r1
    6d62:	20 91 1c 29 	lds	r18, 0x291C	; 0x80291c <SET_VALUE+0x8>
    6d66:	30 91 1d 29 	lds	r19, 0x291D	; 0x80291d <SET_VALUE+0x9>
    6d6a:	82 0f       	add	r24, r18
    6d6c:	93 1f       	adc	r25, r19
    6d6e:	80 93 a6 28 	sts	0x28A6, r24	; 0x8028a6 <SET_MIN>
    6d72:	90 93 a7 28 	sts	0x28A7, r25	; 0x8028a7 <SET_MIN+0x1>
    6d76:	0c 94 3c 2e 	jmp	0x5c78	; 0x5c78 <main+0x740>
    6d7a:	80 91 40 29 	lds	r24, 0x2940	; 0x802940 <SET_LONG_VALUE+0x1f>
    6d7e:	90 91 41 29 	lds	r25, 0x2941	; 0x802941 <SET_LONG_VALUE+0x20>
    6d82:	2a e0       	ldi	r18, 0x0A	; 10
    6d84:	28 9f       	mul	r18, r24
    6d86:	b0 01       	movw	r22, r0
    6d88:	29 9f       	mul	r18, r25
    6d8a:	70 0d       	add	r23, r0
    6d8c:	11 24       	eor	r1, r1
    6d8e:	07 2e       	mov	r0, r23
    6d90:	00 0c       	add	r0, r0
    6d92:	88 0b       	sbc	r24, r24
    6d94:	99 0b       	sbc	r25, r25
    6d96:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    6d9a:	85 e1       	ldi	r24, 0x15	; 21
    6d9c:	90 e0       	ldi	r25, 0x00	; 0
    6d9e:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    6da2:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    6da6:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    6daa:	8f cf       	rjmp	.-226    	; 0x6cca <main+0x1792>
    6dac:	89 e1       	ldi	r24, 0x19	; 25
    6dae:	90 e0       	ldi	r25, 0x00	; 0
    6db0:	80 93 be 28 	sts	0x28BE, r24	; 0x8028be <i>
    6db4:	90 93 bf 28 	sts	0x28BF, r25	; 0x8028bf <i+0x1>
    6db8:	b2 cf       	rjmp	.-156    	; 0x6d1e <main+0x17e6>
    6dba:	b8 01       	movw	r22, r16
    6dbc:	11 0f       	add	r17, r17
    6dbe:	88 0b       	sbc	r24, r24
    6dc0:	99 0b       	sbc	r25, r25
    6dc2:	b8 d3       	rcall	.+1904   	; 0x7534 <__floatsisf>
    6dc4:	4b 01       	movw	r8, r22
    6dc6:	5c 01       	movw	r10, r24
    6dc8:	20 e0       	ldi	r18, 0x00	; 0
    6dca:	30 e0       	ldi	r19, 0x00	; 0
    6dcc:	40 e7       	ldi	r20, 0x70	; 112
    6dce:	51 e4       	ldi	r21, 0x41	; 65
    6dd0:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    6dd4:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    6dd8:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    6ddc:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    6de0:	a6 d2       	rcall	.+1356   	; 0x732e <__addsf3>
    6de2:	9b 01       	movw	r18, r22
    6de4:	ac 01       	movw	r20, r24
    6de6:	c5 01       	movw	r24, r10
    6de8:	b4 01       	movw	r22, r8
    6dea:	1e c9       	rjmp	.-3524   	; 0x6028 <main+0xaf0>
    6dec:	10 92 8b 28 	sts	0x288B, r1	; 0x80288b <CHECK_RATE_OF_HEATING>
digitalWrite():
    6df0:	61 e0       	ldi	r22, 0x01	; 1
    6df2:	88 e1       	ldi	r24, 0x18	; 24
    6df4:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6df8:	80 91 f2 28 	lds	r24, 0x28F2	; 0x8028f2 <TEMP_DEG_RAW>
    6dfc:	90 91 f3 28 	lds	r25, 0x28F3	; 0x8028f3 <TEMP_DEG_RAW+0x1>
    6e00:	a0 91 f4 28 	lds	r26, 0x28F4	; 0x8028f4 <TEMP_DEG_RAW+0x2>
    6e04:	b0 91 f5 28 	lds	r27, 0x28F5	; 0x8028f5 <TEMP_DEG_RAW+0x3>
    6e08:	80 93 7c 28 	sts	0x287C, r24	; 0x80287c <TEMP_VALUE_INITIAL>
    6e0c:	90 93 7d 28 	sts	0x287D, r25	; 0x80287d <TEMP_VALUE_INITIAL+0x1>
    6e10:	a0 93 7e 28 	sts	0x287E, r26	; 0x80287e <TEMP_VALUE_INITIAL+0x2>
    6e14:	b0 93 7f 28 	sts	0x287F, r27	; 0x80287f <TEMP_VALUE_INITIAL+0x3>
    6e18:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <millis>
    6e1c:	60 93 78 28 	sts	0x2878, r22	; 0x802878 <START_COUNT_VALUE>
    6e20:	70 93 79 28 	sts	0x2879, r23	; 0x802879 <START_COUNT_VALUE+0x1>
    6e24:	80 93 7a 28 	sts	0x287A, r24	; 0x80287a <START_COUNT_VALUE+0x2>
    6e28:	90 93 7b 28 	sts	0x287B, r25	; 0x80287b <START_COUNT_VALUE+0x3>
    6e2c:	16 c9       	rjmp	.-3540   	; 0x605a <main+0xb22>
    6e2e:	60 91 81 28 	lds	r22, 0x2881	; 0x802881 <SET_TEMP_FAH>
    6e32:	70 91 82 28 	lds	r23, 0x2882	; 0x802882 <SET_TEMP_FAH+0x1>
    6e36:	07 2e       	mov	r0, r23
    6e38:	00 0c       	add	r0, r0
    6e3a:	88 0b       	sbc	r24, r24
    6e3c:	99 0b       	sbc	r25, r25
    6e3e:	7a d3       	rcall	.+1780   	; 0x7534 <__floatsisf>
    6e40:	60 93 74 28 	sts	0x2874, r22	; 0x802874 <PID_SETPOINT_To_Show>
    6e44:	70 93 75 28 	sts	0x2875, r23	; 0x802875 <PID_SETPOINT_To_Show+0x1>
    6e48:	80 93 76 28 	sts	0x2876, r24	; 0x802876 <PID_SETPOINT_To_Show+0x2>
    6e4c:	90 93 77 28 	sts	0x2877, r25	; 0x802877 <PID_SETPOINT_To_Show+0x3>
    6e50:	20 e0       	ldi	r18, 0x00	; 0
    6e52:	30 e0       	ldi	r19, 0x00	; 0
    6e54:	40 e0       	ldi	r20, 0x00	; 0
    6e56:	52 e4       	ldi	r21, 0x42	; 66
    6e58:	69 d2       	rcall	.+1234   	; 0x732c <__subsf3>
    6e5a:	26 e6       	ldi	r18, 0x66	; 102
    6e5c:	36 e6       	ldi	r19, 0x66	; 102
    6e5e:	46 ee       	ldi	r20, 0xE6	; 230
    6e60:	5f e3       	ldi	r21, 0x3F	; 63
    6e62:	cd d2       	rcall	.+1434   	; 0x73fe <__divsf3>
    6e64:	60 93 f2 29 	sts	0x29F2, r22	; 0x8029f2 <PID_SETPOINT>
    6e68:	70 93 f3 29 	sts	0x29F3, r23	; 0x8029f3 <PID_SETPOINT+0x1>
    6e6c:	80 93 f4 29 	sts	0x29F4, r24	; 0x8029f4 <PID_SETPOINT+0x2>
    6e70:	90 93 f5 29 	sts	0x29F5, r25	; 0x8029f5 <PID_SETPOINT+0x3>
    6e74:	0c c9       	rjmp	.-3560   	; 0x608e <main+0xb56>
    6e76:	10 92 89 28 	sts	0x2889, r1	; 0x802889 <checkTempRaised>
    6e7a:	72 c9       	rjmp	.-3356   	; 0x6160 <main+0xc28>
    6e7c:	40 91 55 28 	lds	r20, 0x2855	; 0x802855 <TO_CHECK_REPETATION_WITHIN_TIME>
    6e80:	50 91 56 28 	lds	r21, 0x2856	; 0x802856 <TO_CHECK_REPETATION_WITHIN_TIME+0x1>
    6e84:	60 91 57 28 	lds	r22, 0x2857	; 0x802857 <TO_CHECK_REPETATION_WITHIN_TIME+0x2>
    6e88:	70 91 58 28 	lds	r23, 0x2858	; 0x802858 <TO_CHECK_REPETATION_WITHIN_TIME+0x3>
    6e8c:	26 01       	movw	r4, r12
    6e8e:	37 01       	movw	r6, r14
    6e90:	44 1a       	sub	r4, r20
    6e92:	55 0a       	sbc	r5, r21
    6e94:	66 0a       	sbc	r6, r22
    6e96:	77 0a       	sbc	r7, r23
    6e98:	b3 01       	movw	r22, r6
    6e9a:	a2 01       	movw	r20, r4
    6e9c:	40 39       	cpi	r20, 0x90	; 144
    6e9e:	5f 45       	sbci	r21, 0x5F	; 95
    6ea0:	61 40       	sbci	r22, 0x01	; 1
    6ea2:	71 05       	cpc	r23, r1
    6ea4:	30 f4       	brcc	.+12     	; 0x6eb2 <main+0x197a>
    6ea6:	01 96       	adiw	r24, 0x01	; 1
    6ea8:	80 93 59 28 	sts	0x2859, r24	; 0x802859 <COOLING_CYCLE_COUNT>
    6eac:	90 93 5a 28 	sts	0x285A, r25	; 0x80285a <COOLING_CYCLE_COUNT+0x1>
    6eb0:	87 ca       	rjmp	.-2802   	; 0x63c0 <main+0xe88>
    6eb2:	10 92 59 28 	sts	0x2859, r1	; 0x802859 <COOLING_CYCLE_COUNT>
    6eb6:	10 92 5a 28 	sts	0x285A, r1	; 0x80285a <COOLING_CYCLE_COUNT+0x1>
    6eba:	82 ca       	rjmp	.-2812   	; 0x63c0 <main+0xe88>
    6ebc:	80 91 67 28 	lds	r24, 0x2867	; 0x802867 <CAL_OF_10_MIN>
    6ec0:	90 91 68 28 	lds	r25, 0x2868	; 0x802868 <CAL_OF_10_MIN+0x1>
    6ec4:	a0 91 69 28 	lds	r26, 0x2869	; 0x802869 <CAL_OF_10_MIN+0x2>
    6ec8:	b0 91 6a 28 	lds	r27, 0x286A	; 0x80286a <CAL_OF_10_MIN+0x3>
    6ecc:	26 01       	movw	r4, r12
    6ece:	37 01       	movw	r6, r14
    6ed0:	48 1a       	sub	r4, r24
    6ed2:	59 0a       	sbc	r5, r25
    6ed4:	6a 0a       	sbc	r6, r26
    6ed6:	7b 0a       	sbc	r7, r27
    6ed8:	d3 01       	movw	r26, r6
    6eda:	c2 01       	movw	r24, r4
    6edc:	81 3a       	cpi	r24, 0xA1	; 161
    6ede:	98 46       	sbci	r25, 0x68	; 104
    6ee0:	a6 40       	sbci	r26, 0x06	; 6
    6ee2:	b1 05       	cpc	r27, r1
    6ee4:	08 f4       	brcc	.+2      	; 0x6ee8 <main+0x19b0>
    6ee6:	6c ca       	rjmp	.-2856   	; 0x63c0 <main+0xe88>
    6ee8:	81 e0       	ldi	r24, 0x01	; 1
    6eea:	80 93 80 28 	sts	0x2880, r24	; 0x802880 <FILL_BATH_ERROR_NOT_CLEAR>
digitalWrite():
    6eee:	60 e0       	ldi	r22, 0x00	; 0
    6ef0:	85 e1       	ldi	r24, 0x15	; 21
    6ef2:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    6ef6:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    6efa:	10 92 a6 28 	sts	0x28A6, r1	; 0x8028a6 <SET_MIN>
    6efe:	10 92 a7 28 	sts	0x28A7, r1	; 0x8028a7 <SET_MIN+0x1>
    6f02:	5e ca       	rjmp	.-2884   	; 0x63c0 <main+0xe88>
    6f04:	20 e0       	ldi	r18, 0x00	; 0
    6f06:	30 e0       	ldi	r19, 0x00	; 0
    6f08:	40 e8       	ldi	r20, 0x80	; 128
    6f0a:	5f e3       	ldi	r21, 0x3F	; 63
    6f0c:	c7 01       	movw	r24, r14
    6f0e:	b6 01       	movw	r22, r12
    6f10:	72 d2       	rcall	.+1252   	; 0x73f6 <__cmpsf2>
    6f12:	87 ff       	sbrs	r24, 7
    6f14:	73 ca       	rjmp	.-2842   	; 0x63fc <main+0xec4>
    6f16:	80 91 8b 28 	lds	r24, 0x288B	; 0x80288b <CHECK_RATE_OF_HEATING>
    6f1a:	88 23       	and	r24, r24
    6f1c:	09 f4       	brne	.+2      	; 0x6f20 <main+0x19e8>
    6f1e:	6e ca       	rjmp	.-2852   	; 0x63fc <main+0xec4>
    6f20:	80 91 8d 28 	lds	r24, 0x288D	; 0x80288d <EXECUTE_PID_LOOP>
    6f24:	81 11       	cpse	r24, r1
    6f26:	07 c0       	rjmp	.+14     	; 0x6f36 <main+0x19fe>
PID_Start():
    6f28:	8c ee       	ldi	r24, 0xEC	; 236
    6f2a:	9a e2       	ldi	r25, 0x2A	; 42
    6f2c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    6f30:	81 e0       	ldi	r24, 0x01	; 1
    6f32:	80 93 8d 28 	sts	0x288D, r24	; 0x80288d <EXECUTE_PID_LOOP>
    6f36:	0e 94 86 09 	call	0x130c	; 0x130c <Lclass::PID_callingg() [clone .constprop.51]>
    6f3a:	60 ca       	rjmp	.-2880   	; 0x63fc <main+0xec4>
    6f3c:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    6f40:	81 11       	cpse	r24, r1
    6f42:	1b c0       	rjmp	.+54     	; 0x6f7a <main+0x1a42>
    6f44:	a7 01       	movw	r20, r14
    6f46:	96 01       	movw	r18, r12
    6f48:	c5 01       	movw	r24, r10
    6f4a:	b4 01       	movw	r22, r8
    6f4c:	a3 d3       	rcall	.+1862   	; 0x7694 <__gesf2>
    6f4e:	87 fd       	sbrc	r24, 7
    6f50:	06 c0       	rjmp	.+12     	; 0x6f5e <main+0x1a26>
    6f52:	81 e0       	ldi	r24, 0x01	; 1
    6f54:	80 93 a5 28 	sts	0x28A5, r24	; 0x8028a5 <COUNTDOWN_START>
    6f58:	80 93 8a 28 	sts	0x288A, r24	; 0x80288a <soak_once_flag>
    6f5c:	66 ca       	rjmp	.-2868   	; 0x642a <main+0xef2>
    6f5e:	a7 01       	movw	r20, r14
    6f60:	96 01       	movw	r18, r12
    6f62:	c5 01       	movw	r24, r10
    6f64:	b4 01       	movw	r22, r8
    6f66:	47 d2       	rcall	.+1166   	; 0x73f6 <__cmpsf2>
    6f68:	87 ff       	sbrs	r24, 7
    6f6a:	d8 c1       	rjmp	.+944    	; 0x731c <main+0x1de4>
    6f6c:	80 91 8a 28 	lds	r24, 0x288A	; 0x80288a <soak_once_flag>
    6f70:	81 11       	cpse	r24, r1
    6f72:	5b ca       	rjmp	.-2890   	; 0x642a <main+0xef2>
    6f74:	10 92 a5 28 	sts	0x28A5, r1	; 0x8028a5 <COUNTDOWN_START>
    6f78:	58 ca       	rjmp	.-2896   	; 0x642a <main+0xef2>
    6f7a:	40 90 d4 28 	lds	r4, 0x28D4	; 0x8028d4 <TEMP_FAH>
    6f7e:	50 90 d5 28 	lds	r5, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    6f82:	60 90 d6 28 	lds	r6, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    6f86:	70 90 d7 28 	lds	r7, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    6f8a:	a3 01       	movw	r20, r6
    6f8c:	92 01       	movw	r18, r4
    6f8e:	c7 01       	movw	r24, r14
    6f90:	b6 01       	movw	r22, r12
    6f92:	31 d2       	rcall	.+1122   	; 0x73f6 <__cmpsf2>
    6f94:	18 16       	cp	r1, r24
    6f96:	ec f6       	brge	.-70     	; 0x6f52 <main+0x1a1a>
    6f98:	a3 01       	movw	r20, r6
    6f9a:	92 01       	movw	r18, r4
    6f9c:	c7 01       	movw	r24, r14
    6f9e:	b6 01       	movw	r22, r12
    6fa0:	79 d3       	rcall	.+1778   	; 0x7694 <__gesf2>
    6fa2:	18 16       	cp	r1, r24
    6fa4:	1c f3       	brlt	.-58     	; 0x6f6c <main+0x1a34>
    6fa6:	41 ca       	rjmp	.-2942   	; 0x642a <main+0xef2>
main():
    6fa8:	80 e8       	ldi	r24, 0x80	; 128
    6faa:	9a e1       	ldi	r25, 0x1A	; 26
    6fac:	a6 e0       	ldi	r26, 0x06	; 6
    6fae:	b0 e0       	ldi	r27, 0x00	; 0
    6fb0:	66 ca       	rjmp	.-2868   	; 0x647e <main+0xf46>
    6fb2:	80 e0       	ldi	r24, 0x00	; 0
    6fb4:	95 e3       	ldi	r25, 0x35	; 53
    6fb6:	ac e0       	ldi	r26, 0x0C	; 12
    6fb8:	b0 e0       	ldi	r27, 0x00	; 0
    6fba:	74 ca       	rjmp	.-2840   	; 0x64a4 <main+0xf6c>
    6fbc:	80 e4       	ldi	r24, 0x40	; 64
    6fbe:	92 e4       	ldi	r25, 0x42	; 66
    6fc0:	af e0       	ldi	r26, 0x0F	; 15
    6fc2:	b0 e0       	ldi	r27, 0x00	; 0
    6fc4:	1b cb       	rjmp	.-2506   	; 0x65fc <main+0x10c4>
    6fc6:	80 e8       	ldi	r24, 0x80	; 128
    6fc8:	94 e8       	ldi	r25, 0x84	; 132
    6fca:	ae e1       	ldi	r26, 0x1E	; 30
    6fcc:	b0 e0       	ldi	r27, 0x00	; 0
    6fce:	29 cb       	rjmp	.-2478   	; 0x6622 <main+0x10ea>
SET_SHORT_PRESS_FUNCTION():
    6fd0:	80 91 0f 29 	lds	r24, 0x290F	; 0x80290f <PUMP_FLAG>
    6fd4:	88 23       	and	r24, r24
    6fd6:	09 f4       	brne	.+2      	; 0x6fda <main+0x1aa2>
    6fd8:	4d c0       	rjmp	.+154    	; 0x7074 <main+0x1b3c>
    6fda:	80 91 0e 29 	lds	r24, 0x290E	; 0x80290e <select_product_type>
    6fde:	88 23       	and	r24, r24
    6fe0:	09 f4       	brne	.+2      	; 0x6fe4 <main+0x1aac>
    6fe2:	48 c0       	rjmp	.+144    	; 0x7074 <main+0x1b3c>
    6fe4:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    6fe8:	10 92 c0 28 	sts	0x28C0, r1	; 0x8028c0 <DOT1_0>
    6fec:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
digitalWrite():
    6ff0:	60 e0       	ldi	r22, 0x00	; 0
    6ff2:	8c e0       	ldi	r24, 0x0C	; 12
    6ff4:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
DISPLAY_DIGIT2():
    6ff8:	8c e0       	ldi	r24, 0x0C	; 12
    6ffa:	90 e0       	ldi	r25, 0x00	; 0
    6ffc:	80 93 02 29 	sts	0x2902, r24	; 0x802902 <digits2>
    7000:	90 93 03 29 	sts	0x2903, r25	; 0x802903 <digits2+0x1>
    7004:	80 e1       	ldi	r24, 0x10	; 16
    7006:	90 e0       	ldi	r25, 0x00	; 0
    7008:	80 93 04 29 	sts	0x2904, r24	; 0x802904 <digits2+0x2>
    700c:	90 93 05 29 	sts	0x2905, r25	; 0x802905 <digits2+0x3>
    7010:	89 e1       	ldi	r24, 0x19	; 25
    7012:	90 e0       	ldi	r25, 0x00	; 0
    7014:	80 93 06 29 	sts	0x2906, r24	; 0x802906 <digits2+0x4>
    7018:	90 93 07 29 	sts	0x2907, r25	; 0x802907 <digits2+0x5>
    701c:	81 e1       	ldi	r24, 0x11	; 17
    701e:	90 e0       	ldi	r25, 0x00	; 0
    7020:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    7024:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
SET_SHORT_PRESS_FUNCTION():
    7028:	80 91 1e 29 	lds	r24, 0x291E	; 0x80291e <SET_VALUE+0xa>
    702c:	90 91 1f 29 	lds	r25, 0x291F	; 0x80291f <SET_VALUE+0xb>
DISPLAY_DIGIT1():
    7030:	10 92 fa 28 	sts	0x28FA, r1	; 0x8028fa <digits1>
    7034:	10 92 fb 28 	sts	0x28FB, r1	; 0x8028fb <digits1+0x1>
SET_SHORT_PRESS_FUNCTION():
    7038:	89 2b       	or	r24, r25
    703a:	79 f4       	brne	.+30     	; 0x705a <main+0x1b22>
DISPLAY_DIGIT1():
    703c:	00 93 fc 28 	sts	0x28FC, r16	; 0x8028fc <digits1+0x2>
    7040:	10 93 fd 28 	sts	0x28FD, r17	; 0x8028fd <digits1+0x3>
    7044:	00 93 fe 28 	sts	0x28FE, r16	; 0x8028fe <digits1+0x4>
    7048:	10 93 ff 28 	sts	0x28FF, r17	; 0x8028ff <digits1+0x5>
    704c:	88 e1       	ldi	r24, 0x18	; 24
    704e:	90 e0       	ldi	r25, 0x00	; 0
    7050:	80 93 00 29 	sts	0x2900, r24	; 0x802900 <digits1+0x6>
    7054:	90 93 01 29 	sts	0x2901, r25	; 0x802901 <digits1+0x7>
    7058:	2a c8       	rjmp	.-4012   	; 0x60ae <main+0xb76>
    705a:	84 e1       	ldi	r24, 0x14	; 20
    705c:	90 e0       	ldi	r25, 0x00	; 0
    705e:	80 93 fc 28 	sts	0x28FC, r24	; 0x8028fc <digits1+0x2>
    7062:	90 93 fd 28 	sts	0x28FD, r25	; 0x8028fd <digits1+0x3>
    7066:	88 e1       	ldi	r24, 0x18	; 24
    7068:	90 e0       	ldi	r25, 0x00	; 0
    706a:	80 93 fe 28 	sts	0x28FE, r24	; 0x8028fe <digits1+0x4>
    706e:	90 93 ff 28 	sts	0x28FF, r25	; 0x8028ff <digits1+0x5>
    7072:	ee cf       	rjmp	.-36     	; 0x7050 <main+0x1b18>
SET_SHORT_PRESS_FUNCTION():
    7074:	80 91 4d 28 	lds	r24, 0x284D	; 0x80284d <TIMER_LED_BLINK>
    7078:	90 91 4e 28 	lds	r25, 0x284E	; 0x80284e <TIMER_LED_BLINK+0x1>
    707c:	9c 01       	movw	r18, r24
    707e:	2f 5f       	subi	r18, 0xFF	; 255
    7080:	3f 4f       	sbci	r19, 0xFF	; 255
    7082:	20 93 4d 28 	sts	0x284D, r18	; 0x80284d <TIMER_LED_BLINK>
    7086:	30 93 4e 28 	sts	0x284E, r19	; 0x80284e <TIMER_LED_BLINK+0x1>
digitalWrite():
    708a:	61 e0       	ldi	r22, 0x01	; 1
SET_SHORT_PRESS_FUNCTION():
    708c:	28 39       	cpi	r18, 0x98	; 152
    708e:	38 40       	sbci	r19, 0x08	; 8
    7090:	38 f0       	brcs	.+14     	; 0x70a0 <main+0x1b68>
    7092:	87 59       	subi	r24, 0x97	; 151
    7094:	98 40       	sbci	r25, 0x08	; 8
    7096:	88 39       	cpi	r24, 0x98	; 152
    7098:	98 40       	sbci	r25, 0x08	; 8
    709a:	08 f0       	brcs	.+2      	; 0x709e <main+0x1b66>
    709c:	53 c0       	rjmp	.+166    	; 0x7144 <main+0x1c0c>
digitalWrite():
    709e:	60 e0       	ldi	r22, 0x00	; 0
    70a0:	8c e0       	ldi	r24, 0x0C	; 12
    70a2:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    70a6:	80 91 97 28 	lds	r24, 0x2897	; 0x802897 <IN_ERROR>
    70aa:	88 23       	and	r24, r24
    70ac:	71 f0       	breq	.+28     	; 0x70ca <main+0x1b92>
stop():
    70ae:	10 92 a9 2b 	sts	0x2BA9, r1	; 0x802ba9 <BUZZ_TICK1>
    70b2:	10 92 b4 2b 	sts	0x2BB4, r1	; 0x802bb4 <BUZZ_TICK1+0xb>
    70b6:	10 92 b5 2b 	sts	0x2BB5, r1	; 0x802bb5 <BUZZ_TICK1+0xc>
    70ba:	10 92 b6 2b 	sts	0x2BB6, r1	; 0x802bb6 <BUZZ_TICK1+0xd>
    70be:	10 92 b7 2b 	sts	0x2BB7, r1	; 0x802bb7 <BUZZ_TICK1+0xe>
    70c2:	10 92 b8 2b 	sts	0x2BB8, r1	; 0x802bb8 <BUZZ_TICK1+0xf>
    70c6:	10 92 b9 2b 	sts	0x2BB9, r1	; 0x802bb9 <BUZZ_TICK1+0x10>
SET_SHORT_PRESS_FUNCTION():
    70ca:	84 e6       	ldi	r24, 0x64	; 100
    70cc:	8c 9d       	mul	r24, r12
    70ce:	b0 01       	movw	r22, r0
    70d0:	8d 9d       	mul	r24, r13
    70d2:	70 0d       	add	r23, r0
    70d4:	11 24       	eor	r1, r1
    70d6:	6e 0d       	add	r22, r14
    70d8:	7f 1d       	adc	r23, r15
    70da:	07 2e       	mov	r0, r23
    70dc:	00 0c       	add	r0, r0
    70de:	88 0b       	sbc	r24, r24
    70e0:	99 0b       	sbc	r25, r25
    70e2:	0e 94 a0 03 	call	0x740	; 0x740 <Eclass::BREAK_NUMBER1(long) [clone .constprop.59]>
    70e6:	87 e0       	ldi	r24, 0x07	; 7
    70e8:	9b e2       	ldi	r25, 0x2B	; 43
    70ea:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    70ee:	80 91 73 28 	lds	r24, 0x2873	; 0x802873 <Alternate_Display_Flag>
    70f2:	88 23       	and	r24, r24
    70f4:	d1 f1       	breq	.+116    	; 0x716a <main+0x1c32>
digitalWrite():
    70f6:	61 e0       	ldi	r22, 0x01	; 1
    70f8:	8c e1       	ldi	r24, 0x1C	; 28
    70fa:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    70fe:	60 e0       	ldi	r22, 0x00	; 0
    7100:	8d e1       	ldi	r24, 0x1D	; 29
    7102:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    7106:	60 91 74 28 	lds	r22, 0x2874	; 0x802874 <PID_SETPOINT_To_Show>
    710a:	70 91 75 28 	lds	r23, 0x2875	; 0x802875 <PID_SETPOINT_To_Show+0x1>
    710e:	80 91 76 28 	lds	r24, 0x2876	; 0x802876 <PID_SETPOINT_To_Show+0x2>
    7112:	90 91 77 28 	lds	r25, 0x2877	; 0x802877 <PID_SETPOINT_To_Show+0x3>
SET_SHORT_PRESS_FUNCTION():
    7116:	20 91 53 29 	lds	r18, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    711a:	21 11       	cpse	r18, r1
    711c:	18 c0       	rjmp	.+48     	; 0x714e <main+0x1c16>
    711e:	20 e0       	ldi	r18, 0x00	; 0
    7120:	30 e0       	ldi	r19, 0x00	; 0
    7122:	48 ec       	ldi	r20, 0xC8	; 200
    7124:	52 e4       	ldi	r21, 0x42	; 66
    7126:	ba d2       	rcall	.+1396   	; 0x769c <__mulsf3>
    7128:	d2 d1       	rcall	.+932    	; 0x74ce <__fixsfsi>
    712a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    712e:	8a e0       	ldi	r24, 0x0A	; 10
    7130:	90 e0       	ldi	r25, 0x00	; 0
    7132:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    7136:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    713a:	81 e0       	ldi	r24, 0x01	; 1
    713c:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    7140:	0c 94 57 30 	jmp	0x60ae	; 0x60ae <main+0xb76>
    7144:	10 92 4d 28 	sts	0x284D, r1	; 0x80284d <TIMER_LED_BLINK>
    7148:	10 92 4e 28 	sts	0x284E, r1	; 0x80284e <TIMER_LED_BLINK+0x1>
    714c:	ac cf       	rjmp	.-168    	; 0x70a6 <main+0x1b6e>
    714e:	20 e0       	ldi	r18, 0x00	; 0
    7150:	30 e0       	ldi	r19, 0x00	; 0
    7152:	40 e2       	ldi	r20, 0x20	; 32
    7154:	51 e4       	ldi	r21, 0x41	; 65
    7156:	a2 d2       	rcall	.+1348   	; 0x769c <__mulsf3>
    7158:	ba d1       	rcall	.+884    	; 0x74ce <__fixsfsi>
    715a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    715e:	00 93 08 29 	sts	0x2908, r16	; 0x802908 <digits2+0x6>
    7162:	10 93 09 29 	sts	0x2909, r17	; 0x802909 <digits2+0x7>
    7166:	0c 94 57 30 	jmp	0x60ae	; 0x60ae <main+0xb76>
digitalWrite():
    716a:	60 e0       	ldi	r22, 0x00	; 0
    716c:	8c e1       	ldi	r24, 0x1C	; 28
    716e:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
    7172:	61 e0       	ldi	r22, 0x01	; 1
    7174:	8d e1       	ldi	r24, 0x1D	; 29
    7176:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    717a:	80 91 53 29 	lds	r24, 0x2953	; 0x802953 <DEGREE_VALUE_SET>
    717e:	81 11       	cpse	r24, r1
    7180:	33 c0       	rjmp	.+102    	; 0x71e8 <main+0x1cb0>
    7182:	c0 90 f6 28 	lds	r12, 0x28F6	; 0x8028f6 <TEMP_DEG>
    7186:	d0 90 f7 28 	lds	r13, 0x28F7	; 0x8028f7 <TEMP_DEG+0x1>
    718a:	e0 90 f8 28 	lds	r14, 0x28F8	; 0x8028f8 <TEMP_DEG+0x2>
    718e:	f0 90 f9 28 	lds	r15, 0x28F9	; 0x8028f9 <TEMP_DEG+0x3>
    7192:	2d ec       	ldi	r18, 0xCD	; 205
    7194:	3c ec       	ldi	r19, 0xCC	; 204
    7196:	47 ec       	ldi	r20, 0xC7	; 199
    7198:	52 e4       	ldi	r21, 0x42	; 66
    719a:	c7 01       	movw	r24, r14
    719c:	b6 01       	movw	r22, r12
    719e:	7a d2       	rcall	.+1268   	; 0x7694 <__gesf2>
    71a0:	18 16       	cp	r1, r24
    71a2:	a4 f4       	brge	.+40     	; 0x71cc <main+0x1c94>
    71a4:	20 e0       	ldi	r18, 0x00	; 0
    71a6:	30 e0       	ldi	r19, 0x00	; 0
    71a8:	40 e2       	ldi	r20, 0x20	; 32
    71aa:	51 e4       	ldi	r21, 0x41	; 65
    71ac:	c7 01       	movw	r24, r14
    71ae:	b6 01       	movw	r22, r12
    71b0:	75 d2       	rcall	.+1258   	; 0x769c <__mulsf3>
    71b2:	8d d1       	rcall	.+794    	; 0x74ce <__fixsfsi>
    71b4:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    71b8:	10 92 c1 28 	sts	0x28C1, r1	; 0x8028c1 <DOT2_1>
    71bc:	8a e0       	ldi	r24, 0x0A	; 10
    71be:	90 e0       	ldi	r25, 0x00	; 0
    71c0:	80 93 08 29 	sts	0x2908, r24	; 0x802908 <digits2+0x6>
    71c4:	90 93 09 29 	sts	0x2909, r25	; 0x802909 <digits2+0x7>
    71c8:	0c 94 57 30 	jmp	0x60ae	; 0x60ae <main+0xb76>
    71cc:	20 e0       	ldi	r18, 0x00	; 0
    71ce:	30 e0       	ldi	r19, 0x00	; 0
    71d0:	48 ec       	ldi	r20, 0xC8	; 200
    71d2:	52 e4       	ldi	r21, 0x42	; 66
    71d4:	c7 01       	movw	r24, r14
    71d6:	b6 01       	movw	r22, r12
    71d8:	61 d2       	rcall	.+1218   	; 0x769c <__mulsf3>
    71da:	79 d1       	rcall	.+754    	; 0x74ce <__fixsfsi>
    71dc:	0e 94 61 03 	call	0x6c2	; 0x6c2 <Eclass::BREAK_NUMBER2(long) [clone .constprop.60]>
    71e0:	81 e0       	ldi	r24, 0x01	; 1
    71e2:	80 93 c1 28 	sts	0x28C1, r24	; 0x8028c1 <DOT2_1>
    71e6:	ea cf       	rjmp	.-44     	; 0x71bc <main+0x1c84>
    71e8:	20 e0       	ldi	r18, 0x00	; 0
    71ea:	30 e0       	ldi	r19, 0x00	; 0
    71ec:	40 e2       	ldi	r20, 0x20	; 32
    71ee:	51 e4       	ldi	r21, 0x41	; 65
    71f0:	60 91 d4 28 	lds	r22, 0x28D4	; 0x8028d4 <TEMP_FAH>
    71f4:	70 91 d5 28 	lds	r23, 0x28D5	; 0x8028d5 <TEMP_FAH+0x1>
    71f8:	80 91 d6 28 	lds	r24, 0x28D6	; 0x8028d6 <TEMP_FAH+0x2>
    71fc:	90 91 d7 28 	lds	r25, 0x28D7	; 0x8028d7 <TEMP_FAH+0x3>
    7200:	aa cf       	rjmp	.-172    	; 0x7156 <main+0x1c1e>
digitalWrite():
    7202:	60 e0       	ldi	r22, 0x00	; 0
    7204:	81 e2       	ldi	r24, 0x21	; 33
    7206:	0e 94 16 08 	call	0x102c	; 0x102c <digitalWrite.part.2>
SET_SHORT_PRESS_FUNCTION():
    720a:	60 e0       	ldi	r22, 0x00	; 0
    720c:	80 ea       	ldi	r24, 0xA0	; 160
    720e:	90 e0       	ldi	r25, 0x00	; 0
    7210:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
    7214:	0e 94 25 09 	call	0x124a	; 0x124a <Pclass::ALL_LED_OFF() [clone .constprop.61]>
LED_On_Call():
    7218:	88 e5       	ldi	r24, 0x58	; 88
    721a:	9b e2       	ldi	r25, 0x2B	; 43
    721c:	0e 94 0a 0b 	call	0x1614	; 0x1614 <Ticker::start()>
SET_SHORT_PRESS_FUNCTION():
    7220:	10 92 9f 28 	sts	0x289F, r1	; 0x80289f <Process_Interrupt_flag>
Process_Time_Set_On_Eeprom():
    7224:	60 e0       	ldi	r22, 0x00	; 0
    7226:	87 e8       	ldi	r24, 0x87	; 135
    7228:	90 e0       	ldi	r25, 0x00	; 0
    722a:	0e 94 94 10 	call	0x2128	; 0x2128 <EEPROMClass::write(int, unsigned char) [clone .isra.0]>
SET_SHORT_PRESS_FUNCTION():
    722e:	60 91 49 28 	lds	r22, 0x2849	; 0x802849 <actualRunMin>
    7232:	70 91 4a 28 	lds	r23, 0x284A	; 0x80284a <actualRunMin+0x1>
    7236:	80 91 4b 28 	lds	r24, 0x284B	; 0x80284b <actualRunMin+0x2>
    723a:	90 91 4c 28 	lds	r25, 0x284C	; 0x80284c <actualRunMin+0x3>
    723e:	2c e3       	ldi	r18, 0x3C	; 60
    7240:	30 e0       	ldi	r19, 0x00	; 0
    7242:	40 e0       	ldi	r20, 0x00	; 0
    7244:	50 e0       	ldi	r21, 0x00	; 0
    7246:	a4 d2       	rcall	.+1352   	; 0x7790 <__udivmodsi4>
    7248:	69 01       	movw	r12, r18
    724a:	20 93 47 28 	sts	0x2847, r18	; 0x802847 <actualRunHours>
    724e:	30 93 48 28 	sts	0x2848, r19	; 0x802848 <actualRunHours+0x1>
    7252:	6f ea       	ldi	r22, 0xAF	; 175
    7254:	78 e2       	ldi	r23, 0x28	; 40
    7256:	88 e9       	ldi	r24, 0x98	; 152
    7258:	90 e0       	ldi	r25, 0x00	; 0
    725a:	0e 94 15 10 	call	0x202a	; 0x202a <int& EEPROMClass::get<int>(int, int&) [clone .isra.4]>
    725e:	20 91 af 28 	lds	r18, 0x28AF	; 0x8028af <processLog>
    7262:	30 91 b0 28 	lds	r19, 0x28B0	; 0x8028b0 <processLog+0x1>
    7266:	2c 0d       	add	r18, r12
    7268:	3d 1d       	adc	r19, r13
    726a:	20 93 af 28 	sts	0x28AF, r18	; 0x8028af <processLog>
    726e:	30 93 b0 28 	sts	0x28B0, r19	; 0x8028b0 <processLog+0x1>
    7272:	2f 30       	cpi	r18, 0x0F	; 15
    7274:	37 42       	sbci	r19, 0x27	; 39
    7276:	68 f0       	brcs	.+26     	; 0x7292 <main+0x1d5a>
    7278:	80 91 ad 28 	lds	r24, 0x28AD	; 0x8028ad <processLogNumberOfTimes>
    727c:	90 91 ae 28 	lds	r25, 0x28AE	; 0x8028ae <processLogNumberOfTimes+0x1>
    7280:	01 96       	adiw	r24, 0x01	; 1
    7282:	80 93 ad 28 	sts	0x28AD, r24	; 0x8028ad <processLogNumberOfTimes>
    7286:	90 93 ae 28 	sts	0x28AE, r25	; 0x8028ae <processLogNumberOfTimes+0x1>
    728a:	10 92 af 28 	sts	0x28AF, r1	; 0x8028af <processLog>
    728e:	10 92 b0 28 	sts	0x28B0, r1	; 0x8028b0 <processLog+0x1>
    7292:	6f ea       	ldi	r22, 0xAF	; 175
    7294:	78 e2       	ldi	r23, 0x28	; 40
    7296:	88 e9       	ldi	r24, 0x98	; 152
    7298:	90 e0       	ldi	r25, 0x00	; 0
    729a:	0e 94 cd 10 	call	0x219a	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    729e:	6d ea       	ldi	r22, 0xAD	; 173
    72a0:	78 e2       	ldi	r23, 0x28	; 40
    72a2:	8a e9       	ldi	r24, 0x9A	; 154
    72a4:	90 e0       	ldi	r25, 0x00	; 0
    72a6:	0e 94 cd 10 	call	0x219a	; 0x219a <int const& EEPROMClass::put<int>(int, int const&) [clone .isra.9] [clone .lto_priv.101]>
    72aa:	10 92 47 28 	sts	0x2847, r1	; 0x802847 <actualRunHours>
    72ae:	10 92 48 28 	sts	0x2848, r1	; 0x802848 <actualRunHours+0x1>
    72b2:	10 92 49 28 	sts	0x2849, r1	; 0x802849 <actualRunMin>
    72b6:	10 92 4a 28 	sts	0x284A, r1	; 0x80284a <actualRunMin+0x1>
    72ba:	10 92 4b 28 	sts	0x284B, r1	; 0x80284b <actualRunMin+0x2>
    72be:	10 92 4c 28 	sts	0x284C, r1	; 0x80284c <actualRunMin+0x3>
stop():
    72c2:	10 92 07 2b 	sts	0x2B07, r1	; 0x802b07 <Alter_Disp>
    72c6:	10 92 12 2b 	sts	0x2B12, r1	; 0x802b12 <Alter_Disp+0xb>
    72ca:	10 92 13 2b 	sts	0x2B13, r1	; 0x802b13 <Alter_Disp+0xc>
    72ce:	10 92 14 2b 	sts	0x2B14, r1	; 0x802b14 <Alter_Disp+0xd>
    72d2:	10 92 15 2b 	sts	0x2B15, r1	; 0x802b15 <Alter_Disp+0xe>
    72d6:	10 92 16 2b 	sts	0x2B16, r1	; 0x802b16 <Alter_Disp+0xf>
    72da:	10 92 17 2b 	sts	0x2B17, r1	; 0x802b17 <Alter_Disp+0x10>
SET_SHORT_PRESS_FUNCTION():
    72de:	80 91 92 28 	lds	r24, 0x2892	; 0x802892 <Blinking_Freq>
    72e2:	83 30       	cpi	r24, 0x03	; 3
    72e4:	b8 f4       	brcc	.+46     	; 0x7314 <main+0x1ddc>
    72e6:	84 ef       	ldi	r24, 0xF4	; 244
    72e8:	91 e0       	ldi	r25, 0x01	; 1
    72ea:	0e 94 2a 0b 	call	0x1654	; 0x1654 <Tclass::BUZZ_INTERVAL(int) [clone .constprop.69]>
stop():
    72ee:	10 92 ec 2a 	sts	0x2AEC, r1	; 0x802aec <PID_EXE>
    72f2:	10 92 f7 2a 	sts	0x2AF7, r1	; 0x802af7 <PID_EXE+0xb>
    72f6:	10 92 f8 2a 	sts	0x2AF8, r1	; 0x802af8 <PID_EXE+0xc>
    72fa:	10 92 f9 2a 	sts	0x2AF9, r1	; 0x802af9 <PID_EXE+0xd>
    72fe:	10 92 fa 2a 	sts	0x2AFA, r1	; 0x802afa <PID_EXE+0xe>
    7302:	10 92 fb 2a 	sts	0x2AFB, r1	; 0x802afb <PID_EXE+0xf>
    7306:	10 92 fc 2a 	sts	0x2AFC, r1	; 0x802afc <PID_EXE+0x10>
DISP_UPDATE():
    730a:	8f ed       	ldi	r24, 0xDF	; 223
    730c:	9b e2       	ldi	r25, 0x2B	; 43
    730e:	0e 94 ac 0a 	call	0x1558	; 0x1558 <Ticker::update()>
    7312:	e5 cf       	rjmp	.-54     	; 0x72de <main+0x1da6>
SET_SHORT_PRESS_FUNCTION():
    7314:	10 92 20 29 	sts	0x2920, r1	; 0x802920 <ENTER_BUT>
    7318:	0c 94 3c 2e 	jmp	0x5c78	; 0x5c78 <main+0x740>
    731c:	a7 01       	movw	r20, r14
    731e:	96 01       	movw	r18, r12
    7320:	c5 01       	movw	r24, r10
    7322:	b4 01       	movw	r22, r8
    7324:	b7 d1       	rcall	.+878    	; 0x7694 <__gesf2>
    7326:	87 ff       	sbrs	r24, 7
    7328:	9f c8       	rjmp	.-3778   	; 0x6468 <main+0xf30>
    732a:	8b c8       	rjmp	.-3818   	; 0x6442 <main+0xf0a>

0000732c <__subsf3>:
__subsf3():
    732c:	50 58       	subi	r21, 0x80	; 128

0000732e <__addsf3>:
    732e:	bb 27       	eor	r27, r27
    7330:	aa 27       	eor	r26, r26
    7332:	0e d0       	rcall	.+28     	; 0x7350 <__addsf3x>
    7334:	75 c1       	rjmp	.+746    	; 0x7620 <__fp_round>
__addsf3():
    7336:	66 d1       	rcall	.+716    	; 0x7604 <__fp_pscA>
    7338:	30 f0       	brcs	.+12     	; 0x7346 <__addsf3+0x18>
    733a:	6b d1       	rcall	.+726    	; 0x7612 <__fp_pscB>
    733c:	20 f0       	brcs	.+8      	; 0x7346 <__addsf3+0x18>
    733e:	31 f4       	brne	.+12     	; 0x734c <__addsf3+0x1e>
    7340:	9f 3f       	cpi	r25, 0xFF	; 255
    7342:	11 f4       	brne	.+4      	; 0x7348 <__addsf3+0x1a>
    7344:	1e f4       	brtc	.+6      	; 0x734c <__addsf3+0x1e>
    7346:	5b c1       	rjmp	.+694    	; 0x75fe <__fp_nan>
    7348:	0e f4       	brtc	.+2      	; 0x734c <__addsf3+0x1e>
    734a:	e0 95       	com	r30
    734c:	e7 fb       	bst	r30, 7
    734e:	51 c1       	rjmp	.+674    	; 0x75f2 <__fp_inf>

00007350 <__addsf3x>:
__addsf3x():
    7350:	e9 2f       	mov	r30, r25
    7352:	77 d1       	rcall	.+750    	; 0x7642 <__fp_split3>
    7354:	80 f3       	brcs	.-32     	; 0x7336 <__addsf3+0x8>
    7356:	ba 17       	cp	r27, r26
    7358:	62 07       	cpc	r22, r18
    735a:	73 07       	cpc	r23, r19
    735c:	84 07       	cpc	r24, r20
    735e:	95 07       	cpc	r25, r21
    7360:	18 f0       	brcs	.+6      	; 0x7368 <__addsf3x+0x18>
    7362:	71 f4       	brne	.+28     	; 0x7380 <__addsf3x+0x30>
    7364:	9e f5       	brtc	.+102    	; 0x73cc <__addsf3x+0x7c>
    7366:	8f c1       	rjmp	.+798    	; 0x7686 <__fp_zero>
    7368:	0e f4       	brtc	.+2      	; 0x736c <__addsf3x+0x1c>
    736a:	e0 95       	com	r30
    736c:	0b 2e       	mov	r0, r27
    736e:	ba 2f       	mov	r27, r26
    7370:	a0 2d       	mov	r26, r0
    7372:	0b 01       	movw	r0, r22
    7374:	b9 01       	movw	r22, r18
    7376:	90 01       	movw	r18, r0
    7378:	0c 01       	movw	r0, r24
    737a:	ca 01       	movw	r24, r20
    737c:	a0 01       	movw	r20, r0
    737e:	11 24       	eor	r1, r1
    7380:	ff 27       	eor	r31, r31
    7382:	59 1b       	sub	r21, r25
    7384:	99 f0       	breq	.+38     	; 0x73ac <__addsf3x+0x5c>
    7386:	59 3f       	cpi	r21, 0xF9	; 249
    7388:	50 f4       	brcc	.+20     	; 0x739e <__addsf3x+0x4e>
    738a:	50 3e       	cpi	r21, 0xE0	; 224
    738c:	68 f1       	brcs	.+90     	; 0x73e8 <__addsf3x+0x98>
    738e:	1a 16       	cp	r1, r26
    7390:	f0 40       	sbci	r31, 0x00	; 0
    7392:	a2 2f       	mov	r26, r18
    7394:	23 2f       	mov	r18, r19
    7396:	34 2f       	mov	r19, r20
    7398:	44 27       	eor	r20, r20
    739a:	58 5f       	subi	r21, 0xF8	; 248
    739c:	f3 cf       	rjmp	.-26     	; 0x7384 <__addsf3x+0x34>
    739e:	46 95       	lsr	r20
    73a0:	37 95       	ror	r19
    73a2:	27 95       	ror	r18
    73a4:	a7 95       	ror	r26
    73a6:	f0 40       	sbci	r31, 0x00	; 0
    73a8:	53 95       	inc	r21
    73aa:	c9 f7       	brne	.-14     	; 0x739e <__addsf3x+0x4e>
    73ac:	7e f4       	brtc	.+30     	; 0x73cc <__addsf3x+0x7c>
    73ae:	1f 16       	cp	r1, r31
    73b0:	ba 0b       	sbc	r27, r26
    73b2:	62 0b       	sbc	r22, r18
    73b4:	73 0b       	sbc	r23, r19
    73b6:	84 0b       	sbc	r24, r20
    73b8:	ba f0       	brmi	.+46     	; 0x73e8 <__addsf3x+0x98>
    73ba:	91 50       	subi	r25, 0x01	; 1
    73bc:	a1 f0       	breq	.+40     	; 0x73e6 <__addsf3x+0x96>
    73be:	ff 0f       	add	r31, r31
    73c0:	bb 1f       	adc	r27, r27
    73c2:	66 1f       	adc	r22, r22
    73c4:	77 1f       	adc	r23, r23
    73c6:	88 1f       	adc	r24, r24
    73c8:	c2 f7       	brpl	.-16     	; 0x73ba <__addsf3x+0x6a>
    73ca:	0e c0       	rjmp	.+28     	; 0x73e8 <__addsf3x+0x98>
    73cc:	ba 0f       	add	r27, r26
    73ce:	62 1f       	adc	r22, r18
    73d0:	73 1f       	adc	r23, r19
    73d2:	84 1f       	adc	r24, r20
    73d4:	48 f4       	brcc	.+18     	; 0x73e8 <__addsf3x+0x98>
    73d6:	87 95       	ror	r24
    73d8:	77 95       	ror	r23
    73da:	67 95       	ror	r22
    73dc:	b7 95       	ror	r27
    73de:	f7 95       	ror	r31
    73e0:	9e 3f       	cpi	r25, 0xFE	; 254
    73e2:	08 f0       	brcs	.+2      	; 0x73e6 <__addsf3x+0x96>
    73e4:	b3 cf       	rjmp	.-154    	; 0x734c <__addsf3+0x1e>
    73e6:	93 95       	inc	r25
    73e8:	88 0f       	add	r24, r24
    73ea:	08 f0       	brcs	.+2      	; 0x73ee <__addsf3x+0x9e>
    73ec:	99 27       	eor	r25, r25
    73ee:	ee 0f       	add	r30, r30
    73f0:	97 95       	ror	r25
    73f2:	87 95       	ror	r24
    73f4:	08 95       	ret

000073f6 <__cmpsf2>:
    73f6:	d9 d0       	rcall	.+434    	; 0x75aa <__fp_cmp>
    73f8:	08 f4       	brcc	.+2      	; 0x73fc <__cmpsf2+0x6>
    73fa:	81 e0       	ldi	r24, 0x01	; 1
    73fc:	08 95       	ret

000073fe <__divsf3>:
    73fe:	0c d0       	rcall	.+24     	; 0x7418 <__divsf3x>
    7400:	0f c1       	rjmp	.+542    	; 0x7620 <__fp_round>
    7402:	07 d1       	rcall	.+526    	; 0x7612 <__fp_pscB>
    7404:	40 f0       	brcs	.+16     	; 0x7416 <__divsf3+0x18>
    7406:	fe d0       	rcall	.+508    	; 0x7604 <__fp_pscA>
    7408:	30 f0       	brcs	.+12     	; 0x7416 <__divsf3+0x18>
    740a:	21 f4       	brne	.+8      	; 0x7414 <__divsf3+0x16>
    740c:	5f 3f       	cpi	r21, 0xFF	; 255
    740e:	19 f0       	breq	.+6      	; 0x7416 <__divsf3+0x18>
    7410:	f0 c0       	rjmp	.+480    	; 0x75f2 <__fp_inf>
    7412:	51 11       	cpse	r21, r1
    7414:	39 c1       	rjmp	.+626    	; 0x7688 <__fp_szero>
    7416:	f3 c0       	rjmp	.+486    	; 0x75fe <__fp_nan>

00007418 <__divsf3x>:
    7418:	14 d1       	rcall	.+552    	; 0x7642 <__fp_split3>
    741a:	98 f3       	brcs	.-26     	; 0x7402 <__divsf3+0x4>

0000741c <__divsf3_pse>:
__divsf3_pse():
    741c:	99 23       	and	r25, r25
    741e:	c9 f3       	breq	.-14     	; 0x7412 <__divsf3+0x14>
    7420:	55 23       	and	r21, r21
    7422:	b1 f3       	breq	.-20     	; 0x7410 <__divsf3+0x12>
    7424:	95 1b       	sub	r25, r21
    7426:	55 0b       	sbc	r21, r21
    7428:	bb 27       	eor	r27, r27
    742a:	aa 27       	eor	r26, r26
    742c:	62 17       	cp	r22, r18
    742e:	73 07       	cpc	r23, r19
    7430:	84 07       	cpc	r24, r20
    7432:	38 f0       	brcs	.+14     	; 0x7442 <__divsf3_pse+0x26>
    7434:	9f 5f       	subi	r25, 0xFF	; 255
    7436:	5f 4f       	sbci	r21, 0xFF	; 255
    7438:	22 0f       	add	r18, r18
    743a:	33 1f       	adc	r19, r19
    743c:	44 1f       	adc	r20, r20
    743e:	aa 1f       	adc	r26, r26
    7440:	a9 f3       	breq	.-22     	; 0x742c <__divsf3_pse+0x10>
    7442:	33 d0       	rcall	.+102    	; 0x74aa <__divsf3_pse+0x8e>
    7444:	0e 2e       	mov	r0, r30
    7446:	3a f0       	brmi	.+14     	; 0x7456 <__divsf3_pse+0x3a>
    7448:	e0 e8       	ldi	r30, 0x80	; 128
    744a:	30 d0       	rcall	.+96     	; 0x74ac <__divsf3_pse+0x90>
    744c:	91 50       	subi	r25, 0x01	; 1
    744e:	50 40       	sbci	r21, 0x00	; 0
    7450:	e6 95       	lsr	r30
    7452:	00 1c       	adc	r0, r0
    7454:	ca f7       	brpl	.-14     	; 0x7448 <__divsf3_pse+0x2c>
    7456:	29 d0       	rcall	.+82     	; 0x74aa <__divsf3_pse+0x8e>
    7458:	fe 2f       	mov	r31, r30
    745a:	27 d0       	rcall	.+78     	; 0x74aa <__divsf3_pse+0x8e>
    745c:	66 0f       	add	r22, r22
    745e:	77 1f       	adc	r23, r23
    7460:	88 1f       	adc	r24, r24
    7462:	bb 1f       	adc	r27, r27
    7464:	26 17       	cp	r18, r22
    7466:	37 07       	cpc	r19, r23
    7468:	48 07       	cpc	r20, r24
    746a:	ab 07       	cpc	r26, r27
    746c:	b0 e8       	ldi	r27, 0x80	; 128
    746e:	09 f0       	breq	.+2      	; 0x7472 <__divsf3_pse+0x56>
    7470:	bb 0b       	sbc	r27, r27
    7472:	80 2d       	mov	r24, r0
    7474:	bf 01       	movw	r22, r30
    7476:	ff 27       	eor	r31, r31
    7478:	93 58       	subi	r25, 0x83	; 131
    747a:	5f 4f       	sbci	r21, 0xFF	; 255
    747c:	2a f0       	brmi	.+10     	; 0x7488 <__divsf3_pse+0x6c>
    747e:	9e 3f       	cpi	r25, 0xFE	; 254
    7480:	51 05       	cpc	r21, r1
    7482:	68 f0       	brcs	.+26     	; 0x749e <__divsf3_pse+0x82>
    7484:	b6 c0       	rjmp	.+364    	; 0x75f2 <__fp_inf>
    7486:	00 c1       	rjmp	.+512    	; 0x7688 <__fp_szero>
    7488:	5f 3f       	cpi	r21, 0xFF	; 255
    748a:	ec f3       	brlt	.-6      	; 0x7486 <__divsf3_pse+0x6a>
    748c:	98 3e       	cpi	r25, 0xE8	; 232
    748e:	dc f3       	brlt	.-10     	; 0x7486 <__divsf3_pse+0x6a>
    7490:	86 95       	lsr	r24
    7492:	77 95       	ror	r23
    7494:	67 95       	ror	r22
    7496:	b7 95       	ror	r27
    7498:	f7 95       	ror	r31
    749a:	9f 5f       	subi	r25, 0xFF	; 255
    749c:	c9 f7       	brne	.-14     	; 0x7490 <__divsf3_pse+0x74>
    749e:	88 0f       	add	r24, r24
    74a0:	91 1d       	adc	r25, r1
    74a2:	96 95       	lsr	r25
    74a4:	87 95       	ror	r24
    74a6:	97 f9       	bld	r25, 7
    74a8:	08 95       	ret
    74aa:	e1 e0       	ldi	r30, 0x01	; 1
    74ac:	66 0f       	add	r22, r22
    74ae:	77 1f       	adc	r23, r23
    74b0:	88 1f       	adc	r24, r24
    74b2:	bb 1f       	adc	r27, r27
    74b4:	62 17       	cp	r22, r18
    74b6:	73 07       	cpc	r23, r19
    74b8:	84 07       	cpc	r24, r20
    74ba:	ba 07       	cpc	r27, r26
    74bc:	20 f0       	brcs	.+8      	; 0x74c6 <__divsf3_pse+0xaa>
    74be:	62 1b       	sub	r22, r18
    74c0:	73 0b       	sbc	r23, r19
    74c2:	84 0b       	sbc	r24, r20
    74c4:	ba 0b       	sbc	r27, r26
    74c6:	ee 1f       	adc	r30, r30
    74c8:	88 f7       	brcc	.-30     	; 0x74ac <__divsf3_pse+0x90>
    74ca:	e0 95       	com	r30
    74cc:	08 95       	ret

000074ce <__fixsfsi>:
__fixsfsi():
    74ce:	04 d0       	rcall	.+8      	; 0x74d8 <__fixunssfsi>
    74d0:	68 94       	set
    74d2:	b1 11       	cpse	r27, r1
    74d4:	d9 c0       	rjmp	.+434    	; 0x7688 <__fp_szero>
    74d6:	08 95       	ret

000074d8 <__fixunssfsi>:
__fixunssfsi():
    74d8:	bc d0       	rcall	.+376    	; 0x7652 <__fp_splitA>
    74da:	88 f0       	brcs	.+34     	; 0x74fe <__fixunssfsi+0x26>
    74dc:	9f 57       	subi	r25, 0x7F	; 127
    74de:	90 f0       	brcs	.+36     	; 0x7504 <__fixunssfsi+0x2c>
    74e0:	b9 2f       	mov	r27, r25
    74e2:	99 27       	eor	r25, r25
    74e4:	b7 51       	subi	r27, 0x17	; 23
    74e6:	a0 f0       	brcs	.+40     	; 0x7510 <__fixunssfsi+0x38>
    74e8:	d1 f0       	breq	.+52     	; 0x751e <__fixunssfsi+0x46>
    74ea:	66 0f       	add	r22, r22
    74ec:	77 1f       	adc	r23, r23
    74ee:	88 1f       	adc	r24, r24
    74f0:	99 1f       	adc	r25, r25
    74f2:	1a f0       	brmi	.+6      	; 0x74fa <__fixunssfsi+0x22>
    74f4:	ba 95       	dec	r27
    74f6:	c9 f7       	brne	.-14     	; 0x74ea <__fixunssfsi+0x12>
    74f8:	12 c0       	rjmp	.+36     	; 0x751e <__fixunssfsi+0x46>
    74fa:	b1 30       	cpi	r27, 0x01	; 1
    74fc:	81 f0       	breq	.+32     	; 0x751e <__fixunssfsi+0x46>
    74fe:	c3 d0       	rcall	.+390    	; 0x7686 <__fp_zero>
    7500:	b1 e0       	ldi	r27, 0x01	; 1
    7502:	08 95       	ret
    7504:	c0 c0       	rjmp	.+384    	; 0x7686 <__fp_zero>
    7506:	67 2f       	mov	r22, r23
    7508:	78 2f       	mov	r23, r24
    750a:	88 27       	eor	r24, r24
    750c:	b8 5f       	subi	r27, 0xF8	; 248
    750e:	39 f0       	breq	.+14     	; 0x751e <__fixunssfsi+0x46>
    7510:	b9 3f       	cpi	r27, 0xF9	; 249
    7512:	cc f3       	brlt	.-14     	; 0x7506 <__fixunssfsi+0x2e>
    7514:	86 95       	lsr	r24
    7516:	77 95       	ror	r23
    7518:	67 95       	ror	r22
    751a:	b3 95       	inc	r27
    751c:	d9 f7       	brne	.-10     	; 0x7514 <__fixunssfsi+0x3c>
    751e:	3e f4       	brtc	.+14     	; 0x752e <__fixunssfsi+0x56>
    7520:	90 95       	com	r25
    7522:	80 95       	com	r24
    7524:	70 95       	com	r23
    7526:	61 95       	neg	r22
    7528:	7f 4f       	sbci	r23, 0xFF	; 255
    752a:	8f 4f       	sbci	r24, 0xFF	; 255
    752c:	9f 4f       	sbci	r25, 0xFF	; 255
    752e:	08 95       	ret

00007530 <__floatunsisf>:
__floatunsisf():
    7530:	e8 94       	clt
    7532:	09 c0       	rjmp	.+18     	; 0x7546 <__floatsisf+0x12>

00007534 <__floatsisf>:
    7534:	97 fb       	bst	r25, 7
    7536:	3e f4       	brtc	.+14     	; 0x7546 <__floatsisf+0x12>
    7538:	90 95       	com	r25
    753a:	80 95       	com	r24
    753c:	70 95       	com	r23
    753e:	61 95       	neg	r22
    7540:	7f 4f       	sbci	r23, 0xFF	; 255
    7542:	8f 4f       	sbci	r24, 0xFF	; 255
    7544:	9f 4f       	sbci	r25, 0xFF	; 255
    7546:	99 23       	and	r25, r25
    7548:	a9 f0       	breq	.+42     	; 0x7574 <__floatsisf+0x40>
    754a:	f9 2f       	mov	r31, r25
    754c:	96 e9       	ldi	r25, 0x96	; 150
    754e:	bb 27       	eor	r27, r27
    7550:	93 95       	inc	r25
    7552:	f6 95       	lsr	r31
    7554:	87 95       	ror	r24
    7556:	77 95       	ror	r23
    7558:	67 95       	ror	r22
    755a:	b7 95       	ror	r27
    755c:	f1 11       	cpse	r31, r1
    755e:	f8 cf       	rjmp	.-16     	; 0x7550 <__floatsisf+0x1c>
    7560:	fa f4       	brpl	.+62     	; 0x75a0 <__floatsisf+0x6c>
    7562:	bb 0f       	add	r27, r27
    7564:	11 f4       	brne	.+4      	; 0x756a <__floatsisf+0x36>
    7566:	60 ff       	sbrs	r22, 0
    7568:	1b c0       	rjmp	.+54     	; 0x75a0 <__floatsisf+0x6c>
    756a:	6f 5f       	subi	r22, 0xFF	; 255
    756c:	7f 4f       	sbci	r23, 0xFF	; 255
    756e:	8f 4f       	sbci	r24, 0xFF	; 255
    7570:	9f 4f       	sbci	r25, 0xFF	; 255
    7572:	16 c0       	rjmp	.+44     	; 0x75a0 <__floatsisf+0x6c>
    7574:	88 23       	and	r24, r24
    7576:	11 f0       	breq	.+4      	; 0x757c <__floatsisf+0x48>
    7578:	96 e9       	ldi	r25, 0x96	; 150
    757a:	11 c0       	rjmp	.+34     	; 0x759e <__floatsisf+0x6a>
    757c:	77 23       	and	r23, r23
    757e:	21 f0       	breq	.+8      	; 0x7588 <__floatsisf+0x54>
    7580:	9e e8       	ldi	r25, 0x8E	; 142
    7582:	87 2f       	mov	r24, r23
    7584:	76 2f       	mov	r23, r22
    7586:	05 c0       	rjmp	.+10     	; 0x7592 <__floatsisf+0x5e>
    7588:	66 23       	and	r22, r22
    758a:	71 f0       	breq	.+28     	; 0x75a8 <__floatsisf+0x74>
    758c:	96 e8       	ldi	r25, 0x86	; 134
    758e:	86 2f       	mov	r24, r22
    7590:	70 e0       	ldi	r23, 0x00	; 0
    7592:	60 e0       	ldi	r22, 0x00	; 0
    7594:	2a f0       	brmi	.+10     	; 0x75a0 <__floatsisf+0x6c>
    7596:	9a 95       	dec	r25
    7598:	66 0f       	add	r22, r22
    759a:	77 1f       	adc	r23, r23
    759c:	88 1f       	adc	r24, r24
    759e:	da f7       	brpl	.-10     	; 0x7596 <__floatsisf+0x62>
    75a0:	88 0f       	add	r24, r24
    75a2:	96 95       	lsr	r25
    75a4:	87 95       	ror	r24
    75a6:	97 f9       	bld	r25, 7
    75a8:	08 95       	ret

000075aa <__fp_cmp>:
__fp_cmp():
    75aa:	99 0f       	add	r25, r25
    75ac:	00 08       	sbc	r0, r0
    75ae:	55 0f       	add	r21, r21
    75b0:	aa 0b       	sbc	r26, r26
    75b2:	e0 e8       	ldi	r30, 0x80	; 128
    75b4:	fe ef       	ldi	r31, 0xFE	; 254
    75b6:	16 16       	cp	r1, r22
    75b8:	17 06       	cpc	r1, r23
    75ba:	e8 07       	cpc	r30, r24
    75bc:	f9 07       	cpc	r31, r25
    75be:	c0 f0       	brcs	.+48     	; 0x75f0 <__fp_cmp+0x46>
    75c0:	12 16       	cp	r1, r18
    75c2:	13 06       	cpc	r1, r19
    75c4:	e4 07       	cpc	r30, r20
    75c6:	f5 07       	cpc	r31, r21
    75c8:	98 f0       	brcs	.+38     	; 0x75f0 <__fp_cmp+0x46>
    75ca:	62 1b       	sub	r22, r18
    75cc:	73 0b       	sbc	r23, r19
    75ce:	84 0b       	sbc	r24, r20
    75d0:	95 0b       	sbc	r25, r21
    75d2:	39 f4       	brne	.+14     	; 0x75e2 <__fp_cmp+0x38>
    75d4:	0a 26       	eor	r0, r26
    75d6:	61 f0       	breq	.+24     	; 0x75f0 <__fp_cmp+0x46>
    75d8:	23 2b       	or	r18, r19
    75da:	24 2b       	or	r18, r20
    75dc:	25 2b       	or	r18, r21
    75de:	21 f4       	brne	.+8      	; 0x75e8 <__fp_cmp+0x3e>
    75e0:	08 95       	ret
    75e2:	0a 26       	eor	r0, r26
    75e4:	09 f4       	brne	.+2      	; 0x75e8 <__fp_cmp+0x3e>
    75e6:	a1 40       	sbci	r26, 0x01	; 1
    75e8:	a6 95       	lsr	r26
    75ea:	8f ef       	ldi	r24, 0xFF	; 255
    75ec:	81 1d       	adc	r24, r1
    75ee:	81 1d       	adc	r24, r1
    75f0:	08 95       	ret

000075f2 <__fp_inf>:
__fp_inf():
    75f2:	97 f9       	bld	r25, 7
    75f4:	9f 67       	ori	r25, 0x7F	; 127
    75f6:	80 e8       	ldi	r24, 0x80	; 128
    75f8:	70 e0       	ldi	r23, 0x00	; 0
    75fa:	60 e0       	ldi	r22, 0x00	; 0
    75fc:	08 95       	ret

000075fe <__fp_nan>:
__fp_nan():
    75fe:	9f ef       	ldi	r25, 0xFF	; 255
    7600:	80 ec       	ldi	r24, 0xC0	; 192
    7602:	08 95       	ret

00007604 <__fp_pscA>:
__fp_pscA():
    7604:	00 24       	eor	r0, r0
    7606:	0a 94       	dec	r0
    7608:	16 16       	cp	r1, r22
    760a:	17 06       	cpc	r1, r23
    760c:	18 06       	cpc	r1, r24
    760e:	09 06       	cpc	r0, r25
    7610:	08 95       	ret

00007612 <__fp_pscB>:
__fp_pscB():
    7612:	00 24       	eor	r0, r0
    7614:	0a 94       	dec	r0
    7616:	12 16       	cp	r1, r18
    7618:	13 06       	cpc	r1, r19
    761a:	14 06       	cpc	r1, r20
    761c:	05 06       	cpc	r0, r21
    761e:	08 95       	ret

00007620 <__fp_round>:
__fp_round():
    7620:	09 2e       	mov	r0, r25
    7622:	03 94       	inc	r0
    7624:	00 0c       	add	r0, r0
    7626:	11 f4       	brne	.+4      	; 0x762c <__fp_round+0xc>
    7628:	88 23       	and	r24, r24
    762a:	52 f0       	brmi	.+20     	; 0x7640 <__fp_round+0x20>
    762c:	bb 0f       	add	r27, r27
    762e:	40 f4       	brcc	.+16     	; 0x7640 <__fp_round+0x20>
    7630:	bf 2b       	or	r27, r31
    7632:	11 f4       	brne	.+4      	; 0x7638 <__fp_round+0x18>
    7634:	60 ff       	sbrs	r22, 0
    7636:	04 c0       	rjmp	.+8      	; 0x7640 <__fp_round+0x20>
    7638:	6f 5f       	subi	r22, 0xFF	; 255
    763a:	7f 4f       	sbci	r23, 0xFF	; 255
    763c:	8f 4f       	sbci	r24, 0xFF	; 255
    763e:	9f 4f       	sbci	r25, 0xFF	; 255
    7640:	08 95       	ret

00007642 <__fp_split3>:
__fp_split3():
    7642:	57 fd       	sbrc	r21, 7
    7644:	90 58       	subi	r25, 0x80	; 128
    7646:	44 0f       	add	r20, r20
    7648:	55 1f       	adc	r21, r21
    764a:	59 f0       	breq	.+22     	; 0x7662 <__fp_splitA+0x10>
    764c:	5f 3f       	cpi	r21, 0xFF	; 255
    764e:	71 f0       	breq	.+28     	; 0x766c <__fp_splitA+0x1a>
    7650:	47 95       	ror	r20

00007652 <__fp_splitA>:
    7652:	88 0f       	add	r24, r24
    7654:	97 fb       	bst	r25, 7
    7656:	99 1f       	adc	r25, r25
    7658:	61 f0       	breq	.+24     	; 0x7672 <__fp_splitA+0x20>
    765a:	9f 3f       	cpi	r25, 0xFF	; 255
    765c:	79 f0       	breq	.+30     	; 0x767c <__fp_splitA+0x2a>
    765e:	87 95       	ror	r24
    7660:	08 95       	ret
    7662:	12 16       	cp	r1, r18
    7664:	13 06       	cpc	r1, r19
    7666:	14 06       	cpc	r1, r20
    7668:	55 1f       	adc	r21, r21
    766a:	f2 cf       	rjmp	.-28     	; 0x7650 <__fp_split3+0xe>
    766c:	46 95       	lsr	r20
    766e:	f1 df       	rcall	.-30     	; 0x7652 <__fp_splitA>
    7670:	08 c0       	rjmp	.+16     	; 0x7682 <__fp_splitA+0x30>
    7672:	16 16       	cp	r1, r22
    7674:	17 06       	cpc	r1, r23
    7676:	18 06       	cpc	r1, r24
    7678:	99 1f       	adc	r25, r25
    767a:	f1 cf       	rjmp	.-30     	; 0x765e <__fp_splitA+0xc>
    767c:	86 95       	lsr	r24
    767e:	71 05       	cpc	r23, r1
    7680:	61 05       	cpc	r22, r1
    7682:	08 94       	sec
    7684:	08 95       	ret

00007686 <__fp_zero>:
__fp_zero():
    7686:	e8 94       	clt

00007688 <__fp_szero>:
    7688:	bb 27       	eor	r27, r27
    768a:	66 27       	eor	r22, r22
    768c:	77 27       	eor	r23, r23
    768e:	cb 01       	movw	r24, r22
    7690:	97 f9       	bld	r25, 7
    7692:	08 95       	ret

00007694 <__gesf2>:
__gesf2():
    7694:	8a df       	rcall	.-236    	; 0x75aa <__fp_cmp>
    7696:	08 f4       	brcc	.+2      	; 0x769a <__gesf2+0x6>
    7698:	8f ef       	ldi	r24, 0xFF	; 255
    769a:	08 95       	ret

0000769c <__mulsf3>:
__mulsf3():
    769c:	0b d0       	rcall	.+22     	; 0x76b4 <__mulsf3x>
    769e:	c0 cf       	rjmp	.-128    	; 0x7620 <__fp_round>
    76a0:	b1 df       	rcall	.-158    	; 0x7604 <__fp_pscA>
    76a2:	28 f0       	brcs	.+10     	; 0x76ae <__mulsf3+0x12>
    76a4:	b6 df       	rcall	.-148    	; 0x7612 <__fp_pscB>
    76a6:	18 f0       	brcs	.+6      	; 0x76ae <__mulsf3+0x12>
    76a8:	95 23       	and	r25, r21
    76aa:	09 f0       	breq	.+2      	; 0x76ae <__mulsf3+0x12>
    76ac:	a2 cf       	rjmp	.-188    	; 0x75f2 <__fp_inf>
    76ae:	a7 cf       	rjmp	.-178    	; 0x75fe <__fp_nan>
    76b0:	11 24       	eor	r1, r1
    76b2:	ea cf       	rjmp	.-44     	; 0x7688 <__fp_szero>

000076b4 <__mulsf3x>:
__mulsf3x():
    76b4:	c6 df       	rcall	.-116    	; 0x7642 <__fp_split3>
    76b6:	a0 f3       	brcs	.-24     	; 0x76a0 <__mulsf3+0x4>

000076b8 <__mulsf3_pse>:
    76b8:	95 9f       	mul	r25, r21
    76ba:	d1 f3       	breq	.-12     	; 0x76b0 <__mulsf3+0x14>
    76bc:	95 0f       	add	r25, r21
    76be:	50 e0       	ldi	r21, 0x00	; 0
    76c0:	55 1f       	adc	r21, r21
    76c2:	62 9f       	mul	r22, r18
    76c4:	f0 01       	movw	r30, r0
    76c6:	72 9f       	mul	r23, r18
    76c8:	bb 27       	eor	r27, r27
    76ca:	f0 0d       	add	r31, r0
    76cc:	b1 1d       	adc	r27, r1
    76ce:	63 9f       	mul	r22, r19
    76d0:	aa 27       	eor	r26, r26
    76d2:	f0 0d       	add	r31, r0
    76d4:	b1 1d       	adc	r27, r1
    76d6:	aa 1f       	adc	r26, r26
    76d8:	64 9f       	mul	r22, r20
    76da:	66 27       	eor	r22, r22
    76dc:	b0 0d       	add	r27, r0
    76de:	a1 1d       	adc	r26, r1
    76e0:	66 1f       	adc	r22, r22
    76e2:	82 9f       	mul	r24, r18
    76e4:	22 27       	eor	r18, r18
    76e6:	b0 0d       	add	r27, r0
    76e8:	a1 1d       	adc	r26, r1
    76ea:	62 1f       	adc	r22, r18
    76ec:	73 9f       	mul	r23, r19
    76ee:	b0 0d       	add	r27, r0
    76f0:	a1 1d       	adc	r26, r1
    76f2:	62 1f       	adc	r22, r18
    76f4:	83 9f       	mul	r24, r19
    76f6:	a0 0d       	add	r26, r0
    76f8:	61 1d       	adc	r22, r1
    76fa:	22 1f       	adc	r18, r18
    76fc:	74 9f       	mul	r23, r20
    76fe:	33 27       	eor	r19, r19
    7700:	a0 0d       	add	r26, r0
    7702:	61 1d       	adc	r22, r1
    7704:	23 1f       	adc	r18, r19
    7706:	84 9f       	mul	r24, r20
    7708:	60 0d       	add	r22, r0
    770a:	21 1d       	adc	r18, r1
    770c:	82 2f       	mov	r24, r18
    770e:	76 2f       	mov	r23, r22
    7710:	6a 2f       	mov	r22, r26
    7712:	11 24       	eor	r1, r1
    7714:	9f 57       	subi	r25, 0x7F	; 127
    7716:	50 40       	sbci	r21, 0x00	; 0
    7718:	8a f0       	brmi	.+34     	; 0x773c <__mulsf3_pse+0x84>
    771a:	e1 f0       	breq	.+56     	; 0x7754 <__mulsf3_pse+0x9c>
    771c:	88 23       	and	r24, r24
    771e:	4a f0       	brmi	.+18     	; 0x7732 <__mulsf3_pse+0x7a>
    7720:	ee 0f       	add	r30, r30
    7722:	ff 1f       	adc	r31, r31
    7724:	bb 1f       	adc	r27, r27
    7726:	66 1f       	adc	r22, r22
    7728:	77 1f       	adc	r23, r23
    772a:	88 1f       	adc	r24, r24
    772c:	91 50       	subi	r25, 0x01	; 1
    772e:	50 40       	sbci	r21, 0x00	; 0
    7730:	a9 f7       	brne	.-22     	; 0x771c <__mulsf3_pse+0x64>
    7732:	9e 3f       	cpi	r25, 0xFE	; 254
    7734:	51 05       	cpc	r21, r1
    7736:	70 f0       	brcs	.+28     	; 0x7754 <__mulsf3_pse+0x9c>
    7738:	5c cf       	rjmp	.-328    	; 0x75f2 <__fp_inf>
    773a:	a6 cf       	rjmp	.-180    	; 0x7688 <__fp_szero>
    773c:	5f 3f       	cpi	r21, 0xFF	; 255
    773e:	ec f3       	brlt	.-6      	; 0x773a <__mulsf3_pse+0x82>
    7740:	98 3e       	cpi	r25, 0xE8	; 232
    7742:	dc f3       	brlt	.-10     	; 0x773a <__mulsf3_pse+0x82>
    7744:	86 95       	lsr	r24
    7746:	77 95       	ror	r23
    7748:	67 95       	ror	r22
    774a:	b7 95       	ror	r27
    774c:	f7 95       	ror	r31
    774e:	e7 95       	ror	r30
    7750:	9f 5f       	subi	r25, 0xFF	; 255
    7752:	c1 f7       	brne	.-16     	; 0x7744 <__mulsf3_pse+0x8c>
    7754:	fe 2b       	or	r31, r30
    7756:	88 0f       	add	r24, r24
    7758:	91 1d       	adc	r25, r1
    775a:	96 95       	lsr	r25
    775c:	87 95       	ror	r24
    775e:	97 f9       	bld	r25, 7
    7760:	08 95       	ret

00007762 <__unordsf2>:
    7762:	23 df       	rcall	.-442    	; 0x75aa <__fp_cmp>
    7764:	88 0b       	sbc	r24, r24
    7766:	99 0b       	sbc	r25, r25
    7768:	08 95       	ret

0000776a <__divmodhi4>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    776a:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    776c:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    776e:	16 f4       	brtc	.+4      	; 0x7774 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    7770:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    7772:	06 d0       	rcall	.+12     	; 0x7780 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    7774:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    7776:	08 d0       	rcall	.+16     	; 0x7788 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    7778:	65 d0       	rcall	.+202    	; 0x7844 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    777a:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    777c:	05 d0       	rcall	.+10     	; 0x7788 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    777e:	3e f4       	brtc	.+14     	; 0x778e <__divmodhi4_exit>

00007780 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    7780:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    7782:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    7784:	9f 4f       	sbci	r25, 0xFF	; 255
__divmodhi4_neg1():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    7786:	08 95       	ret

00007788 <__divmodhi4_neg2>:
__divmodhi4_neg2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    7788:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    778a:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    778c:	7f 4f       	sbci	r23, 0xFF	; 255

0000778e <__divmodhi4_exit>:
__divmodhi4_exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    778e:	08 95       	ret

00007790 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    7790:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    7792:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    7794:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    7796:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    7798:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    779a:	0d c0       	rjmp	.+26     	; 0x77b6 <__udivmodsi4_ep>

0000779c <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    779c:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    779e:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    77a0:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    77a2:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    77a4:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    77a6:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    77a8:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    77aa:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    77ac:	20 f0       	brcs	.+8      	; 0x77b6 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    77ae:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    77b0:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    77b2:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    77b4:	f5 0b       	sbc	r31, r21

000077b6 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    77b6:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    77b8:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    77ba:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    77bc:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    77be:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    77c0:	69 f7       	brne	.-38     	; 0x779c <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    77c2:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    77c4:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    77c6:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    77c8:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    77ca:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    77cc:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    77ce:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    77d0:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    77d2:	08 95       	ret

000077d4 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    77d4:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    77d6:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    77d8:	16 f4       	brtc	.+4      	; 0x77de <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    77da:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    77dc:	0f d0       	rcall	.+30     	; 0x77fc <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    77de:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    77e0:	05 d0       	rcall	.+10     	; 0x77ec <__divmodsi4_neg2>
    77e2:	d6 df       	rcall	.-84     	; 0x7790 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    77e4:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    77e6:	02 d0       	rcall	.+4      	; 0x77ec <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    77e8:	46 f4       	brtc	.+16     	; 0x77fa <__divmodsi4_exit>
    77ea:	08 c0       	rjmp	.+16     	; 0x77fc <__negsi2>

000077ec <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    77ec:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    77ee:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    77f0:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    77f2:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    77f4:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    77f6:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    77f8:	5f 4f       	sbci	r21, 0xFF	; 255

000077fa <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    77fa:	08 95       	ret

000077fc <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    77fc:	90 95       	com	r25
    77fe:	80 95       	com	r24
    7800:	70 95       	com	r23
    7802:	61 95       	neg	r22
    7804:	7f 4f       	sbci	r23, 0xFF	; 255
    7806:	8f 4f       	sbci	r24, 0xFF	; 255
    7808:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    780a:	08 95       	ret

0000780c <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    780c:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    780e:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    7810:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    7812:	f4 91       	lpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    7814:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    7816:	09 94       	ijmp

00007818 <__usmulhisi3>:
__usmulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:545
    7818:	29 d0       	rcall	.+82     	; 0x786c <__umulhisi3>

0000781a <__usmulhisi3_tail>:
__usmulhisi3_tail():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:551
    781a:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:552
    781c:	08 95       	ret
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:553
    781e:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:554
    7820:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:555
    7822:	08 95       	ret

00007824 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    7824:	23 d0       	rcall	.+70     	; 0x786c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    7826:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    7828:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    782a:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    782c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    782e:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    7830:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    7832:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    7834:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    7836:	08 95       	ret

00007838 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    7838:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    783a:	f4 cf       	rjmp	.-24     	; 0x7824 <__muluhisi3>

0000783c <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    783c:	f3 df       	rcall	.-26     	; 0x7824 <__muluhisi3>
    783e:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    7840:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    7842:	08 95       	ret

00007844 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    7844:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    7846:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    7848:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    784a:	07 c0       	rjmp	.+14     	; 0x785a <__udivmodhi4_ep>

0000784c <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    784c:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    784e:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    7850:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    7852:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    7854:	10 f0       	brcs	.+4      	; 0x785a <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    7856:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    7858:	b7 0b       	sbc	r27, r23

0000785a <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    785a:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    785c:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    785e:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    7860:	a9 f7       	brne	.-22     	; 0x784c <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    7862:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    7864:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    7866:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    7868:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    786a:	08 95       	ret

0000786c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    786c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    786e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    7870:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    7872:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    7874:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    7876:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    7878:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    787a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    787c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    787e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    7880:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    7882:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    7884:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    7886:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    7888:	08 95       	ret

0000788a <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    788a:	f8 94       	cli

0000788c <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avrxmega3/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    788c:	ff cf       	rjmp	.-2      	; 0x788c <__stop_program>
